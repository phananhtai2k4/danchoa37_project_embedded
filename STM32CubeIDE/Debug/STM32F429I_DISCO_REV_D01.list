
STM32F429I_DISCO_REV_D01.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001ac  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00023754  080001b0  080001b0  000011b0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00001c9c  08023904  08023904  00024904  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 FontFlashSection 000001a6  080255a0  080255a0  000265a0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 FontSearchFlashSection 00000018  08025748  08025748  00026748  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 TextFlashSection 0000000e  08025760  08025760  00026760  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  6 .ARM.extab    00000002  0802576e  0802576e  0002676e  2**0
                  ALLOC
  7 .ARM          00000008  08025770  08025770  00026770  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .preinit_array 00000000  08025778  08025778  00027480  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .init_array   00000014  08025778  08025778  00026778  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 10 .fini_array   00000008  0802578c  0802578c  0002678c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 11 .data         00000274  20000000  08025794  00027000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 12 TouchGFX_ScratchbufferA 00000100  20000280  08025a08  00027280  2**5
                  CONTENTS, ALLOC, LOAD, DATA
 13 TouchGFX_ScratchbufferB 00000100  20000380  08025b08  00027380  2**5
                  CONTENTS, ALLOC, LOAD, DATA
 14 .bss          000147ec  20000480  08025c08  00027480  2**2
                  ALLOC
 15 ._user_heap_stack 00001404  20014c6c  08025c08  00027c6c  2**0
                  ALLOC
 16 .ARM.attributes 00000030  00000000  00000000  00027480  2**0
                  CONTENTS, READONLY
 17 TouchGFX_Framebuffer 00070800  d0000000  d0000000  00028000  2**2
                  ALLOC
 18 .debug_line   000517db  00000000  00000000  000274b0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_line_str 0000008c  00000000  00000000  00078c8b  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_info   000afca4  00000000  00000000  00078d17  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_abbrev 0001414d  00000000  00000000  001289bb  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_aranges 000032f0  00000000  00000000  0013cb08  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 23 .debug_str    00115091  00000000  00000000  0013fdf8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 24 .debug_rnglists 0000334d  00000000  00000000  00254e89  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 25 .debug_loclists 0001cbde  00000000  00000000  002581d6  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 26 .debug_macro  0003364d  00000000  00000000  00274db4  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 27 .comment      000000c2  00000000  00000000  002a8401  2**0
                  CONTENTS, READONLY
 28 .debug_frame  00009368  00000000  00000000  002a84c4  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001b0 <__do_global_dtors_aux>:
 80001b0:	b510      	push	{r4, lr}
 80001b2:	4c05      	ldr	r4, [pc, #20]	@ (80001c8 <__do_global_dtors_aux+0x18>)
 80001b4:	7823      	ldrb	r3, [r4, #0]
 80001b6:	b933      	cbnz	r3, 80001c6 <__do_global_dtors_aux+0x16>
 80001b8:	4b04      	ldr	r3, [pc, #16]	@ (80001cc <__do_global_dtors_aux+0x1c>)
 80001ba:	b113      	cbz	r3, 80001c2 <__do_global_dtors_aux+0x12>
 80001bc:	4804      	ldr	r0, [pc, #16]	@ (80001d0 <__do_global_dtors_aux+0x20>)
 80001be:	f3af 8000 	nop.w
 80001c2:	2301      	movs	r3, #1
 80001c4:	7023      	strb	r3, [r4, #0]
 80001c6:	bd10      	pop	{r4, pc}
 80001c8:	20000480 	.word	0x20000480
 80001cc:	00000000 	.word	0x00000000
 80001d0:	080238ec 	.word	0x080238ec

080001d4 <frame_dummy>:
 80001d4:	b508      	push	{r3, lr}
 80001d6:	4b03      	ldr	r3, [pc, #12]	@ (80001e4 <frame_dummy+0x10>)
 80001d8:	b11b      	cbz	r3, 80001e2 <frame_dummy+0xe>
 80001da:	4903      	ldr	r1, [pc, #12]	@ (80001e8 <frame_dummy+0x14>)
 80001dc:	4803      	ldr	r0, [pc, #12]	@ (80001ec <frame_dummy+0x18>)
 80001de:	f3af 8000 	nop.w
 80001e2:	bd08      	pop	{r3, pc}
 80001e4:	00000000 	.word	0x00000000
 80001e8:	20000484 	.word	0x20000484
 80001ec:	080238ec 	.word	0x080238ec

080001f0 <strlen>:
 80001f0:	4603      	mov	r3, r0
 80001f2:	f813 2b01 	ldrb.w	r2, [r3], #1
 80001f6:	2a00      	cmp	r2, #0
 80001f8:	d1fb      	bne.n	80001f2 <strlen+0x2>
 80001fa:	1a18      	subs	r0, r3, r0
 80001fc:	3801      	subs	r0, #1
 80001fe:	4770      	bx	lr

08000200 <memchr>:
 8000200:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 8000204:	2a10      	cmp	r2, #16
 8000206:	db2b      	blt.n	8000260 <memchr+0x60>
 8000208:	f010 0f07 	tst.w	r0, #7
 800020c:	d008      	beq.n	8000220 <memchr+0x20>
 800020e:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000212:	3a01      	subs	r2, #1
 8000214:	428b      	cmp	r3, r1
 8000216:	d02d      	beq.n	8000274 <memchr+0x74>
 8000218:	f010 0f07 	tst.w	r0, #7
 800021c:	b342      	cbz	r2, 8000270 <memchr+0x70>
 800021e:	d1f6      	bne.n	800020e <memchr+0xe>
 8000220:	b4f0      	push	{r4, r5, r6, r7}
 8000222:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000226:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800022a:	f022 0407 	bic.w	r4, r2, #7
 800022e:	f07f 0700 	mvns.w	r7, #0
 8000232:	2300      	movs	r3, #0
 8000234:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000238:	3c08      	subs	r4, #8
 800023a:	ea85 0501 	eor.w	r5, r5, r1
 800023e:	ea86 0601 	eor.w	r6, r6, r1
 8000242:	fa85 f547 	uadd8	r5, r5, r7
 8000246:	faa3 f587 	sel	r5, r3, r7
 800024a:	fa86 f647 	uadd8	r6, r6, r7
 800024e:	faa5 f687 	sel	r6, r5, r7
 8000252:	b98e      	cbnz	r6, 8000278 <memchr+0x78>
 8000254:	d1ee      	bne.n	8000234 <memchr+0x34>
 8000256:	bcf0      	pop	{r4, r5, r6, r7}
 8000258:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 800025c:	f002 0207 	and.w	r2, r2, #7
 8000260:	b132      	cbz	r2, 8000270 <memchr+0x70>
 8000262:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000266:	3a01      	subs	r2, #1
 8000268:	ea83 0301 	eor.w	r3, r3, r1
 800026c:	b113      	cbz	r3, 8000274 <memchr+0x74>
 800026e:	d1f8      	bne.n	8000262 <memchr+0x62>
 8000270:	2000      	movs	r0, #0
 8000272:	4770      	bx	lr
 8000274:	3801      	subs	r0, #1
 8000276:	4770      	bx	lr
 8000278:	2d00      	cmp	r5, #0
 800027a:	bf06      	itte	eq
 800027c:	4635      	moveq	r5, r6
 800027e:	3803      	subeq	r0, #3
 8000280:	3807      	subne	r0, #7
 8000282:	f015 0f01 	tst.w	r5, #1
 8000286:	d107      	bne.n	8000298 <memchr+0x98>
 8000288:	3001      	adds	r0, #1
 800028a:	f415 7f80 	tst.w	r5, #256	@ 0x100
 800028e:	bf02      	ittt	eq
 8000290:	3001      	addeq	r0, #1
 8000292:	f415 3fc0 	tsteq.w	r5, #98304	@ 0x18000
 8000296:	3001      	addeq	r0, #1
 8000298:	bcf0      	pop	{r4, r5, r6, r7}
 800029a:	3801      	subs	r0, #1
 800029c:	4770      	bx	lr
 800029e:	bf00      	nop

080002a0 <__aeabi_ldivmod>:
 80002a0:	b97b      	cbnz	r3, 80002c2 <__aeabi_ldivmod+0x22>
 80002a2:	b972      	cbnz	r2, 80002c2 <__aeabi_ldivmod+0x22>
 80002a4:	2900      	cmp	r1, #0
 80002a6:	bfbe      	ittt	lt
 80002a8:	2000      	movlt	r0, #0
 80002aa:	f04f 4100 	movlt.w	r1, #2147483648	@ 0x80000000
 80002ae:	e006      	blt.n	80002be <__aeabi_ldivmod+0x1e>
 80002b0:	bf08      	it	eq
 80002b2:	2800      	cmpeq	r0, #0
 80002b4:	bf1c      	itt	ne
 80002b6:	f06f 4100 	mvnne.w	r1, #2147483648	@ 0x80000000
 80002ba:	f04f 30ff 	movne.w	r0, #4294967295
 80002be:	f000 b9d3 	b.w	8000668 <__aeabi_idiv0>
 80002c2:	f1ad 0c08 	sub.w	ip, sp, #8
 80002c6:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 80002ca:	2900      	cmp	r1, #0
 80002cc:	db09      	blt.n	80002e2 <__aeabi_ldivmod+0x42>
 80002ce:	2b00      	cmp	r3, #0
 80002d0:	db1a      	blt.n	8000308 <__aeabi_ldivmod+0x68>
 80002d2:	f000 f84d 	bl	8000370 <__udivmoddi4>
 80002d6:	f8dd e004 	ldr.w	lr, [sp, #4]
 80002da:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 80002de:	b004      	add	sp, #16
 80002e0:	4770      	bx	lr
 80002e2:	4240      	negs	r0, r0
 80002e4:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80002e8:	2b00      	cmp	r3, #0
 80002ea:	db1b      	blt.n	8000324 <__aeabi_ldivmod+0x84>
 80002ec:	f000 f840 	bl	8000370 <__udivmoddi4>
 80002f0:	f8dd e004 	ldr.w	lr, [sp, #4]
 80002f4:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 80002f8:	b004      	add	sp, #16
 80002fa:	4240      	negs	r0, r0
 80002fc:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8000300:	4252      	negs	r2, r2
 8000302:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8000306:	4770      	bx	lr
 8000308:	4252      	negs	r2, r2
 800030a:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 800030e:	f000 f82f 	bl	8000370 <__udivmoddi4>
 8000312:	f8dd e004 	ldr.w	lr, [sp, #4]
 8000316:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 800031a:	b004      	add	sp, #16
 800031c:	4240      	negs	r0, r0
 800031e:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8000322:	4770      	bx	lr
 8000324:	4252      	negs	r2, r2
 8000326:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 800032a:	f000 f821 	bl	8000370 <__udivmoddi4>
 800032e:	f8dd e004 	ldr.w	lr, [sp, #4]
 8000332:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8000336:	b004      	add	sp, #16
 8000338:	4252      	negs	r2, r2
 800033a:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 800033e:	4770      	bx	lr

08000340 <__aeabi_uldivmod>:
 8000340:	b953      	cbnz	r3, 8000358 <__aeabi_uldivmod+0x18>
 8000342:	b94a      	cbnz	r2, 8000358 <__aeabi_uldivmod+0x18>
 8000344:	2900      	cmp	r1, #0
 8000346:	bf08      	it	eq
 8000348:	2800      	cmpeq	r0, #0
 800034a:	bf1c      	itt	ne
 800034c:	f04f 31ff 	movne.w	r1, #4294967295
 8000350:	f04f 30ff 	movne.w	r0, #4294967295
 8000354:	f000 b988 	b.w	8000668 <__aeabi_idiv0>
 8000358:	f1ad 0c08 	sub.w	ip, sp, #8
 800035c:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 8000360:	f000 f806 	bl	8000370 <__udivmoddi4>
 8000364:	f8dd e004 	ldr.w	lr, [sp, #4]
 8000368:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 800036c:	b004      	add	sp, #16
 800036e:	4770      	bx	lr

08000370 <__udivmoddi4>:
 8000370:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000374:	9d08      	ldr	r5, [sp, #32]
 8000376:	468e      	mov	lr, r1
 8000378:	4604      	mov	r4, r0
 800037a:	4688      	mov	r8, r1
 800037c:	2b00      	cmp	r3, #0
 800037e:	d14a      	bne.n	8000416 <__udivmoddi4+0xa6>
 8000380:	428a      	cmp	r2, r1
 8000382:	4617      	mov	r7, r2
 8000384:	d962      	bls.n	800044c <__udivmoddi4+0xdc>
 8000386:	fab2 f682 	clz	r6, r2
 800038a:	b14e      	cbz	r6, 80003a0 <__udivmoddi4+0x30>
 800038c:	f1c6 0320 	rsb	r3, r6, #32
 8000390:	fa01 f806 	lsl.w	r8, r1, r6
 8000394:	fa20 f303 	lsr.w	r3, r0, r3
 8000398:	40b7      	lsls	r7, r6
 800039a:	ea43 0808 	orr.w	r8, r3, r8
 800039e:	40b4      	lsls	r4, r6
 80003a0:	ea4f 4e17 	mov.w	lr, r7, lsr #16
 80003a4:	fa1f fc87 	uxth.w	ip, r7
 80003a8:	fbb8 f1fe 	udiv	r1, r8, lr
 80003ac:	0c23      	lsrs	r3, r4, #16
 80003ae:	fb0e 8811 	mls	r8, lr, r1, r8
 80003b2:	ea43 4308 	orr.w	r3, r3, r8, lsl #16
 80003b6:	fb01 f20c 	mul.w	r2, r1, ip
 80003ba:	429a      	cmp	r2, r3
 80003bc:	d909      	bls.n	80003d2 <__udivmoddi4+0x62>
 80003be:	18fb      	adds	r3, r7, r3
 80003c0:	f101 30ff 	add.w	r0, r1, #4294967295
 80003c4:	f080 80ea 	bcs.w	800059c <__udivmoddi4+0x22c>
 80003c8:	429a      	cmp	r2, r3
 80003ca:	f240 80e7 	bls.w	800059c <__udivmoddi4+0x22c>
 80003ce:	3902      	subs	r1, #2
 80003d0:	443b      	add	r3, r7
 80003d2:	1a9a      	subs	r2, r3, r2
 80003d4:	b2a3      	uxth	r3, r4
 80003d6:	fbb2 f0fe 	udiv	r0, r2, lr
 80003da:	fb0e 2210 	mls	r2, lr, r0, r2
 80003de:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 80003e2:	fb00 fc0c 	mul.w	ip, r0, ip
 80003e6:	459c      	cmp	ip, r3
 80003e8:	d909      	bls.n	80003fe <__udivmoddi4+0x8e>
 80003ea:	18fb      	adds	r3, r7, r3
 80003ec:	f100 32ff 	add.w	r2, r0, #4294967295
 80003f0:	f080 80d6 	bcs.w	80005a0 <__udivmoddi4+0x230>
 80003f4:	459c      	cmp	ip, r3
 80003f6:	f240 80d3 	bls.w	80005a0 <__udivmoddi4+0x230>
 80003fa:	443b      	add	r3, r7
 80003fc:	3802      	subs	r0, #2
 80003fe:	ea40 4001 	orr.w	r0, r0, r1, lsl #16
 8000402:	eba3 030c 	sub.w	r3, r3, ip
 8000406:	2100      	movs	r1, #0
 8000408:	b11d      	cbz	r5, 8000412 <__udivmoddi4+0xa2>
 800040a:	40f3      	lsrs	r3, r6
 800040c:	2200      	movs	r2, #0
 800040e:	e9c5 3200 	strd	r3, r2, [r5]
 8000412:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000416:	428b      	cmp	r3, r1
 8000418:	d905      	bls.n	8000426 <__udivmoddi4+0xb6>
 800041a:	b10d      	cbz	r5, 8000420 <__udivmoddi4+0xb0>
 800041c:	e9c5 0100 	strd	r0, r1, [r5]
 8000420:	2100      	movs	r1, #0
 8000422:	4608      	mov	r0, r1
 8000424:	e7f5      	b.n	8000412 <__udivmoddi4+0xa2>
 8000426:	fab3 f183 	clz	r1, r3
 800042a:	2900      	cmp	r1, #0
 800042c:	d146      	bne.n	80004bc <__udivmoddi4+0x14c>
 800042e:	4573      	cmp	r3, lr
 8000430:	d302      	bcc.n	8000438 <__udivmoddi4+0xc8>
 8000432:	4282      	cmp	r2, r0
 8000434:	f200 8105 	bhi.w	8000642 <__udivmoddi4+0x2d2>
 8000438:	1a84      	subs	r4, r0, r2
 800043a:	eb6e 0203 	sbc.w	r2, lr, r3
 800043e:	2001      	movs	r0, #1
 8000440:	4690      	mov	r8, r2
 8000442:	2d00      	cmp	r5, #0
 8000444:	d0e5      	beq.n	8000412 <__udivmoddi4+0xa2>
 8000446:	e9c5 4800 	strd	r4, r8, [r5]
 800044a:	e7e2      	b.n	8000412 <__udivmoddi4+0xa2>
 800044c:	2a00      	cmp	r2, #0
 800044e:	f000 8090 	beq.w	8000572 <__udivmoddi4+0x202>
 8000452:	fab2 f682 	clz	r6, r2
 8000456:	2e00      	cmp	r6, #0
 8000458:	f040 80a4 	bne.w	80005a4 <__udivmoddi4+0x234>
 800045c:	1a8a      	subs	r2, r1, r2
 800045e:	0c03      	lsrs	r3, r0, #16
 8000460:	ea4f 4e17 	mov.w	lr, r7, lsr #16
 8000464:	b280      	uxth	r0, r0
 8000466:	b2bc      	uxth	r4, r7
 8000468:	2101      	movs	r1, #1
 800046a:	fbb2 fcfe 	udiv	ip, r2, lr
 800046e:	fb0e 221c 	mls	r2, lr, ip, r2
 8000472:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8000476:	fb04 f20c 	mul.w	r2, r4, ip
 800047a:	429a      	cmp	r2, r3
 800047c:	d907      	bls.n	800048e <__udivmoddi4+0x11e>
 800047e:	18fb      	adds	r3, r7, r3
 8000480:	f10c 38ff 	add.w	r8, ip, #4294967295
 8000484:	d202      	bcs.n	800048c <__udivmoddi4+0x11c>
 8000486:	429a      	cmp	r2, r3
 8000488:	f200 80e0 	bhi.w	800064c <__udivmoddi4+0x2dc>
 800048c:	46c4      	mov	ip, r8
 800048e:	1a9b      	subs	r3, r3, r2
 8000490:	fbb3 f2fe 	udiv	r2, r3, lr
 8000494:	fb0e 3312 	mls	r3, lr, r2, r3
 8000498:	ea40 4303 	orr.w	r3, r0, r3, lsl #16
 800049c:	fb02 f404 	mul.w	r4, r2, r4
 80004a0:	429c      	cmp	r4, r3
 80004a2:	d907      	bls.n	80004b4 <__udivmoddi4+0x144>
 80004a4:	18fb      	adds	r3, r7, r3
 80004a6:	f102 30ff 	add.w	r0, r2, #4294967295
 80004aa:	d202      	bcs.n	80004b2 <__udivmoddi4+0x142>
 80004ac:	429c      	cmp	r4, r3
 80004ae:	f200 80ca 	bhi.w	8000646 <__udivmoddi4+0x2d6>
 80004b2:	4602      	mov	r2, r0
 80004b4:	1b1b      	subs	r3, r3, r4
 80004b6:	ea42 400c 	orr.w	r0, r2, ip, lsl #16
 80004ba:	e7a5      	b.n	8000408 <__udivmoddi4+0x98>
 80004bc:	f1c1 0620 	rsb	r6, r1, #32
 80004c0:	408b      	lsls	r3, r1
 80004c2:	fa22 f706 	lsr.w	r7, r2, r6
 80004c6:	431f      	orrs	r7, r3
 80004c8:	fa0e f401 	lsl.w	r4, lr, r1
 80004cc:	fa20 f306 	lsr.w	r3, r0, r6
 80004d0:	fa2e fe06 	lsr.w	lr, lr, r6
 80004d4:	ea4f 4917 	mov.w	r9, r7, lsr #16
 80004d8:	4323      	orrs	r3, r4
 80004da:	fa00 f801 	lsl.w	r8, r0, r1
 80004de:	fa1f fc87 	uxth.w	ip, r7
 80004e2:	fbbe f0f9 	udiv	r0, lr, r9
 80004e6:	0c1c      	lsrs	r4, r3, #16
 80004e8:	fb09 ee10 	mls	lr, r9, r0, lr
 80004ec:	ea44 440e 	orr.w	r4, r4, lr, lsl #16
 80004f0:	fb00 fe0c 	mul.w	lr, r0, ip
 80004f4:	45a6      	cmp	lr, r4
 80004f6:	fa02 f201 	lsl.w	r2, r2, r1
 80004fa:	d909      	bls.n	8000510 <__udivmoddi4+0x1a0>
 80004fc:	193c      	adds	r4, r7, r4
 80004fe:	f100 3aff 	add.w	sl, r0, #4294967295
 8000502:	f080 809c 	bcs.w	800063e <__udivmoddi4+0x2ce>
 8000506:	45a6      	cmp	lr, r4
 8000508:	f240 8099 	bls.w	800063e <__udivmoddi4+0x2ce>
 800050c:	3802      	subs	r0, #2
 800050e:	443c      	add	r4, r7
 8000510:	eba4 040e 	sub.w	r4, r4, lr
 8000514:	fa1f fe83 	uxth.w	lr, r3
 8000518:	fbb4 f3f9 	udiv	r3, r4, r9
 800051c:	fb09 4413 	mls	r4, r9, r3, r4
 8000520:	ea4e 4404 	orr.w	r4, lr, r4, lsl #16
 8000524:	fb03 fc0c 	mul.w	ip, r3, ip
 8000528:	45a4      	cmp	ip, r4
 800052a:	d908      	bls.n	800053e <__udivmoddi4+0x1ce>
 800052c:	193c      	adds	r4, r7, r4
 800052e:	f103 3eff 	add.w	lr, r3, #4294967295
 8000532:	f080 8082 	bcs.w	800063a <__udivmoddi4+0x2ca>
 8000536:	45a4      	cmp	ip, r4
 8000538:	d97f      	bls.n	800063a <__udivmoddi4+0x2ca>
 800053a:	3b02      	subs	r3, #2
 800053c:	443c      	add	r4, r7
 800053e:	ea43 4000 	orr.w	r0, r3, r0, lsl #16
 8000542:	eba4 040c 	sub.w	r4, r4, ip
 8000546:	fba0 ec02 	umull	lr, ip, r0, r2
 800054a:	4564      	cmp	r4, ip
 800054c:	4673      	mov	r3, lr
 800054e:	46e1      	mov	r9, ip
 8000550:	d362      	bcc.n	8000618 <__udivmoddi4+0x2a8>
 8000552:	d05f      	beq.n	8000614 <__udivmoddi4+0x2a4>
 8000554:	b15d      	cbz	r5, 800056e <__udivmoddi4+0x1fe>
 8000556:	ebb8 0203 	subs.w	r2, r8, r3
 800055a:	eb64 0409 	sbc.w	r4, r4, r9
 800055e:	fa04 f606 	lsl.w	r6, r4, r6
 8000562:	fa22 f301 	lsr.w	r3, r2, r1
 8000566:	431e      	orrs	r6, r3
 8000568:	40cc      	lsrs	r4, r1
 800056a:	e9c5 6400 	strd	r6, r4, [r5]
 800056e:	2100      	movs	r1, #0
 8000570:	e74f      	b.n	8000412 <__udivmoddi4+0xa2>
 8000572:	fbb1 fcf2 	udiv	ip, r1, r2
 8000576:	0c01      	lsrs	r1, r0, #16
 8000578:	ea41 410e 	orr.w	r1, r1, lr, lsl #16
 800057c:	b280      	uxth	r0, r0
 800057e:	ea40 4201 	orr.w	r2, r0, r1, lsl #16
 8000582:	463b      	mov	r3, r7
 8000584:	4638      	mov	r0, r7
 8000586:	463c      	mov	r4, r7
 8000588:	46b8      	mov	r8, r7
 800058a:	46be      	mov	lr, r7
 800058c:	2620      	movs	r6, #32
 800058e:	fbb1 f1f7 	udiv	r1, r1, r7
 8000592:	eba2 0208 	sub.w	r2, r2, r8
 8000596:	ea41 410c 	orr.w	r1, r1, ip, lsl #16
 800059a:	e766      	b.n	800046a <__udivmoddi4+0xfa>
 800059c:	4601      	mov	r1, r0
 800059e:	e718      	b.n	80003d2 <__udivmoddi4+0x62>
 80005a0:	4610      	mov	r0, r2
 80005a2:	e72c      	b.n	80003fe <__udivmoddi4+0x8e>
 80005a4:	f1c6 0220 	rsb	r2, r6, #32
 80005a8:	fa2e f302 	lsr.w	r3, lr, r2
 80005ac:	40b7      	lsls	r7, r6
 80005ae:	40b1      	lsls	r1, r6
 80005b0:	fa20 f202 	lsr.w	r2, r0, r2
 80005b4:	ea4f 4e17 	mov.w	lr, r7, lsr #16
 80005b8:	430a      	orrs	r2, r1
 80005ba:	fbb3 f8fe 	udiv	r8, r3, lr
 80005be:	b2bc      	uxth	r4, r7
 80005c0:	fb0e 3318 	mls	r3, lr, r8, r3
 80005c4:	0c11      	lsrs	r1, r2, #16
 80005c6:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
 80005ca:	fb08 f904 	mul.w	r9, r8, r4
 80005ce:	40b0      	lsls	r0, r6
 80005d0:	4589      	cmp	r9, r1
 80005d2:	ea4f 4310 	mov.w	r3, r0, lsr #16
 80005d6:	b280      	uxth	r0, r0
 80005d8:	d93e      	bls.n	8000658 <__udivmoddi4+0x2e8>
 80005da:	1879      	adds	r1, r7, r1
 80005dc:	f108 3cff 	add.w	ip, r8, #4294967295
 80005e0:	d201      	bcs.n	80005e6 <__udivmoddi4+0x276>
 80005e2:	4589      	cmp	r9, r1
 80005e4:	d81f      	bhi.n	8000626 <__udivmoddi4+0x2b6>
 80005e6:	eba1 0109 	sub.w	r1, r1, r9
 80005ea:	fbb1 f9fe 	udiv	r9, r1, lr
 80005ee:	fb09 f804 	mul.w	r8, r9, r4
 80005f2:	fb0e 1119 	mls	r1, lr, r9, r1
 80005f6:	b292      	uxth	r2, r2
 80005f8:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 80005fc:	4542      	cmp	r2, r8
 80005fe:	d229      	bcs.n	8000654 <__udivmoddi4+0x2e4>
 8000600:	18ba      	adds	r2, r7, r2
 8000602:	f109 31ff 	add.w	r1, r9, #4294967295
 8000606:	d2c4      	bcs.n	8000592 <__udivmoddi4+0x222>
 8000608:	4542      	cmp	r2, r8
 800060a:	d2c2      	bcs.n	8000592 <__udivmoddi4+0x222>
 800060c:	f1a9 0102 	sub.w	r1, r9, #2
 8000610:	443a      	add	r2, r7
 8000612:	e7be      	b.n	8000592 <__udivmoddi4+0x222>
 8000614:	45f0      	cmp	r8, lr
 8000616:	d29d      	bcs.n	8000554 <__udivmoddi4+0x1e4>
 8000618:	ebbe 0302 	subs.w	r3, lr, r2
 800061c:	eb6c 0c07 	sbc.w	ip, ip, r7
 8000620:	3801      	subs	r0, #1
 8000622:	46e1      	mov	r9, ip
 8000624:	e796      	b.n	8000554 <__udivmoddi4+0x1e4>
 8000626:	eba7 0909 	sub.w	r9, r7, r9
 800062a:	4449      	add	r1, r9
 800062c:	f1a8 0c02 	sub.w	ip, r8, #2
 8000630:	fbb1 f9fe 	udiv	r9, r1, lr
 8000634:	fb09 f804 	mul.w	r8, r9, r4
 8000638:	e7db      	b.n	80005f2 <__udivmoddi4+0x282>
 800063a:	4673      	mov	r3, lr
 800063c:	e77f      	b.n	800053e <__udivmoddi4+0x1ce>
 800063e:	4650      	mov	r0, sl
 8000640:	e766      	b.n	8000510 <__udivmoddi4+0x1a0>
 8000642:	4608      	mov	r0, r1
 8000644:	e6fd      	b.n	8000442 <__udivmoddi4+0xd2>
 8000646:	443b      	add	r3, r7
 8000648:	3a02      	subs	r2, #2
 800064a:	e733      	b.n	80004b4 <__udivmoddi4+0x144>
 800064c:	f1ac 0c02 	sub.w	ip, ip, #2
 8000650:	443b      	add	r3, r7
 8000652:	e71c      	b.n	800048e <__udivmoddi4+0x11e>
 8000654:	4649      	mov	r1, r9
 8000656:	e79c      	b.n	8000592 <__udivmoddi4+0x222>
 8000658:	eba1 0109 	sub.w	r1, r1, r9
 800065c:	46c4      	mov	ip, r8
 800065e:	fbb1 f9fe 	udiv	r9, r1, lr
 8000662:	fb09 f804 	mul.w	r8, r9, r4
 8000666:	e7c4      	b.n	80005f2 <__udivmoddi4+0x282>

08000668 <__aeabi_idiv0>:
 8000668:	4770      	bx	lr
 800066a:	bf00      	nop

0800066c <Reset_Handler>:

    .section  .text.Reset_Handler
  .weak  Reset_Handler
  .type  Reset_Handler, %function
Reset_Handler: 
  ldr   sp, =_estack       /* set stack pointer */
 800066c:	f8df d034 	ldr.w	sp, [pc, #52]	@ 80006a4 <LoopFillZerobss+0x14>
 
/* Copy the data segment initializers from flash to SRAM */  
  movs  r1, #0
 8000670:	2100      	movs	r1, #0
  b  LoopCopyDataInit
 8000672:	e003      	b.n	800067c <LoopCopyDataInit>

08000674 <CopyDataInit>:

CopyDataInit:
  ldr  r3, =_sidata
 8000674:	4b0c      	ldr	r3, [pc, #48]	@ (80006a8 <LoopFillZerobss+0x18>)
  ldr  r3, [r3, r1]
 8000676:	585b      	ldr	r3, [r3, r1]
  str  r3, [r0, r1]
 8000678:	5043      	str	r3, [r0, r1]
  adds  r1, r1, #4
 800067a:	3104      	adds	r1, #4

0800067c <LoopCopyDataInit>:
    
LoopCopyDataInit:
  ldr  r0, =_sdata
 800067c:	480b      	ldr	r0, [pc, #44]	@ (80006ac <LoopFillZerobss+0x1c>)
  ldr  r3, =_edata
 800067e:	4b0c      	ldr	r3, [pc, #48]	@ (80006b0 <LoopFillZerobss+0x20>)
  adds  r2, r0, r1
 8000680:	1842      	adds	r2, r0, r1
  cmp  r2, r3
 8000682:	429a      	cmp	r2, r3
  bcc  CopyDataInit
 8000684:	d3f6      	bcc.n	8000674 <CopyDataInit>
  ldr  r2, =_sbss
 8000686:	4a0b      	ldr	r2, [pc, #44]	@ (80006b4 <LoopFillZerobss+0x24>)
  b  LoopFillZerobss
 8000688:	e002      	b.n	8000690 <LoopFillZerobss>

0800068a <FillZerobss>:
/* Zero fill the bss segment. */  
FillZerobss:
  movs  r3, #0
 800068a:	2300      	movs	r3, #0
  str  r3, [r2], #4
 800068c:	f842 3b04 	str.w	r3, [r2], #4

08000690 <LoopFillZerobss>:
    
LoopFillZerobss:
  ldr  r3, = _ebss
 8000690:	4b09      	ldr	r3, [pc, #36]	@ (80006b8 <LoopFillZerobss+0x28>)
  cmp  r2, r3
 8000692:	429a      	cmp	r2, r3
  bcc  FillZerobss
 8000694:	d3f9      	bcc.n	800068a <FillZerobss>

/* Call the clock system intitialization function.*/
  bl  SystemInit   
 8000696:	f003 f9d9 	bl	8003a4c <SystemInit>
/* Call static constructors */
    bl __libc_init_array
 800069a:	f022 fbb9 	bl	8022e10 <__libc_init_array>
/* Call the application's entry point.*/
  bl  main
 800069e:	f001 fad3 	bl	8001c48 <main>
  bx  lr    
 80006a2:	4770      	bx	lr
  ldr   sp, =_estack       /* set stack pointer */
 80006a4:	20030000 	.word	0x20030000
  ldr  r3, =_sidata
 80006a8:	08025794 	.word	0x08025794
  ldr  r0, =_sdata
 80006ac:	20000000 	.word	0x20000000
  ldr  r3, =_edata
 80006b0:	20000274 	.word	0x20000274
  ldr  r2, =_sbss
 80006b4:	20000480 	.word	0x20000480
  ldr  r3, = _ebss
 80006b8:	20014c6c 	.word	0x20014c6c

080006bc <ADC_IRQHandler>:
 * @retval None       
*/
    .section  .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b  Infinite_Loop
 80006bc:	e7fe      	b.n	80006bc <ADC_IRQHandler>

080006be <MX_TouchGFX_PreOSInit>:
/**
 * PreOS Initialization function
 */
void MX_TouchGFX_PreOSInit(void)
{
}
 80006be:	4770      	bx	lr

080006c0 <MX_TouchGFX_Init>:

/**
 * Initialize TouchGFX application
 */
void MX_TouchGFX_Init(void)
{
 80006c0:	b508      	push	{r3, lr}
    // Calling forward to touchgfx_init in C++ domain
    touchgfx_components_init();
 80006c2:	f000 fdbb 	bl	800123c <touchgfx_components_init>
    touchgfx_init();
}
 80006c6:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    touchgfx_init();
 80006ca:	f000 bd3f 	b.w	800114c <touchgfx_init>

080006ce <TouchGFX_Task>:
 * TouchGFX application thread
 */
void TouchGFX_Task(void* argument)
{
    // Calling forward to touchgfx_taskEntry in C++ domain
    touchgfx_taskEntry();
 80006ce:	f000 bdb7 	b.w	8001240 <touchgfx_taskEntry>

080006d2 <_ZN20STM32TouchControllerD1Ev>:
 * @brief This class specializes TouchController Interface.
 *
 * @sa touchgfx::TouchController
 */

class STM32TouchController : public touchgfx::TouchController
 80006d2:	4770      	bx	lr

080006d4 <_ZN20STM32TouchControllerD0Ev>:
 80006d4:	b510      	push	{r4, lr}
 80006d6:	2104      	movs	r1, #4
 80006d8:	4604      	mov	r4, r0
 80006da:	f021 f9ac 	bl	8021a36 <_ZdlPvj>
 80006de:	4620      	mov	r0, r4
 80006e0:	bd10      	pop	{r4, pc}
	...

080006e4 <_Z11BSP_TS_Inittt>:
  * @param  XSize: The maximum X size of the TS area on LCD
  * @param  YSize: The maximum Y size of the TS area on LCD
  * @retval TS_OK: if all initializations are OK. Other value if error.
  */
uint8_t BSP_TS_Init(uint16_t XSize, uint16_t YSize)
{
 80006e4:	b538      	push	{r3, r4, r5, lr}
    uint8_t ret = TS_ERROR;

    /* Initialize x and y positions boundaries */
    TsXBoundary = XSize;
 80006e6:	4b0c      	ldr	r3, [pc, #48]	@ (8000718 <_Z11BSP_TS_Inittt+0x34>)
    TsYBoundary = YSize;

    /* Read ID and verify if the IO expander is ready */
    if (stmpe811_ts_drv.ReadID(TS_I2C_ADDRESS) == STMPE811_ID)
 80006e8:	4c0c      	ldr	r4, [pc, #48]	@ (800071c <_Z11BSP_TS_Inittt+0x38>)
    TsXBoundary = XSize;
 80006ea:	8018      	strh	r0, [r3, #0]
    TsYBoundary = YSize;
 80006ec:	4b0c      	ldr	r3, [pc, #48]	@ (8000720 <_Z11BSP_TS_Inittt+0x3c>)
    if (stmpe811_ts_drv.ReadID(TS_I2C_ADDRESS) == STMPE811_ID)
 80006ee:	2082      	movs	r0, #130	@ 0x82
    TsYBoundary = YSize;
 80006f0:	8019      	strh	r1, [r3, #0]
    if (stmpe811_ts_drv.ReadID(TS_I2C_ADDRESS) == STMPE811_ID)
 80006f2:	6863      	ldr	r3, [r4, #4]
 80006f4:	4798      	blx	r3
 80006f6:	f640 0311 	movw	r3, #2065	@ 0x811
 80006fa:	4298      	cmp	r0, r3
 80006fc:	d10a      	bne.n	8000714 <_Z11BSP_TS_Inittt+0x30>
    {
        /* Initialize the TS driver structure */
        TsDrv = &stmpe811_ts_drv;
 80006fe:	4d09      	ldr	r5, [pc, #36]	@ (8000724 <_Z11BSP_TS_Inittt+0x40>)
    }

    if (ret == TS_OK)
    {
        /* Initialize the LL TS Driver */
        TsDrv->Init(TS_I2C_ADDRESS);
 8000700:	6823      	ldr	r3, [r4, #0]
        TsDrv = &stmpe811_ts_drv;
 8000702:	602c      	str	r4, [r5, #0]
        TsDrv->Init(TS_I2C_ADDRESS);
 8000704:	2082      	movs	r0, #130	@ 0x82
 8000706:	4798      	blx	r3
        TsDrv->Start(TS_I2C_ADDRESS);
 8000708:	682b      	ldr	r3, [r5, #0]
 800070a:	2082      	movs	r0, #130	@ 0x82
 800070c:	68db      	ldr	r3, [r3, #12]
 800070e:	4798      	blx	r3
 8000710:	2000      	movs	r0, #0
    }

    return ret;
}
 8000712:	bd38      	pop	{r3, r4, r5, pc}
    uint8_t ret = TS_ERROR;
 8000714:	2001      	movs	r0, #1
 8000716:	e7fc      	b.n	8000712 <_Z11BSP_TS_Inittt+0x2e>
 8000718:	200004a6 	.word	0x200004a6
 800071c:	2000009c 	.word	0x2000009c
 8000720:	200004a4 	.word	0x200004a4
 8000724:	200004a8 	.word	0x200004a8

08000728 <_ZN20STM32TouchController4initEv>:
    BSP_TS_Init(240, 320);
 8000728:	f44f 71a0 	mov.w	r1, #320	@ 0x140
 800072c:	20f0      	movs	r0, #240	@ 0xf0
 800072e:	f7ff bfd9 	b.w	80006e4 <_Z11BSP_TS_Inittt>
	...

08000734 <_Z15BSP_TS_GetStateP15TS_StateTypeDef>:
/**
  * @brief  Returns status and positions of the touch screen.
  * @param  TsState: Pointer to touch screen current state structure
  */
void BSP_TS_GetState(TS_StateTypeDef* TsState)
{
 8000734:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
    static uint32_t _x = 0, _y = 0;
    uint16_t xDiff, yDiff, x, y, xr, yr;

    TsState->TouchDetected = TsDrv->DetectTouch(TS_I2C_ADDRESS);
 8000736:	4d39      	ldr	r5, [pc, #228]	@ (800081c <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xe8>)
 8000738:	682b      	ldr	r3, [r5, #0]
{
 800073a:	4604      	mov	r4, r0
    TsState->TouchDetected = TsDrv->DetectTouch(TS_I2C_ADDRESS);
 800073c:	691b      	ldr	r3, [r3, #16]
 800073e:	2082      	movs	r0, #130	@ 0x82
 8000740:	4798      	blx	r3
 8000742:	8020      	strh	r0, [r4, #0]

    if (TsState->TouchDetected)
 8000744:	2800      	cmp	r0, #0
 8000746:	d04e      	beq.n	80007e6 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xb2>
    {
        TsDrv->GetXY(TS_I2C_ADDRESS, &x, &y);
 8000748:	682b      	ldr	r3, [r5, #0]
 800074a:	f10d 0206 	add.w	r2, sp, #6
 800074e:	695b      	ldr	r3, [r3, #20]
 8000750:	a901      	add	r1, sp, #4
 8000752:	2082      	movs	r0, #130	@ 0x82
 8000754:	4798      	blx	r3

        if (isRevD)
 8000756:	4b32      	ldr	r3, [pc, #200]	@ (8000820 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xec>)
 8000758:	781b      	ldrb	r3, [r3, #0]
 800075a:	2b00      	cmp	r3, #0
 800075c:	d04b      	beq.n	80007f6 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xc2>
        {
            //Ensures the coordinates are within the screen
            if (y > 3700)
 800075e:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 8000762:	f640 6374 	movw	r3, #3700	@ 0xe74
 8000766:	429a      	cmp	r2, r3
 8000768:	d93f      	bls.n	80007ea <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xb6>
            {
                y = 3700;
 800076a:	f8ad 3006 	strh.w	r3, [sp, #6]

            /* Y value first correction */
            y -= 180;

            /* Y value second correction */
            y = 3520 - y;
 800076e:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 8000772:	1a9b      	subs	r3, r3, r2
        }
        else
        {
            /* Y value first correction */
            y -= 360;
 8000774:	b29b      	uxth	r3, r3

        /* Y value second correction */
        yr = y / 11;

        /* Return y position value */
        if (yr <= 0)
 8000776:	2b0a      	cmp	r3, #10
 8000778:	d942      	bls.n	8000800 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xcc>
        yr = y / 11;
 800077a:	220b      	movs	r2, #11
 800077c:	fbb3 f3f2 	udiv	r3, r3, r2
        {
            yr = 0;
        }
        else if (yr > TsYBoundary)
 8000780:	4a28      	ldr	r2, [pc, #160]	@ (8000824 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xf0>)
 8000782:	8812      	ldrh	r2, [r2, #0]
 8000784:	4293      	cmp	r3, r2
 8000786:	d901      	bls.n	800078c <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x58>
        {
            yr = TsYBoundary - 1;
 8000788:	3a01      	subs	r2, #1
 800078a:	b293      	uxth	r3, r2
        else
        {}
        y = yr;

        /* X value first correction */
        if (x <= 3000)
 800078c:	f8bd 2004 	ldrh.w	r2, [sp, #4]
 8000790:	4825      	ldr	r0, [pc, #148]	@ (8000828 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xf4>)
 8000792:	f640 31b8 	movw	r1, #3000	@ 0xbb8
 8000796:	428a      	cmp	r2, r1
 8000798:	d834      	bhi.n	8000804 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xd0>
        {
            x = 3870 - x;
 800079a:	f5c2 6271 	rsb	r2, r2, #3856	@ 0xf10
 800079e:	320e      	adds	r2, #14
        }
        else
        {}

        x = xr;
        xDiff = x > _x ? (x - _x) : (_x - x);
 80007a0:	6801      	ldr	r1, [r0, #0]
            x = 3870 - x;
 80007a2:	b292      	uxth	r2, r2
        xr = x / 15;
 80007a4:	250f      	movs	r5, #15
 80007a6:	fbb2 f2f5 	udiv	r2, r2, r5
        else if (xr > TsXBoundary)
 80007aa:	4d20      	ldr	r5, [pc, #128]	@ (800082c <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xf8>)
 80007ac:	882d      	ldrh	r5, [r5, #0]
 80007ae:	42aa      	cmp	r2, r5
            xr = TsXBoundary - 1;
 80007b0:	bf84      	itt	hi
 80007b2:	f105 35ff 	addhi.w	r5, r5, #4294967295
 80007b6:	b2aa      	uxthhi	r2, r5
        xDiff = x > _x ? (x - _x) : (_x - x);
 80007b8:	428a      	cmp	r2, r1
 80007ba:	4615      	mov	r5, r2
 80007bc:	b28e      	uxth	r6, r1
 80007be:	d92a      	bls.n	8000816 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xe2>
 80007c0:	1b92      	subs	r2, r2, r6
 80007c2:	b291      	uxth	r1, r2
        yDiff = y > _y ? (y - _y) : (_y - y);
 80007c4:	4e1a      	ldr	r6, [pc, #104]	@ (8000830 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xfc>)
 80007c6:	6837      	ldr	r7, [r6, #0]
 80007c8:	42bb      	cmp	r3, r7
 80007ca:	b2ba      	uxth	r2, r7
 80007cc:	bf8c      	ite	hi
 80007ce:	1a9a      	subhi	r2, r3, r2
 80007d0:	1ad2      	subls	r2, r2, r3
 80007d2:	b292      	uxth	r2, r2

        if (xDiff + yDiff > 5)
 80007d4:	4411      	add	r1, r2
 80007d6:	2905      	cmp	r1, #5
        {
            _x = x;
 80007d8:	bfc4      	itt	gt
 80007da:	6005      	strgt	r5, [r0, #0]
            _y = y;
 80007dc:	6033      	strgt	r3, [r6, #0]
        }

        /* Update the X position */
        TsState->X = _x;
 80007de:	6803      	ldr	r3, [r0, #0]
 80007e0:	8063      	strh	r3, [r4, #2]

        /* Update the Y position */
        TsState->Y = _y;
 80007e2:	6833      	ldr	r3, [r6, #0]
 80007e4:	80a3      	strh	r3, [r4, #4]
    }
}
 80007e6:	b003      	add	sp, #12
 80007e8:	bdf0      	pop	{r4, r5, r6, r7, pc}
            else if (y < 180)
 80007ea:	2ab3      	cmp	r2, #179	@ 0xb3
                y = 180;
 80007ec:	bf9c      	itt	ls
 80007ee:	22b4      	movls	r2, #180	@ 0xb4
 80007f0:	f8ad 2006 	strhls.w	r2, [sp, #6]
 80007f4:	e7bb      	b.n	800076e <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x3a>
            y -= 360;
 80007f6:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 80007fa:	f5a3 73b4 	sub.w	r3, r3, #360	@ 0x168
 80007fe:	e7b9      	b.n	8000774 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x40>
            yr = 0;
 8000800:	2300      	movs	r3, #0
 8000802:	e7c3      	b.n	800078c <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x58>
            x = 3800 - x;
 8000804:	f5c2 626d 	rsb	r2, r2, #3792	@ 0xed0
 8000808:	3208      	adds	r2, #8
 800080a:	b292      	uxth	r2, r2
        if (xr <= 0)
 800080c:	2a0e      	cmp	r2, #14
        xDiff = x > _x ? (x - _x) : (_x - x);
 800080e:	6801      	ldr	r1, [r0, #0]
        if (xr <= 0)
 8000810:	d8c8      	bhi.n	80007a4 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x70>
        xDiff = x > _x ? (x - _x) : (_x - x);
 8000812:	2500      	movs	r5, #0
            xr = 0;
 8000814:	462a      	mov	r2, r5
        xDiff = x > _x ? (x - _x) : (_x - x);
 8000816:	1a89      	subs	r1, r1, r2
 8000818:	b289      	uxth	r1, r1
 800081a:	e7d3      	b.n	80007c4 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x90>
 800081c:	200004a8 	.word	0x200004a8
 8000820:	20002ed0 	.word	0x20002ed0
 8000824:	200004a4 	.word	0x200004a4
 8000828:	200004a0 	.word	0x200004a0
 800082c:	200004a6 	.word	0x200004a6
 8000830:	2000049c 	.word	0x2000049c

08000834 <_ZN20STM32TouchController11sampleTouchERlS0_>:
{
 8000834:	b537      	push	{r0, r1, r2, r4, r5, lr}
    BSP_TS_GetState(&state);
 8000836:	4668      	mov	r0, sp
{
 8000838:	460d      	mov	r5, r1
 800083a:	4614      	mov	r4, r2
    BSP_TS_GetState(&state);
 800083c:	f7ff ff7a 	bl	8000734 <_Z15BSP_TS_GetStateP15TS_StateTypeDef>
    if (state.TouchDetected)
 8000840:	f8bd 0000 	ldrh.w	r0, [sp]
 8000844:	b130      	cbz	r0, 8000854 <_ZN20STM32TouchController11sampleTouchERlS0_+0x20>
        x = state.X;
 8000846:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800084a:	602b      	str	r3, [r5, #0]
        y = state.Y;
 800084c:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 8000850:	6023      	str	r3, [r4, #0]
        return true;
 8000852:	2001      	movs	r0, #1
}
 8000854:	b003      	add	sp, #12
 8000856:	bd30      	pop	{r4, r5, pc}

08000858 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>:
/*
 * Sets a pin high.
 */
void GPIO::set(GPIO_ID id)
{
    switch (id)
 8000858:	2803      	cmp	r0, #3
 800085a:	d821      	bhi.n	80008a0 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x48>
 800085c:	e8df f000 	tbb	[pc, r0]
 8000860:	19120b02 	.word	0x19120b02
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, M_GPIO_PIN_SET(id));
 8000864:	4b0f      	ldr	r3, [pc, #60]	@ (80008a4 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x4c>)
 8000866:	681a      	ldr	r2, [r3, #0]
 8000868:	fab2 f282 	clz	r2, r2
 800086c:	0952      	lsrs	r2, r2, #5
 800086e:	2104      	movs	r1, #4
        HAL_GPIO_WritePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin, M_GPIO_PIN_SET(id));
#endif
        break;
    case GPIO::MCU_ACTIVE:
#if defined(MCU_ACTIVE_GPIO_Port) && defined(MCU_ACTIVE_Pin)
        HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, M_GPIO_PIN_SET(id));
 8000870:	480d      	ldr	r0, [pc, #52]	@ (80008a8 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x50>)
 8000872:	f003 bb7f 	b.w	8003f74 <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin, M_GPIO_PIN_SET(id));
 8000876:	4b0b      	ldr	r3, [pc, #44]	@ (80008a4 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x4c>)
 8000878:	685a      	ldr	r2, [r3, #4]
 800087a:	fab2 f282 	clz	r2, r2
 800087e:	0952      	lsrs	r2, r2, #5
 8000880:	2108      	movs	r1, #8
 8000882:	e7f5      	b.n	8000870 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x18>
        HAL_GPIO_WritePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin, M_GPIO_PIN_SET(id));
 8000884:	4b07      	ldr	r3, [pc, #28]	@ (80008a4 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x4c>)
 8000886:	689a      	ldr	r2, [r3, #8]
 8000888:	fab2 f282 	clz	r2, r2
 800088c:	0952      	lsrs	r2, r2, #5
 800088e:	2110      	movs	r1, #16
 8000890:	e7ee      	b.n	8000870 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x18>
        HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, M_GPIO_PIN_SET(id));
 8000892:	4b04      	ldr	r3, [pc, #16]	@ (80008a4 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x4c>)
 8000894:	68da      	ldr	r2, [r3, #12]
 8000896:	fab2 f282 	clz	r2, r2
 800089a:	0952      	lsrs	r2, r2, #5
 800089c:	2120      	movs	r1, #32
 800089e:	e7e7      	b.n	8000870 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x18>
#endif
        break;
    }
}
 80008a0:	4770      	bx	lr
 80008a2:	bf00      	nop
 80008a4:	200004ac 	.word	0x200004ac
 80008a8:	40021000 	.word	0x40021000

080008ac <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>:
/*
 * Sets a pin low.
 */
void GPIO::clear(GPIO_ID id)
{
    switch (id)
 80008ac:	2803      	cmp	r0, #3
 80008ae:	d821      	bhi.n	80008f4 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x48>
 80008b0:	e8df f000 	tbb	[pc, r0]
 80008b4:	19120b02 	.word	0x19120b02
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, M_GPIO_PIN_RESET(id));
 80008b8:	4b0f      	ldr	r3, [pc, #60]	@ (80008f8 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x4c>)
 80008ba:	681a      	ldr	r2, [r3, #0]
 80008bc:	3a00      	subs	r2, #0
 80008be:	bf18      	it	ne
 80008c0:	2201      	movne	r2, #1
 80008c2:	2104      	movs	r1, #4
        HAL_GPIO_WritePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin, M_GPIO_PIN_RESET(id));
#endif
        break;
    case GPIO::MCU_ACTIVE:
#if defined(MCU_ACTIVE_GPIO_Port) && defined(MCU_ACTIVE_Pin)
        HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, M_GPIO_PIN_RESET(id));
 80008c4:	480d      	ldr	r0, [pc, #52]	@ (80008fc <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x50>)
 80008c6:	f003 bb55 	b.w	8003f74 <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin, M_GPIO_PIN_RESET(id));
 80008ca:	4b0b      	ldr	r3, [pc, #44]	@ (80008f8 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x4c>)
 80008cc:	685a      	ldr	r2, [r3, #4]
 80008ce:	3a00      	subs	r2, #0
 80008d0:	bf18      	it	ne
 80008d2:	2201      	movne	r2, #1
 80008d4:	2108      	movs	r1, #8
 80008d6:	e7f5      	b.n	80008c4 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x18>
        HAL_GPIO_WritePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin, M_GPIO_PIN_RESET(id));
 80008d8:	4b07      	ldr	r3, [pc, #28]	@ (80008f8 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x4c>)
 80008da:	689a      	ldr	r2, [r3, #8]
 80008dc:	3a00      	subs	r2, #0
 80008de:	bf18      	it	ne
 80008e0:	2201      	movne	r2, #1
 80008e2:	2110      	movs	r1, #16
 80008e4:	e7ee      	b.n	80008c4 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x18>
        HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, M_GPIO_PIN_RESET(id));
 80008e6:	4b04      	ldr	r3, [pc, #16]	@ (80008f8 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x4c>)
 80008e8:	68da      	ldr	r2, [r3, #12]
 80008ea:	3a00      	subs	r2, #0
 80008ec:	bf18      	it	ne
 80008ee:	2201      	movne	r2, #1
 80008f0:	2120      	movs	r1, #32
 80008f2:	e7e7      	b.n	80008c4 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x18>
#endif
        break;
    }
}
 80008f4:	4770      	bx	lr
 80008f6:	bf00      	nop
 80008f8:	200004ac 	.word	0x200004ac
 80008fc:	40021000 	.word	0x40021000

08000900 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>:
/*
 * Toggles a pin.
 */
void GPIO::toggle(GPIO_ID id)
{
    switch (id)
 8000900:	2803      	cmp	r0, #3
 8000902:	d80d      	bhi.n	8000920 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x20>
 8000904:	e8df f000 	tbb	[pc, r0]
 8000908:	0a080602 	.word	0x0a080602
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_TogglePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin);
 800090c:	2104      	movs	r1, #4
        HAL_GPIO_TogglePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
#endif
        break;
    case GPIO::MCU_ACTIVE:
#if defined(MCU_ACTIVE_GPIO_Port) && defined(MCU_ACTIVE_Pin)
        HAL_GPIO_TogglePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
 800090e:	4805      	ldr	r0, [pc, #20]	@ (8000924 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x24>)
 8000910:	f003 bb35 	b.w	8003f7e <HAL_GPIO_TogglePin>
        HAL_GPIO_TogglePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin);
 8000914:	2108      	movs	r1, #8
 8000916:	e7fa      	b.n	800090e <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0xe>
        HAL_GPIO_TogglePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
 8000918:	2110      	movs	r1, #16
 800091a:	e7f8      	b.n	800090e <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0xe>
        HAL_GPIO_TogglePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
 800091c:	2120      	movs	r1, #32
 800091e:	e7f6      	b.n	800090e <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0xe>
#endif
        break;
    }
}
 8000920:	4770      	bx	lr
 8000922:	bf00      	nop
 8000924:	40021000 	.word	0x40021000

08000928 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE>:

/*
 * Gets the state of a pin.
 */
bool GPIO::get(GPIO_ID id)
{
 8000928:	b508      	push	{r3, lr}
    GPIO_PinState bitstatus = GPIO_PIN_RESET;
    switch (id)
 800092a:	2803      	cmp	r0, #3
 800092c:	d811      	bhi.n	8000952 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x2a>
 800092e:	e8df f000 	tbb	[pc, r0]
 8000932:	0a02      	.short	0x0a02
 8000934:	0e0c      	.short	0x0e0c
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        bitstatus = HAL_GPIO_ReadPin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin);
 8000936:	2104      	movs	r1, #4
        bitstatus = HAL_GPIO_ReadPin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
#endif
        break;
    case GPIO::MCU_ACTIVE:
#if defined(MCU_ACTIVE_GPIO_Port) && defined(MCU_ACTIVE_Pin)
        bitstatus = HAL_GPIO_ReadPin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
 8000938:	4807      	ldr	r0, [pc, #28]	@ (8000958 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x30>)
 800093a:	f003 fb15 	bl	8003f68 <HAL_GPIO_ReadPin>
#endif
        break;
    }
    return (bitstatus == GPIO_PIN_SET);
}
 800093e:	1e43      	subs	r3, r0, #1
 8000940:	4258      	negs	r0, r3
 8000942:	4158      	adcs	r0, r3
 8000944:	bd08      	pop	{r3, pc}
        bitstatus = HAL_GPIO_ReadPin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin);
 8000946:	2108      	movs	r1, #8
 8000948:	e7f6      	b.n	8000938 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x10>
        bitstatus = HAL_GPIO_ReadPin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
 800094a:	2110      	movs	r1, #16
 800094c:	e7f4      	b.n	8000938 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x10>
        bitstatus = HAL_GPIO_ReadPin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
 800094e:	2120      	movs	r1, #32
 8000950:	e7f2      	b.n	8000938 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x10>
    switch (id)
 8000952:	2000      	movs	r0, #0
 8000954:	e7f3      	b.n	800093e <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x16>
 8000956:	bf00      	nop
 8000958:	40021000 	.word	0x40021000

0800095c <_ZN8touchgfx4GPIO4initEv>:
{
 800095c:	b570      	push	{r4, r5, r6, lr}
 800095e:	4d08      	ldr	r5, [pc, #32]	@ (8000980 <_ZN8touchgfx4GPIO4initEv+0x24>)
    for (int id = 0; id <= 4; id++)
 8000960:	2400      	movs	r4, #0
                GPIO_InvertedLevels[id] = 1;
 8000962:	2601      	movs	r6, #1
        if (GPIO::get(static_cast<GPIO_ID>(id)))
 8000964:	b2e0      	uxtb	r0, r4
 8000966:	f7ff ffdf 	bl	8000928 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE>
 800096a:	b118      	cbz	r0, 8000974 <_ZN8touchgfx4GPIO4initEv+0x18>
            if (GPIO_InvertedLevels[id] != 1)
 800096c:	682b      	ldr	r3, [r5, #0]
 800096e:	2b01      	cmp	r3, #1
                GPIO_InvertedLevels[id] = 1;
 8000970:	bf18      	it	ne
 8000972:	602e      	strne	r6, [r5, #0]
    for (int id = 0; id <= 4; id++)
 8000974:	3401      	adds	r4, #1
 8000976:	2c05      	cmp	r4, #5
 8000978:	f105 0504 	add.w	r5, r5, #4
 800097c:	d1f2      	bne.n	8000964 <_ZN8touchgfx4GPIO4initEv+0x8>
}
 800097e:	bd70      	pop	{r4, r5, r6, pc}
 8000980:	200004ac 	.word	0x200004ac

08000984 <_ZN8touchgfx3HAL21setDisplayOrientationENS_18DisplayOrientationE>:
     * @note A screen transition must occur before this takes effect!
     */
    virtual void setDisplayOrientation(DisplayOrientation orientation)
    {
        requestedOrientation = orientation;
        displayOrientationChangeRequested = true;
 8000984:	2301      	movs	r3, #1
        requestedOrientation = orientation;
 8000986:	f880 1078 	strb.w	r1, [r0, #120]	@ 0x78
        displayOrientationChangeRequested = true;
 800098a:	f880 3079 	strb.w	r3, [r0, #121]	@ 0x79
    }
 800098e:	4770      	bx	lr

08000990 <_ZN8touchgfx3HAL11submitGPU2DEv>:
     *
     * Only implemented on systems with the GPU2D IP.
     */
    virtual void submitGPU2D()
    {
    }
 8000990:	4770      	bx	lr

08000992 <_ZN8touchgfx3HAL9sampleKeyERh>:
     */
    virtual bool sampleKey(uint8_t& key)
    {
        (void)key; // Unused variable
        return false;
    }
 8000992:	2000      	movs	r0, #0
 8000994:	4770      	bx	lr
	...

08000998 <_ZN8touchgfx3HAL19setAnimationStorageEPv>:
     * @see setFrameBufferStartAddresses
     */
    virtual void setAnimationStorage(void* animationStorage)
    {
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
        USE_ANIMATION_STORAGE = animationStorage != 0;
 8000998:	4b03      	ldr	r3, [pc, #12]	@ (80009a8 <_ZN8touchgfx3HAL19setAnimationStorageEPv+0x10>)
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
 800099a:	6441      	str	r1, [r0, #68]	@ 0x44
        USE_ANIMATION_STORAGE = animationStorage != 0;
 800099c:	3900      	subs	r1, #0
 800099e:	bf18      	it	ne
 80009a0:	2101      	movne	r1, #1
 80009a2:	7019      	strb	r1, [r3, #0]
    }
 80009a4:	4770      	bx	lr
 80009a6:	bf00      	nop
 80009a8:	20013f29 	.word	0x20013f29

080009ac <_ZN8touchgfx3HAL16waitForLTDCLinesEt>:
     *
     * @param numberOfLines Number of lines to wait.
     */
    virtual void waitForLTDCLines(uint16_t numberOfLines)
    {
    }
 80009ac:	4770      	bx	lr

080009ae <_ZNK8touchgfx3HAL18getFlashDataReaderEv>:
     * @return the FlashDataReader.
     */
    virtual FlashDataReader* getFlashDataReader() const
    {
        return 0;
    }
 80009ae:	2000      	movs	r0, #0
 80009b0:	4770      	bx	lr

080009b2 <_ZN8touchgfx3HAL9taskDelayEt>:
     *
     * @see registerTaskDelayFunction
     */
    virtual void taskDelay(uint16_t ms)
    {
        if (taskDelayFunc)
 80009b2:	6b83      	ldr	r3, [r0, #56]	@ 0x38
 80009b4:	b10b      	cbz	r3, 80009ba <_ZN8touchgfx3HAL9taskDelayEt+0x8>
        {
            taskDelayFunc(ms);
 80009b6:	4608      	mov	r0, r1
 80009b8:	4718      	bx	r3
        }
    }
 80009ba:	4770      	bx	lr

080009bc <_ZN8touchgfx3HAL17getTFTCurrentLineEv>:
     *         implemented".
     */
    virtual uint16_t getTFTCurrentLine()
    {
        return 0xFFFFu;
    }
 80009bc:	f64f 70ff 	movw	r0, #65535	@ 0xffff
 80009c0:	4770      	bx	lr

080009c2 <_ZN8touchgfx3HAL10getDMATypeEv>:
     *
     * @return a DMAType value of the concrete DMA implementation.
     */
    virtual DMAType getDMAType()
    {
        return dma.getDMAType();
 80009c2:	6840      	ldr	r0, [r0, #4]
 80009c4:	6803      	ldr	r3, [r0, #0]
 80009c6:	699b      	ldr	r3, [r3, #24]
 80009c8:	4718      	bx	r3

080009ca <_ZN8touchgfx3HAL25partialLTDCDeadlineMissedEv>:
     * This empty function can be overridden to e.g. output this error condition
     * on a pin.
     */
    virtual void partialLTDCDeadlineMissed()
    {
    }
 80009ca:	4770      	bx	lr

080009cc <_ZN8touchgfx3HAL15InvalidateCacheEv>:
     * Called by setRenderingMethod when changing rendering method
     * from Hardware to Software indicating the cache should be invalidated.
     */
    virtual void InvalidateCache()
    {
    }
 80009cc:	4770      	bx	lr

080009ce <_ZN8touchgfx3HAL10FlushCacheEv>:
     * Called by setRenderingMethod when changing rendering method
     * from Software to Hardware indicating the cache should be invalidated.
     */
    virtual void FlushCache()
    {
    }
 80009ce:	4770      	bx	lr

080009d0 <_ZN8touchgfx3HAL22InvalidateTextureCacheEv>:
     * Called on every tick before drawing into the framebuffer to enable
     * invalidation of any caches that may be incoherent with main memory.
     */
    virtual void InvalidateTextureCache()
    {
    }
 80009d0:	4770      	bx	lr

080009d2 <_ZN11TouchGFXHALD1Ev>:
 *
 * @brief HAL implementation for TouchGFX.
 *
 * @sa HAL
 */
class TouchGFXHAL : public TouchGFXGeneratedHAL
 80009d2:	4770      	bx	lr

080009d4 <_ZN11TouchGFXHAL10initializeEv>:
LOCATION_PRAGMA_NOLOAD("TouchGFX_Framebuffer")
uint32_t animationStorage[(240 * 320 * 2 + 3) / 4] LOCATION_ATTRIBUTE_NOLOAD("TouchGFX_Framebuffer");
}

void TouchGFXHAL::initialize()
{
 80009d4:	b510      	push	{r4, lr}
 80009d6:	4604      	mov	r4, r0
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.
    // Please note, HAL::initialize() must be called to initialize the framework.

    TouchGFXGeneratedHAL::initialize();
 80009d8:	f000 fd48 	bl	800146c <_ZN20TouchGFXGeneratedHAL10initializeEv>

    // Add animation storage
    setAnimationStorage((void*)animationStorage);
 80009dc:	6823      	ldr	r3, [r4, #0]
 80009de:	4903      	ldr	r1, [pc, #12]	@ (80009ec <_ZN11TouchGFXHAL10initializeEv+0x18>)
 80009e0:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 80009e4:	4620      	mov	r0, r4
}
 80009e6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    setAnimationStorage((void*)animationStorage);
 80009ea:	4718      	bx	r3
 80009ec:	d0000000 	.word	0xd0000000

080009f0 <_ZN11TouchGFXHAL9taskEntryEv>:

void TouchGFXHAL::taskEntry()
{
 80009f0:	b508      	push	{r3, lr}
    enableLCDControllerInterrupt();
 80009f2:	6803      	ldr	r3, [r0, #0]
{
 80009f4:	4604      	mov	r4, r0
    enableLCDControllerInterrupt();
 80009f6:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
 80009fa:	4798      	blx	r3
    enableInterrupts();
 80009fc:	6823      	ldr	r3, [r4, #0]
 80009fe:	4620      	mov	r0, r4
 8000a00:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 8000a02:	4798      	blx	r3

    OSWrappers::waitForVSync();
 8000a04:	f000 f8ec 	bl	8000be0 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
    backPorchExited();
 8000a08:	6823      	ldr	r3, [r4, #0]
 8000a0a:	4620      	mov	r0, r4
 8000a0c:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 8000a0e:	4798      	blx	r3

    LCD_IO_WriteReg(0x29);
 8000a10:	2029      	movs	r0, #41	@ 0x29
 8000a12:	f001 fbad 	bl	8002170 <LCD_IO_WriteReg>

    for (;;)
    {
        OSWrappers::waitForVSync();
 8000a16:	f000 f8e3 	bl	8000be0 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
        backPorchExited();
 8000a1a:	6823      	ldr	r3, [r4, #0]
 8000a1c:	4620      	mov	r0, r4
 8000a1e:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 8000a20:	4798      	blx	r3
    for (;;)
 8000a22:	e7f8      	b.n	8000a16 <_ZN11TouchGFXHAL9taskEntryEv+0x26>

08000a24 <_ZN8touchgfx3HAL15backPorchExitedEv>:
    virtual void backPorchExited()
 8000a24:	b510      	push	{r4, lr}
 8000a26:	4604      	mov	r4, r0
        swapFrameBuffers();
 8000a28:	f00a fb50 	bl	800b0cc <_ZN8touchgfx3HAL16swapFrameBuffersEv>
        tick();
 8000a2c:	6823      	ldr	r3, [r4, #0]
 8000a2e:	4620      	mov	r0, r4
 8000a30:	f8d3 30bc 	ldr.w	r3, [r3, #188]	@ 0xbc
    }
 8000a34:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        tick();
 8000a38:	4718      	bx	r3

08000a3a <_ZNK11TouchGFXHAL17getTFTFrameBufferEv>:
    // Calling parent implementation of getTFTFrameBuffer().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    return TouchGFXGeneratedHAL::getTFTFrameBuffer();
 8000a3a:	f000 bcfb 	b.w	8001434 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>

08000a3e <_ZN11TouchGFXHAL17setTFTFrameBufferEPt>:
    // Calling parent implementation of setTFTFrameBuffer(uint16_t* address).
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::setTFTFrameBuffer(address);
 8000a3e:	f000 bcff 	b.w	8001440 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>

08000a42 <_ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE>:
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.
    // Please note, HAL::flushFrameBuffer(const touchgfx::Rect& rect) must
    // be called to notify the touchgfx framework that flush has been performed.

    TouchGFXGeneratedHAL::flushFrameBuffer(rect);
 8000a42:	f000 bd31 	b.w	80014a8 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>

08000a46 <_ZN11TouchGFXHAL19configureInterruptsEv>:
    // Calling parent implementation of configureInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::configureInterrupts();
 8000a46:	f000 bcd1 	b.w	80013ec <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>

08000a4a <_ZN11TouchGFXHAL16enableInterruptsEv>:
    // Calling parent implementation of enableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableInterrupts();
 8000a4a:	f000 bd41 	b.w	80014d0 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>

08000a4e <_ZN11TouchGFXHAL17disableInterruptsEv>:
    // Calling parent implementation of disableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::disableInterrupts();
 8000a4e:	f000 bd49 	b.w	80014e4 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>

08000a52 <_ZN11TouchGFXHAL28enableLCDControllerInterruptEv>:
    // Calling parent implementation of enableLCDControllerInterrupt().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableLCDControllerInterrupt();
 8000a52:	f000 bcd5 	b.w	8001400 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>

08000a56 <_ZN11TouchGFXHAL16flushFrameBufferEv>:
     * Rect version.
     * @see HAL::flushFrameBuffer
     */
    virtual void flushFrameBuffer()
    {
        HAL::flushFrameBuffer();
 8000a56:	f009 bd59 	b.w	800a50c <_ZN8touchgfx3HAL16flushFrameBufferEv>

08000a5a <_ZN11TouchGFXHALD0Ev>:
 8000a5a:	b510      	push	{r4, lr}
 8000a5c:	2184      	movs	r1, #132	@ 0x84
 8000a5e:	4604      	mov	r4, r0
 8000a60:	f020 ffe9 	bl	8021a36 <_ZdlPvj>
 8000a64:	4620      	mov	r0, r4
 8000a66:	bd10      	pop	{r4, pc}

08000a68 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv>:
    virtual void performDisplayOrientationChange()
 8000a68:	b510      	push	{r4, lr}
        if (requestedOrientation != nativeDisplayOrientation)
 8000a6a:	f890 1034 	ldrb.w	r1, [r0, #52]	@ 0x34
 8000a6e:	f890 4078 	ldrb.w	r4, [r0, #120]	@ 0x78
            if (DISPLAY_ROTATION == rotate0)
 8000a72:	4b0c      	ldr	r3, [pc, #48]	@ (8000aa4 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x3c>)
        if (requestedOrientation != nativeDisplayOrientation)
 8000a74:	428c      	cmp	r4, r1
            if (DISPLAY_ROTATION == rotate0)
 8000a76:	781a      	ldrb	r2, [r3, #0]
        if (requestedOrientation != nativeDisplayOrientation)
 8000a78:	d009      	beq.n	8000a8e <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x26>
            if (DISPLAY_ROTATION == rotate0)
 8000a7a:	b93a      	cbnz	r2, 8000a8c <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x24>
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8000a7c:	4a0a      	ldr	r2, [pc, #40]	@ (8000aa8 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x40>)
                const uint16_t tmp = DISPLAY_HEIGHT;
 8000a7e:	490b      	ldr	r1, [pc, #44]	@ (8000aac <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x44>)
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8000a80:	8814      	ldrh	r4, [r2, #0]
                const uint16_t tmp = DISPLAY_HEIGHT;
 8000a82:	8808      	ldrh	r0, [r1, #0]
                DISPLAY_WIDTH = tmp;
 8000a84:	8010      	strh	r0, [r2, #0]
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8000a86:	800c      	strh	r4, [r1, #0]
                DISPLAY_ROTATION = rotate90;
 8000a88:	2201      	movs	r2, #1
            DISPLAY_ROTATION = rotate0;
 8000a8a:	701a      	strb	r2, [r3, #0]
    }
 8000a8c:	bd10      	pop	{r4, pc}
        else if (DISPLAY_ROTATION != rotate0)
 8000a8e:	2a00      	cmp	r2, #0
 8000a90:	d0fc      	beq.n	8000a8c <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x24>
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8000a92:	4a05      	ldr	r2, [pc, #20]	@ (8000aa8 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x40>)
            const uint16_t tmp = DISPLAY_HEIGHT;
 8000a94:	4905      	ldr	r1, [pc, #20]	@ (8000aac <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x44>)
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8000a96:	8814      	ldrh	r4, [r2, #0]
            const uint16_t tmp = DISPLAY_HEIGHT;
 8000a98:	8808      	ldrh	r0, [r1, #0]
            DISPLAY_WIDTH = tmp;
 8000a9a:	8010      	strh	r0, [r2, #0]
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8000a9c:	800c      	strh	r4, [r1, #0]
            DISPLAY_ROTATION = rotate0;
 8000a9e:	2200      	movs	r2, #0
 8000aa0:	e7f3      	b.n	8000a8a <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x22>
 8000aa2:	bf00      	nop
 8000aa4:	20013f22 	.word	0x20013f22
 8000aa8:	20013f1e 	.word	0x20013f1e
 8000aac:	20013f20 	.word	0x20013f20

08000ab0 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_>:
    virtual void setFrameBufferStartAddresses(void* frameBuffer, void* doubleBuffer, void* animationStorage)
 8000ab0:	b570      	push	{r4, r5, r6, lr}
 8000ab2:	460d      	mov	r5, r1
 8000ab4:	4619      	mov	r1, r3
        assert(frameBuffer != 0 && "A framebuffer address must be set");
 8000ab6:	b935      	cbnz	r5, 8000ac6 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x16>
 8000ab8:	4b09      	ldr	r3, [pc, #36]	@ (8000ae0 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x30>)
 8000aba:	4a0a      	ldr	r2, [pc, #40]	@ (8000ae4 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x34>)
 8000abc:	480a      	ldr	r0, [pc, #40]	@ (8000ae8 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x38>)
 8000abe:	f240 21ff 	movw	r1, #767	@ 0x2ff
 8000ac2:	f021 fef5 	bl	80228b0 <__assert_func>
        frameBuffer1 = reinterpret_cast<uint16_t*>(doubleBuffer);
 8000ac6:	e9c0 520f 	strd	r5, r2, [r0, #60]	@ 0x3c
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
 8000aca:	4b08      	ldr	r3, [pc, #32]	@ (8000aec <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x3c>)
 8000acc:	3a00      	subs	r2, #0
 8000ace:	bf18      	it	ne
 8000ad0:	2201      	movne	r2, #1
 8000ad2:	701a      	strb	r2, [r3, #0]
        setAnimationStorage(animationStorage);
 8000ad4:	6803      	ldr	r3, [r0, #0]
    }
 8000ad6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setAnimationStorage(animationStorage);
 8000ada:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 8000ade:	4718      	bx	r3
 8000ae0:	0802395c 	.word	0x0802395c
 8000ae4:	08023994 	.word	0x08023994
 8000ae8:	080239e2 	.word	0x080239e2
 8000aec:	20013f28 	.word	0x20013f28

08000af0 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt>:
    virtual void setFrameBufferSize(uint16_t width, uint16_t height)
 8000af0:	b508      	push	{r3, lr}
        assert(width >= DISPLAY_WIDTH && height >= DISPLAY_HEIGHT && "Framebuffer cannot be smaller than display");
 8000af2:	4b09      	ldr	r3, [pc, #36]	@ (8000b18 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x28>)
 8000af4:	881b      	ldrh	r3, [r3, #0]
 8000af6:	428b      	cmp	r3, r1
 8000af8:	d803      	bhi.n	8000b02 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x12>
 8000afa:	4b08      	ldr	r3, [pc, #32]	@ (8000b1c <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x2c>)
 8000afc:	881b      	ldrh	r3, [r3, #0]
 8000afe:	4293      	cmp	r3, r2
 8000b00:	d905      	bls.n	8000b0e <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x1e>
 8000b02:	4b07      	ldr	r3, [pc, #28]	@ (8000b20 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x30>)
 8000b04:	4a07      	ldr	r2, [pc, #28]	@ (8000b24 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x34>)
 8000b06:	4808      	ldr	r0, [pc, #32]	@ (8000b28 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x38>)
 8000b08:	21a3      	movs	r1, #163	@ 0xa3
 8000b0a:	f021 fed1 	bl	80228b0 <__assert_func>
        FRAME_BUFFER_WIDTH = width;
 8000b0e:	4b07      	ldr	r3, [pc, #28]	@ (8000b2c <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x3c>)
 8000b10:	8019      	strh	r1, [r3, #0]
        FRAME_BUFFER_HEIGHT = height;
 8000b12:	4b07      	ldr	r3, [pc, #28]	@ (8000b30 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x40>)
 8000b14:	801a      	strh	r2, [r3, #0]
    }
 8000b16:	bd08      	pop	{r3, pc}
 8000b18:	20013f1e 	.word	0x20013f1e
 8000b1c:	20013f20 	.word	0x20013f20
 8000b20:	08023a27 	.word	0x08023a27
 8000b24:	08023a8a 	.word	0x08023a8a
 8000b28:	080239e2 	.word	0x080239e2
 8000b2c:	20013f24 	.word	0x20013f24
 8000b30:	20013f26 	.word	0x20013f26

08000b34 <_ZN8touchgfx3HAL11getBlitCapsEv>:
    virtual BlitOperations getBlitCaps()
 8000b34:	4603      	mov	r3, r0
        if (useDMAAcceleration)
 8000b36:	f890 007a 	ldrb.w	r0, [r0, #122]	@ 0x7a
 8000b3a:	b118      	cbz	r0, 8000b44 <_ZN8touchgfx3HAL11getBlitCapsEv+0x10>
 8000b3c:	6858      	ldr	r0, [r3, #4]
            return dma.getBlitCaps();
 8000b3e:	6803      	ldr	r3, [r0, #0]
 8000b40:	681b      	ldr	r3, [r3, #0]
 8000b42:	4718      	bx	r3
    }
 8000b44:	4770      	bx	lr
	...

08000b48 <_ZN8touchgfx10OSWrappers10initializeEv>:
 * Initialize frame buffer semaphore and queue/mutex for VSYNC signal.
 */
void OSWrappers::initialize()
{
    // Create a queue of length 1
    frame_buffer_sem = osSemaphoreNew(1, 1, NULL); // Binary semaphore
 8000b48:	2101      	movs	r1, #1
{
 8000b4a:	b508      	push	{r3, lr}
    frame_buffer_sem = osSemaphoreNew(1, 1, NULL); // Binary semaphore
 8000b4c:	2200      	movs	r2, #0
 8000b4e:	4608      	mov	r0, r1
 8000b50:	f006 fc92 	bl	8007478 <osSemaphoreNew>
 8000b54:	4b0a      	ldr	r3, [pc, #40]	@ (8000b80 <_ZN8touchgfx10OSWrappers10initializeEv+0x38>)
 8000b56:	6018      	str	r0, [r3, #0]
    assert((frame_buffer_sem != NULL) && "Creation of framebuffer semaphore failed");
 8000b58:	b928      	cbnz	r0, 8000b66 <_ZN8touchgfx10OSWrappers10initializeEv+0x1e>
 8000b5a:	4b0a      	ldr	r3, [pc, #40]	@ (8000b84 <_ZN8touchgfx10OSWrappers10initializeEv+0x3c>)
 8000b5c:	4a0a      	ldr	r2, [pc, #40]	@ (8000b88 <_ZN8touchgfx10OSWrappers10initializeEv+0x40>)
 8000b5e:	2128      	movs	r1, #40	@ 0x28

    // Create a queue of length 1
    vsync_queue = osMessageQueueNew(1, 4, NULL);
    assert((vsync_queue != NULL) && "Creation of vsync message queue failed");
 8000b60:	480a      	ldr	r0, [pc, #40]	@ (8000b8c <_ZN8touchgfx10OSWrappers10initializeEv+0x44>)
 8000b62:	f021 fea5 	bl	80228b0 <__assert_func>
    vsync_queue = osMessageQueueNew(1, 4, NULL);
 8000b66:	2200      	movs	r2, #0
 8000b68:	2104      	movs	r1, #4
 8000b6a:	2001      	movs	r0, #1
 8000b6c:	f006 fd23 	bl	80075b6 <osMessageQueueNew>
 8000b70:	4b07      	ldr	r3, [pc, #28]	@ (8000b90 <_ZN8touchgfx10OSWrappers10initializeEv+0x48>)
 8000b72:	6018      	str	r0, [r3, #0]
    assert((vsync_queue != NULL) && "Creation of vsync message queue failed");
 8000b74:	b918      	cbnz	r0, 8000b7e <_ZN8touchgfx10OSWrappers10initializeEv+0x36>
 8000b76:	4b07      	ldr	r3, [pc, #28]	@ (8000b94 <_ZN8touchgfx10OSWrappers10initializeEv+0x4c>)
 8000b78:	4a03      	ldr	r2, [pc, #12]	@ (8000b88 <_ZN8touchgfx10OSWrappers10initializeEv+0x40>)
 8000b7a:	212c      	movs	r1, #44	@ 0x2c
 8000b7c:	e7f0      	b.n	8000b60 <_ZN8touchgfx10OSWrappers10initializeEv+0x18>
}
 8000b7e:	bd08      	pop	{r3, pc}
 8000b80:	200004c0 	.word	0x200004c0
 8000b84:	08023acd 	.word	0x08023acd
 8000b88:	08023b16 	.word	0x08023b16
 8000b8c:	08023b45 	.word	0x08023b45
 8000b90:	200004bc 	.word	0x200004bc
 8000b94:	08023bb8 	.word	0x08023bb8

08000b98 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>:
/*
 * Take the frame buffer semaphore. Blocks until semaphore is available.
 */
void OSWrappers::takeFrameBufferSemaphore()
{
    osSemaphoreAcquire(frame_buffer_sem, osWaitForever);
 8000b98:	4b02      	ldr	r3, [pc, #8]	@ (8000ba4 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv+0xc>)
 8000b9a:	f04f 31ff 	mov.w	r1, #4294967295
 8000b9e:	6818      	ldr	r0, [r3, #0]
 8000ba0:	f006 bcb4 	b.w	800750c <osSemaphoreAcquire>
 8000ba4:	200004c0 	.word	0x200004c0

08000ba8 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>:
/*
 * Release the frame buffer semaphore.
 */
void OSWrappers::giveFrameBufferSemaphore()
{
    osSemaphoreRelease(frame_buffer_sem);
 8000ba8:	4b01      	ldr	r3, [pc, #4]	@ (8000bb0 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv+0x8>)
 8000baa:	6818      	ldr	r0, [r3, #0]
 8000bac:	f006 bcda 	b.w	8007564 <osSemaphoreRelease>
 8000bb0:	200004c0 	.word	0x200004c0

08000bb4 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>:
 * Note must return immediately! This function does not care who has the taken the semaphore,
 * it only serves to make sure that the semaphore is taken by someone.
 */
void OSWrappers::tryTakeFrameBufferSemaphore()
{
    osSemaphoreAcquire(frame_buffer_sem, 0);
 8000bb4:	4b02      	ldr	r3, [pc, #8]	@ (8000bc0 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv+0xc>)
 8000bb6:	2100      	movs	r1, #0
 8000bb8:	6818      	ldr	r0, [r3, #0]
 8000bba:	f006 bca7 	b.w	800750c <osSemaphoreAcquire>
 8000bbe:	bf00      	nop
 8000bc0:	200004c0 	.word	0x200004c0

08000bc4 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>:
 * from ISR.
 *
 * Release the frame buffer semaphore in a way that is safe in interrupt context.
 * Called from ISR.
 */
void OSWrappers::giveFrameBufferSemaphoreFromISR()
 8000bc4:	f7ff bff0 	b.w	8000ba8 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

08000bc8 <_ZN8touchgfx10OSWrappers11signalVSyncEv>:
 * Note This function is called from an ISR, and should (depending on OS) trigger a
 * scheduling.
 */
void OSWrappers::signalVSync()
{
    osMessageQueuePut(vsync_queue, &dummy, 0, 0);
 8000bc8:	4803      	ldr	r0, [pc, #12]	@ (8000bd8 <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x10>)
 8000bca:	4904      	ldr	r1, [pc, #16]	@ (8000bdc <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x14>)
 8000bcc:	6800      	ldr	r0, [r0, #0]
 8000bce:	2300      	movs	r3, #0
 8000bd0:	461a      	mov	r2, r3
 8000bd2:	f006 bd2b 	b.w	800762c <osMessageQueuePut>
 8000bd6:	bf00      	nop
 8000bd8:	200004bc 	.word	0x200004bc
 8000bdc:	20000004 	.word	0x20000004

08000be0 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>:
 *
 * Note This function must first clear the mutex/queue and then wait for the next one to
 * occur.
 */
void OSWrappers::waitForVSync()
{
 8000be0:	b513      	push	{r0, r1, r4, lr}
    uint32_t dummyGet;
    // First make sure the queue is empty, by trying to remove an element with 0 timeout.
    osMessageQueueGet(vsync_queue, &dummyGet, 0, 0);
 8000be2:	4c08      	ldr	r4, [pc, #32]	@ (8000c04 <_ZN8touchgfx10OSWrappers12waitForVSyncEv+0x24>)
 8000be4:	2300      	movs	r3, #0
 8000be6:	461a      	mov	r2, r3
 8000be8:	a901      	add	r1, sp, #4
 8000bea:	6820      	ldr	r0, [r4, #0]
 8000bec:	f006 fd4f 	bl	800768e <osMessageQueueGet>

    // Then, wait for next VSYNC to occur.
    osMessageQueueGet(vsync_queue, &dummyGet, 0, osWaitForever);
 8000bf0:	6820      	ldr	r0, [r4, #0]
 8000bf2:	f04f 33ff 	mov.w	r3, #4294967295
 8000bf6:	2200      	movs	r2, #0
 8000bf8:	a901      	add	r1, sp, #4
 8000bfa:	f006 fd48 	bl	800768e <osMessageQueueGet>
}
 8000bfe:	b002      	add	sp, #8
 8000c00:	bd10      	pop	{r4, pc}
 8000c02:	bf00      	nop
 8000c04:	200004bc 	.word	0x200004bc

08000c08 <_ZN8touchgfx13DMA_Interface5flushEv>:
    virtual void addToQueue(const BlitOp& op);

    /** This function blocks until all DMA transfers in the queue have been completed. */
    virtual void flush()
    {
        waitForFrameBufferSemaphore();
 8000c08:	6803      	ldr	r3, [r0, #0]
 8000c0a:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8000c0c:	4718      	bx	r3

08000c0e <_ZN8STM32DMA10getDMATypeEv>:
     * @return a DMAType value of the concrete DMA_Interface implementation.
     */
    virtual touchgfx::DMAType getDMAType(void)
    {
        return touchgfx::DMA_TYPE_CHROMART;
    }
 8000c0e:	2001      	movs	r0, #1
 8000c10:	4770      	bx	lr

08000c12 <_ZN8STM32DMA18signalDMAInterruptEv>:
     *
     *        Raises a DMA interrupt signal.
     */
    virtual void signalDMAInterrupt()
    {
        executeCompleted();
 8000c12:	6803      	ldr	r3, [r0, #0]
 8000c14:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8000c16:	4718      	bx	r3

08000c18 <DMA2D_XferErrorCallback>:
    }

    static void DMA2D_XferErrorCallback(DMA2D_HandleTypeDef* handle)
    {
        (void)handle; // Unused argument
        while (1)
 8000c18:	e7fe      	b.n	8000c18 <DMA2D_XferErrorCallback>

08000c1a <_ZN8STM32DMA11getBlitCapsEv>:
                                       | BLIT_OP_COPY_WITH_ALPHA
                                       | BLIT_OP_COPY_ARGB8888
                                       | BLIT_OP_COPY_ARGB8888_WITH_ALPHA
                                       | BLIT_OP_COPY_A4
                                       | BLIT_OP_COPY_A8);
}
 8000c1a:	f240 30ef 	movw	r0, #1007	@ 0x3ef
 8000c1e:	4770      	bx	lr

08000c20 <_ZN8STM32DMAD1Ev>:
STM32DMA::~STM32DMA()
 8000c20:	4b05      	ldr	r3, [pc, #20]	@ (8000c38 <_ZN8STM32DMAD1Ev+0x18>)
 8000c22:	6003      	str	r3, [r0, #0]
 */
__STATIC_INLINE void __NVIC_DisableIRQ(IRQn_Type IRQn)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8000c24:	4b05      	ldr	r3, [pc, #20]	@ (8000c3c <_ZN8STM32DMAD1Ev+0x1c>)
 8000c26:	f04f 6280 	mov.w	r2, #67108864	@ 0x4000000
 8000c2a:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
  \details Acts as a special kind of Data Memory Barrier.
           It completes when all explicit memory accesses before this instruction complete.
 */
__STATIC_FORCEINLINE void __DSB(void)
{
  __ASM volatile ("dsb 0xF":::"memory");
 8000c2e:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 8000c32:	f3bf 8f6f 	isb	sy
}
 8000c36:	4770      	bx	lr
 8000c38:	0802450c 	.word	0x0802450c
 8000c3c:	e000e100 	.word	0xe000e100

08000c40 <_ZN8STM32DMAD0Ev>:
STM32DMA::~STM32DMA()
 8000c40:	b510      	push	{r4, lr}
 8000c42:	4604      	mov	r4, r0
}
 8000c44:	f44f 615a 	mov.w	r1, #3488	@ 0xda0
 8000c48:	f7ff ffea 	bl	8000c20 <_ZN8STM32DMAD1Ev>
 8000c4c:	4620      	mov	r0, r4
 8000c4e:	f020 fef2 	bl	8021a36 <_ZdlPvj>
 8000c52:	4620      	mov	r0, r4
 8000c54:	bd10      	pop	{r4, pc}
	...

08000c58 <_ZN8STM32DMA10initializeEv>:
{
 8000c58:	b082      	sub	sp, #8
    __HAL_RCC_DMA2D_CLK_ENABLE();
 8000c5a:	2300      	movs	r3, #0
 8000c5c:	9301      	str	r3, [sp, #4]
 8000c5e:	4b0e      	ldr	r3, [pc, #56]	@ (8000c98 <_ZN8STM32DMA10initializeEv+0x40>)
 8000c60:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8000c62:	f442 0200 	orr.w	r2, r2, #8388608	@ 0x800000
 8000c66:	631a      	str	r2, [r3, #48]	@ 0x30
 8000c68:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8000c6a:	f402 0200 	and.w	r2, r2, #8388608	@ 0x800000
 8000c6e:	9201      	str	r2, [sp, #4]
 8000c70:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_DMA2D_FORCE_RESET();
 8000c72:	691a      	ldr	r2, [r3, #16]
 8000c74:	f442 0200 	orr.w	r2, r2, #8388608	@ 0x800000
 8000c78:	611a      	str	r2, [r3, #16]
    __HAL_RCC_DMA2D_RELEASE_RESET();
 8000c7a:	691a      	ldr	r2, [r3, #16]
 8000c7c:	f422 0200 	bic.w	r2, r2, #8388608	@ 0x800000
 8000c80:	611a      	str	r2, [r3, #16]
    hdma2d.XferCpltCallback = DMA2D_XferCpltCallback;
 8000c82:	4b06      	ldr	r3, [pc, #24]	@ (8000c9c <_ZN8STM32DMA10initializeEv+0x44>)
 8000c84:	4a06      	ldr	r2, [pc, #24]	@ (8000ca0 <_ZN8STM32DMA10initializeEv+0x48>)
 8000c86:	611a      	str	r2, [r3, #16]
    hdma2d.XferErrorCallback = DMA2D_XferErrorCallback;
 8000c88:	4a06      	ldr	r2, [pc, #24]	@ (8000ca4 <_ZN8STM32DMA10initializeEv+0x4c>)
 8000c8a:	615a      	str	r2, [r3, #20]
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8000c8c:	4b06      	ldr	r3, [pc, #24]	@ (8000ca8 <_ZN8STM32DMA10initializeEv+0x50>)
 8000c8e:	f04f 6280 	mov.w	r2, #67108864	@ 0x4000000
 8000c92:	609a      	str	r2, [r3, #8]
}
 8000c94:	b002      	add	sp, #8
 8000c96:	4770      	bx	lr
 8000c98:	40023800 	.word	0x40023800
 8000c9c:	20003068 	.word	0x20003068
 8000ca0:	08000ef9 	.word	0x08000ef9
 8000ca4:	08000c19 	.word	0x08000c19
 8000ca8:	e000e100 	.word	0xe000e100

08000cac <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0>:
inline uint32_t STM32DMA::getChromARTOutputFormat(Bitmap::BitmapFormat format)
 8000cac:	b508      	push	{r3, lr}
    switch (format)
 8000cae:	280a      	cmp	r0, #10
 8000cb0:	d809      	bhi.n	8000cc6 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x1a>
 8000cb2:	e8df f000 	tbb	[pc, r0]
 8000cb6:	1006      	.short	0x1006
 8000cb8:	0808080e 	.word	0x0808080e
 8000cbc:	10101008 	.word	0x10101008
 8000cc0:	10          	.byte	0x10
 8000cc1:	00          	.byte	0x00
        dma2dColorMode = DMA2D_OUTPUT_RGB565;
 8000cc2:	2002      	movs	r0, #2
}
 8000cc4:	bd08      	pop	{r3, pc}
        assert(0 && "Unsupported Format!");
 8000cc6:	4b05      	ldr	r3, [pc, #20]	@ (8000cdc <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x30>)
 8000cc8:	4a05      	ldr	r2, [pc, #20]	@ (8000ce0 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x34>)
 8000cca:	4806      	ldr	r0, [pc, #24]	@ (8000ce4 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x38>)
 8000ccc:	2190      	movs	r1, #144	@ 0x90
 8000cce:	f021 fdef 	bl	80228b0 <__assert_func>
        dma2dColorMode = DMA2D_OUTPUT_ARGB8888;
 8000cd2:	2000      	movs	r0, #0
 8000cd4:	e7f6      	b.n	8000cc4 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x18>
    switch (format)
 8000cd6:	2001      	movs	r0, #1
    return dma2dColorMode;
 8000cd8:	e7f4      	b.n	8000cc4 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x18>
 8000cda:	bf00      	nop
 8000cdc:	08023bfa 	.word	0x08023bfa
 8000ce0:	08023c15 	.word	0x08023c15
 8000ce4:	08023c60 	.word	0x08023c60

08000ce8 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE>:
 * void STM32DMA::setupDataFill(const BlitOp& blitOp) handles blit operation of
 * BLIT_OP_FILL
 * BLIT_OP_FILL_WITH_ALPHA
 */
void STM32DMA::setupDataFill(const BlitOp& blitOp)
{
 8000ce8:	b538      	push	{r3, r4, r5, lr}
 8000cea:	460c      	mov	r4, r1
    uint32_t dma2dOutputColorMode = getChromARTOutputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8000cec:	7f88      	ldrb	r0, [r1, #30]
 8000cee:	f7ff ffdd 	bl	8000cac <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0>

    /* DMA2D OPFCCR register configuration */
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8000cf2:	8aa5      	ldrh	r5, [r4, #20]
 8000cf4:	8ae2      	ldrh	r2, [r4, #22]
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
 8000cf6:	4b16      	ldr	r3, [pc, #88]	@ (8000d50 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x68>)

    /* Configure DMA2D destination address */
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000cf8:	6921      	ldr	r1, [r4, #16]
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
 8000cfa:	6358      	str	r0, [r3, #52]	@ 0x34
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8000cfc:	ea42 4205 	orr.w	r2, r2, r5, lsl #16
 8000d00:	645a      	str	r2, [r3, #68]	@ 0x44

    /* DMA2D OOR register configuration */
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000d02:	8b62      	ldrh	r2, [r4, #26]
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000d04:	63d9      	str	r1, [r3, #60]	@ 0x3c
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000d06:	1b52      	subs	r2, r2, r5
 8000d08:	641a      	str	r2, [r3, #64]	@ 0x40

    if (blitOp.operation == BLIT_OP_FILL_WITH_ALPHA)
 8000d0a:	6825      	ldr	r5, [r4, #0]
 8000d0c:	2d08      	cmp	r5, #8
 8000d0e:	d10e      	bne.n	8000d2e <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x46>
    {
        /* DMA2D BGOR register configuration */
        WRITE_REG(DMA2D->BGOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000d10:	619a      	str	r2, [r3, #24]

        /* DMA2D FGOR register configuration */
        WRITE_REG(DMA2D->FGOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000d12:	611a      	str	r2, [r3, #16]

        /* Write DMA2D BGPFCCR register */
        WRITE_REG(DMA2D->BGPFCCR, dma2dOutputColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8000d14:	6258      	str	r0, [r3, #36]	@ 0x24

        /* Write DMA2D FGPFCCR register */
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | ((blitOp.alpha << 24) & DMA2D_FGPFCCR_ALPHA));
 8000d16:	7f20      	ldrb	r0, [r4, #28]
 8000d18:	4a0e      	ldr	r2, [pc, #56]	@ (8000d54 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x6c>)
 8000d1a:	ea42 6200 	orr.w	r2, r2, r0, lsl #24
 8000d1e:	61da      	str	r2, [r3, #28]
     *
     * @return The result of the operation.
     */
    operator uint32_t() const
    {
        return color;
 8000d20:	68e2      	ldr	r2, [r4, #12]

        /* DMA2D FGCOLR register configuration */
        WRITE_REG(DMA2D->FGCOLR, blitOp.color);
 8000d22:	621a      	str	r2, [r3, #32]

        /* Configure DMA2D source address */
        WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_M2M_BLEND | DMA2D_IT_CE | DMA2D_IT_TE));
 8000d24:	4a0c      	ldr	r2, [pc, #48]	@ (8000d58 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x70>)
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000d26:	6159      	str	r1, [r3, #20]
        WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000d28:	60d9      	str	r1, [r3, #12]

        /* Set color */
        WRITE_REG(DMA2D->OCOLR, ((blitOp.color >> 8) & 0xF800) | ((blitOp.color >> 5) & 0x07E0) | ((blitOp.color >> 3) & 0x001F));

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_R2M | DMA2D_IT_CE | DMA2D_IT_TE));
 8000d2a:	601a      	str	r2, [r3, #0]
    }
}
 8000d2c:	bd38      	pop	{r3, r4, r5, pc}
        WRITE_REG(DMA2D->FGOR, 0);
 8000d2e:	2200      	movs	r2, #0
        WRITE_REG(DMA2D->FGPFCCR, dma2dOutputColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_FGPFCCR_AM_Pos));
 8000d30:	61d8      	str	r0, [r3, #28]
        WRITE_REG(DMA2D->FGOR, 0);
 8000d32:	611a      	str	r2, [r3, #16]
 8000d34:	68e1      	ldr	r1, [r4, #12]
        WRITE_REG(DMA2D->OCOLR, ((blitOp.color >> 8) & 0xF800) | ((blitOp.color >> 5) & 0x07E0) | ((blitOp.color >> 3) & 0x001F));
 8000d36:	0a0a      	lsrs	r2, r1, #8
 8000d38:	0948      	lsrs	r0, r1, #5
 8000d3a:	f402 4278 	and.w	r2, r2, #63488	@ 0xf800
 8000d3e:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8000d42:	4302      	orrs	r2, r0
 8000d44:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 8000d48:	430a      	orrs	r2, r1
 8000d4a:	639a      	str	r2, [r3, #56]	@ 0x38
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_R2M | DMA2D_IT_CE | DMA2D_IT_TE));
 8000d4c:	4a03      	ldr	r2, [pc, #12]	@ (8000d5c <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x74>)
 8000d4e:	e7ec      	b.n	8000d2a <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x42>
 8000d50:	4002b000 	.word	0x4002b000
 8000d54:	00010009 	.word	0x00010009
 8000d58:	00022301 	.word	0x00022301
 8000d5c:	00032301 	.word	0x00032301

08000d60 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0>:
inline uint32_t STM32DMA::getChromARTInputFormat(Bitmap::BitmapFormat format)
 8000d60:	b508      	push	{r3, lr}
    switch (format)
 8000d62:	280b      	cmp	r0, #11
 8000d64:	d80b      	bhi.n	8000d7e <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x1e>
 8000d66:	e8df f000 	tbb	[pc, r0]
 8000d6a:	1206      	.short	0x1206
 8000d6c:	0a0a0a10 	.word	0x0a0a0a10
 8000d70:	0808080a 	.word	0x0808080a
 8000d74:	0808      	.short	0x0808
        dma2dColorMode = DMA2D_INPUT_RGB565;
 8000d76:	2002      	movs	r0, #2
}
 8000d78:	bd08      	pop	{r3, pc}
        dma2dColorMode = DMA2D_INPUT_L8;
 8000d7a:	2005      	movs	r0, #5
        break;
 8000d7c:	e7fc      	b.n	8000d78 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x18>
        assert(0 && "Unsupported Format!");
 8000d7e:	4b05      	ldr	r3, [pc, #20]	@ (8000d94 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x34>)
 8000d80:	4a05      	ldr	r2, [pc, #20]	@ (8000d98 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x38>)
 8000d82:	4806      	ldr	r0, [pc, #24]	@ (8000d9c <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x3c>)
 8000d84:	216f      	movs	r1, #111	@ 0x6f
 8000d86:	f021 fd93 	bl	80228b0 <__assert_func>
        dma2dColorMode = DMA2D_INPUT_ARGB8888;
 8000d8a:	2000      	movs	r0, #0
 8000d8c:	e7f4      	b.n	8000d78 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x18>
    switch (format)
 8000d8e:	2001      	movs	r0, #1
    return dma2dColorMode;
 8000d90:	e7f2      	b.n	8000d78 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x18>
 8000d92:	bf00      	nop
 8000d94:	08023bfa 	.word	0x08023bfa
 8000d98:	08023cd1 	.word	0x08023cd1
 8000d9c:	08023c60 	.word	0x08023c60

08000da0 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE>:
{
 8000da0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
 8000da4:	f891 801d 	ldrb.w	r8, [r1, #29]
{
 8000da8:	460c      	mov	r4, r1
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
 8000daa:	4640      	mov	r0, r8
 8000dac:	f7ff ffd8 	bl	8000d60 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0>
    uint32_t dma2dBackgroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8000db0:	7fa7      	ldrb	r7, [r4, #30]
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
 8000db2:	4605      	mov	r5, r0
    uint32_t dma2dBackgroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8000db4:	4638      	mov	r0, r7
 8000db6:	f7ff ffd3 	bl	8000d60 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0>
 8000dba:	4606      	mov	r6, r0
    uint32_t dma2dOutputColorMode = getChromARTOutputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8000dbc:	4638      	mov	r0, r7
 8000dbe:	f7ff ff75 	bl	8000cac <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0>
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000dc2:	8aa1      	ldrh	r1, [r4, #20]
 8000dc4:	8b62      	ldrh	r2, [r4, #26]
 8000dc6:	4b44      	ldr	r3, [pc, #272]	@ (8000ed8 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x138>)
 8000dc8:	1a52      	subs	r2, r2, r1
 8000dca:	641a      	str	r2, [r3, #64]	@ 0x40
    WRITE_REG(DMA2D->BGOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000dcc:	619a      	str	r2, [r3, #24]
    WRITE_REG(DMA2D->FGOR, blitOp.srcLoopStride - blitOp.nSteps);
 8000dce:	8b22      	ldrh	r2, [r4, #24]
 8000dd0:	1a52      	subs	r2, r2, r1
 8000dd2:	611a      	str	r2, [r3, #16]
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8000dd4:	8ae2      	ldrh	r2, [r4, #22]
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
 8000dd6:	6358      	str	r0, [r3, #52]	@ 0x34
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8000dd8:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 8000ddc:	645a      	str	r2, [r3, #68]	@ 0x44
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000dde:	6921      	ldr	r1, [r4, #16]
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pSrc));
 8000de0:	6862      	ldr	r2, [r4, #4]
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000de2:	63d9      	str	r1, [r3, #60]	@ 0x3c
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pSrc));
 8000de4:	60da      	str	r2, [r3, #12]
    switch (blitOp.operation)
 8000de6:	6820      	ldr	r0, [r4, #0]
 8000de8:	2880      	cmp	r0, #128	@ 0x80
 8000dea:	d028      	beq.n	8000e3e <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x9e>
 8000dec:	7f22      	ldrb	r2, [r4, #28]
 8000dee:	d80f      	bhi.n	8000e10 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x70>
 8000df0:	2820      	cmp	r0, #32
 8000df2:	d067      	beq.n	8000ec4 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x124>
 8000df4:	2840      	cmp	r0, #64	@ 0x40
 8000df6:	d065      	beq.n	8000ec4 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x124>
 8000df8:	2804      	cmp	r0, #4
 8000dfa:	d01a      	beq.n	8000e32 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x92>
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000dfc:	4b36      	ldr	r3, [pc, #216]	@ (8000ed8 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x138>)
 8000dfe:	ea45 6502 	orr.w	r5, r5, r2, lsl #24
 8000e02:	f445 3500 	orr.w	r5, r5, #131072	@ 0x20000
        if (blitOp.srcFormat != blitOp.dstFormat)
 8000e06:	45b8      	cmp	r8, r7
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000e08:	61dd      	str	r5, [r3, #28]
        if (blitOp.srcFormat != blitOp.dstFormat)
 8000e0a:	d061      	beq.n	8000ed0 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x130>
            WRITE_REG(DMA2D->CR, DMA2D_M2M_PFC | DMA2D_IT_TC | DMA2D_CR_START | DMA2D_IT_CE | DMA2D_IT_TE);
 8000e0c:	4a33      	ldr	r2, [pc, #204]	@ (8000edc <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x13c>)
 8000e0e:	e044      	b.n	8000e9a <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xfa>
    switch (blitOp.operation)
 8000e10:	f5b0 7f80 	cmp.w	r0, #256	@ 0x100
 8000e14:	d004      	beq.n	8000e20 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x80>
 8000e16:	f5b0 7f00 	cmp.w	r0, #512	@ 0x200
 8000e1a:	d1ef      	bne.n	8000dfc <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x5c>
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000e1c:	4830      	ldr	r0, [pc, #192]	@ (8000ee0 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x140>)
 8000e1e:	e000      	b.n	8000e22 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x82>
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A4 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000e20:	4830      	ldr	r0, [pc, #192]	@ (8000ee4 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x144>)
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000e22:	ea40 6202 	orr.w	r2, r0, r2, lsl #24
 8000e26:	61da      	str	r2, [r3, #28]
 8000e28:	68e2      	ldr	r2, [r4, #12]
        WRITE_REG(DMA2D->FGCOLR, blitOp.color);
 8000e2a:	621a      	str	r2, [r3, #32]
        WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8000e2c:	625e      	str	r6, [r3, #36]	@ 0x24
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000e2e:	6159      	str	r1, [r3, #20]
 8000e30:	e032      	b.n	8000e98 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xf8>
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000e32:	ea45 6202 	orr.w	r2, r5, r2, lsl #24
 8000e36:	f442 3200 	orr.w	r2, r2, #131072	@ 0x20000
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000e3a:	61da      	str	r2, [r3, #28]
 8000e3c:	e7f6      	b.n	8000e2c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x8c>
            const clutData_t* const palette = reinterpret_cast<const clutData_t*>(blitOp.pClut);
 8000e3e:	68a0      	ldr	r0, [r4, #8]
            WRITE_REG(DMA2D->FGCMAR, reinterpret_cast<uint32_t>(&palette->data));
 8000e40:	1d02      	adds	r2, r0, #4
 8000e42:	62da      	str	r2, [r3, #44]	@ 0x2c
            WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000e44:	7f22      	ldrb	r2, [r4, #28]
 8000e46:	ea45 6502 	orr.w	r5, r5, r2, lsl #24
 8000e4a:	f445 3500 	orr.w	r5, r5, #131072	@ 0x20000
 8000e4e:	61dd      	str	r5, [r3, #28]
            WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8000e50:	625e      	str	r6, [r3, #36]	@ 0x24
            WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000e52:	6159      	str	r1, [r3, #20]
            switch ((Bitmap::ClutFormat)palette->format)
 8000e54:	7801      	ldrb	r1, [r0, #0]
 8000e56:	b141      	cbz	r1, 8000e6a <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xca>
 8000e58:	2901      	cmp	r1, #1
 8000e5a:	d021      	beq.n	8000ea0 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x100>
                assert(0 && "Unsupported format");
 8000e5c:	4b22      	ldr	r3, [pc, #136]	@ (8000ee8 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x148>)
 8000e5e:	4a23      	ldr	r2, [pc, #140]	@ (8000eec <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x14c>)
 8000e60:	4823      	ldr	r0, [pc, #140]	@ (8000ef0 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x150>)
 8000e62:	f44f 718d 	mov.w	r1, #282	@ 0x11a
 8000e66:	f021 fd23 	bl	80228b0 <__assert_func>
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_ARGB8888 << DMA2D_FGPFCCR_CCM_Pos)));
 8000e6a:	69da      	ldr	r2, [r3, #28]
 8000e6c:	8841      	ldrh	r1, [r0, #2]
 8000e6e:	f422 427f 	bic.w	r2, r2, #65280	@ 0xff00
 8000e72:	3901      	subs	r1, #1
 8000e74:	f022 0210 	bic.w	r2, r2, #16
 8000e78:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
 8000e7c:	61da      	str	r2, [r3, #28]
            bool blend = true;
 8000e7e:	2101      	movs	r1, #1
            SET_BIT(DMA2D->FGPFCCR, DMA2D_FGPFCCR_START);
 8000e80:	4b15      	ldr	r3, [pc, #84]	@ (8000ed8 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x138>)
 8000e82:	69da      	ldr	r2, [r3, #28]
 8000e84:	f042 0220 	orr.w	r2, r2, #32
 8000e88:	61da      	str	r2, [r3, #28]
            while ((READ_REG(DMA2D->FGPFCCR) & DMA2D_FGPFCCR_START) != 0U)
 8000e8a:	69da      	ldr	r2, [r3, #28]
 8000e8c:	0692      	lsls	r2, r2, #26
 8000e8e:	d4fc      	bmi.n	8000e8a <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xea>
            DMA2D->IFCR = (DMA2D_FLAG_CTC);
 8000e90:	2210      	movs	r2, #16
 8000e92:	609a      	str	r2, [r3, #8]
            if (blend)
 8000e94:	2900      	cmp	r1, #0
 8000e96:	d0b9      	beq.n	8000e0c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x6c>
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START | DMA2D_IT_CE | DMA2D_IT_TE);
 8000e98:	4a16      	ldr	r2, [pc, #88]	@ (8000ef4 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x154>)
            WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_IT_TC | DMA2D_CR_START | DMA2D_IT_CE | DMA2D_IT_TE);
 8000e9a:	601a      	str	r2, [r3, #0]
}
 8000e9c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
                if (blitOp.alpha == 255)
 8000ea0:	f1b2 01ff 	subs.w	r1, r2, #255	@ 0xff
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
 8000ea4:	69da      	ldr	r2, [r3, #28]
 8000ea6:	8840      	ldrh	r0, [r0, #2]
 8000ea8:	f422 427f 	bic.w	r2, r2, #65280	@ 0xff00
 8000eac:	f100 30ff 	add.w	r0, r0, #4294967295
 8000eb0:	f022 0210 	bic.w	r2, r2, #16
 8000eb4:	ea42 2200 	orr.w	r2, r2, r0, lsl #8
 8000eb8:	f042 0210 	orr.w	r2, r2, #16
                if (blitOp.alpha == 255)
 8000ebc:	bf18      	it	ne
 8000ebe:	2101      	movne	r1, #1
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
 8000ec0:	61da      	str	r2, [r3, #28]
                break;
 8000ec2:	e7dd      	b.n	8000e80 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xe0>
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000ec4:	ea45 6202 	orr.w	r2, r5, r2, lsl #24
 8000ec8:	4b03      	ldr	r3, [pc, #12]	@ (8000ed8 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x138>)
 8000eca:	f442 3200 	orr.w	r2, r2, #131072	@ 0x20000
 8000ece:	e7b4      	b.n	8000e3a <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x9a>
            WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_IT_TC | DMA2D_CR_START | DMA2D_IT_CE | DMA2D_IT_TE);
 8000ed0:	f242 3201 	movw	r2, #8961	@ 0x2301
 8000ed4:	e7e1      	b.n	8000e9a <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xfa>
 8000ed6:	bf00      	nop
 8000ed8:	4002b000 	.word	0x4002b000
 8000edc:	00012301 	.word	0x00012301
 8000ee0:	00020009 	.word	0x00020009
 8000ee4:	0002000a 	.word	0x0002000a
 8000ee8:	08023d1b 	.word	0x08023d1b
 8000eec:	08023d35 	.word	0x08023d35
 8000ef0:	08023c60 	.word	0x08023c60
 8000ef4:	00022301 	.word	0x00022301

08000ef8 <DMA2D_XferCpltCallback>:
        return instance;
 8000ef8:	4b02      	ldr	r3, [pc, #8]	@ (8000f04 <DMA2D_XferCpltCallback+0xc>)
 8000efa:	681b      	ldr	r3, [r3, #0]
 8000efc:	6858      	ldr	r0, [r3, #4]
        dma.signalDMAInterrupt();
 8000efe:	6803      	ldr	r3, [r0, #0]
 8000f00:	695b      	ldr	r3, [r3, #20]
 8000f02:	4718      	bx	r3
 8000f04:	20013f2c 	.word	0x20013f2c

08000f08 <_ZN8STM32DMAC1Ev>:
STM32DMA::STM32DMA()
 8000f08:	b570      	push	{r4, r5, r6, lr}
 8000f0a:	4604      	mov	r4, r0
    : DMA_Interface(dma_queue), dma_queue(queue_storage, sizeof(queue_storage) / sizeof(queue_storage[0]))
 8000f0c:	4625      	mov	r5, r4
 8000f0e:	4b0a      	ldr	r3, [pc, #40]	@ (8000f38 <_ZN8STM32DMAC1Ev+0x30>)
 8000f10:	300c      	adds	r0, #12
     * Constructs a DMA Interface object.
     *
     * @param [in] dmaQueue Reference to the queue of DMA operations.
     */
    DMA_Interface(DMA_Queue& dmaQueue)
        : queue(dmaQueue), isRunning(false), isAllowed(false)
 8000f12:	2600      	movs	r6, #0
 8000f14:	6060      	str	r0, [r4, #4]
 8000f16:	7226      	strb	r6, [r4, #8]
 8000f18:	7266      	strb	r6, [r4, #9]
 8000f1a:	f845 3b20 	str.w	r3, [r5], #32
 8000f1e:	2260      	movs	r2, #96	@ 0x60
 8000f20:	4629      	mov	r1, r5
 8000f22:	f00a fa29 	bl	800b378 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>
 8000f26:	f504 635a 	add.w	r3, r4, #3488	@ 0xda0
        : color(0)
 8000f2a:	60ee      	str	r6, [r5, #12]
 8000f2c:	3524      	adds	r5, #36	@ 0x24
 8000f2e:	429d      	cmp	r5, r3
 8000f30:	d1fb      	bne.n	8000f2a <_ZN8STM32DMAC1Ev+0x22>
}
 8000f32:	4620      	mov	r0, r4
 8000f34:	bd70      	pop	{r4, r5, r6, pc}
 8000f36:	bf00      	nop
 8000f38:	0802450c 	.word	0x0802450c

08000f3c <_ZN8touchgfx5paint8tearDownEv>:
 * @brief Waits until previous DMA drawing operation has finished
 */
void tearDown()
{
    /* Wait for DMA2D to finish last run */
    while ((READ_REG(DMA2D->CR) & DMA2D_CR_START) != 0U);
 8000f3c:	4b03      	ldr	r3, [pc, #12]	@ (8000f4c <_ZN8touchgfx5paint8tearDownEv+0x10>)
 8000f3e:	681a      	ldr	r2, [r3, #0]
 8000f40:	07d2      	lsls	r2, r2, #31
 8000f42:	d4fc      	bmi.n	8000f3e <_ZN8touchgfx5paint8tearDownEv+0x2>

    /* Clear transfer flags */
    WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC | DMA2D_FLAG_CE | DMA2D_FLAG_TE);
 8000f44:	2223      	movs	r2, #35	@ 0x23
 8000f46:	609a      	str	r2, [r3, #8]
}
 8000f48:	4770      	bx	lr
 8000f4a:	bf00      	nop
 8000f4c:	4002b000 	.word	0x4002b000

08000f50 <_ZN8touchgfx5paint9flushLineEPmi>:
 *
 * @brief Flushes decoded RGB pixels when rendering compressed images
 */
void flushLine(uint32_t* addr, int sizebytes)
{
}
 8000f50:	4770      	bx	lr
	...

08000f54 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm>:
 *
 * @brief Renders Canvas Widget chunks using DMA.
 * This functions will not generate an interrupt, and will not affect the DMA queue.
 */
void lineFromColor(uint16_t* const ptr, const unsigned count, const uint32_t color, const uint8_t alpha, const uint32_t color565)
{
 8000f54:	b530      	push	{r4, r5, lr}
    /* Wait for DMA2D to finish last run */
    while ((READ_REG(DMA2D->CR) & DMA2D_CR_START) != 0U);
 8000f56:	4c0f      	ldr	r4, [pc, #60]	@ (8000f94 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x40>)
 8000f58:	6825      	ldr	r5, [r4, #0]
 8000f5a:	07ed      	lsls	r5, r5, #31
 8000f5c:	d4fc      	bmi.n	8000f58 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x4>

    /* Clear transfer flags */
    WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC | DMA2D_FLAG_CE | DMA2D_FLAG_TE);
 8000f5e:	2523      	movs	r5, #35	@ 0x23

    /* DMA2D OPFCCR register configuration */
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
 8000f60:	0409      	lsls	r1, r1, #16
    WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC | DMA2D_FLAG_CE | DMA2D_FLAG_TE);
 8000f62:	60a5      	str	r5, [r4, #8]
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
 8000f64:	f041 0101 	orr.w	r1, r1, #1
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
 8000f68:	2502      	movs	r5, #2

    /* Configure DMA2D destination address */
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(ptr));

    if (alpha < 0xFF)
 8000f6a:	2bff      	cmp	r3, #255	@ 0xff
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
 8000f6c:	6365      	str	r5, [r4, #52]	@ 0x34
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
 8000f6e:	6461      	str	r1, [r4, #68]	@ 0x44
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(ptr));
 8000f70:	63e0      	str	r0, [r4, #60]	@ 0x3c
    if (alpha < 0xFF)
 8000f72:	d00a      	beq.n	8000f8a <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x36>
    {
        /* Write DMA2D BGPFCCR register */
        WRITE_REG(DMA2D->BGPFCCR, DMA2D_OUTPUT_RGB565 | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));

        /* Write DMA2D FGPFCCR register */
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (alpha << DMA2D_FGPFCCR_ALPHA_Pos));
 8000f74:	4908      	ldr	r1, [pc, #32]	@ (8000f98 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x44>)
        WRITE_REG(DMA2D->BGPFCCR, DMA2D_OUTPUT_RGB565 | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8000f76:	6265      	str	r5, [r4, #36]	@ 0x24
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (alpha << DMA2D_FGPFCCR_ALPHA_Pos));
 8000f78:	ea41 6303 	orr.w	r3, r1, r3, lsl #24
 8000f7c:	61e3      	str	r3, [r4, #28]

        /* Configure DMA2D source address */
        WRITE_REG(DMA2D->FGMAR, (uint32_t)ptr);

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_CR_START | DMA2D_M2M_BLEND));
 8000f7e:	4b07      	ldr	r3, [pc, #28]	@ (8000f9c <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x48>)
        WRITE_REG(DMA2D->FGCOLR, color);
 8000f80:	6222      	str	r2, [r4, #32]
        WRITE_REG(DMA2D->BGMAR, (uint32_t)ptr);
 8000f82:	6160      	str	r0, [r4, #20]
        WRITE_REG(DMA2D->FGMAR, (uint32_t)ptr);
 8000f84:	60e0      	str	r0, [r4, #12]

        /* Set color */
        WRITE_REG(DMA2D->OCOLR, color565);

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_CR_START | DMA2D_R2M));
 8000f86:	6023      	str	r3, [r4, #0]
    }
}
 8000f88:	bd30      	pop	{r4, r5, pc}
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_OUTPUT_RGB565 | (DMA2D_NO_MODIF_ALPHA << DMA2D_FGPFCCR_AM_Pos));
 8000f8a:	61e5      	str	r5, [r4, #28]
        WRITE_REG(DMA2D->OCOLR, color565);
 8000f8c:	9b03      	ldr	r3, [sp, #12]
 8000f8e:	63a3      	str	r3, [r4, #56]	@ 0x38
        WRITE_REG(DMA2D->CR, (DMA2D_CR_START | DMA2D_R2M));
 8000f90:	4b03      	ldr	r3, [pc, #12]	@ (8000fa0 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x4c>)
 8000f92:	e7f8      	b.n	8000f86 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x32>
 8000f94:	4002b000 	.word	0x4002b000
 8000f98:	00010009 	.word	0x00010009
 8000f9c:	00020001 	.word	0x00020001
 8000fa0:	00030001 	.word	0x00030001

08000fa4 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh>:

void lineFromRGB565(uint16_t* const ptr, const uint16_t* const data, const unsigned count, const uint8_t alpha)
{
 8000fa4:	b530      	push	{r4, r5, lr}
    /* Wait for DMA2D to finish last run */
    while ((READ_REG(DMA2D->CR) & DMA2D_CR_START) != 0U);
 8000fa6:	4c0e      	ldr	r4, [pc, #56]	@ (8000fe0 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh+0x3c>)
 8000fa8:	6825      	ldr	r5, [r4, #0]
 8000faa:	07ed      	lsls	r5, r5, #31
 8000fac:	d4fc      	bmi.n	8000fa8 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh+0x4>

    /* Clear transfer flags */
    WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC | DMA2D_FLAG_CE | DMA2D_FLAG_TE);
 8000fae:	2523      	movs	r5, #35	@ 0x23

    /* DMA2D OPFCCR register configuration */
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
 8000fb0:	0412      	lsls	r2, r2, #16
    WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC | DMA2D_FLAG_CE | DMA2D_FLAG_TE);
 8000fb2:	60a5      	str	r5, [r4, #8]
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
 8000fb4:	f042 0201 	orr.w	r2, r2, #1
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
 8000fb8:	2502      	movs	r5, #2
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(ptr));

    /* Configure DMA2D source address */
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(data));

    if (alpha < 0xFF)
 8000fba:	2bff      	cmp	r3, #255	@ 0xff
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
 8000fbc:	6365      	str	r5, [r4, #52]	@ 0x34
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
 8000fbe:	6462      	str	r2, [r4, #68]	@ 0x44
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(ptr));
 8000fc0:	63e0      	str	r0, [r4, #60]	@ 0x3c
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(data));
 8000fc2:	60e1      	str	r1, [r4, #12]
    if (alpha < 0xFF)
 8000fc4:	d008      	beq.n	8000fd8 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh+0x34>
    {
        /* Set DMA2D color mode and alpha mode */
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_RGB565 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (alpha << DMA2D_FGPFCCR_ALPHA_Pos));
 8000fc6:	061b      	lsls	r3, r3, #24
 8000fc8:	f043 1302 	orr.w	r3, r3, #131074	@ 0x20002
 8000fcc:	61e3      	str	r3, [r4, #28]

        /* Configure DMA2D Stream source2 address */
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(ptr));

        /* Set DMA2D mode */
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_CR_START);
 8000fce:	4b05      	ldr	r3, [pc, #20]	@ (8000fe4 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh+0x40>)
        WRITE_REG(DMA2D->BGPFCCR, DMA2D_INPUT_RGB565 | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8000fd0:	6265      	str	r5, [r4, #36]	@ 0x24
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(ptr));
 8000fd2:	6160      	str	r0, [r4, #20]
    {
        /* Set DMA2D color mode and alpha mode */
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_RGB565 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (alpha << DMA2D_FGPFCCR_ALPHA_Pos));

        /* Start DMA2D : M2M Mode */
        WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_CR_START);
 8000fd4:	6023      	str	r3, [r4, #0]
    }
}
 8000fd6:	bd30      	pop	{r4, r5, pc}
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_RGB565 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (alpha << DMA2D_FGPFCCR_ALPHA_Pos));
 8000fd8:	4b03      	ldr	r3, [pc, #12]	@ (8000fe8 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh+0x44>)
 8000fda:	61e3      	str	r3, [r4, #28]
        WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_CR_START);
 8000fdc:	2301      	movs	r3, #1
 8000fde:	e7f9      	b.n	8000fd4 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh+0x30>
 8000fe0:	4002b000 	.word	0x4002b000
 8000fe4:	00020001 	.word	0x00020001
 8000fe8:	ff020002 	.word	0xff020002

08000fec <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh>:

void lineFromARGB8888(uint16_t* const ptr, const uint32_t* const data, const unsigned count, const uint8_t alpha)
{
 8000fec:	b530      	push	{r4, r5, lr}
    /* Wait for DMA2D to finish last run */
    while ((READ_REG(DMA2D->CR) & DMA2D_CR_START) != 0U);
 8000fee:	4c0b      	ldr	r4, [pc, #44]	@ (800101c <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh+0x30>)
 8000ff0:	6825      	ldr	r5, [r4, #0]
 8000ff2:	07ed      	lsls	r5, r5, #31
 8000ff4:	d4fc      	bmi.n	8000ff0 <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh+0x4>

    /* Clear transfer flags */
    WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC | DMA2D_FLAG_CE | DMA2D_FLAG_TE);
 8000ff6:	2523      	movs	r5, #35	@ 0x23

    /* DMA2D OPFCCR register configuration */
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
 8000ff8:	0412      	lsls	r2, r2, #16

    /* Configure DMA2D source address */
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(data));

    /* Set DMA2D color mode and alpha mode */
    WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_ARGB8888 | (DMA2D_COMBINE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (alpha << DMA2D_FGPFCCR_ALPHA_Pos));
 8000ffa:	061b      	lsls	r3, r3, #24
    WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC | DMA2D_FLAG_CE | DMA2D_FLAG_TE);
 8000ffc:	60a5      	str	r5, [r4, #8]
    WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_ARGB8888 | (DMA2D_COMBINE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (alpha << DMA2D_FGPFCCR_ALPHA_Pos));
 8000ffe:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
 8001002:	2502      	movs	r5, #2
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
 8001004:	f042 0201 	orr.w	r2, r2, #1
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
 8001008:	6365      	str	r5, [r4, #52]	@ 0x34
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
 800100a:	6462      	str	r2, [r4, #68]	@ 0x44
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(ptr));
 800100c:	63e0      	str	r0, [r4, #60]	@ 0x3c
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(data));
 800100e:	60e1      	str	r1, [r4, #12]
    WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_ARGB8888 | (DMA2D_COMBINE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (alpha << DMA2D_FGPFCCR_ALPHA_Pos));
 8001010:	61e3      	str	r3, [r4, #28]

    /* Configure DMA2D Stream source2 address */
    WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(ptr));

    /* Set DMA2D mode */
    WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_CR_START);
 8001012:	4b03      	ldr	r3, [pc, #12]	@ (8001020 <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh+0x34>)
    WRITE_REG(DMA2D->BGPFCCR, DMA2D_INPUT_RGB565 | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8001014:	6265      	str	r5, [r4, #36]	@ 0x24
    WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(ptr));
 8001016:	6160      	str	r0, [r4, #20]
    WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_CR_START);
 8001018:	6023      	str	r3, [r4, #0]
}
 800101a:	bd30      	pop	{r4, r5, pc}
 800101c:	4002b000 	.word	0x4002b000
 8001020:	00020001 	.word	0x00020001

08001024 <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    };

    virtual uint16_t capacity() const
    {
        return NUMBER_OF_ELEMENTS;
    }
 8001024:	2001      	movs	r0, #1
 8001026:	4770      	bx	lr

08001028 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:

    virtual uint32_t element_size()
    {
        return sizeof(stBlocks[0]);
    }
 8001028:	200c      	movs	r0, #12
 800102a:	4770      	bx	lr

0800102c <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE7elementEt>:

protected:
    virtual void* element(uint16_t index)
    {
        return &stBlocks[index];
 800102c:	230c      	movs	r3, #12
 800102e:	fb03 0001 	mla	r0, r3, r1, r0
    }
 8001032:	3008      	adds	r0, #8
 8001034:	4770      	bx	lr

08001036 <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE7elementEt>:

    virtual const void* element(uint16_t index) const
    {
        return &stBlocks[index];
 8001036:	230c      	movs	r3, #12
 8001038:	fb03 0001 	mla	r0, r3, r1, r0
    }
 800103c:	3008      	adds	r0, #8
 800103e:	4770      	bx	lr

08001040 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    }
 8001040:	2001      	movs	r0, #1
 8001042:	4770      	bx	lr

08001044 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    }
 8001044:	f640 60e8 	movw	r0, #3816	@ 0xee8
 8001048:	4770      	bx	lr

0800104a <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 800104a:	f640 63e8 	movw	r3, #3816	@ 0xee8
 800104e:	fb03 0001 	mla	r0, r3, r1, r0
    }
 8001052:	3008      	adds	r0, #8
 8001054:	4770      	bx	lr

08001056 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8001056:	f640 63e8 	movw	r3, #3816	@ 0xee8
 800105a:	fb03 0001 	mla	r0, r3, r1, r0
    }
 800105e:	3008      	adds	r0, #8
 8001060:	4770      	bx	lr

08001062 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    }
 8001062:	2001      	movs	r0, #1
 8001064:	4770      	bx	lr

08001066 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    }
 8001066:	2010      	movs	r0, #16
 8001068:	4770      	bx	lr

0800106a <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 800106a:	eb00 1001 	add.w	r0, r0, r1, lsl #4
    }
 800106e:	3008      	adds	r0, #8
 8001070:	4770      	bx	lr

08001072 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8001072:	eb00 1001 	add.w	r0, r0, r1, lsl #4
    }
 8001076:	3008      	adds	r0, #8
 8001078:	4770      	bx	lr

0800107a <_ZN16FrontendHeapBase15gotoStartScreenER19FrontendApplication>:
     */
    typedef touchgfx::meta::select_type_maxsize< GeneratedTransitionTypes >::type MaxGeneratedTransitionType;

    virtual void gotoStartScreen(FrontendApplication& app)
    {
        app.gotoScreen1ScreenNoTransition();
 800107a:	4608      	mov	r0, r1
 800107c:	f001 be66 	b.w	8002d4c <_ZN23FrontendApplicationBase29gotoScreen1ScreenNoTransitionEv>

08001080 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev>:
class Partition : public AbstractPartition
 8001080:	b510      	push	{r4, lr}
 8001082:	4b03      	ldr	r3, [pc, #12]	@ (8001090 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
 8001084:	6003      	str	r3, [r0, #0]
 8001086:	4604      	mov	r4, r0
 8001088:	f008 ff94 	bl	8009fb4 <_ZN8touchgfx17AbstractPartitionD1Ev>
 800108c:	4620      	mov	r0, r4
 800108e:	bd10      	pop	{r4, pc}
 8001090:	080245c4 	.word	0x080245c4

08001094 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED0Ev>:
 8001094:	b510      	push	{r4, lr}
 8001096:	4604      	mov	r4, r0
 8001098:	f7ff fff2 	bl	8001080 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev>
 800109c:	4620      	mov	r0, r4
 800109e:	2114      	movs	r1, #20
 80010a0:	f020 fcc9 	bl	8021a36 <_ZdlPvj>
 80010a4:	4620      	mov	r0, r4
 80010a6:	bd10      	pop	{r4, pc}

080010a8 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EED1Ev>:
 80010a8:	b510      	push	{r4, lr}
 80010aa:	4b03      	ldr	r3, [pc, #12]	@ (80010b8 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
 80010ac:	6003      	str	r3, [r0, #0]
 80010ae:	4604      	mov	r4, r0
 80010b0:	f008 ff80 	bl	8009fb4 <_ZN8touchgfx17AbstractPartitionD1Ev>
 80010b4:	4620      	mov	r0, r4
 80010b6:	bd10      	pop	{r4, pc}
 80010b8:	08024590 	.word	0x08024590

080010bc <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EED0Ev>:
 80010bc:	b510      	push	{r4, lr}
 80010be:	4604      	mov	r4, r0
 80010c0:	f7ff fff2 	bl	80010a8 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 80010c4:	4620      	mov	r0, r4
 80010c6:	f44f 616f 	mov.w	r1, #3824	@ 0xef0
 80010ca:	f020 fcb4 	bl	8021a36 <_ZdlPvj>
 80010ce:	4620      	mov	r0, r4
 80010d0:	bd10      	pop	{r4, pc}
	...

080010d4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>:
 80010d4:	b510      	push	{r4, lr}
 80010d6:	4b03      	ldr	r3, [pc, #12]	@ (80010e4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
 80010d8:	6003      	str	r3, [r0, #0]
 80010da:	4604      	mov	r4, r0
 80010dc:	f008 ff6a 	bl	8009fb4 <_ZN8touchgfx17AbstractPartitionD1Ev>
 80010e0:	4620      	mov	r0, r4
 80010e2:	bd10      	pop	{r4, pc}
 80010e4:	0802455c 	.word	0x0802455c

080010e8 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EED0Ev>:
 80010e8:	b510      	push	{r4, lr}
 80010ea:	4604      	mov	r4, r0
 80010ec:	f7ff fff2 	bl	80010d4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 80010f0:	4620      	mov	r0, r4
 80010f2:	2118      	movs	r1, #24
 80010f4:	f020 fc9f 	bl	8021a36 <_ZdlPvj>
 80010f8:	4620      	mov	r0, r4
 80010fa:	bd10      	pop	{r4, pc}

080010fc <_ZN12FrontendHeapD1Ev>:
#ifndef FRONTENDHEAP_HPP
#define FRONTENDHEAP_HPP

#include <gui_generated/common/FrontendHeapBase.hpp>

class FrontendHeap : public FrontendHeapBase
 80010fc:	b510      	push	{r4, lr}
 80010fe:	4b08      	ldr	r3, [pc, #32]	@ (8001120 <_ZN12FrontendHeapD1Ev+0x24>)
 8001100:	6003      	str	r3, [r0, #0]
 8001102:	4604      	mov	r4, r0
 8001104:	f600 701c 	addw	r0, r0, #3868	@ 0xf1c
 8001108:	f7ff ffba 	bl	8001080 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev>
 800110c:	f104 002c 	add.w	r0, r4, #44	@ 0x2c
 8001110:	f7ff ffca 	bl	80010a8 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8001114:	f104 0014 	add.w	r0, r4, #20
 8001118:	f7ff ffdc 	bl	80010d4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 800111c:	4620      	mov	r0, r4
 800111e:	bd10      	pop	{r4, pc}
 8001120:	080245f8 	.word	0x080245f8

08001124 <__tcf_0>:
                            > > CombinedTransitionTypes;
    typedef touchgfx::meta::select_type_maxsize< CombinedTransitionTypes >::type MaxTransitionType;

    static FrontendHeap& getInstance()
    {
        static FrontendHeap instance;
 8001124:	b508      	push	{r3, lr}
 8001126:	4802      	ldr	r0, [pc, #8]	@ (8001130 <__tcf_0+0xc>)
 8001128:	f7ff ffe8 	bl	80010fc <_ZN12FrontendHeapD1Ev>
 800112c:	bd08      	pop	{r3, pc}
 800112e:	bf00      	nop
 8001130:	2000139c 	.word	0x2000139c

08001134 <_ZN12FrontendHeapD0Ev>:
class FrontendHeap : public FrontendHeapBase
 8001134:	b510      	push	{r4, lr}
 8001136:	4604      	mov	r4, r0
 8001138:	f7ff ffe0 	bl	80010fc <_ZN12FrontendHeapD1Ev>
 800113c:	4620      	mov	r0, r4
 800113e:	f241 0190 	movw	r1, #4240	@ 0x1090
 8001142:	f020 fc78 	bl	8021a36 <_ZdlPvj>
 8001146:	4620      	mov	r0, r4
 8001148:	bd10      	pop	{r4, pc}
	...

0800114c <touchgfx_init>:
static ApplicationFontProvider fontProvider;
static Texts texts;
static TouchGFXHAL hal(dma, display, tc, 240, 320);

void touchgfx_init()
{
 800114c:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
    Bitmap::registerBitmapDatabase(BitmapDatabase::getInstance(), BitmapDatabase::getInstanceSize());
 8001150:	f001 fc7e 	bl	8002a50 <_ZN14BitmapDatabase11getInstanceEv>
 8001154:	4605      	mov	r5, r0
 8001156:	f001 fc7f 	bl	8002a58 <_ZN14BitmapDatabase15getInstanceSizeEv>
 800115a:	2400      	movs	r4, #0
 800115c:	4601      	mov	r1, r0
 800115e:	4623      	mov	r3, r4
 8001160:	4628      	mov	r0, r5
 8001162:	4622      	mov	r2, r4
 8001164:	9400      	str	r4, [sp, #0]
 8001166:	f011 fbd3 	bl	8012910 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>
     *
     * @param  t The array of texts.
     */
    static void registerTexts(const Texts* t)
    {
        texts = t;
 800116a:	4b27      	ldr	r3, [pc, #156]	@ (8001208 <touchgfx_init+0xbc>)
 800116c:	4a27      	ldr	r2, [pc, #156]	@ (800120c <touchgfx_init+0xc0>)
 800116e:	601a      	str	r2, [r3, #0]
    TypedText::registerTexts(&texts);
    Texts::setLanguage(0);
 8001170:	4620      	mov	r0, r4
 8001172:	f002 f82d 	bl	80031d0 <_ZN8touchgfx5Texts11setLanguageEt>
        static FrontendHeap instance;
 8001176:	4d26      	ldr	r5, [pc, #152]	@ (8001210 <touchgfx_init+0xc4>)
     *
     * @param renderer  The renderer to be used by LCD when dealing with vector fonts.
     */
    void setVectorFontRenderer(VectorFontRenderer* renderer)
    {
        vectorFontRenderer = renderer;
 8001178:	4b26      	ldr	r3, [pc, #152]	@ (8001214 <touchgfx_init+0xc8>)
 800117a:	4a27      	ldr	r2, [pc, #156]	@ (8001218 <touchgfx_init+0xcc>)

    display.setVectorFontRenderer(&vectorFontRenderer);

    FontManager::setFontProvider(&fontProvider);
 800117c:	4827      	ldr	r0, [pc, #156]	@ (800121c <touchgfx_init+0xd0>)
 800117e:	609a      	str	r2, [r3, #8]
 8001180:	f011 fb2e 	bl	80127e0 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>
 8001184:	682b      	ldr	r3, [r5, #0]
 8001186:	f3bf 8f5b 	dmb	ish
 800118a:	07db      	lsls	r3, r3, #31
 800118c:	d435      	bmi.n	80011fa <touchgfx_init+0xae>
 800118e:	4628      	mov	r0, r5
 8001190:	f020 fc53 	bl	8021a3a <__cxa_guard_acquire>
 8001194:	b388      	cbz	r0, 80011fa <touchgfx_init+0xae>
     */
    MVPHeap(AbstractPartition& pres,
            AbstractPartition& scr,
            AbstractPartition& tra,
            MVPApplication& app)
        : presenterStorage(pres),
 8001196:	4c22      	ldr	r4, [pc, #136]	@ (8001220 <touchgfx_init+0xd4>)
    Model model;
    FrontendApplication app;

private:
    FrontendHeap() : FrontendHeapBase(presenters, views, transitions, app),
                     app(model, *this)
 8001198:	4b22      	ldr	r3, [pc, #136]	@ (8001224 <touchgfx_init+0xd8>)
 800119a:	6023      	str	r3, [r4, #0]
          screenStorage(scr),
          transitionStorage(tra),
          frontendApplication(app)
 800119c:	f604 7634 	addw	r6, r4, #3892	@ 0xf34
        : presenterStorage(pres),
 80011a0:	f104 0014 	add.w	r0, r4, #20
          screenStorage(scr),
 80011a4:	f104 082c 	add.w	r8, r4, #44	@ 0x2c
          transitionStorage(tra),
 80011a8:	f604 771c 	addw	r7, r4, #3868	@ 0xf1c
        : presenterStorage(pres),
 80011ac:	6060      	str	r0, [r4, #4]
          screenStorage(scr),
 80011ae:	f8c4 8008 	str.w	r8, [r4, #8]
          transitionStorage(tra),
 80011b2:	60e7      	str	r7, [r4, #12]
          frontendApplication(app)
 80011b4:	6126      	str	r6, [r4, #16]
 80011b6:	f008 feff 	bl	8009fb8 <_ZN8touchgfx17AbstractPartitionC1Ev>
 80011ba:	4b1b      	ldr	r3, [pc, #108]	@ (8001228 <touchgfx_init+0xdc>)
 80011bc:	6163      	str	r3, [r4, #20]
 80011be:	4640      	mov	r0, r8
 80011c0:	f008 fefa 	bl	8009fb8 <_ZN8touchgfx17AbstractPartitionC1Ev>
 80011c4:	4b19      	ldr	r3, [pc, #100]	@ (800122c <touchgfx_init+0xe0>)
 80011c6:	62e3      	str	r3, [r4, #44]	@ 0x2c
 80011c8:	4638      	mov	r0, r7
 80011ca:	f008 fef5 	bl	8009fb8 <_ZN8touchgfx17AbstractPartitionC1Ev>
 80011ce:	4b18      	ldr	r3, [pc, #96]	@ (8001230 <touchgfx_init+0xe4>)
 80011d0:	f8c4 3f1c 	str.w	r3, [r4, #3868]	@ 0xf1c
 80011d4:	f504 6073 	add.w	r0, r4, #3888	@ 0xf30
 80011d8:	f002 f870 	bl	80032bc <_ZN5ModelC1Ev>
 80011dc:	4622      	mov	r2, r4
 80011de:	f504 6173 	add.w	r1, r4, #3888	@ 0xf30
 80011e2:	4630      	mov	r0, r6
 80011e4:	f002 f860 	bl	80032a8 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>
 80011e8:	4630      	mov	r0, r6
 80011ea:	f001 fdaf 	bl	8002d4c <_ZN23FrontendApplicationBase29gotoScreen1ScreenNoTransitionEv>
        static FrontendHeap instance;
 80011ee:	4811      	ldr	r0, [pc, #68]	@ (8001234 <touchgfx_init+0xe8>)
 80011f0:	f021 fb7c 	bl	80228ec <atexit>
 80011f4:	4628      	mov	r0, r5
 80011f6:	f020 fc2c 	bl	8021a52 <__cxa_guard_release>
    (void)heap;

    /*
     * Initialize TouchGFX
     */
    hal.initialize();
 80011fa:	480f      	ldr	r0, [pc, #60]	@ (8001238 <touchgfx_init+0xec>)
}
 80011fc:	b002      	add	sp, #8
 80011fe:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
    hal.initialize();
 8001202:	f7ff bbe7 	b.w	80009d4 <_ZN11TouchGFXHAL10initializeEv>
 8001206:	bf00      	nop
 8001208:	20013f90 	.word	0x20013f90
 800120c:	20000548 	.word	0x20000548
 8001210:	20001398 	.word	0x20001398
 8001214:	20000568 	.word	0x20000568
 8001218:	2000054c 	.word	0x2000054c
 800121c:	20000008 	.word	0x20000008
 8001220:	2000139c 	.word	0x2000139c
 8001224:	080245f8 	.word	0x080245f8
 8001228:	0802455c 	.word	0x0802455c
 800122c:	08024590 	.word	0x08024590
 8001230:	080245c4 	.word	0x080245c4
 8001234:	08001125 	.word	0x08001125
 8001238:	200004c4 	.word	0x200004c4

0800123c <touchgfx_components_init>:

void touchgfx_components_init()
{
}
 800123c:	4770      	bx	lr
	...

08001240 <touchgfx_taskEntry>:
     * Main event loop. Will wait for VSYNC signal, and then process next frame. Call
     * this function from your GUI task.
     *
     * Note This function never returns
     */
    hal.taskEntry();
 8001240:	4801      	ldr	r0, [pc, #4]	@ (8001248 <touchgfx_taskEntry+0x8>)
 8001242:	f7ff bbd5 	b.w	80009f0 <_ZN11TouchGFXHAL9taskEntryEv>
 8001246:	bf00      	nop
 8001248:	200004c4 	.word	0x200004c4

0800124c <_GLOBAL__sub_I_touchgfx_init>:
}
 800124c:	b570      	push	{r4, r5, r6, lr}
static STM32DMA dma;
 800124e:	4e26      	ldr	r6, [pc, #152]	@ (80012e8 <_GLOBAL__sub_I_touchgfx_init+0x9c>)
{
public:

    STM32TouchController() {}
 8001250:	4c26      	ldr	r4, [pc, #152]	@ (80012ec <_GLOBAL__sub_I_touchgfx_init+0xa0>)
static LCD16bpp display;
 8001252:	4d27      	ldr	r5, [pc, #156]	@ (80012f0 <_GLOBAL__sub_I_touchgfx_init+0xa4>)
 8001254:	4b27      	ldr	r3, [pc, #156]	@ (80012f4 <_GLOBAL__sub_I_touchgfx_init+0xa8>)
 8001256:	6023      	str	r3, [r4, #0]
static STM32DMA dma;
 8001258:	4630      	mov	r0, r6
 800125a:	f7ff fe55 	bl	8000f08 <_ZN8STM32DMAC1Ev>
static LCD16bpp display;
 800125e:	4628      	mov	r0, r5
 8001260:	f016 fc5c 	bl	8017b1c <_ZN8touchgfx8LCD16bppC1Ev>
static VectorFontRendererImpl vectorFontRenderer;
 8001264:	4824      	ldr	r0, [pc, #144]	@ (80012f8 <_GLOBAL__sub_I_touchgfx_init+0xac>)
 8001266:	f00f fbb9 	bl	80109dc <_ZN8touchgfx22VectorFontRendererImplC1Ev>
        : dma(dmaInterface),
 800126a:	4b24      	ldr	r3, [pc, #144]	@ (80012fc <_GLOBAL__sub_I_touchgfx_init+0xb0>)
          isFrontPorchEntered(false),
 800126c:	4824      	ldr	r0, [pc, #144]	@ (8001300 <_GLOBAL__sub_I_touchgfx_init+0xb4>)
          touchController(touchCtrl),
 800126e:	60dc      	str	r4, [r3, #12]
          mcuInstrumentation(0),
 8001270:	2200      	movs	r2, #0
          refreshStrategy(REFRESH_STRATEGY_DEFAULT),
 8001272:	f44f 7180 	mov.w	r1, #256	@ 0x100
          auxiliaryLCD(0),
 8001276:	e9c3 1212 	strd	r1, r2, [r3, #72]	@ 0x48
          touchSampleRate(1),
 800127a:	4922      	ldr	r1, [pc, #136]	@ (8001304 <_GLOBAL__sub_I_touchgfx_init+0xb8>)
    };

public:
    /** Default constructor. Does nothing. */
    Gestures()
        : drag(), listener(0), dragThresholdValue(0)
 800127c:	861a      	strh	r2, [r3, #48]	@ 0x30
          vSyncCompensationEnabled(false),
 800127e:	e9c3 121a 	strd	r1, r2, [r3, #104]	@ 0x68
          isFrontPorchEntered(false),
 8001282:	4921      	ldr	r1, [pc, #132]	@ (8001308 <_GLOBAL__sub_I_touchgfx_init+0xbc>)
          useAuxiliaryLCD(false),
 8001284:	f883 2058 	strb.w	r2, [r3, #88]	@ 0x58
          isFrontPorchEntered(false),
 8001288:	e9c3 011e 	strd	r0, r1, [r3, #120]	@ 0x78
          minDrawingHeight(maxDrawingHeight / 3),    // Best guess based on testing (but not ideal in all cases)
 800128c:	491f      	ldr	r1, [pc, #124]	@ (800130c <_GLOBAL__sub_I_touchgfx_init+0xc0>)
 800128e:	f8c3 1080 	str.w	r1, [r3, #128]	@ 0x80
        instance = this;
 8001292:	491f      	ldr	r1, [pc, #124]	@ (8001310 <_GLOBAL__sub_I_touchgfx_init+0xc4>)
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 8001294:	481f      	ldr	r0, [pc, #124]	@ (8001314 <_GLOBAL__sub_I_touchgfx_init+0xc8>)
        instance = this;
 8001296:	600b      	str	r3, [r1, #0]
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 8001298:	21f0      	movs	r1, #240	@ 0xf0
          buttonController(0),
 800129a:	e9c3 2204 	strd	r2, r2, [r3, #16]
 800129e:	e9c3 2206 	strd	r2, r2, [r3, #24]
 80012a2:	e9c3 2208 	strd	r2, r2, [r3, #32]
 80012a6:	e9c3 220a 	strd	r2, r2, [r3, #40]	@ 0x28
          frameBuffer0(0),
 80012aa:	e9c3 220e 	strd	r2, r2, [r3, #56]	@ 0x38
          frameBuffer2(0),
 80012ae:	e9c3 2210 	strd	r2, r2, [r3, #64]	@ 0x40
class Rect
{
public:
    /** Default constructor. Resulting in an empty Rect with coordinates 0,0. */
    Rect()
        : x(0), y(0), width(0), height(0)
 80012b2:	e9c3 2214 	strd	r2, r2, [r3, #80]	@ 0x50
          lastX(0),
 80012b6:	e9c3 2217 	strd	r2, r2, [r3, #92]	@ 0x5c
          lastY(0),
 80012ba:	665a      	str	r2, [r3, #100]	@ 0x64
          updateMCULoad(0),
 80012bc:	f883 2070 	strb.w	r2, [r3, #112]	@ 0x70
          cc_begin(0),
 80012c0:	675a      	str	r2, [r3, #116]	@ 0x74
          lcdRef(display),
 80012c2:	e9c3 6501 	strd	r6, r5, [r3, #4]
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 80012c6:	8001      	strh	r1, [r0, #0]
 80012c8:	4813      	ldr	r0, [pc, #76]	@ (8001318 <_GLOBAL__sub_I_touchgfx_init+0xcc>)
 80012ca:	8001      	strh	r1, [r0, #0]
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 80012cc:	4813      	ldr	r0, [pc, #76]	@ (800131c <_GLOBAL__sub_I_touchgfx_init+0xd0>)
 80012ce:	f44f 71a0 	mov.w	r1, #320	@ 0x140
 80012d2:	8001      	strh	r1, [r0, #0]
 80012d4:	4812      	ldr	r0, [pc, #72]	@ (8001320 <_GLOBAL__sub_I_touchgfx_init+0xd4>)
 80012d6:	8001      	strh	r1, [r0, #0]
        DISPLAY_ROTATION = rotate0;
 80012d8:	4912      	ldr	r1, [pc, #72]	@ (8001324 <_GLOBAL__sub_I_touchgfx_init+0xd8>)
 80012da:	700a      	strb	r2, [r1, #0]
        nativeDisplayOrientation = ((width >= height) ? ORIENTATION_LANDSCAPE : ORIENTATION_PORTRAIT);
 80012dc:	2201      	movs	r2, #1
 80012de:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
     * @param [in,out] display Reference to LCD interface.
     * @param [in,out] tc      Reference to Touch Controller driver.
     * @param width            Width of the display.
     * @param height           Height of the display.
     */
    TouchGFXHAL(touchgfx::DMA_Interface& dma, touchgfx::LCD& display, touchgfx::TouchController& tc, uint16_t width, uint16_t height) : TouchGFXGeneratedHAL(dma, display, tc, width, height)
 80012e2:	4a11      	ldr	r2, [pc, #68]	@ (8001328 <_GLOBAL__sub_I_touchgfx_init+0xdc>)
 80012e4:	601a      	str	r2, [r3, #0]
}
 80012e6:	bd70      	pop	{r4, r5, r6, pc}
 80012e8:	200005f4 	.word	0x200005f4
 80012ec:	20001394 	.word	0x20001394
 80012f0:	20000568 	.word	0x20000568
 80012f4:	0802394c 	.word	0x0802394c
 80012f8:	2000054c 	.word	0x2000054c
 80012fc:	200004c4 	.word	0x200004c4
 8001300:	01010000 	.word	0x01010000
 8001304:	01000001 	.word	0x01000001
 8001308:	00500400 	.word	0x00500400
 800130c:	0014001a 	.word	0x0014001a
 8001310:	20013f2c 	.word	0x20013f2c
 8001314:	20013f1e 	.word	0x20013f1e
 8001318:	20013f24 	.word	0x20013f24
 800131c:	20013f20 	.word	0x20013f20
 8001320:	20013f26 	.word	0x20013f26
 8001324:	20013f22 	.word	0x20013f22
 8001328:	08024420 	.word	0x08024420

0800132c <_GLOBAL__sub_D_touchgfx_init>:
static STM32DMA dma;
 800132c:	4801      	ldr	r0, [pc, #4]	@ (8001334 <_GLOBAL__sub_D_touchgfx_init+0x8>)
 800132e:	f7ff bc77 	b.w	8000c20 <_ZN8STM32DMAD1Ev>
 8001332:	bf00      	nop
 8001334:	200005f4 	.word	0x200005f4

08001338 <_ZN8touchgfx8Drawable13getFirstChildEv>:
     * @see Container::getFirstChild
     */
    virtual Drawable* getFirstChild()
    {
        return 0;
    }
 8001338:	2000      	movs	r0, #0
 800133a:	4770      	bx	lr

0800133c <_ZN8touchgfx8Drawable4setXEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setX(int16_t x)
    {
        rect.x = x;
 800133c:	8081      	strh	r1, [r0, #4]
    }
 800133e:	4770      	bx	lr

08001340 <_ZN8touchgfx8Drawable4setYEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setY(int16_t y)
    {
        rect.y = y;
 8001340:	80c1      	strh	r1, [r0, #6]
    }
 8001342:	4770      	bx	lr

08001344 <_ZN8touchgfx8Drawable8setWidthEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setWidth(int16_t width)
    {
        rect.width = width;
 8001344:	8101      	strh	r1, [r0, #8]
    }
 8001346:	4770      	bx	lr

08001348 <_ZN8touchgfx8Drawable9setHeightEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setHeight(int16_t height)
    {
        rect.height = height;
 8001348:	8141      	strh	r1, [r0, #10]
    }
 800134a:	4770      	bx	lr

0800134c <_ZN8touchgfx8Drawable20childGeometryChangedEv>:
     * one or more of its children has changed. Currently only used in ScrollableContainer
     * to redraw scrollbars when the size of the scrolling contents changes.
     */
    virtual void childGeometryChanged()
    {
    }
 800134c:	4770      	bx	lr

0800134e <_ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE>:
     * @param  event The ClickEvent received from the HAL.
     */
    virtual void handleClickEvent(const ClickEvent& event)
    {
        (void)event; // Unused variable
    }
 800134e:	4770      	bx	lr

08001350 <_ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE>:
     * @param  event The GestureEvent received from the HAL.
     */
    virtual void handleGestureEvent(const GestureEvent& event)
    {
        (void)event; // Unused variable
    }
 8001350:	4770      	bx	lr

08001352 <_ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE>:
     * @param  event The DragEvent received from the HAL.
     */
    virtual void handleDragEvent(const DragEvent& event)
    {
        (void)event; // Unused variable
    }
 8001352:	4770      	bx	lr

08001354 <_ZN8touchgfx8Drawable15handleTickEventEv>:
     *
     * @see Application::registerTimerWidget
     */
    virtual void handleTickEvent()
    {
    }
 8001354:	4770      	bx	lr

08001356 <_ZN8touchgfx8Drawable6moveToEss>:
     *
     * @see moveRelative, setXY
     *
     * @note Will redraw the appropriate areas of the screen.
     */
    virtual void moveTo(int16_t x, int16_t y)
 8001356:	b410      	push	{r4}
    {
        moveRelative(x - rect.x, y - rect.y);
 8001358:	88c4      	ldrh	r4, [r0, #6]
 800135a:	6803      	ldr	r3, [r0, #0]
 800135c:	1b12      	subs	r2, r2, r4
 800135e:	8884      	ldrh	r4, [r0, #4]
 8001360:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8001362:	1b09      	subs	r1, r1, r4
 8001364:	b212      	sxth	r2, r2
    }
 8001366:	f85d 4b04 	ldr.w	r4, [sp], #4
        moveRelative(x - rect.x, y - rect.y);
 800136a:	b209      	sxth	r1, r1
 800136c:	4718      	bx	r3

0800136e <_ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_>:
     * @note For TouchGFX internal use only.
     */
    void resetDrawChainCache()
    {
        // Resetting the cached indicators
        cachedVisibleRect.x = UNCACHED_INDICATOR;
 800136e:	f64f 73ff 	movw	r3, #65535	@ 0xffff
 8001372:	8183      	strh	r3, [r0, #12]
        cachedAbsX = UNCACHED_INDICATOR;
 8001374:	f04f 33ff 	mov.w	r3, #4294967295
 8001378:	6203      	str	r3, [r0, #32]
     */
    virtual void setupDrawChain(const Rect& invalidatedArea, Drawable** nextPreviousElement)
    {
        (void)invalidatedArea; // Unused variable
        resetDrawChainCache();
        nextDrawChainElement = *nextPreviousElement;
 800137a:	6813      	ldr	r3, [r2, #0]
 800137c:	61c3      	str	r3, [r0, #28]
        *nextPreviousElement = this;
 800137e:	6010      	str	r0, [r2, #0]
    }
 8001380:	4770      	bx	lr

08001382 <_ZNK8touchgfx15AbstractPainter18getRenderingMethodEv>:
     * @return HARDWARE if painter uses hardware based drawing, SOFTWARE otherwise.
     */
    virtual HAL::RenderingMethod getRenderingMethod() const
    {
        return HAL::SOFTWARE;
    }
 8001382:	2000      	movs	r0, #0
 8001384:	4770      	bx	lr

08001386 <_ZNK8touchgfx15AbstractPainter5setupERKNS_4RectE>:
     *
     * @see AbstractPainter::paint, AbstractPainter::tearDown
     */
    virtual bool setup(const Rect& widgetRect) const
    {
        widgetWidth = widgetRect.width;
 8001386:	888b      	ldrh	r3, [r1, #4]
 8001388:	8083      	strh	r3, [r0, #4]
        return true;
    }
 800138a:	2001      	movs	r0, #1
 800138c:	4770      	bx	lr

0800138e <_ZNK8touchgfx15AbstractPainter8tearDownEv>:
     * @see AbstractPainter::paint, AbstractPainter::setup
     */
    virtual void tearDown() const
    {
        return;
    }
 800138e:	4770      	bx	lr

08001390 <_ZN8touchgfx12CanvasWidget8setAlphaEh>:
    }

    /** @copydoc Image::setAlpha */
    virtual void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
 8001390:	f880 1026 	strb.w	r1, [r0, #38]	@ 0x26
    }
 8001394:	4770      	bx	lr

08001396 <_ZNK8touchgfx12CanvasWidget8getAlphaEv>:

    /** @copydoc Image::getAlpha() */
    virtual uint8_t getAlpha() const
    {
        return alpha;
    }
 8001396:	f890 0026 	ldrb.w	r0, [r0, #38]	@ 0x26
 800139a:	4770      	bx	lr

0800139c <_ZNK8touchgfx12CanvasWidget14getMinimalRectEv>:
     * overwritten in subclasses and return the minimal rectangle containing the shape. See
     * classes such as Circle for example implementations.
     *
     * @return The minimal rectangle containing the shape drawn.
     */
    virtual Rect getMinimalRect() const
 800139c:	b510      	push	{r4, lr}
     * @param  rectY      The y coordinate.
     * @param  rectWidth  The width.
     * @param  rectHeight The height.
     */
    Rect(int16_t rectX, int16_t rectY, int16_t rectWidth, int16_t rectHeight)
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 800139e:	2200      	movs	r2, #0
        return rect.width;
 80013a0:	f9b1 4008 	ldrsh.w	r4, [r1, #8]
        return rect.height;
 80013a4:	f9b1 100a 	ldrsh.w	r1, [r1, #10]
 80013a8:	8002      	strh	r2, [r0, #0]
 80013aa:	8042      	strh	r2, [r0, #2]
 80013ac:	8084      	strh	r4, [r0, #4]
 80013ae:	80c1      	strh	r1, [r0, #6]
    {
        return Rect(0, 0, getWidth(), getHeight());
    }
 80013b0:	bd10      	pop	{r4, pc}

080013b2 <_ZNK8touchgfx12CanvasWidget12getSolidRectEv>:
        : x(0), y(0), width(0), height(0)
 80013b2:	2200      	movs	r2, #0
 80013b4:	8002      	strh	r2, [r0, #0]
 80013b6:	8042      	strh	r2, [r0, #2]
 80013b8:	8082      	strh	r2, [r0, #4]
 80013ba:	80c2      	strh	r2, [r0, #6]
     *       lines will not be drawn and may cause strange display artifacts.
     */
    virtual Rect getSolidRect() const
    {
        return Rect();
    }
 80013bc:	4770      	bx	lr

080013be <_ZN8touchgfx17CWRVectorRenderer7setModeENS_14VectorRenderer8DrawModeE>:
     *
     * @param mode The filling mode.
     */
    virtual void setMode(DrawMode mode)
    {
        drawMode = mode;
 80013be:	7701      	strb	r1, [r0, #28]
    }
 80013c0:	4770      	bx	lr

080013c2 <_ZN8touchgfx17CWRVectorRenderer19setStrokeMiterLimitEf>:

    virtual void setStrokeMiterLimit(float miterLimit)
    {
        strokeMiterLimit = miterLimit;
 80013c2:	ed80 0a08 	vstr	s0, [r0, #32]
    }
 80013c6:	4770      	bx	lr

080013c8 <_ZN8touchgfx17CWRVectorRenderer17setStrokeLineJoinENS_16VGStrokeLineJoinE>:

    virtual void setStrokeLineJoin(VGStrokeLineJoin lineJoin)
    {
        strokeLineJoin = lineJoin;
 80013c8:	f880 1024 	strb.w	r1, [r0, #36]	@ 0x24
    }
 80013cc:	4770      	bx	lr

080013ce <_ZN8touchgfx17CWRVectorRenderer16setStrokeLineCapENS_15VGStrokeLineCapE>:

    virtual void setStrokeLineCap(VGStrokeLineCap lineCap)
    {
        strokeLineCap = lineCap;
 80013ce:	f880 1025 	strb.w	r1, [r0, #37]	@ 0x25
    }
 80013d2:	4770      	bx	lr

080013d4 <_ZNK8touchgfx17CWRVectorRenderer17CanvasWidgetProxy16drawCanvasWidgetERKNS_4RectE>:
    class CanvasWidgetProxy : public CanvasWidget
    {
        virtual bool drawCanvasWidget(const Rect& invalidatedArea) const
        {
            return true;
        }
 80013d4:	2001      	movs	r0, #1
 80013d6:	4770      	bx	lr

080013d8 <_ZN8touchgfx23CWRVectorRendererRGB56516getLinearPainterEv>:
class CWRVectorRendererRGB565 : public CWRVectorRenderer
{
    virtual AbstractPainterLinearGradient& getLinearPainter()
    {
        return linearPainter;
    }
 80013d8:	3098      	adds	r0, #152	@ 0x98
 80013da:	4770      	bx	lr

080013dc <_ZN8touchgfx23CWRVectorRendererRGB56520getColorPainterColorEv>:

    virtual AbstractPainterColor& getColorPainterColor()
    {
        return colorPainter;
    }
 80013dc:	308c      	adds	r0, #140	@ 0x8c
 80013de:	4770      	bx	lr

080013e0 <_ZN8touchgfx23CWRVectorRendererRGB56515getColorPainterEv>:

    virtual AbstractPainter& getColorPainter()
    {
        return colorPainter;
    }
 80013e0:	3084      	adds	r0, #132	@ 0x84
 80013e2:	4770      	bx	lr

080013e4 <_ZN8touchgfx17CWRVectorRenderer17CanvasWidgetProxyD1Ev>:
    class CanvasWidgetProxy : public CanvasWidget
 80013e4:	4770      	bx	lr

080013e6 <_ZN8touchgfx23CWRVectorRendererRGB565D1Ev>:
class CWRVectorRendererRGB565 : public CWRVectorRenderer
 80013e6:	4770      	bx	lr

080013e8 <__tcf_1>:

namespace touchgfx
{
VectorRenderer* VectorRenderer::getInstance()
{
    static CWRVectorRendererRGB565 renderer;
 80013e8:	4770      	bx	lr
	...

080013ec <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>:
 */
__STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 80013ec:	4b03      	ldr	r3, [pc, #12]	@ (80013fc <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv+0x10>)
 80013ee:	2290      	movs	r2, #144	@ 0x90
 80013f0:	f883 235a 	strb.w	r2, [r3, #858]	@ 0x35a
 80013f4:	f883 2358 	strb.w	r2, [r3, #856]	@ 0x358

void TouchGFXGeneratedHAL::configureInterrupts()
{
    NVIC_SetPriority(DMA2D_IRQn, 9);
    NVIC_SetPriority(LTDC_IRQn, 9);
}
 80013f8:	4770      	bx	lr
 80013fa:	bf00      	nop
 80013fc:	e000e100 	.word	0xe000e100

08001400 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>:
    NVIC_DisableIRQ(LTDC_IRQn);
}

void TouchGFXGeneratedHAL::enableLCDControllerInterrupt()
{
    lcd_int_active_line = (LTDC->BPCR & LTDC_BPCR_AVBP_Msk) - 1;
 8001400:	4a09      	ldr	r2, [pc, #36]	@ (8001428 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x28>)
 8001402:	490a      	ldr	r1, [pc, #40]	@ (800142c <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x2c>)
 8001404:	68d3      	ldr	r3, [r2, #12]
    lcd_int_porch_line = (LTDC->AWCR & LTDC_AWCR_AAH_Msk) - 1;
 8001406:	480a      	ldr	r0, [pc, #40]	@ (8001430 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x30>)
    lcd_int_active_line = (LTDC->BPCR & LTDC_BPCR_AVBP_Msk) - 1;
 8001408:	f3c3 030a 	ubfx	r3, r3, #0, #11
 800140c:	3b01      	subs	r3, #1
 800140e:	b29b      	uxth	r3, r3
 8001410:	800b      	strh	r3, [r1, #0]
    lcd_int_porch_line = (LTDC->AWCR & LTDC_AWCR_AAH_Msk) - 1;
 8001412:	6911      	ldr	r1, [r2, #16]
 8001414:	f3c1 010a 	ubfx	r1, r1, #0, #11
 8001418:	3901      	subs	r1, #1
 800141a:	8001      	strh	r1, [r0, #0]

    /* Sets the Line Interrupt position */
    LTDC->LIPCR = lcd_int_active_line;
 800141c:	6413      	str	r3, [r2, #64]	@ 0x40
    /* Line Interrupt Enable            */
    LTDC->IER |= LTDC_IER_LIE;
 800141e:	6b53      	ldr	r3, [r2, #52]	@ 0x34
 8001420:	f043 0301 	orr.w	r3, r3, #1
 8001424:	6353      	str	r3, [r2, #52]	@ 0x34
}
 8001426:	4770      	bx	lr
 8001428:	40016800 	.word	0x40016800
 800142c:	2000242e 	.word	0x2000242e
 8001430:	2000242c 	.word	0x2000242c

08001434 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>:
    HAL::endFrame();
}

uint16_t* TouchGFXGeneratedHAL::getTFTFrameBuffer() const
{
    return (uint16_t*)LTDC_Layer1->CFBAR;
 8001434:	4b01      	ldr	r3, [pc, #4]	@ (800143c <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv+0x8>)
 8001436:	f8d3 00ac 	ldr.w	r0, [r3, #172]	@ 0xac
}
 800143a:	4770      	bx	lr
 800143c:	40016800 	.word	0x40016800

08001440 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>:

void TouchGFXGeneratedHAL::setTFTFrameBuffer(uint16_t* adr)
{
    LTDC_Layer1->CFBAR = (uint32_t)adr;
 8001440:	4b02      	ldr	r3, [pc, #8]	@ (800144c <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt+0xc>)

    /* Reload immediate */
    LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
 8001442:	2201      	movs	r2, #1
    LTDC_Layer1->CFBAR = (uint32_t)adr;
 8001444:	f8c3 10ac 	str.w	r1, [r3, #172]	@ 0xac
    LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
 8001448:	625a      	str	r2, [r3, #36]	@ 0x24
}
 800144a:	4770      	bx	lr
 800144c:	40016800 	.word	0x40016800

08001450 <_ZN8touchgfx17CWRVectorRenderer17CanvasWidgetProxyD0Ev>:
    class CanvasWidgetProxy : public CanvasWidget
 8001450:	b510      	push	{r4, lr}
 8001452:	212c      	movs	r1, #44	@ 0x2c
 8001454:	4604      	mov	r4, r0
 8001456:	f020 faee 	bl	8021a36 <_ZdlPvj>
 800145a:	4620      	mov	r0, r4
 800145c:	bd10      	pop	{r4, pc}

0800145e <_ZN8touchgfx23CWRVectorRendererRGB565D0Ev>:
class CWRVectorRendererRGB565 : public CWRVectorRenderer
 800145e:	b510      	push	{r4, lr}
 8001460:	21bc      	movs	r1, #188	@ 0xbc
 8001462:	4604      	mov	r4, r0
 8001464:	f020 fae7 	bl	8021a36 <_ZdlPvj>
 8001468:	4620      	mov	r0, r4
 800146a:	bd10      	pop	{r4, pc}

0800146c <_ZN20TouchGFXGeneratedHAL10initializeEv>:
{
 800146c:	b570      	push	{r4, r5, r6, lr}
 800146e:	4604      	mov	r4, r0
    HAL::initialize();
 8001470:	f009 f8a1 	bl	800a5b6 <_ZN8touchgfx3HAL10initializeEv>
    registerEventListener(*(Application::getInstance()));
 8001474:	6823      	ldr	r3, [r4, #0]
 8001476:	6e9d      	ldr	r5, [r3, #104]	@ 0x68
 8001478:	f00e f848 	bl	800f50c <_ZN8touchgfx11Application11getInstanceEv>
 800147c:	4601      	mov	r1, r0
 800147e:	4620      	mov	r0, r4
 8001480:	47a8      	blx	r5
    setFrameBufferStartAddresses((void*)frameBuf, (void*)(frameBuf + sizeof(frameBuf) / (sizeof(uint32_t) * 2)), (void*)0);
 8001482:	6823      	ldr	r3, [r4, #0]
 8001484:	4a05      	ldr	r2, [pc, #20]	@ (800149c <_ZN20TouchGFXGeneratedHAL10initializeEv+0x30>)
 8001486:	f8d3 508c 	ldr.w	r5, [r3, #140]	@ 0x8c
 800148a:	4620      	mov	r0, r4
 800148c:	46ac      	mov	ip, r5
 800148e:	2300      	movs	r3, #0
}
 8001490:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    setFrameBufferStartAddresses((void*)frameBuf, (void*)(frameBuf + sizeof(frameBuf) / (sizeof(uint32_t) * 2)), (void*)0);
 8001494:	f5a2 3116 	sub.w	r1, r2, #153600	@ 0x25800
 8001498:	4760      	bx	ip
 800149a:	bf00      	nop
 800149c:	d004b000 	.word	0xd004b000

080014a0 <_ZN20TouchGFXGeneratedHAL10beginFrameEv>:
    return HAL::beginFrame();
 80014a0:	f009 b870 	b.w	800a584 <_ZN8touchgfx3HAL10beginFrameEv>

080014a4 <_ZN20TouchGFXGeneratedHAL8endFrameEv>:
    HAL::endFrame();
 80014a4:	f009 b87a 	b.w	800a59c <_ZN8touchgfx3HAL8endFrameEv>

080014a8 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>:

void TouchGFXGeneratedHAL::flushFrameBuffer(const touchgfx::Rect& rect)
{
    HAL::flushFrameBuffer(rect);
 80014a8:	f009 b836 	b.w	800a518 <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>

080014ac <_ZN20TouchGFXGeneratedHAL9blockCopyEPvPKvm>:
}

bool TouchGFXGeneratedHAL::blockCopy(void* RESTRICT dest, const void* RESTRICT src, uint32_t numBytes)
{
    return HAL::blockCopy(dest, src, numBytes);
 80014ac:	f009 b9a5 	b.w	800a7fa <_ZN8touchgfx3HAL9blockCopyEPvPKvm>

080014b0 <_ZNK8touchgfx8Drawable17invalidateContentEv>:
        if (visible)
 80014b0:	f890 2025 	ldrb.w	r2, [r0, #37]	@ 0x25
 80014b4:	b112      	cbz	r2, 80014bc <_ZNK8touchgfx8Drawable17invalidateContentEv+0xc>
            invalidate();
 80014b6:	6803      	ldr	r3, [r0, #0]
 80014b8:	695b      	ldr	r3, [r3, #20]
 80014ba:	4718      	bx	r3
    }
 80014bc:	4770      	bx	lr

080014be <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE>:
     *
     * @param [out] last Result, the address of the actual instance of the Widget.
     */
    virtual void getLastChild(int16_t /*x*/, int16_t /*y*/, Drawable** last)
    {
        if (isVisible() && isTouchable())
 80014be:	f890 2025 	ldrb.w	r2, [r0, #37]	@ 0x25
 80014c2:	b11a      	cbz	r2, 80014cc <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0xe>
 80014c4:	f890 2024 	ldrb.w	r2, [r0, #36]	@ 0x24
 80014c8:	b102      	cbz	r2, 80014cc <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0xe>
        {
            *last = this;
 80014ca:	6018      	str	r0, [r3, #0]
        }
    }
 80014cc:	4770      	bx	lr
	...

080014d0 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>:
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 80014d0:	4b03      	ldr	r3, [pc, #12]	@ (80014e0 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv+0x10>)
 80014d2:	f04f 6280 	mov.w	r2, #67108864	@ 0x4000000
 80014d6:	609a      	str	r2, [r3, #8]
 80014d8:	f04f 7280 	mov.w	r2, #16777216	@ 0x1000000
 80014dc:	609a      	str	r2, [r3, #8]
}
 80014de:	4770      	bx	lr
 80014e0:	e000e100 	.word	0xe000e100

080014e4 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>:
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 80014e4:	4b08      	ldr	r3, [pc, #32]	@ (8001508 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv+0x24>)
 80014e6:	f04f 6280 	mov.w	r2, #67108864	@ 0x4000000
 80014ea:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
  __ASM volatile ("dsb 0xF":::"memory");
 80014ee:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 80014f2:	f3bf 8f6f 	isb	sy
 80014f6:	f04f 7280 	mov.w	r2, #16777216	@ 0x1000000
 80014fa:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
  __ASM volatile ("dsb 0xF":::"memory");
 80014fe:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 8001502:	f3bf 8f6f 	isb	sy
}
 8001506:	4770      	bx	lr
 8001508:	e000e100 	.word	0xe000e100

0800150c <_ZN8touchgfx21AbstractPainterRGB565C1Ev>:
public:
    static const uint16_t RMASK = 0xF800; ///< Mask for red   (1111100000000000)
    static const uint16_t GMASK = 0x07E0; ///< Mask for green (0000011111100000)
    static const uint16_t BMASK = 0x001F; ///< Mask for blue  (0000000000011111)

    AbstractPainterRGB565()
 800150c:	b570      	push	{r4, r5, r6, lr}
        : widgetWidth(0)
 800150e:	2300      	movs	r3, #0
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
 8001510:	4e12      	ldr	r6, [pc, #72]	@ (800155c <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x50>)
 8001512:	8083      	strh	r3, [r0, #4]
        : AbstractPainter()
 8001514:	4b12      	ldr	r3, [pc, #72]	@ (8001560 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x54>)
 8001516:	6003      	str	r3, [r0, #0]
 8001518:	6833      	ldr	r3, [r6, #0]
 800151a:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
    AbstractPainterRGB565()
 800151e:	4605      	mov	r5, r0
 8001520:	b10a      	cbz	r2, 8001526 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x1a>
 8001522:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
 8001524:	b900      	cbnz	r0, 8001528 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x1c>
        return instance->lcdRef;
 8001526:	6898      	ldr	r0, [r3, #8]
     *
     * @return True if the format matches the framebuffer format, false otherwise.
     */
    FORCE_INLINE_FUNCTION static bool compatibleFramebuffer(Bitmap::BitmapFormat format)
    {
        bool compat = HAL::lcd().framebufferFormat() == format;
 8001528:	6803      	ldr	r3, [r0, #0]
 800152a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800152c:	4798      	blx	r3
        return auxiliaryLCD;
 800152e:	6833      	ldr	r3, [r6, #0]
 8001530:	fab0 f480 	clz	r4, r0
 8001534:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
 8001536:	0964      	lsrs	r4, r4, #5
        if (HAL::getInstance()->getAuxiliaryLCD())
 8001538:	b130      	cbz	r0, 8001548 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x3c>
        {
            compat |= HAL::getInstance()->getAuxiliaryLCD()->framebufferFormat() == format;
 800153a:	6803      	ldr	r3, [r0, #0]
 800153c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800153e:	4798      	blx	r3
 8001540:	2800      	cmp	r0, #0
 8001542:	bf08      	it	eq
 8001544:	f044 0401 	orreq.w	r4, r4, #1
    {
        assert(compatibleFramebuffer(Bitmap::RGB565) && "The chosen painter only works with RGB565 displays");
 8001548:	b92c      	cbnz	r4, 8001556 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x4a>
 800154a:	4b06      	ldr	r3, [pc, #24]	@ (8001564 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x58>)
 800154c:	4a06      	ldr	r2, [pc, #24]	@ (8001568 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x5c>)
 800154e:	4807      	ldr	r0, [pc, #28]	@ (800156c <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x60>)
 8001550:	212c      	movs	r1, #44	@ 0x2c
 8001552:	f021 f9ad 	bl	80228b0 <__assert_func>
    }
 8001556:	4628      	mov	r0, r5
 8001558:	bd70      	pop	{r4, r5, r6, pc}
 800155a:	bf00      	nop
 800155c:	20013f2c 	.word	0x20013f2c
 8001560:	0802460c 	.word	0x0802460c
 8001564:	08023d73 	.word	0x08023d73
 8001568:	08023dd1 	.word	0x08023dd1
 800156c:	08023e0a 	.word	0x08023e0a

08001570 <_ZN8touchgfx14VectorRenderer11getInstanceEv>:
{
 8001570:	b570      	push	{r4, r5, r6, lr}
    static CWRVectorRendererRGB565 renderer;
 8001572:	4e25      	ldr	r6, [pc, #148]	@ (8001608 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x98>)
 8001574:	6835      	ldr	r5, [r6, #0]
 8001576:	f3bf 8f5b 	dmb	ish
 800157a:	f015 0501 	ands.w	r5, r5, #1
 800157e:	d140      	bne.n	8001602 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x92>
 8001580:	4630      	mov	r0, r6
 8001582:	f020 fa5a 	bl	8021a3a <__cxa_guard_acquire>
 8001586:	2800      	cmp	r0, #0
 8001588:	d03b      	beq.n	8001602 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x92>
class CWRVectorRenderer : public VectorRenderer
 800158a:	4c20      	ldr	r4, [pc, #128]	@ (800160c <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x9c>)
 800158c:	4b20      	ldr	r3, [pc, #128]	@ (8001610 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0xa0>)
 800158e:	6125      	str	r5, [r4, #16]
 8001590:	f104 0034 	add.w	r0, r4, #52	@ 0x34
 8001594:	e9c4 3500 	strd	r3, r5, [r4]
 8001598:	e9c4 5502 	strd	r5, r5, [r4, #8]
 800159c:	84e5      	strh	r5, [r4, #38]	@ 0x26
 800159e:	62a5      	str	r5, [r4, #40]	@ 0x28
 80015a0:	85a5      	strh	r5, [r4, #44]	@ 0x2c
 80015a2:	f00f fd00 	bl	8010fa6 <_ZN8touchgfx9Matrix3x3C1Ev>
    class CanvasWidgetProxy : public CanvasWidget
 80015a6:	f104 0058 	add.w	r0, r4, #88	@ 0x58
 80015aa:	f00c f86d 	bl	800d688 <_ZN8touchgfx12CanvasWidgetC1Ev>
 80015ae:	4b19      	ldr	r3, [pc, #100]	@ (8001614 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0xa4>)
 80015b0:	65a3      	str	r3, [r4, #88]	@ 0x58
class CWRVectorRendererRGB565 : public CWRVectorRenderer
 80015b2:	4620      	mov	r0, r4
 80015b4:	4b18      	ldr	r3, [pc, #96]	@ (8001618 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0xa8>)
 80015b6:	f840 3b84 	str.w	r3, [r0], #132
     * Initializes a new instance of the PainterRGB565 class.
     *
     * @param  color (Optional) the color, default is black.
     */
    PainterRGB565(colortype color = 0)
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 80015ba:	f7ff ffa7 	bl	800150c <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 80015be:	4b17      	ldr	r3, [pc, #92]	@ (800161c <_ZN8touchgfx14VectorRenderer11getInstanceEv+0xac>)
 80015c0:	f8c4 3084 	str.w	r3, [r4, #132]	@ 0x84
 80015c4:	3324      	adds	r3, #36	@ 0x24
 80015c6:	f8c4 308c 	str.w	r3, [r4, #140]	@ 0x8c
class AbstractPainterLinearGradient : public AbstractPainter
{
public:
    /** Constructor. */
    AbstractPainterLinearGradient()
        : AbstractPainter(),
 80015ca:	f44f 03c8 	mov.w	r3, #6553600	@ 0x640000
          coord0(0), coord1(100), texture(0), isSolid(false), isVertical(false), isHorizontal(false), clSlope(0.0f), clOffset(0.0f), horizontalDistance(0.0f), deltaColor(0.0f)
 80015ce:	e9c4 3528 	strd	r3, r5, [r4, #160]	@ 0xa0
 80015d2:	2300      	movs	r3, #0
 80015d4:	f8c4 30ac 	str.w	r3, [r4, #172]	@ 0xac
 80015d8:	f8c4 30b0 	str.w	r3, [r4, #176]	@ 0xb0
 80015dc:	f8c4 30b4 	str.w	r3, [r4, #180]	@ 0xb4
 80015e0:	f8c4 30b8 	str.w	r3, [r4, #184]	@ 0xb8
 80015e4:	480e      	ldr	r0, [pc, #56]	@ (8001620 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0xb0>)
 * An abstract class for creating painter classes for drawing canvas widgets. All canvas widgets
 * need a painter to fill the shape drawn with a CanvasWidgetRenderer. The painter must provide
 * the color of a pixel on a given coordinate, which will the be blended into the framebuffer
 * depending on the position of the canvas widget and the transparency of the given pixel.
 */
class PainterRGB565LinearGradient : public AbstractPainterLinearGradient
 80015e6:	4b0f      	ldr	r3, [pc, #60]	@ (8001624 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0xb4>)
     *
     * @param  color The color.
     */
    virtual void setColor(colortype color)
    {
        painterColor = color;
 80015e8:	f8c4 5090 	str.w	r5, [r4, #144]	@ 0x90
        : AbstractPainter(),
 80015ec:	f8c4 509c 	str.w	r5, [r4, #156]	@ 0x9c
 80015f0:	f8c4 50a8 	str.w	r5, [r4, #168]	@ 0xa8
 80015f4:	f8c4 3098 	str.w	r3, [r4, #152]	@ 0x98
 80015f8:	f021 f978 	bl	80228ec <atexit>
 80015fc:	4630      	mov	r0, r6
 80015fe:	f020 fa28 	bl	8021a52 <__cxa_guard_release>
}
 8001602:	4802      	ldr	r0, [pc, #8]	@ (800160c <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x9c>)
 8001604:	bd70      	pop	{r4, r5, r6, pc}
 8001606:	bf00      	nop
 8001608:	20002430 	.word	0x20002430
 800160c:	20002434 	.word	0x20002434
 8001610:	08024ae8 	.word	0x08024ae8
 8001614:	0802462c 	.word	0x0802462c
 8001618:	080246a4 	.word	0x080246a4
 800161c:	08024a9c 	.word	0x08024a9c
 8001620:	080013e9 	.word	0x080013e9
 8001624:	08024a7c 	.word	0x08024a7c

08001628 <HAL_LTDC_LineEventCallback>:
}

extern "C"
{
    void HAL_LTDC_LineEventCallback(LTDC_HandleTypeDef* hltdc)
    {
 8001628:	b538      	push	{r3, r4, r5, lr}
        return instance;
 800162a:	4c18      	ldr	r4, [pc, #96]	@ (800168c <HAL_LTDC_LineEventCallback+0x64>)
        if (!HAL::getInstance())
 800162c:	6823      	ldr	r3, [r4, #0]
 800162e:	b35b      	cbz	r3, 8001688 <HAL_LTDC_LineEventCallback+0x60>
        {
            return;
        }

        if (LTDC->LIPCR == lcd_int_active_line)
 8001630:	4b17      	ldr	r3, [pc, #92]	@ (8001690 <HAL_LTDC_LineEventCallback+0x68>)
 8001632:	4a18      	ldr	r2, [pc, #96]	@ (8001694 <HAL_LTDC_LineEventCallback+0x6c>)
 8001634:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001636:	8811      	ldrh	r1, [r2, #0]
 8001638:	428b      	cmp	r3, r1
 800163a:	d116      	bne.n	800166a <HAL_LTDC_LineEventCallback+0x42>
        {
            //entering active area
            HAL_LTDC_ProgramLineEvent(hltdc, lcd_int_porch_line);
 800163c:	4b16      	ldr	r3, [pc, #88]	@ (8001698 <HAL_LTDC_LineEventCallback+0x70>)
 800163e:	8819      	ldrh	r1, [r3, #0]
 8001640:	f003 faa0 	bl	8004b84 <HAL_LTDC_ProgramLineEvent>
 8001644:	6823      	ldr	r3, [r4, #0]
        vSyncCnt++;
 8001646:	f893 206a 	ldrb.w	r2, [r3, #106]	@ 0x6a
        isFrontPorchEntered = false;
 800164a:	2500      	movs	r5, #0
        vSyncCnt++;
 800164c:	3201      	adds	r2, #1
 800164e:	f883 206a 	strb.w	r2, [r3, #106]	@ 0x6a
        isFrontPorchEntered = false;
 8001652:	f883 507c 	strb.w	r5, [r3, #124]	@ 0x7c
            HAL::getInstance()->vSync();
            OSWrappers::signalVSync();
 8001656:	f7ff fab7 	bl	8000bc8 <_ZN8touchgfx10OSWrappers11signalVSyncEv>

            // Swap frame buffers immediately instead of waiting for the task to be scheduled in.
            // Note: task will also swap when it wakes up, but that operation is guarded and will not have
            // any effect if already swapped.
            HAL::getInstance()->swapFrameBuffers();
 800165a:	6820      	ldr	r0, [r4, #0]
 800165c:	f009 fd36 	bl	800b0cc <_ZN8touchgfx3HAL16swapFrameBuffersEv>
            GPIO::set(GPIO::VSYNC_FREQ);
 8001660:	4628      	mov	r0, r5

            // Signal to the framework that display update has finished.
            HAL::getInstance()->frontPorchEntered();
            GPIO::clear(GPIO::VSYNC_FREQ);
        }
    }
 8001662:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
            GPIO::set(GPIO::VSYNC_FREQ);
 8001666:	f7ff b8f7 	b.w	8000858 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
            HAL_LTDC_ProgramLineEvent(hltdc, lcd_int_active_line);
 800166a:	f003 fa8b 	bl	8004b84 <HAL_LTDC_ProgramLineEvent>
        return instance;
 800166e:	6824      	ldr	r4, [r4, #0]
        allowDMATransfers();
 8001670:	6823      	ldr	r3, [r4, #0]
 8001672:	4620      	mov	r0, r4
 8001674:	6a1b      	ldr	r3, [r3, #32]
 8001676:	4798      	blx	r3
        isFrontPorchEntered = true;
 8001678:	2301      	movs	r3, #1
 800167a:	f884 307c 	strb.w	r3, [r4, #124]	@ 0x7c
            GPIO::clear(GPIO::VSYNC_FREQ);
 800167e:	2000      	movs	r0, #0
    }
 8001680:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
            GPIO::clear(GPIO::VSYNC_FREQ);
 8001684:	f7ff b912 	b.w	80008ac <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
    }
 8001688:	bd38      	pop	{r3, r4, r5, pc}
 800168a:	bf00      	nop
 800168c:	20013f2c 	.word	0x20013f2c
 8001690:	40016800 	.word	0x40016800
 8001694:	2000242e 	.word	0x2000242e
 8001698:	2000242c 	.word	0x2000242c

0800169c <MX_USB_DEVICE_Init>:
/**
  * Init USB device Library, add supported class and start the library
  * @retval None
  */
void MX_USB_DEVICE_Init(void)
{
 800169c:	b508      	push	{r3, lr}
  /* USER CODE BEGIN USB_DEVICE_Init_PreTreatment */

  /* USER CODE END USB_DEVICE_Init_PreTreatment */

  /* Init Device Library, add supported class and start the library. */
  if (USBD_Init(&hUsbDeviceHS, &HS_Desc, DEVICE_HS) != USBD_OK)
 800169e:	490c      	ldr	r1, [pc, #48]	@ (80016d0 <MX_USB_DEVICE_Init+0x34>)
 80016a0:	480c      	ldr	r0, [pc, #48]	@ (80016d4 <MX_USB_DEVICE_Init+0x38>)
 80016a2:	2201      	movs	r2, #1
 80016a4:	f007 ff24 	bl	80094f0 <USBD_Init>
 80016a8:	b108      	cbz	r0, 80016ae <MX_USB_DEVICE_Init+0x12>
  {
    Error_Handler();
 80016aa:	f000 fdbb 	bl	8002224 <Error_Handler>
  }
  if (USBD_RegisterClass(&hUsbDeviceHS, &USBD_HID) != USBD_OK)
 80016ae:	490a      	ldr	r1, [pc, #40]	@ (80016d8 <MX_USB_DEVICE_Init+0x3c>)
 80016b0:	4808      	ldr	r0, [pc, #32]	@ (80016d4 <MX_USB_DEVICE_Init+0x38>)
 80016b2:	f007 ff30 	bl	8009516 <USBD_RegisterClass>
 80016b6:	b108      	cbz	r0, 80016bc <MX_USB_DEVICE_Init+0x20>
  {
    Error_Handler();
 80016b8:	f000 fdb4 	bl	8002224 <Error_Handler>
  }
  if (USBD_Start(&hUsbDeviceHS) != USBD_OK)
 80016bc:	4805      	ldr	r0, [pc, #20]	@ (80016d4 <MX_USB_DEVICE_Init+0x38>)
 80016be:	f007 ff43 	bl	8009548 <USBD_Start>
 80016c2:	b118      	cbz	r0, 80016cc <MX_USB_DEVICE_Init+0x30>
  }

  /* USER CODE BEGIN USB_DEVICE_Init_PostTreatment */

  /* USER CODE END USB_DEVICE_Init_PostTreatment */
}
 80016c4:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    Error_Handler();
 80016c8:	f000 bdac 	b.w	8002224 <Error_Handler>
}
 80016cc:	bd08      	pop	{r3, pc}
 80016ce:	bf00      	nop
 80016d0:	20000040 	.word	0x20000040
 80016d4:	200024f0 	.word	0x200024f0
 80016d8:	2000015c 	.word	0x2000015c

080016dc <USBD_HS_DeviceDescriptor>:
  * @retval Pointer to descriptor buffer
  */
uint8_t * USBD_HS_DeviceDescriptor(USBD_SpeedTypeDef speed, uint16_t *length)
{
  UNUSED(speed);
  *length = sizeof(USBD_HS_DeviceDesc);
 80016dc:	2312      	movs	r3, #18
  return USBD_HS_DeviceDesc;
}
 80016de:	4801      	ldr	r0, [pc, #4]	@ (80016e4 <USBD_HS_DeviceDescriptor+0x8>)
  *length = sizeof(USBD_HS_DeviceDesc);
 80016e0:	800b      	strh	r3, [r1, #0]
}
 80016e2:	4770      	bx	lr
 80016e4:	2000002c 	.word	0x2000002c

080016e8 <USBD_HS_LangIDStrDescriptor>:
  * @retval Pointer to descriptor buffer
  */
uint8_t * USBD_HS_LangIDStrDescriptor(USBD_SpeedTypeDef speed, uint16_t *length)
{
  UNUSED(speed);
  *length = sizeof(USBD_LangIDDesc);
 80016e8:	2304      	movs	r3, #4
  return USBD_LangIDDesc;
}
 80016ea:	4801      	ldr	r0, [pc, #4]	@ (80016f0 <USBD_HS_LangIDStrDescriptor+0x8>)
  *length = sizeof(USBD_LangIDDesc);
 80016ec:	800b      	strh	r3, [r1, #0]
}
 80016ee:	4770      	bx	lr
 80016f0:	20000028 	.word	0x20000028

080016f4 <IntToUnicode>:
  * @param  pbuf: pointer to the buffer
  * @param  len: buffer length
  * @retval None
  */
static void IntToUnicode(uint32_t value, uint8_t * pbuf, uint8_t len)
{
 80016f4:	2300      	movs	r3, #0
 80016f6:	b570      	push	{r4, r5, r6, lr}
      pbuf[2 * idx] = (value >> 28) + 'A' - 10;
    }

    value = value << 4;

    pbuf[2 * idx + 1] = 0;
 80016f8:	1c4d      	adds	r5, r1, #1
 80016fa:	461e      	mov	r6, r3
      pbuf[2 * idx] = (value >> 28) + '0';
 80016fc:	0f04      	lsrs	r4, r0, #28
    if (((value >> 28)) < 0xA)
 80016fe:	f1b0 4f20 	cmp.w	r0, #2684354560	@ 0xa0000000
      pbuf[2 * idx] = (value >> 28) + '0';
 8001702:	bf34      	ite	cc
 8001704:	3430      	addcc	r4, #48	@ 0x30
      pbuf[2 * idx] = (value >> 28) + 'A' - 10;
 8001706:	3437      	addcs	r4, #55	@ 0x37
      pbuf[2 * idx] = (value >> 28) + '0';
 8001708:	f801 4013 	strb.w	r4, [r1, r3, lsl #1]
    pbuf[2 * idx + 1] = 0;
 800170c:	f805 6013 	strb.w	r6, [r5, r3, lsl #1]
  for (idx = 0; idx < len; idx++)
 8001710:	3301      	adds	r3, #1
 8001712:	b2dc      	uxtb	r4, r3
 8001714:	42a2      	cmp	r2, r4
    value = value << 4;
 8001716:	ea4f 1000 	mov.w	r0, r0, lsl #4
  for (idx = 0; idx < len; idx++)
 800171a:	d8ef      	bhi.n	80016fc <IntToUnicode+0x8>
  }
}
 800171c:	bd70      	pop	{r4, r5, r6, pc}
	...

08001720 <USBD_HS_SerialStrDescriptor>:
  *length = USB_SIZ_STRING_SERIAL;
 8001720:	231a      	movs	r3, #26
{
 8001722:	b510      	push	{r4, lr}
  *length = USB_SIZ_STRING_SERIAL;
 8001724:	800b      	strh	r3, [r1, #0]
  deviceserial0 = *(uint32_t *) DEVICE_ID1;
 8001726:	4b0a      	ldr	r3, [pc, #40]	@ (8001750 <USBD_HS_SerialStrDescriptor+0x30>)
 8001728:	f8d3 0a10 	ldr.w	r0, [r3, #2576]	@ 0xa10
  deviceserial0 += deviceserial2;
 800172c:	f8d3 2a18 	ldr.w	r2, [r3, #2584]	@ 0xa18
  if (deviceserial0 != 0)
 8001730:	1880      	adds	r0, r0, r2
 8001732:	d00a      	beq.n	800174a <USBD_HS_SerialStrDescriptor+0x2a>
  deviceserial1 = *(uint32_t *) DEVICE_ID2;
 8001734:	f8d3 4a14 	ldr.w	r4, [r3, #2580]	@ 0xa14
    IntToUnicode(deviceserial0, &USBD_StringSerial[2], 8);
 8001738:	4906      	ldr	r1, [pc, #24]	@ (8001754 <USBD_HS_SerialStrDescriptor+0x34>)
 800173a:	2208      	movs	r2, #8
 800173c:	f7ff ffda 	bl	80016f4 <IntToUnicode>
    IntToUnicode(deviceserial1, &USBD_StringSerial[18], 4);
 8001740:	2204      	movs	r2, #4
 8001742:	3110      	adds	r1, #16
 8001744:	4620      	mov	r0, r4
 8001746:	f7ff ffd5 	bl	80016f4 <IntToUnicode>
}
 800174a:	4803      	ldr	r0, [pc, #12]	@ (8001758 <USBD_HS_SerialStrDescriptor+0x38>)
 800174c:	bd10      	pop	{r4, pc}
 800174e:	bf00      	nop
 8001750:	1fff7000 	.word	0x1fff7000
 8001754:	2000000e 	.word	0x2000000e
 8001758:	2000000c 	.word	0x2000000c

0800175c <USBD_HS_ManufacturerStrDescriptor>:
{
 800175c:	b510      	push	{r4, lr}
  USBD_GetString((uint8_t *)USBD_MANUFACTURER_STRING, USBD_StrDesc, length);
 800175e:	4c04      	ldr	r4, [pc, #16]	@ (8001770 <USBD_HS_ManufacturerStrDescriptor+0x14>)
 8001760:	4804      	ldr	r0, [pc, #16]	@ (8001774 <USBD_HS_ManufacturerStrDescriptor+0x18>)
{
 8001762:	460a      	mov	r2, r1
  USBD_GetString((uint8_t *)USBD_MANUFACTURER_STRING, USBD_StrDesc, length);
 8001764:	4621      	mov	r1, r4
 8001766:	f008 fab5 	bl	8009cd4 <USBD_GetString>
}
 800176a:	4620      	mov	r0, r4
 800176c:	bd10      	pop	{r4, pc}
 800176e:	bf00      	nop
 8001770:	200027cc 	.word	0x200027cc
 8001774:	08023e6c 	.word	0x08023e6c

08001778 <USBD_HS_ProductStrDescriptor>:
{
 8001778:	b510      	push	{r4, lr}
    USBD_GetString((uint8_t *)USBD_PRODUCT_STRING_HS, USBD_StrDesc, length);
 800177a:	4c04      	ldr	r4, [pc, #16]	@ (800178c <USBD_HS_ProductStrDescriptor+0x14>)
 800177c:	4804      	ldr	r0, [pc, #16]	@ (8001790 <USBD_HS_ProductStrDescriptor+0x18>)
{
 800177e:	460a      	mov	r2, r1
    USBD_GetString((uint8_t *)USBD_PRODUCT_STRING_HS, USBD_StrDesc, length);
 8001780:	4621      	mov	r1, r4
 8001782:	f008 faa7 	bl	8009cd4 <USBD_GetString>
}
 8001786:	4620      	mov	r0, r4
 8001788:	bd10      	pop	{r4, pc}
 800178a:	bf00      	nop
 800178c:	200027cc 	.word	0x200027cc
 8001790:	08023e7f 	.word	0x08023e7f

08001794 <USBD_HS_ConfigStrDescriptor>:
{
 8001794:	b510      	push	{r4, lr}
    USBD_GetString((uint8_t *)USBD_CONFIGURATION_STRING_HS, USBD_StrDesc, length);
 8001796:	4c04      	ldr	r4, [pc, #16]	@ (80017a8 <USBD_HS_ConfigStrDescriptor+0x14>)
 8001798:	4804      	ldr	r0, [pc, #16]	@ (80017ac <USBD_HS_ConfigStrDescriptor+0x18>)
{
 800179a:	460a      	mov	r2, r1
    USBD_GetString((uint8_t *)USBD_CONFIGURATION_STRING_HS, USBD_StrDesc, length);
 800179c:	4621      	mov	r1, r4
 800179e:	f008 fa99 	bl	8009cd4 <USBD_GetString>
}
 80017a2:	4620      	mov	r0, r4
 80017a4:	bd10      	pop	{r4, pc}
 80017a6:	bf00      	nop
 80017a8:	200027cc 	.word	0x200027cc
 80017ac:	08023e95 	.word	0x08023e95

080017b0 <USBD_HS_InterfaceStrDescriptor>:
{
 80017b0:	b510      	push	{r4, lr}
    USBD_GetString((uint8_t *)USBD_INTERFACE_STRING_HS, USBD_StrDesc, length);
 80017b2:	4c04      	ldr	r4, [pc, #16]	@ (80017c4 <USBD_HS_InterfaceStrDescriptor+0x14>)
 80017b4:	4804      	ldr	r0, [pc, #16]	@ (80017c8 <USBD_HS_InterfaceStrDescriptor+0x18>)
{
 80017b6:	460a      	mov	r2, r1
    USBD_GetString((uint8_t *)USBD_INTERFACE_STRING_HS, USBD_StrDesc, length);
 80017b8:	4621      	mov	r1, r4
 80017ba:	f008 fa8b 	bl	8009cd4 <USBD_GetString>
}
 80017be:	4620      	mov	r0, r4
 80017c0:	bd10      	pop	{r4, pc}
 80017c2:	bf00      	nop
 80017c4:	200027cc 	.word	0x200027cc
 80017c8:	08023ea0 	.word	0x08023ea0

080017cc <HAL_PCD_MspInit>:
                       LL Driver Callbacks (PCD -> USB Device Library)
*******************************************************************************/
/* MSP Init */

void HAL_PCD_MspInit(PCD_HandleTypeDef* pcdHandle)
{
 80017cc:	b530      	push	{r4, r5, lr}
 80017ce:	4604      	mov	r4, r0
 80017d0:	b089      	sub	sp, #36	@ 0x24
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80017d2:	2214      	movs	r2, #20
 80017d4:	2100      	movs	r1, #0
 80017d6:	a803      	add	r0, sp, #12
 80017d8:	f021 fa71 	bl	8022cbe <memset>
  if(pcdHandle->Instance==USB_OTG_HS)
 80017dc:	6822      	ldr	r2, [r4, #0]
 80017de:	4b1c      	ldr	r3, [pc, #112]	@ (8001850 <HAL_PCD_MspInit+0x84>)
 80017e0:	429a      	cmp	r2, r3
 80017e2:	d133      	bne.n	800184c <HAL_PCD_MspInit+0x80>
  {
  /* USER CODE BEGIN USB_OTG_HS_MspInit 0 */

  /* USER CODE END USB_OTG_HS_MspInit 0 */

    __HAL_RCC_GPIOB_CLK_ENABLE();
 80017e4:	4c1b      	ldr	r4, [pc, #108]	@ (8001854 <HAL_PCD_MspInit+0x88>)
    PB15     ------> USB_OTG_HS_DP
    */
    GPIO_InitStruct.Pin = GPIO_PIN_13;
    GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80017e6:	481c      	ldr	r0, [pc, #112]	@ (8001858 <HAL_PCD_MspInit+0x8c>)
    __HAL_RCC_GPIOB_CLK_ENABLE();
 80017e8:	2500      	movs	r5, #0
 80017ea:	9501      	str	r5, [sp, #4]
 80017ec:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 80017ee:	f043 0302 	orr.w	r3, r3, #2
 80017f2:	6323      	str	r3, [r4, #48]	@ 0x30
 80017f4:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 80017f6:	f003 0302 	and.w	r3, r3, #2
 80017fa:	9301      	str	r3, [sp, #4]
 80017fc:	9b01      	ldr	r3, [sp, #4]
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80017fe:	a903      	add	r1, sp, #12
    GPIO_InitStruct.Pin = GPIO_PIN_13;
 8001800:	f44f 5300 	mov.w	r3, #8192	@ 0x2000
 8001804:	9303      	str	r3, [sp, #12]
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001806:	f002 facb 	bl	8003da0 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_14|GPIO_PIN_15;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800180a:	f44f 4240 	mov.w	r2, #49152	@ 0xc000
 800180e:	2302      	movs	r3, #2
 8001810:	e9cd 2303 	strd	r2, r3, [sp, #12]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF12_OTG_HS_FS;
 8001814:	2103      	movs	r1, #3
 8001816:	230c      	movs	r3, #12
 8001818:	e9cd 1306 	strd	r1, r3, [sp, #24]
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 800181c:	480e      	ldr	r0, [pc, #56]	@ (8001858 <HAL_PCD_MspInit+0x8c>)
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 800181e:	9505      	str	r5, [sp, #20]
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001820:	eb0d 0103 	add.w	r1, sp, r3
 8001824:	f002 fabc 	bl	8003da0 <HAL_GPIO_Init>

    /* Peripheral clock enable */
    __HAL_RCC_USB_OTG_HS_CLK_ENABLE();
 8001828:	9502      	str	r5, [sp, #8]
 800182a:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 800182c:	f043 5300 	orr.w	r3, r3, #536870912	@ 0x20000000
 8001830:	6323      	str	r3, [r4, #48]	@ 0x30
 8001832:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 8001834:	f003 5300 	and.w	r3, r3, #536870912	@ 0x20000000
 8001838:	9302      	str	r3, [sp, #8]

    /* Peripheral interrupt init */
    HAL_NVIC_SetPriority(OTG_HS_IRQn, 5, 0);
 800183a:	204d      	movs	r0, #77	@ 0x4d
 800183c:	462a      	mov	r2, r5
 800183e:	2105      	movs	r1, #5
    __HAL_RCC_USB_OTG_HS_CLK_ENABLE();
 8001840:	9b02      	ldr	r3, [sp, #8]
    HAL_NVIC_SetPriority(OTG_HS_IRQn, 5, 0);
 8001842:	f002 f963 	bl	8003b0c <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(OTG_HS_IRQn);
 8001846:	204d      	movs	r0, #77	@ 0x4d
 8001848:	f002 f992 	bl	8003b70 <HAL_NVIC_EnableIRQ>
  /* USER CODE BEGIN USB_OTG_HS_MspInit 1 */

  /* USER CODE END USB_OTG_HS_MspInit 1 */
  }
}
 800184c:	b009      	add	sp, #36	@ 0x24
 800184e:	bd30      	pop	{r4, r5, pc}
 8001850:	40040000 	.word	0x40040000
 8001854:	40023800 	.word	0x40023800
 8001858:	40020400 	.word	0x40020400

0800185c <HAL_PCD_SetupStageCallback>:
static void PCD_SetupStageCallback(PCD_HandleTypeDef *hpcd)
#else
void HAL_PCD_SetupStageCallback(PCD_HandleTypeDef *hpcd)
#endif /* USE_HAL_PCD_REGISTER_CALLBACKS */
{
  USBD_LL_SetupStage((USBD_HandleTypeDef*)hpcd->pData, (uint8_t *)hpcd->Setup);
 800185c:	f200 419c 	addw	r1, r0, #1180	@ 0x49c
 8001860:	f8d0 04e0 	ldr.w	r0, [r0, #1248]	@ 0x4e0
 8001864:	f007 be82 	b.w	800956c <USBD_LL_SetupStage>

08001868 <HAL_PCD_DataOutStageCallback>:
static void PCD_DataOutStageCallback(PCD_HandleTypeDef *hpcd, uint8_t epnum)
#else
void HAL_PCD_DataOutStageCallback(PCD_HandleTypeDef *hpcd, uint8_t epnum)
#endif /* USE_HAL_PCD_REGISTER_CALLBACKS */
{
  USBD_LL_DataOutStage((USBD_HandleTypeDef*)hpcd->pData, epnum, hpcd->OUT_ep[epnum].xfer_buff);
 8001868:	2324      	movs	r3, #36	@ 0x24
 800186a:	fb03 0301 	mla	r3, r3, r1, r0
 800186e:	f8d0 04e0 	ldr.w	r0, [r0, #1248]	@ 0x4e0
 8001872:	f8d3 2260 	ldr.w	r2, [r3, #608]	@ 0x260
 8001876:	f007 bea9 	b.w	80095cc <USBD_LL_DataOutStage>

0800187a <HAL_PCD_DataInStageCallback>:
static void PCD_DataInStageCallback(PCD_HandleTypeDef *hpcd, uint8_t epnum)
#else
void HAL_PCD_DataInStageCallback(PCD_HandleTypeDef *hpcd, uint8_t epnum)
#endif /* USE_HAL_PCD_REGISTER_CALLBACKS */
{
  USBD_LL_DataInStage((USBD_HandleTypeDef*)hpcd->pData, epnum, hpcd->IN_ep[epnum].xfer_buff);
 800187a:	2324      	movs	r3, #36	@ 0x24
 800187c:	fb03 0301 	mla	r3, r3, r1, r0
 8001880:	f8d0 04e0 	ldr.w	r0, [r0, #1248]	@ 0x4e0
 8001884:	6a1a      	ldr	r2, [r3, #32]
 8001886:	f007 bed6 	b.w	8009636 <USBD_LL_DataInStage>

0800188a <HAL_PCD_SOFCallback>:
static void PCD_SOFCallback(PCD_HandleTypeDef *hpcd)
#else
void HAL_PCD_SOFCallback(PCD_HandleTypeDef *hpcd)
#endif /* USE_HAL_PCD_REGISTER_CALLBACKS */
{
  USBD_LL_SOF((USBD_HandleTypeDef*)hpcd->pData);
 800188a:	f8d0 04e0 	ldr.w	r0, [r0, #1248]	@ 0x4e0
 800188e:	f007 bf70 	b.w	8009772 <USBD_LL_SOF>

08001892 <HAL_PCD_ResetCallback>:
#if (USE_HAL_PCD_REGISTER_CALLBACKS == 1U)
static void PCD_ResetCallback(PCD_HandleTypeDef *hpcd)
#else
void HAL_PCD_ResetCallback(PCD_HandleTypeDef *hpcd)
#endif /* USE_HAL_PCD_REGISTER_CALLBACKS */
{
 8001892:	b510      	push	{r4, lr}
  USBD_SpeedTypeDef speed = USBD_SPEED_FULL;

  if ( hpcd->Init.speed == PCD_SPEED_HIGH)
 8001894:	79c1      	ldrb	r1, [r0, #7]
{
 8001896:	4604      	mov	r4, r0
  if ( hpcd->Init.speed == PCD_SPEED_HIGH)
 8001898:	b121      	cbz	r1, 80018a4 <HAL_PCD_ResetCallback+0x12>
  {
    speed = USBD_SPEED_HIGH;
  }
  else if ( hpcd->Init.speed == PCD_SPEED_FULL)
 800189a:	2902      	cmp	r1, #2
 800189c:	d001      	beq.n	80018a2 <HAL_PCD_ResetCallback+0x10>
  {
    speed = USBD_SPEED_FULL;
  }
  else
  {
    Error_Handler();
 800189e:	f000 fcc1 	bl	8002224 <Error_Handler>
    speed = USBD_SPEED_FULL;
 80018a2:	2101      	movs	r1, #1
  }
    /* Set Speed. */
  USBD_LL_SetSpeed((USBD_HandleTypeDef*)hpcd->pData, speed);
 80018a4:	f8d4 04e0 	ldr.w	r0, [r4, #1248]	@ 0x4e0
 80018a8:	f007 ff47 	bl	800973a <USBD_LL_SetSpeed>

  /* Reset Device. */
  USBD_LL_Reset((USBD_HandleTypeDef*)hpcd->pData);
 80018ac:	f8d4 04e0 	ldr.w	r0, [r4, #1248]	@ 0x4e0
}
 80018b0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  USBD_LL_Reset((USBD_HandleTypeDef*)hpcd->pData);
 80018b4:	f007 bf12 	b.w	80096dc <USBD_LL_Reset>

080018b8 <HAL_PCD_SuspendCallback>:
#if (USE_HAL_PCD_REGISTER_CALLBACKS == 1U)
static void PCD_SuspendCallback(PCD_HandleTypeDef *hpcd)
#else
void HAL_PCD_SuspendCallback(PCD_HandleTypeDef *hpcd)
#endif /* USE_HAL_PCD_REGISTER_CALLBACKS */
{
 80018b8:	b510      	push	{r4, lr}
 80018ba:	4604      	mov	r4, r0
  /* Inform USB library that core enters in suspend Mode. */
  USBD_LL_Suspend((USBD_HandleTypeDef*)hpcd->pData);
 80018bc:	f8d0 04e0 	ldr.w	r0, [r0, #1248]	@ 0x4e0
 80018c0:	f007 ff3e 	bl	8009740 <USBD_LL_Suspend>
  __HAL_PCD_GATE_PHYCLOCK(hpcd);
 80018c4:	6822      	ldr	r2, [r4, #0]
 80018c6:	f8d2 3e00 	ldr.w	r3, [r2, #3584]	@ 0xe00
 80018ca:	f043 0301 	orr.w	r3, r3, #1
 80018ce:	f8c2 3e00 	str.w	r3, [r2, #3584]	@ 0xe00
  /* Enter in STOP mode. */
  /* USER CODE BEGIN 2 */
  if (hpcd->Init.low_power_enable)
 80018d2:	7ae3      	ldrb	r3, [r4, #11]
 80018d4:	b123      	cbz	r3, 80018e0 <HAL_PCD_SuspendCallback+0x28>
  {
    /* Set SLEEPDEEP bit and SleepOnExit of Cortex System Control Register. */
    SCB->SCR |= (uint32_t)((uint32_t)(SCB_SCR_SLEEPDEEP_Msk | SCB_SCR_SLEEPONEXIT_Msk));
 80018d6:	4a03      	ldr	r2, [pc, #12]	@ (80018e4 <HAL_PCD_SuspendCallback+0x2c>)
 80018d8:	6913      	ldr	r3, [r2, #16]
 80018da:	f043 0306 	orr.w	r3, r3, #6
 80018de:	6113      	str	r3, [r2, #16]
  }
  /* USER CODE END 2 */
}
 80018e0:	bd10      	pop	{r4, pc}
 80018e2:	bf00      	nop
 80018e4:	e000ed00 	.word	0xe000ed00

080018e8 <HAL_PCD_ResumeCallback>:
#endif /* USE_HAL_PCD_REGISTER_CALLBACKS */
{
  /* USER CODE BEGIN 3 */

  /* USER CODE END 3 */
  USBD_LL_Resume((USBD_HandleTypeDef*)hpcd->pData);
 80018e8:	f8d0 04e0 	ldr.w	r0, [r0, #1248]	@ 0x4e0
 80018ec:	f007 bf36 	b.w	800975c <USBD_LL_Resume>

080018f0 <HAL_PCD_ISOOUTIncompleteCallback>:
static void PCD_ISOOUTIncompleteCallback(PCD_HandleTypeDef *hpcd, uint8_t epnum)
#else
void HAL_PCD_ISOOUTIncompleteCallback(PCD_HandleTypeDef *hpcd, uint8_t epnum)
#endif /* USE_HAL_PCD_REGISTER_CALLBACKS */
{
  USBD_LL_IsoOUTIncomplete((USBD_HandleTypeDef*)hpcd->pData, epnum);
 80018f0:	f8d0 04e0 	ldr.w	r0, [r0, #1248]	@ 0x4e0
 80018f4:	f007 bf5d 	b.w	80097b2 <USBD_LL_IsoOUTIncomplete>

080018f8 <HAL_PCD_ISOINIncompleteCallback>:
static void PCD_ISOINIncompleteCallback(PCD_HandleTypeDef *hpcd, uint8_t epnum)
#else
void HAL_PCD_ISOINIncompleteCallback(PCD_HandleTypeDef *hpcd, uint8_t epnum)
#endif /* USE_HAL_PCD_REGISTER_CALLBACKS */
{
  USBD_LL_IsoINIncomplete((USBD_HandleTypeDef*)hpcd->pData, epnum);
 80018f8:	f8d0 04e0 	ldr.w	r0, [r0, #1248]	@ 0x4e0
 80018fc:	f007 bf46 	b.w	800978c <USBD_LL_IsoINIncomplete>

08001900 <HAL_PCD_ConnectCallback>:
static void PCD_ConnectCallback(PCD_HandleTypeDef *hpcd)
#else
void HAL_PCD_ConnectCallback(PCD_HandleTypeDef *hpcd)
#endif /* USE_HAL_PCD_REGISTER_CALLBACKS */
{
  USBD_LL_DevConnected((USBD_HandleTypeDef*)hpcd->pData);
 8001900:	f8d0 04e0 	ldr.w	r0, [r0, #1248]	@ 0x4e0
 8001904:	f007 bf68 	b.w	80097d8 <USBD_LL_DevConnected>

08001908 <HAL_PCD_DisconnectCallback>:
static void PCD_DisconnectCallback(PCD_HandleTypeDef *hpcd)
#else
void HAL_PCD_DisconnectCallback(PCD_HandleTypeDef *hpcd)
#endif /* USE_HAL_PCD_REGISTER_CALLBACKS */
{
  USBD_LL_DevDisconnected((USBD_HandleTypeDef*)hpcd->pData);
 8001908:	f8d0 04e0 	ldr.w	r0, [r0, #1248]	@ 0x4e0
 800190c:	f007 bf66 	b.w	80097dc <USBD_LL_DevDisconnected>

08001910 <USBD_LL_Init>:
  * @brief  Initializes the low level portion of the device driver.
  * @param  pdev: Device handle
  * @retval USBD status
  */
USBD_StatusTypeDef USBD_LL_Init(USBD_HandleTypeDef *pdev)
{
 8001910:	b508      	push	{r3, lr}
  /* Init USB Ip. */
  if (pdev->id == DEVICE_HS) {
 8001912:	7802      	ldrb	r2, [r0, #0]
 8001914:	2a01      	cmp	r2, #1
{
 8001916:	4603      	mov	r3, r0
  if (pdev->id == DEVICE_HS) {
 8001918:	d127      	bne.n	800196a <USBD_LL_Init+0x5a>
  /* Link the driver to the stack. */
  hpcd_USB_OTG_HS.pData = pdev;
 800191a:	4815      	ldr	r0, [pc, #84]	@ (8001970 <USBD_LL_Init+0x60>)
 800191c:	f8c0 34e0 	str.w	r3, [r0, #1248]	@ 0x4e0
  pdev->pData = &hpcd_USB_OTG_HS;
 8001920:	f8c3 02c8 	str.w	r0, [r3, #712]	@ 0x2c8

  hpcd_USB_OTG_HS.Instance = USB_OTG_HS;
 8001924:	4b13      	ldr	r3, [pc, #76]	@ (8001974 <USBD_LL_Init+0x64>)
 8001926:	6003      	str	r3, [r0, #0]
  hpcd_USB_OTG_HS.Init.dev_endpoints = 6;
 8001928:	2306      	movs	r3, #6
 800192a:	7103      	strb	r3, [r0, #4]
  hpcd_USB_OTG_HS.Init.speed = PCD_SPEED_FULL;
  hpcd_USB_OTG_HS.Init.dma_enable = DISABLE;
 800192c:	f44f 7300 	mov.w	r3, #512	@ 0x200
 8001930:	80c3      	strh	r3, [r0, #6]
  hpcd_USB_OTG_HS.Init.phy_itface = USB_OTG_EMBEDDED_PHY;
 8001932:	2302      	movs	r3, #2
 8001934:	7243      	strb	r3, [r0, #9]
  hpcd_USB_OTG_HS.Init.Sof_enable = DISABLE;
 8001936:	2300      	movs	r3, #0
 8001938:	8143      	strh	r3, [r0, #10]
  hpcd_USB_OTG_HS.Init.low_power_enable = DISABLE;
  hpcd_USB_OTG_HS.Init.lpm_enable = DISABLE;
 800193a:	7303      	strb	r3, [r0, #12]
  hpcd_USB_OTG_HS.Init.vbus_sensing_enable = ENABLE;
 800193c:	81c2      	strh	r2, [r0, #14]
  hpcd_USB_OTG_HS.Init.use_dedicated_ep1 = DISABLE;
  hpcd_USB_OTG_HS.Init.use_external_vbus = DISABLE;
 800193e:	7403      	strb	r3, [r0, #16]
  if (HAL_PCD_Init(&hpcd_USB_OTG_HS) != HAL_OK)
 8001940:	f003 f93e 	bl	8004bc0 <HAL_PCD_Init>
 8001944:	b108      	cbz	r0, 800194a <USBD_LL_Init+0x3a>
  {
    Error_Handler( );
 8001946:	f000 fc6d 	bl	8002224 <Error_Handler>
  HAL_PCD_RegisterDataOutStageCallback(&hpcd_USB_OTG_HS, PCD_DataOutStageCallback);
  HAL_PCD_RegisterDataInStageCallback(&hpcd_USB_OTG_HS, PCD_DataInStageCallback);
  HAL_PCD_RegisterIsoOutIncpltCallback(&hpcd_USB_OTG_HS, PCD_ISOOUTIncompleteCallback);
  HAL_PCD_RegisterIsoInIncpltCallback(&hpcd_USB_OTG_HS, PCD_ISOINIncompleteCallback);
#endif /* USE_HAL_PCD_REGISTER_CALLBACKS */
  HAL_PCDEx_SetRxFiFo(&hpcd_USB_OTG_HS, 0x200);
 800194a:	f44f 7100 	mov.w	r1, #512	@ 0x200
 800194e:	4808      	ldr	r0, [pc, #32]	@ (8001970 <USBD_LL_Init+0x60>)
 8001950:	f003 fe5b 	bl	800560a <HAL_PCDEx_SetRxFiFo>
  HAL_PCDEx_SetTxFiFo(&hpcd_USB_OTG_HS, 0, 0x80);
 8001954:	2280      	movs	r2, #128	@ 0x80
 8001956:	2100      	movs	r1, #0
 8001958:	4805      	ldr	r0, [pc, #20]	@ (8001970 <USBD_LL_Init+0x60>)
 800195a:	f003 fe37 	bl	80055cc <HAL_PCDEx_SetTxFiFo>
  HAL_PCDEx_SetTxFiFo(&hpcd_USB_OTG_HS, 1, 0x174);
 800195e:	4804      	ldr	r0, [pc, #16]	@ (8001970 <USBD_LL_Init+0x60>)
 8001960:	f44f 72ba 	mov.w	r2, #372	@ 0x174
 8001964:	2101      	movs	r1, #1
 8001966:	f003 fe31 	bl	80055cc <HAL_PCDEx_SetTxFiFo>
  }
  return USBD_OK;
}
 800196a:	2000      	movs	r0, #0
 800196c:	bd08      	pop	{r3, pc}
 800196e:	bf00      	nop
 8001970:	200029e0 	.word	0x200029e0
 8001974:	40040000 	.word	0x40040000

08001978 <USBD_LL_IsStallEP>:
  */
uint8_t USBD_LL_IsStallEP(USBD_HandleTypeDef *pdev, uint8_t ep_addr)
{
  PCD_HandleTypeDef *hpcd = (PCD_HandleTypeDef*) pdev->pData;

  if((ep_addr & 0x80) == 0x80)
 8001978:	f011 0f80 	tst.w	r1, #128	@ 0x80
  PCD_HandleTypeDef *hpcd = (PCD_HandleTypeDef*) pdev->pData;
 800197c:	f8d0 32c8 	ldr.w	r3, [r0, #712]	@ 0x2c8
  if((ep_addr & 0x80) == 0x80)
 8001980:	f04f 0224 	mov.w	r2, #36	@ 0x24
  {
    return hpcd->IN_ep[ep_addr & 0x7F].is_stall;
 8001984:	bf1b      	ittet	ne
 8001986:	f001 017f 	andne.w	r1, r1, #127	@ 0x7f
 800198a:	fb02 3301 	mlane	r3, r2, r1, r3
  }
  else
  {
    return hpcd->OUT_ep[ep_addr & 0x7F].is_stall;
 800198e:	fb02 3301 	mlaeq	r3, r2, r1, r3
    return hpcd->IN_ep[ep_addr & 0x7F].is_stall;
 8001992:	7d98      	ldrbne	r0, [r3, #22]
    return hpcd->OUT_ep[ep_addr & 0x7F].is_stall;
 8001994:	bf08      	it	eq
 8001996:	f893 0256 	ldrbeq.w	r0, [r3, #598]	@ 0x256
  }
}
 800199a:	4770      	bx	lr

0800199c <USBD_static_malloc>:
  */
void *USBD_static_malloc(uint32_t size)
{
  static uint32_t mem[(sizeof(USBD_HID_HandleTypeDef)/4)+1];/* On 32-bit boundary */
  return mem;
}
 800199c:	4800      	ldr	r0, [pc, #0]	@ (80019a0 <USBD_static_malloc+0x4>)
 800199e:	4770      	bx	lr
 80019a0:	200029cc 	.word	0x200029cc

080019a4 <USBD_static_free>:
  * @retval None
  */
void USBD_static_free(void *p)
{

}
 80019a4:	4770      	bx	lr

080019a6 <USBD_Get_USB_Status>:
  */
USBD_StatusTypeDef USBD_Get_USB_Status(HAL_StatusTypeDef hal_status)
{
  USBD_StatusTypeDef usb_status = USBD_OK;

  switch (hal_status)
 80019a6:	b118      	cbz	r0, 80019b0 <USBD_Get_USB_Status+0xa>
 80019a8:	2802      	cmp	r0, #2
 80019aa:	bf0c      	ite	eq
 80019ac:	2001      	moveq	r0, #1
 80019ae:	2003      	movne	r0, #3
    default :
      usb_status = USBD_FAIL;
    break;
  }
  return usb_status;
}
 80019b0:	4770      	bx	lr

080019b2 <USBD_LL_Start>:
{
 80019b2:	b508      	push	{r3, lr}
  hal_status = HAL_PCD_Start(pdev->pData);
 80019b4:	f8d0 02c8 	ldr.w	r0, [r0, #712]	@ 0x2c8
 80019b8:	f003 f971 	bl	8004c9e <HAL_PCD_Start>
}
 80019bc:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  usb_status =  USBD_Get_USB_Status(hal_status);
 80019c0:	f7ff bff1 	b.w	80019a6 <USBD_Get_USB_Status>

080019c4 <USBD_LL_OpenEP>:
{
 80019c4:	b510      	push	{r4, lr}
 80019c6:	4614      	mov	r4, r2
  hal_status = HAL_PCD_EP_Open(pdev->pData, ep_addr, ep_mps, ep_type);
 80019c8:	f8d0 02c8 	ldr.w	r0, [r0, #712]	@ 0x2c8
{
 80019cc:	461a      	mov	r2, r3
  hal_status = HAL_PCD_EP_Open(pdev->pData, ep_addr, ep_mps, ep_type);
 80019ce:	4623      	mov	r3, r4
 80019d0:	f003 f997 	bl	8004d02 <HAL_PCD_EP_Open>
}
 80019d4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  usb_status =  USBD_Get_USB_Status(hal_status);
 80019d8:	f7ff bfe5 	b.w	80019a6 <USBD_Get_USB_Status>

080019dc <USBD_LL_CloseEP>:
{
 80019dc:	b508      	push	{r3, lr}
  hal_status = HAL_PCD_EP_Close(pdev->pData, ep_addr);
 80019de:	f8d0 02c8 	ldr.w	r0, [r0, #712]	@ 0x2c8
 80019e2:	f003 f9c7 	bl	8004d74 <HAL_PCD_EP_Close>
}
 80019e6:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  usb_status =  USBD_Get_USB_Status(hal_status);
 80019ea:	f7ff bfdc 	b.w	80019a6 <USBD_Get_USB_Status>

080019ee <USBD_LL_StallEP>:
{
 80019ee:	b508      	push	{r3, lr}
  hal_status = HAL_PCD_EP_SetStall(pdev->pData, ep_addr);
 80019f0:	f8d0 02c8 	ldr.w	r0, [r0, #712]	@ 0x2c8
 80019f4:	f003 fa25 	bl	8004e42 <HAL_PCD_EP_SetStall>
}
 80019f8:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  usb_status =  USBD_Get_USB_Status(hal_status);
 80019fc:	f7ff bfd3 	b.w	80019a6 <USBD_Get_USB_Status>

08001a00 <USBD_LL_ClearStallEP>:
{
 8001a00:	b508      	push	{r3, lr}
  hal_status = HAL_PCD_EP_ClrStall(pdev->pData, ep_addr);
 8001a02:	f8d0 02c8 	ldr.w	r0, [r0, #712]	@ 0x2c8
 8001a06:	f003 fa53 	bl	8004eb0 <HAL_PCD_EP_ClrStall>
}
 8001a0a:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  usb_status =  USBD_Get_USB_Status(hal_status);
 8001a0e:	f7ff bfca 	b.w	80019a6 <USBD_Get_USB_Status>

08001a12 <USBD_LL_SetUSBAddress>:
{
 8001a12:	b508      	push	{r3, lr}
  hal_status = HAL_PCD_SetAddress(pdev->pData, dev_addr);
 8001a14:	f8d0 02c8 	ldr.w	r0, [r0, #712]	@ 0x2c8
 8001a18:	f003 f960 	bl	8004cdc <HAL_PCD_SetAddress>
}
 8001a1c:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  usb_status =  USBD_Get_USB_Status(hal_status);
 8001a20:	f7ff bfc1 	b.w	80019a6 <USBD_Get_USB_Status>

08001a24 <USBD_LL_Transmit>:
{
 8001a24:	b508      	push	{r3, lr}
  hal_status = HAL_PCD_EP_Transmit(pdev->pData, ep_addr, pbuf, size);
 8001a26:	f8d0 02c8 	ldr.w	r0, [r0, #712]	@ 0x2c8
 8001a2a:	f003 f9ef 	bl	8004e0c <HAL_PCD_EP_Transmit>
}
 8001a2e:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  usb_status =  USBD_Get_USB_Status(hal_status);
 8001a32:	f7ff bfb8 	b.w	80019a6 <USBD_Get_USB_Status>

08001a36 <USBD_LL_PrepareReceive>:
{
 8001a36:	b508      	push	{r3, lr}
  hal_status = HAL_PCD_EP_Receive(pdev->pData, ep_addr, pbuf, size);
 8001a38:	f8d0 02c8 	ldr.w	r0, [r0, #712]	@ 0x2c8
 8001a3c:	f003 f9c8 	bl	8004dd0 <HAL_PCD_EP_Receive>
}
 8001a40:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  usb_status =  USBD_Get_USB_Status(hal_status);
 8001a44:	f7ff bfaf 	b.w	80019a6 <USBD_Get_USB_Status>

08001a48 <SPI5_Write>:
/**
  * @brief  Writes a byte to device.
  * @param  Value: value to be written
  */
static void SPI5_Write(uint16_t Value)
{
 8001a48:	b507      	push	{r0, r1, r2, lr}
  HAL_StatusTypeDef status = HAL_OK;

  status = HAL_SPI_Transmit(&hspi5, (uint8_t*) &Value, 1, Spi5Timeout);
 8001a4a:	4b06      	ldr	r3, [pc, #24]	@ (8001a64 <SPI5_Write+0x1c>)
{
 8001a4c:	f8ad 0006 	strh.w	r0, [sp, #6]
  status = HAL_SPI_Transmit(&hspi5, (uint8_t*) &Value, 1, Spi5Timeout);
 8001a50:	681b      	ldr	r3, [r3, #0]
 8001a52:	4805      	ldr	r0, [pc, #20]	@ (8001a68 <SPI5_Write+0x20>)
 8001a54:	2201      	movs	r2, #1
 8001a56:	f10d 0106 	add.w	r1, sp, #6
 8001a5a:	f004 fb29 	bl	80060b0 <HAL_SPI_Transmit>
  if(status != HAL_OK)
  {
    /* Re-Initialize the BUS */
    SPI5_Error();
  }
}
 8001a5e:	b003      	add	sp, #12
 8001a60:	f85d fb04 	ldr.w	pc, [sp], #4
 8001a64:	2000005c 	.word	0x2000005c
 8001a68:	20002f14 	.word	0x20002f14

08001a6c <StartDefaultTask>:
  * @param  argument: Not used
  * @retval None
  */
/* USER CODE END Header_StartDefaultTask */
void StartDefaultTask(void *argument)
{
 8001a6c:	b530      	push	{r4, r5, lr}
 8001a6e:	ed2d 8b04 	vpush	{d8-d9}
 8001a72:	b087      	sub	sp, #28
  /* init code for USB_DEVICE */
  MX_USB_DEVICE_Init();
 8001a74:	f7ff fe12 	bl	800169c <MX_USB_DEVICE_Init>
    float gyro_offset[3] = {0.0f, 0.0f, 0.0f};

    const int CALIBRATION_SAMPLES = 200;

    // --- BƯỚC 1: KHỞI TẠO VÀ HIỆU CHỈNH GYRO (GIỮ NGUYÊN) ---
    osDelay(500);
 8001a78:	f44f 70fa 	mov.w	r0, #500	@ 0x1f4
    float gyro_offset[3] = {0.0f, 0.0f, 0.0f};
 8001a7c:	ed9f 8a28 	vldr	s16, [pc, #160]	@ 8001b20 <StartDefaultTask+0xb4>
    osDelay(500);
 8001a80:	f005 fcee 	bl	8007460 <osDelay>
    if (BSP_GYRO_Init() != BSP_GYRO_OK)
 8001a84:	f000 fc40 	bl	8002308 <BSP_GYRO_Init>
 8001a88:	24c8      	movs	r4, #200	@ 0xc8
    float gyro_offset[3] = {0.0f, 0.0f, 0.0f};
 8001a8a:	eeb0 9a48 	vmov.f32	s18, s16
 8001a8e:	eef0 8a48 	vmov.f32	s17, s16
      Error_Handler();
    }

    for (int i = 0; i < CALIBRATION_SAMPLES; i++)
    {
      if (BSP_GYRO_GetXYZ(bsp_gyro_data) == BSP_GYRO_OK)
 8001a92:	a803      	add	r0, sp, #12
 8001a94:	f000 fc94 	bl	80023c0 <BSP_GYRO_GetXYZ>
 8001a98:	b958      	cbnz	r0, 8001ab2 <StartDefaultTask+0x46>
      {
        gyro_offset[0] += bsp_gyro_data[0];
 8001a9a:	eddd 7a03 	vldr	s15, [sp, #12]
 8001a9e:	ee39 9a27 	vadd.f32	s18, s18, s15
        gyro_offset[1] += bsp_gyro_data[1];
 8001aa2:	eddd 7a04 	vldr	s15, [sp, #16]
 8001aa6:	ee78 8aa7 	vadd.f32	s17, s17, s15
        gyro_offset[2] += bsp_gyro_data[2];
 8001aaa:	eddd 7a05 	vldr	s15, [sp, #20]
 8001aae:	ee38 8a27 	vadd.f32	s16, s16, s15
      }
      osDelay(5);
 8001ab2:	2005      	movs	r0, #5
 8001ab4:	f005 fcd4 	bl	8007460 <osDelay>
    for (int i = 0; i < CALIBRATION_SAMPLES; i++)
 8001ab8:	3c01      	subs	r4, #1
 8001aba:	d1ea      	bne.n	8001a92 <StartDefaultTask+0x26>
    }
    gyro_offset[0] /= CALIBRATION_SAMPLES;
 8001abc:	eddf 7a19 	vldr	s15, [pc, #100]	@ 8001b24 <StartDefaultTask+0xb8>

          // --- BƯỚC 2: GỬI DỮ LIỆU VÀO CẢ HAI QUEUE ---

          // Gửi vào Queue 1 cho quả bóng (TouchGFX)
          // Dùng timeout 0 để không block task này nếu queue của GUI bị đầy
          if (Queue1Handle != NULL) {
 8001ac0:	4c19      	ldr	r4, [pc, #100]	@ (8001b28 <StartDefaultTask+0xbc>)
              osMessageQueuePut(Queue1Handle, &currentGyroData, 0U, 0);
          }
          // Gửi vào Queue 2 cho chuột HID
          if (Queue2Handle != NULL) {
 8001ac2:	4d1a      	ldr	r5, [pc, #104]	@ (8001b2c <StartDefaultTask+0xc0>)
    gyro_offset[0] /= CALIBRATION_SAMPLES;
 8001ac4:	eec9 9a27 	vdiv.f32	s19, s18, s15
    gyro_offset[1] /= CALIBRATION_SAMPLES;
 8001ac8:	ee88 9aa7 	vdiv.f32	s18, s17, s15
    gyro_offset[2] /= CALIBRATION_SAMPLES;
 8001acc:	eec8 8a27 	vdiv.f32	s17, s16, s15
  	if (BSP_GYRO_GetXYZ(bsp_gyro_data) == BSP_GYRO_OK)
 8001ad0:	a803      	add	r0, sp, #12
 8001ad2:	f000 fc75 	bl	80023c0 <BSP_GYRO_GetXYZ>
 8001ad6:	4603      	mov	r3, r0
 8001ad8:	b9f0      	cbnz	r0, 8001b18 <StartDefaultTask+0xac>
          if (Queue1Handle != NULL) {
 8001ada:	6820      	ldr	r0, [r4, #0]
          currentGyroData.gx = bsp_gyro_data[0] - gyro_offset[0];
 8001adc:	eddd 7a03 	vldr	s15, [sp, #12]
 8001ae0:	ee77 7ae9 	vsub.f32	s15, s15, s19
 8001ae4:	edcd 7a00 	vstr	s15, [sp]
          currentGyroData.gy = bsp_gyro_data[1] - gyro_offset[1];
 8001ae8:	eddd 7a04 	vldr	s15, [sp, #16]
 8001aec:	ee77 7ac9 	vsub.f32	s15, s15, s18
 8001af0:	edcd 7a01 	vstr	s15, [sp, #4]
          currentGyroData.gz = bsp_gyro_data[2] - gyro_offset[2];
 8001af4:	eddd 7a05 	vldr	s15, [sp, #20]
 8001af8:	ee77 7ae8 	vsub.f32	s15, s15, s17
 8001afc:	edcd 7a02 	vstr	s15, [sp, #8]
          if (Queue1Handle != NULL) {
 8001b00:	b118      	cbz	r0, 8001b0a <StartDefaultTask+0x9e>
              osMessageQueuePut(Queue1Handle, &currentGyroData, 0U, 0);
 8001b02:	461a      	mov	r2, r3
 8001b04:	4669      	mov	r1, sp
 8001b06:	f005 fd91 	bl	800762c <osMessageQueuePut>
          if (Queue2Handle != NULL) {
 8001b0a:	6828      	ldr	r0, [r5, #0]
 8001b0c:	b120      	cbz	r0, 8001b18 <StartDefaultTask+0xac>
              osMessageQueuePut(Queue2Handle, &currentGyroData, 0U, 0);
 8001b0e:	2300      	movs	r3, #0
 8001b10:	461a      	mov	r2, r3
 8001b12:	4669      	mov	r1, sp
 8001b14:	f005 fd8a 	bl	800762c <osMessageQueuePut>
          }
  	}

      // Delay 20ms để có tần số cập nhật 50Hz, tốt cho cả GUI và chuột
  	osDelay(20);
 8001b18:	2014      	movs	r0, #20
 8001b1a:	f005 fca1 	bl	8007460 <osDelay>
  	if (BSP_GYRO_GetXYZ(bsp_gyro_data) == BSP_GYRO_OK)
 8001b1e:	e7d7      	b.n	8001ad0 <StartDefaultTask+0x64>
 8001b20:	00000000 	.word	0x00000000
 8001b24:	43480000 	.word	0x43480000
 8001b28:	20002ecc 	.word	0x20002ecc
 8001b2c:	20002ec8 	.word	0x20002ec8

08001b30 <MouseControlTask>:
* @param argument: Not used
* @retval None
*/
/* USER CODE END Header_MouseControlTask */
void MouseControlTask(void *argument)
{
 8001b30:	b51f      	push	{r0, r1, r2, r3, r4, lr}

	    for(;;)
	    {
	        // Chờ và nhận dữ liệu từ Queue 2
	        // osWaitForever để task này ngủ khi không có dữ liệu, tiết kiệm CPU
	        if (osMessageQueueGet(Queue2Handle, &gyroData, NULL, osWaitForever) == osOK)
 8001b32:	4c1c      	ldr	r4, [pc, #112]	@ (8001ba4 <MouseControlTask+0x74>)
	            mousehid_report.mouse_x = 0;
	            mousehid_report.mouse_y = 0;
	            mousehid_report.wheel = 0;

	            // Ánh xạ gyro sang chuyển động chuột (logic giống như trước)
	            if (fabsf(gyroData.gx) > GYRO_DEADZONE) {
 8001b34:	eeb0 8a00 	vmov.f32	s16, #0	@ 0x40000000  2.0
	        if (osMessageQueueGet(Queue2Handle, &gyroData, NULL, osWaitForever) == osOK)
 8001b38:	6820      	ldr	r0, [r4, #0]
 8001b3a:	f04f 33ff 	mov.w	r3, #4294967295
 8001b3e:	2200      	movs	r2, #0
 8001b40:	a901      	add	r1, sp, #4
 8001b42:	f005 fda4 	bl	800768e <osMessageQueueGet>
 8001b46:	2800      	cmp	r0, #0
 8001b48:	d1f6      	bne.n	8001b38 <MouseControlTask+0x8>
	            if (fabsf(gyroData.gx) > GYRO_DEADZONE) {
 8001b4a:	eddd 7a01 	vldr	s15, [sp, #4]
	            mousehid_report.button = 0;
 8001b4e:	9000      	str	r0, [sp, #0]
	            if (fabsf(gyroData.gx) > GYRO_DEADZONE) {
 8001b50:	eeb0 7ae7 	vabs.f32	s14, s15
 8001b54:	eeb4 7ac8 	vcmpe.f32	s14, s16
 8001b58:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8001b5c:	dd09      	ble.n	8001b72 <MouseControlTask+0x42>
	                mousehid_report.mouse_y = (int8_t)(-gyroData.gx * GYRO_TO_MOUSE_SENSITIVITY);
 8001b5e:	ed9f 7a12 	vldr	s14, [pc, #72]	@ 8001ba8 <MouseControlTask+0x78>
 8001b62:	ee67 7ac7 	vnmul.f32	s15, s15, s14
 8001b66:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8001b6a:	ee17 3a90 	vmov	r3, s15
 8001b6e:	f88d 3002 	strb.w	r3, [sp, #2]
	            }
	            if (fabsf(gyroData.gy) > GYRO_DEADZONE) {
 8001b72:	eddd 7a02 	vldr	s15, [sp, #8]
 8001b76:	eeb0 7ae7 	vabs.f32	s14, s15
 8001b7a:	eeb4 7ac8 	vcmpe.f32	s14, s16
 8001b7e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8001b82:	dd09      	ble.n	8001b98 <MouseControlTask+0x68>
	                mousehid_report.mouse_x = (int8_t)(gyroData.gy * GYRO_TO_MOUSE_SENSITIVITY);
 8001b84:	ed9f 7a08 	vldr	s14, [pc, #32]	@ 8001ba8 <MouseControlTask+0x78>
 8001b88:	ee67 7a87 	vmul.f32	s15, s15, s14
 8001b8c:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8001b90:	ee17 3a90 	vmov	r3, s15
 8001b94:	f88d 3001 	strb.w	r3, [sp, #1]
	            }

	            // Gửi báo cáo tới PC
	            USBD_HID_SendReport(&hUsbDeviceHS, (uint8_t*)&mousehid_report, sizeof(mousehid_report));
 8001b98:	2204      	movs	r2, #4
 8001b9a:	4669      	mov	r1, sp
 8001b9c:	4803      	ldr	r0, [pc, #12]	@ (8001bac <MouseControlTask+0x7c>)
 8001b9e:	f008 f99a 	bl	8009ed6 <USBD_HID_SendReport>
 8001ba2:	e7c9      	b.n	8001b38 <MouseControlTask+0x8>
 8001ba4:	20002ec8 	.word	0x20002ec8
 8001ba8:	3e99999a 	.word	0x3e99999a
 8001bac:	200024f0 	.word	0x200024f0

08001bb0 <SystemClock_Config>:
{
 8001bb0:	b530      	push	{r4, r5, lr}
 8001bb2:	b095      	sub	sp, #84	@ 0x54
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 8001bb4:	2210      	movs	r2, #16
 8001bb6:	2100      	movs	r1, #0
 8001bb8:	a80a      	add	r0, sp, #40	@ 0x28
 8001bba:	f021 f880 	bl	8022cbe <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 8001bbe:	2214      	movs	r2, #20
 8001bc0:	2100      	movs	r1, #0
 8001bc2:	a803      	add	r0, sp, #12
 8001bc4:	f021 f87b 	bl	8022cbe <memset>
  __HAL_RCC_PWR_CLK_ENABLE();
 8001bc8:	2400      	movs	r4, #0
 8001bca:	4b1d      	ldr	r3, [pc, #116]	@ (8001c40 <SystemClock_Config+0x90>)
 8001bcc:	9401      	str	r4, [sp, #4]
 8001bce:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 8001bd0:	f042 5280 	orr.w	r2, r2, #268435456	@ 0x10000000
 8001bd4:	641a      	str	r2, [r3, #64]	@ 0x40
 8001bd6:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001bd8:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8001bdc:	9301      	str	r3, [sp, #4]
 8001bde:	9b01      	ldr	r3, [sp, #4]
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 8001be0:	4b18      	ldr	r3, [pc, #96]	@ (8001c44 <SystemClock_Config+0x94>)
 8001be2:	9402      	str	r4, [sp, #8]
 8001be4:	681a      	ldr	r2, [r3, #0]
 8001be6:	f442 4240 	orr.w	r2, r2, #49152	@ 0xc000
 8001bea:	601a      	str	r2, [r3, #0]
 8001bec:	681b      	ldr	r3, [r3, #0]
 8001bee:	f403 4340 	and.w	r3, r3, #49152	@ 0xc000
 8001bf2:	9302      	str	r3, [sp, #8]
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 8001bf4:	2201      	movs	r2, #1
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 8001bf6:	9b02      	ldr	r3, [sp, #8]
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 8001bf8:	f44f 3380 	mov.w	r3, #65536	@ 0x10000
 8001bfc:	e9cd 2308 	strd	r2, r3, [sp, #32]
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 8001c00:	2502      	movs	r5, #2
 8001c02:	f44f 0380 	mov.w	r3, #4194304	@ 0x400000
 8001c06:	e9cd 530e 	strd	r5, r3, [sp, #56]	@ 0x38
  RCC_OscInitStruct.PLL.PLLN = 168;
 8001c0a:	2104      	movs	r1, #4
 8001c0c:	23a8      	movs	r3, #168	@ 0xa8
 8001c0e:	e9cd 1310 	strd	r1, r3, [sp, #64]	@ 0x40
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8001c12:	a808      	add	r0, sp, #32
  RCC_OscInitStruct.PLL.PLLQ = 7;
 8001c14:	2307      	movs	r3, #7
 8001c16:	9313      	str	r3, [sp, #76]	@ 0x4c
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 8001c18:	9512      	str	r5, [sp, #72]	@ 0x48
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8001c1a:	f003 fcfb 	bl	8005614 <HAL_RCC_OscConfig>
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 8001c1e:	230f      	movs	r3, #15
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 8001c20:	e9cd 3503 	strd	r3, r5, [sp, #12]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 8001c24:	f44f 50a0 	mov.w	r0, #5120	@ 0x1400
 8001c28:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
 8001c2c:	e9cd 0306 	strd	r0, r3, [sp, #24]
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 8001c30:	2105      	movs	r1, #5
 8001c32:	a803      	add	r0, sp, #12
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 8001c34:	9405      	str	r4, [sp, #20]
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 8001c36:	f003 fec9 	bl	80059cc <HAL_RCC_ClockConfig>
}
 8001c3a:	b015      	add	sp, #84	@ 0x54
 8001c3c:	bd30      	pop	{r4, r5, pc}
 8001c3e:	bf00      	nop
 8001c40:	40023800 	.word	0x40023800
 8001c44:	40007000 	.word	0x40007000

08001c48 <main>:
{
 8001c48:	b580      	push	{r7, lr}
 8001c4a:	b09a      	sub	sp, #104	@ 0x68
  HAL_Init();
 8001c4c:	f001 ff0c 	bl	8003a68 <HAL_Init>
  SystemClock_Config();
 8001c50:	f7ff ffae 	bl	8001bb0 <SystemClock_Config>
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001c54:	2214      	movs	r2, #20
 8001c56:	2100      	movs	r1, #0
 8001c58:	a80d      	add	r0, sp, #52	@ 0x34
 8001c5a:	f021 f830 	bl	8022cbe <memset>
  __HAL_RCC_GPIOE_CLK_ENABLE();
 8001c5e:	2400      	movs	r4, #0
 8001c60:	4bc6      	ldr	r3, [pc, #792]	@ (8001f7c <main+0x334>)
 8001c62:	9400      	str	r4, [sp, #0]
 8001c64:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
  HAL_GPIO_WritePin(GPIOE, VSYNC_FREQ_Pin|RENDER_TIME_Pin|FRAME_RATE_Pin|MCU_ACTIVE_Pin, GPIO_PIN_RESET);
 8001c66:	48c6      	ldr	r0, [pc, #792]	@ (8001f80 <main+0x338>)
  hi2c3.Instance = I2C3;
 8001c68:	4dc6      	ldr	r5, [pc, #792]	@ (8001f84 <main+0x33c>)
  hspi5.Init.Mode = SPI_MODE_MASTER;
 8001c6a:	f8df 8354 	ldr.w	r8, [pc, #852]	@ 8001fc0 <main+0x378>
  __HAL_RCC_GPIOE_CLK_ENABLE();
 8001c6e:	f042 0210 	orr.w	r2, r2, #16
 8001c72:	631a      	str	r2, [r3, #48]	@ 0x30
 8001c74:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8001c76:	f002 0210 	and.w	r2, r2, #16
 8001c7a:	9200      	str	r2, [sp, #0]
 8001c7c:	9a00      	ldr	r2, [sp, #0]
  __HAL_RCC_GPIOF_CLK_ENABLE();
 8001c7e:	9401      	str	r4, [sp, #4]
 8001c80:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8001c82:	f042 0220 	orr.w	r2, r2, #32
 8001c86:	631a      	str	r2, [r3, #48]	@ 0x30
 8001c88:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8001c8a:	f002 0220 	and.w	r2, r2, #32
 8001c8e:	9201      	str	r2, [sp, #4]
 8001c90:	9a01      	ldr	r2, [sp, #4]
  __HAL_RCC_GPIOH_CLK_ENABLE();
 8001c92:	9402      	str	r4, [sp, #8]
 8001c94:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8001c96:	f042 0280 	orr.w	r2, r2, #128	@ 0x80
 8001c9a:	631a      	str	r2, [r3, #48]	@ 0x30
 8001c9c:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8001c9e:	f002 0280 	and.w	r2, r2, #128	@ 0x80
 8001ca2:	9202      	str	r2, [sp, #8]
 8001ca4:	9a02      	ldr	r2, [sp, #8]
  __HAL_RCC_GPIOC_CLK_ENABLE();
 8001ca6:	9403      	str	r4, [sp, #12]
 8001ca8:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8001caa:	f042 0204 	orr.w	r2, r2, #4
 8001cae:	631a      	str	r2, [r3, #48]	@ 0x30
 8001cb0:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8001cb2:	f002 0204 	and.w	r2, r2, #4
 8001cb6:	9203      	str	r2, [sp, #12]
 8001cb8:	9a03      	ldr	r2, [sp, #12]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 8001cba:	9404      	str	r4, [sp, #16]
 8001cbc:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8001cbe:	f042 0201 	orr.w	r2, r2, #1
 8001cc2:	631a      	str	r2, [r3, #48]	@ 0x30
 8001cc4:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8001cc6:	f002 0201 	and.w	r2, r2, #1
 8001cca:	9204      	str	r2, [sp, #16]
 8001ccc:	9a04      	ldr	r2, [sp, #16]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 8001cce:	9405      	str	r4, [sp, #20]
 8001cd0:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8001cd2:	f042 0202 	orr.w	r2, r2, #2
 8001cd6:	631a      	str	r2, [r3, #48]	@ 0x30
 8001cd8:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8001cda:	f002 0202 	and.w	r2, r2, #2
 8001cde:	9205      	str	r2, [sp, #20]
 8001ce0:	9a05      	ldr	r2, [sp, #20]
  __HAL_RCC_GPIOG_CLK_ENABLE();
 8001ce2:	9406      	str	r4, [sp, #24]
 8001ce4:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8001ce6:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
 8001cea:	631a      	str	r2, [r3, #48]	@ 0x30
 8001cec:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8001cee:	f002 0240 	and.w	r2, r2, #64	@ 0x40
 8001cf2:	9206      	str	r2, [sp, #24]
 8001cf4:	9a06      	ldr	r2, [sp, #24]
  __HAL_RCC_GPIOD_CLK_ENABLE();
 8001cf6:	9407      	str	r4, [sp, #28]
 8001cf8:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8001cfa:	f042 0208 	orr.w	r2, r2, #8
 8001cfe:	631a      	str	r2, [r3, #48]	@ 0x30
 8001d00:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001d02:	f003 0308 	and.w	r3, r3, #8
  HAL_GPIO_WritePin(GPIOE, VSYNC_FREQ_Pin|RENDER_TIME_Pin|FRAME_RATE_Pin|MCU_ACTIVE_Pin, GPIO_PIN_RESET);
 8001d06:	4622      	mov	r2, r4
  __HAL_RCC_GPIOD_CLK_ENABLE();
 8001d08:	9307      	str	r3, [sp, #28]
  HAL_GPIO_WritePin(GPIOE, VSYNC_FREQ_Pin|RENDER_TIME_Pin|FRAME_RATE_Pin|MCU_ACTIVE_Pin, GPIO_PIN_RESET);
 8001d0a:	213c      	movs	r1, #60	@ 0x3c
  __HAL_RCC_GPIOD_CLK_ENABLE();
 8001d0c:	9b07      	ldr	r3, [sp, #28]
  HAL_GPIO_WritePin(GPIOE, VSYNC_FREQ_Pin|RENDER_TIME_Pin|FRAME_RATE_Pin|MCU_ACTIVE_Pin, GPIO_PIN_RESET);
 8001d0e:	f002 f931 	bl	8003f74 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GYRO_CS_GPIO_Port, GYRO_CS_Pin, GPIO_PIN_SET);
 8001d12:	489d      	ldr	r0, [pc, #628]	@ (8001f88 <main+0x340>)
 8001d14:	2201      	movs	r2, #1
 8001d16:	2102      	movs	r1, #2
 8001d18:	f002 f92c 	bl	8003f74 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001d1c:	4622      	mov	r2, r4
 8001d1e:	489a      	ldr	r0, [pc, #616]	@ (8001f88 <main+0x340>)
 8001d20:	2104      	movs	r1, #4
 8001d22:	f002 f927 	bl	8003f74 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_12|GPIO_PIN_13, GPIO_PIN_RESET);
 8001d26:	4622      	mov	r2, r4
 8001d28:	4898      	ldr	r0, [pc, #608]	@ (8001f8c <main+0x344>)
 8001d2a:	f44f 5140 	mov.w	r1, #12288	@ 0x3000
 8001d2e:	f002 f921 	bl	8003f74 <HAL_GPIO_WritePin>
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001d32:	2601      	movs	r6, #1
 8001d34:	233c      	movs	r3, #60	@ 0x3c
 8001d36:	e9cd 360d 	strd	r3, r6, [sp, #52]	@ 0x34
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8001d3a:	4891      	ldr	r0, [pc, #580]	@ (8001f80 <main+0x338>)
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001d3c:	940f      	str	r4, [sp, #60]	@ 0x3c
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001d3e:	2303      	movs	r3, #3
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8001d40:	a90d      	add	r1, sp, #52	@ 0x34
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001d42:	2702      	movs	r7, #2
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001d44:	9310      	str	r3, [sp, #64]	@ 0x40
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8001d46:	f002 f82b 	bl	8003da0 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GYRO_CS_Pin|GPIO_PIN_2;
 8001d4a:	2306      	movs	r3, #6
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001d4c:	488e      	ldr	r0, [pc, #568]	@ (8001f88 <main+0x340>)
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001d4e:	940f      	str	r4, [sp, #60]	@ 0x3c
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001d50:	a90d      	add	r1, sp, #52	@ 0x34
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001d52:	e9cd 360d 	strd	r3, r6, [sp, #52]	@ 0x34
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001d56:	9710      	str	r7, [sp, #64]	@ 0x40
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001d58:	f002 f822 	bl	8003da0 <HAL_GPIO_Init>
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001d5c:	488c      	ldr	r0, [pc, #560]	@ (8001f90 <main+0x348>)
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001d5e:	940f      	str	r4, [sp, #60]	@ 0x3c
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001d60:	a90d      	add	r1, sp, #52	@ 0x34
  GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 8001d62:	e9cd 640d 	strd	r6, r4, [sp, #52]	@ 0x34
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001d66:	f002 f81b 	bl	8003da0 <HAL_GPIO_Init>
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001d6a:	a90d      	add	r1, sp, #52	@ 0x34
  GPIO_InitStruct.Pin = GPIO_PIN_12|GPIO_PIN_13;
 8001d6c:	f44f 5340 	mov.w	r3, #12288	@ 0x3000
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001d70:	4886      	ldr	r0, [pc, #536]	@ (8001f8c <main+0x344>)
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001d72:	e9cd 360d 	strd	r3, r6, [sp, #52]	@ 0x34
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001d76:	e9cd 470f 	strd	r4, r7, [sp, #60]	@ 0x3c
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001d7a:	f002 f811 	bl	8003da0 <HAL_GPIO_Init>
  hcrc.Instance = CRC;
 8001d7e:	4885      	ldr	r0, [pc, #532]	@ (8001f94 <main+0x34c>)
 8001d80:	4b85      	ldr	r3, [pc, #532]	@ (8001f98 <main+0x350>)
 8001d82:	6003      	str	r3, [r0, #0]
  if (HAL_CRC_Init(&hcrc) != HAL_OK)
 8001d84:	f001 ff02 	bl	8003b8c <HAL_CRC_Init>
  hi2c3.Init.ClockSpeed = 100000;
 8001d88:	f8df e238 	ldr.w	lr, [pc, #568]	@ 8001fc4 <main+0x37c>
 8001d8c:	4b83      	ldr	r3, [pc, #524]	@ (8001f9c <main+0x354>)
  hi2c3.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 8001d8e:	622c      	str	r4, [r5, #32]
  hi2c3.Init.ClockSpeed = 100000;
 8001d90:	e9c5 e300 	strd	lr, r3, [r5]
  if (HAL_I2C_Init(&hi2c3) != HAL_OK)
 8001d94:	4628      	mov	r0, r5
  hi2c3.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 8001d96:	f44f 4380 	mov.w	r3, #16384	@ 0x4000
  hi2c3.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 8001d9a:	e9c5 3404 	strd	r3, r4, [r5, #16]
  hi2c3.Init.OwnAddress1 = 0;
 8001d9e:	e9c5 4402 	strd	r4, r4, [r5, #8]
  hi2c3.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 8001da2:	e9c5 4406 	strd	r4, r4, [r5, #24]
  if (HAL_I2C_Init(&hi2c3) != HAL_OK)
 8001da6:	f002 faf3 	bl	8004390 <HAL_I2C_Init>
  if (HAL_I2CEx_ConfigAnalogFilter(&hi2c3, I2C_ANALOGFILTER_DISABLE) != HAL_OK)
 8001daa:	2110      	movs	r1, #16
 8001dac:	4628      	mov	r0, r5
 8001dae:	f002 fd37 	bl	8004820 <HAL_I2CEx_ConfigAnalogFilter>
  if (HAL_I2CEx_ConfigDigitalFilter(&hi2c3, 0) != HAL_OK)
 8001db2:	4621      	mov	r1, r4
 8001db4:	4628      	mov	r0, r5
  hspi5.Instance = SPI5;
 8001db6:	4d7a      	ldr	r5, [pc, #488]	@ (8001fa0 <main+0x358>)
  if (HAL_I2CEx_ConfigDigitalFilter(&hi2c3, 0) != HAL_OK)
 8001db8:	f002 fd51 	bl	800485e <HAL_I2CEx_ConfigDigitalFilter>
  hspi5.Init.Mode = SPI_MODE_MASTER;
 8001dbc:	f44f 7382 	mov.w	r3, #260	@ 0x104
 8001dc0:	e9c5 8300 	strd	r8, r3, [r5]
  hspi5.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_16;
 8001dc4:	f44f 7900 	mov.w	r9, #512	@ 0x200
 8001dc8:	2318      	movs	r3, #24
 8001dca:	e9c5 9306 	strd	r9, r3, [r5, #24]
  if (HAL_SPI_Init(&hspi5) != HAL_OK)
 8001dce:	4628      	mov	r0, r5
  hspi5.Init.CRCPolynomial = 10;
 8001dd0:	230a      	movs	r3, #10
  hspi5.Init.DataSize = SPI_DATASIZE_8BIT;
 8001dd2:	e9c5 4402 	strd	r4, r4, [r5, #8]
  hspi5.Init.CLKPhase = SPI_PHASE_1EDGE;
 8001dd6:	e9c5 4404 	strd	r4, r4, [r5, #16]
  hspi5.Init.TIMode = SPI_TIMODE_DISABLE;
 8001dda:	e9c5 4408 	strd	r4, r4, [r5, #32]
  hspi5.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 8001dde:	62ac      	str	r4, [r5, #40]	@ 0x28
  hspi5.Init.CRCPolynomial = 10;
 8001de0:	62eb      	str	r3, [r5, #44]	@ 0x2c
  if (HAL_SPI_Init(&hspi5) != HAL_OK)
 8001de2:	f004 f909 	bl	8005ff8 <HAL_SPI_Init>
  const uint8_t READ_ID_CMD = 0x8F; // 0b10001111 = set read bit and register address of WHO_AM_I
 8001de6:	238f      	movs	r3, #143	@ 0x8f
  HAL_GPIO_WritePin(GYRO_CS_GPIO_Port, GYRO_CS_Pin, GPIO_PIN_RESET);
 8001de8:	4622      	mov	r2, r4
 8001dea:	4639      	mov	r1, r7
 8001dec:	4866      	ldr	r0, [pc, #408]	@ (8001f88 <main+0x340>)
  const uint8_t READ_ID_CMD = 0x8F; // 0b10001111 = set read bit and register address of WHO_AM_I
 8001dee:	f88d 3024 	strb.w	r3, [sp, #36]	@ 0x24
  uint8_t pdata = 0;
 8001df2:	f88d 4034 	strb.w	r4, [sp, #52]	@ 0x34
  HAL_GPIO_WritePin(GYRO_CS_GPIO_Port, GYRO_CS_Pin, GPIO_PIN_RESET);
 8001df6:	f002 f8bd 	bl	8003f74 <HAL_GPIO_WritePin>
  HAL_SPI_Transmit(&hspi5, &READ_ID_CMD, 1, 1000);
 8001dfa:	4632      	mov	r2, r6
 8001dfc:	f44f 737a 	mov.w	r3, #1000	@ 0x3e8
 8001e00:	a909      	add	r1, sp, #36	@ 0x24
 8001e02:	4628      	mov	r0, r5
 8001e04:	f004 f954 	bl	80060b0 <HAL_SPI_Transmit>
  HAL_SPI_Receive(&hspi5, &pdata, 1, 1000);
 8001e08:	f44f 737a 	mov.w	r3, #1000	@ 0x3e8
 8001e0c:	4632      	mov	r2, r6
 8001e0e:	a90d      	add	r1, sp, #52	@ 0x34
 8001e10:	4628      	mov	r0, r5
 8001e12:	f004 faf9 	bl	8006408 <HAL_SPI_Receive>
  HAL_GPIO_WritePin(GYRO_CS_GPIO_Port, GYRO_CS_Pin, GPIO_PIN_SET);
 8001e16:	4632      	mov	r2, r6
 8001e18:	4639      	mov	r1, r7
 8001e1a:	485b      	ldr	r0, [pc, #364]	@ (8001f88 <main+0x340>)
  hsdram1.Instance = FMC_SDRAM_DEVICE;
 8001e1c:	4d61      	ldr	r5, [pc, #388]	@ (8001fa4 <main+0x35c>)
  HAL_GPIO_WritePin(GYRO_CS_GPIO_Port, GYRO_CS_Pin, GPIO_PIN_SET);
 8001e1e:	f002 f8a9 	bl	8003f74 <HAL_GPIO_WritePin>
  if (pdata == 0xD3) // 0b11010011
 8001e22:	f89d 3034 	ldrb.w	r3, [sp, #52]	@ 0x34
 8001e26:	2bd3      	cmp	r3, #211	@ 0xd3
    isRevD = 1;
 8001e28:	bf04      	itt	eq
 8001e2a:	4b5f      	ldreq	r3, [pc, #380]	@ (8001fa8 <main+0x360>)
 8001e2c:	701e      	strbeq	r6, [r3, #0]
  hsdram1.Init.SDBank = FMC_SDRAM_BANK2;
 8001e2e:	4b5f      	ldr	r3, [pc, #380]	@ (8001fac <main+0x364>)
 8001e30:	2601      	movs	r6, #1
 8001e32:	e9c5 3600 	strd	r3, r6, [r5]
  hsdram1.Init.InternalBankNumber = FMC_SDRAM_INTERN_BANKS_NUM_4;
 8001e36:	2210      	movs	r2, #16
 8001e38:	2340      	movs	r3, #64	@ 0x40
  hsdram1.Init.RowBitsNumber = FMC_SDRAM_ROW_BITS_NUM_12;
 8001e3a:	2400      	movs	r4, #0
  hsdram1.Init.InternalBankNumber = FMC_SDRAM_INTERN_BANKS_NUM_4;
 8001e3c:	e9c5 2304 	strd	r2, r3, [r5, #16]
  hsdram1.Init.CASLatency = FMC_SDRAM_CAS_LATENCY_3;
 8001e40:	f44f 73c0 	mov.w	r3, #384	@ 0x180
  hsdram1.Init.WriteProtection = FMC_SDRAM_WRITE_PROTECTION_DISABLE;
 8001e44:	e9c5 3406 	strd	r3, r4, [r5, #24]
  hsdram1.Init.SDClockPeriod = FMC_SDRAM_CLOCK_PERIOD_2;
 8001e48:	f44f 6300 	mov.w	r3, #2048	@ 0x800
  hsdram1.Init.ReadBurst = FMC_SDRAM_RBURST_DISABLE;
 8001e4c:	e9c5 3408 	strd	r3, r4, [r5, #32]
  hsdram1.Init.ReadPipeDelay = FMC_SDRAM_RPIPE_DELAY_1;
 8001e50:	f44f 5300 	mov.w	r3, #8192	@ 0x2000
  SdramTiming.ExitSelfRefreshDelay = 7;
 8001e54:	2702      	movs	r7, #2
  hsdram1.Init.RowBitsNumber = FMC_SDRAM_ROW_BITS_NUM_12;
 8001e56:	f04f 0904 	mov.w	r9, #4
  hsdram1.Init.ReadPipeDelay = FMC_SDRAM_RPIPE_DELAY_1;
 8001e5a:	62ab      	str	r3, [r5, #40]	@ 0x28
  SdramTiming.WriteRecoveryTime = 3;
 8001e5c:	f04f 0a03 	mov.w	sl, #3
  SdramTiming.ExitSelfRefreshDelay = 7;
 8001e60:	2307      	movs	r3, #7
  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 8001e62:	a90d      	add	r1, sp, #52	@ 0x34
 8001e64:	4628      	mov	r0, r5
  SdramTiming.ExitSelfRefreshDelay = 7;
 8001e66:	e9cd 730d 	strd	r7, r3, [sp, #52]	@ 0x34
  SdramTiming.RowCycleDelay = 7;
 8001e6a:	e9cd 930f 	strd	r9, r3, [sp, #60]	@ 0x3c
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 8001e6e:	f04f 0808 	mov.w	r8, #8
  hsdram1.Init.RowBitsNumber = FMC_SDRAM_ROW_BITS_NUM_12;
 8001e72:	e9c5 4902 	strd	r4, r9, [r5, #8]
  SdramTiming.RPDelay = 2;
 8001e76:	e9cd a711 	strd	sl, r7, [sp, #68]	@ 0x44
  SdramTiming.RCDDelay = 2;
 8001e7a:	9713      	str	r7, [sp, #76]	@ 0x4c
  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 8001e7c:	f003 ffa0 	bl	8005dc0 <HAL_SDRAM_Init>
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8001e80:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 8001e84:	a909      	add	r1, sp, #36	@ 0x24
 8001e86:	4628      	mov	r0, r5
  Command->AutoRefreshNumber       = 1;
 8001e88:	e9cd 860a 	strd	r8, r6, [sp, #40]	@ 0x28
 __IO uint32_t tmpmrd =0;
 8001e8c:	9408      	str	r4, [sp, #32]
  Command->CommandMode             = FMC_SDRAM_CMD_CLK_ENABLE;
 8001e8e:	9609      	str	r6, [sp, #36]	@ 0x24
  Command->ModeRegisterDefinition  = 0;
 8001e90:	940c      	str	r4, [sp, #48]	@ 0x30
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8001e92:	f003 ffb5 	bl	8005e00 <HAL_SDRAM_SendCommand>
  HAL_Delay(1);
 8001e96:	4630      	mov	r0, r6
 8001e98:	f001 fe12 	bl	8003ac0 <HAL_Delay>
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8001e9c:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 8001ea0:	a909      	add	r1, sp, #36	@ 0x24
 8001ea2:	4628      	mov	r0, r5
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 8001ea4:	e9cd 7809 	strd	r7, r8, [sp, #36]	@ 0x24
  Command->ModeRegisterDefinition  = 0;
 8001ea8:	e9cd 640b 	strd	r6, r4, [sp, #44]	@ 0x2c
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8001eac:	f003 ffa8 	bl	8005e00 <HAL_SDRAM_SendCommand>
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8001eb0:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 8001eb4:	a909      	add	r1, sp, #36	@ 0x24
 8001eb6:	4628      	mov	r0, r5
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 8001eb8:	e9cd a809 	strd	sl, r8, [sp, #36]	@ 0x24
  Command->ModeRegisterDefinition  = 0;
 8001ebc:	e9cd 940b 	strd	r9, r4, [sp, #44]	@ 0x2c
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8001ec0:	f003 ff9e 	bl	8005e00 <HAL_SDRAM_SendCommand>
  tmpmrd = (uint32_t)SDRAM_MODEREG_BURST_LENGTH_1          |
 8001ec4:	f44f 730c 	mov.w	r3, #560	@ 0x230
 8001ec8:	9308      	str	r3, [sp, #32]
  Command->ModeRegisterDefinition  = tmpmrd;
 8001eca:	9b08      	ldr	r3, [sp, #32]
 8001ecc:	930c      	str	r3, [sp, #48]	@ 0x30
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8001ece:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 8001ed2:	a909      	add	r1, sp, #36	@ 0x24
 8001ed4:	4628      	mov	r0, r5
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 8001ed6:	e9cd 9809 	strd	r9, r8, [sp, #36]	@ 0x24
  Command->AutoRefreshNumber       = 1;
 8001eda:	960b      	str	r6, [sp, #44]	@ 0x2c
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8001edc:	f003 ff90 	bl	8005e00 <HAL_SDRAM_SendCommand>
  HAL_SDRAM_ProgramRefreshRate(hsdram, REFRESH_COUNT);
 8001ee0:	f240 516a 	movw	r1, #1386	@ 0x56a
 8001ee4:	4628      	mov	r0, r5
 8001ee6:	f003 ffa9 	bl	8005e3c <HAL_SDRAM_ProgramRefreshRate>
  LTDC_LayerCfgTypeDef pLayerCfg = {0};
 8001eea:	2234      	movs	r2, #52	@ 0x34
 8001eec:	eb0d 0002 	add.w	r0, sp, r2
 8001ef0:	4621      	mov	r1, r4
 8001ef2:	f020 fee4 	bl	8022cbe <memset>
  hltdc.Instance = LTDC;
 8001ef6:	4d2e      	ldr	r5, [pc, #184]	@ (8001fb0 <main+0x368>)
 8001ef8:	4b2e      	ldr	r3, [pc, #184]	@ (8001fb4 <main+0x36c>)
  hltdc.Init.PCPolarity = LTDC_PCPOLARITY_IPC;
 8001efa:	612c      	str	r4, [r5, #16]
  hltdc.Init.HSPolarity = LTDC_HSPOLARITY_AL;
 8001efc:	e9c5 3400 	strd	r3, r4, [r5]
  hltdc.Init.HorizontalSync = 9;
 8001f00:	2309      	movs	r3, #9
  hltdc.Init.VerticalSync = 1;
 8001f02:	e9c5 3605 	strd	r3, r6, [r5, #20]
  hltdc.Init.AccumulatedHBP = 29;
 8001f06:	231d      	movs	r3, #29
  hltdc.Init.AccumulatedVBP = 3;
 8001f08:	e9c5 3a07 	strd	r3, sl, [r5, #28]
  hltdc.Init.AccumulatedActiveH = 323;
 8001f0c:	f240 110d 	movw	r1, #269	@ 0x10d
 8001f10:	f240 1343 	movw	r3, #323	@ 0x143
 8001f14:	e9c5 1309 	strd	r1, r3, [r5, #36]	@ 0x24
  hltdc.Init.TotalHeigh = 327;
 8001f18:	f240 1017 	movw	r0, #279	@ 0x117
 8001f1c:	f240 1347 	movw	r3, #327	@ 0x147
 8001f20:	e9c5 030b 	strd	r0, r3, [r5, #44]	@ 0x2c
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
 8001f24:	4628      	mov	r0, r5
  hltdc.Init.DEPolarity = LTDC_DEPOLARITY_AL;
 8001f26:	e9c5 4402 	strd	r4, r4, [r5, #8]
  hltdc.Init.Backcolor.Blue = 0;
 8001f2a:	86ac      	strh	r4, [r5, #52]	@ 0x34
  hltdc.Init.Backcolor.Red = 0;
 8001f2c:	f885 4036 	strb.w	r4, [r5, #54]	@ 0x36
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
 8001f30:	f002 fd30 	bl	8004994 <HAL_LTDC_Init>
  pLayerCfg.Alpha = 255;
 8001f34:	21ff      	movs	r1, #255	@ 0xff
  pLayerCfg.BlendingFactor2 = LTDC_BLENDING_FACTOR2_CA;
 8001f36:	f44f 6c80 	mov.w	ip, #1024	@ 0x400
  pLayerCfg.WindowX1 = 240;
 8001f3a:	22f0      	movs	r2, #240	@ 0xf0
  pLayerCfg.Alpha0 = 0;
 8001f3c:	e9cd 1412 	strd	r1, r4, [sp, #72]	@ 0x48
  pLayerCfg.BlendingFactor2 = LTDC_BLENDING_FACTOR2_CA;
 8001f40:	2105      	movs	r1, #5
 8001f42:	e9cd c114 	strd	ip, r1, [sp, #80]	@ 0x50
  pLayerCfg.WindowY1 = 320;
 8001f46:	f44f 73a0 	mov.w	r3, #320	@ 0x140
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 8001f4a:	a90d      	add	r1, sp, #52	@ 0x34
  pLayerCfg.WindowY0 = 0;
 8001f4c:	e9cd 240e 	strd	r2, r4, [sp, #56]	@ 0x38
  pLayerCfg.ImageWidth = 240;
 8001f50:	e9cd 4216 	strd	r4, r2, [sp, #88]	@ 0x58
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 8001f54:	4628      	mov	r0, r5
 8001f56:	4622      	mov	r2, r4
  LcdDrv = &ili9341_drv;
 8001f58:	4d17      	ldr	r5, [pc, #92]	@ (8001fb8 <main+0x370>)
  pLayerCfg.ImageHeight = 320;
 8001f5a:	9318      	str	r3, [sp, #96]	@ 0x60
  pLayerCfg.PixelFormat = LTDC_PIXEL_FORMAT_RGB565;
 8001f5c:	e9cd 3710 	strd	r3, r7, [sp, #64]	@ 0x40
  pLayerCfg.WindowX0 = 0;
 8001f60:	940d      	str	r4, [sp, #52]	@ 0x34
  pLayerCfg.Backcolor.Blue = 0;
 8001f62:	f8ad 4064 	strh.w	r4, [sp, #100]	@ 0x64
  pLayerCfg.Backcolor.Red = 0;
 8001f66:	f88d 4066 	strb.w	r4, [sp, #102]	@ 0x66
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 8001f6a:	f002 fdde 	bl	8004b2a <HAL_LTDC_ConfigLayer>
  LcdDrv = &ili9341_drv;
 8001f6e:	4b13      	ldr	r3, [pc, #76]	@ (8001fbc <main+0x374>)
 8001f70:	602b      	str	r3, [r5, #0]
  LcdDrv->Init();
 8001f72:	681b      	ldr	r3, [r3, #0]
 8001f74:	4798      	blx	r3
  LcdDrv->DisplayOff();
 8001f76:	682b      	ldr	r3, [r5, #0]
 8001f78:	e026      	b.n	8001fc8 <main+0x380>
 8001f7a:	bf00      	nop
 8001f7c:	40023800 	.word	0x40023800
 8001f80:	40021000 	.word	0x40021000
 8001f84:	20003014 	.word	0x20003014
 8001f88:	40020800 	.word	0x40020800
 8001f8c:	40020c00 	.word	0x40020c00
 8001f90:	40020000 	.word	0x40020000
 8001f94:	200030a8 	.word	0x200030a8
 8001f98:	40023000 	.word	0x40023000
 8001f9c:	000186a0 	.word	0x000186a0
 8001fa0:	20002f14 	.word	0x20002f14
 8001fa4:	20002ee0 	.word	0x20002ee0
 8001fa8:	20002ed0 	.word	0x20002ed0
 8001fac:	a0000140 	.word	0xa0000140
 8001fb0:	20002f6c 	.word	0x20002f6c
 8001fb4:	40016800 	.word	0x40016800
 8001fb8:	20002ec4 	.word	0x20002ec4
 8001fbc:	20000064 	.word	0x20000064
 8001fc0:	40015000 	.word	0x40015000
 8001fc4:	40005c00 	.word	0x40005c00
  hdma2d.Instance = DMA2D;
 8001fc8:	4d20      	ldr	r5, [pc, #128]	@ (800204c <main+0x404>)
  LcdDrv->DisplayOff();
 8001fca:	68db      	ldr	r3, [r3, #12]
 8001fcc:	4798      	blx	r3
  hdma2d.Instance = DMA2D;
 8001fce:	4b20      	ldr	r3, [pc, #128]	@ (8002050 <main+0x408>)
  if (HAL_DMA2D_Init(&hdma2d) != HAL_OK)
 8001fd0:	4628      	mov	r0, r5
  hdma2d.Init.Mode = DMA2D_M2M;
 8001fd2:	e9c5 3400 	strd	r3, r4, [r5]
  hdma2d.Init.OutputOffset = 0;
 8001fd6:	e9c5 7402 	strd	r7, r4, [r5, #8]
  hdma2d.LayerCfg[1].InputColorMode = DMA2D_INPUT_RGB565;
 8001fda:	e9c5 470a 	strd	r4, r7, [r5, #40]	@ 0x28
  hdma2d.LayerCfg[1].InputAlpha = 0;
 8001fde:	e9c5 440c 	strd	r4, r4, [r5, #48]	@ 0x30
  if (HAL_DMA2D_Init(&hdma2d) != HAL_OK)
 8001fe2:	f001 fde3 	bl	8003bac <HAL_DMA2D_Init>
  if (HAL_DMA2D_ConfigLayer(&hdma2d, 1) != HAL_OK)
 8001fe6:	4631      	mov	r1, r6
 8001fe8:	4628      	mov	r0, r5
 8001fea:	f001 fe95 	bl	8003d18 <HAL_DMA2D_ConfigLayer>
  MX_TouchGFX_Init();
 8001fee:	f7fe fb67 	bl	80006c0 <MX_TouchGFX_Init>
  MX_TouchGFX_PreOSInit();
 8001ff2:	f7fe fb64 	bl	80006be <MX_TouchGFX_PreOSInit>
  osKernelInitialize();
 8001ff6:	f005 f9c3 	bl	8007380 <osKernelInitialize>
  Queue1Handle = osMessageQueueNew(10, sizeof(GyroData_t), NULL);
 8001ffa:	4622      	mov	r2, r4
 8001ffc:	210c      	movs	r1, #12
 8001ffe:	200a      	movs	r0, #10
 8002000:	f005 fad9 	bl	80075b6 <osMessageQueueNew>
 8002004:	4b13      	ldr	r3, [pc, #76]	@ (8002054 <main+0x40c>)
  Queue2Handle = osMessageQueueNew(10, sizeof(GyroData_t), NULL);
 8002006:	4622      	mov	r2, r4
  Queue1Handle = osMessageQueueNew(10, sizeof(GyroData_t), NULL);
 8002008:	6018      	str	r0, [r3, #0]
  Queue2Handle = osMessageQueueNew(10, sizeof(GyroData_t), NULL);
 800200a:	210c      	movs	r1, #12
 800200c:	200a      	movs	r0, #10
 800200e:	f005 fad2 	bl	80075b6 <osMessageQueueNew>
 8002012:	4b11      	ldr	r3, [pc, #68]	@ (8002058 <main+0x410>)
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
 8002014:	4a11      	ldr	r2, [pc, #68]	@ (800205c <main+0x414>)
  Queue2Handle = osMessageQueueNew(10, sizeof(GyroData_t), NULL);
 8002016:	6018      	str	r0, [r3, #0]
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
 8002018:	4621      	mov	r1, r4
 800201a:	4811      	ldr	r0, [pc, #68]	@ (8002060 <main+0x418>)
 800201c:	f005 f9dc 	bl	80073d8 <osThreadNew>
 8002020:	4b10      	ldr	r3, [pc, #64]	@ (8002064 <main+0x41c>)
  GUI_TaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUI_Task_attributes);
 8002022:	4a11      	ldr	r2, [pc, #68]	@ (8002068 <main+0x420>)
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
 8002024:	6018      	str	r0, [r3, #0]
  GUI_TaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUI_Task_attributes);
 8002026:	4621      	mov	r1, r4
 8002028:	4810      	ldr	r0, [pc, #64]	@ (800206c <main+0x424>)
 800202a:	f005 f9d5 	bl	80073d8 <osThreadNew>
 800202e:	4b10      	ldr	r3, [pc, #64]	@ (8002070 <main+0x428>)
  myTask03Handle = osThreadNew(MouseControlTask, NULL, &myTask03_attributes);
 8002030:	4a10      	ldr	r2, [pc, #64]	@ (8002074 <main+0x42c>)
  GUI_TaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUI_Task_attributes);
 8002032:	6018      	str	r0, [r3, #0]
  myTask03Handle = osThreadNew(MouseControlTask, NULL, &myTask03_attributes);
 8002034:	4621      	mov	r1, r4
 8002036:	4810      	ldr	r0, [pc, #64]	@ (8002078 <main+0x430>)
 8002038:	f005 f9ce 	bl	80073d8 <osThreadNew>
 800203c:	4b0f      	ldr	r3, [pc, #60]	@ (800207c <main+0x434>)
 800203e:	6018      	str	r0, [r3, #0]
  osKernelStart();
 8002040:	f005 f9b0 	bl	80073a4 <osKernelStart>
	  HAL_Delay(100);
 8002044:	2064      	movs	r0, #100	@ 0x64
 8002046:	f001 fd3b 	bl	8003ac0 <HAL_Delay>
  while (1)
 800204a:	e7fb      	b.n	8002044 <main+0x3fc>
 800204c:	20003068 	.word	0x20003068
 8002050:	4002b000 	.word	0x4002b000
 8002054:	20002ecc 	.word	0x20002ecc
 8002058:	20002ec8 	.word	0x20002ec8
 800205c:	08024730 	.word	0x08024730
 8002060:	08001a6d 	.word	0x08001a6d
 8002064:	20002edc 	.word	0x20002edc
 8002068:	0802470c 	.word	0x0802470c
 800206c:	080006cf 	.word	0x080006cf
 8002070:	20002ed8 	.word	0x20002ed8
 8002074:	080246e8 	.word	0x080246e8
 8002078:	08001b31 	.word	0x08001b31
 800207c:	20002ed4 	.word	0x20002ed4

08002080 <IOE_Init>:
void IOE_Init(void)
 8002080:	4770      	bx	lr

08002082 <IOE_ITConfig>:
void IOE_ITConfig(void)
 8002082:	4770      	bx	lr

08002084 <IOE_Write>:
{
 8002084:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
  status = HAL_I2C_Mem_Write(&hi2c3, Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, &Value, 1, I2c3Timeout);
 8002086:	4b09      	ldr	r3, [pc, #36]	@ (80020ac <IOE_Write+0x28>)
 8002088:	f88d 2017 	strb.w	r2, [sp, #23]
 800208c:	681b      	ldr	r3, [r3, #0]
 800208e:	9302      	str	r3, [sp, #8]
 8002090:	f10d 0217 	add.w	r2, sp, #23
 8002094:	2301      	movs	r3, #1
 8002096:	9200      	str	r2, [sp, #0]
 8002098:	9301      	str	r3, [sp, #4]
 800209a:	460a      	mov	r2, r1
 800209c:	4601      	mov	r1, r0
 800209e:	4804      	ldr	r0, [pc, #16]	@ (80020b0 <IOE_Write+0x2c>)
 80020a0:	f002 fa1e 	bl	80044e0 <HAL_I2C_Mem_Write>
}
 80020a4:	b007      	add	sp, #28
 80020a6:	f85d fb04 	ldr.w	pc, [sp], #4
 80020aa:	bf00      	nop
 80020ac:	20000060 	.word	0x20000060
 80020b0:	20003014 	.word	0x20003014

080020b4 <IOE_Read>:
{
 80020b4:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
  uint8_t value = 0;
 80020b6:	2300      	movs	r3, #0
 80020b8:	f88d 3017 	strb.w	r3, [sp, #23]
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, Reg, I2C_MEMADD_SIZE_8BIT, &value, 1, I2c3Timeout);
 80020bc:	4b08      	ldr	r3, [pc, #32]	@ (80020e0 <IOE_Read+0x2c>)
 80020be:	681b      	ldr	r3, [r3, #0]
 80020c0:	9302      	str	r3, [sp, #8]
{
 80020c2:	460a      	mov	r2, r1
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, Reg, I2C_MEMADD_SIZE_8BIT, &value, 1, I2c3Timeout);
 80020c4:	2301      	movs	r3, #1
 80020c6:	f10d 0117 	add.w	r1, sp, #23
 80020ca:	9100      	str	r1, [sp, #0]
 80020cc:	9301      	str	r3, [sp, #4]
 80020ce:	4601      	mov	r1, r0
 80020d0:	4804      	ldr	r0, [pc, #16]	@ (80020e4 <IOE_Read+0x30>)
 80020d2:	f002 fa95 	bl	8004600 <HAL_I2C_Mem_Read>
}
 80020d6:	f89d 0017 	ldrb.w	r0, [sp, #23]
 80020da:	b007      	add	sp, #28
 80020dc:	f85d fb04 	ldr.w	pc, [sp], #4
 80020e0:	20000060 	.word	0x20000060
 80020e4:	20003014 	.word	0x20003014

080020e8 <IOE_ReadMultiple>:
{
 80020e8:	b51f      	push	{r0, r1, r2, r3, r4, lr}
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, pBuffer, Length, I2c3Timeout);
 80020ea:	4c08      	ldr	r4, [pc, #32]	@ (800210c <IOE_ReadMultiple+0x24>)
 80020ec:	6824      	ldr	r4, [r4, #0]
 80020ee:	9200      	str	r2, [sp, #0]
 80020f0:	e9cd 3401 	strd	r3, r4, [sp, #4]
 80020f4:	460a      	mov	r2, r1
 80020f6:	2301      	movs	r3, #1
 80020f8:	4601      	mov	r1, r0
 80020fa:	4805      	ldr	r0, [pc, #20]	@ (8002110 <IOE_ReadMultiple+0x28>)
 80020fc:	f002 fa80 	bl	8004600 <HAL_I2C_Mem_Read>
}
 8002100:	3800      	subs	r0, #0
 8002102:	bf18      	it	ne
 8002104:	2001      	movne	r0, #1
 8002106:	b004      	add	sp, #16
 8002108:	bd10      	pop	{r4, pc}
 800210a:	bf00      	nop
 800210c:	20000060 	.word	0x20000060
 8002110:	20003014 	.word	0x20003014

08002114 <IOE_Delay>:
void IOE_Delay(uint32_t Delay)
 8002114:	f001 bcd4 	b.w	8003ac0 <HAL_Delay>

08002118 <LCD_IO_Init>:
{
 8002118:	b510      	push	{r4, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 800211a:	4c06      	ldr	r4, [pc, #24]	@ (8002134 <LCD_IO_Init+0x1c>)
 800211c:	2200      	movs	r2, #0
 800211e:	4620      	mov	r0, r4
 8002120:	2104      	movs	r1, #4
 8002122:	f001 ff27 	bl	8003f74 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8002126:	4620      	mov	r0, r4
 8002128:	2201      	movs	r2, #1
}
 800212a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 800212e:	2104      	movs	r1, #4
 8002130:	f001 bf20 	b.w	8003f74 <HAL_GPIO_WritePin>
 8002134:	40020800 	.word	0x40020800

08002138 <LCD_IO_WriteData>:
{
 8002138:	b538      	push	{r3, r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 800213a:	4d0b      	ldr	r5, [pc, #44]	@ (8002168 <LCD_IO_WriteData+0x30>)
{
 800213c:	4604      	mov	r4, r0
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_SET);
 800213e:	2201      	movs	r2, #1
 8002140:	480a      	ldr	r0, [pc, #40]	@ (800216c <LCD_IO_WriteData+0x34>)
 8002142:	f44f 5100 	mov.w	r1, #8192	@ 0x2000
 8002146:	f001 ff15 	bl	8003f74 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 800214a:	2200      	movs	r2, #0
 800214c:	2104      	movs	r1, #4
 800214e:	4628      	mov	r0, r5
 8002150:	f001 ff10 	bl	8003f74 <HAL_GPIO_WritePin>
  SPI5_Write(RegValue);
 8002154:	4620      	mov	r0, r4
 8002156:	f7ff fc77 	bl	8001a48 <SPI5_Write>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 800215a:	4628      	mov	r0, r5
 800215c:	2201      	movs	r2, #1
}
 800215e:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8002162:	2104      	movs	r1, #4
 8002164:	f001 bf06 	b.w	8003f74 <HAL_GPIO_WritePin>
 8002168:	40020800 	.word	0x40020800
 800216c:	40020c00 	.word	0x40020c00

08002170 <LCD_IO_WriteReg>:
{
 8002170:	b538      	push	{r3, r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8002172:	4d0b      	ldr	r5, [pc, #44]	@ (80021a0 <LCD_IO_WriteReg+0x30>)
{
 8002174:	4604      	mov	r4, r0
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_RESET);
 8002176:	2200      	movs	r2, #0
 8002178:	480a      	ldr	r0, [pc, #40]	@ (80021a4 <LCD_IO_WriteReg+0x34>)
 800217a:	f44f 5100 	mov.w	r1, #8192	@ 0x2000
 800217e:	f001 fef9 	bl	8003f74 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8002182:	2200      	movs	r2, #0
 8002184:	2104      	movs	r1, #4
 8002186:	4628      	mov	r0, r5
 8002188:	f001 fef4 	bl	8003f74 <HAL_GPIO_WritePin>
  SPI5_Write(Reg);
 800218c:	4620      	mov	r0, r4
 800218e:	f7ff fc5b 	bl	8001a48 <SPI5_Write>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8002192:	4628      	mov	r0, r5
 8002194:	2201      	movs	r2, #1
}
 8002196:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 800219a:	2104      	movs	r1, #4
 800219c:	f001 beea 	b.w	8003f74 <HAL_GPIO_WritePin>
 80021a0:	40020800 	.word	0x40020800
 80021a4:	40020c00 	.word	0x40020c00

080021a8 <LCD_IO_ReadData>:
{
 80021a8:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 80021aa:	4e14      	ldr	r6, [pc, #80]	@ (80021fc <LCD_IO_ReadData+0x54>)
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_RESET);
 80021ac:	4f14      	ldr	r7, [pc, #80]	@ (8002200 <LCD_IO_ReadData+0x58>)
{
 80021ae:	4605      	mov	r5, r0
 80021b0:	460c      	mov	r4, r1
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 80021b2:	4630      	mov	r0, r6
 80021b4:	2200      	movs	r2, #0
 80021b6:	2104      	movs	r1, #4
 80021b8:	f001 fedc 	bl	8003f74 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_RESET);
 80021bc:	2200      	movs	r2, #0
 80021be:	f44f 5100 	mov.w	r1, #8192	@ 0x2000
 80021c2:	4638      	mov	r0, r7
 80021c4:	f001 fed6 	bl	8003f74 <HAL_GPIO_WritePin>
  SPI5_Write(RegValue);
 80021c8:	4628      	mov	r0, r5
 80021ca:	f7ff fc3d 	bl	8001a48 <SPI5_Write>
  status = HAL_SPI_Receive(&hspi5, (uint8_t*) &readvalue, ReadSize, Spi5Timeout);
 80021ce:	4b0d      	ldr	r3, [pc, #52]	@ (8002204 <LCD_IO_ReadData+0x5c>)
 80021d0:	480d      	ldr	r0, [pc, #52]	@ (8002208 <LCD_IO_ReadData+0x60>)
 80021d2:	681b      	ldr	r3, [r3, #0]
 80021d4:	4622      	mov	r2, r4
 80021d6:	a901      	add	r1, sp, #4
 80021d8:	f004 f916 	bl	8006408 <HAL_SPI_Receive>
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_SET);
 80021dc:	4638      	mov	r0, r7
 80021de:	2201      	movs	r2, #1
 80021e0:	f44f 5100 	mov.w	r1, #8192	@ 0x2000
  return readvalue;
 80021e4:	9c01      	ldr	r4, [sp, #4]
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_SET);
 80021e6:	f001 fec5 	bl	8003f74 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 80021ea:	4630      	mov	r0, r6
 80021ec:	2201      	movs	r2, #1
 80021ee:	2104      	movs	r1, #4
 80021f0:	f001 fec0 	bl	8003f74 <HAL_GPIO_WritePin>
}
 80021f4:	4620      	mov	r0, r4
 80021f6:	b003      	add	sp, #12
 80021f8:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80021fa:	bf00      	nop
 80021fc:	40020800 	.word	0x40020800
 8002200:	40020c00 	.word	0x40020c00
 8002204:	2000005c 	.word	0x2000005c
 8002208:	20002f14 	.word	0x20002f14

0800220c <LCD_Delay>:
  HAL_Delay(Delay);
 800220c:	f001 bc58 	b.w	8003ac0 <HAL_Delay>

08002210 <HAL_TIM_PeriodElapsedCallback>:
void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
{
  /* USER CODE BEGIN Callback 0 */

  /* USER CODE END Callback 0 */
  if (htim->Instance == TIM6)
 8002210:	6802      	ldr	r2, [r0, #0]
 8002212:	4b03      	ldr	r3, [pc, #12]	@ (8002220 <HAL_TIM_PeriodElapsedCallback+0x10>)
 8002214:	429a      	cmp	r2, r3
 8002216:	d101      	bne.n	800221c <HAL_TIM_PeriodElapsedCallback+0xc>
  {
    HAL_IncTick();
 8002218:	f001 bc40 	b.w	8003a9c <HAL_IncTick>
  }
  /* USER CODE BEGIN Callback 1 */

  /* USER CODE END Callback 1 */
}
 800221c:	4770      	bx	lr
 800221e:	bf00      	nop
 8002220:	40001000 	.word	0x40001000

08002224 <Error_Handler>:
{
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */

  /* USER CODE END Error_Handler_Debug */
}
 8002224:	4770      	bx	lr
	...

08002228 <GYRO_IO_Read>:
  HAL_GPIO_WritePin(GYRO_CS_PORT, GYRO_CS_PIN, GPIO_PIN_SET);
  return 0; // Thành công
}

static int32_t GYRO_IO_Read(void *handle, uint8_t Reg, uint8_t *pData, uint16_t Length)
{
 8002228:	b537      	push	{r0, r1, r2, r4, r5, lr}
  // SPI_HandleTypeDef* hspi = (SPI_HandleTypeDef*)handle;
  uint8_t tx_header;

  tx_header = Reg | 0x80; // Read command: MSB=1.
  if (Length > 1)
 800222a:	2b01      	cmp	r3, #1
  tx_header = Reg | 0x80; // Read command: MSB=1.
 800222c:	bf94      	ite	ls
 800222e:	f041 0180 	orrls.w	r1, r1, #128	@ 0x80
  {
    tx_header |= 0x40;    // Multi-byte read: bit 6 = 1.
 8002232:	f041 01c0 	orrhi.w	r1, r1, #192	@ 0xc0
  }

  HAL_GPIO_WritePin(GYRO_CS_PORT, GYRO_CS_PIN, GPIO_PIN_RESET);
 8002236:	4816      	ldr	r0, [pc, #88]	@ (8002290 <GYRO_IO_Read+0x68>)
  tx_header = Reg | 0x80; // Read command: MSB=1.
 8002238:	f88d 1007 	strb.w	r1, [sp, #7]
{
 800223c:	4615      	mov	r5, r2
  HAL_GPIO_WritePin(GYRO_CS_PORT, GYRO_CS_PIN, GPIO_PIN_RESET);
 800223e:	2102      	movs	r1, #2
 8002240:	2200      	movs	r2, #0
{
 8002242:	461c      	mov	r4, r3
  HAL_GPIO_WritePin(GYRO_CS_PORT, GYRO_CS_PIN, GPIO_PIN_RESET);
 8002244:	f001 fe96 	bl	8003f74 <HAL_GPIO_WritePin>
  if (HAL_SPI_Transmit(&hspi5, &tx_header, 1, HAL_MAX_DELAY) != HAL_OK)
 8002248:	4812      	ldr	r0, [pc, #72]	@ (8002294 <GYRO_IO_Read+0x6c>)
 800224a:	f04f 33ff 	mov.w	r3, #4294967295
 800224e:	2201      	movs	r2, #1
 8002250:	f10d 0107 	add.w	r1, sp, #7
 8002254:	f003 ff2c 	bl	80060b0 <HAL_SPI_Transmit>
 8002258:	b140      	cbz	r0, 800226c <GYRO_IO_Read+0x44>
  {
    HAL_GPIO_WritePin(GYRO_CS_PORT, GYRO_CS_PIN, GPIO_PIN_SET);
 800225a:	480d      	ldr	r0, [pc, #52]	@ (8002290 <GYRO_IO_Read+0x68>)
 800225c:	2201      	movs	r2, #1
 800225e:	2102      	movs	r1, #2
 8002260:	f001 fe88 	bl	8003f74 <HAL_GPIO_WritePin>
    return -1;
 8002264:	f04f 30ff 	mov.w	r0, #4294967295
    HAL_GPIO_WritePin(GYRO_CS_PORT, GYRO_CS_PIN, GPIO_PIN_SET);
    return -1;
  }
  HAL_GPIO_WritePin(GYRO_CS_PORT, GYRO_CS_PIN, GPIO_PIN_SET);
  return 0;
}
 8002268:	b003      	add	sp, #12
 800226a:	bd30      	pop	{r4, r5, pc}
  if (HAL_SPI_Receive(&hspi5, pData, Length, HAL_MAX_DELAY) != HAL_OK)
 800226c:	4622      	mov	r2, r4
 800226e:	4809      	ldr	r0, [pc, #36]	@ (8002294 <GYRO_IO_Read+0x6c>)
 8002270:	f04f 33ff 	mov.w	r3, #4294967295
 8002274:	4629      	mov	r1, r5
 8002276:	f004 f8c7 	bl	8006408 <HAL_SPI_Receive>
 800227a:	4604      	mov	r4, r0
 800227c:	2800      	cmp	r0, #0
 800227e:	d1ec      	bne.n	800225a <GYRO_IO_Read+0x32>
  HAL_GPIO_WritePin(GYRO_CS_PORT, GYRO_CS_PIN, GPIO_PIN_SET);
 8002280:	4803      	ldr	r0, [pc, #12]	@ (8002290 <GYRO_IO_Read+0x68>)
 8002282:	2201      	movs	r2, #1
 8002284:	2102      	movs	r1, #2
 8002286:	f001 fe75 	bl	8003f74 <HAL_GPIO_WritePin>
  return 0;
 800228a:	4620      	mov	r0, r4
 800228c:	e7ec      	b.n	8002268 <GYRO_IO_Read+0x40>
 800228e:	bf00      	nop
 8002290:	40020800 	.word	0x40020800
 8002294:	20002f14 	.word	0x20002f14

08002298 <GYRO_IO_Write>:
{
 8002298:	b5b0      	push	{r4, r5, r7, lr}
 800229a:	461c      	mov	r4, r3
  uint8_t tx_buffer[Length + 1];
 800229c:	3308      	adds	r3, #8
 800229e:	4668      	mov	r0, sp
 80022a0:	08db      	lsrs	r3, r3, #3
 80022a2:	eba0 03c3 	sub.w	r3, r0, r3, lsl #3
{
 80022a6:	af00      	add	r7, sp, #0
  uint8_t tx_buffer[Length + 1];
 80022a8:	469d      	mov	sp, r3
  tx_buffer[0] = Reg & 0x7F; // Write command: MSB=0.
 80022aa:	f001 017f 	and.w	r1, r1, #127	@ 0x7f
 80022ae:	f88d 1000 	strb.w	r1, [sp]
  uint8_t tx_buffer[Length + 1];
 80022b2:	466d      	mov	r5, sp
  for(uint16_t i = 0; i < Length; i++)
 80022b4:	3a01      	subs	r2, #1
 80022b6:	eb0d 0104 	add.w	r1, sp, r4
 80022ba:	428b      	cmp	r3, r1
 80022bc:	d117      	bne.n	80022ee <GYRO_IO_Write+0x56>
  HAL_GPIO_WritePin(GYRO_CS_PORT, GYRO_CS_PIN, GPIO_PIN_RESET);
 80022be:	4810      	ldr	r0, [pc, #64]	@ (8002300 <GYRO_IO_Write+0x68>)
 80022c0:	2200      	movs	r2, #0
 80022c2:	2102      	movs	r1, #2
 80022c4:	f001 fe56 	bl	8003f74 <HAL_GPIO_WritePin>
  if (HAL_SPI_Transmit(&hspi5, tx_buffer, Length + 1, HAL_MAX_DELAY) != HAL_OK)
 80022c8:	1c62      	adds	r2, r4, #1
 80022ca:	b292      	uxth	r2, r2
 80022cc:	4629      	mov	r1, r5
 80022ce:	480d      	ldr	r0, [pc, #52]	@ (8002304 <GYRO_IO_Write+0x6c>)
 80022d0:	f04f 33ff 	mov.w	r3, #4294967295
 80022d4:	f003 feec 	bl	80060b0 <HAL_SPI_Transmit>
 80022d8:	4604      	mov	r4, r0
    HAL_GPIO_WritePin(GYRO_CS_PORT, GYRO_CS_PIN, GPIO_PIN_SET);
 80022da:	2201      	movs	r2, #1
 80022dc:	4808      	ldr	r0, [pc, #32]	@ (8002300 <GYRO_IO_Write+0x68>)
 80022de:	2102      	movs	r1, #2
  if (HAL_SPI_Transmit(&hspi5, tx_buffer, Length + 1, HAL_MAX_DELAY) != HAL_OK)
 80022e0:	b154      	cbz	r4, 80022f8 <GYRO_IO_Write+0x60>
    HAL_GPIO_WritePin(GYRO_CS_PORT, GYRO_CS_PIN, GPIO_PIN_SET);
 80022e2:	f001 fe47 	bl	8003f74 <HAL_GPIO_WritePin>
    return -1; // Lỗi
 80022e6:	f04f 30ff 	mov.w	r0, #4294967295
}
 80022ea:	46bd      	mov	sp, r7
 80022ec:	bdb0      	pop	{r4, r5, r7, pc}
    tx_buffer[i+1] = pData[i];
 80022ee:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 80022f2:	f803 0f01 	strb.w	r0, [r3, #1]!
  for(uint16_t i = 0; i < Length; i++)
 80022f6:	e7e0      	b.n	80022ba <GYRO_IO_Write+0x22>
  HAL_GPIO_WritePin(GYRO_CS_PORT, GYRO_CS_PIN, GPIO_PIN_SET);
 80022f8:	f001 fe3c 	bl	8003f74 <HAL_GPIO_WritePin>
  return 0; // Thành công
 80022fc:	4620      	mov	r0, r4
 80022fe:	e7f4      	b.n	80022ea <GYRO_IO_Write+0x52>
 8002300:	40020800 	.word	0x40020800
 8002304:	20002f14 	.word	0x20002f14

08002308 <BSP_GYRO_Init>:
{
 8002308:	b5f0      	push	{r4, r5, r6, r7, lr}
  if (Gyro_Sensor_Initialized == 1)
 800230a:	4f27      	ldr	r7, [pc, #156]	@ (80023a8 <BSP_GYRO_Init+0xa0>)
 800230c:	783a      	ldrb	r2, [r7, #0]
{
 800230e:	b089      	sub	sp, #36	@ 0x24
  a3g4250d_ctrl_reg1_t ctrl_reg1 = {0};
 8002310:	2300      	movs	r3, #0
  if (Gyro_Sensor_Initialized == 1)
 8002312:	2a01      	cmp	r2, #1
  a3g4250d_ctrl_reg1_t ctrl_reg1 = {0};
 8002314:	f88d 3004 	strb.w	r3, [sp, #4]
  a3g4250d_ctrl_reg4_t ctrl_reg4 = {0}; // Sử dụng struct từ a3g4250d_reg.h
 8002318:	f88d 3008 	strb.w	r3, [sp, #8]
  if (Gyro_Sensor_Initialized == 1)
 800231c:	d041      	beq.n	80023a2 <BSP_GYRO_Init+0x9a>
  Gyro_Ctx.write_reg = GYRO_IO_Write;
 800231e:	4c23      	ldr	r4, [pc, #140]	@ (80023ac <BSP_GYRO_Init+0xa4>)
 8002320:	4a23      	ldr	r2, [pc, #140]	@ (80023b0 <BSP_GYRO_Init+0xa8>)
 8002322:	6022      	str	r2, [r4, #0]
  Gyro_Ctx.read_reg  = GYRO_IO_Read;
 8002324:	4a23      	ldr	r2, [pc, #140]	@ (80023b4 <BSP_GYRO_Init+0xac>)
  HAL_GPIO_Init(GYRO_CS_PORT, &GPIO_InitStruct);
 8002326:	4824      	ldr	r0, [pc, #144]	@ (80023b8 <BSP_GYRO_Init+0xb0>)
  Gyro_Ctx.read_reg  = GYRO_IO_Read;
 8002328:	6062      	str	r2, [r4, #4]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 800232a:	2602      	movs	r6, #2
  Gyro_Ctx.handle    = &hspi5; // Hoặc NULL nếu không cần truyền handle SPI vào hàm IO
 800232c:	4a23      	ldr	r2, [pc, #140]	@ (80023bc <BSP_GYRO_Init+0xb4>)
 800232e:	60e2      	str	r2, [r4, #12]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8002330:	2501      	movs	r5, #1
  HAL_GPIO_Init(GYRO_CS_PORT, &GPIO_InitStruct);
 8002332:	a903      	add	r1, sp, #12
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8002334:	9305      	str	r3, [sp, #20]
 8002336:	9307      	str	r3, [sp, #28]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8002338:	e9cd 6503 	strd	r6, r5, [sp, #12]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 800233c:	9606      	str	r6, [sp, #24]
  HAL_GPIO_Init(GYRO_CS_PORT, &GPIO_InitStruct);
 800233e:	f001 fd2f 	bl	8003da0 <HAL_GPIO_Init>
  HAL_GPIO_WritePin(GYRO_CS_PORT, GYRO_CS_PIN, GPIO_PIN_SET); // CS high
 8002342:	481d      	ldr	r0, [pc, #116]	@ (80023b8 <BSP_GYRO_Init+0xb0>)
 8002344:	4631      	mov	r1, r6
 8002346:	462a      	mov	r2, r5
 8002348:	f001 fe14 	bl	8003f74 <HAL_GPIO_WritePin>
  if (a3g4250d_device_id_get(&Gyro_Ctx, &id) != 0)
 800234c:	f10d 010b 	add.w	r1, sp, #11
 8002350:	4620      	mov	r0, r4
 8002352:	f001 f8d5 	bl	8003500 <a3g4250d_device_id_get>
 8002356:	b118      	cbz	r0, 8002360 <BSP_GYRO_Init+0x58>
      return BSP_GYRO_ERROR;
 8002358:	f04f 30ff 	mov.w	r0, #4294967295
}
 800235c:	b009      	add	sp, #36	@ 0x24
 800235e:	bdf0      	pop	{r4, r5, r6, r7, pc}
  ctrl_reg1.pd = 0x0F; // Bật các trục và power on
 8002360:	230f      	movs	r3, #15
 8002362:	f88d 3004 	strb.w	r3, [sp, #4]
  if (a3g4250d_write_reg(&Gyro_Ctx, A3G4250D_CTRL_REG1, (uint8_t*)&ctrl_reg1, 1) != 0)
 8002366:	aa01      	add	r2, sp, #4
 8002368:	462b      	mov	r3, r5
 800236a:	2120      	movs	r1, #32
 800236c:	4620      	mov	r0, r4
 800236e:	f001 f890 	bl	8003492 <a3g4250d_write_reg>
 8002372:	2800      	cmp	r0, #0
 8002374:	d1f0      	bne.n	8002358 <BSP_GYRO_Init+0x50>
  HAL_Delay(5); // Chờ một chút cho ổn định
 8002376:	2005      	movs	r0, #5
 8002378:	f001 fba2 	bl	8003ac0 <HAL_Delay>
  if (a3g4250d_read_reg(&Gyro_Ctx, A3G4250D_CTRL_REG4, (uint8_t*)&ctrl_reg4, 1) != 0)
 800237c:	462b      	mov	r3, r5
 800237e:	aa02      	add	r2, sp, #8
 8002380:	2123      	movs	r1, #35	@ 0x23
 8002382:	4620      	mov	r0, r4
 8002384:	f001 f878 	bl	8003478 <a3g4250d_read_reg>
 8002388:	2800      	cmp	r0, #0
 800238a:	d1e5      	bne.n	8002358 <BSP_GYRO_Init+0x50>
  uint8_t reg4_val_to_write = 0x00; // Mặc định SIM=0 (4-wire), ST=00 (self-test off), BLE=0 (LSB first)
 800238c:	f88d 000c 	strb.w	r0, [sp, #12]
  if (a3g4250d_write_reg(&Gyro_Ctx, A3G4250D_CTRL_REG4, &reg4_val_to_write, 1) != 0)
 8002390:	462b      	mov	r3, r5
 8002392:	aa03      	add	r2, sp, #12
 8002394:	2123      	movs	r1, #35	@ 0x23
 8002396:	4620      	mov	r0, r4
 8002398:	f001 f87b 	bl	8003492 <a3g4250d_write_reg>
 800239c:	2800      	cmp	r0, #0
 800239e:	d1db      	bne.n	8002358 <BSP_GYRO_Init+0x50>
  Gyro_Sensor_Initialized = 1;
 80023a0:	703d      	strb	r5, [r7, #0]
    return BSP_GYRO_OK;
 80023a2:	2000      	movs	r0, #0
 80023a4:	e7da      	b.n	800235c <BSP_GYRO_Init+0x54>
 80023a6:	bf00      	nop
 80023a8:	200030b0 	.word	0x200030b0
 80023ac:	200030b4 	.word	0x200030b4
 80023b0:	08002299 	.word	0x08002299
 80023b4:	08002229 	.word	0x08002229
 80023b8:	40020800 	.word	0x40020800
 80023bc:	20002f14 	.word	0x20002f14

080023c0 <BSP_GYRO_GetXYZ>:
{
 80023c0:	b530      	push	{r4, r5, lr}
 80023c2:	ed2d 8b02 	vpush	{d8}
  if (Gyro_Sensor_Initialized == 0) {
 80023c6:	4b17      	ldr	r3, [pc, #92]	@ (8002424 <BSP_GYRO_GetXYZ+0x64>)
 80023c8:	781b      	ldrb	r3, [r3, #0]
{
 80023ca:	b083      	sub	sp, #12
 80023cc:	4605      	mov	r5, r0
  if (Gyro_Sensor_Initialized == 0) {
 80023ce:	b933      	cbnz	r3, 80023de <BSP_GYRO_GetXYZ+0x1e>
      return BSP_GYRO_ERROR;
 80023d0:	f04f 34ff 	mov.w	r4, #4294967295
}
 80023d4:	4620      	mov	r0, r4
 80023d6:	b003      	add	sp, #12
 80023d8:	ecbd 8b02 	vpop	{d8}
 80023dc:	bd30      	pop	{r4, r5, pc}
  if (a3g4250d_angular_rate_raw_get(&Gyro_Ctx, raw_data) != 0)
 80023de:	4812      	ldr	r0, [pc, #72]	@ (8002428 <BSP_GYRO_GetXYZ+0x68>)
 80023e0:	4669      	mov	r1, sp
 80023e2:	f001 f86f 	bl	80034c4 <a3g4250d_angular_rate_raw_get>
 80023e6:	4604      	mov	r4, r0
 80023e8:	2800      	cmp	r0, #0
 80023ea:	d1f1      	bne.n	80023d0 <BSP_GYRO_GetXYZ+0x10>
  pDataXYZ[0] = a3g4250d_from_fs245dps_to_mdps(raw_data[0]) / 1000.0f;
 80023ec:	f9bd 0000 	ldrsh.w	r0, [sp]
 80023f0:	ed9f 8a0e 	vldr	s16, [pc, #56]	@ 800242c <BSP_GYRO_GetXYZ+0x6c>
 80023f4:	f001 f85a 	bl	80034ac <a3g4250d_from_fs245dps_to_mdps>
 80023f8:	eec0 7a08 	vdiv.f32	s15, s0, s16
  pDataXYZ[1] = a3g4250d_from_fs245dps_to_mdps(raw_data[1]) / 1000.0f;
 80023fc:	f9bd 0002 	ldrsh.w	r0, [sp, #2]
  pDataXYZ[0] = a3g4250d_from_fs245dps_to_mdps(raw_data[0]) / 1000.0f;
 8002400:	edc5 7a00 	vstr	s15, [r5]
  pDataXYZ[1] = a3g4250d_from_fs245dps_to_mdps(raw_data[1]) / 1000.0f;
 8002404:	f001 f852 	bl	80034ac <a3g4250d_from_fs245dps_to_mdps>
 8002408:	eec0 7a08 	vdiv.f32	s15, s0, s16
  pDataXYZ[2] = a3g4250d_from_fs245dps_to_mdps(raw_data[2]) / 1000.0f;
 800240c:	f9bd 0004 	ldrsh.w	r0, [sp, #4]
  pDataXYZ[1] = a3g4250d_from_fs245dps_to_mdps(raw_data[1]) / 1000.0f;
 8002410:	edc5 7a01 	vstr	s15, [r5, #4]
  pDataXYZ[2] = a3g4250d_from_fs245dps_to_mdps(raw_data[2]) / 1000.0f;
 8002414:	f001 f84a 	bl	80034ac <a3g4250d_from_fs245dps_to_mdps>
 8002418:	eec0 7a08 	vdiv.f32	s15, s0, s16
 800241c:	edc5 7a02 	vstr	s15, [r5, #8]
  return BSP_GYRO_OK;
 8002420:	e7d8      	b.n	80023d4 <BSP_GYRO_GetXYZ+0x14>
 8002422:	bf00      	nop
 8002424:	200030b0 	.word	0x200030b0
 8002428:	200030b4 	.word	0x200030b4
 800242c:	447a0000 	.word	0x447a0000

08002430 <HAL_MspInit>:
/* USER CODE END 0 */
/**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 8002430:	b082      	sub	sp, #8

  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
 8002432:	4b0e      	ldr	r3, [pc, #56]	@ (800246c <HAL_MspInit+0x3c>)
 8002434:	2200      	movs	r2, #0
 8002436:	9200      	str	r2, [sp, #0]
 8002438:	6c59      	ldr	r1, [r3, #68]	@ 0x44
 800243a:	f441 4180 	orr.w	r1, r1, #16384	@ 0x4000
 800243e:	6459      	str	r1, [r3, #68]	@ 0x44
 8002440:	6c59      	ldr	r1, [r3, #68]	@ 0x44
 8002442:	f401 4180 	and.w	r1, r1, #16384	@ 0x4000
 8002446:	9100      	str	r1, [sp, #0]
 8002448:	9900      	ldr	r1, [sp, #0]
  __HAL_RCC_PWR_CLK_ENABLE();
 800244a:	9201      	str	r2, [sp, #4]
 800244c:	6c19      	ldr	r1, [r3, #64]	@ 0x40
 800244e:	f041 5180 	orr.w	r1, r1, #268435456	@ 0x10000000
 8002452:	6419      	str	r1, [r3, #64]	@ 0x40
 8002454:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002456:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 800245a:	9301      	str	r3, [sp, #4]
 800245c:	9b01      	ldr	r3, [sp, #4]

  /* System interrupt init*/
  /* PendSV_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
 800245e:	210f      	movs	r1, #15
 8002460:	f06f 0001 	mvn.w	r0, #1

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 8002464:	b002      	add	sp, #8
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
 8002466:	f001 bb51 	b.w	8003b0c <HAL_NVIC_SetPriority>
 800246a:	bf00      	nop
 800246c:	40023800 	.word	0x40023800

08002470 <HAL_CRC_MspInit>:
  * @param hcrc: CRC handle pointer
  * @retval None
  */
void HAL_CRC_MspInit(CRC_HandleTypeDef* hcrc)
{
  if(hcrc->Instance==CRC)
 8002470:	6802      	ldr	r2, [r0, #0]
 8002472:	4b09      	ldr	r3, [pc, #36]	@ (8002498 <HAL_CRC_MspInit+0x28>)
 8002474:	429a      	cmp	r2, r3
{
 8002476:	b082      	sub	sp, #8
  if(hcrc->Instance==CRC)
 8002478:	d10b      	bne.n	8002492 <HAL_CRC_MspInit+0x22>
  {
    /* USER CODE BEGIN CRC_MspInit 0 */

    /* USER CODE END CRC_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_CRC_CLK_ENABLE();
 800247a:	2300      	movs	r3, #0
 800247c:	9301      	str	r3, [sp, #4]
 800247e:	4b07      	ldr	r3, [pc, #28]	@ (800249c <HAL_CRC_MspInit+0x2c>)
 8002480:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8002482:	f442 5280 	orr.w	r2, r2, #4096	@ 0x1000
 8002486:	631a      	str	r2, [r3, #48]	@ 0x30
 8002488:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800248a:	f403 5380 	and.w	r3, r3, #4096	@ 0x1000
 800248e:	9301      	str	r3, [sp, #4]
 8002490:	9b01      	ldr	r3, [sp, #4]

    /* USER CODE END CRC_MspInit 1 */

  }

}
 8002492:	b002      	add	sp, #8
 8002494:	4770      	bx	lr
 8002496:	bf00      	nop
 8002498:	40023000 	.word	0x40023000
 800249c:	40023800 	.word	0x40023800

080024a0 <HAL_DMA2D_MspInit>:
  * This function configures the hardware resources used in this example
  * @param hdma2d: DMA2D handle pointer
  * @retval None
  */
void HAL_DMA2D_MspInit(DMA2D_HandleTypeDef* hdma2d)
{
 80024a0:	b507      	push	{r0, r1, r2, lr}
  if(hdma2d->Instance==DMA2D)
 80024a2:	4b0f      	ldr	r3, [pc, #60]	@ (80024e0 <HAL_DMA2D_MspInit+0x40>)
 80024a4:	6802      	ldr	r2, [r0, #0]
 80024a6:	429a      	cmp	r2, r3
 80024a8:	d116      	bne.n	80024d8 <HAL_DMA2D_MspInit+0x38>
  {
    /* USER CODE BEGIN DMA2D_MspInit 0 */

    /* USER CODE END DMA2D_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_DMA2D_CLK_ENABLE();
 80024aa:	2200      	movs	r2, #0
 80024ac:	f5a3 43f0 	sub.w	r3, r3, #30720	@ 0x7800
 80024b0:	9201      	str	r2, [sp, #4]
 80024b2:	6b19      	ldr	r1, [r3, #48]	@ 0x30
 80024b4:	f441 0100 	orr.w	r1, r1, #8388608	@ 0x800000
 80024b8:	6319      	str	r1, [r3, #48]	@ 0x30
 80024ba:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80024bc:	f403 0300 	and.w	r3, r3, #8388608	@ 0x800000
 80024c0:	9301      	str	r3, [sp, #4]
    /* DMA2D interrupt Init */
    HAL_NVIC_SetPriority(DMA2D_IRQn, 5, 0);
 80024c2:	2105      	movs	r1, #5
 80024c4:	205a      	movs	r0, #90	@ 0x5a
    __HAL_RCC_DMA2D_CLK_ENABLE();
 80024c6:	9b01      	ldr	r3, [sp, #4]
    HAL_NVIC_SetPriority(DMA2D_IRQn, 5, 0);
 80024c8:	f001 fb20 	bl	8003b0c <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(DMA2D_IRQn);
 80024cc:	205a      	movs	r0, #90	@ 0x5a

    /* USER CODE END DMA2D_MspInit 1 */

  }

}
 80024ce:	b003      	add	sp, #12
 80024d0:	f85d eb04 	ldr.w	lr, [sp], #4
    HAL_NVIC_EnableIRQ(DMA2D_IRQn);
 80024d4:	f001 bb4c 	b.w	8003b70 <HAL_NVIC_EnableIRQ>
}
 80024d8:	b003      	add	sp, #12
 80024da:	f85d fb04 	ldr.w	pc, [sp], #4
 80024de:	bf00      	nop
 80024e0:	4002b000 	.word	0x4002b000

080024e4 <HAL_I2C_MspInit>:
  * This function configures the hardware resources used in this example
  * @param hi2c: I2C handle pointer
  * @retval None
  */
void HAL_I2C_MspInit(I2C_HandleTypeDef* hi2c)
{
 80024e4:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80024e8:	4604      	mov	r4, r0
 80024ea:	b089      	sub	sp, #36	@ 0x24
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80024ec:	2214      	movs	r2, #20
 80024ee:	2100      	movs	r1, #0
 80024f0:	a803      	add	r0, sp, #12
 80024f2:	f020 fbe4 	bl	8022cbe <memset>
  if(hi2c->Instance==I2C3)
 80024f6:	6822      	ldr	r2, [r4, #0]
 80024f8:	4b24      	ldr	r3, [pc, #144]	@ (800258c <HAL_I2C_MspInit+0xa8>)
 80024fa:	429a      	cmp	r2, r3
 80024fc:	d143      	bne.n	8002586 <HAL_I2C_MspInit+0xa2>
  {
    /* USER CODE BEGIN I2C3_MspInit 0 */

    /* USER CODE END I2C3_MspInit 0 */

    __HAL_RCC_GPIOC_CLK_ENABLE();
 80024fe:	4c24      	ldr	r4, [pc, #144]	@ (8002590 <HAL_I2C_MspInit+0xac>)
    GPIO_InitStruct.Pin = GPIO_PIN_9;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
    GPIO_InitStruct.Pull = GPIO_PULLUP;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8002500:	4824      	ldr	r0, [pc, #144]	@ (8002594 <HAL_I2C_MspInit+0xb0>)
    __HAL_RCC_GPIOC_CLK_ENABLE();
 8002502:	2500      	movs	r5, #0
 8002504:	9500      	str	r5, [sp, #0]
 8002506:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 8002508:	f043 0304 	orr.w	r3, r3, #4
 800250c:	6323      	str	r3, [r4, #48]	@ 0x30
 800250e:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 8002510:	f003 0304 	and.w	r3, r3, #4
 8002514:	9300      	str	r3, [sp, #0]
 8002516:	9b00      	ldr	r3, [sp, #0]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8002518:	9501      	str	r5, [sp, #4]
 800251a:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 800251c:	f043 0301 	orr.w	r3, r3, #1
 8002520:	6323      	str	r3, [r4, #48]	@ 0x30
 8002522:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 8002524:	f003 0301 	and.w	r3, r3, #1
 8002528:	9301      	str	r3, [sp, #4]
 800252a:	9b01      	ldr	r3, [sp, #4]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 800252c:	f04f 0912 	mov.w	r9, #18
 8002530:	f44f 7300 	mov.w	r3, #512	@ 0x200
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8002534:	f04f 0801 	mov.w	r8, #1
 8002538:	2703      	movs	r7, #3
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 800253a:	2604      	movs	r6, #4
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 800253c:	a903      	add	r1, sp, #12
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 800253e:	e9cd 3903 	strd	r3, r9, [sp, #12]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8002542:	e9cd 8705 	strd	r8, r7, [sp, #20]
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 8002546:	9607      	str	r6, [sp, #28]
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8002548:	f001 fc2a 	bl	8003da0 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_8;
 800254c:	f44f 7380 	mov.w	r3, #256	@ 0x100
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
    GPIO_InitStruct.Pull = GPIO_PULLUP;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8002550:	4811      	ldr	r0, [pc, #68]	@ (8002598 <HAL_I2C_MspInit+0xb4>)
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 8002552:	9607      	str	r6, [sp, #28]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8002554:	a903      	add	r1, sp, #12
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 8002556:	e9cd 3903 	strd	r3, r9, [sp, #12]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 800255a:	e9cd 8705 	strd	r8, r7, [sp, #20]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 800255e:	f001 fc1f 	bl	8003da0 <HAL_GPIO_Init>

    /* Peripheral clock enable */
    __HAL_RCC_I2C3_CLK_ENABLE();
 8002562:	9502      	str	r5, [sp, #8]
 8002564:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 8002566:	f443 0300 	orr.w	r3, r3, #8388608	@ 0x800000
 800256a:	6423      	str	r3, [r4, #64]	@ 0x40
 800256c:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 800256e:	f403 0300 	and.w	r3, r3, #8388608	@ 0x800000
 8002572:	9302      	str	r3, [sp, #8]
 8002574:	9b02      	ldr	r3, [sp, #8]
    /* USER CODE BEGIN I2C3_MspInit 1 */
  /* Force the I2C Peripheral Clock Reset */  
    __HAL_RCC_I2C3_FORCE_RESET();
 8002576:	6a23      	ldr	r3, [r4, #32]
 8002578:	f443 0300 	orr.w	r3, r3, #8388608	@ 0x800000
 800257c:	6223      	str	r3, [r4, #32]
      
    /* Release the I2C Peripheral Clock Reset */  
    __HAL_RCC_I2C3_RELEASE_RESET(); 
 800257e:	6a23      	ldr	r3, [r4, #32]
 8002580:	f423 0300 	bic.w	r3, r3, #8388608	@ 0x800000
 8002584:	6223      	str	r3, [r4, #32]
    /* USER CODE END I2C3_MspInit 1 */

  }

}
 8002586:	b009      	add	sp, #36	@ 0x24
 8002588:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800258c:	40005c00 	.word	0x40005c00
 8002590:	40023800 	.word	0x40023800
 8002594:	40020800 	.word	0x40020800
 8002598:	40020000 	.word	0x40020000

0800259c <HAL_LTDC_MspInit>:
  * This function configures the hardware resources used in this example
  * @param hltdc: LTDC handle pointer
  * @retval None
  */
void HAL_LTDC_MspInit(LTDC_HandleTypeDef* hltdc)
{
 800259c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800259e:	b099      	sub	sp, #100	@ 0x64
 80025a0:	4604      	mov	r4, r0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80025a2:	2214      	movs	r2, #20
 80025a4:	2100      	movs	r1, #0
 80025a6:	a807      	add	r0, sp, #28
 80025a8:	f020 fb89 	bl	8022cbe <memset>
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 80025ac:	2230      	movs	r2, #48	@ 0x30
 80025ae:	eb0d 0002 	add.w	r0, sp, r2
 80025b2:	2100      	movs	r1, #0
 80025b4:	f020 fb83 	bl	8022cbe <memset>
  if(hltdc->Instance==LTDC)
 80025b8:	6822      	ldr	r2, [r4, #0]
 80025ba:	4b5e      	ldr	r3, [pc, #376]	@ (8002734 <HAL_LTDC_MspInit+0x198>)
 80025bc:	429a      	cmp	r2, r3
 80025be:	f040 80b7 	bne.w	8002730 <HAL_LTDC_MspInit+0x194>

    /* USER CODE END LTDC_MspInit 0 */

  /** Initializes the peripherals clock
  */
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_LTDC;
 80025c2:	2308      	movs	r3, #8
 80025c4:	930c      	str	r3, [sp, #48]	@ 0x30
    PeriphClkInitStruct.PLLSAI.PLLSAIN = 192;
 80025c6:	23c0      	movs	r3, #192	@ 0xc0
 80025c8:	9310      	str	r3, [sp, #64]	@ 0x40
    PeriphClkInitStruct.PLLSAI.PLLSAIR = 4;
 80025ca:	2304      	movs	r3, #4
 80025cc:	9312      	str	r3, [sp, #72]	@ 0x48
    PeriphClkInitStruct.PLLSAIDivR = RCC_PLLSAIDIVR_16;
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 80025ce:	a80c      	add	r0, sp, #48	@ 0x30
    PeriphClkInitStruct.PLLSAIDivR = RCC_PLLSAIDIVR_16;
 80025d0:	f44f 3340 	mov.w	r3, #196608	@ 0x30000
 80025d4:	9315      	str	r3, [sp, #84]	@ 0x54
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 80025d6:	f003 fac7 	bl	8005b68 <HAL_RCCEx_PeriphCLKConfig>
 80025da:	b108      	cbz	r0, 80025e0 <HAL_LTDC_MspInit+0x44>
    {
      Error_Handler();
 80025dc:	f7ff fe22 	bl	8002224 <Error_Handler>
    }

    /* Peripheral clock enable */
    __HAL_RCC_LTDC_CLK_ENABLE();
 80025e0:	4b55      	ldr	r3, [pc, #340]	@ (8002738 <HAL_LTDC_MspInit+0x19c>)
    GPIO_InitStruct.Pin = GPIO_PIN_10;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 80025e2:	4856      	ldr	r0, [pc, #344]	@ (800273c <HAL_LTDC_MspInit+0x1a0>)
    __HAL_RCC_LTDC_CLK_ENABLE();
 80025e4:	2400      	movs	r4, #0
 80025e6:	9400      	str	r4, [sp, #0]
 80025e8:	6c5a      	ldr	r2, [r3, #68]	@ 0x44
 80025ea:	f042 6280 	orr.w	r2, r2, #67108864	@ 0x4000000
 80025ee:	645a      	str	r2, [r3, #68]	@ 0x44
 80025f0:	6c5a      	ldr	r2, [r3, #68]	@ 0x44
 80025f2:	f002 6280 	and.w	r2, r2, #67108864	@ 0x4000000
 80025f6:	9200      	str	r2, [sp, #0]
 80025f8:	9a00      	ldr	r2, [sp, #0]
    __HAL_RCC_GPIOF_CLK_ENABLE();
 80025fa:	9401      	str	r4, [sp, #4]
 80025fc:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 80025fe:	f042 0220 	orr.w	r2, r2, #32
 8002602:	631a      	str	r2, [r3, #48]	@ 0x30
 8002604:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8002606:	f002 0220 	and.w	r2, r2, #32
 800260a:	9201      	str	r2, [sp, #4]
 800260c:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 800260e:	9402      	str	r4, [sp, #8]
 8002610:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8002612:	f042 0201 	orr.w	r2, r2, #1
 8002616:	631a      	str	r2, [r3, #48]	@ 0x30
 8002618:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 800261a:	f002 0201 	and.w	r2, r2, #1
 800261e:	9202      	str	r2, [sp, #8]
 8002620:	9a02      	ldr	r2, [sp, #8]
    __HAL_RCC_GPIOB_CLK_ENABLE();
 8002622:	9403      	str	r4, [sp, #12]
 8002624:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8002626:	f042 0202 	orr.w	r2, r2, #2
 800262a:	631a      	str	r2, [r3, #48]	@ 0x30
 800262c:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 800262e:	f002 0202 	and.w	r2, r2, #2
 8002632:	9203      	str	r2, [sp, #12]
 8002634:	9a03      	ldr	r2, [sp, #12]
    __HAL_RCC_GPIOG_CLK_ENABLE();
 8002636:	9404      	str	r4, [sp, #16]
 8002638:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 800263a:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
 800263e:	631a      	str	r2, [r3, #48]	@ 0x30
 8002640:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8002642:	f002 0240 	and.w	r2, r2, #64	@ 0x40
 8002646:	9204      	str	r2, [sp, #16]
 8002648:	9a04      	ldr	r2, [sp, #16]
    __HAL_RCC_GPIOC_CLK_ENABLE();
 800264a:	9405      	str	r4, [sp, #20]
 800264c:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 800264e:	f042 0204 	orr.w	r2, r2, #4
 8002652:	631a      	str	r2, [r3, #48]	@ 0x30
 8002654:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8002656:	f002 0204 	and.w	r2, r2, #4
 800265a:	9205      	str	r2, [sp, #20]
 800265c:	9a05      	ldr	r2, [sp, #20]
    __HAL_RCC_GPIOD_CLK_ENABLE();
 800265e:	9406      	str	r4, [sp, #24]
 8002660:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8002662:	f042 0208 	orr.w	r2, r2, #8
 8002666:	631a      	str	r2, [r3, #48]	@ 0x30
 8002668:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800266a:	f003 0308 	and.w	r3, r3, #8
 800266e:	9306      	str	r3, [sp, #24]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002670:	2502      	movs	r5, #2
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8002672:	260e      	movs	r6, #14
    __HAL_RCC_GPIOD_CLK_ENABLE();
 8002674:	9b06      	ldr	r3, [sp, #24]
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8002676:	960b      	str	r6, [sp, #44]	@ 0x2c
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002678:	f44f 6380 	mov.w	r3, #1024	@ 0x400
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 800267c:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800267e:	e9cd 3507 	strd	r3, r5, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8002682:	e9cd 4509 	strd	r4, r5, [sp, #36]	@ 0x24
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8002686:	f001 fb8b 	bl	8003da0 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_3|GPIO_PIN_4|GPIO_PIN_6|GPIO_PIN_11
 800268a:	f641 0358 	movw	r3, #6232	@ 0x1858
                          |GPIO_PIN_12;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 800268e:	482c      	ldr	r0, [pc, #176]	@ (8002740 <HAL_LTDC_MspInit+0x1a4>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8002690:	960b      	str	r6, [sp, #44]	@ 0x2c
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8002692:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002694:	e9cd 3507 	strd	r3, r5, [sp, #28]

    GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
 8002698:	2709      	movs	r7, #9
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 800269a:	e9cd 4509 	strd	r4, r5, [sp, #36]	@ 0x24
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 800269e:	f001 fb7f 	bl	8003da0 <HAL_GPIO_Init>
    GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1;
 80026a2:	2303      	movs	r3, #3
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80026a4:	4827      	ldr	r0, [pc, #156]	@ (8002744 <HAL_LTDC_MspInit+0x1a8>)
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
 80026a6:	970b      	str	r7, [sp, #44]	@ 0x2c
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80026a8:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80026aa:	e9cd 3507 	strd	r3, r5, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 80026ae:	e9cd 4509 	strd	r4, r5, [sp, #36]	@ 0x24
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80026b2:	f001 fb75 	bl	8003da0 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_11|GPIO_PIN_8|GPIO_PIN_9;
 80026b6:	f44f 6370 	mov.w	r3, #3840	@ 0xf00
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80026ba:	4822      	ldr	r0, [pc, #136]	@ (8002744 <HAL_LTDC_MspInit+0x1a8>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 80026bc:	960b      	str	r6, [sp, #44]	@ 0x2c
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80026be:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80026c0:	e9cd 3507 	strd	r3, r5, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 80026c4:	e9cd 4509 	strd	r4, r5, [sp, #36]	@ 0x24
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80026c8:	f001 fb6a 	bl	8003da0 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7|GPIO_PIN_11;
 80026cc:	f44f 630c 	mov.w	r3, #2240	@ 0x8c0
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 80026d0:	481d      	ldr	r0, [pc, #116]	@ (8002748 <HAL_LTDC_MspInit+0x1ac>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 80026d2:	960b      	str	r6, [sp, #44]	@ 0x2c
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 80026d4:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80026d6:	e9cd 3507 	strd	r3, r5, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 80026da:	e9cd 4509 	strd	r4, r5, [sp, #36]	@ 0x24
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 80026de:	f001 fb5f 	bl	8003da0 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7;
 80026e2:	23c0      	movs	r3, #192	@ 0xc0
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80026e4:	4819      	ldr	r0, [pc, #100]	@ (800274c <HAL_LTDC_MspInit+0x1b0>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 80026e6:	960b      	str	r6, [sp, #44]	@ 0x2c
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80026e8:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80026ea:	e9cd 3507 	strd	r3, r5, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 80026ee:	e9cd 4509 	strd	r4, r5, [sp, #36]	@ 0x24
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80026f2:	f001 fb55 	bl	8003da0 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_3;
 80026f6:	2308      	movs	r3, #8
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 80026f8:	4815      	ldr	r0, [pc, #84]	@ (8002750 <HAL_LTDC_MspInit+0x1b4>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 80026fa:	960b      	str	r6, [sp, #44]	@ 0x2c
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 80026fc:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80026fe:	e9cd 3507 	strd	r3, r5, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8002702:	e9cd 4509 	strd	r4, r5, [sp, #36]	@ 0x24
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8002706:	f001 fb4b 	bl	8003da0 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_12;
 800270a:	f44f 53a0 	mov.w	r3, #5120	@ 0x1400
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 800270e:	480e      	ldr	r0, [pc, #56]	@ (8002748 <HAL_LTDC_MspInit+0x1ac>)
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
 8002710:	970b      	str	r7, [sp, #44]	@ 0x2c
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8002712:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002714:	e9cd 3507 	strd	r3, r5, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8002718:	e9cd 4509 	strd	r4, r5, [sp, #36]	@ 0x24
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 800271c:	f001 fb40 	bl	8003da0 <HAL_GPIO_Init>

    /* LTDC interrupt Init */
    HAL_NVIC_SetPriority(LTDC_IRQn, 5, 0);
 8002720:	2058      	movs	r0, #88	@ 0x58
 8002722:	4622      	mov	r2, r4
 8002724:	2105      	movs	r1, #5
 8002726:	f001 f9f1 	bl	8003b0c <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(LTDC_IRQn);
 800272a:	2058      	movs	r0, #88	@ 0x58
 800272c:	f001 fa20 	bl	8003b70 <HAL_NVIC_EnableIRQ>

    /* USER CODE END LTDC_MspInit 1 */

  }

}
 8002730:	b019      	add	sp, #100	@ 0x64
 8002732:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8002734:	40016800 	.word	0x40016800
 8002738:	40023800 	.word	0x40023800
 800273c:	40021400 	.word	0x40021400
 8002740:	40020000 	.word	0x40020000
 8002744:	40020400 	.word	0x40020400
 8002748:	40021800 	.word	0x40021800
 800274c:	40020800 	.word	0x40020800
 8002750:	40020c00 	.word	0x40020c00

08002754 <HAL_SPI_MspInit>:
  * This function configures the hardware resources used in this example
  * @param hspi: SPI handle pointer
  * @retval None
  */
void HAL_SPI_MspInit(SPI_HandleTypeDef* hspi)
{
 8002754:	b510      	push	{r4, lr}
 8002756:	4604      	mov	r4, r0
 8002758:	b088      	sub	sp, #32
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 800275a:	2214      	movs	r2, #20
 800275c:	2100      	movs	r1, #0
 800275e:	a803      	add	r0, sp, #12
 8002760:	f020 faad 	bl	8022cbe <memset>
  if(hspi->Instance==SPI5)
 8002764:	6822      	ldr	r2, [r4, #0]
 8002766:	4b14      	ldr	r3, [pc, #80]	@ (80027b8 <HAL_SPI_MspInit+0x64>)
 8002768:	429a      	cmp	r2, r3
 800276a:	d123      	bne.n	80027b4 <HAL_SPI_MspInit+0x60>
  {
    /* USER CODE BEGIN SPI5_MspInit 0 */

    /* USER CODE END SPI5_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_SPI5_CLK_ENABLE();
 800276c:	f503 4368 	add.w	r3, r3, #59392	@ 0xe800
 8002770:	2100      	movs	r1, #0
 8002772:	9101      	str	r1, [sp, #4]
 8002774:	6c5a      	ldr	r2, [r3, #68]	@ 0x44
    GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_9;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI5;
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8002776:	4811      	ldr	r0, [pc, #68]	@ (80027bc <HAL_SPI_MspInit+0x68>)
    __HAL_RCC_SPI5_CLK_ENABLE();
 8002778:	f442 1280 	orr.w	r2, r2, #1048576	@ 0x100000
 800277c:	645a      	str	r2, [r3, #68]	@ 0x44
 800277e:	6c5a      	ldr	r2, [r3, #68]	@ 0x44
 8002780:	f402 1280 	and.w	r2, r2, #1048576	@ 0x100000
 8002784:	9201      	str	r2, [sp, #4]
 8002786:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOF_CLK_ENABLE();
 8002788:	9102      	str	r1, [sp, #8]
 800278a:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 800278c:	f042 0220 	orr.w	r2, r2, #32
 8002790:	631a      	str	r2, [r3, #48]	@ 0x30
 8002792:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8002794:	f003 0320 	and.w	r3, r3, #32
 8002798:	9302      	str	r3, [sp, #8]
 800279a:	9b02      	ldr	r3, [sp, #8]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800279c:	f44f 7260 	mov.w	r2, #896	@ 0x380
 80027a0:	2302      	movs	r3, #2
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI5;
 80027a2:	2103      	movs	r1, #3
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80027a4:	e9cd 2303 	strd	r2, r3, [sp, #12]
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI5;
 80027a8:	2305      	movs	r3, #5
 80027aa:	e9cd 1306 	strd	r1, r3, [sp, #24]
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 80027ae:	a903      	add	r1, sp, #12
 80027b0:	f001 faf6 	bl	8003da0 <HAL_GPIO_Init>

    /* USER CODE END SPI5_MspInit 1 */

  }

}
 80027b4:	b008      	add	sp, #32
 80027b6:	bd10      	pop	{r4, pc}
 80027b8:	40015000 	.word	0x40015000
 80027bc:	40021400 	.word	0x40021400

080027c0 <HAL_SDRAM_MspInit>:
  /* USER CODE BEGIN FMC_MspInit 1 */

  /* USER CODE END FMC_MspInit 1 */
}

void HAL_SDRAM_MspInit(SDRAM_HandleTypeDef* hsdram){
 80027c0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80027c4:	b086      	sub	sp, #24
  GPIO_InitTypeDef GPIO_InitStruct ={0};
 80027c6:	2300      	movs	r3, #0
 80027c8:	9303      	str	r3, [sp, #12]
  if (FMC_Initialized) {
 80027ca:	4b2b      	ldr	r3, [pc, #172]	@ (8002878 <HAL_SDRAM_MspInit+0xb8>)
 80027cc:	681c      	ldr	r4, [r3, #0]
 80027ce:	2c00      	cmp	r4, #0
 80027d0:	d14f      	bne.n	8002872 <HAL_SDRAM_MspInit+0xb2>
  FMC_Initialized = 1;
 80027d2:	f04f 0801 	mov.w	r8, #1
 80027d6:	f8c3 8000 	str.w	r8, [r3]
  __HAL_RCC_FMC_CLK_ENABLE();
 80027da:	4b28      	ldr	r3, [pc, #160]	@ (800287c <HAL_SDRAM_MspInit+0xbc>)
 80027dc:	9400      	str	r4, [sp, #0]
 80027de:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 80027e0:	4827      	ldr	r0, [pc, #156]	@ (8002880 <HAL_SDRAM_MspInit+0xc0>)
  __HAL_RCC_FMC_CLK_ENABLE();
 80027e2:	ea42 0208 	orr.w	r2, r2, r8
 80027e6:	639a      	str	r2, [r3, #56]	@ 0x38
 80027e8:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 80027ea:	ea03 0308 	and.w	r3, r3, r8
 80027ee:	9300      	str	r3, [sp, #0]
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80027f0:	2702      	movs	r7, #2
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 80027f2:	2603      	movs	r6, #3
 80027f4:	250c      	movs	r5, #12
  __HAL_RCC_FMC_CLK_ENABLE();
 80027f6:	9b00      	ldr	r3, [sp, #0]
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 80027f8:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80027fa:	f64f 033f 	movw	r3, #63551	@ 0xf83f
 80027fe:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8002802:	e9cd 6504 	strd	r6, r5, [sp, #16]
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8002806:	f001 facb 	bl	8003da0 <HAL_GPIO_Init>
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 800280a:	481e      	ldr	r0, [pc, #120]	@ (8002884 <HAL_SDRAM_MspInit+0xc4>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 800280c:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 800280e:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002810:	e9cd 8701 	strd	r8, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8002814:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8002818:	f001 fac2 	bl	8003da0 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_4|GPIO_PIN_5
 800281c:	f248 1333 	movw	r3, #33075	@ 0x8133
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8002820:	4819      	ldr	r0, [pc, #100]	@ (8002888 <HAL_SDRAM_MspInit+0xc8>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8002822:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8002824:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002826:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 800282a:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 800282e:	f001 fab7 	bl	8003da0 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10
 8002832:	f64f 7383 	movw	r3, #65411	@ 0xff83
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8002836:	4815      	ldr	r0, [pc, #84]	@ (800288c <HAL_SDRAM_MspInit+0xcc>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8002838:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 800283a:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800283c:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8002840:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8002844:	f001 faac 	bl	8003da0 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10|GPIO_PIN_14
 8002848:	f24c 7303 	movw	r3, #50947	@ 0xc703
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 800284c:	4810      	ldr	r0, [pc, #64]	@ (8002890 <HAL_SDRAM_MspInit+0xd0>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 800284e:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8002850:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002852:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8002856:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 800285a:	f001 faa1 	bl	8003da0 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_5|GPIO_PIN_6;
 800285e:	2360      	movs	r3, #96	@ 0x60
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8002860:	480c      	ldr	r0, [pc, #48]	@ (8002894 <HAL_SDRAM_MspInit+0xd4>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8002862:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8002864:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002866:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 800286a:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 800286e:	f001 fa97 	bl	8003da0 <HAL_GPIO_Init>
  /* USER CODE END SDRAM_MspInit 0 */
  HAL_FMC_MspInit();
  /* USER CODE BEGIN SDRAM_MspInit 1 */

  /* USER CODE END SDRAM_MspInit 1 */
}
 8002872:	b006      	add	sp, #24
 8002874:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8002878:	200030c4 	.word	0x200030c4
 800287c:	40023800 	.word	0x40023800
 8002880:	40021400 	.word	0x40021400
 8002884:	40020800 	.word	0x40020800
 8002888:	40021800 	.word	0x40021800
 800288c:	40021000 	.word	0x40021000
 8002890:	40020c00 	.word	0x40020c00
 8002894:	40020400 	.word	0x40020400

08002898 <HAL_InitTick>:
  *         reset by HAL_Init() or at any time when clock is configured, by HAL_RCC_ClockConfig().
  * @param  TickPriority: Tick interrupt priority.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
{
 8002898:	b570      	push	{r4, r5, r6, lr}
 800289a:	b088      	sub	sp, #32
  uint32_t              pFLatency;

  HAL_StatusTypeDef     status;

  /* Enable TIM6 clock */
  __HAL_RCC_TIM6_CLK_ENABLE();
 800289c:	2300      	movs	r3, #0
 800289e:	9302      	str	r3, [sp, #8]
 80028a0:	4b20      	ldr	r3, [pc, #128]	@ (8002924 <HAL_InitTick+0x8c>)
 80028a2:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 80028a4:	f042 0210 	orr.w	r2, r2, #16
 80028a8:	641a      	str	r2, [r3, #64]	@ 0x40
 80028aa:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80028ac:	f003 0310 	and.w	r3, r3, #16
 80028b0:	9302      	str	r3, [sp, #8]
{
 80028b2:	4605      	mov	r5, r0

  /* Get clock configuration */
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
 80028b4:	a901      	add	r1, sp, #4
 80028b6:	a803      	add	r0, sp, #12
  __HAL_RCC_TIM6_CLK_ENABLE();
 80028b8:	9b02      	ldr	r3, [sp, #8]
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
 80028ba:	f003 f937 	bl	8005b2c <HAL_RCC_GetClockConfig>

  /* Get APB1 prescaler */
  uwAPB1Prescaler = clkconfig.APB1CLKDivider;
  /* Compute TIM6 clock */
  if (uwAPB1Prescaler == RCC_HCLK_DIV1)
 80028be:	9b06      	ldr	r3, [sp, #24]
 80028c0:	bb4b      	cbnz	r3, 8002916 <HAL_InitTick+0x7e>
  {
    uwTimclock = HAL_RCC_GetPCLK1Freq();
 80028c2:	f003 f923 	bl	8005b0c <HAL_RCC_GetPCLK1Freq>

  /* Compute the prescaler value to have TIM6 counter clock equal to 1MHz */
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);

  /* Initialize TIM6 */
  htim6.Instance = TIM6;
 80028c6:	4e18      	ldr	r6, [pc, #96]	@ (8002928 <HAL_InitTick+0x90>)
 80028c8:	4b18      	ldr	r3, [pc, #96]	@ (800292c <HAL_InitTick+0x94>)
 80028ca:	6033      	str	r3, [r6, #0]
   * Period = [(TIM6CLK/1000) - 1]. to have a (1/1000) s time base.
   * Prescaler = (uwTimclock/1000000 - 1) to have a 1MHz counter clock.
   * ClockDivision = 0
   * Counter direction = Up
   */
  htim6.Init.Period = (1000000U / 1000U) - 1U;
 80028cc:	f240 33e7 	movw	r3, #999	@ 0x3e7
 80028d0:	60f3      	str	r3, [r6, #12]
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);
 80028d2:	4b17      	ldr	r3, [pc, #92]	@ (8002930 <HAL_InitTick+0x98>)
 80028d4:	fbb0 f3f3 	udiv	r3, r0, r3
 80028d8:	3b01      	subs	r3, #1
  htim6.Init.Prescaler = uwPrescalerValue;
 80028da:	6073      	str	r3, [r6, #4]
  htim6.Init.ClockDivision = 0;
  htim6.Init.CounterMode = TIM_COUNTERMODE_UP;
  htim6.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;

  status = HAL_TIM_Base_Init(&htim6);
 80028dc:	4630      	mov	r0, r6
  htim6.Init.ClockDivision = 0;
 80028de:	2300      	movs	r3, #0
 80028e0:	6133      	str	r3, [r6, #16]
  htim6.Init.CounterMode = TIM_COUNTERMODE_UP;
 80028e2:	60b3      	str	r3, [r6, #8]
  htim6.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 80028e4:	61b3      	str	r3, [r6, #24]
  status = HAL_TIM_Base_Init(&htim6);
 80028e6:	f003 ff5f 	bl	80067a8 <HAL_TIM_Base_Init>
  if (status == HAL_OK)
 80028ea:	4604      	mov	r4, r0
 80028ec:	b980      	cbnz	r0, 8002910 <HAL_InitTick+0x78>
  {
    /* Start the TIM time Base generation in interrupt mode */
    status = HAL_TIM_Base_Start_IT(&htim6);
 80028ee:	4630      	mov	r0, r6
 80028f0:	f003 fe30 	bl	8006554 <HAL_TIM_Base_Start_IT>
    if (status == HAL_OK)
 80028f4:	4604      	mov	r4, r0
 80028f6:	b958      	cbnz	r0, 8002910 <HAL_InitTick+0x78>
    {
    /* Enable the TIM6 global Interrupt */
        HAL_NVIC_EnableIRQ(TIM6_DAC_IRQn);
 80028f8:	2036      	movs	r0, #54	@ 0x36
 80028fa:	f001 f939 	bl	8003b70 <HAL_NVIC_EnableIRQ>
      /* Configure the SysTick IRQ priority */
      if (TickPriority < (1UL << __NVIC_PRIO_BITS))
 80028fe:	2d0f      	cmp	r5, #15
 8002900:	d80d      	bhi.n	800291e <HAL_InitTick+0x86>
      {
        /* Configure the TIM IRQ priority */
        HAL_NVIC_SetPriority(TIM6_DAC_IRQn, TickPriority, 0U);
 8002902:	4622      	mov	r2, r4
 8002904:	4629      	mov	r1, r5
 8002906:	2036      	movs	r0, #54	@ 0x36
 8002908:	f001 f900 	bl	8003b0c <HAL_NVIC_SetPriority>
        uwTickPrio = TickPriority;
 800290c:	4b09      	ldr	r3, [pc, #36]	@ (8002934 <HAL_InitTick+0x9c>)
 800290e:	601d      	str	r5, [r3, #0]
    }
  }

 /* Return function status */
  return status;
}
 8002910:	4620      	mov	r0, r4
 8002912:	b008      	add	sp, #32
 8002914:	bd70      	pop	{r4, r5, r6, pc}
    uwTimclock = 2UL * HAL_RCC_GetPCLK1Freq();
 8002916:	f003 f8f9 	bl	8005b0c <HAL_RCC_GetPCLK1Freq>
 800291a:	0040      	lsls	r0, r0, #1
 800291c:	e7d3      	b.n	80028c6 <HAL_InitTick+0x2e>
        status = HAL_ERROR;
 800291e:	2401      	movs	r4, #1
 8002920:	e7f6      	b.n	8002910 <HAL_InitTick+0x78>
 8002922:	bf00      	nop
 8002924:	40023800 	.word	0x40023800
 8002928:	200030c8 	.word	0x200030c8
 800292c:	40001000 	.word	0x40001000
 8002930:	000f4240 	.word	0x000f4240
 8002934:	200000cc 	.word	0x200000cc

08002938 <NMI_Handler>:

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */

  /* USER CODE END NonMaskableInt_IRQn 1 */
}
 8002938:	4770      	bx	lr

0800293a <HardFault_Handler>:
void HardFault_Handler(void)
{
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 800293a:	e7fe      	b.n	800293a <HardFault_Handler>

0800293c <MemManage_Handler>:
void MemManage_Handler(void)
{
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 800293c:	e7fe      	b.n	800293c <MemManage_Handler>

0800293e <BusFault_Handler>:
void BusFault_Handler(void)
{
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 800293e:	e7fe      	b.n	800293e <BusFault_Handler>

08002940 <UsageFault_Handler>:
void UsageFault_Handler(void)
{
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 8002940:	e7fe      	b.n	8002940 <UsageFault_Handler>

08002942 <DebugMon_Handler>:
}

/**
  * @brief This function handles Debug monitor.
  */
void DebugMon_Handler(void)
 8002942:	4770      	bx	lr

08002944 <TIM6_DAC_IRQHandler>:
void TIM6_DAC_IRQHandler(void)
{
  /* USER CODE BEGIN TIM6_DAC_IRQn 0 */

  /* USER CODE END TIM6_DAC_IRQn 0 */
  HAL_TIM_IRQHandler(&htim6);
 8002944:	4801      	ldr	r0, [pc, #4]	@ (800294c <TIM6_DAC_IRQHandler+0x8>)
 8002946:	f003 be43 	b.w	80065d0 <HAL_TIM_IRQHandler>
 800294a:	bf00      	nop
 800294c:	200030c8 	.word	0x200030c8

08002950 <OTG_HS_IRQHandler>:
void OTG_HS_IRQHandler(void)
{
  /* USER CODE BEGIN OTG_HS_IRQn 0 */

  /* USER CODE END OTG_HS_IRQn 0 */
  HAL_PCD_IRQHandler(&hpcd_USB_OTG_HS);
 8002950:	4801      	ldr	r0, [pc, #4]	@ (8002958 <OTG_HS_IRQHandler+0x8>)
 8002952:	f002 baf3 	b.w	8004f3c <HAL_PCD_IRQHandler>
 8002956:	bf00      	nop
 8002958:	200029e0 	.word	0x200029e0

0800295c <LTDC_IRQHandler>:
void LTDC_IRQHandler(void)
{
  /* USER CODE BEGIN LTDC_IRQn 0 */

  /* USER CODE END LTDC_IRQn 0 */
  HAL_LTDC_IRQHandler(&hltdc);
 800295c:	4801      	ldr	r0, [pc, #4]	@ (8002964 <LTDC_IRQHandler+0x8>)
 800295e:	f002 b887 	b.w	8004a70 <HAL_LTDC_IRQHandler>
 8002962:	bf00      	nop
 8002964:	20002f6c 	.word	0x20002f6c

08002968 <DMA2D_IRQHandler>:
void DMA2D_IRQHandler(void)
{
  /* USER CODE BEGIN DMA2D_IRQn 0 */

  /* USER CODE END DMA2D_IRQn 0 */
  HAL_DMA2D_IRQHandler(&hdma2d);
 8002968:	4801      	ldr	r0, [pc, #4]	@ (8002970 <DMA2D_IRQHandler+0x8>)
 800296a:	f001 b94b 	b.w	8003c04 <HAL_DMA2D_IRQHandler>
 800296e:	bf00      	nop
 8002970:	20003068 	.word	0x20003068

08002974 <_getpid>:
}

int _getpid(void)
{
	return 1;
}
 8002974:	2001      	movs	r0, #1
 8002976:	4770      	bx	lr

08002978 <_kill>:

int _kill(int pid, int sig)
{
 8002978:	b508      	push	{r3, lr}
	errno = EINVAL;
 800297a:	f020 fa43 	bl	8022e04 <__errno>
 800297e:	2316      	movs	r3, #22
 8002980:	6003      	str	r3, [r0, #0]
	return -1;
}
 8002982:	f04f 30ff 	mov.w	r0, #4294967295
 8002986:	bd08      	pop	{r3, pc}

08002988 <_exit>:

void _exit (int status)
{
 8002988:	b508      	push	{r3, lr}
	errno = EINVAL;
 800298a:	f020 fa3b 	bl	8022e04 <__errno>
 800298e:	2316      	movs	r3, #22
 8002990:	6003      	str	r3, [r0, #0]
	_kill(status, -1);
	while (1) {}		/* Make sure we hang here */
 8002992:	e7fe      	b.n	8002992 <_exit+0xa>

08002994 <_read>:
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 8002994:	b570      	push	{r4, r5, r6, lr}
 8002996:	460d      	mov	r5, r1
 8002998:	4614      	mov	r4, r2
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 800299a:	460e      	mov	r6, r1
 800299c:	1b73      	subs	r3, r6, r5
 800299e:	429c      	cmp	r4, r3
 80029a0:	dc01      	bgt.n	80029a6 <_read+0x12>
	{
		*ptr++ = __io_getchar();
	}

return len;
}
 80029a2:	4620      	mov	r0, r4
 80029a4:	bd70      	pop	{r4, r5, r6, pc}
		*ptr++ = __io_getchar();
 80029a6:	f3af 8000 	nop.w
 80029aa:	f806 0b01 	strb.w	r0, [r6], #1
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 80029ae:	e7f5      	b.n	800299c <_read+0x8>

080029b0 <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 80029b0:	b570      	push	{r4, r5, r6, lr}
 80029b2:	460d      	mov	r5, r1
 80029b4:	4614      	mov	r4, r2
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 80029b6:	460e      	mov	r6, r1
 80029b8:	1b73      	subs	r3, r6, r5
 80029ba:	429c      	cmp	r4, r3
 80029bc:	dc01      	bgt.n	80029c2 <_write+0x12>
	{
		__io_putchar(*ptr++);
	}
	return len;
}
 80029be:	4620      	mov	r0, r4
 80029c0:	bd70      	pop	{r4, r5, r6, pc}
		__io_putchar(*ptr++);
 80029c2:	f816 0b01 	ldrb.w	r0, [r6], #1
 80029c6:	f3af 8000 	nop.w
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 80029ca:	e7f5      	b.n	80029b8 <_write+0x8>

080029cc <_close>:

int _close(int file)
{
	return -1;
}
 80029cc:	f04f 30ff 	mov.w	r0, #4294967295
 80029d0:	4770      	bx	lr

080029d2 <_fstat>:


int _fstat(int file, struct stat *st)
{
	st->st_mode = S_IFCHR;
 80029d2:	f44f 5300 	mov.w	r3, #8192	@ 0x2000
 80029d6:	604b      	str	r3, [r1, #4]
	return 0;
}
 80029d8:	2000      	movs	r0, #0
 80029da:	4770      	bx	lr

080029dc <_isatty>:

int _isatty(int file)
{
	return 1;
}
 80029dc:	2001      	movs	r0, #1
 80029de:	4770      	bx	lr

080029e0 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
	return 0;
}
 80029e0:	2000      	movs	r0, #0
 80029e2:	4770      	bx	lr

080029e4 <_sbrk>:
{
	extern char end asm("end");
	static char *heap_end;
	char *prev_heap_end;

	if (heap_end == 0)
 80029e4:	4a0a      	ldr	r2, [pc, #40]	@ (8002a10 <_sbrk+0x2c>)
 80029e6:	6811      	ldr	r1, [r2, #0]
{
 80029e8:	b508      	push	{r3, lr}
 80029ea:	4603      	mov	r3, r0
	if (heap_end == 0)
 80029ec:	b909      	cbnz	r1, 80029f2 <_sbrk+0xe>
		heap_end = &end;
 80029ee:	4909      	ldr	r1, [pc, #36]	@ (8002a14 <_sbrk+0x30>)
 80029f0:	6011      	str	r1, [r2, #0]

	prev_heap_end = heap_end;
 80029f2:	6810      	ldr	r0, [r2, #0]
	if (heap_end + incr > stack_ptr)
 80029f4:	4669      	mov	r1, sp
 80029f6:	4403      	add	r3, r0
 80029f8:	428b      	cmp	r3, r1
 80029fa:	d906      	bls.n	8002a0a <_sbrk+0x26>
	{
		errno = ENOMEM;
 80029fc:	f020 fa02 	bl	8022e04 <__errno>
 8002a00:	230c      	movs	r3, #12
 8002a02:	6003      	str	r3, [r0, #0]
		return (caddr_t) -1;
 8002a04:	f04f 30ff 	mov.w	r0, #4294967295
	}

	heap_end += incr;

	return (caddr_t) prev_heap_end;
}
 8002a08:	bd08      	pop	{r3, pc}
	heap_end += incr;
 8002a0a:	6013      	str	r3, [r2, #0]
	return (caddr_t) prev_heap_end;
 8002a0c:	e7fc      	b.n	8002a08 <_sbrk+0x24>
 8002a0e:	bf00      	nop
 8002a10:	20003110 	.word	0x20003110
 8002a14:	20014c70 	.word	0x20014c70

08002a18 <_ZN23ApplicationFontProviderD1Ev>:
    static const touchgfx::FontId LARGE = 1;   // verdana_40_4bpp
    static const touchgfx::FontId SMALL = 2;   // verdana_10_4bpp
    static const uint16_t NUMBER_OF_FONTS = 3;
};

class ApplicationFontProvider : public touchgfx::FontProvider
 8002a18:	4770      	bx	lr

08002a1a <_ZN23ApplicationFontProviderD0Ev>:
 8002a1a:	b510      	push	{r4, lr}
 8002a1c:	2104      	movs	r1, #4
 8002a1e:	4604      	mov	r4, r0
 8002a20:	f01f f809 	bl	8021a36 <_ZdlPvj>
 8002a24:	4620      	mov	r0, r4
 8002a26:	bd10      	pop	{r4, pc}

08002a28 <_ZN23ApplicationFontProvider7getFontEt>:
#include <fonts/GeneratedFont.hpp>
#include <texts/TypedTextDatabase.hpp>

touchgfx::Font* ApplicationFontProvider::getFont(touchgfx::FontId typography)
{
    switch (typography)
 8002a28:	2901      	cmp	r1, #1
{
 8002a2a:	b508      	push	{r3, lr}
    switch (typography)
 8002a2c:	d006      	beq.n	8002a3c <_ZN23ApplicationFontProvider7getFontEt+0x14>
 8002a2e:	2902      	cmp	r1, #2
 8002a30:	d008      	beq.n	8002a44 <_ZN23ApplicationFontProvider7getFontEt+0x1c>
 8002a32:	b959      	cbnz	r1, 8002a4c <_ZN23ApplicationFontProvider7getFontEt+0x24>
    {
    case Typography::DEFAULT:
        // verdana_20_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[0]);
 8002a34:	f000 fc0a 	bl	800324c <_ZN17TypedTextDatabase8getFontsEv>
 8002a38:	6800      	ldr	r0, [r0, #0]
        // verdana_10_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[2]);
    default:
        return 0;
    }
}
 8002a3a:	bd08      	pop	{r3, pc}
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[1]);
 8002a3c:	f000 fc06 	bl	800324c <_ZN17TypedTextDatabase8getFontsEv>
 8002a40:	6840      	ldr	r0, [r0, #4]
 8002a42:	e7fa      	b.n	8002a3a <_ZN23ApplicationFontProvider7getFontEt+0x12>
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[2]);
 8002a44:	f000 fc02 	bl	800324c <_ZN17TypedTextDatabase8getFontsEv>
 8002a48:	6880      	ldr	r0, [r0, #8]
 8002a4a:	e7f6      	b.n	8002a3a <_ZN23ApplicationFontProvider7getFontEt+0x12>
    switch (typography)
 8002a4c:	2000      	movs	r0, #0
 8002a4e:	e7f4      	b.n	8002a3a <_ZN23ApplicationFontProvider7getFontEt+0x12>

08002a50 <_ZN14BitmapDatabase11getInstanceEv>:
namespace BitmapDatabase
{
const touchgfx::Bitmap::BitmapData* getInstance()
{
    return bitmap_database;
}
 8002a50:	4800      	ldr	r0, [pc, #0]	@ (8002a54 <_ZN14BitmapDatabase11getInstanceEv+0x4>)
 8002a52:	4770      	bx	lr
 8002a54:	08024768 	.word	0x08024768

08002a58 <_ZN14BitmapDatabase15getInstanceSizeEv>:

uint16_t getInstanceSize()
{
    return (uint16_t)(sizeof(bitmap_database) / sizeof(touchgfx::Bitmap::BitmapData));
}
 8002a58:	2001      	movs	r0, #1
 8002a5a:	4770      	bx	lr

08002a5c <_ZNK8touchgfx4Font8getGlyphEt>:
     *
     * @return A pointer to the glyph node or null if the glyph was not found.
     *
     * @see TextProvider::getNextLigature
     */
    virtual const GlyphNode* getGlyph(Unicode::UnicodeChar unicode) const
 8002a5c:	b513      	push	{r0, r1, r4, lr}
 8002a5e:	2400      	movs	r4, #0
    {
        if (unicode == 0)
 8002a60:	b151      	cbz	r1, 8002a78 <_ZNK8touchgfx4Font8getGlyphEt+0x1c>
        {
            return 0;
        }
        const uint8_t* dummyPixelDataPointer = 0;
        uint8_t bitsPerPixelDummy = 0;
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
 8002a62:	6803      	ldr	r3, [r0, #0]
        const uint8_t* dummyPixelDataPointer = 0;
 8002a64:	9401      	str	r4, [sp, #4]
        uint8_t bitsPerPixelDummy = 0;
 8002a66:	f88d 4003 	strb.w	r4, [sp, #3]
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
 8002a6a:	aa01      	add	r2, sp, #4
 8002a6c:	689c      	ldr	r4, [r3, #8]
 8002a6e:	f10d 0303 	add.w	r3, sp, #3
 8002a72:	47a0      	blx	r4
        return glyph;
    }
 8002a74:	b002      	add	sp, #8
 8002a76:	bd10      	pop	{r4, pc}
            return 0;
 8002a78:	4608      	mov	r0, r1
 8002a7a:	e7fb      	b.n	8002a74 <_ZNK8touchgfx4Font8getGlyphEt+0x18>

08002a7c <_ZNK8touchgfx4Font15getFallbackCharEv>:
     * @return The default character for the typography in case no glyph is available.
     */
    virtual Unicode::UnicodeChar getFallbackChar() const
    {
        return fallbackCharacter;
    }
 8002a7c:	89c0      	ldrh	r0, [r0, #14]
 8002a7e:	4770      	bx	lr

08002a80 <_ZNK8touchgfx4Font15getEllipsisCharEv>:
     * @see TextArea::setWideTextAction
     */
    virtual Unicode::UnicodeChar getEllipsisChar() const
    {
        return ellipsisCharacter;
    }
 8002a80:	8a00      	ldrh	r0, [r0, #16]
 8002a82:	4770      	bx	lr

08002a84 <_ZNK8touchgfx4Font11getBaselineEv>:
     *       getHeight for this.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getBaseline() const
    {
        return baselineHeight;
    }
 8002a84:	88c0      	ldrh	r0, [r0, #6]
 8002a86:	4770      	bx	lr

08002a88 <_ZNK8touchgfx4Font9getHeightEv>:
     * @return The font height.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getHeight() const
    {
        return fontHeight;
    }
 8002a88:	8880      	ldrh	r0, [r0, #4]
 8002a8a:	4770      	bx	lr

08002a8c <_ZNK8touchgfx4Font15getBitsPerPixelEv>:
     *
     * @return The number of bits used per pixel in this font.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getBitsPerPixel() const
    {
        return bPerPixel;
 8002a8c:	7a80      	ldrb	r0, [r0, #10]
    }
 8002a8e:	f000 007f 	and.w	r0, r0, #127	@ 0x7f
 8002a92:	4770      	bx	lr

08002a94 <_ZNK8touchgfx4Font15getByteAlignRowEv>:
     *
     * @return True if each glyph row is stored byte aligned, false otherwise.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getByteAlignRow() const
    {
        return bAlignRow;
 8002a94:	7a80      	ldrb	r0, [r0, #10]
    }
 8002a96:	09c0      	lsrs	r0, r0, #7
 8002a98:	4770      	bx	lr

08002a9a <_ZNK8touchgfx4Font17isVectorBasedFontEv>:
     * @return True if this Font is vector based.
     */
    virtual bool isVectorBasedFont() const
    {
        return false;
    }
 8002a9a:	2000      	movs	r0, #0
 8002a9c:	4770      	bx	lr
	...

08002aa0 <_ZNK8touchgfx4Font14getScaleFactorEv>:
     * @return The scale factor
     */
    virtual float getScaleFactor() const
    {
        return 0;
    }
 8002aa0:	ed9f 0a01 	vldr	s0, [pc, #4]	@ 8002aa8 <_ZNK8touchgfx4Font14getScaleFactorEv+0x8>
 8002aa4:	4770      	bx	lr
 8002aa6:	bf00      	nop
 8002aa8:	00000000 	.word	0x00000000

08002aac <_ZN8touchgfx11Application19changeToStartScreenEv>:
     *       this is explicitly done in your
     *       FrontendApplication::changeToStartScreen().
     */
    virtual void changeToStartScreen()
    {
    }
 8002aac:	4770      	bx	lr

08002aae <_ZN8touchgfx11Application15appSwitchScreenEh>:
     * @param screenId An id that maps to the desired screen.
     */
    virtual void appSwitchScreen(uint8_t screenId)
    {
        (void)screenId; // Unused variable
    }
 8002aae:	4770      	bx	lr

08002ab0 <_ZN8touchgfx11Application13requestRedrawERNS_4RectE>:
     *
     * @param [in,out] rect The Rect that must be redrawn.
     */
    virtual void requestRedraw(Rect& rect)
    {
        redraw = rect;
 8002ab0:	f500 7398 	add.w	r3, r0, #304	@ 0x130
 8002ab4:	6808      	ldr	r0, [r1, #0]
 8002ab6:	6849      	ldr	r1, [r1, #4]
 8002ab8:	c303      	stmia	r3!, {r0, r1}
    }
 8002aba:	4770      	bx	lr

08002abc <_ZN8touchgfx10Transition8tearDownEv>:
     * Tears down the Animation. Called before the destructor is called, when the
     * application changes the transition.
     */
    virtual void tearDown()
    {
    }
 8002abc:	4770      	bx	lr

08002abe <_ZN8touchgfx10Transition4initEv>:
     * Initializes the transition. Called after the constructor is called, when the
     * application changes the transition.
     */
    virtual void init()
    {
    }
 8002abe:	4770      	bx	lr

08002ac0 <_ZN8touchgfx10Transition18setScreenContainerERNS_9ContainerE>:
     *
     * @param [in] cont The Container the transition should have access to.
     */
    virtual void setScreenContainer(Container& cont)
    {
        screenContainer = &cont;
 8002ac0:	6041      	str	r1, [r0, #4]
    }
 8002ac2:	4770      	bx	lr

08002ac4 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev>:
 *
 * @note The member function to call must return void. The function can have zero, one, two or
 *       three arguments of any type.
 */
template <class dest_type>
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 8002ac4:	4770      	bx	lr

08002ac6 <_ZN23FrontendApplicationBaseD1Ev>:

class FrontendApplicationBase : public touchgfx::MVPApplication
{
public:
    FrontendApplicationBase(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplicationBase() { }
 8002ac6:	4770      	bx	lr

08002ac8 <_ZN23FrontendApplicationBase19changeToStartScreenEv>:
 8002ac8:	4b06      	ldr	r3, [pc, #24]	@ (8002ae4 <_ZN23FrontendApplicationBase19changeToStartScreenEv+0x1c>)
 8002aca:	f8c0 314c 	str.w	r3, [r0, #332]	@ 0x14c
 8002ace:	2300      	movs	r3, #0
 8002ad0:	f8c0 3150 	str.w	r3, [r0, #336]	@ 0x150
// Screen1

void FrontendApplicationBase::gotoScreen1ScreenNoTransition()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoScreen1ScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
 8002ad4:	f500 73a2 	add.w	r3, r0, #324	@ 0x144
 8002ad8:	f8c0 0148 	str.w	r0, [r0, #328]	@ 0x148
 8002adc:	f8c0 3140 	str.w	r3, [r0, #320]	@ 0x140

    virtual void changeToStartScreen()
    {
        gotoScreen1ScreenNoTransition();
    }
 8002ae0:	4770      	bx	lr
 8002ae2:	bf00      	nop
 8002ae4:	08002b89 	.word	0x08002b89

08002ae8 <_ZN8touchgfx12NoTransition15handleTickEventEv>:
{
public:
    /** Indicates that the transition is done after the first tick. */
    virtual void handleTickEvent()
    {
        done = true;
 8002ae8:	2301      	movs	r3, #1
 8002aea:	7203      	strb	r3, [r0, #8]
    }
 8002aec:	4770      	bx	lr

08002aee <_ZN8touchgfx12NoTransitionD1Ev>:
class NoTransition : public Transition
 8002aee:	4770      	bx	lr

08002af0 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvE7executeEv>:

    /**
     * Calls the member function. Do not call execute unless isValid() returns true (ie. a
     * pointer to the object and the function has been set).
     */
    virtual void execute()
 8002af0:	b410      	push	{r4}
    {
        (pobject->*pmemfun)();
 8002af2:	68c2      	ldr	r2, [r0, #12]
 8002af4:	6841      	ldr	r1, [r0, #4]
 8002af6:	1054      	asrs	r4, r2, #1
    virtual void execute()
 8002af8:	4603      	mov	r3, r0
        (pobject->*pmemfun)();
 8002afa:	eb01 0062 	add.w	r0, r1, r2, asr #1
 8002afe:	07d2      	lsls	r2, r2, #31
 8002b00:	bf48      	it	mi
 8002b02:	590a      	ldrmi	r2, [r1, r4]
 8002b04:	689b      	ldr	r3, [r3, #8]
    }
 8002b06:	f85d 4b04 	ldr.w	r4, [sp], #4
        (pobject->*pmemfun)();
 8002b0a:	bf48      	it	mi
 8002b0c:	58d3      	ldrmi	r3, [r2, r3]
 8002b0e:	4718      	bx	r3

08002b10 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv>:
    /**
     * Function to check whether the Callback has been initialized with values.
     *
     * @return true If the callback is valid (i.e. safe to call execute).
     */
    virtual bool isValid() const
 8002b10:	4603      	mov	r3, r0
    {
        return (pobject != 0) && (pmemfun != 0);
 8002b12:	6840      	ldr	r0, [r0, #4]
 8002b14:	b130      	cbz	r0, 8002b24 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x14>
 8002b16:	689a      	ldr	r2, [r3, #8]
 8002b18:	b91a      	cbnz	r2, 8002b22 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x12>
 8002b1a:	68d8      	ldr	r0, [r3, #12]
 8002b1c:	f000 0001 	and.w	r0, r0, #1
 8002b20:	4770      	bx	lr
 8002b22:	2001      	movs	r0, #1
    }
 8002b24:	4770      	bx	lr

08002b26 <_ZN8touchgfx12NoTransitionD0Ev>:
 8002b26:	b510      	push	{r4, lr}
 8002b28:	210c      	movs	r1, #12
 8002b2a:	4604      	mov	r4, r0
 8002b2c:	f01e ff83 	bl	8021a36 <_ZdlPvj>
 8002b30:	4620      	mov	r0, r4
 8002b32:	bd10      	pop	{r4, pc}

08002b34 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED0Ev>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 8002b34:	b510      	push	{r4, lr}
 8002b36:	2110      	movs	r1, #16
 8002b38:	4604      	mov	r4, r0
 8002b3a:	f01e ff7c 	bl	8021a36 <_ZdlPvj>
 8002b3e:	4620      	mov	r0, r4
 8002b40:	bd10      	pop	{r4, pc}

08002b42 <_ZN23FrontendApplicationBaseD0Ev>:
    virtual ~FrontendApplicationBase() { }
 8002b42:	b510      	push	{r4, lr}
 8002b44:	f44f 71ae 	mov.w	r1, #348	@ 0x15c
 8002b48:	4604      	mov	r4, r0
 8002b4a:	f01e ff74 	bl	8021a36 <_ZdlPvj>
 8002b4e:	4620      	mov	r0, r4
 8002b50:	bd10      	pop	{r4, pc}

08002b52 <_ZN8touchgfx10Transition10invalidateEv>:
    virtual void invalidate()
 8002b52:	b510      	push	{r4, lr}
        Application::getInstance()->invalidate();
 8002b54:	f00c fcda 	bl	800f50c <_ZN8touchgfx11Application11getInstanceEv>
 8002b58:	6803      	ldr	r3, [r0, #0]
    }
 8002b5a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        Application::getInstance()->invalidate();
 8002b5e:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8002b60:	4718      	bx	r3

08002b62 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv>:
    /**
     * Handles the pending screen transition.
     *
     * Delegates the work to evaluatePendingScreenTransition()
     */
    virtual void handlePendingScreenTransition()
 8002b62:	b510      	push	{r4, lr}
 8002b64:	4604      	mov	r4, r0
     * Evaluates the pending Callback instances. If a callback is valid, it is executed and
     * a Screen transition is executed.
     */
    void evaluatePendingScreenTransition()
    {
        if (pendingScreenTransitionCallback && pendingScreenTransitionCallback->isValid())
 8002b66:	f8d0 0140 	ldr.w	r0, [r0, #320]	@ 0x140
 8002b6a:	b158      	cbz	r0, 8002b84 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x22>
 8002b6c:	6803      	ldr	r3, [r0, #0]
 8002b6e:	68db      	ldr	r3, [r3, #12]
 8002b70:	4798      	blx	r3
 8002b72:	b138      	cbz	r0, 8002b84 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x22>
        {
            pendingScreenTransitionCallback->execute();
 8002b74:	f8d4 0140 	ldr.w	r0, [r4, #320]	@ 0x140
 8002b78:	6803      	ldr	r3, [r0, #0]
 8002b7a:	689b      	ldr	r3, [r3, #8]
 8002b7c:	4798      	blx	r3
            pendingScreenTransitionCallback = 0;
 8002b7e:	2300      	movs	r3, #0
 8002b80:	f8c4 3140 	str.w	r3, [r4, #320]	@ 0x140
    }
 8002b84:	bd10      	pop	{r4, pc}
	...

08002b88 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv>:
}

void FrontendApplicationBase::gotoScreen1ScreenNoTransitionImpl()
{
 8002b88:	e92d 4ff1 	stmdb	sp!, {r0, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    touchgfx::makeTransition<Screen1View, Screen1Presenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8002b8c:	e9d0 6a55 	ldrd	r6, sl, [r0, #340]	@ 0x154
{
 8002b90:	4607      	mov	r7, r0
 *         value as the old presenter due to memory reuse.
 */
template <class ScreenType, class PresenterType, class TransType, class ModelType>
PresenterType* makeTransition(Screen** currentScreen, Presenter** currentPresenter, MVPHeap& heap, Transition** currentTrans, ModelType* model)
{
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8002b92:	68b0      	ldr	r0, [r6, #8]
 8002b94:	6803      	ldr	r3, [r0, #0]
 8002b96:	6a1b      	ldr	r3, [r3, #32]
 8002b98:	4798      	blx	r3
 8002b9a:	f640 63e7 	movw	r3, #3815	@ 0xee7
 8002b9e:	4298      	cmp	r0, r3
 8002ba0:	d805      	bhi.n	8002bae <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x26>
 8002ba2:	4b44      	ldr	r3, [pc, #272]	@ (8002cb4 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x12c>)
 8002ba4:	4a44      	ldr	r2, [pc, #272]	@ (8002cb8 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x130>)
 8002ba6:	21a3      	movs	r1, #163	@ 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8002ba8:	4844      	ldr	r0, [pc, #272]	@ (8002cbc <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x134>)
 8002baa:	f01f fe81 	bl	80228b0 <__assert_func>
 8002bae:	6870      	ldr	r0, [r6, #4]
 8002bb0:	6803      	ldr	r3, [r0, #0]
 8002bb2:	6a1b      	ldr	r3, [r3, #32]
 8002bb4:	4798      	blx	r3
 8002bb6:	280f      	cmp	r0, #15
 8002bb8:	d803      	bhi.n	8002bc2 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x3a>
 8002bba:	4b41      	ldr	r3, [pc, #260]	@ (8002cc0 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x138>)
 8002bbc:	4a3e      	ldr	r2, [pc, #248]	@ (8002cb8 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x130>)
 8002bbe:	21a4      	movs	r1, #164	@ 0xa4
 8002bc0:	e7f2      	b.n	8002ba8 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8002bc2:	68f0      	ldr	r0, [r6, #12]
 8002bc4:	6803      	ldr	r3, [r0, #0]
 8002bc6:	6a1b      	ldr	r3, [r3, #32]
 8002bc8:	4798      	blx	r3
 8002bca:	280b      	cmp	r0, #11
 8002bcc:	d803      	bhi.n	8002bd6 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x4e>
 8002bce:	4b3d      	ldr	r3, [pc, #244]	@ (8002cc4 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x13c>)
 8002bd0:	4a39      	ldr	r2, [pc, #228]	@ (8002cb8 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x130>)
 8002bd2:	21a5      	movs	r1, #165	@ 0xa5
 8002bd4:	e7e8      	b.n	8002ba8 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 8002bd6:	f00c fc99 	bl	800f50c <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8002bda:	f8df 90f0 	ldr.w	r9, [pc, #240]	@ 8002ccc <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x144>

    /** Clears all currently registered timer widgets. */

    void clearAllTimerWidgets()
    {
        timerWidgets.clear();
 8002bde:	3004      	adds	r0, #4
 8002be0:	f00c fcb9 	bl	800f556 <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8002be4:	f8d9 0000 	ldr.w	r0, [r9]
 8002be8:	b110      	cbz	r0, 8002bf0 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x68>
        (*currentTrans)->tearDown();
 8002bea:	6803      	ldr	r3, [r0, #0]
 8002bec:	68db      	ldr	r3, [r3, #12]
 8002bee:	4798      	blx	r3
    if (*currentTrans)
 8002bf0:	f8d9 0000 	ldr.w	r0, [r9]
 8002bf4:	b110      	cbz	r0, 8002bfc <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x74>
        (*currentTrans)->~Transition();
 8002bf6:	6803      	ldr	r3, [r0, #0]
 8002bf8:	681b      	ldr	r3, [r3, #0]
 8002bfa:	4798      	blx	r3
    if (*currentScreen)
 8002bfc:	f8df 80d0 	ldr.w	r8, [pc, #208]	@ 8002cd0 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x148>
 8002c00:	f8d8 0000 	ldr.w	r0, [r8]
 8002c04:	b110      	cbz	r0, 8002c0c <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 8002c06:	6803      	ldr	r3, [r0, #0]
 8002c08:	695b      	ldr	r3, [r3, #20]
 8002c0a:	4798      	blx	r3
    if (*currentPresenter)
 8002c0c:	f8d7 013c 	ldr.w	r0, [r7, #316]	@ 0x13c
 8002c10:	b110      	cbz	r0, 8002c18 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x90>
        (*currentPresenter)->deactivate();
 8002c12:	6803      	ldr	r3, [r0, #0]
 8002c14:	685b      	ldr	r3, [r3, #4]
 8002c16:	4798      	blx	r3
    if (*currentScreen)
 8002c18:	f8d8 0000 	ldr.w	r0, [r8]
 8002c1c:	b110      	cbz	r0, 8002c24 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x9c>
        (*currentScreen)->~Screen();
 8002c1e:	6803      	ldr	r3, [r0, #0]
 8002c20:	681b      	ldr	r3, [r3, #0]
 8002c22:	4798      	blx	r3
    if (*currentPresenter)
 8002c24:	f8d7 013c 	ldr.w	r0, [r7, #316]	@ 0x13c
 8002c28:	b110      	cbz	r0, 8002c30 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 8002c2a:	6803      	ldr	r3, [r0, #0]
 8002c2c:	689b      	ldr	r3, [r3, #8]
 8002c2e:	4798      	blx	r3

    prepareTransition(currentScreen, currentPresenter, currentTrans);

    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8002c30:	68f0      	ldr	r0, [r6, #12]
     * @return A typed reference to the object at the specified index.
     */
    template <typename T>
    T& at(const uint16_t index)
    {
        return *static_cast<T*>(element(index));
 8002c32:	6803      	ldr	r3, [r0, #0]
 8002c34:	2100      	movs	r1, #0
 8002c36:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8002c38:	4798      	blx	r3
        : screenContainer(0), done(false)
 8002c3a:	f04f 0b00 	mov.w	fp, #0
 8002c3e:	4b22      	ldr	r3, [pc, #136]	@ (8002cc8 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x140>)
 8002c40:	f8c0 b004 	str.w	fp, [r0, #4]
 8002c44:	4604      	mov	r4, r0
 8002c46:	f880 b008 	strb.w	fp, [r0, #8]
 8002c4a:	6003      	str	r3, [r0, #0]
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8002c4c:	68b0      	ldr	r0, [r6, #8]
 8002c4e:	6803      	ldr	r3, [r0, #0]
 8002c50:	4659      	mov	r1, fp
 8002c52:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8002c54:	4798      	blx	r3
 8002c56:	4605      	mov	r5, r0
 8002c58:	f000 fb64 	bl	8003324 <_ZN11Screen1ViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8002c5c:	6870      	ldr	r0, [r6, #4]
 8002c5e:	6803      	ldr	r3, [r0, #0]
 8002c60:	4659      	mov	r1, fp
 8002c62:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8002c64:	4798      	blx	r3
 8002c66:	4629      	mov	r1, r5
 8002c68:	4606      	mov	r6, r0
 8002c6a:	f000 fb39 	bl	80032e0 <_ZN16Screen1PresenterC1ER11Screen1View>
    *currentTrans = newTransition;
    *currentPresenter = newPresenter;
    *currentScreen = newScreen;
    model->bind(newPresenter);
 8002c6e:	1d33      	adds	r3, r6, #4
    *currentPresenter = newPresenter;
 8002c70:	f8c7 613c 	str.w	r6, [r7, #316]	@ 0x13c
    *currentTrans = newTransition;
 8002c74:	f8c9 4000 	str.w	r4, [r9]
    *currentScreen = newScreen;
 8002c78:	f8c8 5000 	str.w	r5, [r8]
public:
    Model();

    void bind(ModelListener* listener)
    {
        modelListener = listener;
 8002c7c:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8002c80:	682b      	ldr	r3, [r5, #0]
    
    virtual ~ModelListener() {}

    void bind(Model* m)
    {
        model = m;
 8002c82:	f8c6 a008 	str.w	sl, [r6, #8]
 8002c86:	4628      	mov	r0, r5
 8002c88:	68db      	ldr	r3, [r3, #12]
     *
     * @param [in] newPresenter The specific Presenter to be associated with the View.
     */
    void bind(T& newPresenter)
    {
        presenter = &newPresenter;
 8002c8a:	63ee      	str	r6, [r5, #60]	@ 0x3c
 8002c8c:	4798      	blx	r3
    newPresenter->activate();
 8002c8e:	6833      	ldr	r3, [r6, #0]
 8002c90:	4630      	mov	r0, r6
 8002c92:	681b      	ldr	r3, [r3, #0]
 8002c94:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8002c96:	4621      	mov	r1, r4
 8002c98:	4628      	mov	r0, r5
 8002c9a:	f00e fe73 	bl	8011984 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8002c9e:	6823      	ldr	r3, [r4, #0]
 8002ca0:	4620      	mov	r0, r4
 8002ca2:	691b      	ldr	r3, [r3, #16]
 8002ca4:	4798      	blx	r3
    newTransition->invalidate();
 8002ca6:	6823      	ldr	r3, [r4, #0]
 8002ca8:	695b      	ldr	r3, [r3, #20]
 8002caa:	4620      	mov	r0, r4
}
 8002cac:	b001      	add	sp, #4
 8002cae:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8002cb2:	4718      	bx	r3
 8002cb4:	08023ecc 	.word	0x08023ecc
 8002cb8:	08023f5a 	.word	0x08023f5a
 8002cbc:	0802402c 	.word	0x0802402c
 8002cc0:	08024073 	.word	0x08024073
 8002cc4:	08024116 	.word	0x08024116
 8002cc8:	080247f0 	.word	0x080247f0
 8002ccc:	20013f74 	.word	0x20013f74
 8002cd0:	20013f70 	.word	0x20013f70

08002cd4 <_ZN8touchgfx3HAL3lcdEv>:
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
 8002cd4:	4b04      	ldr	r3, [pc, #16]	@ (8002ce8 <_ZN8touchgfx3HAL3lcdEv+0x14>)
 8002cd6:	681b      	ldr	r3, [r3, #0]
 8002cd8:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
 8002cdc:	b10a      	cbz	r2, 8002ce2 <_ZN8touchgfx3HAL3lcdEv+0xe>
 8002cde:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
 8002ce0:	b900      	cbnz	r0, 8002ce4 <_ZN8touchgfx3HAL3lcdEv+0x10>
        return instance->lcdRef;
 8002ce2:	6898      	ldr	r0, [r3, #8]
    }
 8002ce4:	4770      	bx	lr
 8002ce6:	bf00      	nop
 8002ce8:	20013f2c 	.word	0x20013f2c

08002cec <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>:
FrontendApplicationBase::FrontendApplicationBase(Model& m, FrontendHeap& heap)
 8002cec:	b570      	push	{r4, r5, r6, lr}
 8002cee:	4604      	mov	r4, r0
 8002cf0:	460d      	mov	r5, r1
 8002cf2:	4616      	mov	r6, r2
          pendingScreenTransitionCallback(0)
 8002cf4:	f00c fccc 	bl	800f690 <_ZN8touchgfx11ApplicationC1Ev>
        instance = this;
 8002cf8:	4a10      	ldr	r2, [pc, #64]	@ (8002d3c <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x50>)
 8002cfa:	6014      	str	r4, [r2, #0]
      model(m)
 8002cfc:	4a10      	ldr	r2, [pc, #64]	@ (8002d40 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x54>)
 8002cfe:	6022      	str	r2, [r4, #0]
        : pobject(0), pmemfun(0)
 8002d00:	4a10      	ldr	r2, [pc, #64]	@ (8002d44 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x58>)
        : currentPresenter(0),
 8002d02:	2300      	movs	r3, #0
 8002d04:	e9c4 2351 	strd	r2, r3, [r4, #324]	@ 0x144
 8002d08:	e9c4 3353 	strd	r3, r3, [r4, #332]	@ 0x14c
          pendingScreenTransitionCallback(0)
 8002d0c:	e9c4 334f 	strd	r3, r3, [r4, #316]	@ 0x13c
        return instance;
 8002d10:	4b0d      	ldr	r3, [pc, #52]	@ (8002d48 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x5c>)
 8002d12:	6818      	ldr	r0, [r3, #0]
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_PORTRAIT);
 8002d14:	6803      	ldr	r3, [r0, #0]
 8002d16:	2101      	movs	r1, #1
 8002d18:	689b      	ldr	r3, [r3, #8]
      model(m)
 8002d1a:	e9c4 6555 	strd	r6, r5, [r4, #340]	@ 0x154
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_PORTRAIT);
 8002d1e:	4798      	blx	r3
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableTextureMapperAll();
 8002d20:	f7ff ffd8 	bl	8002cd4 <_ZN8touchgfx3HAL3lcdEv>
 8002d24:	f016 fda3 	bl	801986e <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableDecompressorL8_All();
 8002d28:	f7ff ffd4 	bl	8002cd4 <_ZN8touchgfx3HAL3lcdEv>
 8002d2c:	f016 fe1a 	bl	8019964 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_AllEv>
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableDecompressorRGB();
 8002d30:	f7ff ffd0 	bl	8002cd4 <_ZN8touchgfx3HAL3lcdEv>
 8002d34:	f016 fe22 	bl	801997c <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv>
}
 8002d38:	4620      	mov	r0, r4
 8002d3a:	bd70      	pop	{r4, r5, r6, pc}
 8002d3c:	20013f80 	.word	0x20013f80
 8002d40:	0802479c 	.word	0x0802479c
 8002d44:	08024784 	.word	0x08024784
 8002d48:	20013f2c 	.word	0x20013f2c

08002d4c <_ZN23FrontendApplicationBase29gotoScreen1ScreenNoTransitionEv>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 8002d4c:	4b06      	ldr	r3, [pc, #24]	@ (8002d68 <_ZN23FrontendApplicationBase29gotoScreen1ScreenNoTransitionEv+0x1c>)
 8002d4e:	f8c0 314c 	str.w	r3, [r0, #332]	@ 0x14c
 8002d52:	2300      	movs	r3, #0
 8002d54:	f8c0 3150 	str.w	r3, [r0, #336]	@ 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8002d58:	f500 73a2 	add.w	r3, r0, #324	@ 0x144
 8002d5c:	f8c0 0148 	str.w	r0, [r0, #328]	@ 0x148
 8002d60:	f8c0 3140 	str.w	r3, [r0, #320]	@ 0x140
}
 8002d64:	4770      	bx	lr
 8002d66:	bf00      	nop
 8002d68:	08002b89 	.word	0x08002b89

08002d6c <_ZNK8touchgfx13GeneratedFont12getGSUBTableEv>:
    virtual int8_t getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const;

    virtual const uint16_t* getGSUBTable() const
    {
        return gsubTable;
    }
 8002d6c:	6a40      	ldr	r0, [r0, #36]	@ 0x24
 8002d6e:	4770      	bx	lr

08002d70 <_ZNK8touchgfx13GeneratedFont23getContextualFormsTableEv>:

    virtual const FontContextualFormsTable* getContextualFormsTable() const
    {
        return arabicTable;
    }
 8002d70:	6a80      	ldr	r0, [r0, #40]	@ 0x28
 8002d72:	4770      	bx	lr

08002d74 <_ZN8touchgfx13GeneratedFontD1Ev>:
class GeneratedFont : public ConstFont
 8002d74:	4770      	bx	lr

08002d76 <_ZNK8touchgfx13GeneratedFont12getPixelDataEPKNS_9GlyphNodeE>:
    volatile const uint16_t* dataOffset = (const uint16_t*)((const uint8_t*)glyph + offsetof(GlyphNode, dataOffset));
    uint32_t offset = dataOffset[0];
    offset |= dataOffset[1] << 16;

    const uint8_t* const* table = (const uint8_t* const*)glyphData;
    const uint8_t* pixels = table[glyph->unicode / 2048];
 8002d76:	888a      	ldrh	r2, [r1, #4]
    uint32_t offset = dataOffset[0];
 8002d78:	880b      	ldrh	r3, [r1, #0]
{
 8002d7a:	b510      	push	{r4, lr}
    const uint8_t* pixels = table[glyph->unicode / 2048];
 8002d7c:	0ad2      	lsrs	r2, r2, #11
    offset |= dataOffset[1] << 16;
 8002d7e:	884c      	ldrh	r4, [r1, #2]
    const uint8_t* pixels = table[glyph->unicode / 2048];
 8002d80:	69c1      	ldr	r1, [r0, #28]
    uint32_t offset = dataOffset[0];
 8002d82:	b29b      	uxth	r3, r3
    return pixels + offset;
 8002d84:	f851 0022 	ldr.w	r0, [r1, r2, lsl #2]
    offset |= dataOffset[1] << 16;
 8002d88:	ea43 4304 	orr.w	r3, r3, r4, lsl #16
}
 8002d8c:	4418      	add	r0, r3
 8002d8e:	bd10      	pop	{r4, pc}

08002d90 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE>:

int8_t GeneratedFont::getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const
{
 8002d90:	b510      	push	{r4, lr}
 8002d92:	4604      	mov	r4, r0
    if (!glyph || glyph->kerningTableSize == 0)
 8002d94:	b1ba      	cbz	r2, 8002dc6 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
 8002d96:	7b10      	ldrb	r0, [r2, #12]
 8002d98:	b168      	cbz	r0, 8002db6 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x26>
        return ((flags & GLYPH_DATA_KERNINGTABLEPOS_BIT8_10) << 8) | _kerningTablePos;
 8002d9a:	7b53      	ldrb	r3, [r2, #13]
 8002d9c:	7ad2      	ldrb	r2, [r2, #11]
 8002d9e:	021b      	lsls	r3, r3, #8
 8002da0:	f403 63e0 	and.w	r3, r3, #1792	@ 0x700
    {
        return 0;
    }

    const KerningNode* kerndata = kerningData + glyph->kerningTablePos();
 8002da4:	431a      	orrs	r2, r3
 8002da6:	6a23      	ldr	r3, [r4, #32]
 8002da8:	eb03 0382 	add.w	r3, r3, r2, lsl #2
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
    {
        if (prevChar == kerndata->unicodePrevChar)
 8002dac:	881a      	ldrh	r2, [r3, #0]
 8002dae:	428a      	cmp	r2, r1
 8002db0:	d102      	bne.n	8002db8 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x28>
        {
            return kerndata->distance;
 8002db2:	f993 0002 	ldrsb.w	r0, [r3, #2]
        {
            break;
        }
    }
    return 0;
}
 8002db6:	bd10      	pop	{r4, pc}
        if (prevChar < kerndata->unicodePrevChar)
 8002db8:	d805      	bhi.n	8002dc6 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
 8002dba:	3801      	subs	r0, #1
 8002dbc:	b280      	uxth	r0, r0
 8002dbe:	3304      	adds	r3, #4
 8002dc0:	2800      	cmp	r0, #0
 8002dc2:	d1f3      	bne.n	8002dac <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x1c>
 8002dc4:	e7f7      	b.n	8002db6 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x26>
        return 0;
 8002dc6:	2000      	movs	r0, #0
 8002dc8:	e7f5      	b.n	8002db6 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x26>

08002dca <_ZN8touchgfx13GeneratedFontD0Ev>:
 8002dca:	b510      	push	{r4, lr}
 8002dcc:	212c      	movs	r1, #44	@ 0x2c
 8002dce:	4604      	mov	r4, r0
 8002dd0:	f01e fe31 	bl	8021a36 <_ZdlPvj>
 8002dd4:	4620      	mov	r0, r4
 8002dd6:	bd10      	pop	{r4, pc}

08002dd8 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>:
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
 8002dd8:	b530      	push	{r4, r5, lr}
 8002dda:	b08b      	sub	sp, #44	@ 0x2c
 8002ddc:	4604      	mov	r4, r0
      arabicTable(formsTable)
 8002dde:	f8bd 5060 	ldrh.w	r5, [sp, #96]	@ 0x60
 8002de2:	9508      	str	r5, [sp, #32]
 8002de4:	f8bd 505c 	ldrh.w	r5, [sp, #92]	@ 0x5c
 8002de8:	9507      	str	r5, [sp, #28]
 8002dea:	f89d 5050 	ldrb.w	r5, [sp, #80]	@ 0x50
 8002dee:	9506      	str	r5, [sp, #24]
 8002df0:	f89d 504c 	ldrb.w	r5, [sp, #76]	@ 0x4c
 8002df4:	9505      	str	r5, [sp, #20]
 8002df6:	f89d 5048 	ldrb.w	r5, [sp, #72]	@ 0x48
 8002dfa:	9504      	str	r5, [sp, #16]
 8002dfc:	f89d 5044 	ldrb.w	r5, [sp, #68]	@ 0x44
 8002e00:	9503      	str	r5, [sp, #12]
 8002e02:	f89d 5040 	ldrb.w	r5, [sp, #64]	@ 0x40
 8002e06:	9502      	str	r5, [sp, #8]
 8002e08:	f89d 503c 	ldrb.w	r5, [sp, #60]	@ 0x3c
 8002e0c:	9501      	str	r5, [sp, #4]
 8002e0e:	f8bd 5038 	ldrh.w	r5, [sp, #56]	@ 0x38
 8002e12:	9500      	str	r5, [sp, #0]
 8002e14:	f00e f984 	bl	8011120 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt>
 8002e18:	4b06      	ldr	r3, [pc, #24]	@ (8002e34 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE+0x5c>)
 8002e1a:	6023      	str	r3, [r4, #0]
      glyphData(glyphDataInternalFlash),
 8002e1c:	9b15      	ldr	r3, [sp, #84]	@ 0x54
 8002e1e:	61e3      	str	r3, [r4, #28]
      kerningData(kerningList),
 8002e20:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 8002e22:	6223      	str	r3, [r4, #32]
      gsubTable(gsubData),
 8002e24:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 8002e26:	6263      	str	r3, [r4, #36]	@ 0x24
      arabicTable(formsTable)
 8002e28:	9b1a      	ldr	r3, [sp, #104]	@ 0x68
 8002e2a:	62a3      	str	r3, [r4, #40]	@ 0x28
}
 8002e2c:	4620      	mov	r0, r4
 8002e2e:	b00b      	add	sp, #44	@ 0x2c
 8002e30:	bd30      	pop	{r4, r5, pc}
 8002e32:	bf00      	nop
 8002e34:	08024814 	.word	0x08024814

08002e38 <_ZN8touchgfx6Screen11setupScreenEv>:
     *
     * @see Application::switchScreen
     */
    virtual void setupScreen()
    {
    }
 8002e38:	4770      	bx	lr

08002e3a <_ZN8touchgfx6Screen15afterTransitionEv>:
     *
     * @see Application::handleTickEvent
     */
    virtual void afterTransition()
    {
    }
 8002e3a:	4770      	bx	lr

08002e3c <_ZN8touchgfx6Screen14tearDownScreenEv>:
     *
     * @see Application::switchScreen
     */
    virtual void tearDownScreen()
    {
    }
 8002e3c:	4770      	bx	lr

08002e3e <_ZN8touchgfx6Screen15handleTickEventEv>:
     * Called by the Application on the current screen with a frequency of
     * Application::TICK_INTERVAL_MS.
     */
    virtual void handleTickEvent()
    {
    }
 8002e3e:	4770      	bx	lr

08002e40 <_ZN8touchgfx6Screen14handleKeyEventEh>:
     * @param  key The key to handle.
     */
    virtual void handleKeyEvent(uint8_t key)
    {
        (void)key; // Unused variable
    }
 8002e40:	4770      	bx	lr

08002e42 <_ZN15Screen1ViewBase9tickEventEv>:
     * Virtual Action Handlers
     */
    virtual void tickEvent()
    {
        // Override and implement this function in Screen1
    }
 8002e42:	4770      	bx	lr

08002e44 <_ZN15Screen1ViewBase11setupScreenEv>:
}

void Screen1ViewBase::setupScreen()
{

}
 8002e44:	4770      	bx	lr

08002e46 <_ZN15Screen1ViewBase15handleTickEventEv>:
void Screen1ViewBase::handleTickEvent()
{
    //Interaction1
    //When every N tick call virtual function
    //Call tickEvent
    tickEvent();
 8002e46:	6803      	ldr	r3, [r0, #0]
 8002e48:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8002e4a:	4718      	bx	r3

08002e4c <_ZN15Screen1ViewBaseD1Ev>:
Screen1ViewBase::~Screen1ViewBase()
 8002e4c:	b510      	push	{r4, lr}
 8002e4e:	4b03      	ldr	r3, [pc, #12]	@ (8002e5c <_ZN15Screen1ViewBaseD1Ev+0x10>)
 8002e50:	6003      	str	r3, [r0, #0]
 8002e52:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8002e54:	f00b fb0a 	bl	800e46c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8002e58:	4620      	mov	r0, r4
 8002e5a:	bd10      	pop	{r4, pc}
 8002e5c:	0802487c 	.word	0x0802487c

08002e60 <_ZN15Screen1ViewBaseD0Ev>:
Screen1ViewBase::~Screen1ViewBase()
 8002e60:	b510      	push	{r4, lr}
 8002e62:	4b06      	ldr	r3, [pc, #24]	@ (8002e7c <_ZN15Screen1ViewBaseD0Ev+0x1c>)
 8002e64:	6003      	str	r3, [r0, #0]
 8002e66:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8002e68:	f00b fb00 	bl	800e46c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8002e6c:	4620      	mov	r0, r4
 8002e6e:	f640 61d8 	movw	r1, #3800	@ 0xed8
 8002e72:	f01e fde0 	bl	8021a36 <_ZdlPvj>
 8002e76:	4620      	mov	r0, r4
 8002e78:	bd10      	pop	{r4, pc}
 8002e7a:	bf00      	nop
 8002e7c:	0802487c 	.word	0x0802487c

08002e80 <_ZN8touchgfx8Drawable11setPositionEssss>:
    void setPosition(int16_t x, int16_t y, int16_t width, int16_t height)
 8002e80:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8002e84:	461d      	mov	r5, r3
        setX(x);
 8002e86:	6803      	ldr	r3, [r0, #0]
    void setPosition(int16_t x, int16_t y, int16_t width, int16_t height)
 8002e88:	f9bd 7018 	ldrsh.w	r7, [sp, #24]
        setX(x);
 8002e8c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
    void setPosition(int16_t x, int16_t y, int16_t width, int16_t height)
 8002e8e:	4604      	mov	r4, r0
 8002e90:	4616      	mov	r6, r2
        setX(x);
 8002e92:	4798      	blx	r3
        setY(y);
 8002e94:	6823      	ldr	r3, [r4, #0]
 8002e96:	4631      	mov	r1, r6
 8002e98:	4620      	mov	r0, r4
 8002e9a:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8002e9c:	4798      	blx	r3
        setWidth(width);
 8002e9e:	6823      	ldr	r3, [r4, #0]
 8002ea0:	4629      	mov	r1, r5
 8002ea2:	4620      	mov	r0, r4
 8002ea4:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8002ea6:	4798      	blx	r3
        setHeight(height);
 8002ea8:	6823      	ldr	r3, [r4, #0]
 8002eaa:	4639      	mov	r1, r7
 8002eac:	4620      	mov	r0, r4
 8002eae:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
    }
 8002eb0:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
        setHeight(height);
 8002eb4:	4718      	bx	r3
	...

08002eb8 <_ZN15Screen1ViewBaseC1Ev>:
Screen1ViewBase::Screen1ViewBase()
 8002eb8:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 8002ebc:	4604      	mov	r4, r0
        : presenter(0)
 8002ebe:	f00e fbb5 	bl	801162c <_ZN8touchgfx6ScreenC1Ev>
 8002ec2:	4b33      	ldr	r3, [pc, #204]	@ (8002f90 <_ZN15Screen1ViewBaseC1Ev+0xd8>)
 8002ec4:	6023      	str	r3, [r4, #0]
class Box : public Widget
{
public:
    /** Construct a new Box with a default alpha value of 255 (solid) */
    Box()
        : Widget(), alpha(255), color(0)
 8002ec6:	4b33      	ldr	r3, [pc, #204]	@ (8002f94 <_ZN15Screen1ViewBaseC1Ev+0xdc>)
 8002ec8:	2500      	movs	r5, #0
 8002eca:	e9c4 3510 	strd	r3, r5, [r4, #64]	@ 0x40
          touchable(false),
 8002ece:	f44f 7380 	mov.w	r3, #256	@ 0x100
 8002ed2:	f104 076c 	add.w	r7, r4, #108	@ 0x6c
 8002ed6:	f8a4 3064 	strh.w	r3, [r4, #100]	@ 0x64
 8002eda:	23ff      	movs	r3, #255	@ 0xff
 8002edc:	f884 3066 	strb.w	r3, [r4, #102]	@ 0x66
 8002ee0:	f104 09b4 	add.w	r9, r4, #180	@ 0xb4
 8002ee4:	e9c4 5512 	strd	r5, r5, [r4, #72]	@ 0x48
          parent(0),
 8002ee8:	e9c4 5514 	strd	r5, r5, [r4, #80]	@ 0x50
          nextDrawChainElement(0),
 8002eec:	e9c4 5516 	strd	r5, r5, [r4, #88]	@ 0x58
 8002ef0:	63e5      	str	r5, [r4, #60]	@ 0x3c
          cachedAbsX(0),
 8002ef2:	6625      	str	r5, [r4, #96]	@ 0x60
        : color(col)
 8002ef4:	66a5      	str	r5, [r4, #104]	@ 0x68
 8002ef6:	4638      	mov	r0, r7
 8002ef8:	f009 feb8 	bl	800cc6c <_ZN8touchgfx6CircleC1Ev>
 8002efc:	4648      	mov	r0, r9
 8002efe:	f7fe fb05 	bl	800150c <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8002f02:	4b25      	ldr	r3, [pc, #148]	@ (8002f98 <_ZN15Screen1ViewBaseC1Ev+0xe0>)
 8002f04:	f8c4 30b4 	str.w	r3, [r4, #180]	@ 0xb4
 8002f08:	3324      	adds	r3, #36	@ 0x24
    __background.setPosition(0, 0, 240, 320);
 8002f0a:	f44f 76a0 	mov.w	r6, #320	@ 0x140
 8002f0e:	f8c4 30bc 	str.w	r3, [r4, #188]	@ 0xbc
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 8002f12:	f104 00c8 	add.w	r0, r4, #200	@ 0xc8
    __background.setPosition(0, 0, 240, 320);
 8002f16:	f104 0a40 	add.w	sl, r4, #64	@ 0x40
 8002f1a:	f8c4 50c0 	str.w	r5, [r4, #192]	@ 0xc0
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 8002f1e:	f44f 6161 	mov.w	r1, #3600	@ 0xe10
 8002f22:	f00b fa99 	bl	800e458 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 8002f26:	462a      	mov	r2, r5
 8002f28:	4629      	mov	r1, r5
 8002f2a:	4650      	mov	r0, sl
 8002f2c:	9600      	str	r6, [sp, #0]
 8002f2e:	23f0      	movs	r3, #240	@ 0xf0
 8002f30:	f7ff ffa6 	bl	8002e80 <_ZN8touchgfx8Drawable11setPositionEssss>
     * @note Must not be called with a Drawable that was already added to the screen. If in doubt,
     *       call remove() first.
     */
    void add(Drawable& d)
    {
        container.add(d);
 8002f34:	f104 0804 	add.w	r8, r4, #4
     *
     * @see getColor, Color::getColorFromRGB
     */
    void setColor(colortype newColor)
    {
        color = newColor;
 8002f38:	f04f 437f 	mov.w	r3, #4278190080	@ 0xff000000
 8002f3c:	66a3      	str	r3, [r4, #104]	@ 0x68
 8002f3e:	4651      	mov	r1, sl
 8002f40:	4640      	mov	r0, r8
 8002f42:	f007 f84d 	bl	8009fe0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    circle1.setPosition(110, 150, 20, 20);
 8002f46:	2314      	movs	r3, #20
 8002f48:	9300      	str	r3, [sp, #0]
 8002f4a:	2296      	movs	r2, #150	@ 0x96
 8002f4c:	4638      	mov	r0, r7
 8002f4e:	216e      	movs	r1, #110	@ 0x6e
 8002f50:	f7ff ff96 	bl	8002e80 <_ZN8touchgfx8Drawable11setPositionEssss>
     */
    template <typename T>
    void setArc(const T startAngle, const T endAngle)
    {
        circleArcAngleStart = CWRUtil::toQ5(startAngle);
        circleArcAngleEnd = CWRUtil::toQ5(endAngle);
 8002f54:	f44f 5334 	mov.w	r3, #11520	@ 0x2d00
 8002f58:	f8c4 30a8 	str.w	r3, [r4, #168]	@ 0xa8
 8002f5c:	4b0f      	ldr	r3, [pc, #60]	@ (8002f9c <_ZN15Screen1ViewBaseC1Ev+0xe4>)
 8002f5e:	f8c4 30c0 	str.w	r3, [r4, #192]	@ 0xc0
    }

    virtual void setColor(colortype color)
    {
        AbstractPainterColor::setColor(color);
        color565 = LCD16bpp::getNativeColor(painterColor);
 8002f62:	f44f 4378 	mov.w	r3, #63488	@ 0xf800
 8002f66:	4640      	mov	r0, r8
        this->circleCenterY = CWRUtil::toQ5(y);
 8002f68:	e9c4 6626 	strd	r6, r6, [r4, #152]	@ 0x98
        this->circleRadius = MAX(CWRUtil::toQ5(0), this->circleRadius);
 8002f6c:	f8c4 60a0 	str.w	r6, [r4, #160]	@ 0xa0
     */
    template <typename T>
    void setLineWidth(const T width)
    {
        this->circleLineWidth = CWRUtil::toQ5(width);
        this->circleLineWidth = MAX(CWRUtil::toQ5(0), this->circleLineWidth);
 8002f70:	f8c4 50ac 	str.w	r5, [r4, #172]	@ 0xac
        circleArcAngleStart = CWRUtil::toQ5(startAngle);
 8002f74:	f8c4 50a4 	str.w	r5, [r4, #164]	@ 0xa4
 8002f78:	f8a4 30c4 	strh.w	r3, [r4, #196]	@ 0xc4
        canvasPainter = &painter;
 8002f7c:	f8c4 9094 	str.w	r9, [r4, #148]	@ 0x94
 8002f80:	4639      	mov	r1, r7
 8002f82:	f007 f82d 	bl	8009fe0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8002f86:	4620      	mov	r0, r4
 8002f88:	b002      	add	sp, #8
 8002f8a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8002f8e:	bf00      	nop
 8002f90:	0802487c 	.word	0x0802487c
 8002f94:	08024cdc 	.word	0x08024cdc
 8002f98:	08024a9c 	.word	0x08024a9c
 8002f9c:	ffff0000 	.word	0xffff0000

08002fa0 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_10_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_10_4bpp();

touchgfx::GeneratedFont& getFont_verdana_10_4bpp()
{
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 1, 10, 10, 0, 0, 4, 1, 0, 0, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 8002fa0:	4770      	bx	lr
	...

08002fa4 <_Z23getFont_verdana_10_4bppv>:
{
 8002fa4:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 1, 10, 10, 0, 0, 4, 1, 0, 0, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 8002fa6:	4d16      	ldr	r5, [pc, #88]	@ (8003000 <_Z23getFont_verdana_10_4bppv+0x5c>)
 8002fa8:	682c      	ldr	r4, [r5, #0]
 8002faa:	f014 0401 	ands.w	r4, r4, #1
{
 8002fae:	b08f      	sub	sp, #60	@ 0x3c
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 1, 10, 10, 0, 0, 4, 1, 0, 0, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 8002fb0:	f3bf 8f5b 	dmb	ish
 8002fb4:	d120      	bne.n	8002ff8 <_Z23getFont_verdana_10_4bppv+0x54>
 8002fb6:	4628      	mov	r0, r5
 8002fb8:	f01e fd3f 	bl	8021a3a <__cxa_guard_acquire>
 8002fbc:	b1e0      	cbz	r0, 8002ff8 <_Z23getFont_verdana_10_4bppv+0x54>
 8002fbe:	233f      	movs	r3, #63	@ 0x3f
 8002fc0:	9309      	str	r3, [sp, #36]	@ 0x24
 8002fc2:	4b10      	ldr	r3, [pc, #64]	@ (8003004 <_Z23getFont_verdana_10_4bppv+0x60>)
 8002fc4:	9308      	str	r3, [sp, #32]
 8002fc6:	4b10      	ldr	r3, [pc, #64]	@ (8003008 <_Z23getFont_verdana_10_4bppv+0x64>)
 8002fc8:	4910      	ldr	r1, [pc, #64]	@ (800300c <_Z23getFont_verdana_10_4bppv+0x68>)
 8002fca:	4811      	ldr	r0, [pc, #68]	@ (8003010 <_Z23getFont_verdana_10_4bppv+0x6c>)
 8002fcc:	940a      	str	r4, [sp, #40]	@ 0x28
 8002fce:	2201      	movs	r2, #1
 8002fd0:	e9cd 4306 	strd	r4, r3, [sp, #24]
 8002fd4:	2304      	movs	r3, #4
 8002fd6:	e9cd 3203 	strd	r3, r2, [sp, #12]
 8002fda:	230a      	movs	r3, #10
 8002fdc:	9300      	str	r3, [sp, #0]
 8002fde:	e9cd 440b 	strd	r4, r4, [sp, #44]	@ 0x2c
 8002fe2:	e9cd 4401 	strd	r4, r4, [sp, #4]
 8002fe6:	9405      	str	r4, [sp, #20]
 8002fe8:	f7ff fef6 	bl	8002dd8 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 8002fec:	4809      	ldr	r0, [pc, #36]	@ (8003014 <_Z23getFont_verdana_10_4bppv+0x70>)
 8002fee:	f01f fc7d 	bl	80228ec <atexit>
 8002ff2:	4628      	mov	r0, r5
 8002ff4:	f01e fd2d 	bl	8021a52 <__cxa_guard_release>
    return verdana_10_4bpp;
}
 8002ff8:	4805      	ldr	r0, [pc, #20]	@ (8003010 <_Z23getFont_verdana_10_4bppv+0x6c>)
 8002ffa:	b00f      	add	sp, #60	@ 0x3c
 8002ffc:	bd30      	pop	{r4, r5, pc}
 8002ffe:	bf00      	nop
 8003000:	20003114 	.word	0x20003114
 8003004:	08025748 	.word	0x08025748
 8003008:	08025754 	.word	0x08025754
 800300c:	08025718 	.word	0x08025718
 8003010:	20003118 	.word	0x20003118
 8003014:	08002fa1 	.word	0x08002fa1

08003018 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_20_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_20_4bpp();

touchgfx::GeneratedFont& getFont_verdana_20_4bpp()
{
    static touchgfx::GeneratedFont verdana_20_4bpp(glyphs_verdana_20_4bpp, 1, 20, 20, 0, 0, 4, 1, 0, 0, unicodes_verdana_20_4bpp, kerning_verdana_20_4bpp, 63, 0, 0, 0);
 8003018:	4770      	bx	lr
	...

0800301c <_Z23getFont_verdana_20_4bppv>:
{
 800301c:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_20_4bpp(glyphs_verdana_20_4bpp, 1, 20, 20, 0, 0, 4, 1, 0, 0, unicodes_verdana_20_4bpp, kerning_verdana_20_4bpp, 63, 0, 0, 0);
 800301e:	4d16      	ldr	r5, [pc, #88]	@ (8003078 <_Z23getFont_verdana_20_4bppv+0x5c>)
 8003020:	682c      	ldr	r4, [r5, #0]
 8003022:	f014 0401 	ands.w	r4, r4, #1
{
 8003026:	b08f      	sub	sp, #60	@ 0x3c
    static touchgfx::GeneratedFont verdana_20_4bpp(glyphs_verdana_20_4bpp, 1, 20, 20, 0, 0, 4, 1, 0, 0, unicodes_verdana_20_4bpp, kerning_verdana_20_4bpp, 63, 0, 0, 0);
 8003028:	f3bf 8f5b 	dmb	ish
 800302c:	d120      	bne.n	8003070 <_Z23getFont_verdana_20_4bppv+0x54>
 800302e:	4628      	mov	r0, r5
 8003030:	f01e fd03 	bl	8021a3a <__cxa_guard_acquire>
 8003034:	b1e0      	cbz	r0, 8003070 <_Z23getFont_verdana_20_4bppv+0x54>
 8003036:	233f      	movs	r3, #63	@ 0x3f
 8003038:	9309      	str	r3, [sp, #36]	@ 0x24
 800303a:	4b10      	ldr	r3, [pc, #64]	@ (800307c <_Z23getFont_verdana_20_4bppv+0x60>)
 800303c:	9308      	str	r3, [sp, #32]
 800303e:	4b10      	ldr	r3, [pc, #64]	@ (8003080 <_Z23getFont_verdana_20_4bppv+0x64>)
 8003040:	4910      	ldr	r1, [pc, #64]	@ (8003084 <_Z23getFont_verdana_20_4bppv+0x68>)
 8003042:	4811      	ldr	r0, [pc, #68]	@ (8003088 <_Z23getFont_verdana_20_4bppv+0x6c>)
 8003044:	940a      	str	r4, [sp, #40]	@ 0x28
 8003046:	2201      	movs	r2, #1
 8003048:	e9cd 4306 	strd	r4, r3, [sp, #24]
 800304c:	2304      	movs	r3, #4
 800304e:	e9cd 3203 	strd	r3, r2, [sp, #12]
 8003052:	2314      	movs	r3, #20
 8003054:	9300      	str	r3, [sp, #0]
 8003056:	e9cd 440b 	strd	r4, r4, [sp, #44]	@ 0x2c
 800305a:	e9cd 4401 	strd	r4, r4, [sp, #4]
 800305e:	9405      	str	r4, [sp, #20]
 8003060:	f7ff feba 	bl	8002dd8 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 8003064:	4809      	ldr	r0, [pc, #36]	@ (800308c <_Z23getFont_verdana_20_4bppv+0x70>)
 8003066:	f01f fc41 	bl	80228ec <atexit>
 800306a:	4628      	mov	r0, r5
 800306c:	f01e fcf1 	bl	8021a52 <__cxa_guard_release>
    return verdana_20_4bpp;
}
 8003070:	4805      	ldr	r0, [pc, #20]	@ (8003088 <_Z23getFont_verdana_20_4bppv+0x6c>)
 8003072:	b00f      	add	sp, #60	@ 0x3c
 8003074:	bd30      	pop	{r4, r5, pc}
 8003076:	bf00      	nop
 8003078:	20003144 	.word	0x20003144
 800307c:	0802574c 	.word	0x0802574c
 8003080:	08025758 	.word	0x08025758
 8003084:	08025728 	.word	0x08025728
 8003088:	20003148 	.word	0x20003148
 800308c:	08003019 	.word	0x08003019

08003090 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_40_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_40_4bpp();

touchgfx::GeneratedFont& getFont_verdana_40_4bpp()
{
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 1, 40, 40, 0, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 8003090:	4770      	bx	lr
	...

08003094 <_Z23getFont_verdana_40_4bppv>:
{
 8003094:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 1, 40, 40, 0, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 8003096:	4d16      	ldr	r5, [pc, #88]	@ (80030f0 <_Z23getFont_verdana_40_4bppv+0x5c>)
 8003098:	682c      	ldr	r4, [r5, #0]
 800309a:	f014 0401 	ands.w	r4, r4, #1
{
 800309e:	b08f      	sub	sp, #60	@ 0x3c
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 1, 40, 40, 0, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 80030a0:	f3bf 8f5b 	dmb	ish
 80030a4:	d120      	bne.n	80030e8 <_Z23getFont_verdana_40_4bppv+0x54>
 80030a6:	4628      	mov	r0, r5
 80030a8:	f01e fcc7 	bl	8021a3a <__cxa_guard_acquire>
 80030ac:	b1e0      	cbz	r0, 80030e8 <_Z23getFont_verdana_40_4bppv+0x54>
 80030ae:	233f      	movs	r3, #63	@ 0x3f
 80030b0:	9309      	str	r3, [sp, #36]	@ 0x24
 80030b2:	4b10      	ldr	r3, [pc, #64]	@ (80030f4 <_Z23getFont_verdana_40_4bppv+0x60>)
 80030b4:	9308      	str	r3, [sp, #32]
 80030b6:	4b10      	ldr	r3, [pc, #64]	@ (80030f8 <_Z23getFont_verdana_40_4bppv+0x64>)
 80030b8:	4910      	ldr	r1, [pc, #64]	@ (80030fc <_Z23getFont_verdana_40_4bppv+0x68>)
 80030ba:	4811      	ldr	r0, [pc, #68]	@ (8003100 <_Z23getFont_verdana_40_4bppv+0x6c>)
 80030bc:	940a      	str	r4, [sp, #40]	@ 0x28
 80030be:	2201      	movs	r2, #1
 80030c0:	e9cd 4306 	strd	r4, r3, [sp, #24]
 80030c4:	2304      	movs	r3, #4
 80030c6:	e9cd 3203 	strd	r3, r2, [sp, #12]
 80030ca:	2328      	movs	r3, #40	@ 0x28
 80030cc:	9300      	str	r3, [sp, #0]
 80030ce:	e9cd 440b 	strd	r4, r4, [sp, #44]	@ 0x2c
 80030d2:	e9cd 4401 	strd	r4, r4, [sp, #4]
 80030d6:	9405      	str	r4, [sp, #20]
 80030d8:	f7ff fe7e 	bl	8002dd8 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 80030dc:	4809      	ldr	r0, [pc, #36]	@ (8003104 <_Z23getFont_verdana_40_4bppv+0x70>)
 80030de:	f01f fc05 	bl	80228ec <atexit>
 80030e2:	4628      	mov	r0, r5
 80030e4:	f01e fcb5 	bl	8021a52 <__cxa_guard_release>
    return verdana_40_4bpp;
}
 80030e8:	4805      	ldr	r0, [pc, #20]	@ (8003100 <_Z23getFont_verdana_40_4bppv+0x6c>)
 80030ea:	b00f      	add	sp, #60	@ 0x3c
 80030ec:	bd30      	pop	{r4, r5, pc}
 80030ee:	bf00      	nop
 80030f0:	20003174 	.word	0x20003174
 80030f4:	08025750 	.word	0x08025750
 80030f8:	0802575c 	.word	0x0802575c
 80030fc:	08025738 	.word	0x08025738
 8003100:	20003178 	.word	0x20003178
 8003104:	08003091 	.word	0x08003091

08003108 <_ZNK8touchgfx4Font12getGSUBTableEv>:
    }
 8003108:	2000      	movs	r0, #0
 800310a:	4770      	bx	lr

0800310c <_ZNK8touchgfx4Font23getContextualFormsTableEv>:
    }
 800310c:	2000      	movs	r0, #0
 800310e:	4770      	bx	lr

08003110 <_ZNK8touchgfx4Font14getStringWidthEPKtz>:
#include <touchgfx/hal/HAL.hpp>
#include <touchgfx/lcd/LCD.hpp>
#include <texts/TypedTextDatabase.hpp>

uint16_t touchgfx::Font::getStringWidth(const touchgfx::Unicode::UnicodeChar* text, ...) const
{
 8003110:	b40e      	push	{r1, r2, r3}
 8003112:	b503      	push	{r0, r1, lr}
 8003114:	ab03      	add	r3, sp, #12
    va_list pArg;
    va_start(pArg, text);
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
 8003116:	2100      	movs	r1, #0
{
 8003118:	f853 2b04 	ldr.w	r2, [r3], #4
    va_start(pArg, text);
 800311c:	9301      	str	r3, [sp, #4]
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
 800311e:	f00d fa7d 	bl	801061c <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
    va_end(pArg);
    return width;
}
 8003122:	b002      	add	sp, #8
 8003124:	f85d eb04 	ldr.w	lr, [sp], #4
 8003128:	b003      	add	sp, #12
 800312a:	4770      	bx	lr

0800312c <_ZNK8touchgfx4Font14getStringWidthEhPKtz>:

uint16_t touchgfx::Font::getStringWidth(touchgfx::TextDirection textDirection, const touchgfx::Unicode::UnicodeChar* text, ...) const
{
 800312c:	b40c      	push	{r2, r3}
 800312e:	b507      	push	{r0, r1, r2, lr}
 8003130:	ab04      	add	r3, sp, #16
 8003132:	f853 2b04 	ldr.w	r2, [r3], #4
    va_list pArg;
    va_start(pArg, text);
 8003136:	9301      	str	r3, [sp, #4]
    uint16_t width = getStringWidthLTR(textDirection, text, pArg);
 8003138:	f00d fa70 	bl	801061c <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
    va_end(pArg);
    return width;
}
 800313c:	b003      	add	sp, #12
 800313e:	f85d eb04 	ldr.w	lr, [sp], #4
 8003142:	b002      	add	sp, #8
 8003144:	4770      	bx	lr
	...

08003148 <_ZN8touchgfx12TextProvider15getNextLigatureEh>:

touchgfx::Unicode::UnicodeChar touchgfx::TextProvider::getNextLigature(TextDirection direction)
{
    if (fontGsubTable && nextCharacters.peekChar())
 8003148:	6c43      	ldr	r3, [r0, #68]	@ 0x44
{
 800314a:	b510      	push	{r4, lr}
 800314c:	4604      	mov	r4, r0
    if (fontGsubTable && nextCharacters.peekChar())
 800314e:	b373      	cbz	r3, 80031ae <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
            return used == size;
        }

        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar()
        {
            assert(used > 0);
 8003150:	8f03      	ldrh	r3, [r0, #56]	@ 0x38
 8003152:	b92b      	cbnz	r3, 8003160 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x18>
 8003154:	4b18      	ldr	r3, [pc, #96]	@ (80031b8 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x70>)
 8003156:	4a19      	ldr	r2, [pc, #100]	@ (80031bc <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x74>)
 8003158:	21c5      	movs	r1, #197	@ 0xc5
            return buffer[pos];
        }

        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar(uint16_t offset)
        {
            assert(offset < used);
 800315a:	4819      	ldr	r0, [pc, #100]	@ (80031c0 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x78>)
 800315c:	f01f fba8 	bl	80228b0 <__assert_func>
            return buffer[pos];
 8003160:	8ec3      	ldrh	r3, [r0, #54]	@ 0x36
 8003162:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8003166:	8c5b      	ldrh	r3, [r3, #34]	@ 0x22
 8003168:	b30b      	cbz	r3, 80031ae <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
    {
        substituteGlyphs();
 800316a:	f00f f8fe 	bl	801236a <_ZN8touchgfx12TextProvider16substituteGlyphsEv>
            assert(offset < used);
 800316e:	8f23      	ldrh	r3, [r4, #56]	@ 0x38
 8003170:	2b01      	cmp	r3, #1
 8003172:	d803      	bhi.n	800317c <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x34>
 8003174:	4b13      	ldr	r3, [pc, #76]	@ (80031c4 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x7c>)
 8003176:	4a14      	ldr	r2, [pc, #80]	@ (80031c8 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x80>)
 8003178:	21cb      	movs	r1, #203	@ 0xcb
 800317a:	e7ee      	b.n	800315a <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x12>
            const uint16_t index = pos + offset;
 800317c:	8ee2      	ldrh	r2, [r4, #54]	@ 0x36
 800317e:	1c53      	adds	r3, r2, #1
 8003180:	b29b      	uxth	r3, r3
            return buffer[index < size ? index : index - size];
 8003182:	2b09      	cmp	r3, #9
 8003184:	4619      	mov	r1, r3
 8003186:	bf88      	it	hi
 8003188:	f1a3 010a 	subhi.w	r1, r3, #10
 800318c:	eb04 0141 	add.w	r1, r4, r1, lsl #1
        if (nextCharacters.peekChar(1) == 0x093F) // Hindi I-matra
 8003190:	f640 103f 	movw	r0, #2367	@ 0x93f
 8003194:	8c49      	ldrh	r1, [r1, #34]	@ 0x22
 8003196:	4281      	cmp	r1, r0
 8003198:	d109      	bne.n	80031ae <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>

        FORCE_INLINE_FUNCTION void replaceAt1(Unicode::UnicodeChar newChar)
        {
            assert(used > 1);
            const uint16_t index = pos + 1;
            buffer[index < size ? index : 0] = newChar;
 800319a:	2b0a      	cmp	r3, #10
 800319c:	eb04 0242 	add.w	r2, r4, r2, lsl #1
 80031a0:	bf28      	it	cs
 80031a2:	2300      	movcs	r3, #0
 80031a4:	eb04 0343 	add.w	r3, r4, r3, lsl #1
            return buffer[pos];
 80031a8:	8c50      	ldrh	r0, [r2, #34]	@ 0x22
            buffer[index < size ? index : 0] = newChar;
 80031aa:	8458      	strh	r0, [r3, #34]	@ 0x22
            buffer[pos] = newChar;
 80031ac:	8451      	strh	r1, [r2, #34]	@ 0x22
        {
            nextCharacters.replaceAt1(nextCharacters.peekChar());
            nextCharacters.replaceAt0(0x093F);
        }
    }
    return getNextChar();
 80031ae:	4620      	mov	r0, r4
}
 80031b0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    return getNextChar();
 80031b4:	f00e bfdc 	b.w	8012170 <_ZN8touchgfx12TextProvider11getNextCharEv>
 80031b8:	080241b9 	.word	0x080241b9
 80031bc:	080241c2 	.word	0x080241c2
 80031c0:	0802426d 	.word	0x0802426d
 80031c4:	080242b7 	.word	0x080242b7
 80031c8:	080242c5 	.word	0x080242c5

080031cc <_ZN8touchgfx12TextProvider18initializeInternalEv>:

void touchgfx::TextProvider::initializeInternal()
{
    fillInputBuffer();
 80031cc:	f00e bf97 	b.w	80120fe <_ZN8touchgfx12TextProvider15fillInputBufferEv>

080031d0 <_ZN8touchgfx5Texts11setLanguageEt>:
touchgfx::LanguageId touchgfx::Texts::currentLanguage = static_cast<touchgfx::LanguageId>(0);
static const touchgfx::Unicode::UnicodeChar* currentLanguagePtr = 0;
static const uint32_t* currentLanguageIndices = 0;

void touchgfx::Texts::setLanguage(touchgfx::LanguageId id)
{
 80031d0:	b538      	push	{r3, r4, r5, lr}
    const touchgfx::TypedText::TypedTextData* currentLanguageTypedText = 0;
    if (id < 1)
 80031d2:	bb18      	cbnz	r0, 800321c <_ZN8touchgfx5Texts11setLanguageEt+0x4c>
    {
        if (languagesArray[id] != 0)
 80031d4:	4b12      	ldr	r3, [pc, #72]	@ (8003220 <_ZN8touchgfx5Texts11setLanguageEt+0x50>)
 80031d6:	4813      	ldr	r0, [pc, #76]	@ (8003224 <_ZN8touchgfx5Texts11setLanguageEt+0x54>)
 80031d8:	681c      	ldr	r4, [r3, #0]
 80031da:	4913      	ldr	r1, [pc, #76]	@ (8003228 <_ZN8touchgfx5Texts11setLanguageEt+0x58>)
 80031dc:	b1b4      	cbz	r4, 800320c <_ZN8touchgfx5Texts11setLanguageEt+0x3c>
        {
            // Dynamic translation is added
            const TranslationHeader* translation = languagesArray[id];
            currentLanguagePtr = (const touchgfx::Unicode::UnicodeChar*)(((const uint8_t*)translation) + translation->offset_to_texts);
 80031de:	6822      	ldr	r2, [r4, #0]
 80031e0:	4422      	add	r2, r4
 80031e2:	6002      	str	r2, [r0, #0]
            currentLanguageIndices = (const uint32_t*)(((const uint8_t*)translation) + translation->offset_to_indices);
 80031e4:	6862      	ldr	r2, [r4, #4]
 80031e6:	4422      	add	r2, r4
 80031e8:	600a      	str	r2, [r1, #0]
            currentLanguageTypedText = (const touchgfx::TypedText::TypedTextData*)(((const uint8_t*)translation) + translation->offset_to_typedtext);
 80031ea:	68a2      	ldr	r2, [r4, #8]
 80031ec:	4414      	add	r4, r2
        }
    }

    if (currentLanguageTypedText)
    {
        currentLanguage = id;
 80031ee:	4b0f      	ldr	r3, [pc, #60]	@ (800322c <_ZN8touchgfx5Texts11setLanguageEt+0x5c>)
 80031f0:	2200      	movs	r2, #0
 80031f2:	801a      	strh	r2, [r3, #0]
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
                                                       TypedTextDatabase::getFonts(), TypedTextDatabase::getInstanceSize());
 80031f4:	f000 f82a 	bl	800324c <_ZN17TypedTextDatabase8getFontsEv>
 80031f8:	4605      	mov	r5, r0
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
 80031fa:	f000 f825 	bl	8003248 <_ZN17TypedTextDatabase15getInstanceSizeEv>
        typedTexts = data;
 80031fe:	4b0c      	ldr	r3, [pc, #48]	@ (8003230 <_ZN8touchgfx5Texts11setLanguageEt+0x60>)
 8003200:	601c      	str	r4, [r3, #0]
        fonts = f;
 8003202:	4b0c      	ldr	r3, [pc, #48]	@ (8003234 <_ZN8touchgfx5Texts11setLanguageEt+0x64>)
 8003204:	601d      	str	r5, [r3, #0]
        numberOfTypedTexts = n;
 8003206:	4b0c      	ldr	r3, [pc, #48]	@ (8003238 <_ZN8touchgfx5Texts11setLanguageEt+0x68>)
 8003208:	8018      	strh	r0, [r3, #0]
    }
}
 800320a:	e007      	b.n	800321c <_ZN8touchgfx5Texts11setLanguageEt+0x4c>
            currentLanguagePtr = texts_all_languages;
 800320c:	4b0b      	ldr	r3, [pc, #44]	@ (800323c <_ZN8touchgfx5Texts11setLanguageEt+0x6c>)
 800320e:	6003      	str	r3, [r0, #0]
            currentLanguageIndices = staticLanguageIndices[id];
 8003210:	4b0b      	ldr	r3, [pc, #44]	@ (8003240 <_ZN8touchgfx5Texts11setLanguageEt+0x70>)
 8003212:	600b      	str	r3, [r1, #0]
            currentLanguageTypedText = typedTextDatabaseArray[id];
 8003214:	4b0b      	ldr	r3, [pc, #44]	@ (8003244 <_ZN8touchgfx5Texts11setLanguageEt+0x74>)
 8003216:	681c      	ldr	r4, [r3, #0]
    if (currentLanguageTypedText)
 8003218:	2c00      	cmp	r4, #0
 800321a:	d1e8      	bne.n	80031ee <_ZN8touchgfx5Texts11setLanguageEt+0x1e>
}
 800321c:	bd38      	pop	{r3, r4, r5, pc}
 800321e:	bf00      	nop
 8003220:	200031b0 	.word	0x200031b0
 8003224:	200031a8 	.word	0x200031a8
 8003228:	200031a4 	.word	0x200031a4
 800322c:	200031ac 	.word	0x200031ac
 8003230:	20013f84 	.word	0x20013f84
 8003234:	20013f8c 	.word	0x20013f8c
 8003238:	20013f88 	.word	0x20013f88
 800323c:	08025764 	.word	0x08025764
 8003240:	08025760 	.word	0x08025760
 8003244:	08025768 	.word	0x08025768

08003248 <_ZN17TypedTextDatabase15getInstanceSizeEv>:
}

uint16_t getInstanceSize()
{
    return 0;
}
 8003248:	2000      	movs	r0, #0
 800324a:	4770      	bx	lr

0800324c <_ZN17TypedTextDatabase8getFontsEv>:

const touchgfx::Font** getFonts()
{
    return touchgfx_fonts;
}
 800324c:	4800      	ldr	r0, [pc, #0]	@ (8003250 <_ZN17TypedTextDatabase8getFontsEv+0x4>)
 800324e:	4770      	bx	lr
 8003250:	200031b4 	.word	0x200031b4

08003254 <_GLOBAL__sub_I_touchgfx_fonts>:
    case 2:
        touchgfx_fonts[2] = &(getFont_verdana_10_4bpp());
        break;
    }
}
} // namespace TypedTextDatabase
 8003254:	b510      	push	{r4, lr}
    &(getFont_verdana_20_4bpp()),
 8003256:	f7ff fee1 	bl	800301c <_Z23getFont_verdana_20_4bppv>
};
 800325a:	4c04      	ldr	r4, [pc, #16]	@ (800326c <_GLOBAL__sub_I_touchgfx_fonts+0x18>)
 800325c:	6020      	str	r0, [r4, #0]
    &(getFont_verdana_40_4bpp()),
 800325e:	f7ff ff19 	bl	8003094 <_Z23getFont_verdana_40_4bppv>
};
 8003262:	6060      	str	r0, [r4, #4]
    &(getFont_verdana_10_4bpp())
 8003264:	f7ff fe9e 	bl	8002fa4 <_Z23getFont_verdana_10_4bppv>
};
 8003268:	60a0      	str	r0, [r4, #8]
} // namespace TypedTextDatabase
 800326a:	bd10      	pop	{r4, pc}
 800326c:	200031b4 	.word	0x200031b4

08003270 <_ZN8touchgfx22VectorFontRendererImpl20getVectorFontBuffersERPfRiRPhS3_>:
/* DO NOT EDIT THIS FILE */
/* This file is autogenerated by the text-database code generator */
#include <touchgfx/VectorFontRendererImpl.hpp>

void touchgfx::VectorFontRendererImpl::getVectorFontBuffers(float*& pointArray, int& pointArraySize, uint8_t*& commandArray, int& commandArraySize)
{
 8003270:	b510      	push	{r4, lr}
    pointArray = 0;
 8003272:	2400      	movs	r4, #0
 8003274:	6004      	str	r4, [r0, #0]
    pointArraySize = 0;
 8003276:	600c      	str	r4, [r1, #0]
    commandArray = 0;
 8003278:	6014      	str	r4, [r2, #0]
    commandArraySize = 0;
 800327a:	601c      	str	r4, [r3, #0]
}
 800327c:	bd10      	pop	{r4, pc}

0800327e <_ZN19FrontendApplicationD1Ev>:

class FrontendApplication : public FrontendApplicationBase
{
public:
    FrontendApplication(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplication() { }
 800327e:	4770      	bx	lr

08003280 <_ZN19FrontendApplicationD0Ev>:
 8003280:	b510      	push	{r4, lr}
 8003282:	f44f 71ae 	mov.w	r1, #348	@ 0x15c
 8003286:	4604      	mov	r4, r0
 8003288:	f01e fbd5 	bl	8021a36 <_ZdlPvj>
 800328c:	4620      	mov	r0, r4
 800328e:	bd10      	pop	{r4, pc}

08003290 <_ZN19FrontendApplication15handleTickEventEv>:

    virtual void handleTickEvent()
 8003290:	b510      	push	{r4, lr}
 8003292:	4604      	mov	r4, r0
    {
        model.tick();
 8003294:	f8d0 0158 	ldr.w	r0, [r0, #344]	@ 0x158
 8003298:	f000 f813 	bl	80032c2 <_ZN5Model4tickEv>
        FrontendApplicationBase::handleTickEvent();
 800329c:	4620      	mov	r0, r4
    }
 800329e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        FrontendApplicationBase::handleTickEvent();
 80032a2:	f00c b9b5 	b.w	800f610 <_ZN8touchgfx11Application15handleTickEventEv>
	...

080032a8 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>:
#include <gui/common/FrontendApplication.hpp>

FrontendApplication::FrontendApplication(Model& m, FrontendHeap& heap)
 80032a8:	b510      	push	{r4, lr}
 80032aa:	4604      	mov	r4, r0
    : FrontendApplicationBase(m, heap)
 80032ac:	f7ff fd1e 	bl	8002cec <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>
 80032b0:	4b01      	ldr	r3, [pc, #4]	@ (80032b8 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap+0x10>)
 80032b2:	6023      	str	r3, [r4, #0]
{

}
 80032b4:	4620      	mov	r0, r4
 80032b6:	bd10      	pop	{r4, pc}
 80032b8:	080248b4 	.word	0x080248b4

080032bc <_ZN5ModelC1Ev>:
#include <gui/model/Model.hpp>
#include <gui/model/ModelListener.hpp>

Model::Model() : modelListener(0)
 80032bc:	2200      	movs	r2, #0
 80032be:	6002      	str	r2, [r0, #0]
{

}
 80032c0:	4770      	bx	lr

080032c2 <_ZN5Model4tickEv>:

void Model::tick()
{

}
 80032c2:	4770      	bx	lr

080032c4 <_ZN16Screen1PresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Screen1Presenter() {}
 80032c4:	4770      	bx	lr

080032c6 <_ZThn4_N16Screen1PresenterD1Ev>:
 80032c6:	3804      	subs	r0, #4
 80032c8:	4770      	bx	lr

080032ca <_ZN16Screen1Presenter10deactivateEv>:
}

void Screen1Presenter::activate()
{

}
 80032ca:	4770      	bx	lr

080032cc <_ZN16Screen1PresenterD0Ev>:
 80032cc:	b510      	push	{r4, lr}
 80032ce:	2110      	movs	r1, #16
 80032d0:	4604      	mov	r4, r0
 80032d2:	f01e fbb0 	bl	8021a36 <_ZdlPvj>
 80032d6:	4620      	mov	r0, r4
 80032d8:	bd10      	pop	{r4, pc}

080032da <_ZThn4_N16Screen1PresenterD0Ev>:
 80032da:	f1a0 0004 	sub.w	r0, r0, #4
 80032de:	e7f5      	b.n	80032cc <_ZN16Screen1PresenterD0Ev>

080032e0 <_ZN16Screen1PresenterC1ER11Screen1View>:
    ModelListener() : model(0) {}
 80032e0:	2200      	movs	r2, #0
 80032e2:	6082      	str	r2, [r0, #8]
    : view(v)
 80032e4:	4a02      	ldr	r2, [pc, #8]	@ (80032f0 <_ZN16Screen1PresenterC1ER11Screen1View+0x10>)
 80032e6:	6002      	str	r2, [r0, #0]
 80032e8:	3218      	adds	r2, #24
 80032ea:	6042      	str	r2, [r0, #4]
 80032ec:	60c1      	str	r1, [r0, #12]
}
 80032ee:	4770      	bx	lr
 80032f0:	08024908 	.word	0x08024908

080032f4 <_ZN11Screen1View14tearDownScreenEv>:
}

void Screen1View::tearDownScreen()
{
    Screen1ViewBase::tearDownScreen();
}
 80032f4:	4770      	bx	lr
	...

080032f8 <_ZN11Screen1ViewD1Ev>:

class Screen1View : public Screen1ViewBase
{
public:
    Screen1View();
    virtual ~Screen1View() {}
 80032f8:	b510      	push	{r4, lr}
 80032fa:	4b03      	ldr	r3, [pc, #12]	@ (8003308 <_ZN11Screen1ViewD1Ev+0x10>)
 80032fc:	6003      	str	r3, [r0, #0]
 80032fe:	4604      	mov	r4, r0
 8003300:	f7ff fda4 	bl	8002e4c <_ZN15Screen1ViewBaseD1Ev>
 8003304:	4620      	mov	r0, r4
 8003306:	bd10      	pop	{r4, pc}
 8003308:	08024930 	.word	0x08024930

0800330c <_ZN11Screen1ViewD0Ev>:
 800330c:	b510      	push	{r4, lr}
 800330e:	4604      	mov	r4, r0
 8003310:	f7ff fff2 	bl	80032f8 <_ZN11Screen1ViewD1Ev>
 8003314:	4620      	mov	r0, r4
 8003316:	f640 61e8 	movw	r1, #3816	@ 0xee8
 800331a:	f01e fb8c 	bl	8021a36 <_ZdlPvj>
 800331e:	4620      	mov	r0, r4
 8003320:	bd10      	pop	{r4, pc}
	...

08003324 <_ZN11Screen1ViewC1Ev>:
Screen1View::Screen1View():
 8003324:	b510      	push	{r4, lr}
 8003326:	4604      	mov	r4, r0
    initialBallY(0)
 8003328:	f7ff fdc6 	bl	8002eb8 <_ZN15Screen1ViewBaseC1Ev>
    currentAngleX(0.0f),
 800332c:	f604 61dc 	addw	r1, r4, #3804	@ 0xedc
    initialBallY(0)
 8003330:	4b06      	ldr	r3, [pc, #24]	@ (800334c <_ZN11Screen1ViewC1Ev+0x28>)
 8003332:	6023      	str	r3, [r4, #0]
    currentAngleX(0.0f),
 8003334:	2200      	movs	r2, #0
    initialBallY(0)
 8003336:	2300      	movs	r3, #0
 8003338:	f8c4 3ed8 	str.w	r3, [r4, #3800]	@ 0xed8
    currentAngleX(0.0f),
 800333c:	600a      	str	r2, [r1, #0]
    currentAngleY(0.0f),
 800333e:	f504 616e 	add.w	r1, r4, #3808	@ 0xee0
}
 8003342:	4620      	mov	r0, r4
    currentAngleY(0.0f),
 8003344:	600a      	str	r2, [r1, #0]
    initialBallX(0),
 8003346:	f8c4 3ee4 	str.w	r3, [r4, #3812]	@ 0xee4
}
 800334a:	bd10      	pop	{r4, pc}
 800334c:	08024930 	.word	0x08024930

08003350 <_ZN11Screen1View11setupScreenEv>:
{
 8003350:	b510      	push	{r4, lr}
 8003352:	4604      	mov	r4, r0
    Screen1ViewBase::setupScreen();
 8003354:	f7ff fd76 	bl	8002e44 <_ZN15Screen1ViewBase11setupScreenEv>
    initialBallX = circle1.getX();
 8003358:	6f23      	ldr	r3, [r4, #112]	@ 0x70
 800335a:	f8c4 3ee4 	str.w	r3, [r4, #3812]	@ 0xee4
}
 800335e:	bd10      	pop	{r4, pc}

08003360 <_ZN11Screen1View9tickEventEv>:

// Đổi tên hàm thành handleTickEvent để nhất quán với TouchGFX
void Screen1View::tickEvent()
{
 8003360:	b5f0      	push	{r4, r5, r6, r7, lr}
    GyroData_t gyroData;
    bool newDataReceived = false;

    // Chỉ nên xử lý một message mỗi tick để tránh giao diện bị "giật" nếu queue đầy
    if (Queue1Handle != NULL && osMessageQueueGet(Queue1Handle, &gyroData, NULL, 0) == osOK)
 8003362:	4b41      	ldr	r3, [pc, #260]	@ (8003468 <_ZN11Screen1View9tickEventEv+0x108>)
{
 8003364:	4604      	mov	r4, r0
    if (Queue1Handle != NULL && osMessageQueueGet(Queue1Handle, &gyroData, NULL, 0) == osOK)
 8003366:	6818      	ldr	r0, [r3, #0]
{
 8003368:	b085      	sub	sp, #20
 800336a:	f604 66dc 	addw	r6, r4, #3804	@ 0xedc
 800336e:	f504 676e 	add.w	r7, r4, #3808	@ 0xee0
    if (Queue1Handle != NULL && osMessageQueueGet(Queue1Handle, &gyroData, NULL, 0) == osOK)
 8003372:	b398      	cbz	r0, 80033dc <_ZN11Screen1View9tickEventEv+0x7c>
 8003374:	2300      	movs	r3, #0
 8003376:	461a      	mov	r2, r3
 8003378:	a901      	add	r1, sp, #4
 800337a:	f004 f988 	bl	800768e <osMessageQueueGet>
 800337e:	bb68      	cbnz	r0, 80033dc <_ZN11Screen1View9tickEventEv+0x7c>
        // Thời gian delta, tính bằng giây
        float deltaTimeSeconds = (float)GYRO_UPDATE_INTERVAL_MS / 1000.0f;

        // Tích phân vận tốc góc để cập nhật góc nghiêng
        // Chú ý: Kiểm tra lại gx/gy và dấu +/- cho đúng với hướng nghiêng thực tế
        currentAngleX += gyroData.gy * deltaTimeSeconds;
 8003380:	eddf 6a3a 	vldr	s13, [pc, #232]	@ 800346c <_ZN11Screen1View9tickEventEv+0x10c>
 8003384:	ed9d 7a02 	vldr	s14, [sp, #8]
 8003388:	edd6 7a00 	vldr	s15, [r6]
        currentAngleY += gyroData.gx * deltaTimeSeconds; // Thường thì trục Y màn hình ngược với trục X của gyro
 800338c:	ed9d 6a01 	vldr	s12, [sp, #4]
        currentAngleX += gyroData.gy * deltaTimeSeconds;
 8003390:	eee7 7a26 	vfma.f32	s15, s14, s13
        currentAngleY += gyroData.gx * deltaTimeSeconds; // Thường thì trục Y màn hình ngược với trục X của gyro
 8003394:	ed97 7a00 	vldr	s14, [r7]
 8003398:	eea6 7a26 	vfma.f32	s14, s12, s13

        // Giới hạn góc tích lũy để chống trôi vô hạn
        if (currentAngleX > MAX_INTEGRATED_ANGLE) currentAngleX = MAX_INTEGRATED_ANGLE;
 800339c:	eddf 6a34 	vldr	s13, [pc, #208]	@ 8003470 <_ZN11Screen1View9tickEventEv+0x110>
 80033a0:	eef4 7ae6 	vcmpe.f32	s15, s13
 80033a4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80033a8:	dc54      	bgt.n	8003454 <_ZN11Screen1View9tickEventEv+0xf4>
        if (currentAngleX < -MAX_INTEGRATED_ANGLE) currentAngleX = -MAX_INTEGRATED_ANGLE;
 80033aa:	ed9f 6a32 	vldr	s12, [pc, #200]	@ 8003474 <_ZN11Screen1View9tickEventEv+0x114>
 80033ae:	eef4 7a46 	vcmp.f32	s15, s12
 80033b2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80033b6:	bf48      	it	mi
 80033b8:	eef0 7a46 	vmovmi.f32	s15, s12
        if (currentAngleY > MAX_INTEGRATED_ANGLE) currentAngleY = MAX_INTEGRATED_ANGLE;
 80033bc:	eeb4 7ae6 	vcmpe.f32	s14, s13
 80033c0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80033c4:	edc6 7a00 	vstr	s15, [r6]
 80033c8:	dc47      	bgt.n	800345a <_ZN11Screen1View9tickEventEv+0xfa>
        if (currentAngleY < -MAX_INTEGRATED_ANGLE) currentAngleY = -MAX_INTEGRATED_ANGLE;
 80033ca:	eddf 7a2a 	vldr	s15, [pc, #168]	@ 8003474 <_ZN11Screen1View9tickEventEv+0x114>
 80033ce:	eeb4 7ae7 	vcmpe.f32	s14, s15
 80033d2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80033d6:	d443      	bmi.n	8003460 <_ZN11Screen1View9tickEventEv+0x100>
 80033d8:	ed87 7a00 	vstr	s14, [r7]
        currentAngleY *= DAMPING_FACTOR;
    }

    // Ánh xạ góc sang độ lệch pixel
    int16_t offsetX = (int16_t)(currentAngleX * ANGLE_TO_PIXEL_SENSITIVITY);
    int16_t offsetY = (int16_t)(currentAngleY * ANGLE_TO_PIXEL_SENSITIVITY);
 80033dc:	edd7 7a00 	vldr	s15, [r7]
        moveRelative(x - rect.x, y - rect.y);
 80033e0:	f8b4 1072 	ldrh.w	r1, [r4, #114]	@ 0x72
 80033e4:	f8b4 0070 	ldrh.w	r0, [r4, #112]	@ 0x70
 80033e8:	eeb1 7a0c 	vmov.f32	s14, #28	@ 0x40e00000  7.0
 80033ec:	ee67 7a87 	vmul.f32	s15, s15, s14
    if (offsetX < -MAX_BALL_OFFSET_X) offsetX = -MAX_BALL_OFFSET_X;
    if (offsetY > MAX_BALL_OFFSET_Y) offsetY = MAX_BALL_OFFSET_Y;
    if (offsetY < -MAX_BALL_OFFSET_Y) offsetY = -MAX_BALL_OFFSET_Y;

    // Di chuyển quả bóng đến vị trí mới và yêu cầu vẽ lại
    circle1.moveTo(initialBallX + offsetX, initialBallY + offsetY);
 80033f0:	f06f 0263 	mvn.w	r2, #99	@ 0x63
    int16_t offsetY = (int16_t)(currentAngleY * ANGLE_TO_PIXEL_SENSITIVITY);
 80033f4:	eefd 7ae7 	vcvt.s32.f32	s15, s15
    circle1.moveTo(initialBallX + offsetX, initialBallY + offsetY);
 80033f8:	f104 056c 	add.w	r5, r4, #108	@ 0x6c
    if (offsetY < -MAX_BALL_OFFSET_Y) offsetY = -MAX_BALL_OFFSET_Y;
 80033fc:	ee17 3a90 	vmov	r3, s15
    int16_t offsetX = (int16_t)(currentAngleX * ANGLE_TO_PIXEL_SENSITIVITY);
 8003400:	edd6 7a00 	vldr	s15, [r6]
    if (offsetY < -MAX_BALL_OFFSET_Y) offsetY = -MAX_BALL_OFFSET_Y;
 8003404:	b21b      	sxth	r3, r3
    circle1.moveTo(initialBallX + offsetX, initialBallY + offsetY);
 8003406:	4293      	cmp	r3, r2
    int16_t offsetX = (int16_t)(currentAngleX * ANGLE_TO_PIXEL_SENSITIVITY);
 8003408:	ee67 7a87 	vmul.f32	s15, s15, s14
    circle1.moveTo(initialBallX + offsetX, initialBallY + offsetY);
 800340c:	bfb8      	it	lt
 800340e:	4613      	movlt	r3, r2
 8003410:	f8b4 2ee6 	ldrh.w	r2, [r4, #3814]	@ 0xee6
    int16_t offsetX = (int16_t)(currentAngleX * ANGLE_TO_PIXEL_SENSITIVITY);
 8003414:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8003418:	1a52      	subs	r2, r2, r1
 800341a:	2b64      	cmp	r3, #100	@ 0x64
 800341c:	bfd4      	ite	le
 800341e:	18d2      	addle	r2, r2, r3
 8003420:	3264      	addgt	r2, #100	@ 0x64
    if (offsetX < -MAX_BALL_OFFSET_X) offsetX = -MAX_BALL_OFFSET_X;
 8003422:	ee17 3a90 	vmov	r3, s15
    circle1.moveTo(initialBallX + offsetX, initialBallY + offsetY);
 8003426:	f06f 01c7 	mvn.w	r1, #199	@ 0xc7
    if (offsetX < -MAX_BALL_OFFSET_X) offsetX = -MAX_BALL_OFFSET_X;
 800342a:	b21b      	sxth	r3, r3
    circle1.moveTo(initialBallX + offsetX, initialBallY + offsetY);
 800342c:	428b      	cmp	r3, r1
 800342e:	bfb8      	it	lt
 8003430:	460b      	movlt	r3, r1
 8003432:	f8b4 1ee4 	ldrh.w	r1, [r4, #3812]	@ 0xee4
 8003436:	1a09      	subs	r1, r1, r0
 8003438:	2bc8      	cmp	r3, #200	@ 0xc8
 800343a:	bfd4      	ite	le
 800343c:	18c9      	addle	r1, r1, r3
 800343e:	31c8      	addgt	r1, #200	@ 0xc8
 8003440:	b212      	sxth	r2, r2
 8003442:	b209      	sxth	r1, r1
 8003444:	4628      	mov	r0, r5
 8003446:	f00d fa95 	bl	8010974 <_ZN8touchgfx8Drawable12moveRelativeEss>
    circle1.invalidate();
 800344a:	4628      	mov	r0, r5
 800344c:	f00a f900 	bl	800d650 <_ZNK8touchgfx12CanvasWidget10invalidateEv>
}
 8003450:	b005      	add	sp, #20
 8003452:	bdf0      	pop	{r4, r5, r6, r7, pc}
        if (currentAngleX < -MAX_INTEGRATED_ANGLE) currentAngleX = -MAX_INTEGRATED_ANGLE;
 8003454:	eef0 7a66 	vmov.f32	s15, s13
 8003458:	e7b0      	b.n	80033bc <_ZN11Screen1View9tickEventEv+0x5c>
        if (currentAngleY > MAX_INTEGRATED_ANGLE) currentAngleY = MAX_INTEGRATED_ANGLE;
 800345a:	ed9f 7a05 	vldr	s14, [pc, #20]	@ 8003470 <_ZN11Screen1View9tickEventEv+0x110>
 800345e:	e7bb      	b.n	80033d8 <_ZN11Screen1View9tickEventEv+0x78>
        if (currentAngleY < -MAX_INTEGRATED_ANGLE) currentAngleY = -MAX_INTEGRATED_ANGLE;
 8003460:	edc7 7a00 	vstr	s15, [r7]
 8003464:	e7ba      	b.n	80033dc <_ZN11Screen1View9tickEventEv+0x7c>
 8003466:	bf00      	nop
 8003468:	20002ecc 	.word	0x20002ecc
 800346c:	3ca3d70a 	.word	0x3ca3d70a
 8003470:	428c0000 	.word	0x428c0000
 8003474:	c28c0000 	.word	0xc28c0000

08003478 <a3g4250d_read_reg>:
  *
  */
int32_t __weak a3g4250d_read_reg(const stmdev_ctx_t *ctx, uint8_t reg,
                                 uint8_t *data,
                                 uint16_t len)
{
 8003478:	b410      	push	{r4}
  int32_t ret;

  if (ctx == NULL) return -1;
 800347a:	b128      	cbz	r0, 8003488 <a3g4250d_read_reg+0x10>

  ret = ctx->read_reg(ctx->handle, reg, data, len);
 800347c:	6844      	ldr	r4, [r0, #4]
 800347e:	68c0      	ldr	r0, [r0, #12]
 8003480:	46a4      	mov	ip, r4

  return ret;
}
 8003482:	f85d 4b04 	ldr.w	r4, [sp], #4
  ret = ctx->read_reg(ctx->handle, reg, data, len);
 8003486:	4760      	bx	ip
}
 8003488:	f04f 30ff 	mov.w	r0, #4294967295
 800348c:	f85d 4b04 	ldr.w	r4, [sp], #4
 8003490:	4770      	bx	lr

08003492 <a3g4250d_write_reg>:
  *
  */
int32_t __weak a3g4250d_write_reg(const stmdev_ctx_t *ctx, uint8_t reg,
                                  uint8_t *data,
                                  uint16_t len)
{
 8003492:	b410      	push	{r4}
  int32_t ret;

  if (ctx == NULL) return -1;
 8003494:	b128      	cbz	r0, 80034a2 <a3g4250d_write_reg+0x10>

  ret = ctx->write_reg(ctx->handle, reg, data, len);
 8003496:	6804      	ldr	r4, [r0, #0]
 8003498:	68c0      	ldr	r0, [r0, #12]
 800349a:	46a4      	mov	ip, r4

  return ret;
}
 800349c:	f85d 4b04 	ldr.w	r4, [sp], #4
  ret = ctx->write_reg(ctx->handle, reg, data, len);
 80034a0:	4760      	bx	ip
}
 80034a2:	f04f 30ff 	mov.w	r0, #4294967295
 80034a6:	f85d 4b04 	ldr.w	r4, [sp], #4
 80034aa:	4770      	bx	lr

080034ac <a3g4250d_from_fs245dps_to_mdps>:
  * @{
  *
  */

float_t a3g4250d_from_fs245dps_to_mdps(int16_t lsb)
{
 80034ac:	ee07 0a90 	vmov	s15, r0
  return ((float_t)lsb * 8.75f);
}
 80034b0:	ed9f 0a03 	vldr	s0, [pc, #12]	@ 80034c0 <a3g4250d_from_fs245dps_to_mdps+0x14>
  return ((float_t)lsb * 8.75f);
 80034b4:	eef8 7ae7 	vcvt.f32.s32	s15, s15
}
 80034b8:	ee27 0a80 	vmul.f32	s0, s15, s0
 80034bc:	4770      	bx	lr
 80034be:	bf00      	nop
 80034c0:	410c0000 	.word	0x410c0000

080034c4 <a3g4250d_angular_rate_raw_get>:
  * @param  buff   Buffer that stores the data read.(ptr)
  * @retval        Interface status (MANDATORY: return 0 -> no Error).
  *
  */
int32_t a3g4250d_angular_rate_raw_get(const stmdev_ctx_t *ctx, int16_t *val)
{
 80034c4:	b513      	push	{r0, r1, r4, lr}
  uint8_t buff[6];
  int32_t ret;

  ret =  a3g4250d_read_reg(ctx, A3G4250D_OUT_X_L, buff, 6);
 80034c6:	2306      	movs	r3, #6
{
 80034c8:	460c      	mov	r4, r1
  ret =  a3g4250d_read_reg(ctx, A3G4250D_OUT_X_L, buff, 6);
 80034ca:	466a      	mov	r2, sp
 80034cc:	2128      	movs	r1, #40	@ 0x28
 80034ce:	f7ff ffd3 	bl	8003478 <a3g4250d_read_reg>
  val[0] = (int16_t)buff[1];
  val[0] = (val[0] * 256) + (int16_t)buff[0];
 80034d2:	f89d 2001 	ldrb.w	r2, [sp, #1]
 80034d6:	f89d 3000 	ldrb.w	r3, [sp]
 80034da:	eb03 2302 	add.w	r3, r3, r2, lsl #8
 80034de:	8023      	strh	r3, [r4, #0]
  val[1] = (int16_t)buff[3];
  val[1] = (val[1] * 256) + (int16_t)buff[2];
 80034e0:	f89d 2003 	ldrb.w	r2, [sp, #3]
 80034e4:	f89d 3002 	ldrb.w	r3, [sp, #2]
 80034e8:	eb03 2302 	add.w	r3, r3, r2, lsl #8
 80034ec:	8063      	strh	r3, [r4, #2]
  val[2] = (int16_t)buff[5];
  val[2] = (val[2] * 256) + (int16_t)buff[4];
 80034ee:	f89d 2005 	ldrb.w	r2, [sp, #5]
 80034f2:	f89d 3004 	ldrb.w	r3, [sp, #4]
 80034f6:	eb03 2302 	add.w	r3, r3, r2, lsl #8
 80034fa:	80a3      	strh	r3, [r4, #4]

  return ret;
}
 80034fc:	b002      	add	sp, #8
 80034fe:	bd10      	pop	{r4, pc}

08003500 <a3g4250d_device_id_get>:
  * @param  buff     Buffer that stores the data read.(ptr)
  * @retval          Interface status (MANDATORY: return 0 -> no Error).
  *
  */
int32_t a3g4250d_device_id_get(const stmdev_ctx_t *ctx, uint8_t *buff)
{
 8003500:	b508      	push	{r3, lr}
 8003502:	460a      	mov	r2, r1
  int32_t ret;

  ret = a3g4250d_read_reg(ctx, A3G4250D_WHO_AM_I, buff, 1);
 8003504:	2301      	movs	r3, #1
 8003506:	210f      	movs	r1, #15
 8003508:	f7ff ffb6 	bl	8003478 <a3g4250d_read_reg>

  return ret;
}
 800350c:	bd08      	pop	{r3, pc}

0800350e <ili9341_GetLcdPixelWidth>:
  */
uint16_t ili9341_GetLcdPixelWidth(void)
{
  /* Return LCD PIXEL WIDTH */
  return ILI9341_LCD_PIXEL_WIDTH;
}
 800350e:	20f0      	movs	r0, #240	@ 0xf0
 8003510:	4770      	bx	lr

08003512 <ili9341_GetLcdPixelHeight>:
  */
uint16_t ili9341_GetLcdPixelHeight(void)
{
  /* Return LCD PIXEL HEIGHT */
  return ILI9341_LCD_PIXEL_HEIGHT;
}
 8003512:	f44f 70a0 	mov.w	r0, #320	@ 0x140
 8003516:	4770      	bx	lr

08003518 <ili9341_DisplayOn>:
  LCD_IO_WriteReg(LCD_Reg);
 8003518:	2029      	movs	r0, #41	@ 0x29
 800351a:	f7fe be29 	b.w	8002170 <LCD_IO_WriteReg>

0800351e <ili9341_DisplayOff>:
 800351e:	2028      	movs	r0, #40	@ 0x28
 8003520:	f7fe be26 	b.w	8002170 <LCD_IO_WriteReg>

08003524 <ili9341_Init>:
{
 8003524:	b508      	push	{r3, lr}
  LCD_IO_Init();
 8003526:	f7fe fdf7 	bl	8002118 <LCD_IO_Init>
  LCD_IO_WriteReg(LCD_Reg);
 800352a:	20ca      	movs	r0, #202	@ 0xca
 800352c:	f7fe fe20 	bl	8002170 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8003530:	20c3      	movs	r0, #195	@ 0xc3
 8003532:	f7fe fe01 	bl	8002138 <LCD_IO_WriteData>
 8003536:	2008      	movs	r0, #8
 8003538:	f7fe fdfe 	bl	8002138 <LCD_IO_WriteData>
 800353c:	2050      	movs	r0, #80	@ 0x50
 800353e:	f7fe fdfb 	bl	8002138 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8003542:	20cf      	movs	r0, #207	@ 0xcf
 8003544:	f7fe fe14 	bl	8002170 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8003548:	2000      	movs	r0, #0
 800354a:	f7fe fdf5 	bl	8002138 <LCD_IO_WriteData>
 800354e:	20c1      	movs	r0, #193	@ 0xc1
 8003550:	f7fe fdf2 	bl	8002138 <LCD_IO_WriteData>
 8003554:	2030      	movs	r0, #48	@ 0x30
 8003556:	f7fe fdef 	bl	8002138 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800355a:	20ed      	movs	r0, #237	@ 0xed
 800355c:	f7fe fe08 	bl	8002170 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8003560:	2064      	movs	r0, #100	@ 0x64
 8003562:	f7fe fde9 	bl	8002138 <LCD_IO_WriteData>
 8003566:	2003      	movs	r0, #3
 8003568:	f7fe fde6 	bl	8002138 <LCD_IO_WriteData>
 800356c:	2012      	movs	r0, #18
 800356e:	f7fe fde3 	bl	8002138 <LCD_IO_WriteData>
 8003572:	2081      	movs	r0, #129	@ 0x81
 8003574:	f7fe fde0 	bl	8002138 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8003578:	20e8      	movs	r0, #232	@ 0xe8
 800357a:	f7fe fdf9 	bl	8002170 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800357e:	2085      	movs	r0, #133	@ 0x85
 8003580:	f7fe fdda 	bl	8002138 <LCD_IO_WriteData>
 8003584:	2000      	movs	r0, #0
 8003586:	f7fe fdd7 	bl	8002138 <LCD_IO_WriteData>
 800358a:	2078      	movs	r0, #120	@ 0x78
 800358c:	f7fe fdd4 	bl	8002138 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8003590:	20cb      	movs	r0, #203	@ 0xcb
 8003592:	f7fe fded 	bl	8002170 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8003596:	2039      	movs	r0, #57	@ 0x39
 8003598:	f7fe fdce 	bl	8002138 <LCD_IO_WriteData>
 800359c:	202c      	movs	r0, #44	@ 0x2c
 800359e:	f7fe fdcb 	bl	8002138 <LCD_IO_WriteData>
 80035a2:	2000      	movs	r0, #0
 80035a4:	f7fe fdc8 	bl	8002138 <LCD_IO_WriteData>
 80035a8:	2034      	movs	r0, #52	@ 0x34
 80035aa:	f7fe fdc5 	bl	8002138 <LCD_IO_WriteData>
 80035ae:	2002      	movs	r0, #2
 80035b0:	f7fe fdc2 	bl	8002138 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80035b4:	20f7      	movs	r0, #247	@ 0xf7
 80035b6:	f7fe fddb 	bl	8002170 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80035ba:	2020      	movs	r0, #32
 80035bc:	f7fe fdbc 	bl	8002138 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80035c0:	20ea      	movs	r0, #234	@ 0xea
 80035c2:	f7fe fdd5 	bl	8002170 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80035c6:	2000      	movs	r0, #0
 80035c8:	f7fe fdb6 	bl	8002138 <LCD_IO_WriteData>
 80035cc:	2000      	movs	r0, #0
 80035ce:	f7fe fdb3 	bl	8002138 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80035d2:	20b1      	movs	r0, #177	@ 0xb1
 80035d4:	f7fe fdcc 	bl	8002170 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80035d8:	2000      	movs	r0, #0
 80035da:	f7fe fdad 	bl	8002138 <LCD_IO_WriteData>
 80035de:	201b      	movs	r0, #27
 80035e0:	f7fe fdaa 	bl	8002138 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80035e4:	20b6      	movs	r0, #182	@ 0xb6
 80035e6:	f7fe fdc3 	bl	8002170 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80035ea:	200a      	movs	r0, #10
 80035ec:	f7fe fda4 	bl	8002138 <LCD_IO_WriteData>
 80035f0:	20a2      	movs	r0, #162	@ 0xa2
 80035f2:	f7fe fda1 	bl	8002138 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80035f6:	20c0      	movs	r0, #192	@ 0xc0
 80035f8:	f7fe fdba 	bl	8002170 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80035fc:	2010      	movs	r0, #16
 80035fe:	f7fe fd9b 	bl	8002138 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8003602:	20c1      	movs	r0, #193	@ 0xc1
 8003604:	f7fe fdb4 	bl	8002170 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8003608:	2010      	movs	r0, #16
 800360a:	f7fe fd95 	bl	8002138 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800360e:	20c5      	movs	r0, #197	@ 0xc5
 8003610:	f7fe fdae 	bl	8002170 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8003614:	2045      	movs	r0, #69	@ 0x45
 8003616:	f7fe fd8f 	bl	8002138 <LCD_IO_WriteData>
 800361a:	2015      	movs	r0, #21
 800361c:	f7fe fd8c 	bl	8002138 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8003620:	20c7      	movs	r0, #199	@ 0xc7
 8003622:	f7fe fda5 	bl	8002170 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8003626:	2090      	movs	r0, #144	@ 0x90
 8003628:	f7fe fd86 	bl	8002138 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800362c:	2036      	movs	r0, #54	@ 0x36
 800362e:	f7fe fd9f 	bl	8002170 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8003632:	20c8      	movs	r0, #200	@ 0xc8
 8003634:	f7fe fd80 	bl	8002138 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8003638:	20f2      	movs	r0, #242	@ 0xf2
 800363a:	f7fe fd99 	bl	8002170 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800363e:	2000      	movs	r0, #0
 8003640:	f7fe fd7a 	bl	8002138 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8003644:	20b0      	movs	r0, #176	@ 0xb0
 8003646:	f7fe fd93 	bl	8002170 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800364a:	20c2      	movs	r0, #194	@ 0xc2
 800364c:	f7fe fd74 	bl	8002138 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8003650:	20b6      	movs	r0, #182	@ 0xb6
 8003652:	f7fe fd8d 	bl	8002170 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8003656:	200a      	movs	r0, #10
 8003658:	f7fe fd6e 	bl	8002138 <LCD_IO_WriteData>
 800365c:	20a7      	movs	r0, #167	@ 0xa7
 800365e:	f7fe fd6b 	bl	8002138 <LCD_IO_WriteData>
 8003662:	2027      	movs	r0, #39	@ 0x27
 8003664:	f7fe fd68 	bl	8002138 <LCD_IO_WriteData>
 8003668:	2004      	movs	r0, #4
 800366a:	f7fe fd65 	bl	8002138 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800366e:	202a      	movs	r0, #42	@ 0x2a
 8003670:	f7fe fd7e 	bl	8002170 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8003674:	2000      	movs	r0, #0
 8003676:	f7fe fd5f 	bl	8002138 <LCD_IO_WriteData>
 800367a:	2000      	movs	r0, #0
 800367c:	f7fe fd5c 	bl	8002138 <LCD_IO_WriteData>
 8003680:	2000      	movs	r0, #0
 8003682:	f7fe fd59 	bl	8002138 <LCD_IO_WriteData>
 8003686:	20ef      	movs	r0, #239	@ 0xef
 8003688:	f7fe fd56 	bl	8002138 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800368c:	202b      	movs	r0, #43	@ 0x2b
 800368e:	f7fe fd6f 	bl	8002170 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8003692:	2000      	movs	r0, #0
 8003694:	f7fe fd50 	bl	8002138 <LCD_IO_WriteData>
 8003698:	2000      	movs	r0, #0
 800369a:	f7fe fd4d 	bl	8002138 <LCD_IO_WriteData>
 800369e:	2001      	movs	r0, #1
 80036a0:	f7fe fd4a 	bl	8002138 <LCD_IO_WriteData>
 80036a4:	203f      	movs	r0, #63	@ 0x3f
 80036a6:	f7fe fd47 	bl	8002138 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80036aa:	20f6      	movs	r0, #246	@ 0xf6
 80036ac:	f7fe fd60 	bl	8002170 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80036b0:	2001      	movs	r0, #1
 80036b2:	f7fe fd41 	bl	8002138 <LCD_IO_WriteData>
 80036b6:	2000      	movs	r0, #0
 80036b8:	f7fe fd3e 	bl	8002138 <LCD_IO_WriteData>
 80036bc:	2006      	movs	r0, #6
 80036be:	f7fe fd3b 	bl	8002138 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80036c2:	202c      	movs	r0, #44	@ 0x2c
 80036c4:	f7fe fd54 	bl	8002170 <LCD_IO_WriteReg>
  LCD_Delay(200);
 80036c8:	20c8      	movs	r0, #200	@ 0xc8
 80036ca:	f7fe fd9f 	bl	800220c <LCD_Delay>
  LCD_IO_WriteReg(LCD_Reg);
 80036ce:	2026      	movs	r0, #38	@ 0x26
 80036d0:	f7fe fd4e 	bl	8002170 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80036d4:	2001      	movs	r0, #1
 80036d6:	f7fe fd2f 	bl	8002138 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80036da:	20e0      	movs	r0, #224	@ 0xe0
 80036dc:	f7fe fd48 	bl	8002170 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80036e0:	200f      	movs	r0, #15
 80036e2:	f7fe fd29 	bl	8002138 <LCD_IO_WriteData>
 80036e6:	2029      	movs	r0, #41	@ 0x29
 80036e8:	f7fe fd26 	bl	8002138 <LCD_IO_WriteData>
 80036ec:	2024      	movs	r0, #36	@ 0x24
 80036ee:	f7fe fd23 	bl	8002138 <LCD_IO_WriteData>
 80036f2:	200c      	movs	r0, #12
 80036f4:	f7fe fd20 	bl	8002138 <LCD_IO_WriteData>
 80036f8:	200e      	movs	r0, #14
 80036fa:	f7fe fd1d 	bl	8002138 <LCD_IO_WriteData>
 80036fe:	2009      	movs	r0, #9
 8003700:	f7fe fd1a 	bl	8002138 <LCD_IO_WriteData>
 8003704:	204e      	movs	r0, #78	@ 0x4e
 8003706:	f7fe fd17 	bl	8002138 <LCD_IO_WriteData>
 800370a:	2078      	movs	r0, #120	@ 0x78
 800370c:	f7fe fd14 	bl	8002138 <LCD_IO_WriteData>
 8003710:	203c      	movs	r0, #60	@ 0x3c
 8003712:	f7fe fd11 	bl	8002138 <LCD_IO_WriteData>
 8003716:	2009      	movs	r0, #9
 8003718:	f7fe fd0e 	bl	8002138 <LCD_IO_WriteData>
 800371c:	2013      	movs	r0, #19
 800371e:	f7fe fd0b 	bl	8002138 <LCD_IO_WriteData>
 8003722:	2005      	movs	r0, #5
 8003724:	f7fe fd08 	bl	8002138 <LCD_IO_WriteData>
 8003728:	2017      	movs	r0, #23
 800372a:	f7fe fd05 	bl	8002138 <LCD_IO_WriteData>
 800372e:	2011      	movs	r0, #17
 8003730:	f7fe fd02 	bl	8002138 <LCD_IO_WriteData>
 8003734:	2000      	movs	r0, #0
 8003736:	f7fe fcff 	bl	8002138 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800373a:	20e1      	movs	r0, #225	@ 0xe1
 800373c:	f7fe fd18 	bl	8002170 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8003740:	2000      	movs	r0, #0
 8003742:	f7fe fcf9 	bl	8002138 <LCD_IO_WriteData>
 8003746:	2016      	movs	r0, #22
 8003748:	f7fe fcf6 	bl	8002138 <LCD_IO_WriteData>
 800374c:	201b      	movs	r0, #27
 800374e:	f7fe fcf3 	bl	8002138 <LCD_IO_WriteData>
 8003752:	2004      	movs	r0, #4
 8003754:	f7fe fcf0 	bl	8002138 <LCD_IO_WriteData>
 8003758:	2011      	movs	r0, #17
 800375a:	f7fe fced 	bl	8002138 <LCD_IO_WriteData>
 800375e:	2007      	movs	r0, #7
 8003760:	f7fe fcea 	bl	8002138 <LCD_IO_WriteData>
 8003764:	2031      	movs	r0, #49	@ 0x31
 8003766:	f7fe fce7 	bl	8002138 <LCD_IO_WriteData>
 800376a:	2033      	movs	r0, #51	@ 0x33
 800376c:	f7fe fce4 	bl	8002138 <LCD_IO_WriteData>
 8003770:	2042      	movs	r0, #66	@ 0x42
 8003772:	f7fe fce1 	bl	8002138 <LCD_IO_WriteData>
 8003776:	2005      	movs	r0, #5
 8003778:	f7fe fcde 	bl	8002138 <LCD_IO_WriteData>
 800377c:	200c      	movs	r0, #12
 800377e:	f7fe fcdb 	bl	8002138 <LCD_IO_WriteData>
 8003782:	200a      	movs	r0, #10
 8003784:	f7fe fcd8 	bl	8002138 <LCD_IO_WriteData>
 8003788:	2028      	movs	r0, #40	@ 0x28
 800378a:	f7fe fcd5 	bl	8002138 <LCD_IO_WriteData>
 800378e:	202f      	movs	r0, #47	@ 0x2f
 8003790:	f7fe fcd2 	bl	8002138 <LCD_IO_WriteData>
 8003794:	200f      	movs	r0, #15
 8003796:	f7fe fccf 	bl	8002138 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800379a:	2011      	movs	r0, #17
 800379c:	f7fe fce8 	bl	8002170 <LCD_IO_WriteReg>
  LCD_Delay(200);
 80037a0:	20c8      	movs	r0, #200	@ 0xc8
 80037a2:	f7fe fd33 	bl	800220c <LCD_Delay>
  LCD_IO_WriteReg(LCD_Reg);
 80037a6:	2029      	movs	r0, #41	@ 0x29
 80037a8:	f7fe fce2 	bl	8002170 <LCD_IO_WriteReg>
}
 80037ac:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  LCD_IO_WriteReg(LCD_Reg);
 80037b0:	202c      	movs	r0, #44	@ 0x2c
 80037b2:	f7fe bcdd 	b.w	8002170 <LCD_IO_WriteReg>

080037b6 <ili9341_ReadID>:
{
 80037b6:	b508      	push	{r3, lr}
  LCD_IO_Init();
 80037b8:	f7fe fcae 	bl	8002118 <LCD_IO_Init>
  return (LCD_IO_ReadData(RegValue, ReadSize));
 80037bc:	2103      	movs	r1, #3
 80037be:	20d3      	movs	r0, #211	@ 0xd3
 80037c0:	f7fe fcf2 	bl	80021a8 <LCD_IO_ReadData>
}
 80037c4:	b280      	uxth	r0, r0
 80037c6:	bd08      	pop	{r3, pc}

080037c8 <stmpe811_Reset>:
  * @brief  Reset the stmpe811 by Software.
  * @param  DeviceAddr: Device address on communication Bus.  
  * @retval None
  */
void stmpe811_Reset(uint16_t DeviceAddr)
{
 80037c8:	b510      	push	{r4, lr}
  /* Power Down the stmpe811 */  
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL1, 2);
 80037ca:	b2c4      	uxtb	r4, r0
 80037cc:	2202      	movs	r2, #2
 80037ce:	2103      	movs	r1, #3
 80037d0:	4620      	mov	r0, r4
 80037d2:	f7fe fc57 	bl	8002084 <IOE_Write>

  /* Wait for a delay to ensure registers erasing */
  IOE_Delay(10); 
 80037d6:	200a      	movs	r0, #10
 80037d8:	f7fe fc9c 	bl	8002114 <IOE_Delay>
  
  /* Power On the Codec after the power off => all registers are reinitialized */
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL1, 0);
 80037dc:	4620      	mov	r0, r4
 80037de:	2200      	movs	r2, #0
 80037e0:	2103      	movs	r1, #3
 80037e2:	f7fe fc4f 	bl	8002084 <IOE_Write>
  
  /* Wait for a delay to ensure registers erasing */
  IOE_Delay(2); 
}
 80037e6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  IOE_Delay(2); 
 80037ea:	2002      	movs	r0, #2
 80037ec:	f7fe bc92 	b.w	8002114 <IOE_Delay>

080037f0 <stmpe811_ReadID>:
  * @brief  Read the stmpe811 IO Expander device ID.
  * @param  DeviceAddr: Device address on communication Bus.  
  * @retval The Device ID (two bytes).
  */
uint16_t stmpe811_ReadID(uint16_t DeviceAddr)
{
 80037f0:	b538      	push	{r3, r4, r5, lr}
 80037f2:	4604      	mov	r4, r0
  /* Initialize IO BUS layer */
  IOE_Init(); 
  
  /* Return the device ID value */
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 80037f4:	b2e4      	uxtb	r4, r4
  IOE_Init(); 
 80037f6:	f7fe fc43 	bl	8002080 <IOE_Init>
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 80037fa:	2100      	movs	r1, #0
 80037fc:	4620      	mov	r0, r4
 80037fe:	f7fe fc59 	bl	80020b4 <IOE_Read>
          (IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_MSB)));
 8003802:	2101      	movs	r1, #1
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 8003804:	4605      	mov	r5, r0
          (IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_MSB)));
 8003806:	4620      	mov	r0, r4
 8003808:	f7fe fc54 	bl	80020b4 <IOE_Read>
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 800380c:	ea40 2005 	orr.w	r0, r0, r5, lsl #8
}
 8003810:	b280      	uxth	r0, r0
 8003812:	bd38      	pop	{r3, r4, r5, pc}

08003814 <stmpe811_TS_DetectTouch>:
  * @brief  Return if there is touch detected or not.
  * @param  DeviceAddr: Device address on communication Bus.
  * @retval Touch detected state.
  */
uint8_t stmpe811_TS_DetectTouch(uint16_t DeviceAddr)
{
 8003814:	b510      	push	{r4, lr}
  uint8_t state;
  uint8_t ret = 0;
  
  state = ((IOE_Read(DeviceAddr, STMPE811_REG_TSC_CTRL) & (uint8_t)STMPE811_TS_CTRL_STATUS) == (uint8_t)0x80);
 8003816:	b2c4      	uxtb	r4, r0
 8003818:	2140      	movs	r1, #64	@ 0x40
 800381a:	4620      	mov	r0, r4
 800381c:	f7fe fc4a 	bl	80020b4 <IOE_Read>
  
  if(state > 0)
 8003820:	0603      	lsls	r3, r0, #24
 8003822:	d507      	bpl.n	8003834 <stmpe811_TS_DetectTouch+0x20>
  {
    if(IOE_Read(DeviceAddr, STMPE811_REG_FIFO_SIZE) > 0)
 8003824:	214c      	movs	r1, #76	@ 0x4c
 8003826:	4620      	mov	r0, r4
 8003828:	f7fe fc44 	bl	80020b4 <IOE_Read>
 800382c:	3800      	subs	r0, #0
 800382e:	bf18      	it	ne
 8003830:	2001      	movne	r0, #1
    /* Enable the FIFO again */
    IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
  }
  
  return ret;
}
 8003832:	bd10      	pop	{r4, pc}
    IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 8003834:	2201      	movs	r2, #1
 8003836:	214b      	movs	r1, #75	@ 0x4b
 8003838:	4620      	mov	r0, r4
 800383a:	f7fe fc23 	bl	8002084 <IOE_Write>
    IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
 800383e:	4620      	mov	r0, r4
 8003840:	2200      	movs	r2, #0
 8003842:	214b      	movs	r1, #75	@ 0x4b
 8003844:	f7fe fc1e 	bl	8002084 <IOE_Write>
  uint8_t ret = 0;
 8003848:	2000      	movs	r0, #0
 800384a:	e7f2      	b.n	8003832 <stmpe811_TS_DetectTouch+0x1e>

0800384c <stmpe811_TS_GetXY>:
  * @param  X: Pointer to X position value
  * @param  Y: Pointer to Y position value   
  * @retval None.
  */
void stmpe811_TS_GetXY(uint16_t DeviceAddr, uint16_t *X, uint16_t *Y)
{
 800384c:	b573      	push	{r0, r1, r4, r5, r6, lr}
  uint8_t  dataXYZ[4];
  uint32_t uldataXYZ;
  
  IOE_ReadMultiple(DeviceAddr, STMPE811_REG_TSC_DATA_NON_INC, dataXYZ, sizeof(dataXYZ)) ;
 800384e:	2304      	movs	r3, #4
 8003850:	b2c4      	uxtb	r4, r0
{
 8003852:	460e      	mov	r6, r1
 8003854:	4615      	mov	r5, r2
  IOE_ReadMultiple(DeviceAddr, STMPE811_REG_TSC_DATA_NON_INC, dataXYZ, sizeof(dataXYZ)) ;
 8003856:	21d7      	movs	r1, #215	@ 0xd7
 8003858:	eb0d 0203 	add.w	r2, sp, r3
 800385c:	4620      	mov	r0, r4
 800385e:	f7fe fc43 	bl	80020e8 <IOE_ReadMultiple>
  
  /* Calculate positions values */
  uldataXYZ = (dataXYZ[0] << 24)|(dataXYZ[1] << 16)|(dataXYZ[2] << 8)|(dataXYZ[3] << 0);     
 8003862:	9b01      	ldr	r3, [sp, #4]
 8003864:	ba1b      	rev	r3, r3
  *X = (uldataXYZ >> 20) & 0x00000FFF;     
 8003866:	0d1a      	lsrs	r2, r3, #20
  *Y = (uldataXYZ >>  8) & 0x00000FFF;     
 8003868:	f3c3 230b 	ubfx	r3, r3, #8, #12
  *X = (uldataXYZ >> 20) & 0x00000FFF;     
 800386c:	8032      	strh	r2, [r6, #0]
  
  /* Reset FIFO */
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 800386e:	4620      	mov	r0, r4
  *Y = (uldataXYZ >>  8) & 0x00000FFF;     
 8003870:	802b      	strh	r3, [r5, #0]
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 8003872:	2201      	movs	r2, #1
 8003874:	214b      	movs	r1, #75	@ 0x4b
 8003876:	f7fe fc05 	bl	8002084 <IOE_Write>
  /* Enable the FIFO again */
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
 800387a:	2200      	movs	r2, #0
 800387c:	214b      	movs	r1, #75	@ 0x4b
 800387e:	4620      	mov	r0, r4
 8003880:	f7fe fc00 	bl	8002084 <IOE_Write>
}
 8003884:	b002      	add	sp, #8
 8003886:	bd70      	pop	{r4, r5, r6, pc}

08003888 <stmpe811_Init>:
{
 8003888:	b510      	push	{r4, lr}
  uint8_t idx = 0;
  
  /* Check all the registered instances */
  for(idx = 0; idx < STMPE811_MAX_INSTANCE ; idx ++)
  {
    if(stmpe811[idx] == DeviceAddr)
 800388a:	4a0a      	ldr	r2, [pc, #40]	@ (80038b4 <stmpe811_Init+0x2c>)
 800388c:	7813      	ldrb	r3, [r2, #0]
 800388e:	4298      	cmp	r0, r3
{
 8003890:	4604      	mov	r4, r0
    if(stmpe811[idx] == DeviceAddr)
 8003892:	d00d      	beq.n	80038b0 <stmpe811_Init+0x28>
 8003894:	7851      	ldrb	r1, [r2, #1]
 8003896:	4288      	cmp	r0, r1
 8003898:	d00a      	beq.n	80038b0 <stmpe811_Init+0x28>
 800389a:	b10b      	cbz	r3, 80038a0 <stmpe811_Init+0x18>
 800389c:	b941      	cbnz	r1, 80038b0 <stmpe811_Init+0x28>
  for(idx = 0; idx < STMPE811_MAX_INSTANCE ; idx ++)
 800389e:	2301      	movs	r3, #1
      stmpe811[empty] = DeviceAddr;
 80038a0:	54d4      	strb	r4, [r2, r3]
      IOE_Init(); 
 80038a2:	f7fe fbed 	bl	8002080 <IOE_Init>
      stmpe811_Reset(DeviceAddr);
 80038a6:	4620      	mov	r0, r4
}
 80038a8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
      stmpe811_Reset(DeviceAddr);
 80038ac:	f7ff bf8c 	b.w	80037c8 <stmpe811_Reset>
}
 80038b0:	bd10      	pop	{r4, pc}
 80038b2:	bf00      	nop
 80038b4:	200031c0 	.word	0x200031c0

080038b8 <stmpe811_EnableGlobalIT>:
{
 80038b8:	b510      	push	{r4, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_CTRL);
 80038ba:	b2c4      	uxtb	r4, r0
 80038bc:	2109      	movs	r1, #9
 80038be:	4620      	mov	r0, r4
 80038c0:	f7fe fbf8 	bl	80020b4 <IOE_Read>
  tmp |= (uint8_t)STMPE811_GIT_EN;
 80038c4:	f040 0201 	orr.w	r2, r0, #1
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp); 
 80038c8:	b2d2      	uxtb	r2, r2
 80038ca:	4620      	mov	r0, r4
 80038cc:	2109      	movs	r1, #9
}
 80038ce:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp); 
 80038d2:	f7fe bbd7 	b.w	8002084 <IOE_Write>

080038d6 <stmpe811_DisableGlobalIT>:
{
 80038d6:	b510      	push	{r4, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_CTRL);
 80038d8:	b2c4      	uxtb	r4, r0
 80038da:	2109      	movs	r1, #9
 80038dc:	4620      	mov	r0, r4
 80038de:	f7fe fbe9 	bl	80020b4 <IOE_Read>
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp);
 80038e2:	2109      	movs	r1, #9
 80038e4:	f000 02fe 	and.w	r2, r0, #254	@ 0xfe
 80038e8:	4620      	mov	r0, r4
}
 80038ea:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp);
 80038ee:	f7fe bbc9 	b.w	8002084 <IOE_Write>

080038f2 <stmpe811_EnableITSource>:
{
 80038f2:	b538      	push	{r3, r4, r5, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 80038f4:	b2c4      	uxtb	r4, r0
{
 80038f6:	460d      	mov	r5, r1
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 80038f8:	4620      	mov	r0, r4
 80038fa:	210a      	movs	r1, #10
 80038fc:	f7fe fbda 	bl	80020b4 <IOE_Read>
  tmp |= Source; 
 8003900:	ea40 0205 	orr.w	r2, r0, r5
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 8003904:	b2d2      	uxtb	r2, r2
 8003906:	4620      	mov	r0, r4
 8003908:	210a      	movs	r1, #10
}
 800390a:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 800390e:	f7fe bbb9 	b.w	8002084 <IOE_Write>

08003912 <stmpe811_TS_EnableIT>:
{
 8003912:	b510      	push	{r4, lr}
 8003914:	4604      	mov	r4, r0
  IOE_ITConfig();
 8003916:	f7fe fbb4 	bl	8002082 <IOE_ITConfig>
  stmpe811_EnableITSource(DeviceAddr, STMPE811_TS_IT); 
 800391a:	4620      	mov	r0, r4
 800391c:	211f      	movs	r1, #31
 800391e:	f7ff ffe8 	bl	80038f2 <stmpe811_EnableITSource>
  stmpe811_EnableGlobalIT(DeviceAddr);
 8003922:	4620      	mov	r0, r4
}
 8003924:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  stmpe811_EnableGlobalIT(DeviceAddr);
 8003928:	f7ff bfc6 	b.w	80038b8 <stmpe811_EnableGlobalIT>

0800392c <stmpe811_DisableITSource>:
{
 800392c:	b538      	push	{r3, r4, r5, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 800392e:	b2c4      	uxtb	r4, r0
{
 8003930:	460d      	mov	r5, r1
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 8003932:	4620      	mov	r0, r4
 8003934:	210a      	movs	r1, #10
 8003936:	f7fe fbbd 	bl	80020b4 <IOE_Read>
  tmp &= ~Source; 
 800393a:	ea20 0205 	bic.w	r2, r0, r5
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 800393e:	b2d2      	uxtb	r2, r2
 8003940:	4620      	mov	r0, r4
 8003942:	210a      	movs	r1, #10
}
 8003944:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 8003948:	f7fe bb9c 	b.w	8002084 <IOE_Write>

0800394c <stmpe811_TS_DisableIT>:
{
 800394c:	b510      	push	{r4, lr}
 800394e:	4604      	mov	r4, r0
  stmpe811_DisableGlobalIT(DeviceAddr);
 8003950:	f7ff ffc1 	bl	80038d6 <stmpe811_DisableGlobalIT>
  stmpe811_DisableITSource(DeviceAddr, STMPE811_TS_IT); 
 8003954:	4620      	mov	r0, r4
 8003956:	211f      	movs	r1, #31
}
 8003958:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  stmpe811_DisableITSource(DeviceAddr, STMPE811_TS_IT); 
 800395c:	f7ff bfe6 	b.w	800392c <stmpe811_DisableITSource>

08003960 <stmpe811_ReadGITStatus>:
{
 8003960:	b510      	push	{r4, lr}
  return((IOE_Read(DeviceAddr, STMPE811_REG_INT_STA) & Source));
 8003962:	b2c0      	uxtb	r0, r0
{
 8003964:	460c      	mov	r4, r1
  return((IOE_Read(DeviceAddr, STMPE811_REG_INT_STA) & Source));
 8003966:	210b      	movs	r1, #11
 8003968:	f7fe fba4 	bl	80020b4 <IOE_Read>
}
 800396c:	4020      	ands	r0, r4
 800396e:	bd10      	pop	{r4, pc}

08003970 <stmpe811_TS_ITStatus>:
  return(stmpe811_ReadGITStatus(DeviceAddr, STMPE811_TS_IT));
 8003970:	211f      	movs	r1, #31
 8003972:	f7ff bff5 	b.w	8003960 <stmpe811_ReadGITStatus>

08003976 <stmpe811_ClearGlobalIT>:
{
 8003976:	460a      	mov	r2, r1
  IOE_Write(DeviceAddr, STMPE811_REG_INT_STA, Source);
 8003978:	b2c0      	uxtb	r0, r0
 800397a:	210b      	movs	r1, #11
 800397c:	f7fe bb82 	b.w	8002084 <IOE_Write>

08003980 <stmpe811_TS_ClearIT>:
  stmpe811_ClearGlobalIT(DeviceAddr, STMPE811_TS_IT);
 8003980:	211f      	movs	r1, #31
 8003982:	f7ff bff8 	b.w	8003976 <stmpe811_ClearGlobalIT>

08003986 <stmpe811_IO_EnableAF>:
{
 8003986:	b538      	push	{r3, r4, r5, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_IO_AF);
 8003988:	b2c4      	uxtb	r4, r0
{
 800398a:	460d      	mov	r5, r1
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_IO_AF);
 800398c:	4620      	mov	r0, r4
 800398e:	2117      	movs	r1, #23
 8003990:	f7fe fb90 	bl	80020b4 <IOE_Read>
  tmp &= ~(uint8_t)IO_Pin;   
 8003994:	ea20 0205 	bic.w	r2, r0, r5
  IOE_Write(DeviceAddr, STMPE811_REG_IO_AF, tmp); 
 8003998:	b2d2      	uxtb	r2, r2
 800399a:	4620      	mov	r0, r4
 800399c:	2117      	movs	r1, #23
}
 800399e:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_IO_AF, tmp); 
 80039a2:	f7fe bb6f 	b.w	8002084 <IOE_Write>

080039a6 <stmpe811_TS_Start>:
{
 80039a6:	b570      	push	{r4, r5, r6, lr}
  mode = IOE_Read(DeviceAddr, STMPE811_REG_SYS_CTRL2);
 80039a8:	b2c4      	uxtb	r4, r0
{
 80039aa:	4606      	mov	r6, r0
  mode = IOE_Read(DeviceAddr, STMPE811_REG_SYS_CTRL2);
 80039ac:	2104      	movs	r1, #4
 80039ae:	4620      	mov	r0, r4
 80039b0:	f7fe fb80 	bl	80020b4 <IOE_Read>
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL2, mode); 
 80039b4:	2104      	movs	r1, #4
 80039b6:	f000 02fb 	and.w	r2, r0, #251	@ 0xfb
  mode = IOE_Read(DeviceAddr, STMPE811_REG_SYS_CTRL2);
 80039ba:	4605      	mov	r5, r0
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL2, mode); 
 80039bc:	4620      	mov	r0, r4
 80039be:	f7fe fb61 	bl	8002084 <IOE_Write>
  stmpe811_IO_EnableAF(DeviceAddr, STMPE811_TOUCH_IO_ALL);
 80039c2:	4630      	mov	r0, r6
 80039c4:	21f0      	movs	r1, #240	@ 0xf0
 80039c6:	f7ff ffde 	bl	8003986 <stmpe811_IO_EnableAF>
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL2, mode); 
 80039ca:	f005 02f8 	and.w	r2, r5, #248	@ 0xf8
 80039ce:	4620      	mov	r0, r4
 80039d0:	2104      	movs	r1, #4
 80039d2:	f7fe fb57 	bl	8002084 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_ADC_CTRL1, 0x49);
 80039d6:	2249      	movs	r2, #73	@ 0x49
 80039d8:	2120      	movs	r1, #32
 80039da:	4620      	mov	r0, r4
 80039dc:	f7fe fb52 	bl	8002084 <IOE_Write>
  IOE_Delay(2); 
 80039e0:	2002      	movs	r0, #2
 80039e2:	f7fe fb97 	bl	8002114 <IOE_Delay>
  IOE_Write(DeviceAddr, STMPE811_REG_ADC_CTRL2, 0x01);
 80039e6:	4620      	mov	r0, r4
 80039e8:	2201      	movs	r2, #1
 80039ea:	2121      	movs	r1, #33	@ 0x21
 80039ec:	f7fe fb4a 	bl	8002084 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_CFG, 0x9A); 
 80039f0:	4620      	mov	r0, r4
 80039f2:	229a      	movs	r2, #154	@ 0x9a
 80039f4:	2141      	movs	r1, #65	@ 0x41
 80039f6:	f7fe fb45 	bl	8002084 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_TH, 0x01);
 80039fa:	4620      	mov	r0, r4
 80039fc:	2201      	movs	r2, #1
 80039fe:	214a      	movs	r1, #74	@ 0x4a
 8003a00:	f7fe fb40 	bl	8002084 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 8003a04:	4620      	mov	r0, r4
 8003a06:	2201      	movs	r2, #1
 8003a08:	214b      	movs	r1, #75	@ 0x4b
 8003a0a:	f7fe fb3b 	bl	8002084 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
 8003a0e:	4620      	mov	r0, r4
 8003a10:	2200      	movs	r2, #0
 8003a12:	214b      	movs	r1, #75	@ 0x4b
 8003a14:	f7fe fb36 	bl	8002084 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_FRACT_XYZ, 0x01);
 8003a18:	4620      	mov	r0, r4
 8003a1a:	2201      	movs	r2, #1
 8003a1c:	2156      	movs	r1, #86	@ 0x56
 8003a1e:	f7fe fb31 	bl	8002084 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_I_DRIVE, 0x01);
 8003a22:	4620      	mov	r0, r4
 8003a24:	2201      	movs	r2, #1
 8003a26:	2158      	movs	r1, #88	@ 0x58
 8003a28:	f7fe fb2c 	bl	8002084 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_CTRL, 0x01);
 8003a2c:	4620      	mov	r0, r4
 8003a2e:	2201      	movs	r2, #1
 8003a30:	2140      	movs	r1, #64	@ 0x40
 8003a32:	f7fe fb27 	bl	8002084 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_INT_STA, 0xFF);
 8003a36:	4620      	mov	r0, r4
 8003a38:	22ff      	movs	r2, #255	@ 0xff
 8003a3a:	210b      	movs	r1, #11
 8003a3c:	f7fe fb22 	bl	8002084 <IOE_Write>
}
 8003a40:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
  IOE_Delay(2); 
 8003a44:	2002      	movs	r0, #2
 8003a46:	f7fe bb65 	b.w	8002114 <IOE_Delay>
	...

08003a4c <SystemInit>:
  */
void SystemInit(void)
{
  /* FPU settings ------------------------------------------------------------*/
  #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
    SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 8003a4c:	4b05      	ldr	r3, [pc, #20]	@ (8003a64 <SystemInit+0x18>)
 8003a4e:	f8d3 2088 	ldr.w	r2, [r3, #136]	@ 0x88
 8003a52:	f442 0270 	orr.w	r2, r2, #15728640	@ 0xf00000
 8003a56:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88

  /* Configure the Vector Table location add offset address ------------------*/
#ifdef VECT_TAB_SRAM
  SCB->VTOR = SRAM_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
#else
  SCB->VTOR = FLASH_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
 8003a5a:	f04f 6200 	mov.w	r2, #134217728	@ 0x8000000
 8003a5e:	609a      	str	r2, [r3, #8]
#endif
}
 8003a60:	4770      	bx	lr
 8003a62:	bf00      	nop
 8003a64:	e000ed00 	.word	0xe000ed00

08003a68 <HAL_Init>:
  *         need to ensure that the SysTick time base is always set to 1 millisecond
  *         to have correct HAL operation.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_Init(void)
{
 8003a68:	b508      	push	{r3, lr}
  /* Configure Flash prefetch, Instruction cache, Data cache */ 
#if (INSTRUCTION_CACHE_ENABLE != 0U)
  __HAL_FLASH_INSTRUCTION_CACHE_ENABLE();
 8003a6a:	4b0b      	ldr	r3, [pc, #44]	@ (8003a98 <HAL_Init+0x30>)
 8003a6c:	681a      	ldr	r2, [r3, #0]
 8003a6e:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 8003a72:	601a      	str	r2, [r3, #0]
#endif /* INSTRUCTION_CACHE_ENABLE */

#if (DATA_CACHE_ENABLE != 0U)
  __HAL_FLASH_DATA_CACHE_ENABLE();
 8003a74:	681a      	ldr	r2, [r3, #0]
 8003a76:	f442 6280 	orr.w	r2, r2, #1024	@ 0x400
 8003a7a:	601a      	str	r2, [r3, #0]
#endif /* DATA_CACHE_ENABLE */

#if (PREFETCH_ENABLE != 0U)
  __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
 8003a7c:	681a      	ldr	r2, [r3, #0]
 8003a7e:	f442 7280 	orr.w	r2, r2, #256	@ 0x100
 8003a82:	601a      	str	r2, [r3, #0]
#endif /* PREFETCH_ENABLE */

  /* Set Interrupt Group Priority */
  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
 8003a84:	2003      	movs	r0, #3
 8003a86:	f000 f82f 	bl	8003ae8 <HAL_NVIC_SetPriorityGrouping>

  /* Use systick as time base source and configure 1ms tick (default clock after Reset is HSI) */
  HAL_InitTick(TICK_INT_PRIORITY);
 8003a8a:	2000      	movs	r0, #0
 8003a8c:	f7fe ff04 	bl	8002898 <HAL_InitTick>

  /* Init the low level hardware */
  HAL_MspInit();
 8003a90:	f7fe fcce 	bl	8002430 <HAL_MspInit>

  /* Return function status */
  return HAL_OK;
}
 8003a94:	2000      	movs	r0, #0
 8003a96:	bd08      	pop	{r3, pc}
 8003a98:	40023c00 	.word	0x40023c00

08003a9c <HAL_IncTick>:
  *      implementations in user file.
  * @retval None
  */
__weak void HAL_IncTick(void)
{
  uwTick += uwTickFreq;
 8003a9c:	4a03      	ldr	r2, [pc, #12]	@ (8003aac <HAL_IncTick+0x10>)
 8003a9e:	4b04      	ldr	r3, [pc, #16]	@ (8003ab0 <HAL_IncTick+0x14>)
 8003aa0:	6811      	ldr	r1, [r2, #0]
 8003aa2:	781b      	ldrb	r3, [r3, #0]
 8003aa4:	440b      	add	r3, r1
 8003aa6:	6013      	str	r3, [r2, #0]
}
 8003aa8:	4770      	bx	lr
 8003aaa:	bf00      	nop
 8003aac:	200031c4 	.word	0x200031c4
 8003ab0:	200000c8 	.word	0x200000c8

08003ab4 <HAL_GetTick>:
  *       implementations in user file.
  * @retval tick value
  */
__weak uint32_t HAL_GetTick(void)
{
  return uwTick;
 8003ab4:	4b01      	ldr	r3, [pc, #4]	@ (8003abc <HAL_GetTick+0x8>)
 8003ab6:	6818      	ldr	r0, [r3, #0]
}
 8003ab8:	4770      	bx	lr
 8003aba:	bf00      	nop
 8003abc:	200031c4 	.word	0x200031c4

08003ac0 <HAL_Delay>:
  *       implementations in user file.
  * @param Delay specifies the delay time length, in milliseconds.
  * @retval None
  */
__weak void HAL_Delay(uint32_t Delay)
{
 8003ac0:	b538      	push	{r3, r4, r5, lr}
 8003ac2:	4604      	mov	r4, r0
  uint32_t tickstart = HAL_GetTick();
 8003ac4:	f7ff fff6 	bl	8003ab4 <HAL_GetTick>
  uint32_t wait = Delay;

  /* Add a freq to guarantee minimum wait */
  if (wait < HAL_MAX_DELAY)
 8003ac8:	1c63      	adds	r3, r4, #1
  {
    wait += (uint32_t)(uwTickFreq);
 8003aca:	bf1c      	itt	ne
 8003acc:	4b05      	ldrne	r3, [pc, #20]	@ (8003ae4 <HAL_Delay+0x24>)
 8003ace:	781b      	ldrbne	r3, [r3, #0]
  uint32_t tickstart = HAL_GetTick();
 8003ad0:	4605      	mov	r5, r0
    wait += (uint32_t)(uwTickFreq);
 8003ad2:	bf18      	it	ne
 8003ad4:	18e4      	addne	r4, r4, r3
  }

  while((HAL_GetTick() - tickstart) < wait)
 8003ad6:	f7ff ffed 	bl	8003ab4 <HAL_GetTick>
 8003ada:	1b43      	subs	r3, r0, r5
 8003adc:	42a3      	cmp	r3, r4
 8003ade:	d3fa      	bcc.n	8003ad6 <HAL_Delay+0x16>
  {
  }
}
 8003ae0:	bd38      	pop	{r3, r4, r5, pc}
 8003ae2:	bf00      	nop
 8003ae4:	200000c8 	.word	0x200000c8

08003ae8 <HAL_NVIC_SetPriorityGrouping>:
  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
 8003ae8:	4907      	ldr	r1, [pc, #28]	@ (8003b08 <HAL_NVIC_SetPriorityGrouping+0x20>)
 8003aea:	68ca      	ldr	r2, [r1, #12]
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 8003aec:	f422 62e0 	bic.w	r2, r2, #1792	@ 0x700
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 8003af0:	0203      	lsls	r3, r0, #8
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 8003af2:	0412      	lsls	r2, r2, #16
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 8003af4:	f403 63e0 	and.w	r3, r3, #1792	@ 0x700
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 8003af8:	0c12      	lsrs	r2, r2, #16
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
 8003afa:	4313      	orrs	r3, r2
  reg_value  =  (reg_value                                   |
 8003afc:	f043 63bf 	orr.w	r3, r3, #100139008	@ 0x5f80000
 8003b00:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
  SCB->AIRCR =  reg_value;
 8003b04:	60cb      	str	r3, [r1, #12]
  /* Check the parameters */
  assert_param(IS_NVIC_PRIORITY_GROUP(PriorityGroup));
  
  /* Set the PRIGROUP[10:8] bits according to the PriorityGroup parameter value */
  NVIC_SetPriorityGrouping(PriorityGroup);
}
 8003b06:	4770      	bx	lr
 8003b08:	e000ed00 	.word	0xe000ed00

08003b0c <HAL_NVIC_SetPriority>:
  return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
 8003b0c:	4b16      	ldr	r3, [pc, #88]	@ (8003b68 <HAL_NVIC_SetPriority+0x5c>)
  *         This parameter can be a value between 0 and 15
  *         A lower priority value indicates a higher priority.          
  * @retval None
  */
void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
{ 
 8003b0e:	b530      	push	{r4, r5, lr}
 8003b10:	68dc      	ldr	r4, [r3, #12]
 8003b12:	f3c4 2402 	ubfx	r4, r4, #8, #3
{
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used          */
  uint32_t PreemptPriorityBits;
  uint32_t SubPriorityBits;

  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 8003b16:	f1c4 0307 	rsb	r3, r4, #7
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 8003b1a:	1d25      	adds	r5, r4, #4
  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 8003b1c:	2b04      	cmp	r3, #4
 8003b1e:	bf28      	it	cs
 8003b20:	2304      	movcs	r3, #4
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 8003b22:	2d06      	cmp	r5, #6

  return (
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8003b24:	f04f 35ff 	mov.w	r5, #4294967295
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 8003b28:	bf8c      	ite	hi
 8003b2a:	3c03      	subhi	r4, #3
 8003b2c:	2400      	movls	r4, #0
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8003b2e:	fa05 f303 	lsl.w	r3, r5, r3
 8003b32:	ea21 0303 	bic.w	r3, r1, r3
           ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
 8003b36:	40a5      	lsls	r5, r4
 8003b38:	ea22 0205 	bic.w	r2, r2, r5
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8003b3c:	40a3      	lsls	r3, r4
  if ((int32_t)(IRQn) >= 0)
 8003b3e:	2800      	cmp	r0, #0
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8003b40:	ea43 0302 	orr.w	r3, r3, r2
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8003b44:	bfac      	ite	ge
 8003b46:	f100 4060 	addge.w	r0, r0, #3758096384	@ 0xe0000000
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8003b4a:	4a08      	ldrlt	r2, [pc, #32]	@ (8003b6c <HAL_NVIC_SetPriority+0x60>)
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8003b4c:	ea4f 1303 	mov.w	r3, r3, lsl #4
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8003b50:	bfb8      	it	lt
 8003b52:	f000 000f 	andlt.w	r0, r0, #15
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8003b56:	b2db      	uxtb	r3, r3
 8003b58:	bfaa      	itet	ge
 8003b5a:	f500 4061 	addge.w	r0, r0, #57600	@ 0xe100
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8003b5e:	5413      	strblt	r3, [r2, r0]
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8003b60:	f880 3300 	strbge.w	r3, [r0, #768]	@ 0x300
  assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));
  
  prioritygroup = NVIC_GetPriorityGrouping();
  
  NVIC_SetPriority(IRQn, NVIC_EncodePriority(prioritygroup, PreemptPriority, SubPriority));
}
 8003b64:	bd30      	pop	{r4, r5, pc}
 8003b66:	bf00      	nop
 8003b68:	e000ed00 	.word	0xe000ed00
 8003b6c:	e000ed14 	.word	0xe000ed14

08003b70 <HAL_NVIC_EnableIRQ>:
  if ((int32_t)(IRQn) >= 0)
 8003b70:	2800      	cmp	r0, #0
 8003b72:	db07      	blt.n	8003b84 <HAL_NVIC_EnableIRQ+0x14>
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8003b74:	4a04      	ldr	r2, [pc, #16]	@ (8003b88 <HAL_NVIC_EnableIRQ+0x18>)
 8003b76:	0941      	lsrs	r1, r0, #5
 8003b78:	2301      	movs	r3, #1
 8003b7a:	f000 001f 	and.w	r0, r0, #31
 8003b7e:	4083      	lsls	r3, r0
 8003b80:	f842 3021 	str.w	r3, [r2, r1, lsl #2]
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
  
  /* Enable interrupt */
  NVIC_EnableIRQ(IRQn);
}
 8003b84:	4770      	bx	lr
 8003b86:	bf00      	nop
 8003b88:	e000e100 	.word	0xe000e100

08003b8c <HAL_CRC_Init>:
  *         parameters in the CRC_InitTypeDef and create the associated handle.
  * @param  hcrc CRC handle
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_CRC_Init(CRC_HandleTypeDef *hcrc)
{
 8003b8c:	b510      	push	{r4, lr}
  /* Check the CRC handle allocation */
  if (hcrc == NULL)
 8003b8e:	4604      	mov	r4, r0
 8003b90:	b150      	cbz	r0, 8003ba8 <HAL_CRC_Init+0x1c>
  }

  /* Check the parameters */
  assert_param(IS_CRC_ALL_INSTANCE(hcrc->Instance));

  if (hcrc->State == HAL_CRC_STATE_RESET)
 8003b92:	7943      	ldrb	r3, [r0, #5]
 8003b94:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
 8003b98:	b913      	cbnz	r3, 8003ba0 <HAL_CRC_Init+0x14>
  {
    /* Allocate lock resource and initialize it */
    hcrc->Lock = HAL_UNLOCKED;
 8003b9a:	7102      	strb	r2, [r0, #4]
    /* Init the low level hardware */
    HAL_CRC_MspInit(hcrc);
 8003b9c:	f7fe fc68 	bl	8002470 <HAL_CRC_MspInit>
  }

  /* Change CRC peripheral state */
  hcrc->State = HAL_CRC_STATE_READY;
 8003ba0:	2301      	movs	r3, #1
 8003ba2:	7163      	strb	r3, [r4, #5]

  /* Return function status */
  return HAL_OK;
 8003ba4:	2000      	movs	r0, #0
}
 8003ba6:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 8003ba8:	2001      	movs	r0, #1
 8003baa:	e7fc      	b.n	8003ba6 <HAL_CRC_Init+0x1a>

08003bac <HAL_DMA2D_Init>:
  * @param  hdma2d pointer to a DMA2D_HandleTypeDef structure that contains
  *                 the configuration information for the DMA2D.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA2D_Init(DMA2D_HandleTypeDef *hdma2d)
{
 8003bac:	b510      	push	{r4, lr}
  /* Check the DMA2D peripheral state */
  if (hdma2d == NULL)
 8003bae:	4604      	mov	r4, r0
 8003bb0:	b320      	cbz	r0, 8003bfc <HAL_DMA2D_Init+0x50>

    /* Init the low level hardware */
    hdma2d->MspInitCallback(hdma2d);
  }
#else
  if (hdma2d->State == HAL_DMA2D_STATE_RESET)
 8003bb2:	f890 3039 	ldrb.w	r3, [r0, #57]	@ 0x39
 8003bb6:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
 8003bba:	b91b      	cbnz	r3, 8003bc4 <HAL_DMA2D_Init+0x18>
  {
    /* Allocate lock resource and initialize it */
    hdma2d->Lock = HAL_UNLOCKED;
 8003bbc:	f880 2038 	strb.w	r2, [r0, #56]	@ 0x38
    /* Init the low level hardware */
    HAL_DMA2D_MspInit(hdma2d);
 8003bc0:	f7fe fc6e 	bl	80024a0 <HAL_DMA2D_MspInit>
  }
#endif /* (USE_HAL_DMA2D_REGISTER_CALLBACKS) */

  /* Change DMA2D peripheral state */
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
 8003bc4:	2302      	movs	r3, #2
 8003bc6:	f884 3039 	strb.w	r3, [r4, #57]	@ 0x39

  /* DMA2D CR register configuration -------------------------------------------*/
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE, hdma2d->Init.Mode);
 8003bca:	6823      	ldr	r3, [r4, #0]
 8003bcc:	6861      	ldr	r1, [r4, #4]
 8003bce:	681a      	ldr	r2, [r3, #0]
 8003bd0:	f422 3240 	bic.w	r2, r2, #196608	@ 0x30000
 8003bd4:	430a      	orrs	r2, r1
 8003bd6:	601a      	str	r2, [r3, #0]

  /* DMA2D OPFCCR register configuration ---------------------------------------*/
  MODIFY_REG(hdma2d->Instance->OPFCCR, DMA2D_OPFCCR_CM, hdma2d->Init.ColorMode);
 8003bd8:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 8003bda:	68a1      	ldr	r1, [r4, #8]
 8003bdc:	f022 0207 	bic.w	r2, r2, #7
 8003be0:	430a      	orrs	r2, r1
 8003be2:	635a      	str	r2, [r3, #52]	@ 0x34

  /* DMA2D OOR register configuration ------------------------------------------*/
  MODIFY_REG(hdma2d->Instance->OOR, DMA2D_OOR_LO, hdma2d->Init.OutputOffset);
 8003be4:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 8003be6:	68e1      	ldr	r1, [r4, #12]
 8003be8:	f36f 020d 	bfc	r2, #0, #14
 8003bec:	430a      	orrs	r2, r1
 8003bee:	641a      	str	r2, [r3, #64]	@ 0x40


  /* Update error code */
  hdma2d->ErrorCode = HAL_DMA2D_ERROR_NONE;
 8003bf0:	2000      	movs	r0, #0

  /* Initialize the DMA2D state*/
  hdma2d->State  = HAL_DMA2D_STATE_READY;
 8003bf2:	2301      	movs	r3, #1
  hdma2d->ErrorCode = HAL_DMA2D_ERROR_NONE;
 8003bf4:	63e0      	str	r0, [r4, #60]	@ 0x3c
  hdma2d->State  = HAL_DMA2D_STATE_READY;
 8003bf6:	f884 3039 	strb.w	r3, [r4, #57]	@ 0x39

  return HAL_OK;
}
 8003bfa:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 8003bfc:	2001      	movs	r0, #1
 8003bfe:	e7fc      	b.n	8003bfa <HAL_DMA2D_Init+0x4e>

08003c00 <HAL_DMA2D_LineEventCallback>:
  * @brief  Transfer watermark callback.
  * @param  hdma2d pointer to a DMA2D_HandleTypeDef structure that contains
  *                 the configuration information for the DMA2D.
  * @retval None
  */
__weak void HAL_DMA2D_LineEventCallback(DMA2D_HandleTypeDef *hdma2d)
 8003c00:	4770      	bx	lr

08003c02 <HAL_DMA2D_CLUTLoadingCpltCallback>:
  * @brief  CLUT Transfer Complete callback.
  * @param  hdma2d pointer to a DMA2D_HandleTypeDef structure that contains
  *                 the configuration information for the DMA2D.
  * @retval None
  */
__weak void HAL_DMA2D_CLUTLoadingCpltCallback(DMA2D_HandleTypeDef *hdma2d)
 8003c02:	4770      	bx	lr

08003c04 <HAL_DMA2D_IRQHandler>:
  uint32_t isrflags = READ_REG(hdma2d->Instance->ISR);
 8003c04:	6803      	ldr	r3, [r0, #0]
{
 8003c06:	b570      	push	{r4, r5, r6, lr}
  uint32_t isrflags = READ_REG(hdma2d->Instance->ISR);
 8003c08:	685e      	ldr	r6, [r3, #4]
  uint32_t crflags = READ_REG(hdma2d->Instance->CR);
 8003c0a:	681d      	ldr	r5, [r3, #0]
  if ((isrflags & DMA2D_FLAG_TE) != 0U)
 8003c0c:	07f2      	lsls	r2, r6, #31
{
 8003c0e:	4604      	mov	r4, r0
  if ((isrflags & DMA2D_FLAG_TE) != 0U)
 8003c10:	d514      	bpl.n	8003c3c <HAL_DMA2D_IRQHandler+0x38>
    if ((crflags & DMA2D_IT_TE) != 0U)
 8003c12:	05e9      	lsls	r1, r5, #23
 8003c14:	d512      	bpl.n	8003c3c <HAL_DMA2D_IRQHandler+0x38>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TE);
 8003c16:	681a      	ldr	r2, [r3, #0]
 8003c18:	f422 7280 	bic.w	r2, r2, #256	@ 0x100
 8003c1c:	601a      	str	r2, [r3, #0]
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_TE;
 8003c1e:	6bc2      	ldr	r2, [r0, #60]	@ 0x3c
 8003c20:	f042 0201 	orr.w	r2, r2, #1
 8003c24:	63c2      	str	r2, [r0, #60]	@ 0x3c
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TE);
 8003c26:	2201      	movs	r2, #1
 8003c28:	609a      	str	r2, [r3, #8]
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 8003c2a:	2304      	movs	r3, #4
 8003c2c:	f880 3039 	strb.w	r3, [r0, #57]	@ 0x39
      __HAL_UNLOCK(hdma2d);
 8003c30:	2300      	movs	r3, #0
 8003c32:	f880 3038 	strb.w	r3, [r0, #56]	@ 0x38
      if (hdma2d->XferErrorCallback != NULL)
 8003c36:	6943      	ldr	r3, [r0, #20]
 8003c38:	b103      	cbz	r3, 8003c3c <HAL_DMA2D_IRQHandler+0x38>
        hdma2d->XferErrorCallback(hdma2d);
 8003c3a:	4798      	blx	r3
  if ((isrflags & DMA2D_FLAG_CE) != 0U)
 8003c3c:	06b2      	lsls	r2, r6, #26
 8003c3e:	d516      	bpl.n	8003c6e <HAL_DMA2D_IRQHandler+0x6a>
    if ((crflags & DMA2D_IT_CE) != 0U)
 8003c40:	04ab      	lsls	r3, r5, #18
 8003c42:	d514      	bpl.n	8003c6e <HAL_DMA2D_IRQHandler+0x6a>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CE);
 8003c44:	6823      	ldr	r3, [r4, #0]
 8003c46:	681a      	ldr	r2, [r3, #0]
 8003c48:	f422 5200 	bic.w	r2, r2, #8192	@ 0x2000
 8003c4c:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CE);
 8003c4e:	2220      	movs	r2, #32
 8003c50:	609a      	str	r2, [r3, #8]
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_CE;
 8003c52:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 8003c54:	f043 0302 	orr.w	r3, r3, #2
 8003c58:	63e3      	str	r3, [r4, #60]	@ 0x3c
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 8003c5a:	2304      	movs	r3, #4
 8003c5c:	f884 3039 	strb.w	r3, [r4, #57]	@ 0x39
      __HAL_UNLOCK(hdma2d);
 8003c60:	2300      	movs	r3, #0
 8003c62:	f884 3038 	strb.w	r3, [r4, #56]	@ 0x38
      if (hdma2d->XferErrorCallback != NULL)
 8003c66:	6963      	ldr	r3, [r4, #20]
 8003c68:	b10b      	cbz	r3, 8003c6e <HAL_DMA2D_IRQHandler+0x6a>
        hdma2d->XferErrorCallback(hdma2d);
 8003c6a:	4620      	mov	r0, r4
 8003c6c:	4798      	blx	r3
  if ((isrflags & DMA2D_FLAG_CAE) != 0U)
 8003c6e:	0730      	lsls	r0, r6, #28
 8003c70:	d516      	bpl.n	8003ca0 <HAL_DMA2D_IRQHandler+0x9c>
    if ((crflags & DMA2D_IT_CAE) != 0U)
 8003c72:	0529      	lsls	r1, r5, #20
 8003c74:	d514      	bpl.n	8003ca0 <HAL_DMA2D_IRQHandler+0x9c>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CAE);
 8003c76:	6823      	ldr	r3, [r4, #0]
 8003c78:	681a      	ldr	r2, [r3, #0]
 8003c7a:	f422 6200 	bic.w	r2, r2, #2048	@ 0x800
 8003c7e:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CAE);
 8003c80:	2208      	movs	r2, #8
 8003c82:	609a      	str	r2, [r3, #8]
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_CAE;
 8003c84:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 8003c86:	f043 0304 	orr.w	r3, r3, #4
 8003c8a:	63e3      	str	r3, [r4, #60]	@ 0x3c
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 8003c8c:	2304      	movs	r3, #4
 8003c8e:	f884 3039 	strb.w	r3, [r4, #57]	@ 0x39
      __HAL_UNLOCK(hdma2d);
 8003c92:	2300      	movs	r3, #0
 8003c94:	f884 3038 	strb.w	r3, [r4, #56]	@ 0x38
      if (hdma2d->XferErrorCallback != NULL)
 8003c98:	6963      	ldr	r3, [r4, #20]
 8003c9a:	b10b      	cbz	r3, 8003ca0 <HAL_DMA2D_IRQHandler+0x9c>
        hdma2d->XferErrorCallback(hdma2d);
 8003c9c:	4620      	mov	r0, r4
 8003c9e:	4798      	blx	r3
  if ((isrflags & DMA2D_FLAG_TW) != 0U)
 8003ca0:	0772      	lsls	r2, r6, #29
 8003ca2:	d50b      	bpl.n	8003cbc <HAL_DMA2D_IRQHandler+0xb8>
    if ((crflags & DMA2D_IT_TW) != 0U)
 8003ca4:	056b      	lsls	r3, r5, #21
 8003ca6:	d509      	bpl.n	8003cbc <HAL_DMA2D_IRQHandler+0xb8>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TW);
 8003ca8:	6823      	ldr	r3, [r4, #0]
 8003caa:	681a      	ldr	r2, [r3, #0]
 8003cac:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 8003cb0:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TW);
 8003cb2:	2204      	movs	r2, #4
 8003cb4:	609a      	str	r2, [r3, #8]
      HAL_DMA2D_LineEventCallback(hdma2d);
 8003cb6:	4620      	mov	r0, r4
 8003cb8:	f7ff ffa2 	bl	8003c00 <HAL_DMA2D_LineEventCallback>
  if ((isrflags & DMA2D_FLAG_TC) != 0U)
 8003cbc:	07b0      	lsls	r0, r6, #30
 8003cbe:	d514      	bpl.n	8003cea <HAL_DMA2D_IRQHandler+0xe6>
    if ((crflags & DMA2D_IT_TC) != 0U)
 8003cc0:	05a9      	lsls	r1, r5, #22
 8003cc2:	d512      	bpl.n	8003cea <HAL_DMA2D_IRQHandler+0xe6>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TC);
 8003cc4:	6823      	ldr	r3, [r4, #0]
 8003cc6:	681a      	ldr	r2, [r3, #0]
 8003cc8:	f422 7200 	bic.w	r2, r2, #512	@ 0x200
 8003ccc:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TC);
 8003cce:	2202      	movs	r2, #2
 8003cd0:	609a      	str	r2, [r3, #8]
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_NONE;
 8003cd2:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 8003cd4:	63e3      	str	r3, [r4, #60]	@ 0x3c
      hdma2d->State = HAL_DMA2D_STATE_READY;
 8003cd6:	2301      	movs	r3, #1
 8003cd8:	f884 3039 	strb.w	r3, [r4, #57]	@ 0x39
      __HAL_UNLOCK(hdma2d);
 8003cdc:	2300      	movs	r3, #0
 8003cde:	f884 3038 	strb.w	r3, [r4, #56]	@ 0x38
      if (hdma2d->XferCpltCallback != NULL)
 8003ce2:	6923      	ldr	r3, [r4, #16]
 8003ce4:	b10b      	cbz	r3, 8003cea <HAL_DMA2D_IRQHandler+0xe6>
        hdma2d->XferCpltCallback(hdma2d);
 8003ce6:	4620      	mov	r0, r4
 8003ce8:	4798      	blx	r3
  if ((isrflags & DMA2D_FLAG_CTC) != 0U)
 8003cea:	06f2      	lsls	r2, r6, #27
 8003cec:	d513      	bpl.n	8003d16 <HAL_DMA2D_IRQHandler+0x112>
    if ((crflags & DMA2D_IT_CTC) != 0U)
 8003cee:	04eb      	lsls	r3, r5, #19
 8003cf0:	d511      	bpl.n	8003d16 <HAL_DMA2D_IRQHandler+0x112>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CTC);
 8003cf2:	6823      	ldr	r3, [r4, #0]
 8003cf4:	681a      	ldr	r2, [r3, #0]
 8003cf6:	f422 5280 	bic.w	r2, r2, #4096	@ 0x1000
 8003cfa:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CTC);
 8003cfc:	2210      	movs	r2, #16
 8003cfe:	609a      	str	r2, [r3, #8]
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_NONE;
 8003d00:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 8003d02:	63e3      	str	r3, [r4, #60]	@ 0x3c
      hdma2d->State = HAL_DMA2D_STATE_READY;
 8003d04:	2301      	movs	r3, #1
 8003d06:	f884 3039 	strb.w	r3, [r4, #57]	@ 0x39
      __HAL_UNLOCK(hdma2d);
 8003d0a:	2300      	movs	r3, #0
 8003d0c:	f884 3038 	strb.w	r3, [r4, #56]	@ 0x38
      HAL_DMA2D_CLUTLoadingCpltCallback(hdma2d);
 8003d10:	4620      	mov	r0, r4
 8003d12:	f7ff ff76 	bl	8003c02 <HAL_DMA2D_CLUTLoadingCpltCallback>
}
 8003d16:	bd70      	pop	{r4, r5, r6, pc}

08003d18 <HAL_DMA2D_ConfigLayer>:
  *                   This parameter can be one of the following values:
  *                   DMA2D_BACKGROUND_LAYER(0) / DMA2D_FOREGROUND_LAYER(1)
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA2D_ConfigLayer(DMA2D_HandleTypeDef *hdma2d, uint32_t LayerIdx)
{
 8003d18:	b5f0      	push	{r4, r5, r6, r7, lr}
      assert_param(IS_DMA2D_ALPHA_MODE(hdma2d->LayerCfg[LayerIdx].AlphaMode));
    }
  }

  /* Process locked */
  __HAL_LOCK(hdma2d);
 8003d1a:	f890 2038 	ldrb.w	r2, [r0, #56]	@ 0x38
 8003d1e:	2a01      	cmp	r2, #1
{
 8003d20:	4603      	mov	r3, r0
 8003d22:	f04f 0002 	mov.w	r0, #2
  __HAL_LOCK(hdma2d);
 8003d26:	d02b      	beq.n	8003d80 <HAL_DMA2D_ConfigLayer+0x68>
 8003d28:	2201      	movs	r2, #1
 8003d2a:	f883 2038 	strb.w	r2, [r3, #56]	@ 0x38

  /* Change DMA2D peripheral state */
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
 8003d2e:	f883 0039 	strb.w	r0, [r3, #57]	@ 0x39

  pLayerCfg = &hdma2d->LayerCfg[LayerIdx];

  /* Prepare the value to be written to the BGPFCCR or FGPFCCR register */
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos);
 8003d32:	eb03 1201 	add.w	r2, r3, r1, lsl #4
 8003d36:	e9d2 4007 	ldrd	r4, r0, [r2, #28]
 8003d3a:	6a55      	ldr	r5, [r2, #36]	@ 0x24
 8003d3c:	4f17      	ldr	r7, [pc, #92]	@ (8003d9c <HAL_DMA2D_ConfigLayer+0x84>)
 8003d3e:	ea44 4000 	orr.w	r0, r4, r0, lsl #16
  regMask  = DMA2D_BGPFCCR_CM | DMA2D_BGPFCCR_AM | DMA2D_BGPFCCR_ALPHA;


  if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 8003d42:	3c09      	subs	r4, #9
 8003d44:	2c01      	cmp	r4, #1
  {
    regValue |= (pLayerCfg->InputAlpha & DMA2D_BGPFCCR_ALPHA);
 8003d46:	bf9c      	itt	ls
 8003d48:	f005 427f 	andls.w	r2, r5, #4278190080	@ 0xff000000
 8003d4c:	4310      	orrls	r0, r2
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos);
 8003d4e:	ea4f 1601 	mov.w	r6, r1, lsl #4

  /* Configure the background DMA2D layer */
  if (LayerIdx == DMA2D_BACKGROUND_LAYER)
  {
    /* Write DMA2D BGPFCCR register */
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
 8003d52:	681a      	ldr	r2, [r3, #0]
    regValue |= (pLayerCfg->InputAlpha << DMA2D_BGPFCCR_ALPHA_Pos);
 8003d54:	bf88      	it	hi
 8003d56:	ea40 6005 	orrhi.w	r0, r0, r5, lsl #24
  if (LayerIdx == DMA2D_BACKGROUND_LAYER)
 8003d5a:	b991      	cbnz	r1, 8003d82 <HAL_DMA2D_ConfigLayer+0x6a>
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
 8003d5c:	6a51      	ldr	r1, [r2, #36]	@ 0x24
 8003d5e:	4039      	ands	r1, r7
 8003d60:	4301      	orrs	r1, r0
 8003d62:	6251      	str	r1, [r2, #36]	@ 0x24

    /* DMA2D BGOR register configuration -------------------------------------*/
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);

    /* DMA2D BGCOLR register configuration -------------------------------------*/
    if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 8003d64:	2c01      	cmp	r4, #1
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);
 8003d66:	6999      	ldr	r1, [r3, #24]
 8003d68:	6191      	str	r1, [r2, #24]
    if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 8003d6a:	d803      	bhi.n	8003d74 <HAL_DMA2D_ConfigLayer+0x5c>
    {
      WRITE_REG(hdma2d->Instance->BGCOLR, pLayerCfg->InputAlpha & (DMA2D_BGCOLR_BLUE | DMA2D_BGCOLR_GREEN | \
 8003d6c:	6a59      	ldr	r1, [r3, #36]	@ 0x24
 8003d6e:	f021 417f 	bic.w	r1, r1, #4278190080	@ 0xff000000
 8003d72:	6291      	str	r1, [r2, #40]	@ 0x28
      WRITE_REG(hdma2d->Instance->FGCOLR, pLayerCfg->InputAlpha & (DMA2D_FGCOLR_BLUE | DMA2D_FGCOLR_GREEN | \
                                                                   DMA2D_FGCOLR_RED));
    }
  }
  /* Initialize the DMA2D state*/
  hdma2d->State = HAL_DMA2D_STATE_READY;
 8003d74:	2201      	movs	r2, #1

  /* Process unlocked */
  __HAL_UNLOCK(hdma2d);
 8003d76:	2000      	movs	r0, #0
  hdma2d->State = HAL_DMA2D_STATE_READY;
 8003d78:	f883 2039 	strb.w	r2, [r3, #57]	@ 0x39
  __HAL_UNLOCK(hdma2d);
 8003d7c:	f883 0038 	strb.w	r0, [r3, #56]	@ 0x38

  return HAL_OK;
}
 8003d80:	bdf0      	pop	{r4, r5, r6, r7, pc}
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
 8003d82:	69d1      	ldr	r1, [r2, #28]
 8003d84:	4039      	ands	r1, r7
 8003d86:	4301      	orrs	r1, r0
 8003d88:	61d1      	str	r1, [r2, #28]
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
 8003d8a:	1999      	adds	r1, r3, r6
    if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 8003d8c:	2c01      	cmp	r4, #1
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
 8003d8e:	6989      	ldr	r1, [r1, #24]
 8003d90:	6111      	str	r1, [r2, #16]
      WRITE_REG(hdma2d->Instance->FGCOLR, pLayerCfg->InputAlpha & (DMA2D_FGCOLR_BLUE | DMA2D_FGCOLR_GREEN | \
 8003d92:	bf9c      	itt	ls
 8003d94:	f025 457f 	bicls.w	r5, r5, #4278190080	@ 0xff000000
 8003d98:	6215      	strls	r5, [r2, #32]
 8003d9a:	e7eb      	b.n	8003d74 <HAL_DMA2D_ConfigLayer+0x5c>
 8003d9c:	00fcfff0 	.word	0x00fcfff0

08003da0 <HAL_GPIO_Init>:
  * @param  GPIO_Init pointer to a GPIO_InitTypeDef structure that contains
  *         the configuration information for the specified GPIO peripheral.
  * @retval None
  */
void HAL_GPIO_Init(GPIO_TypeDef  *GPIOx, GPIO_InitTypeDef *GPIO_Init)
{
 8003da0:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
      /*--------------------- EXTI Mode Configuration ------------------------*/
      /* Configure the External Interrupt or event for the current IO */
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
      {
        /* Enable SYSCFG Clock */
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 8003da4:	f8df 91bc 	ldr.w	r9, [pc, #444]	@ 8003f64 <HAL_GPIO_Init+0x1c4>
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
        SYSCFG->EXTICR[position >> 2U] = temp;

        /* Clear Rising Falling edge configuration */
        temp = EXTI->RTSR;
 8003da8:	4a6c      	ldr	r2, [pc, #432]	@ (8003f5c <HAL_GPIO_Init+0x1bc>)
  for(position = 0U; position < GPIO_NUMBER; position++)
 8003daa:	2300      	movs	r3, #0
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 8003dac:	680d      	ldr	r5, [r1, #0]
    ioposition = 0x01U << position;
 8003dae:	2401      	movs	r4, #1
 8003db0:	409c      	lsls	r4, r3
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 8003db2:	ea04 0605 	and.w	r6, r4, r5
    if(iocurrent == ioposition)
 8003db6:	43ac      	bics	r4, r5
 8003db8:	f040 80b7 	bne.w	8003f2a <HAL_GPIO_Init+0x18a>
      if(((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || \
 8003dbc:	684d      	ldr	r5, [r1, #4]
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 8003dbe:	2703      	movs	r7, #3
      if(((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || \
 8003dc0:	f005 0403 	and.w	r4, r5, #3
 8003dc4:	ea4f 0843 	mov.w	r8, r3, lsl #1
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 8003dc8:	fa07 fc08 	lsl.w	ip, r7, r8
      if(((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || \
 8003dcc:	1e67      	subs	r7, r4, #1
 8003dce:	2f01      	cmp	r7, #1
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 8003dd0:	ea6f 0c0c 	mvn.w	ip, ip
      if(((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || \
 8003dd4:	d834      	bhi.n	8003e40 <HAL_GPIO_Init+0xa0>
        temp = GPIOx->OSPEEDR; 
 8003dd6:	6887      	ldr	r7, [r0, #8]
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 8003dd8:	ea07 0e0c 	and.w	lr, r7, ip
        temp |= (GPIO_Init->Speed << (position * 2U));
 8003ddc:	68cf      	ldr	r7, [r1, #12]
 8003dde:	fa07 f708 	lsl.w	r7, r7, r8
 8003de2:	ea47 070e 	orr.w	r7, r7, lr
        GPIOx->OSPEEDR = temp;
 8003de6:	6087      	str	r7, [r0, #8]
        temp = GPIOx->OTYPER;
 8003de8:	6847      	ldr	r7, [r0, #4]
        temp &= ~(GPIO_OTYPER_OT_0 << position) ;
 8003dea:	ea27 0e06 	bic.w	lr, r7, r6
        temp |= (((GPIO_Init->Mode & OUTPUT_TYPE) >> OUTPUT_TYPE_Pos) << position);
 8003dee:	f3c5 1700 	ubfx	r7, r5, #4, #1
 8003df2:	409f      	lsls	r7, r3
 8003df4:	ea47 070e 	orr.w	r7, r7, lr
        GPIOx->OTYPER = temp;
 8003df8:	6047      	str	r7, [r0, #4]
        temp = GPIOx->PUPDR;
 8003dfa:	68c7      	ldr	r7, [r0, #12]
        temp &= ~(GPIO_PUPDR_PUPDR0 << (position * 2U));
 8003dfc:	ea07 0e0c 	and.w	lr, r7, ip
        temp |= ((GPIO_Init->Pull) << (position * 2U));
 8003e00:	688f      	ldr	r7, [r1, #8]
 8003e02:	fa07 f708 	lsl.w	r7, r7, r8
 8003e06:	ea47 070e 	orr.w	r7, r7, lr
      if((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
 8003e0a:	2c02      	cmp	r4, #2
        GPIOx->PUPDR = temp;
 8003e0c:	60c7      	str	r7, [r0, #12]
      if((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
 8003e0e:	d119      	bne.n	8003e44 <HAL_GPIO_Init+0xa4>
        temp = GPIOx->AFR[position >> 3U];
 8003e10:	ea4f 0ad3 	mov.w	sl, r3, lsr #3
 8003e14:	eb00 0a8a 	add.w	sl, r0, sl, lsl #2
        temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 8003e18:	f003 0b07 	and.w	fp, r3, #7
        temp = GPIOx->AFR[position >> 3U];
 8003e1c:	f8da 7020 	ldr.w	r7, [sl, #32]
        temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 8003e20:	ea4f 0b8b 	mov.w	fp, fp, lsl #2
 8003e24:	f04f 0e0f 	mov.w	lr, #15
 8003e28:	fa0e fe0b 	lsl.w	lr, lr, fp
 8003e2c:	ea27 0e0e 	bic.w	lr, r7, lr
        temp |= ((uint32_t)(GPIO_Init->Alternate) << (((uint32_t)position & 0x07U) * 4U));
 8003e30:	690f      	ldr	r7, [r1, #16]
 8003e32:	fa07 f70b 	lsl.w	r7, r7, fp
 8003e36:	ea47 070e 	orr.w	r7, r7, lr
        GPIOx->AFR[position >> 3U] = temp;
 8003e3a:	f8ca 7020 	str.w	r7, [sl, #32]
 8003e3e:	e001      	b.n	8003e44 <HAL_GPIO_Init+0xa4>
      if((GPIO_Init->Mode & GPIO_MODE) != MODE_ANALOG)
 8003e40:	2c03      	cmp	r4, #3
 8003e42:	d1da      	bne.n	8003dfa <HAL_GPIO_Init+0x5a>
      temp = GPIOx->MODER;
 8003e44:	6807      	ldr	r7, [r0, #0]
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
 8003e46:	fa04 f408 	lsl.w	r4, r4, r8
      temp &= ~(GPIO_MODER_MODER0 << (position * 2U));
 8003e4a:	ea07 070c 	and.w	r7, r7, ip
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
 8003e4e:	433c      	orrs	r4, r7
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
 8003e50:	f415 3f40 	tst.w	r5, #196608	@ 0x30000
      GPIOx->MODER = temp;
 8003e54:	6004      	str	r4, [r0, #0]
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
 8003e56:	d068      	beq.n	8003f2a <HAL_GPIO_Init+0x18a>
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 8003e58:	2400      	movs	r4, #0
 8003e5a:	9401      	str	r4, [sp, #4]
 8003e5c:	f8d9 4044 	ldr.w	r4, [r9, #68]	@ 0x44
 8003e60:	f444 4480 	orr.w	r4, r4, #16384	@ 0x4000
 8003e64:	f8c9 4044 	str.w	r4, [r9, #68]	@ 0x44
 8003e68:	f8d9 4044 	ldr.w	r4, [r9, #68]	@ 0x44
 8003e6c:	f023 0703 	bic.w	r7, r3, #3
 8003e70:	f107 4780 	add.w	r7, r7, #1073741824	@ 0x40000000
 8003e74:	f404 4480 	and.w	r4, r4, #16384	@ 0x4000
 8003e78:	f507 379c 	add.w	r7, r7, #79872	@ 0x13800
 8003e7c:	9401      	str	r4, [sp, #4]
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 8003e7e:	f003 0c03 	and.w	ip, r3, #3
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 8003e82:	9c01      	ldr	r4, [sp, #4]
        temp = SYSCFG->EXTICR[position >> 2U];
 8003e84:	f8d7 e008 	ldr.w	lr, [r7, #8]
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 8003e88:	ea4f 0c8c 	mov.w	ip, ip, lsl #2
 8003e8c:	240f      	movs	r4, #15
 8003e8e:	fa04 f40c 	lsl.w	r4, r4, ip
 8003e92:	ea2e 0e04 	bic.w	lr, lr, r4
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 8003e96:	4c32      	ldr	r4, [pc, #200]	@ (8003f60 <HAL_GPIO_Init+0x1c0>)
 8003e98:	42a0      	cmp	r0, r4
 8003e9a:	d04d      	beq.n	8003f38 <HAL_GPIO_Init+0x198>
 8003e9c:	f504 6480 	add.w	r4, r4, #1024	@ 0x400
 8003ea0:	42a0      	cmp	r0, r4
 8003ea2:	d04b      	beq.n	8003f3c <HAL_GPIO_Init+0x19c>
 8003ea4:	f504 6480 	add.w	r4, r4, #1024	@ 0x400
 8003ea8:	42a0      	cmp	r0, r4
 8003eaa:	d049      	beq.n	8003f40 <HAL_GPIO_Init+0x1a0>
 8003eac:	f504 6480 	add.w	r4, r4, #1024	@ 0x400
 8003eb0:	42a0      	cmp	r0, r4
 8003eb2:	d047      	beq.n	8003f44 <HAL_GPIO_Init+0x1a4>
 8003eb4:	f504 6480 	add.w	r4, r4, #1024	@ 0x400
 8003eb8:	42a0      	cmp	r0, r4
 8003eba:	d045      	beq.n	8003f48 <HAL_GPIO_Init+0x1a8>
 8003ebc:	f504 6480 	add.w	r4, r4, #1024	@ 0x400
 8003ec0:	42a0      	cmp	r0, r4
 8003ec2:	d043      	beq.n	8003f4c <HAL_GPIO_Init+0x1ac>
 8003ec4:	f504 6480 	add.w	r4, r4, #1024	@ 0x400
 8003ec8:	42a0      	cmp	r0, r4
 8003eca:	d041      	beq.n	8003f50 <HAL_GPIO_Init+0x1b0>
 8003ecc:	f504 6480 	add.w	r4, r4, #1024	@ 0x400
 8003ed0:	42a0      	cmp	r0, r4
 8003ed2:	d03f      	beq.n	8003f54 <HAL_GPIO_Init+0x1b4>
 8003ed4:	f504 6480 	add.w	r4, r4, #1024	@ 0x400
 8003ed8:	42a0      	cmp	r0, r4
 8003eda:	d03d      	beq.n	8003f58 <HAL_GPIO_Init+0x1b8>
 8003edc:	f504 6480 	add.w	r4, r4, #1024	@ 0x400
 8003ee0:	42a0      	cmp	r0, r4
 8003ee2:	bf14      	ite	ne
 8003ee4:	240a      	movne	r4, #10
 8003ee6:	2409      	moveq	r4, #9
 8003ee8:	fa04 f40c 	lsl.w	r4, r4, ip
 8003eec:	ea44 040e 	orr.w	r4, r4, lr
        SYSCFG->EXTICR[position >> 2U] = temp;
 8003ef0:	60bc      	str	r4, [r7, #8]
        temp = EXTI->RTSR;
 8003ef2:	6894      	ldr	r4, [r2, #8]
        temp &= ~((uint32_t)iocurrent);
 8003ef4:	43f7      	mvns	r7, r6
        if((GPIO_Init->Mode & TRIGGER_RISING) != 0x00U)
 8003ef6:	f415 1f80 	tst.w	r5, #1048576	@ 0x100000
        temp &= ~((uint32_t)iocurrent);
 8003efa:	bf0c      	ite	eq
 8003efc:	403c      	andeq	r4, r7
        {
          temp |= iocurrent;
 8003efe:	4334      	orrne	r4, r6
        }
        EXTI->RTSR = temp;
 8003f00:	6094      	str	r4, [r2, #8]

        temp = EXTI->FTSR;
 8003f02:	68d4      	ldr	r4, [r2, #12]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & TRIGGER_FALLING) != 0x00U)
 8003f04:	f415 1f00 	tst.w	r5, #2097152	@ 0x200000
        temp &= ~((uint32_t)iocurrent);
 8003f08:	bf0c      	ite	eq
 8003f0a:	403c      	andeq	r4, r7
        {
          temp |= iocurrent;
 8003f0c:	4334      	orrne	r4, r6
        }
        EXTI->FTSR = temp;
 8003f0e:	60d4      	str	r4, [r2, #12]

        temp = EXTI->EMR;
 8003f10:	6854      	ldr	r4, [r2, #4]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & EXTI_EVT) != 0x00U)
 8003f12:	f415 3f00 	tst.w	r5, #131072	@ 0x20000
        temp &= ~((uint32_t)iocurrent);
 8003f16:	bf0c      	ite	eq
 8003f18:	403c      	andeq	r4, r7
        {
          temp |= iocurrent;
 8003f1a:	4334      	orrne	r4, r6
        }
        EXTI->EMR = temp;
 8003f1c:	6054      	str	r4, [r2, #4]

        /* Clear EXTI line configuration */
        temp = EXTI->IMR;
 8003f1e:	6814      	ldr	r4, [r2, #0]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & EXTI_IT) != 0x00U)
 8003f20:	03ed      	lsls	r5, r5, #15
        temp &= ~((uint32_t)iocurrent);
 8003f22:	bf54      	ite	pl
 8003f24:	403c      	andpl	r4, r7
        {
          temp |= iocurrent;
 8003f26:	4334      	orrmi	r4, r6
        }
        EXTI->IMR = temp;
 8003f28:	6014      	str	r4, [r2, #0]
  for(position = 0U; position < GPIO_NUMBER; position++)
 8003f2a:	3301      	adds	r3, #1
 8003f2c:	2b10      	cmp	r3, #16
 8003f2e:	f47f af3d 	bne.w	8003dac <HAL_GPIO_Init+0xc>
      }
    }
  }
}
 8003f32:	b003      	add	sp, #12
 8003f34:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 8003f38:	2400      	movs	r4, #0
 8003f3a:	e7d5      	b.n	8003ee8 <HAL_GPIO_Init+0x148>
 8003f3c:	2401      	movs	r4, #1
 8003f3e:	e7d3      	b.n	8003ee8 <HAL_GPIO_Init+0x148>
 8003f40:	2402      	movs	r4, #2
 8003f42:	e7d1      	b.n	8003ee8 <HAL_GPIO_Init+0x148>
 8003f44:	2403      	movs	r4, #3
 8003f46:	e7cf      	b.n	8003ee8 <HAL_GPIO_Init+0x148>
 8003f48:	2404      	movs	r4, #4
 8003f4a:	e7cd      	b.n	8003ee8 <HAL_GPIO_Init+0x148>
 8003f4c:	2405      	movs	r4, #5
 8003f4e:	e7cb      	b.n	8003ee8 <HAL_GPIO_Init+0x148>
 8003f50:	2406      	movs	r4, #6
 8003f52:	e7c9      	b.n	8003ee8 <HAL_GPIO_Init+0x148>
 8003f54:	2407      	movs	r4, #7
 8003f56:	e7c7      	b.n	8003ee8 <HAL_GPIO_Init+0x148>
 8003f58:	2408      	movs	r4, #8
 8003f5a:	e7c5      	b.n	8003ee8 <HAL_GPIO_Init+0x148>
 8003f5c:	40013c00 	.word	0x40013c00
 8003f60:	40020000 	.word	0x40020000
 8003f64:	40023800 	.word	0x40023800

08003f68 <HAL_GPIO_ReadPin>:
  GPIO_PinState bitstatus;

  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  if((GPIOx->IDR & GPIO_Pin) != (uint32_t)GPIO_PIN_RESET)
 8003f68:	6903      	ldr	r3, [r0, #16]
 8003f6a:	4219      	tst	r1, r3
  else
  {
    bitstatus = GPIO_PIN_RESET;
  }
  return bitstatus;
}
 8003f6c:	bf14      	ite	ne
 8003f6e:	2001      	movne	r0, #1
 8003f70:	2000      	moveq	r0, #0
 8003f72:	4770      	bx	lr

08003f74 <HAL_GPIO_WritePin>:
{
  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));
  assert_param(IS_GPIO_PIN_ACTION(PinState));

  if(PinState != GPIO_PIN_RESET)
 8003f74:	b10a      	cbz	r2, 8003f7a <HAL_GPIO_WritePin+0x6>
  {
    GPIOx->BSRR = GPIO_Pin;
  }
  else
  {
    GPIOx->BSRR = (uint32_t)GPIO_Pin << 16U;
 8003f76:	6181      	str	r1, [r0, #24]
  }
}
 8003f78:	4770      	bx	lr
    GPIOx->BSRR = (uint32_t)GPIO_Pin << 16U;
 8003f7a:	0409      	lsls	r1, r1, #16
 8003f7c:	e7fb      	b.n	8003f76 <HAL_GPIO_WritePin+0x2>

08003f7e <HAL_GPIO_TogglePin>:

  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  /* get current Output Data Register value */
  odr = GPIOx->ODR;
 8003f7e:	6943      	ldr	r3, [r0, #20]

  /* Set selected pins that were at low level, and reset ones that were high */
  GPIOx->BSRR = ((odr & GPIO_Pin) << GPIO_NUMBER) | (~odr & GPIO_Pin);
 8003f80:	ea01 0203 	and.w	r2, r1, r3
 8003f84:	ea21 0103 	bic.w	r1, r1, r3
 8003f88:	ea41 4102 	orr.w	r1, r1, r2, lsl #16
 8003f8c:	6181      	str	r1, [r0, #24]
}
 8003f8e:	4770      	bx	lr

08003f90 <I2C_IsAcknowledgeFailed>:
  *                the configuration information for the specified I2C.
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_IsAcknowledgeFailed(I2C_HandleTypeDef *hi2c)
{
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8003f90:	6801      	ldr	r1, [r0, #0]
 8003f92:	694b      	ldr	r3, [r1, #20]
 8003f94:	f413 6380 	ands.w	r3, r3, #1024	@ 0x400
 8003f98:	f04f 0200 	mov.w	r2, #0
 8003f9c:	d010      	beq.n	8003fc0 <I2C_IsAcknowledgeFailed+0x30>
  {
    /* Clear NACKF Flag */
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 8003f9e:	f46f 6380 	mvn.w	r3, #1024	@ 0x400
 8003fa2:	614b      	str	r3, [r1, #20]

    hi2c->PreviousState       = I2C_STATE_NONE;
    hi2c->State               = HAL_I2C_STATE_READY;
 8003fa4:	2320      	movs	r3, #32
    hi2c->PreviousState       = I2C_STATE_NONE;
 8003fa6:	6302      	str	r2, [r0, #48]	@ 0x30
    hi2c->State               = HAL_I2C_STATE_READY;
 8003fa8:	f880 303d 	strb.w	r3, [r0, #61]	@ 0x3d
    hi2c->Mode                = HAL_I2C_MODE_NONE;
 8003fac:	f880 203e 	strb.w	r2, [r0, #62]	@ 0x3e
    hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 8003fb0:	6c03      	ldr	r3, [r0, #64]	@ 0x40

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
 8003fb2:	f880 203c 	strb.w	r2, [r0, #60]	@ 0x3c
    hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 8003fb6:	f043 0304 	orr.w	r3, r3, #4
 8003fba:	6403      	str	r3, [r0, #64]	@ 0x40

    return HAL_ERROR;
 8003fbc:	2001      	movs	r0, #1
 8003fbe:	4770      	bx	lr
  }
  return HAL_OK;
 8003fc0:	4618      	mov	r0, r3
}
 8003fc2:	4770      	bx	lr

08003fc4 <I2C_WaitOnFlagUntilTimeout>:
{
 8003fc4:	e92d 46f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r9, sl, lr}
 8003fc8:	4606      	mov	r6, r0
 8003fca:	460f      	mov	r7, r1
 8003fcc:	4691      	mov	r9, r2
 8003fce:	461d      	mov	r5, r3
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 8003fd0:	ea4f 4a11 	mov.w	sl, r1, lsr #16
 8003fd4:	6833      	ldr	r3, [r6, #0]
 8003fd6:	f1ba 0f01 	cmp.w	sl, #1
 8003fda:	bf0c      	ite	eq
 8003fdc:	695c      	ldreq	r4, [r3, #20]
 8003fde:	699c      	ldrne	r4, [r3, #24]
 8003fe0:	ea27 0404 	bic.w	r4, r7, r4
 8003fe4:	b2a4      	uxth	r4, r4
 8003fe6:	fab4 f484 	clz	r4, r4
 8003fea:	0964      	lsrs	r4, r4, #5
 8003fec:	45a1      	cmp	r9, r4
 8003fee:	d001      	beq.n	8003ff4 <I2C_WaitOnFlagUntilTimeout+0x30>
  return HAL_OK;
 8003ff0:	2000      	movs	r0, #0
 8003ff2:	e025      	b.n	8004040 <I2C_WaitOnFlagUntilTimeout+0x7c>
    if (Timeout != HAL_MAX_DELAY)
 8003ff4:	1c6a      	adds	r2, r5, #1
 8003ff6:	d0ee      	beq.n	8003fd6 <I2C_WaitOnFlagUntilTimeout+0x12>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8003ff8:	f7ff fd5c 	bl	8003ab4 <HAL_GetTick>
 8003ffc:	9b08      	ldr	r3, [sp, #32]
 8003ffe:	1ac0      	subs	r0, r0, r3
 8004000:	42a8      	cmp	r0, r5
 8004002:	d801      	bhi.n	8004008 <I2C_WaitOnFlagUntilTimeout+0x44>
 8004004:	2d00      	cmp	r5, #0
 8004006:	d1e5      	bne.n	8003fd4 <I2C_WaitOnFlagUntilTimeout+0x10>
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == Status))
 8004008:	6833      	ldr	r3, [r6, #0]
 800400a:	f1ba 0f01 	cmp.w	sl, #1
 800400e:	bf0c      	ite	eq
 8004010:	695b      	ldreq	r3, [r3, #20]
 8004012:	699b      	ldrne	r3, [r3, #24]
 8004014:	ea27 0303 	bic.w	r3, r7, r3
 8004018:	b29b      	uxth	r3, r3
 800401a:	fab3 f383 	clz	r3, r3
 800401e:	095b      	lsrs	r3, r3, #5
 8004020:	4599      	cmp	r9, r3
 8004022:	d1d7      	bne.n	8003fd4 <I2C_WaitOnFlagUntilTimeout+0x10>
          hi2c->PreviousState     = I2C_STATE_NONE;
 8004024:	2300      	movs	r3, #0
          hi2c->State             = HAL_I2C_STATE_READY;
 8004026:	2220      	movs	r2, #32
          hi2c->PreviousState     = I2C_STATE_NONE;
 8004028:	6333      	str	r3, [r6, #48]	@ 0x30
          hi2c->State             = HAL_I2C_STATE_READY;
 800402a:	f886 203d 	strb.w	r2, [r6, #61]	@ 0x3d
          hi2c->Mode              = HAL_I2C_MODE_NONE;
 800402e:	f886 303e 	strb.w	r3, [r6, #62]	@ 0x3e
          hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 8004032:	6c32      	ldr	r2, [r6, #64]	@ 0x40
          __HAL_UNLOCK(hi2c);
 8004034:	f886 303c 	strb.w	r3, [r6, #60]	@ 0x3c
          hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 8004038:	f042 0220 	orr.w	r2, r2, #32
 800403c:	6432      	str	r2, [r6, #64]	@ 0x40
          return HAL_ERROR;
 800403e:	2001      	movs	r0, #1
}
 8004040:	e8bd 86f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r9, sl, pc}

08004044 <I2C_WaitOnMasterAddressFlagUntilTimeout>:
{
 8004044:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8004048:	4604      	mov	r4, r0
 800404a:	460f      	mov	r7, r1
 800404c:	4616      	mov	r6, r2
 800404e:	4698      	mov	r8, r3
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 8004050:	6825      	ldr	r5, [r4, #0]
 8004052:	6968      	ldr	r0, [r5, #20]
 8004054:	ea27 0000 	bic.w	r0, r7, r0
 8004058:	b280      	uxth	r0, r0
 800405a:	b1c0      	cbz	r0, 800408e <I2C_WaitOnMasterAddressFlagUntilTimeout+0x4a>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800405c:	696b      	ldr	r3, [r5, #20]
 800405e:	055a      	lsls	r2, r3, #21
 8004060:	d517      	bpl.n	8004092 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x4e>
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8004062:	682b      	ldr	r3, [r5, #0]
 8004064:	f443 7300 	orr.w	r3, r3, #512	@ 0x200
 8004068:	602b      	str	r3, [r5, #0]
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 800406a:	f46f 6380 	mvn.w	r3, #1024	@ 0x400
 800406e:	616b      	str	r3, [r5, #20]
      hi2c->State               = HAL_I2C_STATE_READY;
 8004070:	2220      	movs	r2, #32
      hi2c->PreviousState       = I2C_STATE_NONE;
 8004072:	2300      	movs	r3, #0
 8004074:	6323      	str	r3, [r4, #48]	@ 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 8004076:	f884 203d 	strb.w	r2, [r4, #61]	@ 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 800407a:	f884 303e 	strb.w	r3, [r4, #62]	@ 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 800407e:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 8004080:	f043 0304 	orr.w	r3, r3, #4
          hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8004084:	6423      	str	r3, [r4, #64]	@ 0x40
          __HAL_UNLOCK(hi2c);
 8004086:	2300      	movs	r3, #0
 8004088:	f884 303c 	strb.w	r3, [r4, #60]	@ 0x3c
      return HAL_ERROR;
 800408c:	2001      	movs	r0, #1
}
 800408e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    if (Timeout != HAL_MAX_DELAY)
 8004092:	1c73      	adds	r3, r6, #1
 8004094:	d0dd      	beq.n	8004052 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xe>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8004096:	f7ff fd0d 	bl	8003ab4 <HAL_GetTick>
 800409a:	eba0 0008 	sub.w	r0, r0, r8
 800409e:	42b0      	cmp	r0, r6
 80040a0:	d801      	bhi.n	80040a6 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x62>
 80040a2:	2e00      	cmp	r6, #0
 80040a4:	d1d4      	bne.n	8004050 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xc>
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET))
 80040a6:	6823      	ldr	r3, [r4, #0]
 80040a8:	695a      	ldr	r2, [r3, #20]
 80040aa:	ea27 0202 	bic.w	r2, r7, r2
 80040ae:	b292      	uxth	r2, r2
 80040b0:	2a00      	cmp	r2, #0
 80040b2:	d0cd      	beq.n	8004050 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xc>
          hi2c->PreviousState       = I2C_STATE_NONE;
 80040b4:	2300      	movs	r3, #0
          hi2c->State               = HAL_I2C_STATE_READY;
 80040b6:	2220      	movs	r2, #32
          hi2c->PreviousState       = I2C_STATE_NONE;
 80040b8:	6323      	str	r3, [r4, #48]	@ 0x30
          hi2c->State               = HAL_I2C_STATE_READY;
 80040ba:	f884 203d 	strb.w	r2, [r4, #61]	@ 0x3d
          hi2c->Mode                = HAL_I2C_MODE_NONE;
 80040be:	f884 303e 	strb.w	r3, [r4, #62]	@ 0x3e
          hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 80040c2:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 80040c4:	4313      	orrs	r3, r2
 80040c6:	e7dd      	b.n	8004084 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x40>

080040c8 <I2C_WaitOnTXEFlagUntilTimeout>:
{
 80040c8:	b570      	push	{r4, r5, r6, lr}
 80040ca:	4604      	mov	r4, r0
 80040cc:	460d      	mov	r5, r1
 80040ce:	4616      	mov	r6, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 80040d0:	6823      	ldr	r3, [r4, #0]
 80040d2:	695b      	ldr	r3, [r3, #20]
 80040d4:	061b      	lsls	r3, r3, #24
 80040d6:	d501      	bpl.n	80040dc <I2C_WaitOnTXEFlagUntilTimeout+0x14>
  return HAL_OK;
 80040d8:	2000      	movs	r0, #0
 80040da:	e01e      	b.n	800411a <I2C_WaitOnTXEFlagUntilTimeout+0x52>
    if (I2C_IsAcknowledgeFailed(hi2c) != HAL_OK)
 80040dc:	4620      	mov	r0, r4
 80040de:	f7ff ff57 	bl	8003f90 <I2C_IsAcknowledgeFailed>
 80040e2:	b9c8      	cbnz	r0, 8004118 <I2C_WaitOnTXEFlagUntilTimeout+0x50>
    if (Timeout != HAL_MAX_DELAY)
 80040e4:	1c6a      	adds	r2, r5, #1
 80040e6:	d0f3      	beq.n	80040d0 <I2C_WaitOnTXEFlagUntilTimeout+0x8>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 80040e8:	f7ff fce4 	bl	8003ab4 <HAL_GetTick>
 80040ec:	1b80      	subs	r0, r0, r6
 80040ee:	42a8      	cmp	r0, r5
 80040f0:	d801      	bhi.n	80040f6 <I2C_WaitOnTXEFlagUntilTimeout+0x2e>
 80040f2:	2d00      	cmp	r5, #0
 80040f4:	d1ec      	bne.n	80040d0 <I2C_WaitOnTXEFlagUntilTimeout+0x8>
        if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET))
 80040f6:	6823      	ldr	r3, [r4, #0]
 80040f8:	695b      	ldr	r3, [r3, #20]
 80040fa:	f013 0380 	ands.w	r3, r3, #128	@ 0x80
 80040fe:	d1e7      	bne.n	80040d0 <I2C_WaitOnTXEFlagUntilTimeout+0x8>
          hi2c->State               = HAL_I2C_STATE_READY;
 8004100:	2220      	movs	r2, #32
          hi2c->PreviousState       = I2C_STATE_NONE;
 8004102:	6323      	str	r3, [r4, #48]	@ 0x30
          hi2c->State               = HAL_I2C_STATE_READY;
 8004104:	f884 203d 	strb.w	r2, [r4, #61]	@ 0x3d
          hi2c->Mode                = HAL_I2C_MODE_NONE;
 8004108:	f884 303e 	strb.w	r3, [r4, #62]	@ 0x3e
          hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 800410c:	6c22      	ldr	r2, [r4, #64]	@ 0x40
          __HAL_UNLOCK(hi2c);
 800410e:	f884 303c 	strb.w	r3, [r4, #60]	@ 0x3c
          hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8004112:	f042 0220 	orr.w	r2, r2, #32
 8004116:	6422      	str	r2, [r4, #64]	@ 0x40
      return HAL_ERROR;
 8004118:	2001      	movs	r0, #1
}
 800411a:	bd70      	pop	{r4, r5, r6, pc}

0800411c <I2C_RequestMemoryWrite>:
{
 800411c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8004120:	4615      	mov	r5, r2
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8004122:	6802      	ldr	r2, [r0, #0]
{
 8004124:	b085      	sub	sp, #20
 8004126:	e9dd 780c 	ldrd	r7, r8, [sp, #48]	@ 0x30
 800412a:	4699      	mov	r9, r3
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 800412c:	6813      	ldr	r3, [r2, #0]
 800412e:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8004132:	6013      	str	r3, [r2, #0]
{
 8004134:	460e      	mov	r6, r1
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 8004136:	463b      	mov	r3, r7
 8004138:	f8cd 8000 	str.w	r8, [sp]
 800413c:	2200      	movs	r2, #0
 800413e:	f04f 1101 	mov.w	r1, #65537	@ 0x10001
{
 8004142:	4604      	mov	r4, r0
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 8004144:	f7ff ff3e 	bl	8003fc4 <I2C_WaitOnFlagUntilTimeout>
 8004148:	6823      	ldr	r3, [r4, #0]
 800414a:	b138      	cbz	r0, 800415c <I2C_RequestMemoryWrite+0x40>
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 800414c:	681b      	ldr	r3, [r3, #0]
 800414e:	05db      	lsls	r3, r3, #23
 8004150:	d502      	bpl.n	8004158 <I2C_RequestMemoryWrite+0x3c>
      hi2c->ErrorCode = HAL_I2C_WRONG_START;
 8004152:	f44f 7300 	mov.w	r3, #512	@ 0x200
 8004156:	6423      	str	r3, [r4, #64]	@ 0x40
    return HAL_TIMEOUT;
 8004158:	2603      	movs	r6, #3
 800415a:	e020      	b.n	800419e <I2C_RequestMemoryWrite+0x82>
  hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(DevAddress);
 800415c:	f006 06fe 	and.w	r6, r6, #254	@ 0xfe
 8004160:	611e      	str	r6, [r3, #16]
  if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, Timeout, Tickstart) != HAL_OK)
 8004162:	491a      	ldr	r1, [pc, #104]	@ (80041cc <I2C_RequestMemoryWrite+0xb0>)
 8004164:	4643      	mov	r3, r8
 8004166:	463a      	mov	r2, r7
 8004168:	4620      	mov	r0, r4
 800416a:	f7ff ff6b 	bl	8004044 <I2C_WaitOnMasterAddressFlagUntilTimeout>
 800416e:	b9a8      	cbnz	r0, 800419c <I2C_RequestMemoryWrite+0x80>
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8004170:	6823      	ldr	r3, [r4, #0]
 8004172:	9003      	str	r0, [sp, #12]
 8004174:	695a      	ldr	r2, [r3, #20]
 8004176:	9203      	str	r2, [sp, #12]
 8004178:	699b      	ldr	r3, [r3, #24]
 800417a:	9303      	str	r3, [sp, #12]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 800417c:	4642      	mov	r2, r8
 800417e:	4639      	mov	r1, r7
 8004180:	4620      	mov	r0, r4
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8004182:	9b03      	ldr	r3, [sp, #12]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8004184:	f7ff ffa0 	bl	80040c8 <I2C_WaitOnTXEFlagUntilTimeout>
 8004188:	4606      	mov	r6, r0
 800418a:	b160      	cbz	r0, 80041a6 <I2C_RequestMemoryWrite+0x8a>
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 800418c:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 800418e:	2b04      	cmp	r3, #4
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8004190:	bf01      	itttt	eq
 8004192:	6822      	ldreq	r2, [r4, #0]
 8004194:	6813      	ldreq	r3, [r2, #0]
 8004196:	f443 7300 	orreq.w	r3, r3, #512	@ 0x200
 800419a:	6013      	streq	r3, [r2, #0]
    return HAL_ERROR;
 800419c:	2601      	movs	r6, #1
}
 800419e:	4630      	mov	r0, r6
 80041a0:	b005      	add	sp, #20
 80041a2:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 80041a6:	f1b9 0f01 	cmp.w	r9, #1
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 80041aa:	6823      	ldr	r3, [r4, #0]
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 80041ac:	d102      	bne.n	80041b4 <I2C_RequestMemoryWrite+0x98>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 80041ae:	b2ed      	uxtb	r5, r5
 80041b0:	611d      	str	r5, [r3, #16]
 80041b2:	e7f4      	b.n	800419e <I2C_RequestMemoryWrite+0x82>
    hi2c->Instance->DR = I2C_MEM_ADD_MSB(MemAddress);
 80041b4:	0a2a      	lsrs	r2, r5, #8
 80041b6:	611a      	str	r2, [r3, #16]
    if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 80041b8:	4639      	mov	r1, r7
 80041ba:	4642      	mov	r2, r8
 80041bc:	4620      	mov	r0, r4
 80041be:	f7ff ff83 	bl	80040c8 <I2C_WaitOnTXEFlagUntilTimeout>
 80041c2:	2800      	cmp	r0, #0
 80041c4:	d1e2      	bne.n	800418c <I2C_RequestMemoryWrite+0x70>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 80041c6:	6823      	ldr	r3, [r4, #0]
 80041c8:	e7f1      	b.n	80041ae <I2C_RequestMemoryWrite+0x92>
 80041ca:	bf00      	nop
 80041cc:	00010002 	.word	0x00010002

080041d0 <I2C_RequestMemoryRead>:
{
 80041d0:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 80041d4:	469a      	mov	sl, r3
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 80041d6:	6803      	ldr	r3, [r0, #0]
{
 80041d8:	4615      	mov	r5, r2
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 80041da:	681a      	ldr	r2, [r3, #0]
 80041dc:	f442 6280 	orr.w	r2, r2, #1024	@ 0x400
 80041e0:	601a      	str	r2, [r3, #0]
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 80041e2:	681a      	ldr	r2, [r3, #0]
{
 80041e4:	e9dd 780c 	ldrd	r7, r8, [sp, #48]	@ 0x30
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 80041e8:	f442 7280 	orr.w	r2, r2, #256	@ 0x100
 80041ec:	601a      	str	r2, [r3, #0]
{
 80041ee:	460e      	mov	r6, r1
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 80041f0:	463b      	mov	r3, r7
 80041f2:	f8cd 8000 	str.w	r8, [sp]
 80041f6:	2200      	movs	r2, #0
 80041f8:	f04f 1101 	mov.w	r1, #65537	@ 0x10001
{
 80041fc:	4604      	mov	r4, r0
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 80041fe:	f7ff fee1 	bl	8003fc4 <I2C_WaitOnFlagUntilTimeout>
 8004202:	6823      	ldr	r3, [r4, #0]
 8004204:	b138      	cbz	r0, 8004216 <I2C_RequestMemoryRead+0x46>
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 8004206:	681b      	ldr	r3, [r3, #0]
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 8004208:	05db      	lsls	r3, r3, #23
      hi2c->ErrorCode = HAL_I2C_WRONG_START;
 800420a:	bf44      	itt	mi
 800420c:	f44f 7300 	movmi.w	r3, #512	@ 0x200
 8004210:	6423      	strmi	r3, [r4, #64]	@ 0x40
    return HAL_TIMEOUT;
 8004212:	2003      	movs	r0, #3
 8004214:	e021      	b.n	800425a <I2C_RequestMemoryRead+0x8a>
  hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(DevAddress);
 8004216:	fa5f f986 	uxtb.w	r9, r6
 800421a:	f006 06fe 	and.w	r6, r6, #254	@ 0xfe
 800421e:	611e      	str	r6, [r3, #16]
  if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, Timeout, Tickstart) != HAL_OK)
 8004220:	492b      	ldr	r1, [pc, #172]	@ (80042d0 <I2C_RequestMemoryRead+0x100>)
 8004222:	4643      	mov	r3, r8
 8004224:	463a      	mov	r2, r7
 8004226:	4620      	mov	r0, r4
 8004228:	f7ff ff0c 	bl	8004044 <I2C_WaitOnMasterAddressFlagUntilTimeout>
 800422c:	b9a0      	cbnz	r0, 8004258 <I2C_RequestMemoryRead+0x88>
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800422e:	6823      	ldr	r3, [r4, #0]
 8004230:	9003      	str	r0, [sp, #12]
 8004232:	695a      	ldr	r2, [r3, #20]
 8004234:	9203      	str	r2, [sp, #12]
 8004236:	699b      	ldr	r3, [r3, #24]
 8004238:	9303      	str	r3, [sp, #12]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 800423a:	4642      	mov	r2, r8
 800423c:	4639      	mov	r1, r7
 800423e:	4620      	mov	r0, r4
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8004240:	9b03      	ldr	r3, [sp, #12]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8004242:	f7ff ff41 	bl	80040c8 <I2C_WaitOnTXEFlagUntilTimeout>
 8004246:	b158      	cbz	r0, 8004260 <I2C_RequestMemoryRead+0x90>
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 8004248:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 800424a:	2b04      	cmp	r3, #4
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800424c:	bf01      	itttt	eq
 800424e:	6822      	ldreq	r2, [r4, #0]
 8004250:	6813      	ldreq	r3, [r2, #0]
 8004252:	f443 7300 	orreq.w	r3, r3, #512	@ 0x200
 8004256:	6013      	streq	r3, [r2, #0]
    return HAL_ERROR;
 8004258:	2001      	movs	r0, #1
}
 800425a:	b004      	add	sp, #16
 800425c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 8004260:	f1ba 0f01 	cmp.w	sl, #1
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8004264:	6823      	ldr	r3, [r4, #0]
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 8004266:	d11a      	bne.n	800429e <I2C_RequestMemoryRead+0xce>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 8004268:	b2ed      	uxtb	r5, r5
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 800426a:	4642      	mov	r2, r8
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 800426c:	611d      	str	r5, [r3, #16]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 800426e:	4639      	mov	r1, r7
 8004270:	4620      	mov	r0, r4
 8004272:	f7ff ff29 	bl	80040c8 <I2C_WaitOnTXEFlagUntilTimeout>
 8004276:	4602      	mov	r2, r0
 8004278:	2800      	cmp	r0, #0
 800427a:	d1e5      	bne.n	8004248 <I2C_RequestMemoryRead+0x78>
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 800427c:	6821      	ldr	r1, [r4, #0]
 800427e:	680b      	ldr	r3, [r1, #0]
 8004280:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8004284:	600b      	str	r3, [r1, #0]
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 8004286:	4620      	mov	r0, r4
 8004288:	f8cd 8000 	str.w	r8, [sp]
 800428c:	463b      	mov	r3, r7
 800428e:	f04f 1101 	mov.w	r1, #65537	@ 0x10001
 8004292:	f7ff fe97 	bl	8003fc4 <I2C_WaitOnFlagUntilTimeout>
 8004296:	6822      	ldr	r2, [r4, #0]
 8004298:	b160      	cbz	r0, 80042b4 <I2C_RequestMemoryRead+0xe4>
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 800429a:	6813      	ldr	r3, [r2, #0]
 800429c:	e7b4      	b.n	8004208 <I2C_RequestMemoryRead+0x38>
    hi2c->Instance->DR = I2C_MEM_ADD_MSB(MemAddress);
 800429e:	0a2a      	lsrs	r2, r5, #8
 80042a0:	611a      	str	r2, [r3, #16]
    if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 80042a2:	4639      	mov	r1, r7
 80042a4:	4642      	mov	r2, r8
 80042a6:	4620      	mov	r0, r4
 80042a8:	f7ff ff0e 	bl	80040c8 <I2C_WaitOnTXEFlagUntilTimeout>
 80042ac:	2800      	cmp	r0, #0
 80042ae:	d1cb      	bne.n	8004248 <I2C_RequestMemoryRead+0x78>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 80042b0:	6823      	ldr	r3, [r4, #0]
 80042b2:	e7d9      	b.n	8004268 <I2C_RequestMemoryRead+0x98>
  hi2c->Instance->DR = I2C_7BIT_ADD_READ(DevAddress);
 80042b4:	f049 0301 	orr.w	r3, r9, #1
 80042b8:	6113      	str	r3, [r2, #16]
  if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, Timeout, Tickstart) != HAL_OK)
 80042ba:	4905      	ldr	r1, [pc, #20]	@ (80042d0 <I2C_RequestMemoryRead+0x100>)
 80042bc:	4643      	mov	r3, r8
 80042be:	463a      	mov	r2, r7
 80042c0:	4620      	mov	r0, r4
 80042c2:	f7ff febf 	bl	8004044 <I2C_WaitOnMasterAddressFlagUntilTimeout>
 80042c6:	3800      	subs	r0, #0
 80042c8:	bf18      	it	ne
 80042ca:	2001      	movne	r0, #1
 80042cc:	e7c5      	b.n	800425a <I2C_RequestMemoryRead+0x8a>
 80042ce:	bf00      	nop
 80042d0:	00010002 	.word	0x00010002

080042d4 <I2C_WaitOnBTFFlagUntilTimeout>:
{
 80042d4:	b570      	push	{r4, r5, r6, lr}
 80042d6:	4604      	mov	r4, r0
 80042d8:	460d      	mov	r5, r1
 80042da:	4616      	mov	r6, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == RESET)
 80042dc:	6823      	ldr	r3, [r4, #0]
 80042de:	695b      	ldr	r3, [r3, #20]
 80042e0:	075b      	lsls	r3, r3, #29
 80042e2:	d501      	bpl.n	80042e8 <I2C_WaitOnBTFFlagUntilTimeout+0x14>
  return HAL_OK;
 80042e4:	2000      	movs	r0, #0
 80042e6:	e01e      	b.n	8004326 <I2C_WaitOnBTFFlagUntilTimeout+0x52>
    if (I2C_IsAcknowledgeFailed(hi2c) != HAL_OK)
 80042e8:	4620      	mov	r0, r4
 80042ea:	f7ff fe51 	bl	8003f90 <I2C_IsAcknowledgeFailed>
 80042ee:	b9c8      	cbnz	r0, 8004324 <I2C_WaitOnBTFFlagUntilTimeout+0x50>
    if (Timeout != HAL_MAX_DELAY)
 80042f0:	1c6a      	adds	r2, r5, #1
 80042f2:	d0f3      	beq.n	80042dc <I2C_WaitOnBTFFlagUntilTimeout+0x8>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 80042f4:	f7ff fbde 	bl	8003ab4 <HAL_GetTick>
 80042f8:	1b80      	subs	r0, r0, r6
 80042fa:	42a8      	cmp	r0, r5
 80042fc:	d801      	bhi.n	8004302 <I2C_WaitOnBTFFlagUntilTimeout+0x2e>
 80042fe:	2d00      	cmp	r5, #0
 8004300:	d1ec      	bne.n	80042dc <I2C_WaitOnBTFFlagUntilTimeout+0x8>
        if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == RESET))
 8004302:	6823      	ldr	r3, [r4, #0]
 8004304:	695b      	ldr	r3, [r3, #20]
 8004306:	f013 0304 	ands.w	r3, r3, #4
 800430a:	d1e7      	bne.n	80042dc <I2C_WaitOnBTFFlagUntilTimeout+0x8>
          hi2c->State               = HAL_I2C_STATE_READY;
 800430c:	2220      	movs	r2, #32
          hi2c->PreviousState       = I2C_STATE_NONE;
 800430e:	6323      	str	r3, [r4, #48]	@ 0x30
          hi2c->State               = HAL_I2C_STATE_READY;
 8004310:	f884 203d 	strb.w	r2, [r4, #61]	@ 0x3d
          hi2c->Mode                = HAL_I2C_MODE_NONE;
 8004314:	f884 303e 	strb.w	r3, [r4, #62]	@ 0x3e
          hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8004318:	6c22      	ldr	r2, [r4, #64]	@ 0x40
          __HAL_UNLOCK(hi2c);
 800431a:	f884 303c 	strb.w	r3, [r4, #60]	@ 0x3c
          hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 800431e:	f042 0220 	orr.w	r2, r2, #32
 8004322:	6422      	str	r2, [r4, #64]	@ 0x40
      return HAL_ERROR;
 8004324:	2001      	movs	r0, #1
}
 8004326:	bd70      	pop	{r4, r5, r6, pc}

08004328 <I2C_WaitOnRXNEFlagUntilTimeout>:
{
 8004328:	b570      	push	{r4, r5, r6, lr}
 800432a:	4604      	mov	r4, r0
 800432c:	460d      	mov	r5, r1
 800432e:	4616      	mov	r6, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
 8004330:	6821      	ldr	r1, [r4, #0]
 8004332:	694b      	ldr	r3, [r1, #20]
 8004334:	f013 0340 	ands.w	r3, r3, #64	@ 0x40
 8004338:	d001      	beq.n	800433e <I2C_WaitOnRXNEFlagUntilTimeout+0x16>
  return HAL_OK;
 800433a:	2000      	movs	r0, #0
 800433c:	e011      	b.n	8004362 <I2C_WaitOnRXNEFlagUntilTimeout+0x3a>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == SET)
 800433e:	694a      	ldr	r2, [r1, #20]
 8004340:	06d2      	lsls	r2, r2, #27
 8004342:	d50f      	bpl.n	8004364 <I2C_WaitOnRXNEFlagUntilTimeout+0x3c>
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 8004344:	f06f 0210 	mvn.w	r2, #16
 8004348:	614a      	str	r2, [r1, #20]
      hi2c->State               = HAL_I2C_STATE_READY;
 800434a:	2220      	movs	r2, #32
      hi2c->PreviousState       = I2C_STATE_NONE;
 800434c:	6323      	str	r3, [r4, #48]	@ 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 800434e:	f884 203d 	strb.w	r2, [r4, #61]	@ 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 8004352:	f884 303e 	strb.w	r3, [r4, #62]	@ 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_NONE;
 8004356:	6c23      	ldr	r3, [r4, #64]	@ 0x40
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8004358:	6423      	str	r3, [r4, #64]	@ 0x40
        __HAL_UNLOCK(hi2c);
 800435a:	2300      	movs	r3, #0
 800435c:	f884 303c 	strb.w	r3, [r4, #60]	@ 0x3c
      return HAL_ERROR;
 8004360:	2001      	movs	r0, #1
}
 8004362:	bd70      	pop	{r4, r5, r6, pc}
    if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8004364:	f7ff fba6 	bl	8003ab4 <HAL_GetTick>
 8004368:	1b80      	subs	r0, r0, r6
 800436a:	42a8      	cmp	r0, r5
 800436c:	d801      	bhi.n	8004372 <I2C_WaitOnRXNEFlagUntilTimeout+0x4a>
 800436e:	2d00      	cmp	r5, #0
 8004370:	d1de      	bne.n	8004330 <I2C_WaitOnRXNEFlagUntilTimeout+0x8>
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET))
 8004372:	6823      	ldr	r3, [r4, #0]
 8004374:	695b      	ldr	r3, [r3, #20]
 8004376:	f013 0340 	ands.w	r3, r3, #64	@ 0x40
 800437a:	d1d9      	bne.n	8004330 <I2C_WaitOnRXNEFlagUntilTimeout+0x8>
        hi2c->State               = HAL_I2C_STATE_READY;
 800437c:	2220      	movs	r2, #32
        hi2c->PreviousState       = I2C_STATE_NONE;
 800437e:	6323      	str	r3, [r4, #48]	@ 0x30
        hi2c->State               = HAL_I2C_STATE_READY;
 8004380:	f884 203d 	strb.w	r2, [r4, #61]	@ 0x3d
        hi2c->Mode                = HAL_I2C_MODE_NONE;
 8004384:	f884 303e 	strb.w	r3, [r4, #62]	@ 0x3e
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8004388:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 800438a:	4313      	orrs	r3, r2
 800438c:	e7e4      	b.n	8004358 <I2C_WaitOnRXNEFlagUntilTimeout+0x30>
	...

08004390 <HAL_I2C_Init>:
{
 8004390:	b570      	push	{r4, r5, r6, lr}
  if (hi2c == NULL)
 8004392:	4604      	mov	r4, r0
 8004394:	b908      	cbnz	r0, 800439a <HAL_I2C_Init+0xa>
    return HAL_ERROR;
 8004396:	2001      	movs	r0, #1
}
 8004398:	bd70      	pop	{r4, r5, r6, pc}
  if (hi2c->State == HAL_I2C_STATE_RESET)
 800439a:	f890 303d 	ldrb.w	r3, [r0, #61]	@ 0x3d
 800439e:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
 80043a2:	b91b      	cbnz	r3, 80043ac <HAL_I2C_Init+0x1c>
    hi2c->Lock = HAL_UNLOCKED;
 80043a4:	f880 203c 	strb.w	r2, [r0, #60]	@ 0x3c
    HAL_I2C_MspInit(hi2c);
 80043a8:	f7fe f89c 	bl	80024e4 <HAL_I2C_MspInit>
  hi2c->State = HAL_I2C_STATE_BUSY;
 80043ac:	2324      	movs	r3, #36	@ 0x24
 80043ae:	f884 303d 	strb.w	r3, [r4, #61]	@ 0x3d
  __HAL_I2C_DISABLE(hi2c);
 80043b2:	6823      	ldr	r3, [r4, #0]
 80043b4:	681a      	ldr	r2, [r3, #0]
 80043b6:	f022 0201 	bic.w	r2, r2, #1
 80043ba:	601a      	str	r2, [r3, #0]
  hi2c->Instance->CR1 |= I2C_CR1_SWRST;
 80043bc:	681a      	ldr	r2, [r3, #0]
 80043be:	f442 4200 	orr.w	r2, r2, #32768	@ 0x8000
 80043c2:	601a      	str	r2, [r3, #0]
  hi2c->Instance->CR1 &= ~I2C_CR1_SWRST;
 80043c4:	681a      	ldr	r2, [r3, #0]
 80043c6:	f422 4200 	bic.w	r2, r2, #32768	@ 0x8000
 80043ca:	601a      	str	r2, [r3, #0]
  pclk1 = HAL_RCC_GetPCLK1Freq();
 80043cc:	f001 fb9e 	bl	8005b0c <HAL_RCC_GetPCLK1Freq>
  if (I2C_MIN_PCLK_FREQ(pclk1, hi2c->Init.ClockSpeed) == 1U)
 80043d0:	4b3f      	ldr	r3, [pc, #252]	@ (80044d0 <HAL_I2C_Init+0x140>)
 80043d2:	6865      	ldr	r5, [r4, #4]
 80043d4:	429d      	cmp	r5, r3
 80043d6:	bf94      	ite	ls
 80043d8:	4b3e      	ldrls	r3, [pc, #248]	@ (80044d4 <HAL_I2C_Init+0x144>)
 80043da:	4b3f      	ldrhi	r3, [pc, #252]	@ (80044d8 <HAL_I2C_Init+0x148>)
 80043dc:	4298      	cmp	r0, r3
 80043de:	bf8c      	ite	hi
 80043e0:	2300      	movhi	r3, #0
 80043e2:	2301      	movls	r3, #1
 80043e4:	2b00      	cmp	r3, #0
 80043e6:	d1d6      	bne.n	8004396 <HAL_I2C_Init+0x6>
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 80043e8:	6822      	ldr	r2, [r4, #0]
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 80043ea:	4e39      	ldr	r6, [pc, #228]	@ (80044d0 <HAL_I2C_Init+0x140>)
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 80043ec:	6851      	ldr	r1, [r2, #4]
  freqrange = I2C_FREQRANGE(pclk1);
 80043ee:	4b3b      	ldr	r3, [pc, #236]	@ (80044dc <HAL_I2C_Init+0x14c>)
 80043f0:	fbb0 f3f3 	udiv	r3, r0, r3
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 80043f4:	f021 013f 	bic.w	r1, r1, #63	@ 0x3f
 80043f8:	4319      	orrs	r1, r3
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 80043fa:	42b5      	cmp	r5, r6
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 80043fc:	6051      	str	r1, [r2, #4]
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 80043fe:	bf88      	it	hi
 8004400:	f44f 7696 	movhi.w	r6, #300	@ 0x12c
 8004404:	6a11      	ldr	r1, [r2, #32]
 8004406:	bf88      	it	hi
 8004408:	4373      	mulhi	r3, r6
 800440a:	f021 013f 	bic.w	r1, r1, #63	@ 0x3f
 800440e:	bf84      	itt	hi
 8004410:	f44f 767a 	movhi.w	r6, #1000	@ 0x3e8
 8004414:	fbb3 f3f6 	udivhi	r3, r3, r6
 8004418:	3301      	adds	r3, #1
 800441a:	430b      	orrs	r3, r1
 800441c:	6213      	str	r3, [r2, #32]
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 800441e:	69d1      	ldr	r1, [r2, #28]
 8004420:	1e43      	subs	r3, r0, #1
 8004422:	482b      	ldr	r0, [pc, #172]	@ (80044d0 <HAL_I2C_Init+0x140>)
 8004424:	f421 414f 	bic.w	r1, r1, #52992	@ 0xcf00
 8004428:	4285      	cmp	r5, r0
 800442a:	f021 01ff 	bic.w	r1, r1, #255	@ 0xff
 800442e:	d832      	bhi.n	8004496 <HAL_I2C_Init+0x106>
 8004430:	006d      	lsls	r5, r5, #1
 8004432:	f640 70fc 	movw	r0, #4092	@ 0xffc
 8004436:	fbb3 f3f5 	udiv	r3, r3, r5
 800443a:	3301      	adds	r3, #1
 800443c:	4203      	tst	r3, r0
 800443e:	d042      	beq.n	80044c6 <HAL_I2C_Init+0x136>
 8004440:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8004444:	4319      	orrs	r1, r3
 8004446:	61d1      	str	r1, [r2, #28]
  MODIFY_REG(hi2c->Instance->CR1, (I2C_CR1_ENGC | I2C_CR1_NOSTRETCH), (hi2c->Init.GeneralCallMode | hi2c->Init.NoStretchMode));
 8004448:	e9d4 3007 	ldrd	r3, r0, [r4, #28]
 800444c:	6811      	ldr	r1, [r2, #0]
 800444e:	4303      	orrs	r3, r0
 8004450:	f021 01c0 	bic.w	r1, r1, #192	@ 0xc0
 8004454:	430b      	orrs	r3, r1
 8004456:	6013      	str	r3, [r2, #0]
  MODIFY_REG(hi2c->Instance->OAR1, (I2C_OAR1_ADDMODE | I2C_OAR1_ADD8_9 | I2C_OAR1_ADD1_7 | I2C_OAR1_ADD0), (hi2c->Init.AddressingMode | hi2c->Init.OwnAddress1));
 8004458:	6891      	ldr	r1, [r2, #8]
 800445a:	e9d4 0303 	ldrd	r0, r3, [r4, #12]
 800445e:	f421 4103 	bic.w	r1, r1, #33536	@ 0x8300
 8004462:	4303      	orrs	r3, r0
 8004464:	f021 01ff 	bic.w	r1, r1, #255	@ 0xff
 8004468:	430b      	orrs	r3, r1
 800446a:	6093      	str	r3, [r2, #8]
  MODIFY_REG(hi2c->Instance->OAR2, (I2C_OAR2_ENDUAL | I2C_OAR2_ADD2), (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2));
 800446c:	e9d4 3005 	ldrd	r3, r0, [r4, #20]
 8004470:	68d1      	ldr	r1, [r2, #12]
 8004472:	4303      	orrs	r3, r0
 8004474:	f021 01ff 	bic.w	r1, r1, #255	@ 0xff
 8004478:	430b      	orrs	r3, r1
 800447a:	60d3      	str	r3, [r2, #12]
  __HAL_I2C_ENABLE(hi2c);
 800447c:	6813      	ldr	r3, [r2, #0]
 800447e:	f043 0301 	orr.w	r3, r3, #1
 8004482:	6013      	str	r3, [r2, #0]
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8004484:	2000      	movs	r0, #0
  hi2c->State = HAL_I2C_STATE_READY;
 8004486:	2320      	movs	r3, #32
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8004488:	6420      	str	r0, [r4, #64]	@ 0x40
  hi2c->State = HAL_I2C_STATE_READY;
 800448a:	f884 303d 	strb.w	r3, [r4, #61]	@ 0x3d
  hi2c->PreviousState = I2C_STATE_NONE;
 800448e:	6320      	str	r0, [r4, #48]	@ 0x30
  hi2c->Mode = HAL_I2C_MODE_NONE;
 8004490:	f884 003e 	strb.w	r0, [r4, #62]	@ 0x3e
  return HAL_OK;
 8004494:	e780      	b.n	8004398 <HAL_I2C_Init+0x8>
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 8004496:	68a0      	ldr	r0, [r4, #8]
 8004498:	b950      	cbnz	r0, 80044b0 <HAL_I2C_Init+0x120>
 800449a:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 800449e:	fbb3 f3f5 	udiv	r3, r3, r5
 80044a2:	3301      	adds	r3, #1
 80044a4:	f3c3 030b 	ubfx	r3, r3, #0, #12
 80044a8:	b17b      	cbz	r3, 80044ca <HAL_I2C_Init+0x13a>
 80044aa:	f443 4300 	orr.w	r3, r3, #32768	@ 0x8000
 80044ae:	e7c9      	b.n	8004444 <HAL_I2C_Init+0xb4>
 80044b0:	2019      	movs	r0, #25
 80044b2:	4368      	muls	r0, r5
 80044b4:	fbb3 f3f0 	udiv	r3, r3, r0
 80044b8:	3301      	adds	r3, #1
 80044ba:	f3c3 030b 	ubfx	r3, r3, #0, #12
 80044be:	b123      	cbz	r3, 80044ca <HAL_I2C_Init+0x13a>
 80044c0:	f443 4340 	orr.w	r3, r3, #49152	@ 0xc000
 80044c4:	e7be      	b.n	8004444 <HAL_I2C_Init+0xb4>
 80044c6:	2304      	movs	r3, #4
 80044c8:	e7bc      	b.n	8004444 <HAL_I2C_Init+0xb4>
 80044ca:	2301      	movs	r3, #1
 80044cc:	e7ba      	b.n	8004444 <HAL_I2C_Init+0xb4>
 80044ce:	bf00      	nop
 80044d0:	000186a0 	.word	0x000186a0
 80044d4:	001e847f 	.word	0x001e847f
 80044d8:	003d08ff 	.word	0x003d08ff
 80044dc:	000f4240 	.word	0x000f4240

080044e0 <HAL_I2C_Mem_Write>:
{
 80044e0:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 80044e4:	4604      	mov	r4, r0
 80044e6:	4699      	mov	r9, r3
 80044e8:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 80044ea:	460f      	mov	r7, r1
 80044ec:	4690      	mov	r8, r2
  uint32_t tickstart = HAL_GetTick();
 80044ee:	f7ff fae1 	bl	8003ab4 <HAL_GetTick>
  if (hi2c->State == HAL_I2C_STATE_READY)
 80044f2:	f894 303d 	ldrb.w	r3, [r4, #61]	@ 0x3d
 80044f6:	2b20      	cmp	r3, #32
  uint32_t tickstart = HAL_GetTick();
 80044f8:	4605      	mov	r5, r0
  if (hi2c->State == HAL_I2C_STATE_READY)
 80044fa:	d003      	beq.n	8004504 <HAL_I2C_Mem_Write+0x24>
      return HAL_BUSY;
 80044fc:	2002      	movs	r0, #2
}
 80044fe:	b003      	add	sp, #12
 8004500:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY_FLAG, tickstart) != HAL_OK)
 8004504:	9000      	str	r0, [sp, #0]
 8004506:	493c      	ldr	r1, [pc, #240]	@ (80045f8 <HAL_I2C_Mem_Write+0x118>)
 8004508:	2319      	movs	r3, #25
 800450a:	2201      	movs	r2, #1
 800450c:	4620      	mov	r0, r4
 800450e:	f7ff fd59 	bl	8003fc4 <I2C_WaitOnFlagUntilTimeout>
 8004512:	2800      	cmp	r0, #0
 8004514:	d1f2      	bne.n	80044fc <HAL_I2C_Mem_Write+0x1c>
    __HAL_LOCK(hi2c);
 8004516:	f894 303c 	ldrb.w	r3, [r4, #60]	@ 0x3c
 800451a:	2b01      	cmp	r3, #1
 800451c:	d0ee      	beq.n	80044fc <HAL_I2C_Mem_Write+0x1c>
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 800451e:	6820      	ldr	r0, [r4, #0]
    __HAL_LOCK(hi2c);
 8004520:	2301      	movs	r3, #1
 8004522:	f884 303c 	strb.w	r3, [r4, #60]	@ 0x3c
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 8004526:	6803      	ldr	r3, [r0, #0]
 8004528:	07d9      	lsls	r1, r3, #31
      __HAL_I2C_ENABLE(hi2c);
 800452a:	bf5e      	ittt	pl
 800452c:	6803      	ldrpl	r3, [r0, #0]
 800452e:	f043 0301 	orrpl.w	r3, r3, #1
 8004532:	6003      	strpl	r3, [r0, #0]
    CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 8004534:	6803      	ldr	r3, [r0, #0]
 8004536:	f423 6300 	bic.w	r3, r3, #2048	@ 0x800
 800453a:	6003      	str	r3, [r0, #0]
    hi2c->State     = HAL_I2C_STATE_BUSY_TX;
 800453c:	2321      	movs	r3, #33	@ 0x21
 800453e:	f884 303d 	strb.w	r3, [r4, #61]	@ 0x3d
    hi2c->Mode      = HAL_I2C_MODE_MEM;
 8004542:	2340      	movs	r3, #64	@ 0x40
 8004544:	f884 303e 	strb.w	r3, [r4, #62]	@ 0x3e
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8004548:	2300      	movs	r3, #0
 800454a:	6423      	str	r3, [r4, #64]	@ 0x40
    hi2c->pBuffPtr    = pData;
 800454c:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 800454e:	6263      	str	r3, [r4, #36]	@ 0x24
    hi2c->XferCount   = Size;
 8004550:	f8bd 302c 	ldrh.w	r3, [sp, #44]	@ 0x2c
 8004554:	8563      	strh	r3, [r4, #42]	@ 0x2a
    hi2c->XferSize    = hi2c->XferCount;
 8004556:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
 8004558:	8523      	strh	r3, [r4, #40]	@ 0x28
    hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 800455a:	4b28      	ldr	r3, [pc, #160]	@ (80045fc <HAL_I2C_Mem_Write+0x11c>)
 800455c:	62e3      	str	r3, [r4, #44]	@ 0x2c
    if (I2C_RequestMemoryWrite(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 800455e:	4642      	mov	r2, r8
 8004560:	e9cd 6500 	strd	r6, r5, [sp]
 8004564:	464b      	mov	r3, r9
 8004566:	4639      	mov	r1, r7
 8004568:	4620      	mov	r0, r4
 800456a:	f7ff fdd7 	bl	800411c <I2C_RequestMemoryWrite>
 800456e:	2800      	cmp	r0, #0
 8004570:	d02a      	beq.n	80045c8 <HAL_I2C_Mem_Write+0xe8>
      return HAL_ERROR;
 8004572:	2001      	movs	r0, #1
 8004574:	e7c3      	b.n	80044fe <HAL_I2C_Mem_Write+0x1e>
      if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8004576:	f7ff fda7 	bl	80040c8 <I2C_WaitOnTXEFlagUntilTimeout>
 800457a:	b140      	cbz	r0, 800458e <HAL_I2C_Mem_Write+0xae>
        if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 800457c:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 800457e:	2b04      	cmp	r3, #4
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8004580:	bf01      	itttt	eq
 8004582:	6822      	ldreq	r2, [r4, #0]
 8004584:	6813      	ldreq	r3, [r2, #0]
 8004586:	f443 7300 	orreq.w	r3, r3, #512	@ 0x200
 800458a:	6013      	streq	r3, [r2, #0]
 800458c:	e7f1      	b.n	8004572 <HAL_I2C_Mem_Write+0x92>
      hi2c->Instance->DR = *hi2c->pBuffPtr;
 800458e:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 8004590:	6827      	ldr	r7, [r4, #0]
 8004592:	461a      	mov	r2, r3
 8004594:	f812 1b01 	ldrb.w	r1, [r2], #1
 8004598:	6139      	str	r1, [r7, #16]
      hi2c->pBuffPtr++;
 800459a:	6262      	str	r2, [r4, #36]	@ 0x24
      hi2c->XferCount--;
 800459c:	8d62      	ldrh	r2, [r4, #42]	@ 0x2a
      hi2c->XferSize--;
 800459e:	8d21      	ldrh	r1, [r4, #40]	@ 0x28
      hi2c->XferCount--;
 80045a0:	3a01      	subs	r2, #1
 80045a2:	b292      	uxth	r2, r2
 80045a4:	8562      	strh	r2, [r4, #42]	@ 0x2a
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 80045a6:	697a      	ldr	r2, [r7, #20]
      hi2c->XferSize--;
 80045a8:	1e48      	subs	r0, r1, #1
 80045aa:	b280      	uxth	r0, r0
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 80045ac:	0752      	lsls	r2, r2, #29
      hi2c->XferSize--;
 80045ae:	8520      	strh	r0, [r4, #40]	@ 0x28
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 80045b0:	d50a      	bpl.n	80045c8 <HAL_I2C_Mem_Write+0xe8>
 80045b2:	b148      	cbz	r0, 80045c8 <HAL_I2C_Mem_Write+0xe8>
        hi2c->Instance->DR = *hi2c->pBuffPtr;
 80045b4:	785a      	ldrb	r2, [r3, #1]
 80045b6:	613a      	str	r2, [r7, #16]
        hi2c->pBuffPtr++;
 80045b8:	3302      	adds	r3, #2
 80045ba:	6263      	str	r3, [r4, #36]	@ 0x24
        hi2c->XferCount--;
 80045bc:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
 80045be:	3b01      	subs	r3, #1
        hi2c->XferSize--;
 80045c0:	3902      	subs	r1, #2
        hi2c->XferCount--;
 80045c2:	b29b      	uxth	r3, r3
        hi2c->XferSize--;
 80045c4:	8521      	strh	r1, [r4, #40]	@ 0x28
        hi2c->XferCount--;
 80045c6:	8563      	strh	r3, [r4, #42]	@ 0x2a
    while (hi2c->XferSize > 0U)
 80045c8:	8d23      	ldrh	r3, [r4, #40]	@ 0x28
      if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 80045ca:	462a      	mov	r2, r5
 80045cc:	4631      	mov	r1, r6
 80045ce:	4620      	mov	r0, r4
    while (hi2c->XferSize > 0U)
 80045d0:	2b00      	cmp	r3, #0
 80045d2:	d1d0      	bne.n	8004576 <HAL_I2C_Mem_Write+0x96>
    if (I2C_WaitOnBTFFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 80045d4:	f7ff fe7e 	bl	80042d4 <I2C_WaitOnBTFFlagUntilTimeout>
 80045d8:	2800      	cmp	r0, #0
 80045da:	d1cf      	bne.n	800457c <HAL_I2C_Mem_Write+0x9c>
    SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 80045dc:	6822      	ldr	r2, [r4, #0]
 80045de:	6813      	ldr	r3, [r2, #0]
 80045e0:	f443 7300 	orr.w	r3, r3, #512	@ 0x200
 80045e4:	6013      	str	r3, [r2, #0]
    hi2c->State = HAL_I2C_STATE_READY;
 80045e6:	2320      	movs	r3, #32
 80045e8:	f884 303d 	strb.w	r3, [r4, #61]	@ 0x3d
    __HAL_UNLOCK(hi2c);
 80045ec:	f884 003c 	strb.w	r0, [r4, #60]	@ 0x3c
    hi2c->Mode = HAL_I2C_MODE_NONE;
 80045f0:	f884 003e 	strb.w	r0, [r4, #62]	@ 0x3e
    return HAL_OK;
 80045f4:	e783      	b.n	80044fe <HAL_I2C_Mem_Write+0x1e>
 80045f6:	bf00      	nop
 80045f8:	00100002 	.word	0x00100002
 80045fc:	ffff0000 	.word	0xffff0000

08004600 <HAL_I2C_Mem_Read>:
{
 8004600:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8004604:	4604      	mov	r4, r0
 8004606:	b087      	sub	sp, #28
 8004608:	4699      	mov	r9, r3
 800460a:	9f10      	ldr	r7, [sp, #64]	@ 0x40
 800460c:	460d      	mov	r5, r1
 800460e:	4690      	mov	r8, r2
  uint32_t tickstart = HAL_GetTick();
 8004610:	f7ff fa50 	bl	8003ab4 <HAL_GetTick>
  if (hi2c->State == HAL_I2C_STATE_READY)
 8004614:	f894 303d 	ldrb.w	r3, [r4, #61]	@ 0x3d
 8004618:	2b20      	cmp	r3, #32
  uint32_t tickstart = HAL_GetTick();
 800461a:	4606      	mov	r6, r0
  if (hi2c->State == HAL_I2C_STATE_READY)
 800461c:	d004      	beq.n	8004628 <HAL_I2C_Mem_Read+0x28>
      return HAL_BUSY;
 800461e:	2502      	movs	r5, #2
}
 8004620:	4628      	mov	r0, r5
 8004622:	b007      	add	sp, #28
 8004624:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY_FLAG, tickstart) != HAL_OK)
 8004628:	9000      	str	r0, [sp, #0]
 800462a:	497a      	ldr	r1, [pc, #488]	@ (8004814 <HAL_I2C_Mem_Read+0x214>)
 800462c:	2319      	movs	r3, #25
 800462e:	2201      	movs	r2, #1
 8004630:	4620      	mov	r0, r4
 8004632:	f7ff fcc7 	bl	8003fc4 <I2C_WaitOnFlagUntilTimeout>
 8004636:	2800      	cmp	r0, #0
 8004638:	d1f1      	bne.n	800461e <HAL_I2C_Mem_Read+0x1e>
    __HAL_LOCK(hi2c);
 800463a:	f894 303c 	ldrb.w	r3, [r4, #60]	@ 0x3c
 800463e:	2b01      	cmp	r3, #1
 8004640:	d0ed      	beq.n	800461e <HAL_I2C_Mem_Read+0x1e>
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 8004642:	6820      	ldr	r0, [r4, #0]
    __HAL_LOCK(hi2c);
 8004644:	2301      	movs	r3, #1
 8004646:	f884 303c 	strb.w	r3, [r4, #60]	@ 0x3c
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 800464a:	6803      	ldr	r3, [r0, #0]
 800464c:	07db      	lsls	r3, r3, #31
      __HAL_I2C_ENABLE(hi2c);
 800464e:	bf5e      	ittt	pl
 8004650:	6803      	ldrpl	r3, [r0, #0]
 8004652:	f043 0301 	orrpl.w	r3, r3, #1
 8004656:	6003      	strpl	r3, [r0, #0]
    CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 8004658:	6803      	ldr	r3, [r0, #0]
 800465a:	f423 6300 	bic.w	r3, r3, #2048	@ 0x800
 800465e:	6003      	str	r3, [r0, #0]
    hi2c->State     = HAL_I2C_STATE_BUSY_RX;
 8004660:	2322      	movs	r3, #34	@ 0x22
 8004662:	f884 303d 	strb.w	r3, [r4, #61]	@ 0x3d
    hi2c->Mode      = HAL_I2C_MODE_MEM;
 8004666:	2340      	movs	r3, #64	@ 0x40
 8004668:	f884 303e 	strb.w	r3, [r4, #62]	@ 0x3e
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 800466c:	2300      	movs	r3, #0
 800466e:	6423      	str	r3, [r4, #64]	@ 0x40
    hi2c->pBuffPtr    = pData;
 8004670:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8004672:	6263      	str	r3, [r4, #36]	@ 0x24
    hi2c->XferCount   = Size;
 8004674:	f8bd 303c 	ldrh.w	r3, [sp, #60]	@ 0x3c
 8004678:	8563      	strh	r3, [r4, #42]	@ 0x2a
    hi2c->XferSize    = hi2c->XferCount;
 800467a:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
 800467c:	8523      	strh	r3, [r4, #40]	@ 0x28
    hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 800467e:	4b66      	ldr	r3, [pc, #408]	@ (8004818 <HAL_I2C_Mem_Read+0x218>)
 8004680:	62e3      	str	r3, [r4, #44]	@ 0x2c
    if (I2C_RequestMemoryRead(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 8004682:	4629      	mov	r1, r5
 8004684:	e9cd 7600 	strd	r7, r6, [sp]
 8004688:	464b      	mov	r3, r9
 800468a:	4642      	mov	r2, r8
 800468c:	4620      	mov	r0, r4
 800468e:	f7ff fd9f 	bl	80041d0 <I2C_RequestMemoryRead>
 8004692:	4605      	mov	r5, r0
 8004694:	b108      	cbz	r0, 800469a <HAL_I2C_Mem_Read+0x9a>
      return HAL_ERROR;
 8004696:	2501      	movs	r5, #1
 8004698:	e7c2      	b.n	8004620 <HAL_I2C_Mem_Read+0x20>
    if (hi2c->XferSize == 0U)
 800469a:	8d22      	ldrh	r2, [r4, #40]	@ 0x28
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800469c:	6823      	ldr	r3, [r4, #0]
    if (hi2c->XferSize == 0U)
 800469e:	b9b2      	cbnz	r2, 80046ce <HAL_I2C_Mem_Read+0xce>
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 80046a0:	9002      	str	r0, [sp, #8]
 80046a2:	695a      	ldr	r2, [r3, #20]
 80046a4:	9202      	str	r2, [sp, #8]
 80046a6:	699a      	ldr	r2, [r3, #24]
 80046a8:	9202      	str	r2, [sp, #8]
 80046aa:	9a02      	ldr	r2, [sp, #8]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 80046ac:	681a      	ldr	r2, [r3, #0]
 80046ae:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 80046b2:	601a      	str	r2, [r3, #0]
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 80046b4:	f8df 8164 	ldr.w	r8, [pc, #356]	@ 800481c <HAL_I2C_Mem_Read+0x21c>
    while (hi2c->XferSize > 0U)
 80046b8:	8d23      	ldrh	r3, [r4, #40]	@ 0x28
 80046ba:	2b00      	cmp	r3, #0
 80046bc:	d12c      	bne.n	8004718 <HAL_I2C_Mem_Read+0x118>
    hi2c->State = HAL_I2C_STATE_READY;
 80046be:	2220      	movs	r2, #32
 80046c0:	f884 203d 	strb.w	r2, [r4, #61]	@ 0x3d
    __HAL_UNLOCK(hi2c);
 80046c4:	f884 303c 	strb.w	r3, [r4, #60]	@ 0x3c
    hi2c->Mode = HAL_I2C_MODE_NONE;
 80046c8:	f884 303e 	strb.w	r3, [r4, #62]	@ 0x3e
    return HAL_OK;
 80046cc:	e7a8      	b.n	8004620 <HAL_I2C_Mem_Read+0x20>
    else if (hi2c->XferSize == 1U)
 80046ce:	2a01      	cmp	r2, #1
 80046d0:	d10a      	bne.n	80046e8 <HAL_I2C_Mem_Read+0xe8>
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 80046d2:	681a      	ldr	r2, [r3, #0]
 80046d4:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 80046d8:	601a      	str	r2, [r3, #0]
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 80046da:	9003      	str	r0, [sp, #12]
 80046dc:	695a      	ldr	r2, [r3, #20]
 80046de:	9203      	str	r2, [sp, #12]
 80046e0:	699a      	ldr	r2, [r3, #24]
 80046e2:	9203      	str	r2, [sp, #12]
 80046e4:	9a03      	ldr	r2, [sp, #12]
 80046e6:	e7e1      	b.n	80046ac <HAL_I2C_Mem_Read+0xac>
    else if (hi2c->XferSize == 2U)
 80046e8:	2a02      	cmp	r2, #2
 80046ea:	d10e      	bne.n	800470a <HAL_I2C_Mem_Read+0x10a>
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 80046ec:	681a      	ldr	r2, [r3, #0]
 80046ee:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 80046f2:	601a      	str	r2, [r3, #0]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 80046f4:	681a      	ldr	r2, [r3, #0]
 80046f6:	f442 6200 	orr.w	r2, r2, #2048	@ 0x800
 80046fa:	601a      	str	r2, [r3, #0]
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 80046fc:	9004      	str	r0, [sp, #16]
 80046fe:	695a      	ldr	r2, [r3, #20]
 8004700:	9204      	str	r2, [sp, #16]
 8004702:	699b      	ldr	r3, [r3, #24]
 8004704:	9304      	str	r3, [sp, #16]
 8004706:	9b04      	ldr	r3, [sp, #16]
 8004708:	e7d4      	b.n	80046b4 <HAL_I2C_Mem_Read+0xb4>
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800470a:	9005      	str	r0, [sp, #20]
 800470c:	695a      	ldr	r2, [r3, #20]
 800470e:	9205      	str	r2, [sp, #20]
 8004710:	699b      	ldr	r3, [r3, #24]
 8004712:	9305      	str	r3, [sp, #20]
 8004714:	9b05      	ldr	r3, [sp, #20]
 8004716:	e7cd      	b.n	80046b4 <HAL_I2C_Mem_Read+0xb4>
      if (hi2c->XferSize <= 3U)
 8004718:	2b03      	cmp	r3, #3
 800471a:	d856      	bhi.n	80047ca <HAL_I2C_Mem_Read+0x1ca>
        if (hi2c->XferSize == 1U)
 800471c:	2b01      	cmp	r3, #1
 800471e:	d115      	bne.n	800474c <HAL_I2C_Mem_Read+0x14c>
          if (I2C_WaitOnRXNEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8004720:	4632      	mov	r2, r6
 8004722:	4639      	mov	r1, r7
 8004724:	4620      	mov	r0, r4
 8004726:	f7ff fdff 	bl	8004328 <I2C_WaitOnRXNEFlagUntilTimeout>
 800472a:	2800      	cmp	r0, #0
 800472c:	d1b3      	bne.n	8004696 <HAL_I2C_Mem_Read+0x96>
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800472e:	6823      	ldr	r3, [r4, #0]
 8004730:	691a      	ldr	r2, [r3, #16]
 8004732:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 8004734:	701a      	strb	r2, [r3, #0]
          hi2c->pBuffPtr++;
 8004736:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 8004738:	3301      	adds	r3, #1
 800473a:	6263      	str	r3, [r4, #36]	@ 0x24
          hi2c->XferSize--;
 800473c:	8d23      	ldrh	r3, [r4, #40]	@ 0x28
 800473e:	3b01      	subs	r3, #1
 8004740:	8523      	strh	r3, [r4, #40]	@ 0x28
          hi2c->XferCount--;
 8004742:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
 8004744:	3b01      	subs	r3, #1
 8004746:	b29b      	uxth	r3, r3
 8004748:	8563      	strh	r3, [r4, #42]	@ 0x2a
 800474a:	e7b5      	b.n	80046b8 <HAL_I2C_Mem_Read+0xb8>
        else if (hi2c->XferSize == 2U)
 800474c:	2b02      	cmp	r3, #2
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 800474e:	9600      	str	r6, [sp, #0]
 8004750:	463b      	mov	r3, r7
 8004752:	f04f 0200 	mov.w	r2, #0
 8004756:	4641      	mov	r1, r8
 8004758:	4620      	mov	r0, r4
        else if (hi2c->XferSize == 2U)
 800475a:	d119      	bne.n	8004790 <HAL_I2C_Mem_Read+0x190>
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 800475c:	f7ff fc32 	bl	8003fc4 <I2C_WaitOnFlagUntilTimeout>
 8004760:	2800      	cmp	r0, #0
 8004762:	d198      	bne.n	8004696 <HAL_I2C_Mem_Read+0x96>
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8004764:	6823      	ldr	r3, [r4, #0]
 8004766:	681a      	ldr	r2, [r3, #0]
 8004768:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 800476c:	601a      	str	r2, [r3, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800476e:	691a      	ldr	r2, [r3, #16]
 8004770:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 8004772:	701a      	strb	r2, [r3, #0]
          hi2c->pBuffPtr++;
 8004774:	6a62      	ldr	r2, [r4, #36]	@ 0x24
 8004776:	1c53      	adds	r3, r2, #1
 8004778:	6263      	str	r3, [r4, #36]	@ 0x24
          hi2c->XferSize--;
 800477a:	8d23      	ldrh	r3, [r4, #40]	@ 0x28
 800477c:	3b01      	subs	r3, #1
 800477e:	8523      	strh	r3, [r4, #40]	@ 0x28
          hi2c->XferCount--;
 8004780:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
 8004782:	3b01      	subs	r3, #1
 8004784:	b29b      	uxth	r3, r3
 8004786:	8563      	strh	r3, [r4, #42]	@ 0x2a
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8004788:	6823      	ldr	r3, [r4, #0]
 800478a:	691b      	ldr	r3, [r3, #16]
 800478c:	7053      	strb	r3, [r2, #1]
          hi2c->pBuffPtr++;
 800478e:	e7d2      	b.n	8004736 <HAL_I2C_Mem_Read+0x136>
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 8004790:	f7ff fc18 	bl	8003fc4 <I2C_WaitOnFlagUntilTimeout>
 8004794:	4602      	mov	r2, r0
 8004796:	2800      	cmp	r0, #0
 8004798:	f47f af7d 	bne.w	8004696 <HAL_I2C_Mem_Read+0x96>
          CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800479c:	6823      	ldr	r3, [r4, #0]
 800479e:	6819      	ldr	r1, [r3, #0]
 80047a0:	f421 6180 	bic.w	r1, r1, #1024	@ 0x400
 80047a4:	6019      	str	r1, [r3, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 80047a6:	6919      	ldr	r1, [r3, #16]
 80047a8:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 80047aa:	7019      	strb	r1, [r3, #0]
          hi2c->pBuffPtr++;
 80047ac:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 80047ae:	3301      	adds	r3, #1
 80047b0:	6263      	str	r3, [r4, #36]	@ 0x24
          hi2c->XferSize--;
 80047b2:	8d23      	ldrh	r3, [r4, #40]	@ 0x28
 80047b4:	3b01      	subs	r3, #1
 80047b6:	8523      	strh	r3, [r4, #40]	@ 0x28
          hi2c->XferCount--;
 80047b8:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
 80047ba:	3b01      	subs	r3, #1
 80047bc:	b29b      	uxth	r3, r3
 80047be:	8563      	strh	r3, [r4, #42]	@ 0x2a
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 80047c0:	4641      	mov	r1, r8
 80047c2:	9600      	str	r6, [sp, #0]
 80047c4:	463b      	mov	r3, r7
 80047c6:	4620      	mov	r0, r4
 80047c8:	e7c8      	b.n	800475c <HAL_I2C_Mem_Read+0x15c>
        if (I2C_WaitOnRXNEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 80047ca:	4632      	mov	r2, r6
 80047cc:	4639      	mov	r1, r7
 80047ce:	4620      	mov	r0, r4
 80047d0:	f7ff fdaa 	bl	8004328 <I2C_WaitOnRXNEFlagUntilTimeout>
 80047d4:	2800      	cmp	r0, #0
 80047d6:	f47f af5e 	bne.w	8004696 <HAL_I2C_Mem_Read+0x96>
        *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 80047da:	6823      	ldr	r3, [r4, #0]
 80047dc:	691a      	ldr	r2, [r3, #16]
 80047de:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 80047e0:	701a      	strb	r2, [r3, #0]
        hi2c->XferCount--;
 80047e2:	8d62      	ldrh	r2, [r4, #42]	@ 0x2a
        hi2c->pBuffPtr++;
 80047e4:	6a61      	ldr	r1, [r4, #36]	@ 0x24
        hi2c->XferCount--;
 80047e6:	3a01      	subs	r2, #1
 80047e8:	b292      	uxth	r2, r2
        hi2c->pBuffPtr++;
 80047ea:	1c4b      	adds	r3, r1, #1
        hi2c->XferCount--;
 80047ec:	8562      	strh	r2, [r4, #42]	@ 0x2a
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 80047ee:	6822      	ldr	r2, [r4, #0]
        hi2c->pBuffPtr++;
 80047f0:	6263      	str	r3, [r4, #36]	@ 0x24
        hi2c->XferSize--;
 80047f2:	8d23      	ldrh	r3, [r4, #40]	@ 0x28
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 80047f4:	6950      	ldr	r0, [r2, #20]
        hi2c->XferSize--;
 80047f6:	3b01      	subs	r3, #1
 80047f8:	b29b      	uxth	r3, r3
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 80047fa:	0740      	lsls	r0, r0, #29
        hi2c->XferSize--;
 80047fc:	8523      	strh	r3, [r4, #40]	@ 0x28
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 80047fe:	f57f af5b 	bpl.w	80046b8 <HAL_I2C_Mem_Read+0xb8>
          if (hi2c->XferSize == 3U)
 8004802:	2b03      	cmp	r3, #3
            CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8004804:	bf02      	ittt	eq
 8004806:	6813      	ldreq	r3, [r2, #0]
 8004808:	f423 6380 	biceq.w	r3, r3, #1024	@ 0x400
 800480c:	6013      	streq	r3, [r2, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800480e:	6913      	ldr	r3, [r2, #16]
 8004810:	704b      	strb	r3, [r1, #1]
 8004812:	e790      	b.n	8004736 <HAL_I2C_Mem_Read+0x136>
 8004814:	00100002 	.word	0x00100002
 8004818:	ffff0000 	.word	0xffff0000
 800481c:	00010004 	.word	0x00010004

08004820 <HAL_I2CEx_ConfigAnalogFilter>:
  *                the configuration information for the specified I2Cx peripheral.
  * @param  AnalogFilter new state of the Analog filter.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_I2CEx_ConfigAnalogFilter(I2C_HandleTypeDef *hi2c, uint32_t AnalogFilter)
{
 8004820:	b510      	push	{r4, lr}
  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_I2C_ANALOG_FILTER(AnalogFilter));

  if (hi2c->State == HAL_I2C_STATE_READY)
 8004822:	f890 303d 	ldrb.w	r3, [r0, #61]	@ 0x3d
 8004826:	2b20      	cmp	r3, #32
 8004828:	b2dc      	uxtb	r4, r3
 800482a:	d116      	bne.n	800485a <HAL_I2CEx_ConfigAnalogFilter+0x3a>
  {
    hi2c->State = HAL_I2C_STATE_BUSY;
 800482c:	2324      	movs	r3, #36	@ 0x24
 800482e:	f880 303d 	strb.w	r3, [r0, #61]	@ 0x3d

    /* Disable the selected I2C peripheral */
    __HAL_I2C_DISABLE(hi2c);
 8004832:	6803      	ldr	r3, [r0, #0]
 8004834:	681a      	ldr	r2, [r3, #0]
 8004836:	f022 0201 	bic.w	r2, r2, #1
 800483a:	601a      	str	r2, [r3, #0]

    /* Reset I2Cx ANOFF bit */
    hi2c->Instance->FLTR &= ~(I2C_FLTR_ANOFF);
 800483c:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 800483e:	f022 0210 	bic.w	r2, r2, #16
 8004842:	625a      	str	r2, [r3, #36]	@ 0x24

    /* Disable the analog filter */
    hi2c->Instance->FLTR |= AnalogFilter;
 8004844:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 8004846:	4311      	orrs	r1, r2
 8004848:	6259      	str	r1, [r3, #36]	@ 0x24

    __HAL_I2C_ENABLE(hi2c);
 800484a:	681a      	ldr	r2, [r3, #0]
 800484c:	f042 0201 	orr.w	r2, r2, #1
 8004850:	601a      	str	r2, [r3, #0]

    hi2c->State = HAL_I2C_STATE_READY;
 8004852:	f880 403d 	strb.w	r4, [r0, #61]	@ 0x3d

    return HAL_OK;
 8004856:	2000      	movs	r0, #0
  }
  else
  {
    return HAL_BUSY;
  }
}
 8004858:	bd10      	pop	{r4, pc}
    return HAL_BUSY;
 800485a:	2002      	movs	r0, #2
 800485c:	e7fc      	b.n	8004858 <HAL_I2CEx_ConfigAnalogFilter+0x38>

0800485e <HAL_I2CEx_ConfigDigitalFilter>:
  *                the configuration information for the specified I2Cx peripheral.
  * @param  DigitalFilter Coefficient of digital noise filter between 0x00 and 0x0F.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_I2CEx_ConfigDigitalFilter(I2C_HandleTypeDef *hi2c, uint32_t DigitalFilter)
{
 800485e:	b530      	push	{r4, r5, lr}

  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_I2C_DIGITAL_FILTER(DigitalFilter));

  if (hi2c->State == HAL_I2C_STATE_READY)
 8004860:	f890 303d 	ldrb.w	r3, [r0, #61]	@ 0x3d
 8004864:	2b20      	cmp	r3, #32
 8004866:	b2dc      	uxtb	r4, r3
 8004868:	d116      	bne.n	8004898 <HAL_I2CEx_ConfigDigitalFilter+0x3a>
  {
    hi2c->State = HAL_I2C_STATE_BUSY;

    /* Disable the selected I2C peripheral */
    __HAL_I2C_DISABLE(hi2c);
 800486a:	6802      	ldr	r2, [r0, #0]
    hi2c->State = HAL_I2C_STATE_BUSY;
 800486c:	2324      	movs	r3, #36	@ 0x24
 800486e:	f880 303d 	strb.w	r3, [r0, #61]	@ 0x3d
    __HAL_I2C_DISABLE(hi2c);
 8004872:	6813      	ldr	r3, [r2, #0]
 8004874:	f023 0301 	bic.w	r3, r3, #1
 8004878:	6013      	str	r3, [r2, #0]

    /* Get the old register value */
    tmpreg = hi2c->Instance->FLTR;
 800487a:	6a55      	ldr	r5, [r2, #36]	@ 0x24

    /* Reset I2Cx DNF bit [3:0] */
    tmpreg &= ~(I2C_FLTR_DNF);
 800487c:	f64f 73f0 	movw	r3, #65520	@ 0xfff0
 8004880:	402b      	ands	r3, r5

    /* Set I2Cx DNF coefficient */
    tmpreg |= DigitalFilter;
 8004882:	430b      	orrs	r3, r1

    /* Store the new register value */
    hi2c->Instance->FLTR = tmpreg;
 8004884:	b29b      	uxth	r3, r3
 8004886:	6253      	str	r3, [r2, #36]	@ 0x24

    __HAL_I2C_ENABLE(hi2c);
 8004888:	6813      	ldr	r3, [r2, #0]
 800488a:	f043 0301 	orr.w	r3, r3, #1
 800488e:	6013      	str	r3, [r2, #0]

    hi2c->State = HAL_I2C_STATE_READY;
 8004890:	f880 403d 	strb.w	r4, [r0, #61]	@ 0x3d

    return HAL_OK;
 8004894:	2000      	movs	r0, #0
  }
  else
  {
    return HAL_BUSY;
  }
}
 8004896:	bd30      	pop	{r4, r5, pc}
    return HAL_BUSY;
 8004898:	2002      	movs	r0, #2
 800489a:	e7fc      	b.n	8004896 <HAL_I2CEx_ConfigDigitalFilter+0x38>

0800489c <LTDC_SetConfig>:
  uint32_t tmp;
  uint32_t tmp1;
  uint32_t tmp2;

  /* Configure the horizontal start and stop position */
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 800489c:	6800      	ldr	r0, [r0, #0]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + \
 800489e:	f8d1 c000 	ldr.w	ip, [r1]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 80048a2:	01d2      	lsls	r2, r2, #7
 80048a4:	3284      	adds	r2, #132	@ 0x84
 80048a6:	1883      	adds	r3, r0, r2
{
 80048a8:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 80048ac:	68c6      	ldr	r6, [r0, #12]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 80048ae:	685d      	ldr	r5, [r3, #4]
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 80048b0:	684c      	ldr	r4, [r1, #4]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);

  /* Configure the default color values */
  tmp = ((uint32_t)(pLayerCfg->Backcolor.Green) << 8U);
  tmp1 = ((uint32_t)(pLayerCfg->Backcolor.Red) << 16U);
  tmp2 = (pLayerCfg->Alpha0 << 24U);
 80048b2:	f8d1 9018 	ldr.w	r9, [r1, #24]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 80048b6:	f405 4570 	and.w	r5, r5, #61440	@ 0xf000
 80048ba:	605d      	str	r5, [r3, #4]
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 80048bc:	68c5      	ldr	r5, [r0, #12]
 80048be:	f10c 0701 	add.w	r7, ip, #1
 80048c2:	f3c5 450b 	ubfx	r5, r5, #16, #12
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 80048c6:	f3c6 460b 	ubfx	r6, r6, #16, #12
 80048ca:	4426      	add	r6, r4
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 80048cc:	443d      	add	r5, r7
 80048ce:	ea45 4506 	orr.w	r5, r5, r6, lsl #16
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + \
 80048d2:	605d      	str	r5, [r3, #4]
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
 80048d4:	68c6      	ldr	r6, [r0, #12]
 80048d6:	68cd      	ldr	r5, [r1, #12]
 80048d8:	f3c6 060a 	ubfx	r6, r6, #0, #11
 80048dc:	442e      	add	r6, r5
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR &= ~(LTDC_LxWVPCR_WVSTPOS | LTDC_LxWVPCR_WVSPPOS);
 80048de:	689d      	ldr	r5, [r3, #8]
 80048e0:	f405 4570 	and.w	r5, r5, #61440	@ 0xf000
 80048e4:	609d      	str	r5, [r3, #8]
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR  = ((pLayerCfg->WindowY0 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP) + 1U) | tmp);
 80048e6:	68c7      	ldr	r7, [r0, #12]
 80048e8:	688d      	ldr	r5, [r1, #8]
 80048ea:	f3c7 070a 	ubfx	r7, r7, #0, #11
 80048ee:	3501      	adds	r5, #1
 80048f0:	443d      	add	r5, r7
 80048f2:	ea45 4506 	orr.w	r5, r5, r6, lsl #16
 80048f6:	609d      	str	r5, [r3, #8]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR &= ~(LTDC_LxPFCR_PF);
 80048f8:	691d      	ldr	r5, [r3, #16]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
 80048fa:	690e      	ldr	r6, [r1, #16]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR &= ~(LTDC_LxPFCR_PF);
 80048fc:	f025 0507 	bic.w	r5, r5, #7
 8004900:	611d      	str	r5, [r3, #16]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED |
 8004902:	f04f 0e00 	mov.w	lr, #0
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
 8004906:	611e      	str	r6, [r3, #16]
  tmp1 = ((uint32_t)(pLayerCfg->Backcolor.Red) << 16U);
 8004908:	f891 7032 	ldrb.w	r7, [r1, #50]	@ 0x32
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED |
 800490c:	699d      	ldr	r5, [r3, #24]
  tmp = ((uint32_t)(pLayerCfg->Backcolor.Green) << 8U);
 800490e:	f891 8031 	ldrb.w	r8, [r1, #49]	@ 0x31
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED |
 8004912:	f8c3 e018 	str.w	lr, [r3, #24]
                                         LTDC_LxDCCR_DCALPHA);
  LTDC_LAYER(hltdc, LayerIdx)->DCCR = (pLayerCfg->Backcolor.Blue | tmp | tmp1 | tmp2);
 8004916:	f891 5030 	ldrb.w	r5, [r1, #48]	@ 0x30
 800491a:	ea45 6509 	orr.w	r5, r5, r9, lsl #24
 800491e:	ea45 2508 	orr.w	r5, r5, r8, lsl #8
 8004922:	ea45 4507 	orr.w	r5, r5, r7, lsl #16
 8004926:	619d      	str	r5, [r3, #24]

  /* Specifies the constant alpha value */
  LTDC_LAYER(hltdc, LayerIdx)->CACR &= ~(LTDC_LxCACR_CONSTA);
 8004928:	695d      	ldr	r5, [r3, #20]
 800492a:	f025 05ff 	bic.w	r5, r5, #255	@ 0xff
 800492e:	615d      	str	r5, [r3, #20]
  LTDC_LAYER(hltdc, LayerIdx)->CACR = (pLayerCfg->Alpha);
 8004930:	694d      	ldr	r5, [r1, #20]
 8004932:	615d      	str	r5, [r3, #20]

  /* Specifies the blending factors */
  LTDC_LAYER(hltdc, LayerIdx)->BFCR &= ~(LTDC_LxBFCR_BF2 | LTDC_LxBFCR_BF1);
 8004934:	69dd      	ldr	r5, [r3, #28]
 8004936:	f425 65e0 	bic.w	r5, r5, #1792	@ 0x700
 800493a:	f025 0507 	bic.w	r5, r5, #7
 800493e:	61dd      	str	r5, [r3, #28]
  LTDC_LAYER(hltdc, LayerIdx)->BFCR = (pLayerCfg->BlendingFactor1 | pLayerCfg->BlendingFactor2);
 8004940:	e9d1 5707 	ldrd	r5, r7, [r1, #28]
 8004944:	433d      	orrs	r5, r7
 8004946:	61dd      	str	r5, [r3, #28]

  /* Configure the color frame buffer start address */
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR &= ~(LTDC_LxCFBAR_CFBADD);
 8004948:	6a9d      	ldr	r5, [r3, #40]	@ 0x28
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR = (pLayerCfg->FBStartAdress);
 800494a:	6a4d      	ldr	r5, [r1, #36]	@ 0x24
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR &= ~(LTDC_LxCFBAR_CFBADD);
 800494c:	f8c3 e028 	str.w	lr, [r3, #40]	@ 0x28
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR = (pLayerCfg->FBStartAdress);
 8004950:	2e07      	cmp	r6, #7
 8004952:	629d      	str	r5, [r3, #40]	@ 0x28

  if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB8888)
 8004954:	bf9c      	itt	ls
 8004956:	4d0e      	ldrls	r5, [pc, #56]	@ (8004990 <LTDC_SetConfig+0xf4>)
 8004958:	5dae      	ldrbls	r6, [r5, r6]
  {
    tmp = 1U;
  }

  /* Configure the color frame buffer pitch in byte */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  &= ~(LTDC_LxCFBLR_CFBLL | LTDC_LxCFBLR_CFBP);
 800495a:	6add      	ldr	r5, [r3, #44]	@ 0x2c
 800495c:	f005 25e0 	and.w	r5, r5, #3758153728	@ 0xe000e000
 8004960:	62dd      	str	r5, [r3, #44]	@ 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR = (pLayerCfg->FBStartAdress);
 8004962:	bf88      	it	hi
 8004964:	2601      	movhi	r6, #1
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
 8004966:	6a8d      	ldr	r5, [r1, #40]	@ 0x28
                                         (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3U));
  /* Configure the frame buffer line number */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
 8004968:	6ac9      	ldr	r1, [r1, #44]	@ 0x2c
                                         (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3U));
 800496a:	eba4 040c 	sub.w	r4, r4, ip
 800496e:	4374      	muls	r4, r6
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
 8004970:	4375      	muls	r5, r6
                                         (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3U));
 8004972:	3403      	adds	r4, #3
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
 8004974:	ea44 4405 	orr.w	r4, r4, r5, lsl #16
 8004978:	62dc      	str	r4, [r3, #44]	@ 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
 800497a:	6b1c      	ldr	r4, [r3, #48]	@ 0x30
 800497c:	f36f 040a 	bfc	r4, #0, #11
 8004980:	631c      	str	r4, [r3, #48]	@ 0x30
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
 8004982:	6319      	str	r1, [r3, #48]	@ 0x30

  /* Enable LTDC_Layer by setting LEN bit */
  LTDC_LAYER(hltdc, LayerIdx)->CR |= (uint32_t)LTDC_LxCR_LEN;
 8004984:	5883      	ldr	r3, [r0, r2]
 8004986:	f043 0301 	orr.w	r3, r3, #1
 800498a:	5083      	str	r3, [r0, r2]
}
 800498c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8004990:	08024978 	.word	0x08024978

08004994 <HAL_LTDC_Init>:
{
 8004994:	b538      	push	{r3, r4, r5, lr}
  if (hltdc == NULL)
 8004996:	4604      	mov	r4, r0
 8004998:	2800      	cmp	r0, #0
 800499a:	d063      	beq.n	8004a64 <HAL_LTDC_Init+0xd0>
  if (hltdc->State == HAL_LTDC_STATE_RESET)
 800499c:	f890 30a1 	ldrb.w	r3, [r0, #161]	@ 0xa1
 80049a0:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
 80049a4:	b91b      	cbnz	r3, 80049ae <HAL_LTDC_Init+0x1a>
    hltdc->Lock = HAL_UNLOCKED;
 80049a6:	f880 20a0 	strb.w	r2, [r0, #160]	@ 0xa0
    HAL_LTDC_MspInit(hltdc);
 80049aa:	f7fd fdf7 	bl	800259c <HAL_LTDC_MspInit>
  hltdc->State = HAL_LTDC_STATE_BUSY;
 80049ae:	2302      	movs	r3, #2
 80049b0:	f884 30a1 	strb.w	r3, [r4, #161]	@ 0xa1
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
 80049b4:	6823      	ldr	r3, [r4, #0]
 80049b6:	699a      	ldr	r2, [r3, #24]
 80049b8:	f022 4270 	bic.w	r2, r2, #4026531840	@ 0xf0000000
 80049bc:	619a      	str	r2, [r3, #24]
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 80049be:	e9d4 2001 	ldrd	r2, r0, [r4, #4]
 80049c2:	4302      	orrs	r2, r0
 80049c4:	68e0      	ldr	r0, [r4, #12]
 80049c6:	6999      	ldr	r1, [r3, #24]
 80049c8:	4302      	orrs	r2, r0
                                     hltdc->Init.DEPolarity | hltdc->Init.PCPolarity);
 80049ca:	6920      	ldr	r0, [r4, #16]
 80049cc:	4302      	orrs	r2, r0
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 80049ce:	430a      	orrs	r2, r1
 80049d0:	619a      	str	r2, [r3, #24]
  hltdc->Instance->SSCR &= ~(LTDC_SSCR_VSH | LTDC_SSCR_HSW);
 80049d2:	689a      	ldr	r2, [r3, #8]
 80049d4:	4924      	ldr	r1, [pc, #144]	@ (8004a68 <HAL_LTDC_Init+0xd4>)
  tmp = (hltdc->Init.HorizontalSync << 16U);
 80049d6:	6960      	ldr	r0, [r4, #20]
  hltdc->Instance->SSCR &= ~(LTDC_SSCR_VSH | LTDC_SSCR_HSW);
 80049d8:	400a      	ands	r2, r1
 80049da:	609a      	str	r2, [r3, #8]
  hltdc->Instance->SSCR |= (tmp | hltdc->Init.VerticalSync);
 80049dc:	689a      	ldr	r2, [r3, #8]
 80049de:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 80049e2:	69a0      	ldr	r0, [r4, #24]
 80049e4:	4302      	orrs	r2, r0
 80049e6:	609a      	str	r2, [r3, #8]
  hltdc->Instance->BPCR &= ~(LTDC_BPCR_AVBP | LTDC_BPCR_AHBP);
 80049e8:	68da      	ldr	r2, [r3, #12]
  tmp = (hltdc->Init.AccumulatedHBP << 16U);
 80049ea:	69e0      	ldr	r0, [r4, #28]
  hltdc->Instance->BPCR &= ~(LTDC_BPCR_AVBP | LTDC_BPCR_AHBP);
 80049ec:	400a      	ands	r2, r1
 80049ee:	60da      	str	r2, [r3, #12]
  hltdc->Instance->BPCR |= (tmp | hltdc->Init.AccumulatedVBP);
 80049f0:	68da      	ldr	r2, [r3, #12]
 80049f2:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 80049f6:	6a20      	ldr	r0, [r4, #32]
 80049f8:	4302      	orrs	r2, r0
 80049fa:	60da      	str	r2, [r3, #12]
  hltdc->Instance->AWCR &= ~(LTDC_AWCR_AAH | LTDC_AWCR_AAW);
 80049fc:	691a      	ldr	r2, [r3, #16]
  tmp = (hltdc->Init.AccumulatedActiveW << 16U);
 80049fe:	6a60      	ldr	r0, [r4, #36]	@ 0x24
  hltdc->Instance->AWCR &= ~(LTDC_AWCR_AAH | LTDC_AWCR_AAW);
 8004a00:	400a      	ands	r2, r1
 8004a02:	611a      	str	r2, [r3, #16]
  hltdc->Instance->AWCR |= (tmp | hltdc->Init.AccumulatedActiveH);
 8004a04:	691a      	ldr	r2, [r3, #16]
 8004a06:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 8004a0a:	6aa0      	ldr	r0, [r4, #40]	@ 0x28
 8004a0c:	4302      	orrs	r2, r0
 8004a0e:	611a      	str	r2, [r3, #16]
  hltdc->Instance->TWCR &= ~(LTDC_TWCR_TOTALH | LTDC_TWCR_TOTALW);
 8004a10:	695a      	ldr	r2, [r3, #20]
 8004a12:	400a      	ands	r2, r1
 8004a14:	615a      	str	r2, [r3, #20]
  hltdc->Instance->TWCR |= (tmp | hltdc->Init.TotalHeigh);
 8004a16:	695a      	ldr	r2, [r3, #20]
  tmp = (hltdc->Init.TotalWidth << 16U);
 8004a18:	6ae1      	ldr	r1, [r4, #44]	@ 0x2c
  hltdc->Instance->TWCR |= (tmp | hltdc->Init.TotalHeigh);
 8004a1a:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 8004a1e:	6b21      	ldr	r1, [r4, #48]	@ 0x30
 8004a20:	430a      	orrs	r2, r1
 8004a22:	615a      	str	r2, [r3, #20]
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
 8004a24:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
  tmp = ((uint32_t)(hltdc->Init.Backcolor.Green) << 8U);
 8004a26:	f894 0035 	ldrb.w	r0, [r4, #53]	@ 0x35
  tmp1 = ((uint32_t)(hltdc->Init.Backcolor.Red) << 16U);
 8004a2a:	f894 1036 	ldrb.w	r1, [r4, #54]	@ 0x36
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
 8004a2e:	f002 427f 	and.w	r2, r2, #4278190080	@ 0xff000000
 8004a32:	62da      	str	r2, [r3, #44]	@ 0x2c
  hltdc->Instance->BCCR |= (tmp1 | tmp | hltdc->Init.Backcolor.Blue);
 8004a34:	6add      	ldr	r5, [r3, #44]	@ 0x2c
 8004a36:	f894 2034 	ldrb.w	r2, [r4, #52]	@ 0x34
 8004a3a:	432a      	orrs	r2, r5
 8004a3c:	ea42 2200 	orr.w	r2, r2, r0, lsl #8
 8004a40:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 8004a44:	62da      	str	r2, [r3, #44]	@ 0x2c
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_TE | LTDC_IT_FU);
 8004a46:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 8004a48:	f042 0206 	orr.w	r2, r2, #6
 8004a4c:	635a      	str	r2, [r3, #52]	@ 0x34
  __HAL_LTDC_ENABLE(hltdc);
 8004a4e:	699a      	ldr	r2, [r3, #24]
 8004a50:	f042 0201 	orr.w	r2, r2, #1
 8004a54:	619a      	str	r2, [r3, #24]
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
 8004a56:	2000      	movs	r0, #0
  hltdc->State = HAL_LTDC_STATE_READY;
 8004a58:	2301      	movs	r3, #1
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
 8004a5a:	f8c4 00a4 	str.w	r0, [r4, #164]	@ 0xa4
  hltdc->State = HAL_LTDC_STATE_READY;
 8004a5e:	f884 30a1 	strb.w	r3, [r4, #161]	@ 0xa1
}
 8004a62:	bd38      	pop	{r3, r4, r5, pc}
    return HAL_ERROR;
 8004a64:	2001      	movs	r0, #1
 8004a66:	e7fc      	b.n	8004a62 <HAL_LTDC_Init+0xce>
 8004a68:	f000f800 	.word	0xf000f800

08004a6c <HAL_LTDC_ErrorCallback>:
__weak void HAL_LTDC_ErrorCallback(LTDC_HandleTypeDef *hltdc)
 8004a6c:	4770      	bx	lr

08004a6e <HAL_LTDC_ReloadEventCallback>:
__weak void HAL_LTDC_ReloadEventCallback(LTDC_HandleTypeDef *hltdc)
 8004a6e:	4770      	bx	lr

08004a70 <HAL_LTDC_IRQHandler>:
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
 8004a70:	6803      	ldr	r3, [r0, #0]
{
 8004a72:	b570      	push	{r4, r5, r6, lr}
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
 8004a74:	6b9e      	ldr	r6, [r3, #56]	@ 0x38
  uint32_t itsources = READ_REG(hltdc->Instance->IER);
 8004a76:	6b5d      	ldr	r5, [r3, #52]	@ 0x34
  if (((isrflags & LTDC_ISR_TERRIF) != 0U) && ((itsources & LTDC_IER_TERRIE) != 0U))
 8004a78:	0772      	lsls	r2, r6, #29
{
 8004a7a:	4604      	mov	r4, r0
  if (((isrflags & LTDC_ISR_TERRIF) != 0U) && ((itsources & LTDC_IER_TERRIE) != 0U))
 8004a7c:	d514      	bpl.n	8004aa8 <HAL_LTDC_IRQHandler+0x38>
 8004a7e:	0769      	lsls	r1, r5, #29
 8004a80:	d512      	bpl.n	8004aa8 <HAL_LTDC_IRQHandler+0x38>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_TE);
 8004a82:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 8004a84:	f022 0204 	bic.w	r2, r2, #4
 8004a88:	635a      	str	r2, [r3, #52]	@ 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_TE);
 8004a8a:	2204      	movs	r2, #4
 8004a8c:	63da      	str	r2, [r3, #60]	@ 0x3c
    hltdc->ErrorCode |= HAL_LTDC_ERROR_TE;
 8004a8e:	f8d0 30a4 	ldr.w	r3, [r0, #164]	@ 0xa4
 8004a92:	f043 0301 	orr.w	r3, r3, #1
 8004a96:	f8c0 30a4 	str.w	r3, [r0, #164]	@ 0xa4
    __HAL_UNLOCK(hltdc);
 8004a9a:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_ERROR;
 8004a9c:	f880 20a1 	strb.w	r2, [r0, #161]	@ 0xa1
    __HAL_UNLOCK(hltdc);
 8004aa0:	f880 30a0 	strb.w	r3, [r0, #160]	@ 0xa0
    HAL_LTDC_ErrorCallback(hltdc);
 8004aa4:	f7ff ffe2 	bl	8004a6c <HAL_LTDC_ErrorCallback>
  if (((isrflags & LTDC_ISR_FUIF) != 0U) && ((itsources & LTDC_IER_FUIE) != 0U))
 8004aa8:	07b2      	lsls	r2, r6, #30
 8004aaa:	d516      	bpl.n	8004ada <HAL_LTDC_IRQHandler+0x6a>
 8004aac:	07ab      	lsls	r3, r5, #30
 8004aae:	d514      	bpl.n	8004ada <HAL_LTDC_IRQHandler+0x6a>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_FU);
 8004ab0:	6823      	ldr	r3, [r4, #0]
 8004ab2:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 8004ab4:	f022 0202 	bic.w	r2, r2, #2
 8004ab8:	635a      	str	r2, [r3, #52]	@ 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_FU);
 8004aba:	2202      	movs	r2, #2
 8004abc:	63da      	str	r2, [r3, #60]	@ 0x3c
    hltdc->ErrorCode |= HAL_LTDC_ERROR_FU;
 8004abe:	f8d4 30a4 	ldr.w	r3, [r4, #164]	@ 0xa4
 8004ac2:	4313      	orrs	r3, r2
 8004ac4:	f8c4 30a4 	str.w	r3, [r4, #164]	@ 0xa4
    hltdc->State = HAL_LTDC_STATE_ERROR;
 8004ac8:	2304      	movs	r3, #4
 8004aca:	f884 30a1 	strb.w	r3, [r4, #161]	@ 0xa1
    __HAL_UNLOCK(hltdc);
 8004ace:	2300      	movs	r3, #0
 8004ad0:	f884 30a0 	strb.w	r3, [r4, #160]	@ 0xa0
    HAL_LTDC_ErrorCallback(hltdc);
 8004ad4:	4620      	mov	r0, r4
 8004ad6:	f7ff ffc9 	bl	8004a6c <HAL_LTDC_ErrorCallback>
  if (((isrflags & LTDC_ISR_LIF) != 0U) && ((itsources & LTDC_IER_LIE) != 0U))
 8004ada:	07f0      	lsls	r0, r6, #31
 8004adc:	d510      	bpl.n	8004b00 <HAL_LTDC_IRQHandler+0x90>
 8004ade:	07e9      	lsls	r1, r5, #31
 8004ae0:	d50e      	bpl.n	8004b00 <HAL_LTDC_IRQHandler+0x90>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 8004ae2:	6823      	ldr	r3, [r4, #0]
 8004ae4:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 8004ae6:	f022 0201 	bic.w	r2, r2, #1
 8004aea:	635a      	str	r2, [r3, #52]	@ 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_LI);
 8004aec:	2201      	movs	r2, #1
 8004aee:	63da      	str	r2, [r3, #60]	@ 0x3c
    __HAL_UNLOCK(hltdc);
 8004af0:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_READY;
 8004af2:	f884 20a1 	strb.w	r2, [r4, #161]	@ 0xa1
    __HAL_UNLOCK(hltdc);
 8004af6:	f884 30a0 	strb.w	r3, [r4, #160]	@ 0xa0
    HAL_LTDC_LineEventCallback(hltdc);
 8004afa:	4620      	mov	r0, r4
 8004afc:	f7fc fd94 	bl	8001628 <HAL_LTDC_LineEventCallback>
  if (((isrflags & LTDC_ISR_RRIF) != 0U) && ((itsources & LTDC_IER_RRIE) != 0U))
 8004b00:	0732      	lsls	r2, r6, #28
 8004b02:	d511      	bpl.n	8004b28 <HAL_LTDC_IRQHandler+0xb8>
 8004b04:	072b      	lsls	r3, r5, #28
 8004b06:	d50f      	bpl.n	8004b28 <HAL_LTDC_IRQHandler+0xb8>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_RR);
 8004b08:	6823      	ldr	r3, [r4, #0]
 8004b0a:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 8004b0c:	f022 0208 	bic.w	r2, r2, #8
 8004b10:	635a      	str	r2, [r3, #52]	@ 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_RR);
 8004b12:	2208      	movs	r2, #8
 8004b14:	63da      	str	r2, [r3, #60]	@ 0x3c
    hltdc->State = HAL_LTDC_STATE_READY;
 8004b16:	2301      	movs	r3, #1
 8004b18:	f884 30a1 	strb.w	r3, [r4, #161]	@ 0xa1
    __HAL_UNLOCK(hltdc);
 8004b1c:	2300      	movs	r3, #0
 8004b1e:	f884 30a0 	strb.w	r3, [r4, #160]	@ 0xa0
    HAL_LTDC_ReloadEventCallback(hltdc);
 8004b22:	4620      	mov	r0, r4
 8004b24:	f7ff ffa3 	bl	8004a6e <HAL_LTDC_ReloadEventCallback>
}
 8004b28:	bd70      	pop	{r4, r5, r6, pc}

08004b2a <HAL_LTDC_ConfigLayer>:
{
 8004b2a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  __HAL_LOCK(hltdc);
 8004b2e:	f890 30a0 	ldrb.w	r3, [r0, #160]	@ 0xa0
 8004b32:	2b01      	cmp	r3, #1
{
 8004b34:	4606      	mov	r6, r0
 8004b36:	460f      	mov	r7, r1
 8004b38:	4694      	mov	ip, r2
 8004b3a:	f04f 0002 	mov.w	r0, #2
  __HAL_LOCK(hltdc);
 8004b3e:	d01f      	beq.n	8004b80 <HAL_LTDC_ConfigLayer+0x56>
 8004b40:	f04f 0801 	mov.w	r8, #1
 8004b44:	f886 80a0 	strb.w	r8, [r6, #160]	@ 0xa0
  hltdc->State = HAL_LTDC_STATE_BUSY;
 8004b48:	f886 00a1 	strb.w	r0, [r6, #161]	@ 0xa1
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 8004b4c:	2434      	movs	r4, #52	@ 0x34
 8004b4e:	460d      	mov	r5, r1
 8004b50:	fb04 6402 	mla	r4, r4, r2, r6
 8004b54:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8004b56:	3438      	adds	r4, #56	@ 0x38
 8004b58:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8004b5a:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8004b5c:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8004b5e:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8004b60:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8004b62:	682b      	ldr	r3, [r5, #0]
 8004b64:	6023      	str	r3, [r4, #0]
  LTDC_SetConfig(hltdc, pLayerCfg, LayerIdx);
 8004b66:	4630      	mov	r0, r6
 8004b68:	4662      	mov	r2, ip
 8004b6a:	4639      	mov	r1, r7
 8004b6c:	f7ff fe96 	bl	800489c <LTDC_SetConfig>
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
 8004b70:	6833      	ldr	r3, [r6, #0]
  __HAL_UNLOCK(hltdc);
 8004b72:	2000      	movs	r0, #0
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
 8004b74:	f8c3 8024 	str.w	r8, [r3, #36]	@ 0x24
  hltdc->State  = HAL_LTDC_STATE_READY;
 8004b78:	f886 80a1 	strb.w	r8, [r6, #161]	@ 0xa1
  __HAL_UNLOCK(hltdc);
 8004b7c:	f886 00a0 	strb.w	r0, [r6, #160]	@ 0xa0
}
 8004b80:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08004b84 <HAL_LTDC_ProgramLineEvent>:
  __HAL_LOCK(hltdc);
 8004b84:	f890 20a0 	ldrb.w	r2, [r0, #160]	@ 0xa0
 8004b88:	2a01      	cmp	r2, #1
{
 8004b8a:	4603      	mov	r3, r0
 8004b8c:	f04f 0002 	mov.w	r0, #2
  __HAL_LOCK(hltdc);
 8004b90:	d012      	beq.n	8004bb8 <HAL_LTDC_ProgramLineEvent+0x34>
  __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 8004b92:	681a      	ldr	r2, [r3, #0]
  hltdc->State = HAL_LTDC_STATE_BUSY;
 8004b94:	f883 00a1 	strb.w	r0, [r3, #161]	@ 0xa1
  __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 8004b98:	6b50      	ldr	r0, [r2, #52]	@ 0x34
 8004b9a:	f020 0001 	bic.w	r0, r0, #1
 8004b9e:	6350      	str	r0, [r2, #52]	@ 0x34
  LTDC->LIPCR = (uint32_t)Line;
 8004ba0:	4806      	ldr	r0, [pc, #24]	@ (8004bbc <HAL_LTDC_ProgramLineEvent+0x38>)
 8004ba2:	6401      	str	r1, [r0, #64]	@ 0x40
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_LI);
 8004ba4:	6b51      	ldr	r1, [r2, #52]	@ 0x34
 8004ba6:	f041 0101 	orr.w	r1, r1, #1
 8004baa:	6351      	str	r1, [r2, #52]	@ 0x34
  __HAL_UNLOCK(hltdc);
 8004bac:	2000      	movs	r0, #0
  hltdc->State = HAL_LTDC_STATE_READY;
 8004bae:	2201      	movs	r2, #1
 8004bb0:	f883 20a1 	strb.w	r2, [r3, #161]	@ 0xa1
  __HAL_UNLOCK(hltdc);
 8004bb4:	f883 00a0 	strb.w	r0, [r3, #160]	@ 0xa0
}
 8004bb8:	4770      	bx	lr
 8004bba:	bf00      	nop
 8004bbc:	40016800 	.word	0x40016800

08004bc0 <HAL_PCD_Init>:
  *         parameters in the PCD_InitTypeDef and initialize the associated handle.
  * @param  hpcd PCD handle
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_PCD_Init(PCD_HandleTypeDef *hpcd)
{
 8004bc0:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
  const USB_OTG_GlobalTypeDef *USBx;
#endif /* defined (USB_OTG_FS) */
  uint8_t i;

  /* Check the PCD handle allocation */
  if (hpcd == NULL)
 8004bc2:	4604      	mov	r4, r0
 8004bc4:	b310      	cbz	r0, 8004c0c <HAL_PCD_Init+0x4c>

#if defined (USB_OTG_FS)
  USBx = hpcd->Instance;
#endif /* defined (USB_OTG_FS) */

  if (hpcd->State == HAL_PCD_STATE_RESET)
 8004bc6:	f890 3495 	ldrb.w	r3, [r0, #1173]	@ 0x495
  USBx = hpcd->Instance;
 8004bca:	6805      	ldr	r5, [r0, #0]
  if (hpcd->State == HAL_PCD_STATE_RESET)
 8004bcc:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
 8004bd0:	b91b      	cbnz	r3, 8004bda <HAL_PCD_Init+0x1a>
  {
    /* Allocate lock resource and initialize it */
    hpcd->Lock = HAL_UNLOCKED;
 8004bd2:	f880 2494 	strb.w	r2, [r0, #1172]	@ 0x494

    /* Init the low level hardware */
    hpcd->MspInitCallback(hpcd);
#else
    /* Init the low level hardware : GPIO, CLOCK, NVIC... */
    HAL_PCD_MspInit(hpcd);
 8004bd6:	f7fc fdf9 	bl	80017cc <HAL_PCD_MspInit>
#endif /* (USE_HAL_PCD_REGISTER_CALLBACKS) */
  }

  hpcd->State = HAL_PCD_STATE_BUSY;
 8004bda:	2303      	movs	r3, #3

#if defined (USB_OTG_FS)
  /* Disable DMA mode for FS instance */
  if (USBx == USB_OTG_FS)
 8004bdc:	f1b5 4fa0 	cmp.w	r5, #1342177280	@ 0x50000000
  hpcd->State = HAL_PCD_STATE_BUSY;
 8004be0:	f884 3495 	strb.w	r3, [r4, #1173]	@ 0x495
  {
    hpcd->Init.dma_enable = 0U;
 8004be4:	bf04      	itt	eq
 8004be6:	2300      	moveq	r3, #0
 8004be8:	71a3      	strbeq	r3, [r4, #6]
  }
#endif /* defined (USB_OTG_FS) */

  /* Disable the Interrupts */
  __HAL_PCD_DISABLE(hpcd);
 8004bea:	6820      	ldr	r0, [r4, #0]
 8004bec:	f001 ff80 	bl	8006af0 <USB_DisableGlobalInt>

  /*Init the Core (common init.) */
  if (USB_CoreInit(hpcd->Instance, hpcd->Init) != HAL_OK)
 8004bf0:	7c23      	ldrb	r3, [r4, #16]
 8004bf2:	f88d 3000 	strb.w	r3, [sp]
 8004bf6:	1d25      	adds	r5, r4, #4
 8004bf8:	e895 000e 	ldmia.w	r5, {r1, r2, r3}
 8004bfc:	6820      	ldr	r0, [r4, #0]
 8004bfe:	f001 febc 	bl	800697a <USB_CoreInit>
 8004c02:	4601      	mov	r1, r0
 8004c04:	b130      	cbz	r0, 8004c14 <HAL_PCD_Init+0x54>
  {
    hpcd->State = HAL_PCD_STATE_ERROR;
 8004c06:	2302      	movs	r3, #2
 8004c08:	f884 3495 	strb.w	r3, [r4, #1173]	@ 0x495
    return HAL_ERROR;
 8004c0c:	2501      	movs	r5, #1
          defined(STM32F412Vx) || defined(STM32F412Rx) || defined(STM32F412Cx) || defined(STM32F413xx) ||
          defined(STM32F423xx) */
  (void)USB_DevDisconnect(hpcd->Instance);

  return HAL_OK;
}
 8004c0e:	4628      	mov	r0, r5
 8004c10:	b003      	add	sp, #12
 8004c12:	bdf0      	pop	{r4, r5, r6, r7, pc}
  if (USB_SetCurrentMode(hpcd->Instance, USB_DEVICE_MODE) != HAL_OK)
 8004c14:	6820      	ldr	r0, [r4, #0]
 8004c16:	f001 ff71 	bl	8006afc <USB_SetCurrentMode>
 8004c1a:	2800      	cmp	r0, #0
 8004c1c:	d1f3      	bne.n	8004c06 <HAL_PCD_Init+0x46>
  for (i = 0U; i < hpcd->Init.dev_endpoints; i++)
 8004c1e:	7926      	ldrb	r6, [r4, #4]
 8004c20:	f104 0314 	add.w	r3, r4, #20
    hpcd->IN_ep[i].is_in = 1U;
 8004c24:	2701      	movs	r7, #1
    hpcd->IN_ep[i].type = EP_TYPE_CTRL;
 8004c26:	4602      	mov	r2, r0
 8004c28:	b2c1      	uxtb	r1, r0
  for (i = 0U; i < hpcd->Init.dev_endpoints; i++)
 8004c2a:	428e      	cmp	r6, r1
 8004c2c:	f103 0324 	add.w	r3, r3, #36	@ 0x24
 8004c30:	d81b      	bhi.n	8004c6a <HAL_PCD_Init+0xaa>
 8004c32:	2100      	movs	r1, #0
 8004c34:	f504 7315 	add.w	r3, r4, #596	@ 0x254
    hpcd->OUT_ep[i].is_in = 0U;
 8004c38:	460a      	mov	r2, r1
 8004c3a:	b2c8      	uxtb	r0, r1
  for (i = 0U; i < hpcd->Init.dev_endpoints; i++)
 8004c3c:	4286      	cmp	r6, r0
 8004c3e:	f103 0324 	add.w	r3, r3, #36	@ 0x24
 8004c42:	d820      	bhi.n	8004c86 <HAL_PCD_Init+0xc6>
  if (USB_DevInit(hpcd->Instance, hpcd->Init) != HAL_OK)
 8004c44:	7c23      	ldrb	r3, [r4, #16]
 8004c46:	f88d 3000 	strb.w	r3, [sp]
 8004c4a:	e895 000e 	ldmia.w	r5, {r1, r2, r3}
 8004c4e:	6820      	ldr	r0, [r4, #0]
 8004c50:	f001 ffd0 	bl	8006bf4 <USB_DevInit>
 8004c54:	4605      	mov	r5, r0
 8004c56:	2800      	cmp	r0, #0
 8004c58:	d1d5      	bne.n	8004c06 <HAL_PCD_Init+0x46>
  hpcd->State = HAL_PCD_STATE_READY;
 8004c5a:	2301      	movs	r3, #1
  hpcd->USB_Address = 0U;
 8004c5c:	7460      	strb	r0, [r4, #17]
  (void)USB_DevDisconnect(hpcd->Instance);
 8004c5e:	6820      	ldr	r0, [r4, #0]
  hpcd->State = HAL_PCD_STATE_READY;
 8004c60:	f884 3495 	strb.w	r3, [r4, #1173]	@ 0x495
  (void)USB_DevDisconnect(hpcd->Instance);
 8004c64:	f002 fb0a 	bl	800727c <USB_DevDisconnect>
  return HAL_OK;
 8004c68:	e7d1      	b.n	8004c0e <HAL_PCD_Init+0x4e>
    hpcd->IN_ep[i].tx_fifo_num = i;
 8004c6a:	f823 0c0a 	strh.w	r0, [r3, #-10]
    hpcd->IN_ep[i].xfer_buff = 0U;
 8004c6e:	e943 2207 	strd	r2, r2, [r3, #-28]
    hpcd->IN_ep[i].is_in = 1U;
 8004c72:	f803 7c23 	strb.w	r7, [r3, #-35]
    hpcd->IN_ep[i].num = i;
 8004c76:	f803 1c24 	strb.w	r1, [r3, #-36]
    hpcd->IN_ep[i].type = EP_TYPE_CTRL;
 8004c7a:	f803 2c20 	strb.w	r2, [r3, #-32]
    hpcd->IN_ep[i].xfer_len = 0U;
 8004c7e:	f843 2c14 	str.w	r2, [r3, #-20]
  for (i = 0U; i < hpcd->Init.dev_endpoints; i++)
 8004c82:	3001      	adds	r0, #1
 8004c84:	e7d0      	b.n	8004c28 <HAL_PCD_Init+0x68>
    hpcd->OUT_ep[i].xfer_buff = 0U;
 8004c86:	e943 2207 	strd	r2, r2, [r3, #-28]
    hpcd->OUT_ep[i].is_in = 0U;
 8004c8a:	f803 2c23 	strb.w	r2, [r3, #-35]
    hpcd->OUT_ep[i].num = i;
 8004c8e:	f803 0c24 	strb.w	r0, [r3, #-36]
    hpcd->OUT_ep[i].type = EP_TYPE_CTRL;
 8004c92:	f803 2c20 	strb.w	r2, [r3, #-32]
    hpcd->OUT_ep[i].xfer_len = 0U;
 8004c96:	f843 2c14 	str.w	r2, [r3, #-20]
  for (i = 0U; i < hpcd->Init.dev_endpoints; i++)
 8004c9a:	3101      	adds	r1, #1
 8004c9c:	e7cd      	b.n	8004c3a <HAL_PCD_Init+0x7a>

08004c9e <HAL_PCD_Start>:
  * @brief  Start the USB device
  * @param  hpcd PCD handle
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_PCD_Start(PCD_HandleTypeDef *hpcd)
{
 8004c9e:	b510      	push	{r4, lr}
 8004ca0:	4604      	mov	r4, r0
  USB_OTG_GlobalTypeDef *USBx = hpcd->Instance;
 8004ca2:	6800      	ldr	r0, [r0, #0]

  __HAL_LOCK(hpcd);
 8004ca4:	f894 3494 	ldrb.w	r3, [r4, #1172]	@ 0x494
 8004ca8:	2b01      	cmp	r3, #1
 8004caa:	d015      	beq.n	8004cd8 <HAL_PCD_Start+0x3a>
 8004cac:	2301      	movs	r3, #1
 8004cae:	f884 3494 	strb.w	r3, [r4, #1172]	@ 0x494

  if (((USBx->GUSBCFG & USB_OTG_GUSBCFG_PHYSEL) != 0U) &&
 8004cb2:	68c3      	ldr	r3, [r0, #12]
 8004cb4:	065b      	lsls	r3, r3, #25
 8004cb6:	d506      	bpl.n	8004cc6 <HAL_PCD_Start+0x28>
 8004cb8:	7b63      	ldrb	r3, [r4, #13]
 8004cba:	2b01      	cmp	r3, #1
      (hpcd->Init.battery_charging_enable == 1U))
  {
    /* Enable USB Transceiver */
    USBx->GCCFG |= USB_OTG_GCCFG_PWRDWN;
 8004cbc:	bf02      	ittt	eq
 8004cbe:	6b83      	ldreq	r3, [r0, #56]	@ 0x38
 8004cc0:	f443 3380 	orreq.w	r3, r3, #65536	@ 0x10000
 8004cc4:	6383      	streq	r3, [r0, #56]	@ 0x38
  }

  __HAL_PCD_ENABLE(hpcd);
 8004cc6:	f001 ff0d 	bl	8006ae4 <USB_EnableGlobalInt>
  (void)USB_DevConnect(hpcd->Instance);
 8004cca:	6820      	ldr	r0, [r4, #0]
 8004ccc:	f002 fac8 	bl	8007260 <USB_DevConnect>
  __HAL_UNLOCK(hpcd);
 8004cd0:	2000      	movs	r0, #0
 8004cd2:	f884 0494 	strb.w	r0, [r4, #1172]	@ 0x494

  return HAL_OK;
}
 8004cd6:	bd10      	pop	{r4, pc}
  __HAL_LOCK(hpcd);
 8004cd8:	2002      	movs	r0, #2
 8004cda:	e7fc      	b.n	8004cd6 <HAL_PCD_Start+0x38>

08004cdc <HAL_PCD_SetAddress>:
  * @param  hpcd PCD handle
  * @param  address new device address
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_PCD_SetAddress(PCD_HandleTypeDef *hpcd, uint8_t address)
{
 8004cdc:	b510      	push	{r4, lr}
  __HAL_LOCK(hpcd);
 8004cde:	f890 2494 	ldrb.w	r2, [r0, #1172]	@ 0x494
 8004ce2:	2a01      	cmp	r2, #1
{
 8004ce4:	4604      	mov	r4, r0
  __HAL_LOCK(hpcd);
 8004ce6:	d00a      	beq.n	8004cfe <HAL_PCD_SetAddress+0x22>
 8004ce8:	2201      	movs	r2, #1
 8004cea:	f880 2494 	strb.w	r2, [r0, #1172]	@ 0x494
  hpcd->USB_Address = address;
 8004cee:	7441      	strb	r1, [r0, #17]
  (void)USB_SetDevAddress(hpcd->Instance, address);
 8004cf0:	6800      	ldr	r0, [r0, #0]
 8004cf2:	f002 faa5 	bl	8007240 <USB_SetDevAddress>
  __HAL_UNLOCK(hpcd);
 8004cf6:	2000      	movs	r0, #0
 8004cf8:	f884 0494 	strb.w	r0, [r4, #1172]	@ 0x494

  return HAL_OK;
}
 8004cfc:	bd10      	pop	{r4, pc}
  __HAL_LOCK(hpcd);
 8004cfe:	2002      	movs	r0, #2
 8004d00:	e7fc      	b.n	8004cfc <HAL_PCD_SetAddress+0x20>

08004d02 <HAL_PCD_EP_Open>:
  * @param  ep_type endpoint type
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_PCD_EP_Open(PCD_HandleTypeDef *hpcd, uint8_t ep_addr,
                                  uint16_t ep_mps, uint8_t ep_type)
{
 8004d02:	b570      	push	{r4, r5, r6, lr}
 8004d04:	f001 060f 	and.w	r6, r1, #15
 8004d08:	eb06 04c6 	add.w	r4, r6, r6, lsl #3
  HAL_StatusTypeDef ret = HAL_OK;
  PCD_EPTypeDef *ep;

  if ((ep_addr & 0x80U) == 0x80U)
 8004d0c:	f011 0f80 	tst.w	r1, #128	@ 0x80
{
 8004d10:	4605      	mov	r5, r0
 8004d12:	ea4f 0484 	mov.w	r4, r4, lsl #2
 8004d16:	f04f 0024 	mov.w	r0, #36	@ 0x24
  if ((ep_addr & 0x80U) == 0x80U)
 8004d1a:	d020      	beq.n	8004d5e <HAL_PCD_EP_Open+0x5c>
  {
    ep = &hpcd->IN_ep[ep_addr & EP_ADDR_MSK];
    ep->is_in = 1U;
 8004d1c:	fb00 5006 	mla	r0, r0, r6, r5
    ep = &hpcd->IN_ep[ep_addr & EP_ADDR_MSK];
 8004d20:	f104 0114 	add.w	r1, r4, #20
    ep->is_in = 1U;
 8004d24:	2401      	movs	r4, #1
    ep = &hpcd->IN_ep[ep_addr & EP_ADDR_MSK];
 8004d26:	4429      	add	r1, r5
    ep->is_in = 1U;
 8004d28:	7544      	strb	r4, [r0, #21]
    ep = &hpcd->OUT_ep[ep_addr & EP_ADDR_MSK];
    ep->is_in = 0U;
  }

  ep->num = ep_addr & EP_ADDR_MSK;
  ep->maxpacket = (uint32_t)ep_mps & 0x7FFU;
 8004d2a:	f3c2 020a 	ubfx	r2, r2, #0, #11
 8004d2e:	608a      	str	r2, [r1, #8]
  ep->type = ep_type;

  if (ep->is_in != 0U)
 8004d30:	784a      	ldrb	r2, [r1, #1]
  ep->num = ep_addr & EP_ADDR_MSK;
 8004d32:	700e      	strb	r6, [r1, #0]
  ep->type = ep_type;
 8004d34:	710b      	strb	r3, [r1, #4]
  if (ep->is_in != 0U)
 8004d36:	b102      	cbz	r2, 8004d3a <HAL_PCD_EP_Open+0x38>
  {
    /* Assign a Tx FIFO */
    ep->tx_fifo_num = ep->num;
 8004d38:	834e      	strh	r6, [r1, #26]
  }

  /* Set initial data PID. */
  if (ep_type == EP_TYPE_BULK)
 8004d3a:	2b02      	cmp	r3, #2
  {
    ep->data_pid_start = 0U;
 8004d3c:	bf04      	itt	eq
 8004d3e:	2300      	moveq	r3, #0
 8004d40:	714b      	strbeq	r3, [r1, #5]
  }

  __HAL_LOCK(hpcd);
 8004d42:	f895 3494 	ldrb.w	r3, [r5, #1172]	@ 0x494
 8004d46:	2b01      	cmp	r3, #1
 8004d48:	d012      	beq.n	8004d70 <HAL_PCD_EP_Open+0x6e>
 8004d4a:	2301      	movs	r3, #1
  (void)USB_ActivateEndpoint(hpcd->Instance, ep);
 8004d4c:	6828      	ldr	r0, [r5, #0]
  __HAL_LOCK(hpcd);
 8004d4e:	f885 3494 	strb.w	r3, [r5, #1172]	@ 0x494
  (void)USB_ActivateEndpoint(hpcd->Instance, ep);
 8004d52:	f002 f814 	bl	8006d7e <USB_ActivateEndpoint>
  __HAL_UNLOCK(hpcd);
 8004d56:	2000      	movs	r0, #0
 8004d58:	f885 0494 	strb.w	r0, [r5, #1172]	@ 0x494

  return ret;
}
 8004d5c:	bd70      	pop	{r4, r5, r6, pc}
    ep->is_in = 0U;
 8004d5e:	fb00 5006 	mla	r0, r0, r6, r5
    ep = &hpcd->OUT_ep[ep_addr & EP_ADDR_MSK];
 8004d62:	f504 7115 	add.w	r1, r4, #596	@ 0x254
    ep->is_in = 0U;
 8004d66:	2400      	movs	r4, #0
    ep = &hpcd->OUT_ep[ep_addr & EP_ADDR_MSK];
 8004d68:	4429      	add	r1, r5
    ep->is_in = 0U;
 8004d6a:	f880 4255 	strb.w	r4, [r0, #597]	@ 0x255
 8004d6e:	e7dc      	b.n	8004d2a <HAL_PCD_EP_Open+0x28>
  __HAL_LOCK(hpcd);
 8004d70:	2002      	movs	r0, #2
 8004d72:	e7f3      	b.n	8004d5c <HAL_PCD_EP_Open+0x5a>

08004d74 <HAL_PCD_EP_Close>:
  * @param  hpcd PCD handle
  * @param  ep_addr endpoint address
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_PCD_EP_Close(PCD_HandleTypeDef *hpcd, uint8_t ep_addr)
{
 8004d74:	b510      	push	{r4, lr}
 8004d76:	4604      	mov	r4, r0
 8004d78:	f001 000f 	and.w	r0, r1, #15
 8004d7c:	eb00 03c0 	add.w	r3, r0, r0, lsl #3
  PCD_EPTypeDef *ep;

  if ((ep_addr & 0x80U) == 0x80U)
 8004d80:	f011 0f80 	tst.w	r1, #128	@ 0x80
 8004d84:	ea4f 0383 	mov.w	r3, r3, lsl #2
 8004d88:	f04f 0224 	mov.w	r2, #36	@ 0x24
 8004d8c:	d015      	beq.n	8004dba <HAL_PCD_EP_Close+0x46>
  {
    ep = &hpcd->IN_ep[ep_addr & EP_ADDR_MSK];
    ep->is_in = 1U;
 8004d8e:	fb02 4200 	mla	r2, r2, r0, r4
    ep = &hpcd->IN_ep[ep_addr & EP_ADDR_MSK];
 8004d92:	f103 0114 	add.w	r1, r3, #20
    ep->is_in = 1U;
 8004d96:	2301      	movs	r3, #1
    ep = &hpcd->IN_ep[ep_addr & EP_ADDR_MSK];
 8004d98:	4421      	add	r1, r4
    ep->is_in = 1U;
 8004d9a:	7553      	strb	r3, [r2, #21]
  else
  {
    ep = &hpcd->OUT_ep[ep_addr & EP_ADDR_MSK];
    ep->is_in = 0U;
  }
  ep->num = ep_addr & EP_ADDR_MSK;
 8004d9c:	7008      	strb	r0, [r1, #0]

  __HAL_LOCK(hpcd);
 8004d9e:	f894 3494 	ldrb.w	r3, [r4, #1172]	@ 0x494
 8004da2:	2b01      	cmp	r3, #1
 8004da4:	d012      	beq.n	8004dcc <HAL_PCD_EP_Close+0x58>
 8004da6:	2301      	movs	r3, #1
  (void)USB_DeactivateEndpoint(hpcd->Instance, ep);
 8004da8:	6820      	ldr	r0, [r4, #0]
  __HAL_LOCK(hpcd);
 8004daa:	f884 3494 	strb.w	r3, [r4, #1172]	@ 0x494
  (void)USB_DeactivateEndpoint(hpcd->Instance, ep);
 8004dae:	f002 f825 	bl	8006dfc <USB_DeactivateEndpoint>
  __HAL_UNLOCK(hpcd);
 8004db2:	2000      	movs	r0, #0
 8004db4:	f884 0494 	strb.w	r0, [r4, #1172]	@ 0x494
  return HAL_OK;
}
 8004db8:	bd10      	pop	{r4, pc}
    ep->is_in = 0U;
 8004dba:	fb02 4200 	mla	r2, r2, r0, r4
    ep = &hpcd->OUT_ep[ep_addr & EP_ADDR_MSK];
 8004dbe:	f503 7115 	add.w	r1, r3, #596	@ 0x254
    ep->is_in = 0U;
 8004dc2:	2300      	movs	r3, #0
    ep = &hpcd->OUT_ep[ep_addr & EP_ADDR_MSK];
 8004dc4:	4421      	add	r1, r4
    ep->is_in = 0U;
 8004dc6:	f882 3255 	strb.w	r3, [r2, #597]	@ 0x255
 8004dca:	e7e7      	b.n	8004d9c <HAL_PCD_EP_Close+0x28>
  __HAL_LOCK(hpcd);
 8004dcc:	2002      	movs	r0, #2
 8004dce:	e7f3      	b.n	8004db8 <HAL_PCD_EP_Close+0x44>

08004dd0 <HAL_PCD_EP_Receive>:
  * @param  pBuf pointer to the reception buffer
  * @param  len amount of data to be received
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_PCD_EP_Receive(PCD_HandleTypeDef *hpcd, uint8_t ep_addr, uint8_t *pBuf, uint32_t len)
{
 8004dd0:	b570      	push	{r4, r5, r6, lr}
 8004dd2:	f001 050f 	and.w	r5, r1, #15
  PCD_EPTypeDef *ep;

  ep = &hpcd->OUT_ep[ep_addr & EP_ADDR_MSK];
 8004dd6:	2424      	movs	r4, #36	@ 0x24
 8004dd8:	fb04 0105 	mla	r1, r4, r5, r0

  /*setup and start the Xfer */
  ep->xfer_buff = pBuf;
 8004ddc:	fb04 0405 	mla	r4, r4, r5, r0
  ep->xfer_len = len;
 8004de0:	e9c4 2398 	strd	r2, r3, [r4, #608]	@ 0x260
  ep->xfer_count = 0U;
 8004de4:	2300      	movs	r3, #0
 8004de6:	f8c4 3268 	str.w	r3, [r4, #616]	@ 0x268
  ep->is_in = 0U;
 8004dea:	f884 3255 	strb.w	r3, [r4, #597]	@ 0x255
  ep->num = ep_addr & EP_ADDR_MSK;
 8004dee:	f884 5254 	strb.w	r5, [r4, #596]	@ 0x254
{
 8004df2:	4616      	mov	r6, r2

  if (hpcd->Init.dma_enable == 1U)
 8004df4:	7982      	ldrb	r2, [r0, #6]
  {
    ep->dma_addr = (uint32_t)pBuf;
  }

  (void)USB_EPStartXfer(hpcd->Instance, ep, (uint8_t)hpcd->Init.dma_enable);
 8004df6:	6800      	ldr	r0, [r0, #0]
  if (hpcd->Init.dma_enable == 1U)
 8004df8:	2a01      	cmp	r2, #1
  ep = &hpcd->OUT_ep[ep_addr & EP_ADDR_MSK];
 8004dfa:	f501 7115 	add.w	r1, r1, #596	@ 0x254
    ep->dma_addr = (uint32_t)pBuf;
 8004dfe:	bf08      	it	eq
 8004e00:	f8c4 6270 	streq.w	r6, [r4, #624]	@ 0x270
  (void)USB_EPStartXfer(hpcd->Instance, ep, (uint8_t)hpcd->Init.dma_enable);
 8004e04:	f002 f8a6 	bl	8006f54 <USB_EPStartXfer>

  return HAL_OK;
}
 8004e08:	2000      	movs	r0, #0
 8004e0a:	bd70      	pop	{r4, r5, r6, pc}

08004e0c <HAL_PCD_EP_Transmit>:
  * @param  pBuf pointer to the transmission buffer
  * @param  len amount of data to be sent
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_PCD_EP_Transmit(PCD_HandleTypeDef *hpcd, uint8_t ep_addr, uint8_t *pBuf, uint32_t len)
{
 8004e0c:	b570      	push	{r4, r5, r6, lr}
 8004e0e:	f001 050f 	and.w	r5, r1, #15
  PCD_EPTypeDef *ep;

  ep = &hpcd->IN_ep[ep_addr & EP_ADDR_MSK];
 8004e12:	2424      	movs	r4, #36	@ 0x24
 8004e14:	fb04 0105 	mla	r1, r4, r5, r0

  /*setup and start the Xfer */
  ep->xfer_buff = pBuf;
 8004e18:	fb04 0405 	mla	r4, r4, r5, r0
  ep->xfer_len = len;
 8004e1c:	e9c4 2308 	strd	r2, r3, [r4, #32]
  ep->xfer_count = 0U;
 8004e20:	2300      	movs	r3, #0
 8004e22:	62a3      	str	r3, [r4, #40]	@ 0x28
  ep->is_in = 1U;
 8004e24:	2301      	movs	r3, #1
 8004e26:	7563      	strb	r3, [r4, #21]
  ep->num = ep_addr & EP_ADDR_MSK;
 8004e28:	7525      	strb	r5, [r4, #20]
{
 8004e2a:	4616      	mov	r6, r2

  if (hpcd->Init.dma_enable == 1U)
 8004e2c:	7982      	ldrb	r2, [r0, #6]
  {
    ep->dma_addr = (uint32_t)pBuf;
  }

  (void)USB_EPStartXfer(hpcd->Instance, ep, (uint8_t)hpcd->Init.dma_enable);
 8004e2e:	6800      	ldr	r0, [r0, #0]
  if (hpcd->Init.dma_enable == 1U)
 8004e30:	429a      	cmp	r2, r3
  ep = &hpcd->IN_ep[ep_addr & EP_ADDR_MSK];
 8004e32:	f101 0114 	add.w	r1, r1, #20
    ep->dma_addr = (uint32_t)pBuf;
 8004e36:	bf08      	it	eq
 8004e38:	6326      	streq	r6, [r4, #48]	@ 0x30
  (void)USB_EPStartXfer(hpcd->Instance, ep, (uint8_t)hpcd->Init.dma_enable);
 8004e3a:	f002 f88b 	bl	8006f54 <USB_EPStartXfer>

  return HAL_OK;
}
 8004e3e:	2000      	movs	r0, #0
 8004e40:	bd70      	pop	{r4, r5, r6, pc}

08004e42 <HAL_PCD_EP_SetStall>:
  * @param  hpcd PCD handle
  * @param  ep_addr endpoint address
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_PCD_EP_SetStall(PCD_HandleTypeDef *hpcd, uint8_t ep_addr)
{
 8004e42:	b538      	push	{r3, r4, r5, lr}
  PCD_EPTypeDef *ep;

  if (((uint32_t)ep_addr & EP_ADDR_MSK) > hpcd->Init.dev_endpoints)
 8004e44:	7903      	ldrb	r3, [r0, #4]
 8004e46:	f001 050f 	and.w	r5, r1, #15
 8004e4a:	42ab      	cmp	r3, r5
{
 8004e4c:	4604      	mov	r4, r0
  if (((uint32_t)ep_addr & EP_ADDR_MSK) > hpcd->Init.dev_endpoints)
 8004e4e:	d32b      	bcc.n	8004ea8 <HAL_PCD_EP_SetStall+0x66>
  {
    return HAL_ERROR;
  }

  if ((0x80U & ep_addr) == 0x80U)
 8004e50:	f011 0f80 	tst.w	r1, #128	@ 0x80
 8004e54:	f04f 0024 	mov.w	r0, #36	@ 0x24
 8004e58:	d01d      	beq.n	8004e96 <HAL_PCD_EP_SetStall+0x54>
  {
    ep = &hpcd->IN_ep[ep_addr & EP_ADDR_MSK];
 8004e5a:	fb00 4105 	mla	r1, r0, r5, r4
    ep->is_in = 1U;
 8004e5e:	fb00 4005 	mla	r0, r0, r5, r4
 8004e62:	2301      	movs	r3, #1
    ep = &hpcd->IN_ep[ep_addr & EP_ADDR_MSK];
 8004e64:	3114      	adds	r1, #20
    ep->is_in = 1U;
 8004e66:	7543      	strb	r3, [r0, #21]
  {
    ep = &hpcd->OUT_ep[ep_addr];
    ep->is_in = 0U;
  }

  ep->is_stall = 1U;
 8004e68:	2301      	movs	r3, #1
 8004e6a:	708b      	strb	r3, [r1, #2]
  ep->num = ep_addr & EP_ADDR_MSK;
 8004e6c:	700d      	strb	r5, [r1, #0]

  __HAL_LOCK(hpcd);
 8004e6e:	f894 2494 	ldrb.w	r2, [r4, #1172]	@ 0x494
 8004e72:	429a      	cmp	r2, r3
 8004e74:	d01a      	beq.n	8004eac <HAL_PCD_EP_SetStall+0x6a>

  (void)USB_EPSetStall(hpcd->Instance, ep);
 8004e76:	6820      	ldr	r0, [r4, #0]
  __HAL_LOCK(hpcd);
 8004e78:	f884 3494 	strb.w	r3, [r4, #1172]	@ 0x494
  (void)USB_EPSetStall(hpcd->Instance, ep);
 8004e7c:	f002 f98c 	bl	8007198 <USB_EPSetStall>

  if ((ep_addr & EP_ADDR_MSK) == 0U)
 8004e80:	b92d      	cbnz	r5, 8004e8e <HAL_PCD_EP_SetStall+0x4c>
  {
    (void)USB_EP0_OutStart(hpcd->Instance, (uint8_t)hpcd->Init.dma_enable, (uint8_t *)hpcd->Setup);
 8004e82:	79a1      	ldrb	r1, [r4, #6]
 8004e84:	6820      	ldr	r0, [r4, #0]
 8004e86:	f204 429c 	addw	r2, r4, #1180	@ 0x49c
 8004e8a:	f002 fa45 	bl	8007318 <USB_EP0_OutStart>
  }

  __HAL_UNLOCK(hpcd);
 8004e8e:	2000      	movs	r0, #0
 8004e90:	f884 0494 	strb.w	r0, [r4, #1172]	@ 0x494

  return HAL_OK;
}
 8004e94:	bd38      	pop	{r3, r4, r5, pc}
    ep = &hpcd->OUT_ep[ep_addr];
 8004e96:	fb00 4301 	mla	r3, r0, r1, r4
    ep->is_in = 0U;
 8004e9a:	461a      	mov	r2, r3
    ep = &hpcd->OUT_ep[ep_addr];
 8004e9c:	f503 7115 	add.w	r1, r3, #596	@ 0x254
    ep->is_in = 0U;
 8004ea0:	2300      	movs	r3, #0
 8004ea2:	f882 3255 	strb.w	r3, [r2, #597]	@ 0x255
 8004ea6:	e7df      	b.n	8004e68 <HAL_PCD_EP_SetStall+0x26>
    return HAL_ERROR;
 8004ea8:	2001      	movs	r0, #1
 8004eaa:	e7f3      	b.n	8004e94 <HAL_PCD_EP_SetStall+0x52>
  __HAL_LOCK(hpcd);
 8004eac:	2002      	movs	r0, #2
 8004eae:	e7f1      	b.n	8004e94 <HAL_PCD_EP_SetStall+0x52>

08004eb0 <HAL_PCD_EP_ClrStall>:
  * @param  hpcd PCD handle
  * @param  ep_addr endpoint address
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_PCD_EP_ClrStall(PCD_HandleTypeDef *hpcd, uint8_t ep_addr)
{
 8004eb0:	b538      	push	{r3, r4, r5, lr}
  PCD_EPTypeDef *ep;

  if (((uint32_t)ep_addr & 0x0FU) > hpcd->Init.dev_endpoints)
 8004eb2:	7903      	ldrb	r3, [r0, #4]
 8004eb4:	f001 020f 	and.w	r2, r1, #15
 8004eb8:	4293      	cmp	r3, r2
{
 8004eba:	4604      	mov	r4, r0
  if (((uint32_t)ep_addr & 0x0FU) > hpcd->Init.dev_endpoints)
 8004ebc:	d329      	bcc.n	8004f12 <HAL_PCD_EP_ClrStall+0x62>
  {
    return HAL_ERROR;
  }

  if ((0x80U & ep_addr) == 0x80U)
 8004ebe:	eb02 03c2 	add.w	r3, r2, r2, lsl #3
 8004ec2:	f011 0f80 	tst.w	r1, #128	@ 0x80
 8004ec6:	ea4f 0383 	mov.w	r3, r3, lsl #2
 8004eca:	f04f 0024 	mov.w	r0, #36	@ 0x24
 8004ece:	d017      	beq.n	8004f00 <HAL_PCD_EP_ClrStall+0x50>
  {
    ep = &hpcd->IN_ep[ep_addr & EP_ADDR_MSK];
    ep->is_in = 1U;
 8004ed0:	fb00 4002 	mla	r0, r0, r2, r4
    ep = &hpcd->IN_ep[ep_addr & EP_ADDR_MSK];
 8004ed4:	f103 0114 	add.w	r1, r3, #20
    ep->is_in = 1U;
 8004ed8:	2301      	movs	r3, #1
    ep = &hpcd->IN_ep[ep_addr & EP_ADDR_MSK];
 8004eda:	4421      	add	r1, r4
    ep->is_in = 1U;
 8004edc:	7543      	strb	r3, [r0, #21]
  {
    ep = &hpcd->OUT_ep[ep_addr & EP_ADDR_MSK];
    ep->is_in = 0U;
  }

  ep->is_stall = 0U;
 8004ede:	2500      	movs	r5, #0
 8004ee0:	708d      	strb	r5, [r1, #2]
  ep->num = ep_addr & EP_ADDR_MSK;
 8004ee2:	700a      	strb	r2, [r1, #0]

  __HAL_LOCK(hpcd);
 8004ee4:	f894 3494 	ldrb.w	r3, [r4, #1172]	@ 0x494
 8004ee8:	2b01      	cmp	r3, #1
 8004eea:	d014      	beq.n	8004f16 <HAL_PCD_EP_ClrStall+0x66>
 8004eec:	2301      	movs	r3, #1
  (void)USB_EPClearStall(hpcd->Instance, ep);
 8004eee:	6820      	ldr	r0, [r4, #0]
  __HAL_LOCK(hpcd);
 8004ef0:	f884 3494 	strb.w	r3, [r4, #1172]	@ 0x494
  (void)USB_EPClearStall(hpcd->Instance, ep);
 8004ef4:	f002 f97b 	bl	80071ee <USB_EPClearStall>
  __HAL_UNLOCK(hpcd);
 8004ef8:	f884 5494 	strb.w	r5, [r4, #1172]	@ 0x494

  return HAL_OK;
 8004efc:	4628      	mov	r0, r5
}
 8004efe:	bd38      	pop	{r3, r4, r5, pc}
    ep->is_in = 0U;
 8004f00:	fb00 4002 	mla	r0, r0, r2, r4
    ep = &hpcd->OUT_ep[ep_addr & EP_ADDR_MSK];
 8004f04:	f503 7115 	add.w	r1, r3, #596	@ 0x254
    ep->is_in = 0U;
 8004f08:	2300      	movs	r3, #0
    ep = &hpcd->OUT_ep[ep_addr & EP_ADDR_MSK];
 8004f0a:	4421      	add	r1, r4
    ep->is_in = 0U;
 8004f0c:	f880 3255 	strb.w	r3, [r0, #597]	@ 0x255
 8004f10:	e7e5      	b.n	8004ede <HAL_PCD_EP_ClrStall+0x2e>
    return HAL_ERROR;
 8004f12:	2001      	movs	r0, #1
 8004f14:	e7f3      	b.n	8004efe <HAL_PCD_EP_ClrStall+0x4e>
  __HAL_LOCK(hpcd);
 8004f16:	2002      	movs	r0, #2
 8004f18:	e7f1      	b.n	8004efe <HAL_PCD_EP_ClrStall+0x4e>

08004f1a <HAL_PCD_EP_Abort>:
HAL_StatusTypeDef HAL_PCD_EP_Abort(PCD_HandleTypeDef *hpcd, uint8_t ep_addr)
{
  HAL_StatusTypeDef ret;
  PCD_EPTypeDef *ep;

  if ((0x80U & ep_addr) == 0x80U)
 8004f1a:	f001 030f 	and.w	r3, r1, #15
 8004f1e:	eb03 03c3 	add.w	r3, r3, r3, lsl #3
 8004f22:	060a      	lsls	r2, r1, #24
  {
    ep = &hpcd->IN_ep[ep_addr & EP_ADDR_MSK];
 8004f24:	ea4f 0383 	mov.w	r3, r3, lsl #2
 8004f28:	bf4c      	ite	mi
 8004f2a:	f103 0114 	addmi.w	r1, r3, #20
  }
  else
  {
    ep = &hpcd->OUT_ep[ep_addr & EP_ADDR_MSK];
 8004f2e:	f503 7115 	addpl.w	r1, r3, #596	@ 0x254
 8004f32:	4401      	add	r1, r0
  }

  /* Stop Xfer */
  ret = USB_EPStopXfer(hpcd->Instance, ep);
 8004f34:	6800      	ldr	r0, [r0, #0]
 8004f36:	f001 bfb7 	b.w	8006ea8 <USB_EPStopXfer>
	...

08004f3c <HAL_PCD_IRQHandler>:
{
 8004f3c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  USB_OTG_GlobalTypeDef *USBx = hpcd->Instance;
 8004f40:	6806      	ldr	r6, [r0, #0]
{
 8004f42:	b089      	sub	sp, #36	@ 0x24
 8004f44:	4604      	mov	r4, r0
  if (USB_GetMode(hpcd->Instance) == USB_OTG_MODE_DEVICE)
 8004f46:	4630      	mov	r0, r6
 8004f48:	f002 f9d4 	bl	80072f4 <USB_GetMode>
 8004f4c:	9003      	str	r0, [sp, #12]
 8004f4e:	2800      	cmp	r0, #0
 8004f50:	f040 8158 	bne.w	8005204 <HAL_PCD_IRQHandler+0x2c8>
    if (__HAL_PCD_IS_INVALID_INTERRUPT(hpcd))
 8004f54:	6820      	ldr	r0, [r4, #0]
 8004f56:	f002 f99f 	bl	8007298 <USB_ReadInterrupts>
 8004f5a:	2800      	cmp	r0, #0
 8004f5c:	f000 8152 	beq.w	8005204 <HAL_PCD_IRQHandler+0x2c8>
    hpcd->FrameNumber = (USBx_DEVICE->DSTS & USB_OTG_DSTS_FNSOF_Msk) >> USB_OTG_DSTS_FNSOF_Pos;
 8004f60:	f8d6 3808 	ldr.w	r3, [r6, #2056]	@ 0x808
    if (__HAL_PCD_GET_FLAG(hpcd, USB_OTG_GINTSTS_MMIS))
 8004f64:	6820      	ldr	r0, [r4, #0]
    hpcd->FrameNumber = (USBx_DEVICE->DSTS & USB_OTG_DSTS_FNSOF_Msk) >> USB_OTG_DSTS_FNSOF_Pos;
 8004f66:	f3c3 230d 	ubfx	r3, r3, #8, #14
 8004f6a:	f8c4 34d4 	str.w	r3, [r4, #1236]	@ 0x4d4
    if (__HAL_PCD_GET_FLAG(hpcd, USB_OTG_GINTSTS_MMIS))
 8004f6e:	f002 f993 	bl	8007298 <USB_ReadInterrupts>
 8004f72:	0787      	lsls	r7, r0, #30
      __HAL_PCD_CLEAR_FLAG(hpcd, USB_OTG_GINTSTS_MMIS);
 8004f74:	bf48      	it	mi
 8004f76:	6822      	ldrmi	r2, [r4, #0]
    if (__HAL_PCD_GET_FLAG(hpcd, USB_OTG_GINTSTS_RXFLVL))
 8004f78:	6820      	ldr	r0, [r4, #0]
      __HAL_PCD_CLEAR_FLAG(hpcd, USB_OTG_GINTSTS_MMIS);
 8004f7a:	bf42      	ittt	mi
 8004f7c:	6953      	ldrmi	r3, [r2, #20]
 8004f7e:	f003 0302 	andmi.w	r3, r3, #2
 8004f82:	6153      	strmi	r3, [r2, #20]
    if (__HAL_PCD_GET_FLAG(hpcd, USB_OTG_GINTSTS_RXFLVL))
 8004f84:	f002 f988 	bl	8007298 <USB_ReadInterrupts>
 8004f88:	06c0      	lsls	r0, r0, #27
    hpcd->FrameNumber = (USBx_DEVICE->DSTS & USB_OTG_DSTS_FNSOF_Msk) >> USB_OTG_DSTS_FNSOF_Pos;
 8004f8a:	f506 6500 	add.w	r5, r6, #2048	@ 0x800
    if (__HAL_PCD_GET_FLAG(hpcd, USB_OTG_GINTSTS_RXFLVL))
 8004f8e:	d52d      	bpl.n	8004fec <HAL_PCD_IRQHandler+0xb0>
      USB_MASK_INTERRUPT(hpcd->Instance, USB_OTG_GINTSTS_RXFLVL);
 8004f90:	6822      	ldr	r2, [r4, #0]
 8004f92:	6993      	ldr	r3, [r2, #24]
 8004f94:	f023 0310 	bic.w	r3, r3, #16
 8004f98:	6193      	str	r3, [r2, #24]
      RegVal = USBx->GRXSTSP;
 8004f9a:	f8d6 8020 	ldr.w	r8, [r6, #32]
      if (((RegVal & USB_OTG_GRXSTSP_PKTSTS) >> 17) ==  STS_DATA_UPDT)
 8004f9e:	f408 13f0 	and.w	r3, r8, #1966080	@ 0x1e0000
 8004fa2:	f5b3 2f80 	cmp.w	r3, #262144	@ 0x40000
      ep = &hpcd->OUT_ep[RegVal & USB_OTG_GRXSTSP_EPNUM];
 8004fa6:	f008 070f 	and.w	r7, r8, #15
      if (((RegVal & USB_OTG_GRXSTSP_PKTSTS) >> 17) ==  STS_DATA_UPDT)
 8004faa:	f040 812e 	bne.w	800520a <HAL_PCD_IRQHandler+0x2ce>
        if ((RegVal & USB_OTG_GRXSTSP_BCNT) != 0U)
 8004fae:	f647 73f0 	movw	r3, #32752	@ 0x7ff0
 8004fb2:	ea18 0f03 	tst.w	r8, r3
 8004fb6:	d014      	beq.n	8004fe2 <HAL_PCD_IRQHandler+0xa6>
          (void)USB_ReadPacket(USBx, ep->xfer_buff,
 8004fb8:	2324      	movs	r3, #36	@ 0x24
 8004fba:	fb03 4707 	mla	r7, r3, r7, r4
 8004fbe:	f3c8 190a 	ubfx	r9, r8, #4, #11
 8004fc2:	f8d7 1260 	ldr.w	r1, [r7, #608]	@ 0x260
 8004fc6:	464a      	mov	r2, r9
 8004fc8:	4630      	mov	r0, r6
 8004fca:	f002 f8c5 	bl	8007158 <USB_ReadPacket>
          ep->xfer_buff += (RegVal & USB_OTG_GRXSTSP_BCNT) >> 4;
 8004fce:	f8d7 3260 	ldr.w	r3, [r7, #608]	@ 0x260
 8004fd2:	444b      	add	r3, r9
 8004fd4:	f8c7 3260 	str.w	r3, [r7, #608]	@ 0x260
          ep->xfer_count += (RegVal & USB_OTG_GRXSTSP_BCNT) >> 4;
 8004fd8:	f8d7 3268 	ldr.w	r3, [r7, #616]	@ 0x268
 8004fdc:	444b      	add	r3, r9
        ep->xfer_count += (RegVal & USB_OTG_GRXSTSP_BCNT) >> 4;
 8004fde:	f8c7 3268 	str.w	r3, [r7, #616]	@ 0x268
      USB_UNMASK_INTERRUPT(hpcd->Instance, USB_OTG_GINTSTS_RXFLVL);
 8004fe2:	6822      	ldr	r2, [r4, #0]
 8004fe4:	6993      	ldr	r3, [r2, #24]
 8004fe6:	f043 0310 	orr.w	r3, r3, #16
 8004fea:	6193      	str	r3, [r2, #24]
    if (__HAL_PCD_GET_FLAG(hpcd, USB_OTG_GINTSTS_OEPINT))
 8004fec:	6820      	ldr	r0, [r4, #0]
 8004fee:	f002 f953 	bl	8007298 <USB_ReadInterrupts>
 8004ff2:	0301      	lsls	r1, r0, #12
 8004ff4:	f100 811c 	bmi.w	8005230 <HAL_PCD_IRQHandler+0x2f4>
    if (__HAL_PCD_GET_FLAG(hpcd, USB_OTG_GINTSTS_IEPINT))
 8004ff8:	6820      	ldr	r0, [r4, #0]
 8004ffa:	f002 f94d 	bl	8007298 <USB_ReadInterrupts>
 8004ffe:	0342      	lsls	r2, r0, #13
 8005000:	d50d      	bpl.n	800501e <HAL_PCD_IRQHandler+0xe2>
      ep_intr = USB_ReadDevAllInEpInterrupt(hpcd->Instance);
 8005002:	6820      	ldr	r0, [r4, #0]
 8005004:	f002 f954 	bl	80072b0 <USB_ReadDevAllInEpInterrupt>
 8005008:	4627      	mov	r7, r4
 800500a:	9004      	str	r0, [sp, #16]
      while (ep_intr != 0U)
 800500c:	f506 6b10 	add.w	fp, r6, #2304	@ 0x900
      epnum = 0U;
 8005010:	f04f 0a00 	mov.w	sl, #0
      while (ep_intr != 0U)
 8005014:	9b04      	ldr	r3, [sp, #16]
          epint = USB_ReadDevInEPInterrupt(hpcd->Instance, (uint8_t)epnum);
 8005016:	6820      	ldr	r0, [r4, #0]
      while (ep_intr != 0U)
 8005018:	2b00      	cmp	r3, #0
 800501a:	f040 81d3 	bne.w	80053c4 <HAL_PCD_IRQHandler+0x488>
    if (__HAL_PCD_GET_FLAG(hpcd, USB_OTG_GINTSTS_WKUINT))
 800501e:	6820      	ldr	r0, [r4, #0]
 8005020:	f002 f93a 	bl	8007298 <USB_ReadInterrupts>
 8005024:	2800      	cmp	r0, #0
 8005026:	da13      	bge.n	8005050 <HAL_PCD_IRQHandler+0x114>
      USBx_DEVICE->DCTL &= ~USB_OTG_DCTL_RWUSIG;
 8005028:	686b      	ldr	r3, [r5, #4]
 800502a:	f023 0301 	bic.w	r3, r3, #1
 800502e:	606b      	str	r3, [r5, #4]
      if (hpcd->LPM_State == LPM_L1)
 8005030:	f894 34cc 	ldrb.w	r3, [r4, #1228]	@ 0x4cc
 8005034:	2b01      	cmp	r3, #1
 8005036:	f040 826b 	bne.w	8005510 <HAL_PCD_IRQHandler+0x5d4>
        hpcd->LPM_State = LPM_L0;
 800503a:	2100      	movs	r1, #0
 800503c:	f884 14cc 	strb.w	r1, [r4, #1228]	@ 0x4cc
        HAL_PCDEx_LPM_Callback(hpcd, PCD_LPM_L0_ACTIVE);
 8005040:	4620      	mov	r0, r4
 8005042:	f000 fae6 	bl	8005612 <HAL_PCDEx_LPM_Callback>
      __HAL_PCD_CLEAR_FLAG(hpcd, USB_OTG_GINTSTS_WKUINT);
 8005046:	6822      	ldr	r2, [r4, #0]
 8005048:	6953      	ldr	r3, [r2, #20]
 800504a:	f003 4300 	and.w	r3, r3, #2147483648	@ 0x80000000
 800504e:	6153      	str	r3, [r2, #20]
    if (__HAL_PCD_GET_FLAG(hpcd, USB_OTG_GINTSTS_USBSUSP))
 8005050:	6820      	ldr	r0, [r4, #0]
 8005052:	f002 f921 	bl	8007298 <USB_ReadInterrupts>
 8005056:	0501      	lsls	r1, r0, #20
 8005058:	d50a      	bpl.n	8005070 <HAL_PCD_IRQHandler+0x134>
      if ((USBx_DEVICE->DSTS & USB_OTG_DSTS_SUSPSTS) == USB_OTG_DSTS_SUSPSTS)
 800505a:	68ab      	ldr	r3, [r5, #8]
 800505c:	07da      	lsls	r2, r3, #31
 800505e:	d502      	bpl.n	8005066 <HAL_PCD_IRQHandler+0x12a>
        HAL_PCD_SuspendCallback(hpcd);
 8005060:	4620      	mov	r0, r4
 8005062:	f7fc fc29 	bl	80018b8 <HAL_PCD_SuspendCallback>
      __HAL_PCD_CLEAR_FLAG(hpcd, USB_OTG_GINTSTS_USBSUSP);
 8005066:	6822      	ldr	r2, [r4, #0]
 8005068:	6953      	ldr	r3, [r2, #20]
 800506a:	f403 6300 	and.w	r3, r3, #2048	@ 0x800
 800506e:	6153      	str	r3, [r2, #20]
    if (__HAL_PCD_GET_FLAG(hpcd, USB_OTG_GINTSTS_USBRST))
 8005070:	6820      	ldr	r0, [r4, #0]
 8005072:	f002 f911 	bl	8007298 <USB_ReadInterrupts>
 8005076:	04c3      	lsls	r3, r0, #19
 8005078:	d533      	bpl.n	80050e2 <HAL_PCD_IRQHandler+0x1a6>
      USBx_DEVICE->DCTL &= ~USB_OTG_DCTL_RWUSIG;
 800507a:	686b      	ldr	r3, [r5, #4]
      (void)USB_FlushTxFifo(hpcd->Instance, 0x10U);
 800507c:	6820      	ldr	r0, [r4, #0]
      USBx_DEVICE->DCTL &= ~USB_OTG_DCTL_RWUSIG;
 800507e:	f023 0301 	bic.w	r3, r3, #1
 8005082:	606b      	str	r3, [r5, #4]
      (void)USB_FlushTxFifo(hpcd->Instance, 0x10U);
 8005084:	2110      	movs	r1, #16
 8005086:	f001 fd69 	bl	8006b5c <USB_FlushTxFifo>
      for (i = 0U; i < hpcd->Init.dev_endpoints; i++)
 800508a:	7920      	ldrb	r0, [r4, #4]
 800508c:	f506 6310 	add.w	r3, r6, #2304	@ 0x900
        USBx_INEP(i)->DIEPINT = 0xFB7FU;
 8005090:	f64f 317f 	movw	r1, #64383	@ 0xfb7f
      for (i = 0U; i < hpcd->Init.dev_endpoints; i++)
 8005094:	9a03      	ldr	r2, [sp, #12]
 8005096:	4290      	cmp	r0, r2
 8005098:	f200 823e 	bhi.w	8005518 <HAL_PCD_IRQHandler+0x5dc>
      USBx_DEVICE->DAINTMSK |= 0x10001U;
 800509c:	69eb      	ldr	r3, [r5, #28]
 800509e:	f043 1301 	orr.w	r3, r3, #65537	@ 0x10001
 80050a2:	61eb      	str	r3, [r5, #28]
      if (hpcd->Init.use_dedicated_ep1 != 0U)
 80050a4:	7be3      	ldrb	r3, [r4, #15]
 80050a6:	2b00      	cmp	r3, #0
 80050a8:	f000 8252 	beq.w	8005550 <HAL_PCD_IRQHandler+0x614>
        USBx_DEVICE->DOUTEP1MSK |= USB_OTG_DOEPMSK_STUPM |
 80050ac:	f8d5 3084 	ldr.w	r3, [r5, #132]	@ 0x84
 80050b0:	f043 030b 	orr.w	r3, r3, #11
 80050b4:	f8c5 3084 	str.w	r3, [r5, #132]	@ 0x84
        USBx_DEVICE->DINEP1MSK |= USB_OTG_DIEPMSK_TOM |
 80050b8:	6c6b      	ldr	r3, [r5, #68]	@ 0x44
 80050ba:	f043 030b 	orr.w	r3, r3, #11
 80050be:	646b      	str	r3, [r5, #68]	@ 0x44
      USBx_DEVICE->DCFG &= ~USB_OTG_DCFG_DAD;
 80050c0:	f8d6 3800 	ldr.w	r3, [r6, #2048]	@ 0x800
      (void)USB_EP0_OutStart(hpcd->Instance, (uint8_t)hpcd->Init.dma_enable,
 80050c4:	6820      	ldr	r0, [r4, #0]
      USBx_DEVICE->DCFG &= ~USB_OTG_DCFG_DAD;
 80050c6:	f423 63fe 	bic.w	r3, r3, #2032	@ 0x7f0
 80050ca:	f8c6 3800 	str.w	r3, [r6, #2048]	@ 0x800
      (void)USB_EP0_OutStart(hpcd->Instance, (uint8_t)hpcd->Init.dma_enable,
 80050ce:	f204 429c 	addw	r2, r4, #1180	@ 0x49c
 80050d2:	79a1      	ldrb	r1, [r4, #6]
 80050d4:	f002 f920 	bl	8007318 <USB_EP0_OutStart>
      __HAL_PCD_CLEAR_FLAG(hpcd, USB_OTG_GINTSTS_USBRST);
 80050d8:	6822      	ldr	r2, [r4, #0]
 80050da:	6953      	ldr	r3, [r2, #20]
 80050dc:	f403 5380 	and.w	r3, r3, #4096	@ 0x1000
 80050e0:	6153      	str	r3, [r2, #20]
    if (__HAL_PCD_GET_FLAG(hpcd, USB_OTG_GINTSTS_ENUMDNE))
 80050e2:	6820      	ldr	r0, [r4, #0]
 80050e4:	f002 f8d8 	bl	8007298 <USB_ReadInterrupts>
 80050e8:	0487      	lsls	r7, r0, #18
 80050ea:	d516      	bpl.n	800511a <HAL_PCD_IRQHandler+0x1de>
      (void)USB_ActivateSetup(hpcd->Instance);
 80050ec:	6820      	ldr	r0, [r4, #0]
 80050ee:	f002 f905 	bl	80072fc <USB_ActivateSetup>
      hpcd->Init.speed = USB_GetDevSpeed(hpcd->Instance);
 80050f2:	6820      	ldr	r0, [r4, #0]
 80050f4:	f001 fe38 	bl	8006d68 <USB_GetDevSpeed>
 80050f8:	71e0      	strb	r0, [r4, #7]
      (void)USB_SetTurnaroundTime(hpcd->Instance,
 80050fa:	6827      	ldr	r7, [r4, #0]
 80050fc:	f000 fd00 	bl	8005b00 <HAL_RCC_GetHCLKFreq>
 8005100:	79e2      	ldrb	r2, [r4, #7]
 8005102:	4601      	mov	r1, r0
 8005104:	4638      	mov	r0, r7
 8005106:	f001 fc7d 	bl	8006a04 <USB_SetTurnaroundTime>
      HAL_PCD_ResetCallback(hpcd);
 800510a:	4620      	mov	r0, r4
 800510c:	f7fc fbc1 	bl	8001892 <HAL_PCD_ResetCallback>
      __HAL_PCD_CLEAR_FLAG(hpcd, USB_OTG_GINTSTS_ENUMDNE);
 8005110:	6822      	ldr	r2, [r4, #0]
 8005112:	6953      	ldr	r3, [r2, #20]
 8005114:	f403 5300 	and.w	r3, r3, #8192	@ 0x2000
 8005118:	6153      	str	r3, [r2, #20]
    if (__HAL_PCD_GET_FLAG(hpcd, USB_OTG_GINTSTS_SOF))
 800511a:	6820      	ldr	r0, [r4, #0]
 800511c:	f002 f8bc 	bl	8007298 <USB_ReadInterrupts>
 8005120:	0700      	lsls	r0, r0, #28
 8005122:	d507      	bpl.n	8005134 <HAL_PCD_IRQHandler+0x1f8>
      HAL_PCD_SOFCallback(hpcd);
 8005124:	4620      	mov	r0, r4
 8005126:	f7fc fbb0 	bl	800188a <HAL_PCD_SOFCallback>
      __HAL_PCD_CLEAR_FLAG(hpcd, USB_OTG_GINTSTS_SOF);
 800512a:	6822      	ldr	r2, [r4, #0]
 800512c:	6953      	ldr	r3, [r2, #20]
 800512e:	f003 0308 	and.w	r3, r3, #8
 8005132:	6153      	str	r3, [r2, #20]
    if (__HAL_PCD_GET_FLAG(hpcd, USB_OTG_GINTSTS_BOUTNAKEFF))
 8005134:	6820      	ldr	r0, [r4, #0]
 8005136:	f002 f8af 	bl	8007298 <USB_ReadInterrupts>
 800513a:	0601      	lsls	r1, r0, #24
 800513c:	f100 8213 	bmi.w	8005566 <HAL_PCD_IRQHandler+0x62a>
    if (__HAL_PCD_GET_FLAG(hpcd, USB_OTG_GINTSTS_IISOIXFR))
 8005140:	6820      	ldr	r0, [r4, #0]
 8005142:	f002 f8a9 	bl	8007298 <USB_ReadInterrupts>
 8005146:	02c2      	lsls	r2, r0, #11
 8005148:	d50c      	bpl.n	8005164 <HAL_PCD_IRQHandler+0x228>
 800514a:	46a0      	mov	r8, r4
 800514c:	f506 6912 	add.w	r9, r6, #2336	@ 0x920
      for (epnum = 1U; epnum < hpcd->Init.dev_endpoints; epnum++)
 8005150:	2701      	movs	r7, #1
 8005152:	7923      	ldrb	r3, [r4, #4]
 8005154:	42bb      	cmp	r3, r7
 8005156:	f200 821f 	bhi.w	8005598 <HAL_PCD_IRQHandler+0x65c>
      __HAL_PCD_CLEAR_FLAG(hpcd, USB_OTG_GINTSTS_IISOIXFR);
 800515a:	6822      	ldr	r2, [r4, #0]
 800515c:	6953      	ldr	r3, [r2, #20]
 800515e:	f403 1380 	and.w	r3, r3, #1048576	@ 0x100000
 8005162:	6153      	str	r3, [r2, #20]
    if (__HAL_PCD_GET_FLAG(hpcd, USB_OTG_GINTSTS_PXFR_INCOMPISOOUT))
 8005164:	6820      	ldr	r0, [r4, #0]
 8005166:	f002 f897 	bl	8007298 <USB_ReadInterrupts>
 800516a:	0283      	lsls	r3, r0, #10
 800516c:	d52d      	bpl.n	80051ca <HAL_PCD_IRQHandler+0x28e>
      for (epnum = 1U; epnum < hpcd->Init.dev_endpoints; epnum++)
 800516e:	f894 e004 	ldrb.w	lr, [r4, #4]
 8005172:	4623      	mov	r3, r4
 8005174:	f506 6032 	add.w	r0, r6, #2848	@ 0xb20
 8005178:	2101      	movs	r1, #1
 800517a:	458e      	cmp	lr, r1
 800517c:	d920      	bls.n	80051c0 <HAL_PCD_IRQHandler+0x284>
        if ((hpcd->OUT_ep[epnum].type == EP_TYPE_ISOC) &&
 800517e:	f893 c27c 	ldrb.w	ip, [r3, #636]	@ 0x27c
        RegVal = USBx_OUTEP(epnum)->DOEPCTL;
 8005182:	6802      	ldr	r2, [r0, #0]
        if ((hpcd->OUT_ep[epnum].type == EP_TYPE_ISOC) &&
 8005184:	f1bc 0f01 	cmp.w	ip, #1
 8005188:	f040 821c 	bne.w	80055c4 <HAL_PCD_IRQHandler+0x688>
 800518c:	2a00      	cmp	r2, #0
 800518e:	f280 8219 	bge.w	80055c4 <HAL_PCD_IRQHandler+0x688>
            ((RegVal & (0x1U << 16)) == (hpcd->FrameNumber & 0x1U)))
 8005192:	f8d4 74d4 	ldr.w	r7, [r4, #1236]	@ 0x4d4
 8005196:	f402 3280 	and.w	r2, r2, #65536	@ 0x10000
 800519a:	f007 0701 	and.w	r7, r7, #1
            ((RegVal & USB_OTG_DOEPCTL_EPENA) == USB_OTG_DOEPCTL_EPENA) &&
 800519e:	42ba      	cmp	r2, r7
 80051a0:	f040 8210 	bne.w	80055c4 <HAL_PCD_IRQHandler+0x688>
          hpcd->OUT_ep[epnum].is_iso_incomplete = 1U;
 80051a4:	f883 c27b 	strb.w	ip, [r3, #635]	@ 0x27b
          USBx->GINTMSK |= USB_OTG_GINTMSK_GONAKEFFM;
 80051a8:	69b2      	ldr	r2, [r6, #24]
 80051aa:	f042 0280 	orr.w	r2, r2, #128	@ 0x80
 80051ae:	61b2      	str	r2, [r6, #24]
          if ((USBx->GINTSTS & USB_OTG_GINTSTS_BOUTNAKEFF) == 0U)
 80051b0:	6972      	ldr	r2, [r6, #20]
 80051b2:	0617      	lsls	r7, r2, #24
 80051b4:	f100 8206 	bmi.w	80055c4 <HAL_PCD_IRQHandler+0x688>
            USBx_DEVICE->DCTL |= USB_OTG_DCTL_SGONAK;
 80051b8:	686b      	ldr	r3, [r5, #4]
 80051ba:	f443 7300 	orr.w	r3, r3, #512	@ 0x200
 80051be:	606b      	str	r3, [r5, #4]
      __HAL_PCD_CLEAR_FLAG(hpcd, USB_OTG_GINTSTS_PXFR_INCOMPISOOUT);
 80051c0:	6822      	ldr	r2, [r4, #0]
 80051c2:	6953      	ldr	r3, [r2, #20]
 80051c4:	f403 1300 	and.w	r3, r3, #2097152	@ 0x200000
 80051c8:	6153      	str	r3, [r2, #20]
    if (__HAL_PCD_GET_FLAG(hpcd, USB_OTG_GINTSTS_SRQINT))
 80051ca:	6820      	ldr	r0, [r4, #0]
 80051cc:	f002 f864 	bl	8007298 <USB_ReadInterrupts>
 80051d0:	0041      	lsls	r1, r0, #1
 80051d2:	d507      	bpl.n	80051e4 <HAL_PCD_IRQHandler+0x2a8>
      HAL_PCD_ConnectCallback(hpcd);
 80051d4:	4620      	mov	r0, r4
 80051d6:	f7fc fb93 	bl	8001900 <HAL_PCD_ConnectCallback>
      __HAL_PCD_CLEAR_FLAG(hpcd, USB_OTG_GINTSTS_SRQINT);
 80051da:	6822      	ldr	r2, [r4, #0]
 80051dc:	6953      	ldr	r3, [r2, #20]
 80051de:	f003 4380 	and.w	r3, r3, #1073741824	@ 0x40000000
 80051e2:	6153      	str	r3, [r2, #20]
    if (__HAL_PCD_GET_FLAG(hpcd, USB_OTG_GINTSTS_OTGINT))
 80051e4:	6820      	ldr	r0, [r4, #0]
 80051e6:	f002 f857 	bl	8007298 <USB_ReadInterrupts>
 80051ea:	0742      	lsls	r2, r0, #29
 80051ec:	d50a      	bpl.n	8005204 <HAL_PCD_IRQHandler+0x2c8>
      RegVal = hpcd->Instance->GOTGINT;
 80051ee:	6823      	ldr	r3, [r4, #0]
 80051f0:	685d      	ldr	r5, [r3, #4]
      if ((RegVal & USB_OTG_GOTGINT_SEDET) == USB_OTG_GOTGINT_SEDET)
 80051f2:	076b      	lsls	r3, r5, #29
 80051f4:	d502      	bpl.n	80051fc <HAL_PCD_IRQHandler+0x2c0>
        HAL_PCD_DisconnectCallback(hpcd);
 80051f6:	4620      	mov	r0, r4
 80051f8:	f7fc fb86 	bl	8001908 <HAL_PCD_DisconnectCallback>
      hpcd->Instance->GOTGINT |= RegVal;
 80051fc:	6822      	ldr	r2, [r4, #0]
 80051fe:	6853      	ldr	r3, [r2, #4]
 8005200:	432b      	orrs	r3, r5
 8005202:	6053      	str	r3, [r2, #4]
}
 8005204:	b009      	add	sp, #36	@ 0x24
 8005206:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
      else if (((RegVal & USB_OTG_GRXSTSP_PKTSTS) >> 17) == STS_SETUP_UPDT)
 800520a:	f5b3 2f40 	cmp.w	r3, #786432	@ 0xc0000
 800520e:	f47f aee8 	bne.w	8004fe2 <HAL_PCD_IRQHandler+0xa6>
        (void)USB_ReadPacket(USBx, (uint8_t *)hpcd->Setup, 8U);
 8005212:	2208      	movs	r2, #8
 8005214:	f204 419c 	addw	r1, r4, #1180	@ 0x49c
 8005218:	4630      	mov	r0, r6
 800521a:	f001 ff9d 	bl	8007158 <USB_ReadPacket>
        ep->xfer_count += (RegVal & USB_OTG_GRXSTSP_BCNT) >> 4;
 800521e:	2324      	movs	r3, #36	@ 0x24
 8005220:	fb03 4707 	mla	r7, r3, r7, r4
 8005224:	f3c8 180a 	ubfx	r8, r8, #4, #11
 8005228:	f8d7 3268 	ldr.w	r3, [r7, #616]	@ 0x268
 800522c:	4443      	add	r3, r8
 800522e:	e6d6      	b.n	8004fde <HAL_PCD_IRQHandler+0xa2>
      ep_intr = USB_ReadDevAllOutEpInterrupt(hpcd->Instance);
 8005230:	6820      	ldr	r0, [r4, #0]
 8005232:	f002 f835 	bl	80072a0 <USB_ReadDevAllOutEpInterrupt>
 8005236:	f506 6830 	add.w	r8, r6, #2816	@ 0xb00
 800523a:	9004      	str	r0, [sp, #16]
      while (ep_intr != 0U)
 800523c:	46a2      	mov	sl, r4
      epnum = 0U;
 800523e:	2700      	movs	r7, #0
      while (ep_intr != 0U)
 8005240:	9b04      	ldr	r3, [sp, #16]
          epint = USB_ReadDevOutEPInterrupt(hpcd->Instance, (uint8_t)epnum);
 8005242:	6820      	ldr	r0, [r4, #0]
      while (ep_intr != 0U)
 8005244:	2b00      	cmp	r3, #0
 8005246:	f43f aed7 	beq.w	8004ff8 <HAL_PCD_IRQHandler+0xbc>
        if ((ep_intr & 0x1U) != 0U)
 800524a:	9b04      	ldr	r3, [sp, #16]
 800524c:	07db      	lsls	r3, r3, #31
 800524e:	d578      	bpl.n	8005342 <HAL_PCD_IRQHandler+0x406>
          epint = USB_ReadDevOutEPInterrupt(hpcd->Instance, (uint8_t)epnum);
 8005250:	fa5f fb87 	uxtb.w	fp, r7
 8005254:	4659      	mov	r1, fp
 8005256:	f002 f833 	bl	80072c0 <USB_ReadDevOutEPInterrupt>
          if ((epint & USB_OTG_DOEPINT_XFRC) == USB_OTG_DOEPINT_XFRC)
 800525a:	f010 0f01 	tst.w	r0, #1
          epint = USB_ReadDevOutEPInterrupt(hpcd->Instance, (uint8_t)epnum);
 800525e:	4681      	mov	r9, r0
          if ((epint & USB_OTG_DOEPINT_XFRC) == USB_OTG_DOEPINT_XFRC)
 8005260:	d01f      	beq.n	80052a2 <HAL_PCD_IRQHandler+0x366>
  * @retval HAL status
  */
static HAL_StatusTypeDef PCD_EP_OutXfrComplete_int(PCD_HandleTypeDef *hpcd, uint32_t epnum)
{
  USB_OTG_EPTypeDef *ep;
  const USB_OTG_GlobalTypeDef *USBx = hpcd->Instance;
 8005262:	6820      	ldr	r0, [r4, #0]
            CLEAR_OUT_EP_INTR(epnum, USB_OTG_DOEPINT_XFRC);
 8005264:	2301      	movs	r3, #1
 8005266:	f8c8 3008 	str.w	r3, [r8, #8]
  uint32_t USBx_BASE = (uint32_t)USBx;
  uint32_t gSNPSiD = *(__IO const uint32_t *)(&USBx->CID + 0x1U);
  uint32_t DoepintReg = USBx_OUTEP(epnum)->DOEPINT;

  if (hpcd->Init.dma_enable == 1U)
 800526a:	f894 c006 	ldrb.w	ip, [r4, #6]
  uint32_t gSNPSiD = *(__IO const uint32_t *)(&USBx->CID + 0x1U);
 800526e:	6c01      	ldr	r1, [r0, #64]	@ 0x40
  uint32_t DoepintReg = USBx_OUTEP(epnum)->DOEPINT;
 8005270:	f500 6330 	add.w	r3, r0, #2816	@ 0xb00
 8005274:	eb03 1347 	add.w	r3, r3, r7, lsl #5
  if (hpcd->Init.dma_enable == 1U)
 8005278:	f1bc 0f01 	cmp.w	ip, #1
  uint32_t DoepintReg = USBx_OUTEP(epnum)->DOEPINT;
 800527c:	689a      	ldr	r2, [r3, #8]
  if (hpcd->Init.dma_enable == 1U)
 800527e:	f040 808b 	bne.w	8005398 <HAL_PCD_IRQHandler+0x45c>
  {
    if ((DoepintReg & USB_OTG_DOEPINT_STUP) == USB_OTG_DOEPINT_STUP) /* Class C */
 8005282:	f012 0f08 	tst.w	r2, #8
 8005286:	d007      	beq.n	8005298 <HAL_PCD_IRQHandler+0x35c>
    {
      /* StupPktRcvd = 1 this is a setup packet */
      if ((gSNPSiD > USB_OTG_CORE_ID_300A) &&
 8005288:	48af      	ldr	r0, [pc, #700]	@ (8005548 <HAL_PCD_IRQHandler+0x60c>)
 800528a:	4281      	cmp	r1, r0
 800528c:	d909      	bls.n	80052a2 <HAL_PCD_IRQHandler+0x366>
 800528e:	0412      	lsls	r2, r2, #16
 8005290:	d507      	bpl.n	80052a2 <HAL_PCD_IRQHandler+0x366>
    if (gSNPSiD == USB_OTG_CORE_ID_310A)
    {
      /* StupPktRcvd = 1 this is a setup packet */
      if ((DoepintReg & USB_OTG_DOEPINT_STPKTRX) == USB_OTG_DOEPINT_STPKTRX)
      {
        CLEAR_OUT_EP_INTR(epnum, USB_OTG_DOEPINT_STPKTRX);
 8005292:	f44f 4200 	mov.w	r2, #32768	@ 0x8000
 8005296:	e003      	b.n	80052a0 <HAL_PCD_IRQHandler+0x364>
    else if ((DoepintReg & USB_OTG_DOEPINT_OTEPSPR) == USB_OTG_DOEPINT_OTEPSPR) /* Class E */
 8005298:	f012 0f20 	tst.w	r2, #32
 800529c:	d05a      	beq.n	8005354 <HAL_PCD_IRQHandler+0x418>
      CLEAR_OUT_EP_INTR(epnum, USB_OTG_DOEPINT_OTEPSPR);
 800529e:	2220      	movs	r2, #32
        CLEAR_OUT_EP_INTR(epnum, USB_OTG_DOEPINT_STPKTRX);
 80052a0:	609a      	str	r2, [r3, #8]
          if ((epint & USB_OTG_DOEPINT_STUP) == USB_OTG_DOEPINT_STUP)
 80052a2:	f019 0f08 	tst.w	r9, #8
 80052a6:	d021      	beq.n	80052ec <HAL_PCD_IRQHandler+0x3b0>
            CLEAR_OUT_EP_INTR(epnum, USB_OTG_DOEPINT_STUP);
 80052a8:	2308      	movs	r3, #8
 80052aa:	f8c8 3008 	str.w	r3, [r8, #8]
  * @param  epnum endpoint number
  * @retval HAL status
  */
static HAL_StatusTypeDef PCD_EP_OutSetupPacket_int(PCD_HandleTypeDef *hpcd, uint32_t epnum)
{
  const USB_OTG_GlobalTypeDef *USBx = hpcd->Instance;
 80052ae:	6823      	ldr	r3, [r4, #0]
  uint32_t USBx_BASE = (uint32_t)USBx;
  uint32_t gSNPSiD = *(__IO const uint32_t *)(&USBx->CID + 0x1U);
  uint32_t DoepintReg = USBx_OUTEP(epnum)->DOEPINT;

  if ((gSNPSiD > USB_OTG_CORE_ID_300A) &&
 80052b0:	49a5      	ldr	r1, [pc, #660]	@ (8005548 <HAL_PCD_IRQHandler+0x60c>)
  uint32_t gSNPSiD = *(__IO const uint32_t *)(&USBx->CID + 0x1U);
 80052b2:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
  uint32_t DoepintReg = USBx_OUTEP(epnum)->DOEPINT;
 80052b4:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 80052b8:	eb03 1347 	add.w	r3, r3, r7, lsl #5
  if ((gSNPSiD > USB_OTG_CORE_ID_300A) &&
 80052bc:	428a      	cmp	r2, r1
  uint32_t DoepintReg = USBx_OUTEP(epnum)->DOEPINT;
 80052be:	6898      	ldr	r0, [r3, #8]
  if ((gSNPSiD > USB_OTG_CORE_ID_300A) &&
 80052c0:	d904      	bls.n	80052cc <HAL_PCD_IRQHandler+0x390>
 80052c2:	0401      	lsls	r1, r0, #16
      ((DoepintReg & USB_OTG_DOEPINT_STPKTRX) == USB_OTG_DOEPINT_STPKTRX))
  {
    CLEAR_OUT_EP_INTR(epnum, USB_OTG_DOEPINT_STPKTRX);
 80052c4:	bf44      	itt	mi
 80052c6:	f44f 4000 	movmi.w	r0, #32768	@ 0x8000
 80052ca:	6098      	strmi	r0, [r3, #8]

  /* Inform the upper layer that a setup packet is available */
#if (USE_HAL_PCD_REGISTER_CALLBACKS == 1U)
  hpcd->SetupStageCallback(hpcd);
#else
  HAL_PCD_SetupStageCallback(hpcd);
 80052cc:	4620      	mov	r0, r4
 80052ce:	9205      	str	r2, [sp, #20]
 80052d0:	f7fc fac4 	bl	800185c <HAL_PCD_SetupStageCallback>
#endif /* USE_HAL_PCD_REGISTER_CALLBACKS */

  if ((gSNPSiD > USB_OTG_CORE_ID_300A) && (hpcd->Init.dma_enable == 1U))
 80052d4:	9a05      	ldr	r2, [sp, #20]
 80052d6:	499c      	ldr	r1, [pc, #624]	@ (8005548 <HAL_PCD_IRQHandler+0x60c>)
 80052d8:	428a      	cmp	r2, r1
 80052da:	d907      	bls.n	80052ec <HAL_PCD_IRQHandler+0x3b0>
 80052dc:	79a1      	ldrb	r1, [r4, #6]
 80052de:	2901      	cmp	r1, #1
 80052e0:	d104      	bne.n	80052ec <HAL_PCD_IRQHandler+0x3b0>
  {
    (void)USB_EP0_OutStart(hpcd->Instance, 1U, (uint8_t *)hpcd->Setup);
 80052e2:	6820      	ldr	r0, [r4, #0]
 80052e4:	f204 429c 	addw	r2, r4, #1180	@ 0x49c
 80052e8:	f002 f816 	bl	8007318 <USB_EP0_OutStart>
          if ((epint & USB_OTG_DOEPINT_OTEPDIS) == USB_OTG_DOEPINT_OTEPDIS)
 80052ec:	f019 0f10 	tst.w	r9, #16
            CLEAR_OUT_EP_INTR(epnum, USB_OTG_DOEPINT_OTEPDIS);
 80052f0:	bf1c      	itt	ne
 80052f2:	2310      	movne	r3, #16
 80052f4:	f8c8 3008 	strne.w	r3, [r8, #8]
          if ((epint & USB_OTG_DOEPINT_EPDISD) == USB_OTG_DOEPINT_EPDISD)
 80052f8:	f019 0f02 	tst.w	r9, #2
 80052fc:	d014      	beq.n	8005328 <HAL_PCD_IRQHandler+0x3ec>
            if ((USBx->GINTSTS & USB_OTG_GINTSTS_BOUTNAKEFF) == USB_OTG_GINTSTS_BOUTNAKEFF)
 80052fe:	6973      	ldr	r3, [r6, #20]
 8005300:	061a      	lsls	r2, r3, #24
              USBx_DEVICE->DCTL |= USB_OTG_DCTL_CGONAK;
 8005302:	bf42      	ittt	mi
 8005304:	686b      	ldrmi	r3, [r5, #4]
 8005306:	f443 6380 	orrmi.w	r3, r3, #1024	@ 0x400
 800530a:	606b      	strmi	r3, [r5, #4]
            if (ep->is_iso_incomplete == 1U)
 800530c:	f89a 3257 	ldrb.w	r3, [sl, #599]	@ 0x257
 8005310:	2b01      	cmp	r3, #1
 8005312:	d106      	bne.n	8005322 <HAL_PCD_IRQHandler+0x3e6>
              ep->is_iso_incomplete = 0U;
 8005314:	2300      	movs	r3, #0
 8005316:	f88a 3257 	strb.w	r3, [sl, #599]	@ 0x257
              HAL_PCD_ISOOUTIncompleteCallback(hpcd, (uint8_t)epnum);
 800531a:	4659      	mov	r1, fp
 800531c:	4620      	mov	r0, r4
 800531e:	f7fc fae7 	bl	80018f0 <HAL_PCD_ISOOUTIncompleteCallback>
            CLEAR_OUT_EP_INTR(epnum, USB_OTG_DOEPINT_EPDISD);
 8005322:	2302      	movs	r3, #2
 8005324:	f8c8 3008 	str.w	r3, [r8, #8]
          if ((epint & USB_OTG_DOEPINT_OTEPSPR) == USB_OTG_DOEPINT_OTEPSPR)
 8005328:	f019 0f20 	tst.w	r9, #32
            CLEAR_OUT_EP_INTR(epnum, USB_OTG_DOEPINT_OTEPSPR);
 800532c:	bf1c      	itt	ne
 800532e:	2320      	movne	r3, #32
 8005330:	f8c8 3008 	strne.w	r3, [r8, #8]
          if ((epint & USB_OTG_DOEPINT_NAK) == USB_OTG_DOEPINT_NAK)
 8005334:	f419 5f00 	tst.w	r9, #8192	@ 0x2000
            CLEAR_OUT_EP_INTR(epnum, USB_OTG_DOEPINT_NAK);
 8005338:	bf1c      	itt	ne
 800533a:	f44f 5300 	movne.w	r3, #8192	@ 0x2000
 800533e:	f8c8 3008 	strne.w	r3, [r8, #8]
        ep_intr >>= 1U;
 8005342:	9b04      	ldr	r3, [sp, #16]
 8005344:	085b      	lsrs	r3, r3, #1
        epnum++;
 8005346:	3701      	adds	r7, #1
        ep_intr >>= 1U;
 8005348:	9304      	str	r3, [sp, #16]
 800534a:	f108 0820 	add.w	r8, r8, #32
 800534e:	f10a 0a24 	add.w	sl, sl, #36	@ 0x24
 8005352:	e775      	b.n	8005240 <HAL_PCD_IRQHandler+0x304>
      if ((gSNPSiD > USB_OTG_CORE_ID_300A) &&
 8005354:	f8df c1f0 	ldr.w	ip, [pc, #496]	@ 8005548 <HAL_PCD_IRQHandler+0x60c>
 8005358:	4561      	cmp	r1, ip
 800535a:	d901      	bls.n	8005360 <HAL_PCD_IRQHandler+0x424>
 800535c:	0412      	lsls	r2, r2, #16
 800535e:	d498      	bmi.n	8005292 <HAL_PCD_IRQHandler+0x356>
        ep->xfer_count = ep->xfer_size - (USBx_OUTEP(epnum)->DOEPTSIZ & USB_OTG_DOEPTSIZ_XFRSIZ);
 8005360:	691a      	ldr	r2, [r3, #16]
 8005362:	f8da 3274 	ldr.w	r3, [sl, #628]	@ 0x274
 8005366:	f3c2 0212 	ubfx	r2, r2, #0, #19
 800536a:	1a9b      	subs	r3, r3, r2
 800536c:	f8ca 3268 	str.w	r3, [sl, #616]	@ 0x268
        if (epnum == 0U)
 8005370:	b96f      	cbnz	r7, 800538e <HAL_PCD_IRQHandler+0x452>
          if (ep->xfer_len == 0U)
 8005372:	f8d4 2264 	ldr.w	r2, [r4, #612]	@ 0x264
 8005376:	b92a      	cbnz	r2, 8005384 <HAL_PCD_IRQHandler+0x448>
            (void)USB_EP0_OutStart(hpcd->Instance, 1U, (uint8_t *)hpcd->Setup);
 8005378:	f204 429c 	addw	r2, r4, #1180	@ 0x49c
 800537c:	2101      	movs	r1, #1
        (void)USB_EP0_OutStart(hpcd->Instance, 0U, (uint8_t *)hpcd->Setup);
 800537e:	f001 ffcb 	bl	8007318 <USB_EP0_OutStart>
 8005382:	e004      	b.n	800538e <HAL_PCD_IRQHandler+0x452>
            ep->xfer_buff += ep->xfer_count;
 8005384:	f8d4 2260 	ldr.w	r2, [r4, #608]	@ 0x260
 8005388:	441a      	add	r2, r3
 800538a:	f8c4 2260 	str.w	r2, [r4, #608]	@ 0x260
      HAL_PCD_DataOutStageCallback(hpcd, (uint8_t)epnum);
 800538e:	4659      	mov	r1, fp
 8005390:	4620      	mov	r0, r4
 8005392:	f7fc fa69 	bl	8001868 <HAL_PCD_DataOutStageCallback>
 8005396:	e784      	b.n	80052a2 <HAL_PCD_IRQHandler+0x366>
    if (gSNPSiD == USB_OTG_CORE_ID_310A)
 8005398:	f8df c1b0 	ldr.w	ip, [pc, #432]	@ 800554c <HAL_PCD_IRQHandler+0x610>
 800539c:	4561      	cmp	r1, ip
 800539e:	d107      	bne.n	80053b0 <HAL_PCD_IRQHandler+0x474>
      if ((DoepintReg & USB_OTG_DOEPINT_STPKTRX) == USB_OTG_DOEPINT_STPKTRX)
 80053a0:	0411      	lsls	r1, r2, #16
 80053a2:	f53f af76 	bmi.w	8005292 <HAL_PCD_IRQHandler+0x356>
        if ((DoepintReg & USB_OTG_DOEPINT_OTEPSPR) == USB_OTG_DOEPINT_OTEPSPR)
 80053a6:	0690      	lsls	r0, r2, #26
 80053a8:	d5f1      	bpl.n	800538e <HAL_PCD_IRQHandler+0x452>
          CLEAR_OUT_EP_INTR(epnum, USB_OTG_DOEPINT_OTEPSPR);
 80053aa:	2220      	movs	r2, #32
 80053ac:	609a      	str	r2, [r3, #8]
        HAL_PCD_DataOutStageCallback(hpcd, (uint8_t)epnum);
 80053ae:	e7ee      	b.n	800538e <HAL_PCD_IRQHandler+0x452>
      if ((epnum == 0U) && (hpcd->OUT_ep[epnum].xfer_len == 0U))
 80053b0:	2f00      	cmp	r7, #0
 80053b2:	d1ec      	bne.n	800538e <HAL_PCD_IRQHandler+0x452>
 80053b4:	f8d4 3264 	ldr.w	r3, [r4, #612]	@ 0x264
 80053b8:	2b00      	cmp	r3, #0
 80053ba:	d1e8      	bne.n	800538e <HAL_PCD_IRQHandler+0x452>
        (void)USB_EP0_OutStart(hpcd->Instance, 0U, (uint8_t *)hpcd->Setup);
 80053bc:	f204 429c 	addw	r2, r4, #1180	@ 0x49c
 80053c0:	4639      	mov	r1, r7
 80053c2:	e7dc      	b.n	800537e <HAL_PCD_IRQHandler+0x442>
        if ((ep_intr & 0x1U) != 0U) /* In ITR */
 80053c4:	9b04      	ldr	r3, [sp, #16]
 80053c6:	07db      	lsls	r3, r3, #31
 80053c8:	f140 8099 	bpl.w	80054fe <HAL_PCD_IRQHandler+0x5c2>
          epint = USB_ReadDevInEPInterrupt(hpcd->Instance, (uint8_t)epnum);
 80053cc:	fa5f f38a 	uxtb.w	r3, sl
 80053d0:	4619      	mov	r1, r3
 80053d2:	9305      	str	r3, [sp, #20]
 80053d4:	f001 ff7d 	bl	80072d2 <USB_ReadDevInEPInterrupt>
          if ((epint & USB_OTG_DIEPINT_XFRC) == USB_OTG_DIEPINT_XFRC)
 80053d8:	f010 0f01 	tst.w	r0, #1
          epint = USB_ReadDevInEPInterrupt(hpcd->Instance, (uint8_t)epnum);
 80053dc:	4680      	mov	r8, r0
          if ((epint & USB_OTG_DIEPINT_XFRC) == USB_OTG_DIEPINT_XFRC)
 80053de:	d01f      	beq.n	8005420 <HAL_PCD_IRQHandler+0x4e4>
            USBx_DEVICE->DIEPEMPMSK &= ~fifoemptymsk;
 80053e0:	6b6b      	ldr	r3, [r5, #52]	@ 0x34
            fifoemptymsk = (uint32_t)(0x1UL << (epnum & EP_ADDR_MSK));
 80053e2:	2101      	movs	r1, #1
 80053e4:	f00a 020f 	and.w	r2, sl, #15
 80053e8:	fa01 f202 	lsl.w	r2, r1, r2
            USBx_DEVICE->DIEPEMPMSK &= ~fifoemptymsk;
 80053ec:	ea23 0302 	bic.w	r3, r3, r2
 80053f0:	636b      	str	r3, [r5, #52]	@ 0x34
            CLEAR_IN_EP_INTR(epnum, USB_OTG_DIEPINT_XFRC);
 80053f2:	f8cb 1008 	str.w	r1, [fp, #8]
            if (hpcd->Init.dma_enable == 1U)
 80053f6:	79a1      	ldrb	r1, [r4, #6]
 80053f8:	2901      	cmp	r1, #1
 80053fa:	d10d      	bne.n	8005418 <HAL_PCD_IRQHandler+0x4dc>
              hpcd->IN_ep[epnum].xfer_buff += hpcd->IN_ep[epnum].maxpacket;
 80053fc:	e9d7 2307 	ldrd	r2, r3, [r7, #28]
 8005400:	4413      	add	r3, r2
 8005402:	623b      	str	r3, [r7, #32]
              if ((epnum == 0U) && (hpcd->IN_ep[epnum].xfer_len == 0U))
 8005404:	f1ba 0f00 	cmp.w	sl, #0
 8005408:	d106      	bne.n	8005418 <HAL_PCD_IRQHandler+0x4dc>
 800540a:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 800540c:	b923      	cbnz	r3, 8005418 <HAL_PCD_IRQHandler+0x4dc>
                (void)USB_EP0_OutStart(hpcd->Instance, 1U, (uint8_t *)hpcd->Setup);
 800540e:	6820      	ldr	r0, [r4, #0]
 8005410:	f204 429c 	addw	r2, r4, #1180	@ 0x49c
 8005414:	f001 ff80 	bl	8007318 <USB_EP0_OutStart>
            HAL_PCD_DataInStageCallback(hpcd, (uint8_t)epnum);
 8005418:	9905      	ldr	r1, [sp, #20]
 800541a:	4620      	mov	r0, r4
 800541c:	f7fc fa2d 	bl	800187a <HAL_PCD_DataInStageCallback>
          if ((epint & USB_OTG_DIEPINT_TOC) == USB_OTG_DIEPINT_TOC)
 8005420:	f018 0f08 	tst.w	r8, #8
            CLEAR_IN_EP_INTR(epnum, USB_OTG_DIEPINT_TOC);
 8005424:	bf1c      	itt	ne
 8005426:	2308      	movne	r3, #8
 8005428:	f8cb 3008 	strne.w	r3, [fp, #8]
          if ((epint & USB_OTG_DIEPINT_ITTXFE) == USB_OTG_DIEPINT_ITTXFE)
 800542c:	f018 0f10 	tst.w	r8, #16
            CLEAR_IN_EP_INTR(epnum, USB_OTG_DIEPINT_ITTXFE);
 8005430:	bf1c      	itt	ne
 8005432:	2310      	movne	r3, #16
 8005434:	f8cb 3008 	strne.w	r3, [fp, #8]
          if ((epint & USB_OTG_DIEPINT_INEPNE) == USB_OTG_DIEPINT_INEPNE)
 8005438:	f018 0f40 	tst.w	r8, #64	@ 0x40
            CLEAR_IN_EP_INTR(epnum, USB_OTG_DIEPINT_INEPNE);
 800543c:	bf1c      	itt	ne
 800543e:	2340      	movne	r3, #64	@ 0x40
 8005440:	f8cb 3008 	strne.w	r3, [fp, #8]
          if ((epint & USB_OTG_DIEPINT_EPDISD) == USB_OTG_DIEPINT_EPDISD)
 8005444:	f018 0f02 	tst.w	r8, #2
 8005448:	d00f      	beq.n	800546a <HAL_PCD_IRQHandler+0x52e>
            (void)USB_FlushTxFifo(USBx, epnum);
 800544a:	4651      	mov	r1, sl
 800544c:	4630      	mov	r0, r6
 800544e:	f001 fb85 	bl	8006b5c <USB_FlushTxFifo>
            if (ep->is_iso_incomplete == 1U)
 8005452:	7dfb      	ldrb	r3, [r7, #23]
 8005454:	2b01      	cmp	r3, #1
 8005456:	d105      	bne.n	8005464 <HAL_PCD_IRQHandler+0x528>
              ep->is_iso_incomplete = 0U;
 8005458:	2300      	movs	r3, #0
              HAL_PCD_ISOINIncompleteCallback(hpcd, (uint8_t)epnum);
 800545a:	9905      	ldr	r1, [sp, #20]
              ep->is_iso_incomplete = 0U;
 800545c:	75fb      	strb	r3, [r7, #23]
              HAL_PCD_ISOINIncompleteCallback(hpcd, (uint8_t)epnum);
 800545e:	4620      	mov	r0, r4
 8005460:	f7fc fa4a 	bl	80018f8 <HAL_PCD_ISOINIncompleteCallback>
            CLEAR_IN_EP_INTR(epnum, USB_OTG_DIEPINT_EPDISD);
 8005464:	2302      	movs	r3, #2
 8005466:	f8cb 3008 	str.w	r3, [fp, #8]
  USB_OTG_GlobalTypeDef *USBx = hpcd->Instance;
 800546a:	6823      	ldr	r3, [r4, #0]
 800546c:	9306      	str	r3, [sp, #24]
          if ((epint & USB_OTG_DIEPINT_TXFE) == USB_OTG_DIEPINT_TXFE)
 800546e:	f018 0f80 	tst.w	r8, #128	@ 0x80
 8005472:	d044      	beq.n	80054fe <HAL_PCD_IRQHandler+0x5c2>
  if (ep->xfer_count > ep->xfer_len)
 8005474:	e9d7 3209 	ldrd	r3, r2, [r7, #36]	@ 0x24
 8005478:	429a      	cmp	r2, r3
 800547a:	d840      	bhi.n	80054fe <HAL_PCD_IRQHandler+0x5c2>
  len = ep->xfer_len - ep->xfer_count;
 800547c:	eba3 0802 	sub.w	r8, r3, r2
  if (len > ep->maxpacket)
 8005480:	69fb      	ldr	r3, [r7, #28]
 8005482:	4598      	cmp	r8, r3
 8005484:	bf28      	it	cs
 8005486:	4698      	movcs	r8, r3
  while (((USBx_INEP(epnum)->DTXFSTS & USB_OTG_DTXFSTS_INEPTFSAV) >= len32b) &&
 8005488:	9b06      	ldr	r3, [sp, #24]
 800548a:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
  len32b = (len + 3U) / 4U;
 800548e:	f108 0803 	add.w	r8, r8, #3
  while (((USBx_INEP(epnum)->DTXFSTS & USB_OTG_DTXFSTS_INEPTFSAV) >= len32b) &&
 8005492:	eb03 134a 	add.w	r3, r3, sl, lsl #5
  len32b = (len + 3U) / 4U;
 8005496:	ea4f 0898 	mov.w	r8, r8, lsr #2
  while (((USBx_INEP(epnum)->DTXFSTS & USB_OTG_DTXFSTS_INEPTFSAV) >= len32b) &&
 800549a:	9307      	str	r3, [sp, #28]
 800549c:	9b07      	ldr	r3, [sp, #28]
 800549e:	6999      	ldr	r1, [r3, #24]
 80054a0:	b289      	uxth	r1, r1
         (ep->xfer_count < ep->xfer_len) && (ep->xfer_len != 0U))
 80054a2:	4541      	cmp	r1, r8
 80054a4:	e9d7 3209 	ldrd	r3, r2, [r7, #36]	@ 0x24
 80054a8:	d327      	bcc.n	80054fa <HAL_PCD_IRQHandler+0x5be>
  while (((USBx_INEP(epnum)->DTXFSTS & USB_OTG_DTXFSTS_INEPTFSAV) >= len32b) &&
 80054aa:	4293      	cmp	r3, r2
 80054ac:	d80b      	bhi.n	80054c6 <HAL_PCD_IRQHandler+0x58a>
    USBx_DEVICE->DIEPEMPMSK &= ~fifoemptymsk;
 80054ae:	9b06      	ldr	r3, [sp, #24]
    fifoemptymsk = (uint32_t)(0x1UL << (epnum & EP_ADDR_MSK));
 80054b0:	f00a 000f 	and.w	r0, sl, #15
    USBx_DEVICE->DIEPEMPMSK &= ~fifoemptymsk;
 80054b4:	f8d3 2834 	ldr.w	r2, [r3, #2100]	@ 0x834
    fifoemptymsk = (uint32_t)(0x1UL << (epnum & EP_ADDR_MSK));
 80054b8:	2101      	movs	r1, #1
 80054ba:	4081      	lsls	r1, r0
    USBx_DEVICE->DIEPEMPMSK &= ~fifoemptymsk;
 80054bc:	ea22 0201 	bic.w	r2, r2, r1
 80054c0:	f8c3 2834 	str.w	r2, [r3, #2100]	@ 0x834
 80054c4:	e01b      	b.n	80054fe <HAL_PCD_IRQHandler+0x5c2>
    len = ep->xfer_len - ep->xfer_count;
 80054c6:	eba3 0902 	sub.w	r9, r3, r2
    if (len > ep->maxpacket)
 80054ca:	69fb      	ldr	r3, [r7, #28]
    (void)USB_WritePacket(USBx, ep->xfer_buff, (uint8_t)epnum, (uint16_t)len,
 80054cc:	9a05      	ldr	r2, [sp, #20]
 80054ce:	9806      	ldr	r0, [sp, #24]
    if (len > ep->maxpacket)
 80054d0:	4599      	cmp	r9, r3
 80054d2:	bf28      	it	cs
 80054d4:	4699      	movcs	r9, r3
    (void)USB_WritePacket(USBx, ep->xfer_buff, (uint8_t)epnum, (uint16_t)len,
 80054d6:	79a3      	ldrb	r3, [r4, #6]
 80054d8:	9300      	str	r3, [sp, #0]
 80054da:	6a39      	ldr	r1, [r7, #32]
 80054dc:	fa1f f389 	uxth.w	r3, r9
 80054e0:	f001 fd24 	bl	8006f2c <USB_WritePacket>
    ep->xfer_buff  += len;
 80054e4:	6a3b      	ldr	r3, [r7, #32]
 80054e6:	444b      	add	r3, r9
 80054e8:	623b      	str	r3, [r7, #32]
    ep->xfer_count += len;
 80054ea:	6abb      	ldr	r3, [r7, #40]	@ 0x28
    len32b = (len + 3U) / 4U;
 80054ec:	f109 0803 	add.w	r8, r9, #3
    ep->xfer_count += len;
 80054f0:	444b      	add	r3, r9
    len32b = (len + 3U) / 4U;
 80054f2:	ea4f 0898 	mov.w	r8, r8, lsr #2
    ep->xfer_count += len;
 80054f6:	62bb      	str	r3, [r7, #40]	@ 0x28
 80054f8:	e7d0      	b.n	800549c <HAL_PCD_IRQHandler+0x560>
  if (ep->xfer_len <= ep->xfer_count)
 80054fa:	4293      	cmp	r3, r2
 80054fc:	d9d7      	bls.n	80054ae <HAL_PCD_IRQHandler+0x572>
        ep_intr >>= 1U;
 80054fe:	9b04      	ldr	r3, [sp, #16]
 8005500:	085b      	lsrs	r3, r3, #1
        epnum++;
 8005502:	f10a 0a01 	add.w	sl, sl, #1
        ep_intr >>= 1U;
 8005506:	9304      	str	r3, [sp, #16]
 8005508:	3724      	adds	r7, #36	@ 0x24
 800550a:	f10b 0b20 	add.w	fp, fp, #32
 800550e:	e581      	b.n	8005014 <HAL_PCD_IRQHandler+0xd8>
        HAL_PCD_ResumeCallback(hpcd);
 8005510:	4620      	mov	r0, r4
 8005512:	f7fc f9e9 	bl	80018e8 <HAL_PCD_ResumeCallback>
 8005516:	e596      	b.n	8005046 <HAL_PCD_IRQHandler+0x10a>
        USBx_INEP(i)->DIEPINT = 0xFB7FU;
 8005518:	6099      	str	r1, [r3, #8]
        USBx_INEP(i)->DIEPCTL &= ~USB_OTG_DIEPCTL_STALL;
 800551a:	681a      	ldr	r2, [r3, #0]
 800551c:	f422 1200 	bic.w	r2, r2, #2097152	@ 0x200000
 8005520:	601a      	str	r2, [r3, #0]
        USBx_OUTEP(i)->DOEPINT = 0xFB7FU;
 8005522:	f8c3 1208 	str.w	r1, [r3, #520]	@ 0x208
        USBx_OUTEP(i)->DOEPCTL &= ~USB_OTG_DOEPCTL_STALL;
 8005526:	f8d3 2200 	ldr.w	r2, [r3, #512]	@ 0x200
 800552a:	f422 1200 	bic.w	r2, r2, #2097152	@ 0x200000
 800552e:	f8c3 2200 	str.w	r2, [r3, #512]	@ 0x200
        USBx_OUTEP(i)->DOEPCTL |= USB_OTG_DOEPCTL_SNAK;
 8005532:	f8d3 2200 	ldr.w	r2, [r3, #512]	@ 0x200
 8005536:	f042 6200 	orr.w	r2, r2, #134217728	@ 0x8000000
 800553a:	f8c3 2200 	str.w	r2, [r3, #512]	@ 0x200
      for (i = 0U; i < hpcd->Init.dev_endpoints; i++)
 800553e:	9a03      	ldr	r2, [sp, #12]
 8005540:	3201      	adds	r2, #1
 8005542:	9203      	str	r2, [sp, #12]
 8005544:	3320      	adds	r3, #32
 8005546:	e5a5      	b.n	8005094 <HAL_PCD_IRQHandler+0x158>
 8005548:	4f54300a 	.word	0x4f54300a
 800554c:	4f54310a 	.word	0x4f54310a
        USBx_DEVICE->DOEPMSK |= USB_OTG_DOEPMSK_STUPM |
 8005550:	696b      	ldr	r3, [r5, #20]
 8005552:	f443 5300 	orr.w	r3, r3, #8192	@ 0x2000
 8005556:	f043 032b 	orr.w	r3, r3, #43	@ 0x2b
 800555a:	616b      	str	r3, [r5, #20]
        USBx_DEVICE->DIEPMSK |= USB_OTG_DIEPMSK_TOM |
 800555c:	692b      	ldr	r3, [r5, #16]
 800555e:	f043 030b 	orr.w	r3, r3, #11
 8005562:	612b      	str	r3, [r5, #16]
 8005564:	e5ac      	b.n	80050c0 <HAL_PCD_IRQHandler+0x184>
      USBx->GINTMSK &= ~USB_OTG_GINTMSK_GONAKEFFM;
 8005566:	69b3      	ldr	r3, [r6, #24]
 8005568:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 800556c:	61b3      	str	r3, [r6, #24]
      for (epnum = 1U; epnum < hpcd->Init.dev_endpoints; epnum++)
 800556e:	2701      	movs	r7, #1
        if (hpcd->OUT_ep[epnum].is_iso_incomplete == 1U)
 8005570:	f204 2857 	addw	r8, r4, #599	@ 0x257
 8005574:	f04f 0924 	mov.w	r9, #36	@ 0x24
      for (epnum = 1U; epnum < hpcd->Init.dev_endpoints; epnum++)
 8005578:	7923      	ldrb	r3, [r4, #4]
 800557a:	42bb      	cmp	r3, r7
 800557c:	f67f ade0 	bls.w	8005140 <HAL_PCD_IRQHandler+0x204>
        if (hpcd->OUT_ep[epnum].is_iso_incomplete == 1U)
 8005580:	fb09 f307 	mul.w	r3, r9, r7
 8005584:	f818 3003 	ldrb.w	r3, [r8, r3]
 8005588:	2b01      	cmp	r3, #1
 800558a:	d103      	bne.n	8005594 <HAL_PCD_IRQHandler+0x658>
          (void)HAL_PCD_EP_Abort(hpcd, (uint8_t)epnum);
 800558c:	b2f9      	uxtb	r1, r7
 800558e:	4620      	mov	r0, r4
 8005590:	f7ff fcc3 	bl	8004f1a <HAL_PCD_EP_Abort>
      for (epnum = 1U; epnum < hpcd->Init.dev_endpoints; epnum++)
 8005594:	3701      	adds	r7, #1
 8005596:	e7ef      	b.n	8005578 <HAL_PCD_IRQHandler+0x63c>
        if ((hpcd->IN_ep[epnum].type == EP_TYPE_ISOC) &&
 8005598:	f898 303c 	ldrb.w	r3, [r8, #60]	@ 0x3c
        RegVal = USBx_INEP(epnum)->DIEPCTL;
 800559c:	f8d9 2000 	ldr.w	r2, [r9]
        if ((hpcd->IN_ep[epnum].type == EP_TYPE_ISOC) &&
 80055a0:	2b01      	cmp	r3, #1
 80055a2:	d109      	bne.n	80055b8 <HAL_PCD_IRQHandler+0x67c>
 80055a4:	2a00      	cmp	r2, #0
 80055a6:	da07      	bge.n	80055b8 <HAL_PCD_IRQHandler+0x67c>
          (void)HAL_PCD_EP_Abort(hpcd, (uint8_t)(epnum | 0x80U));
 80055a8:	f067 017f 	orn	r1, r7, #127	@ 0x7f
          hpcd->IN_ep[epnum].is_iso_incomplete = 1U;
 80055ac:	f888 303b 	strb.w	r3, [r8, #59]	@ 0x3b
          (void)HAL_PCD_EP_Abort(hpcd, (uint8_t)(epnum | 0x80U));
 80055b0:	b2c9      	uxtb	r1, r1
 80055b2:	4620      	mov	r0, r4
 80055b4:	f7ff fcb1 	bl	8004f1a <HAL_PCD_EP_Abort>
      for (epnum = 1U; epnum < hpcd->Init.dev_endpoints; epnum++)
 80055b8:	3701      	adds	r7, #1
 80055ba:	f108 0824 	add.w	r8, r8, #36	@ 0x24
 80055be:	f109 0920 	add.w	r9, r9, #32
 80055c2:	e5c6      	b.n	8005152 <HAL_PCD_IRQHandler+0x216>
      for (epnum = 1U; epnum < hpcd->Init.dev_endpoints; epnum++)
 80055c4:	3101      	adds	r1, #1
 80055c6:	3324      	adds	r3, #36	@ 0x24
 80055c8:	3020      	adds	r0, #32
 80055ca:	e5d6      	b.n	800517a <HAL_PCD_IRQHandler+0x23e>

080055cc <HAL_PCDEx_SetTxFiFo>:
         --> Txn should be configured with the minimum space of 16 words
     The FIFO is used optimally when used TxFIFOs are allocated in the top
         of the FIFO.Ex: use EP1 and EP2 as IN instead of EP1 and EP3 as IN ones.
     When DMA is used 3n * FIFO locations should be reserved for internal DMA registers */

  Tx_Offset = hpcd->Instance->GRXFSIZ;
 80055cc:	6800      	ldr	r0, [r0, #0]
{
 80055ce:	b570      	push	{r4, r5, r6, lr}
  Tx_Offset = hpcd->Instance->GRXFSIZ;
 80055d0:	6a43      	ldr	r3, [r0, #36]	@ 0x24

  if (fifo == 0U)
  {
    hpcd->Instance->DIEPTXF0_HNPTXFSIZ = ((uint32_t)size << 16) | Tx_Offset;
 80055d2:	0412      	lsls	r2, r2, #16
  if (fifo == 0U)
 80055d4:	b919      	cbnz	r1, 80055de <HAL_PCDEx_SetTxFiFo+0x12>
    hpcd->Instance->DIEPTXF0_HNPTXFSIZ = ((uint32_t)size << 16) | Tx_Offset;
 80055d6:	4313      	orrs	r3, r2
 80055d8:	6283      	str	r3, [r0, #40]	@ 0x28
    /* Multiply Tx_Size by 2 to get higher performance */
    hpcd->Instance->DIEPTXF[fifo - 1U] = ((uint32_t)size << 16) | Tx_Offset;
  }

  return HAL_OK;
}
 80055da:	2000      	movs	r0, #0
 80055dc:	bd70      	pop	{r4, r5, r6, pc}
    Tx_Offset += (hpcd->Instance->DIEPTXF0_HNPTXFSIZ) >> 16;
 80055de:	6a84      	ldr	r4, [r0, #40]	@ 0x28
    for (i = 0U; i < (fifo - 1U); i++)
 80055e0:	1e4e      	subs	r6, r1, #1
    Tx_Offset += (hpcd->Instance->DIEPTXF0_HNPTXFSIZ) >> 16;
 80055e2:	eb03 4314 	add.w	r3, r3, r4, lsr #16
    for (i = 0U; i < (fifo - 1U); i++)
 80055e6:	2400      	movs	r4, #0
 80055e8:	42b4      	cmp	r4, r6
 80055ea:	d305      	bcc.n	80055f8 <HAL_PCDEx_SetTxFiFo+0x2c>
    hpcd->Instance->DIEPTXF[fifo - 1U] = ((uint32_t)size << 16) | Tx_Offset;
 80055ec:	313f      	adds	r1, #63	@ 0x3f
 80055ee:	eb00 0081 	add.w	r0, r0, r1, lsl #2
 80055f2:	4313      	orrs	r3, r2
 80055f4:	6043      	str	r3, [r0, #4]
 80055f6:	e7f0      	b.n	80055da <HAL_PCDEx_SetTxFiFo+0xe>
      Tx_Offset += (hpcd->Instance->DIEPTXF[i] >> 16);
 80055f8:	f104 0540 	add.w	r5, r4, #64	@ 0x40
 80055fc:	eb00 0585 	add.w	r5, r0, r5, lsl #2
 8005600:	3401      	adds	r4, #1
 8005602:	686d      	ldr	r5, [r5, #4]
 8005604:	eb03 4315 	add.w	r3, r3, r5, lsr #16
    for (i = 0U; i < (fifo - 1U); i++)
 8005608:	e7ee      	b.n	80055e8 <HAL_PCDEx_SetTxFiFo+0x1c>

0800560a <HAL_PCDEx_SetRxFiFo>:
  * @param  size Size of Rx fifo
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_PCDEx_SetRxFiFo(PCD_HandleTypeDef *hpcd, uint16_t size)
{
  hpcd->Instance->GRXFSIZ = size;
 800560a:	6803      	ldr	r3, [r0, #0]

  return HAL_OK;
}
 800560c:	2000      	movs	r0, #0
  hpcd->Instance->GRXFSIZ = size;
 800560e:	6259      	str	r1, [r3, #36]	@ 0x24
}
 8005610:	4770      	bx	lr

08005612 <HAL_PCDEx_LPM_Callback>:
  UNUSED(msg);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_PCDEx_LPM_Callback could be implemented in the user file
   */
}
 8005612:	4770      	bx	lr

08005614 <HAL_RCC_OscConfig>:
  *         supported by this API. User should request a transition to HSE Off
  *         first and then HSE On or HSE Bypass.
  * @retval HAL status
  */
__weak HAL_StatusTypeDef HAL_RCC_OscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
{
 8005614:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
  uint32_t tickstart;
  uint32_t pll_config;
  /* Check Null pointer */
  if (RCC_OscInitStruct == NULL)
 8005618:	4604      	mov	r4, r0
 800561a:	b340      	cbz	r0, 800566e <HAL_RCC_OscConfig+0x5a>
  }

  /* Check the parameters */
  assert_param(IS_RCC_OSCILLATORTYPE(RCC_OscInitStruct->OscillatorType));
  /*------------------------------- HSE Configuration ------------------------*/
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 800561c:	6803      	ldr	r3, [r0, #0]
 800561e:	07de      	lsls	r6, r3, #31
 8005620:	d410      	bmi.n	8005644 <HAL_RCC_OscConfig+0x30>
        }
      }
    }
  }
  /*----------------------------- HSI Configuration --------------------------*/
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
 8005622:	6823      	ldr	r3, [r4, #0]
 8005624:	079d      	lsls	r5, r3, #30
 8005626:	d45b      	bmi.n	80056e0 <HAL_RCC_OscConfig+0xcc>
        }
      }
    }
  }
  /*------------------------------ LSI Configuration -------------------------*/
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 8005628:	6823      	ldr	r3, [r4, #0]
 800562a:	0719      	lsls	r1, r3, #28
 800562c:	f100 809d 	bmi.w	800576a <HAL_RCC_OscConfig+0x156>
        }
      }
    }
  }
  /*------------------------------ LSE Configuration -------------------------*/
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 8005630:	6823      	ldr	r3, [r4, #0]
 8005632:	075a      	lsls	r2, r3, #29
 8005634:	f100 80bd 	bmi.w	80057b2 <HAL_RCC_OscConfig+0x19e>
    }
  }
  /*-------------------------------- PLL Configuration -----------------------*/
  /* Check the parameters */
  assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
  if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
 8005638:	69a3      	ldr	r3, [r4, #24]
 800563a:	2b00      	cmp	r3, #0
 800563c:	f040 8124 	bne.w	8005888 <HAL_RCC_OscConfig+0x274>
          return HAL_ERROR;
        }
      }
    }
  }
  return HAL_OK;
 8005640:	2000      	movs	r0, #0
 8005642:	e02c      	b.n	800569e <HAL_RCC_OscConfig+0x8a>
    if ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE) || \
 8005644:	4b8d      	ldr	r3, [pc, #564]	@ (800587c <HAL_RCC_OscConfig+0x268>)
 8005646:	689a      	ldr	r2, [r3, #8]
 8005648:	f002 020c 	and.w	r2, r2, #12
 800564c:	2a04      	cmp	r2, #4
 800564e:	d007      	beq.n	8005660 <HAL_RCC_OscConfig+0x4c>
        ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 8005650:	689a      	ldr	r2, [r3, #8]
 8005652:	f002 020c 	and.w	r2, r2, #12
    if ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE) || \
 8005656:	2a08      	cmp	r2, #8
 8005658:	d10b      	bne.n	8005672 <HAL_RCC_OscConfig+0x5e>
        ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 800565a:	685b      	ldr	r3, [r3, #4]
 800565c:	0259      	lsls	r1, r3, #9
 800565e:	d508      	bpl.n	8005672 <HAL_RCC_OscConfig+0x5e>
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 8005660:	4b86      	ldr	r3, [pc, #536]	@ (800587c <HAL_RCC_OscConfig+0x268>)
 8005662:	681b      	ldr	r3, [r3, #0]
 8005664:	039a      	lsls	r2, r3, #14
 8005666:	d5dc      	bpl.n	8005622 <HAL_RCC_OscConfig+0xe>
 8005668:	6863      	ldr	r3, [r4, #4]
 800566a:	2b00      	cmp	r3, #0
 800566c:	d1d9      	bne.n	8005622 <HAL_RCC_OscConfig+0xe>
    return HAL_ERROR;
 800566e:	2001      	movs	r0, #1
 8005670:	e015      	b.n	800569e <HAL_RCC_OscConfig+0x8a>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 8005672:	6863      	ldr	r3, [r4, #4]
 8005674:	4d81      	ldr	r5, [pc, #516]	@ (800587c <HAL_RCC_OscConfig+0x268>)
 8005676:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 800567a:	d113      	bne.n	80056a4 <HAL_RCC_OscConfig+0x90>
 800567c:	682b      	ldr	r3, [r5, #0]
 800567e:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 8005682:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
 8005684:	f7fe fa16 	bl	8003ab4 <HAL_GetTick>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 8005688:	4e7c      	ldr	r6, [pc, #496]	@ (800587c <HAL_RCC_OscConfig+0x268>)
        tickstart = HAL_GetTick();
 800568a:	4605      	mov	r5, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 800568c:	6833      	ldr	r3, [r6, #0]
 800568e:	039b      	lsls	r3, r3, #14
 8005690:	d4c7      	bmi.n	8005622 <HAL_RCC_OscConfig+0xe>
          if ((HAL_GetTick() - tickstart) > HSE_TIMEOUT_VALUE)
 8005692:	f7fe fa0f 	bl	8003ab4 <HAL_GetTick>
 8005696:	1b40      	subs	r0, r0, r5
 8005698:	2864      	cmp	r0, #100	@ 0x64
 800569a:	d9f7      	bls.n	800568c <HAL_RCC_OscConfig+0x78>
            return HAL_TIMEOUT;
 800569c:	2003      	movs	r0, #3
}
 800569e:	b002      	add	sp, #8
 80056a0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 80056a4:	f5b3 2fa0 	cmp.w	r3, #327680	@ 0x50000
 80056a8:	d104      	bne.n	80056b4 <HAL_RCC_OscConfig+0xa0>
 80056aa:	682b      	ldr	r3, [r5, #0]
 80056ac:	f443 2380 	orr.w	r3, r3, #262144	@ 0x40000
 80056b0:	602b      	str	r3, [r5, #0]
 80056b2:	e7e3      	b.n	800567c <HAL_RCC_OscConfig+0x68>
 80056b4:	682a      	ldr	r2, [r5, #0]
 80056b6:	f422 3280 	bic.w	r2, r2, #65536	@ 0x10000
 80056ba:	602a      	str	r2, [r5, #0]
 80056bc:	682a      	ldr	r2, [r5, #0]
 80056be:	f422 2280 	bic.w	r2, r2, #262144	@ 0x40000
 80056c2:	602a      	str	r2, [r5, #0]
      if ((RCC_OscInitStruct->HSEState) != RCC_HSE_OFF)
 80056c4:	2b00      	cmp	r3, #0
 80056c6:	d1dd      	bne.n	8005684 <HAL_RCC_OscConfig+0x70>
        tickstart = HAL_GetTick();
 80056c8:	f7fe f9f4 	bl	8003ab4 <HAL_GetTick>
 80056cc:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 80056ce:	682b      	ldr	r3, [r5, #0]
 80056d0:	039f      	lsls	r7, r3, #14
 80056d2:	d5a6      	bpl.n	8005622 <HAL_RCC_OscConfig+0xe>
          if ((HAL_GetTick() - tickstart) > HSE_TIMEOUT_VALUE)
 80056d4:	f7fe f9ee 	bl	8003ab4 <HAL_GetTick>
 80056d8:	1b80      	subs	r0, r0, r6
 80056da:	2864      	cmp	r0, #100	@ 0x64
 80056dc:	d9f7      	bls.n	80056ce <HAL_RCC_OscConfig+0xba>
 80056de:	e7dd      	b.n	800569c <HAL_RCC_OscConfig+0x88>
    if ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI) || \
 80056e0:	4b66      	ldr	r3, [pc, #408]	@ (800587c <HAL_RCC_OscConfig+0x268>)
 80056e2:	689a      	ldr	r2, [r3, #8]
 80056e4:	f012 0f0c 	tst.w	r2, #12
 80056e8:	d007      	beq.n	80056fa <HAL_RCC_OscConfig+0xe6>
        ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 80056ea:	689a      	ldr	r2, [r3, #8]
 80056ec:	f002 020c 	and.w	r2, r2, #12
    if ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI) || \
 80056f0:	2a08      	cmp	r2, #8
 80056f2:	d111      	bne.n	8005718 <HAL_RCC_OscConfig+0x104>
        ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 80056f4:	685b      	ldr	r3, [r3, #4]
 80056f6:	025d      	lsls	r5, r3, #9
 80056f8:	d40e      	bmi.n	8005718 <HAL_RCC_OscConfig+0x104>
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 80056fa:	4a60      	ldr	r2, [pc, #384]	@ (800587c <HAL_RCC_OscConfig+0x268>)
 80056fc:	6813      	ldr	r3, [r2, #0]
 80056fe:	0799      	lsls	r1, r3, #30
 8005700:	d502      	bpl.n	8005708 <HAL_RCC_OscConfig+0xf4>
 8005702:	68e3      	ldr	r3, [r4, #12]
 8005704:	2b01      	cmp	r3, #1
 8005706:	d1b2      	bne.n	800566e <HAL_RCC_OscConfig+0x5a>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 8005708:	6813      	ldr	r3, [r2, #0]
 800570a:	6921      	ldr	r1, [r4, #16]
 800570c:	f023 03f8 	bic.w	r3, r3, #248	@ 0xf8
 8005710:	ea43 03c1 	orr.w	r3, r3, r1, lsl #3
 8005714:	6013      	str	r3, [r2, #0]
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 8005716:	e787      	b.n	8005628 <HAL_RCC_OscConfig+0x14>
      if ((RCC_OscInitStruct->HSIState) != RCC_HSI_OFF)
 8005718:	68e2      	ldr	r2, [r4, #12]
 800571a:	4b59      	ldr	r3, [pc, #356]	@ (8005880 <HAL_RCC_OscConfig+0x26c>)
 800571c:	b1b2      	cbz	r2, 800574c <HAL_RCC_OscConfig+0x138>
        __HAL_RCC_HSI_ENABLE();
 800571e:	2201      	movs	r2, #1
 8005720:	601a      	str	r2, [r3, #0]
        tickstart = HAL_GetTick();
 8005722:	f7fe f9c7 	bl	8003ab4 <HAL_GetTick>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8005726:	4d55      	ldr	r5, [pc, #340]	@ (800587c <HAL_RCC_OscConfig+0x268>)
        tickstart = HAL_GetTick();
 8005728:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 800572a:	682b      	ldr	r3, [r5, #0]
 800572c:	079b      	lsls	r3, r3, #30
 800572e:	d507      	bpl.n	8005740 <HAL_RCC_OscConfig+0x12c>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 8005730:	682b      	ldr	r3, [r5, #0]
 8005732:	6922      	ldr	r2, [r4, #16]
 8005734:	f023 03f8 	bic.w	r3, r3, #248	@ 0xf8
 8005738:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 800573c:	602b      	str	r3, [r5, #0]
 800573e:	e773      	b.n	8005628 <HAL_RCC_OscConfig+0x14>
          if ((HAL_GetTick() - tickstart) > HSI_TIMEOUT_VALUE)
 8005740:	f7fe f9b8 	bl	8003ab4 <HAL_GetTick>
 8005744:	1b80      	subs	r0, r0, r6
 8005746:	2802      	cmp	r0, #2
 8005748:	d9ef      	bls.n	800572a <HAL_RCC_OscConfig+0x116>
 800574a:	e7a7      	b.n	800569c <HAL_RCC_OscConfig+0x88>
        __HAL_RCC_HSI_DISABLE();
 800574c:	601a      	str	r2, [r3, #0]
        tickstart = HAL_GetTick();
 800574e:	f7fe f9b1 	bl	8003ab4 <HAL_GetTick>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 8005752:	4e4a      	ldr	r6, [pc, #296]	@ (800587c <HAL_RCC_OscConfig+0x268>)
        tickstart = HAL_GetTick();
 8005754:	4605      	mov	r5, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 8005756:	6833      	ldr	r3, [r6, #0]
 8005758:	079f      	lsls	r7, r3, #30
 800575a:	f57f af65 	bpl.w	8005628 <HAL_RCC_OscConfig+0x14>
          if ((HAL_GetTick() - tickstart) > HSI_TIMEOUT_VALUE)
 800575e:	f7fe f9a9 	bl	8003ab4 <HAL_GetTick>
 8005762:	1b40      	subs	r0, r0, r5
 8005764:	2802      	cmp	r0, #2
 8005766:	d9f6      	bls.n	8005756 <HAL_RCC_OscConfig+0x142>
 8005768:	e798      	b.n	800569c <HAL_RCC_OscConfig+0x88>
    if ((RCC_OscInitStruct->LSIState) != RCC_LSI_OFF)
 800576a:	6962      	ldr	r2, [r4, #20]
 800576c:	4b44      	ldr	r3, [pc, #272]	@ (8005880 <HAL_RCC_OscConfig+0x26c>)
 800576e:	b182      	cbz	r2, 8005792 <HAL_RCC_OscConfig+0x17e>
      __HAL_RCC_LSI_ENABLE();
 8005770:	2201      	movs	r2, #1
 8005772:	f8c3 2e80 	str.w	r2, [r3, #3712]	@ 0xe80
      tickstart = HAL_GetTick();
 8005776:	f7fe f99d 	bl	8003ab4 <HAL_GetTick>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 800577a:	4e40      	ldr	r6, [pc, #256]	@ (800587c <HAL_RCC_OscConfig+0x268>)
      tickstart = HAL_GetTick();
 800577c:	4605      	mov	r5, r0
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 800577e:	6f73      	ldr	r3, [r6, #116]	@ 0x74
 8005780:	079b      	lsls	r3, r3, #30
 8005782:	f53f af55 	bmi.w	8005630 <HAL_RCC_OscConfig+0x1c>
        if ((HAL_GetTick() - tickstart) > LSI_TIMEOUT_VALUE)
 8005786:	f7fe f995 	bl	8003ab4 <HAL_GetTick>
 800578a:	1b40      	subs	r0, r0, r5
 800578c:	2802      	cmp	r0, #2
 800578e:	d9f6      	bls.n	800577e <HAL_RCC_OscConfig+0x16a>
 8005790:	e784      	b.n	800569c <HAL_RCC_OscConfig+0x88>
      __HAL_RCC_LSI_DISABLE();
 8005792:	f8c3 2e80 	str.w	r2, [r3, #3712]	@ 0xe80
      tickstart = HAL_GetTick();
 8005796:	f7fe f98d 	bl	8003ab4 <HAL_GetTick>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 800579a:	4e38      	ldr	r6, [pc, #224]	@ (800587c <HAL_RCC_OscConfig+0x268>)
      tickstart = HAL_GetTick();
 800579c:	4605      	mov	r5, r0
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 800579e:	6f73      	ldr	r3, [r6, #116]	@ 0x74
 80057a0:	079f      	lsls	r7, r3, #30
 80057a2:	f57f af45 	bpl.w	8005630 <HAL_RCC_OscConfig+0x1c>
        if ((HAL_GetTick() - tickstart) > LSI_TIMEOUT_VALUE)
 80057a6:	f7fe f985 	bl	8003ab4 <HAL_GetTick>
 80057aa:	1b40      	subs	r0, r0, r5
 80057ac:	2802      	cmp	r0, #2
 80057ae:	d9f6      	bls.n	800579e <HAL_RCC_OscConfig+0x18a>
 80057b0:	e774      	b.n	800569c <HAL_RCC_OscConfig+0x88>
    if (__HAL_RCC_PWR_IS_CLK_DISABLED())
 80057b2:	4b32      	ldr	r3, [pc, #200]	@ (800587c <HAL_RCC_OscConfig+0x268>)
 80057b4:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 80057b6:	f012 5280 	ands.w	r2, r2, #268435456	@ 0x10000000
 80057ba:	d128      	bne.n	800580e <HAL_RCC_OscConfig+0x1fa>
      __HAL_RCC_PWR_CLK_ENABLE();
 80057bc:	9201      	str	r2, [sp, #4]
 80057be:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 80057c0:	f042 5280 	orr.w	r2, r2, #268435456	@ 0x10000000
 80057c4:	641a      	str	r2, [r3, #64]	@ 0x40
 80057c6:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80057c8:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 80057cc:	9301      	str	r3, [sp, #4]
 80057ce:	9b01      	ldr	r3, [sp, #4]
      pwrclkchanged = SET;
 80057d0:	2701      	movs	r7, #1
    if (HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 80057d2:	4d2c      	ldr	r5, [pc, #176]	@ (8005884 <HAL_RCC_OscConfig+0x270>)
 80057d4:	682b      	ldr	r3, [r5, #0]
 80057d6:	05d8      	lsls	r0, r3, #23
 80057d8:	d51b      	bpl.n	8005812 <HAL_RCC_OscConfig+0x1fe>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 80057da:	68a3      	ldr	r3, [r4, #8]
 80057dc:	4d27      	ldr	r5, [pc, #156]	@ (800587c <HAL_RCC_OscConfig+0x268>)
 80057de:	2b01      	cmp	r3, #1
 80057e0:	d127      	bne.n	8005832 <HAL_RCC_OscConfig+0x21e>
 80057e2:	6f2b      	ldr	r3, [r5, #112]	@ 0x70
 80057e4:	f043 0301 	orr.w	r3, r3, #1
 80057e8:	672b      	str	r3, [r5, #112]	@ 0x70
      tickstart = HAL_GetTick();
 80057ea:	f7fe f963 	bl	8003ab4 <HAL_GetTick>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 80057ee:	4e23      	ldr	r6, [pc, #140]	@ (800587c <HAL_RCC_OscConfig+0x268>)
      tickstart = HAL_GetTick();
 80057f0:	4605      	mov	r5, r0
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 80057f2:	f241 3888 	movw	r8, #5000	@ 0x1388
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 80057f6:	6f33      	ldr	r3, [r6, #112]	@ 0x70
 80057f8:	079a      	lsls	r2, r3, #30
 80057fa:	d539      	bpl.n	8005870 <HAL_RCC_OscConfig+0x25c>
    if (pwrclkchanged == SET)
 80057fc:	2f00      	cmp	r7, #0
 80057fe:	f43f af1b 	beq.w	8005638 <HAL_RCC_OscConfig+0x24>
      __HAL_RCC_PWR_CLK_DISABLE();
 8005802:	4a1e      	ldr	r2, [pc, #120]	@ (800587c <HAL_RCC_OscConfig+0x268>)
 8005804:	6c13      	ldr	r3, [r2, #64]	@ 0x40
 8005806:	f023 5380 	bic.w	r3, r3, #268435456	@ 0x10000000
 800580a:	6413      	str	r3, [r2, #64]	@ 0x40
 800580c:	e714      	b.n	8005638 <HAL_RCC_OscConfig+0x24>
    FlagStatus       pwrclkchanged = RESET;
 800580e:	2700      	movs	r7, #0
 8005810:	e7df      	b.n	80057d2 <HAL_RCC_OscConfig+0x1be>
      SET_BIT(PWR->CR, PWR_CR_DBP);
 8005812:	682b      	ldr	r3, [r5, #0]
 8005814:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8005818:	602b      	str	r3, [r5, #0]
      tickstart = HAL_GetTick();
 800581a:	f7fe f94b 	bl	8003ab4 <HAL_GetTick>
 800581e:	4606      	mov	r6, r0
      while (HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 8005820:	682b      	ldr	r3, [r5, #0]
 8005822:	05d9      	lsls	r1, r3, #23
 8005824:	d4d9      	bmi.n	80057da <HAL_RCC_OscConfig+0x1c6>
        if ((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 8005826:	f7fe f945 	bl	8003ab4 <HAL_GetTick>
 800582a:	1b80      	subs	r0, r0, r6
 800582c:	2802      	cmp	r0, #2
 800582e:	d9f7      	bls.n	8005820 <HAL_RCC_OscConfig+0x20c>
 8005830:	e734      	b.n	800569c <HAL_RCC_OscConfig+0x88>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 8005832:	2b05      	cmp	r3, #5
 8005834:	d104      	bne.n	8005840 <HAL_RCC_OscConfig+0x22c>
 8005836:	6f2b      	ldr	r3, [r5, #112]	@ 0x70
 8005838:	f043 0304 	orr.w	r3, r3, #4
 800583c:	672b      	str	r3, [r5, #112]	@ 0x70
 800583e:	e7d0      	b.n	80057e2 <HAL_RCC_OscConfig+0x1ce>
 8005840:	6f2a      	ldr	r2, [r5, #112]	@ 0x70
 8005842:	f022 0201 	bic.w	r2, r2, #1
 8005846:	672a      	str	r2, [r5, #112]	@ 0x70
 8005848:	6f2a      	ldr	r2, [r5, #112]	@ 0x70
 800584a:	f022 0204 	bic.w	r2, r2, #4
 800584e:	672a      	str	r2, [r5, #112]	@ 0x70
    if ((RCC_OscInitStruct->LSEState) != RCC_LSE_OFF)
 8005850:	2b00      	cmp	r3, #0
 8005852:	d1ca      	bne.n	80057ea <HAL_RCC_OscConfig+0x1d6>
      tickstart = HAL_GetTick();
 8005854:	f7fe f92e 	bl	8003ab4 <HAL_GetTick>
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 8005858:	f241 3888 	movw	r8, #5000	@ 0x1388
      tickstart = HAL_GetTick();
 800585c:	4606      	mov	r6, r0
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 800585e:	6f2b      	ldr	r3, [r5, #112]	@ 0x70
 8005860:	079b      	lsls	r3, r3, #30
 8005862:	d5cb      	bpl.n	80057fc <HAL_RCC_OscConfig+0x1e8>
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 8005864:	f7fe f926 	bl	8003ab4 <HAL_GetTick>
 8005868:	1b80      	subs	r0, r0, r6
 800586a:	4540      	cmp	r0, r8
 800586c:	d9f7      	bls.n	800585e <HAL_RCC_OscConfig+0x24a>
 800586e:	e715      	b.n	800569c <HAL_RCC_OscConfig+0x88>
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 8005870:	f7fe f920 	bl	8003ab4 <HAL_GetTick>
 8005874:	1b40      	subs	r0, r0, r5
 8005876:	4540      	cmp	r0, r8
 8005878:	d9bd      	bls.n	80057f6 <HAL_RCC_OscConfig+0x1e2>
 800587a:	e70f      	b.n	800569c <HAL_RCC_OscConfig+0x88>
 800587c:	40023800 	.word	0x40023800
 8005880:	42470000 	.word	0x42470000
 8005884:	40007000 	.word	0x40007000
    if (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_CFGR_SWS_PLL)
 8005888:	4d37      	ldr	r5, [pc, #220]	@ (8005968 <HAL_RCC_OscConfig+0x354>)
 800588a:	68aa      	ldr	r2, [r5, #8]
 800588c:	f002 020c 	and.w	r2, r2, #12
 8005890:	2a08      	cmp	r2, #8
 8005892:	d03e      	beq.n	8005912 <HAL_RCC_OscConfig+0x2fe>
      if ((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 8005894:	2b02      	cmp	r3, #2
 8005896:	4b35      	ldr	r3, [pc, #212]	@ (800596c <HAL_RCC_OscConfig+0x358>)
 8005898:	f04f 0200 	mov.w	r2, #0
        __HAL_RCC_PLL_DISABLE();
 800589c:	661a      	str	r2, [r3, #96]	@ 0x60
      if ((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 800589e:	d12b      	bne.n	80058f8 <HAL_RCC_OscConfig+0x2e4>
        tickstart = HAL_GetTick();
 80058a0:	f7fe f908 	bl	8003ab4 <HAL_GetTick>
 80058a4:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 80058a6:	682b      	ldr	r3, [r5, #0]
 80058a8:	0199      	lsls	r1, r3, #6
 80058aa:	d41f      	bmi.n	80058ec <HAL_RCC_OscConfig+0x2d8>
        WRITE_REG(RCC->PLLCFGR, (RCC_OscInitStruct->PLL.PLLSource                                            | \
 80058ac:	e9d4 3207 	ldrd	r3, r2, [r4, #28]
 80058b0:	4313      	orrs	r3, r2
 80058b2:	6a62      	ldr	r2, [r4, #36]	@ 0x24
 80058b4:	ea43 1382 	orr.w	r3, r3, r2, lsl #6
 80058b8:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
 80058ba:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
 80058be:	6aa2      	ldr	r2, [r4, #40]	@ 0x28
 80058c0:	0852      	lsrs	r2, r2, #1
 80058c2:	3a01      	subs	r2, #1
 80058c4:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 80058c8:	606b      	str	r3, [r5, #4]
        __HAL_RCC_PLL_ENABLE();
 80058ca:	4b28      	ldr	r3, [pc, #160]	@ (800596c <HAL_RCC_OscConfig+0x358>)
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 80058cc:	4d26      	ldr	r5, [pc, #152]	@ (8005968 <HAL_RCC_OscConfig+0x354>)
        __HAL_RCC_PLL_ENABLE();
 80058ce:	2201      	movs	r2, #1
 80058d0:	661a      	str	r2, [r3, #96]	@ 0x60
        tickstart = HAL_GetTick();
 80058d2:	f7fe f8ef 	bl	8003ab4 <HAL_GetTick>
 80058d6:	4604      	mov	r4, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 80058d8:	682b      	ldr	r3, [r5, #0]
 80058da:	019a      	lsls	r2, r3, #6
 80058dc:	f53f aeb0 	bmi.w	8005640 <HAL_RCC_OscConfig+0x2c>
          if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
 80058e0:	f7fe f8e8 	bl	8003ab4 <HAL_GetTick>
 80058e4:	1b00      	subs	r0, r0, r4
 80058e6:	2802      	cmp	r0, #2
 80058e8:	d9f6      	bls.n	80058d8 <HAL_RCC_OscConfig+0x2c4>
 80058ea:	e6d7      	b.n	800569c <HAL_RCC_OscConfig+0x88>
          if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
 80058ec:	f7fe f8e2 	bl	8003ab4 <HAL_GetTick>
 80058f0:	1b80      	subs	r0, r0, r6
 80058f2:	2802      	cmp	r0, #2
 80058f4:	d9d7      	bls.n	80058a6 <HAL_RCC_OscConfig+0x292>
 80058f6:	e6d1      	b.n	800569c <HAL_RCC_OscConfig+0x88>
        tickstart = HAL_GetTick();
 80058f8:	f7fe f8dc 	bl	8003ab4 <HAL_GetTick>
 80058fc:	4604      	mov	r4, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 80058fe:	682b      	ldr	r3, [r5, #0]
 8005900:	019b      	lsls	r3, r3, #6
 8005902:	f57f ae9d 	bpl.w	8005640 <HAL_RCC_OscConfig+0x2c>
          if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
 8005906:	f7fe f8d5 	bl	8003ab4 <HAL_GetTick>
 800590a:	1b00      	subs	r0, r0, r4
 800590c:	2802      	cmp	r0, #2
 800590e:	d9f6      	bls.n	80058fe <HAL_RCC_OscConfig+0x2ea>
 8005910:	e6c4      	b.n	800569c <HAL_RCC_OscConfig+0x88>
      if ((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF)
 8005912:	2b01      	cmp	r3, #1
 8005914:	f43f aeab 	beq.w	800566e <HAL_RCC_OscConfig+0x5a>
        pll_config = RCC->PLLCFGR;
 8005918:	686b      	ldr	r3, [r5, #4]
        if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 800591a:	69e2      	ldr	r2, [r4, #28]
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 800591c:	f403 0180 	and.w	r1, r3, #4194304	@ 0x400000
        if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 8005920:	4291      	cmp	r1, r2
 8005922:	f47f aea4 	bne.w	800566e <HAL_RCC_OscConfig+0x5a>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 8005926:	6a21      	ldr	r1, [r4, #32]
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR_PLLM_Pos) ||
 8005928:	f003 023f 	and.w	r2, r3, #63	@ 0x3f
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 800592c:	428a      	cmp	r2, r1
 800592e:	f47f ae9e 	bne.w	800566e <HAL_RCC_OscConfig+0x5a>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
 8005932:	6a61      	ldr	r1, [r4, #36]	@ 0x24
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR_PLLM_Pos) ||
 8005934:	f647 72c0 	movw	r2, #32704	@ 0x7fc0
 8005938:	401a      	ands	r2, r3
 800593a:	ebb2 1f81 	cmp.w	r2, r1, lsl #6
 800593e:	f47f ae96 	bne.w	800566e <HAL_RCC_OscConfig+0x5a>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
 8005942:	6aa2      	ldr	r2, [r4, #40]	@ 0x28
 8005944:	0852      	lsrs	r2, r2, #1
 8005946:	f403 3140 	and.w	r1, r3, #196608	@ 0x30000
 800594a:	3a01      	subs	r2, #1
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
 800594c:	ebb1 4f02 	cmp.w	r1, r2, lsl #16
 8005950:	f47f ae8d 	bne.w	800566e <HAL_RCC_OscConfig+0x5a>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLQ) != (RCC_OscInitStruct->PLL.PLLQ << RCC_PLLCFGR_PLLQ_Pos)))
 8005954:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
 8005956:	f003 6370 	and.w	r3, r3, #251658240	@ 0xf000000
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
 800595a:	ebb3 6f02 	cmp.w	r3, r2, lsl #24
 800595e:	bf14      	ite	ne
 8005960:	2001      	movne	r0, #1
 8005962:	2000      	moveq	r0, #0
 8005964:	e69b      	b.n	800569e <HAL_RCC_OscConfig+0x8a>
 8005966:	bf00      	nop
 8005968:	40023800 	.word	0x40023800
 800596c:	42470000 	.word	0x42470000

08005970 <HAL_RCC_GetSysClockFreq>:
  uint32_t pllvco = 0U;
  uint32_t pllp = 0U;
  uint32_t sysclockfreq = 0U;

  /* Get SYSCLK source -------------------------------------------------------*/
  switch (RCC->CFGR & RCC_CFGR_SWS)
 8005970:	4913      	ldr	r1, [pc, #76]	@ (80059c0 <HAL_RCC_GetSysClockFreq+0x50>)
{
 8005972:	b508      	push	{r3, lr}
  switch (RCC->CFGR & RCC_CFGR_SWS)
 8005974:	688b      	ldr	r3, [r1, #8]
 8005976:	f003 030c 	and.w	r3, r3, #12
 800597a:	2b04      	cmp	r3, #4
 800597c:	d01c      	beq.n	80059b8 <HAL_RCC_GetSysClockFreq+0x48>
 800597e:	2b08      	cmp	r3, #8
 8005980:	d11c      	bne.n	80059bc <HAL_RCC_GetSysClockFreq+0x4c>
    }
    case RCC_CFGR_SWS_PLL:  /* PLL used as system clock  source */
    {
      /* PLL_VCO = (HSE_VALUE or HSI_VALUE / PLLM) * PLLN
      SYSCLK = PLL_VCO / PLLP */
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 8005982:	684a      	ldr	r2, [r1, #4]
      if (__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 8005984:	684b      	ldr	r3, [r1, #4]
      {
        /* HSE used as PLL clock source */
        pllvco = (uint32_t)((((uint64_t) HSE_VALUE * ((uint64_t)((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 8005986:	6849      	ldr	r1, [r1, #4]
      if (__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 8005988:	f413 0380 	ands.w	r3, r3, #4194304	@ 0x400000
        pllvco = (uint32_t)((((uint64_t) HSE_VALUE * ((uint64_t)((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 800598c:	bf14      	ite	ne
 800598e:	480d      	ldrne	r0, [pc, #52]	@ (80059c4 <HAL_RCC_GetSysClockFreq+0x54>)
      }
      else
      {
        /* HSI used as PLL clock source */
        pllvco = (uint32_t)((((uint64_t) HSI_VALUE * ((uint64_t)((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 8005990:	480d      	ldreq	r0, [pc, #52]	@ (80059c8 <HAL_RCC_GetSysClockFreq+0x58>)
        pllvco = (uint32_t)((((uint64_t) HSE_VALUE * ((uint64_t)((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 8005992:	f3c1 1188 	ubfx	r1, r1, #6, #9
 8005996:	bf18      	it	ne
 8005998:	2300      	movne	r3, #0
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 800599a:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
        pllvco = (uint32_t)((((uint64_t) HSI_VALUE * ((uint64_t)((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 800599e:	fba1 0100 	umull	r0, r1, r1, r0
 80059a2:	f7fa fccd 	bl	8000340 <__aeabi_uldivmod>
      }
      pllp = ((((RCC->PLLCFGR & RCC_PLLCFGR_PLLP) >> RCC_PLLCFGR_PLLP_Pos) + 1U) * 2U);
 80059a6:	4b06      	ldr	r3, [pc, #24]	@ (80059c0 <HAL_RCC_GetSysClockFreq+0x50>)
 80059a8:	685b      	ldr	r3, [r3, #4]
 80059aa:	f3c3 4301 	ubfx	r3, r3, #16, #2
 80059ae:	3301      	adds	r3, #1
 80059b0:	005b      	lsls	r3, r3, #1

      sysclockfreq = pllvco / pllp;
 80059b2:	fbb0 f0f3 	udiv	r0, r0, r3
      sysclockfreq = HSI_VALUE;
      break;
    }
  }
  return sysclockfreq;
}
 80059b6:	bd08      	pop	{r3, pc}
  switch (RCC->CFGR & RCC_CFGR_SWS)
 80059b8:	4802      	ldr	r0, [pc, #8]	@ (80059c4 <HAL_RCC_GetSysClockFreq+0x54>)
 80059ba:	e7fc      	b.n	80059b6 <HAL_RCC_GetSysClockFreq+0x46>
      sysclockfreq = HSI_VALUE;
 80059bc:	4802      	ldr	r0, [pc, #8]	@ (80059c8 <HAL_RCC_GetSysClockFreq+0x58>)
  return sysclockfreq;
 80059be:	e7fa      	b.n	80059b6 <HAL_RCC_GetSysClockFreq+0x46>
 80059c0:	40023800 	.word	0x40023800
 80059c4:	007a1200 	.word	0x007a1200
 80059c8:	00f42400 	.word	0x00f42400

080059cc <HAL_RCC_ClockConfig>:
{
 80059cc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80059d0:	460d      	mov	r5, r1
  if (RCC_ClkInitStruct == NULL)
 80059d2:	4604      	mov	r4, r0
 80059d4:	b910      	cbnz	r0, 80059dc <HAL_RCC_ClockConfig+0x10>
    return HAL_ERROR;
 80059d6:	2001      	movs	r0, #1
}
 80059d8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  if (FLatency > __HAL_FLASH_GET_LATENCY())
 80059dc:	4b43      	ldr	r3, [pc, #268]	@ (8005aec <HAL_RCC_ClockConfig+0x120>)
 80059de:	681a      	ldr	r2, [r3, #0]
 80059e0:	f002 020f 	and.w	r2, r2, #15
 80059e4:	428a      	cmp	r2, r1
 80059e6:	d328      	bcc.n	8005a3a <HAL_RCC_ClockConfig+0x6e>
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 80059e8:	6821      	ldr	r1, [r4, #0]
 80059ea:	078f      	lsls	r7, r1, #30
 80059ec:	d42d      	bmi.n	8005a4a <HAL_RCC_ClockConfig+0x7e>
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
 80059ee:	07c8      	lsls	r0, r1, #31
 80059f0:	d440      	bmi.n	8005a74 <HAL_RCC_ClockConfig+0xa8>
  if (FLatency < __HAL_FLASH_GET_LATENCY())
 80059f2:	4b3e      	ldr	r3, [pc, #248]	@ (8005aec <HAL_RCC_ClockConfig+0x120>)
 80059f4:	681a      	ldr	r2, [r3, #0]
 80059f6:	f002 020f 	and.w	r2, r2, #15
 80059fa:	42aa      	cmp	r2, r5
 80059fc:	d865      	bhi.n	8005aca <HAL_RCC_ClockConfig+0xfe>
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 80059fe:	6822      	ldr	r2, [r4, #0]
 8005a00:	0751      	lsls	r1, r2, #29
 8005a02:	d46b      	bmi.n	8005adc <HAL_RCC_ClockConfig+0x110>
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 8005a04:	0713      	lsls	r3, r2, #28
 8005a06:	d507      	bpl.n	8005a18 <HAL_RCC_ClockConfig+0x4c>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, ((RCC_ClkInitStruct->APB2CLKDivider) << 3U));
 8005a08:	4a39      	ldr	r2, [pc, #228]	@ (8005af0 <HAL_RCC_ClockConfig+0x124>)
 8005a0a:	6921      	ldr	r1, [r4, #16]
 8005a0c:	6893      	ldr	r3, [r2, #8]
 8005a0e:	f423 4360 	bic.w	r3, r3, #57344	@ 0xe000
 8005a12:	ea43 03c1 	orr.w	r3, r3, r1, lsl #3
 8005a16:	6093      	str	r3, [r2, #8]
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE) >> RCC_CFGR_HPRE_Pos];
 8005a18:	f7ff ffaa 	bl	8005970 <HAL_RCC_GetSysClockFreq>
 8005a1c:	4b34      	ldr	r3, [pc, #208]	@ (8005af0 <HAL_RCC_ClockConfig+0x124>)
 8005a1e:	4a35      	ldr	r2, [pc, #212]	@ (8005af4 <HAL_RCC_ClockConfig+0x128>)
 8005a20:	689b      	ldr	r3, [r3, #8]
 8005a22:	f3c3 1303 	ubfx	r3, r3, #4, #4
 8005a26:	5cd3      	ldrb	r3, [r2, r3]
 8005a28:	40d8      	lsrs	r0, r3
 8005a2a:	4b33      	ldr	r3, [pc, #204]	@ (8005af8 <HAL_RCC_ClockConfig+0x12c>)
 8005a2c:	6018      	str	r0, [r3, #0]
  HAL_InitTick(uwTickPrio);
 8005a2e:	4b33      	ldr	r3, [pc, #204]	@ (8005afc <HAL_RCC_ClockConfig+0x130>)
 8005a30:	6818      	ldr	r0, [r3, #0]
 8005a32:	f7fc ff31 	bl	8002898 <HAL_InitTick>
  return HAL_OK;
 8005a36:	2000      	movs	r0, #0
 8005a38:	e7ce      	b.n	80059d8 <HAL_RCC_ClockConfig+0xc>
    __HAL_FLASH_SET_LATENCY(FLatency);
 8005a3a:	b2ca      	uxtb	r2, r1
 8005a3c:	701a      	strb	r2, [r3, #0]
    if (__HAL_FLASH_GET_LATENCY() != FLatency)
 8005a3e:	681b      	ldr	r3, [r3, #0]
 8005a40:	f003 030f 	and.w	r3, r3, #15
 8005a44:	428b      	cmp	r3, r1
 8005a46:	d1c6      	bne.n	80059d6 <HAL_RCC_ClockConfig+0xa>
 8005a48:	e7ce      	b.n	80059e8 <HAL_RCC_ClockConfig+0x1c>
    if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 8005a4a:	4b29      	ldr	r3, [pc, #164]	@ (8005af0 <HAL_RCC_ClockConfig+0x124>)
 8005a4c:	f011 0f04 	tst.w	r1, #4
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_HCLK_DIV16);
 8005a50:	bf1e      	ittt	ne
 8005a52:	689a      	ldrne	r2, [r3, #8]
 8005a54:	f442 52e0 	orrne.w	r2, r2, #7168	@ 0x1c00
 8005a58:	609a      	strne	r2, [r3, #8]
    if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 8005a5a:	070e      	lsls	r6, r1, #28
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, (RCC_HCLK_DIV16 << 3));
 8005a5c:	bf42      	ittt	mi
 8005a5e:	689a      	ldrmi	r2, [r3, #8]
 8005a60:	f442 4260 	orrmi.w	r2, r2, #57344	@ 0xe000
 8005a64:	609a      	strmi	r2, [r3, #8]
    MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 8005a66:	689a      	ldr	r2, [r3, #8]
 8005a68:	68a0      	ldr	r0, [r4, #8]
 8005a6a:	f022 02f0 	bic.w	r2, r2, #240	@ 0xf0
 8005a6e:	4302      	orrs	r2, r0
 8005a70:	609a      	str	r2, [r3, #8]
 8005a72:	e7bc      	b.n	80059ee <HAL_RCC_ClockConfig+0x22>
    if (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 8005a74:	6862      	ldr	r2, [r4, #4]
 8005a76:	4b1e      	ldr	r3, [pc, #120]	@ (8005af0 <HAL_RCC_ClockConfig+0x124>)
 8005a78:	2a01      	cmp	r2, #1
 8005a7a:	d11c      	bne.n	8005ab6 <HAL_RCC_ClockConfig+0xea>
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 8005a7c:	681b      	ldr	r3, [r3, #0]
 8005a7e:	f413 3f00 	tst.w	r3, #131072	@ 0x20000
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8005a82:	d0a8      	beq.n	80059d6 <HAL_RCC_ClockConfig+0xa>
    __HAL_RCC_SYSCLK_CONFIG(RCC_ClkInitStruct->SYSCLKSource);
 8005a84:	4e1a      	ldr	r6, [pc, #104]	@ (8005af0 <HAL_RCC_ClockConfig+0x124>)
 8005a86:	68b3      	ldr	r3, [r6, #8]
 8005a88:	f023 0303 	bic.w	r3, r3, #3
 8005a8c:	4313      	orrs	r3, r2
 8005a8e:	60b3      	str	r3, [r6, #8]
    tickstart = HAL_GetTick();
 8005a90:	f7fe f810 	bl	8003ab4 <HAL_GetTick>
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 8005a94:	f241 3888 	movw	r8, #5000	@ 0x1388
    tickstart = HAL_GetTick();
 8005a98:	4607      	mov	r7, r0
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 8005a9a:	68b3      	ldr	r3, [r6, #8]
 8005a9c:	6862      	ldr	r2, [r4, #4]
 8005a9e:	f003 030c 	and.w	r3, r3, #12
 8005aa2:	ebb3 0f82 	cmp.w	r3, r2, lsl #2
 8005aa6:	d0a4      	beq.n	80059f2 <HAL_RCC_ClockConfig+0x26>
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 8005aa8:	f7fe f804 	bl	8003ab4 <HAL_GetTick>
 8005aac:	1bc0      	subs	r0, r0, r7
 8005aae:	4540      	cmp	r0, r8
 8005ab0:	d9f3      	bls.n	8005a9a <HAL_RCC_ClockConfig+0xce>
        return HAL_TIMEOUT;
 8005ab2:	2003      	movs	r0, #3
 8005ab4:	e790      	b.n	80059d8 <HAL_RCC_ClockConfig+0xc>
    else if ((RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)   ||
 8005ab6:	1e91      	subs	r1, r2, #2
 8005ab8:	2901      	cmp	r1, #1
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 8005aba:	681b      	ldr	r3, [r3, #0]
    else if ((RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)   ||
 8005abc:	d802      	bhi.n	8005ac4 <HAL_RCC_ClockConfig+0xf8>
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 8005abe:	f013 7f00 	tst.w	r3, #33554432	@ 0x2000000
 8005ac2:	e7de      	b.n	8005a82 <HAL_RCC_ClockConfig+0xb6>
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8005ac4:	f013 0f02 	tst.w	r3, #2
 8005ac8:	e7db      	b.n	8005a82 <HAL_RCC_ClockConfig+0xb6>
    __HAL_FLASH_SET_LATENCY(FLatency);
 8005aca:	b2ea      	uxtb	r2, r5
 8005acc:	701a      	strb	r2, [r3, #0]
    if (__HAL_FLASH_GET_LATENCY() != FLatency)
 8005ace:	681b      	ldr	r3, [r3, #0]
 8005ad0:	f003 030f 	and.w	r3, r3, #15
 8005ad4:	42ab      	cmp	r3, r5
 8005ad6:	f47f af7e 	bne.w	80059d6 <HAL_RCC_ClockConfig+0xa>
 8005ada:	e790      	b.n	80059fe <HAL_RCC_ClockConfig+0x32>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_ClkInitStruct->APB1CLKDivider);
 8005adc:	4904      	ldr	r1, [pc, #16]	@ (8005af0 <HAL_RCC_ClockConfig+0x124>)
 8005ade:	68e0      	ldr	r0, [r4, #12]
 8005ae0:	688b      	ldr	r3, [r1, #8]
 8005ae2:	f423 53e0 	bic.w	r3, r3, #7168	@ 0x1c00
 8005ae6:	4303      	orrs	r3, r0
 8005ae8:	608b      	str	r3, [r1, #8]
 8005aea:	e78b      	b.n	8005a04 <HAL_RCC_ClockConfig+0x38>
 8005aec:	40023c00 	.word	0x40023c00
 8005af0:	40023800 	.word	0x40023800
 8005af4:	08024968 	.word	0x08024968
 8005af8:	200000c4 	.word	0x200000c4
 8005afc:	200000cc 	.word	0x200000cc

08005b00 <HAL_RCC_GetHCLKFreq>:
  * @retval HCLK frequency
  */
uint32_t HAL_RCC_GetHCLKFreq(void)
{
  return SystemCoreClock;
}
 8005b00:	4b01      	ldr	r3, [pc, #4]	@ (8005b08 <HAL_RCC_GetHCLKFreq+0x8>)
 8005b02:	6818      	ldr	r0, [r3, #0]
 8005b04:	4770      	bx	lr
 8005b06:	bf00      	nop
 8005b08:	200000c4 	.word	0x200000c4

08005b0c <HAL_RCC_GetPCLK1Freq>:
  * @retval PCLK1 frequency
  */
uint32_t HAL_RCC_GetPCLK1Freq(void)
{
  /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE1) >> RCC_CFGR_PPRE1_Pos]);
 8005b0c:	4b04      	ldr	r3, [pc, #16]	@ (8005b20 <HAL_RCC_GetPCLK1Freq+0x14>)
 8005b0e:	4a05      	ldr	r2, [pc, #20]	@ (8005b24 <HAL_RCC_GetPCLK1Freq+0x18>)
 8005b10:	689b      	ldr	r3, [r3, #8]
 8005b12:	f3c3 2382 	ubfx	r3, r3, #10, #3
 8005b16:	5cd3      	ldrb	r3, [r2, r3]
 8005b18:	4a03      	ldr	r2, [pc, #12]	@ (8005b28 <HAL_RCC_GetPCLK1Freq+0x1c>)
 8005b1a:	6810      	ldr	r0, [r2, #0]
}
 8005b1c:	40d8      	lsrs	r0, r3
 8005b1e:	4770      	bx	lr
 8005b20:	40023800 	.word	0x40023800
 8005b24:	08024960 	.word	0x08024960
 8005b28:	200000c4 	.word	0x200000c4

08005b2c <HAL_RCC_GetClockConfig>:
  * @retval None
  */
void HAL_RCC_GetClockConfig(RCC_ClkInitTypeDef  *RCC_ClkInitStruct, uint32_t *pFLatency)
{
  /* Set all possible values for the Clock type parameter --------------------*/
  RCC_ClkInitStruct->ClockType = RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_PCLK1 | RCC_CLOCKTYPE_PCLK2;
 8005b2c:	230f      	movs	r3, #15
 8005b2e:	6003      	str	r3, [r0, #0]

  /* Get the SYSCLK configuration --------------------------------------------*/
  RCC_ClkInitStruct->SYSCLKSource = (uint32_t)(RCC->CFGR & RCC_CFGR_SW);
 8005b30:	4b0b      	ldr	r3, [pc, #44]	@ (8005b60 <HAL_RCC_GetClockConfig+0x34>)
 8005b32:	689a      	ldr	r2, [r3, #8]
 8005b34:	f002 0203 	and.w	r2, r2, #3
 8005b38:	6042      	str	r2, [r0, #4]

  /* Get the HCLK configuration ----------------------------------------------*/
  RCC_ClkInitStruct->AHBCLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_HPRE);
 8005b3a:	689a      	ldr	r2, [r3, #8]
 8005b3c:	f002 02f0 	and.w	r2, r2, #240	@ 0xf0
 8005b40:	6082      	str	r2, [r0, #8]

  /* Get the APB1 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB1CLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_PPRE1);
 8005b42:	689a      	ldr	r2, [r3, #8]
 8005b44:	f402 52e0 	and.w	r2, r2, #7168	@ 0x1c00
 8005b48:	60c2      	str	r2, [r0, #12]

  /* Get the APB2 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB2CLKDivider = (uint32_t)((RCC->CFGR & RCC_CFGR_PPRE2) >> 3U);
 8005b4a:	689b      	ldr	r3, [r3, #8]
 8005b4c:	08db      	lsrs	r3, r3, #3
 8005b4e:	f403 53e0 	and.w	r3, r3, #7168	@ 0x1c00
 8005b52:	6103      	str	r3, [r0, #16]

  /* Get the Flash Wait State (Latency) configuration ------------------------*/
  *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY);
 8005b54:	4b03      	ldr	r3, [pc, #12]	@ (8005b64 <HAL_RCC_GetClockConfig+0x38>)
 8005b56:	681b      	ldr	r3, [r3, #0]
 8005b58:	f003 030f 	and.w	r3, r3, #15
 8005b5c:	600b      	str	r3, [r1, #0]
}
 8005b5e:	4770      	bx	lr
 8005b60:	40023800 	.word	0x40023800
 8005b64:	40023c00 	.word	0x40023c00

08005b68 <HAL_RCCEx_PeriphCLKConfig>:
  /*----------------------- SAI/I2S Configuration (PLLI2S) -------------------*/
  /*----------------------- Common configuration SAI/I2S ---------------------*/
  /* In Case of SAI or I2S Clock Configuration through PLLI2S, PLLI2SN division
     factor is common parameters for both peripherals */
  if ((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) ||
      (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLI2S) == RCC_PERIPHCLK_SAI_PLLI2S) ||
 8005b68:	6803      	ldr	r3, [r0, #0]
  if ((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) ||
 8005b6a:	f013 0f43 	tst.w	r3, #67	@ 0x43
{
 8005b6e:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8005b70:	4604      	mov	r4, r0
  if ((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) ||
 8005b72:	f040 8088 	bne.w	8005c86 <HAL_RCCEx_PeriphCLKConfig+0x11e>

  /*----------------------- SAI/LTDC Configuration (PLLSAI) ------------------*/
  /*----------------------- Common configuration SAI/LTDC --------------------*/
  /* In Case of SAI or LTDC Clock Configuration through PLLSAI, PLLSAIN division
     factor is common parameters for both peripherals */
  if ((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLSAI) == RCC_PERIPHCLK_SAI_PLLSAI) ||
 8005b76:	6823      	ldr	r3, [r4, #0]
 8005b78:	f013 0f0c 	tst.w	r3, #12
 8005b7c:	d045      	beq.n	8005c0a <HAL_RCCEx_PeriphCLKConfig+0xa2>
  {
    /* Check the PLLSAI division factors */
    assert_param(IS_RCC_PLLSAIN_VALUE(PeriphClkInit->PLLSAI.PLLSAIN));

    /* Disable PLLSAI Clock */
    __HAL_RCC_PLLSAI_DISABLE();
 8005b7e:	4b8c      	ldr	r3, [pc, #560]	@ (8005db0 <HAL_RCCEx_PeriphCLKConfig+0x248>)
    /* Get tick */
    tickstart = HAL_GetTick();
    /* Wait till PLLSAI is disabled */
    while (__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 8005b80:	4d8c      	ldr	r5, [pc, #560]	@ (8005db4 <HAL_RCCEx_PeriphCLKConfig+0x24c>)
    __HAL_RCC_PLLSAI_DISABLE();
 8005b82:	2200      	movs	r2, #0
 8005b84:	671a      	str	r2, [r3, #112]	@ 0x70
    tickstart = HAL_GetTick();
 8005b86:	f7fd ff95 	bl	8003ab4 <HAL_GetTick>
 8005b8a:	4606      	mov	r6, r0
    while (__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 8005b8c:	682b      	ldr	r3, [r5, #0]
 8005b8e:	0099      	lsls	r1, r3, #2
 8005b90:	f100 80cb 	bmi.w	8005d2a <HAL_RCCEx_PeriphCLKConfig+0x1c2>
    }

    /*---------------------------- SAI configuration -------------------------*/
    /* In Case of SAI Clock Configuration through PLLSAI, PLLSAIQ and PLLSAI_DIVQ must
       be added only for SAI configuration */
    if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLSAI) == (RCC_PERIPHCLK_SAI_PLLSAI))
 8005b94:	6821      	ldr	r1, [r4, #0]
 8005b96:	074a      	lsls	r2, r1, #29
 8005b98:	d515      	bpl.n	8005bc6 <HAL_RCCEx_PeriphCLKConfig+0x5e>
      /* Read PLLSAIR value from PLLSAICFGR register (this value is not need for SAI configuration) */
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIR) >> RCC_PLLSAICFGR_PLLSAIR_Pos);
      /* PLLSAI_VCO Input  = PLL_SOURCE/PLLM */
      /* PLLSAI_VCO Output = PLLSAI_VCO Input * PLLSAIN */
      /* SAI_CLK(first level) = PLLSAI_VCO Output/PLLSAIQ */
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN, PeriphClkInit->PLLSAI.PLLSAIQ, tmpreg1);
 8005b9a:	e9d4 0304 	ldrd	r0, r3, [r4, #16]
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIR) >> RCC_PLLSAICFGR_PLLSAIR_Pos);
 8005b9e:	f8d5 2088 	ldr.w	r2, [r5, #136]	@ 0x88
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN, PeriphClkInit->PLLSAI.PLLSAIQ, tmpreg1);
 8005ba2:	061b      	lsls	r3, r3, #24
 8005ba4:	f002 42e0 	and.w	r2, r2, #1879048192	@ 0x70000000
 8005ba8:	ea43 1380 	orr.w	r3, r3, r0, lsl #6
 8005bac:	4313      	orrs	r3, r2
 8005bae:	f8c5 3088 	str.w	r3, [r5, #136]	@ 0x88
      /* SAI_CLK_x = SAI_CLK(first level)/PLLSAIDIVQ */
      __HAL_RCC_PLLSAI_PLLSAICLKDIVQ_CONFIG(PeriphClkInit->PLLSAIDivQ);
 8005bb2:	f8d5 308c 	ldr.w	r3, [r5, #140]	@ 0x8c
 8005bb6:	6a22      	ldr	r2, [r4, #32]
 8005bb8:	f423 53f8 	bic.w	r3, r3, #7936	@ 0x1f00
 8005bbc:	3a01      	subs	r2, #1
 8005bbe:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 8005bc2:	f8c5 308c 	str.w	r3, [r5, #140]	@ 0x8c
    }

    /*---------------------------- LTDC configuration ------------------------*/
    if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LTDC) == (RCC_PERIPHCLK_LTDC))
 8005bc6:	070b      	lsls	r3, r1, #28
 8005bc8:	d514      	bpl.n	8005bf4 <HAL_RCCEx_PeriphCLKConfig+0x8c>
    {
      assert_param(IS_RCC_PLLSAIR_VALUE(PeriphClkInit->PLLSAI.PLLSAIR));
      assert_param(IS_RCC_PLLSAI_DIVR_VALUE(PeriphClkInit->PLLSAIDivR));

      /* Read PLLSAIR value from PLLSAICFGR register (this value is not need for SAI configuration) */
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIQ) >> RCC_PLLSAICFGR_PLLSAIQ_Pos);
 8005bca:	4a7a      	ldr	r2, [pc, #488]	@ (8005db4 <HAL_RCCEx_PeriphCLKConfig+0x24c>)
      /* PLLSAI_VCO Input  = PLL_SOURCE/PLLM */
      /* PLLSAI_VCO Output = PLLSAI_VCO Input * PLLSAIN */
      /* LTDC_CLK(first level) = PLLSAI_VCO Output/PLLSAIR */
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN, tmpreg1, PeriphClkInit->PLLSAI.PLLSAIR);
 8005bcc:	69a3      	ldr	r3, [r4, #24]
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIQ) >> RCC_PLLSAICFGR_PLLSAIQ_Pos);
 8005bce:	f8d2 1088 	ldr.w	r1, [r2, #136]	@ 0x88
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN, tmpreg1, PeriphClkInit->PLLSAI.PLLSAIR);
 8005bd2:	6920      	ldr	r0, [r4, #16]
 8005bd4:	071b      	lsls	r3, r3, #28
 8005bd6:	f001 6170 	and.w	r1, r1, #251658240	@ 0xf000000
 8005bda:	ea43 1380 	orr.w	r3, r3, r0, lsl #6
 8005bde:	430b      	orrs	r3, r1
 8005be0:	f8c2 3088 	str.w	r3, [r2, #136]	@ 0x88
      /* LTDC_CLK = LTDC_CLK(first level)/PLLSAIDIVR */
      __HAL_RCC_PLLSAI_PLLSAICLKDIVR_CONFIG(PeriphClkInit->PLLSAIDivR);
 8005be4:	f8d2 308c 	ldr.w	r3, [r2, #140]	@ 0x8c
 8005be8:	6a61      	ldr	r1, [r4, #36]	@ 0x24
 8005bea:	f423 3340 	bic.w	r3, r3, #196608	@ 0x30000
 8005bee:	430b      	orrs	r3, r1
 8005bf0:	f8c2 308c 	str.w	r3, [r2, #140]	@ 0x8c
    }
    /* Enable PLLSAI Clock */
    __HAL_RCC_PLLSAI_ENABLE();
 8005bf4:	4b6e      	ldr	r3, [pc, #440]	@ (8005db0 <HAL_RCCEx_PeriphCLKConfig+0x248>)
    /* Get tick */
    tickstart = HAL_GetTick();
    /* Wait till PLLSAI is ready */
    while (__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 8005bf6:	4e6f      	ldr	r6, [pc, #444]	@ (8005db4 <HAL_RCCEx_PeriphCLKConfig+0x24c>)
    __HAL_RCC_PLLSAI_ENABLE();
 8005bf8:	2201      	movs	r2, #1
 8005bfa:	671a      	str	r2, [r3, #112]	@ 0x70
    tickstart = HAL_GetTick();
 8005bfc:	f7fd ff5a 	bl	8003ab4 <HAL_GetTick>
 8005c00:	4605      	mov	r5, r0
    while (__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 8005c02:	6833      	ldr	r3, [r6, #0]
 8005c04:	009f      	lsls	r7, r3, #2
 8005c06:	f140 8097 	bpl.w	8005d38 <HAL_RCCEx_PeriphCLKConfig+0x1d0>
    }
  }
  /*--------------------------------------------------------------------------*/

  /*---------------------------- RTC configuration ---------------------------*/
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RTC) == (RCC_PERIPHCLK_RTC))
 8005c0a:	6823      	ldr	r3, [r4, #0]
 8005c0c:	0698      	lsls	r0, r3, #26
 8005c0e:	d534      	bpl.n	8005c7a <HAL_RCCEx_PeriphCLKConfig+0x112>
  {
    /* Check for RTC Parameters used to output RTCCLK */
    assert_param(IS_RCC_RTCCLKSOURCE(PeriphClkInit->RTCClockSelection));

    /* Enable Power Clock*/
    __HAL_RCC_PWR_CLK_ENABLE();
 8005c10:	2300      	movs	r3, #0
 8005c12:	9301      	str	r3, [sp, #4]
 8005c14:	4b67      	ldr	r3, [pc, #412]	@ (8005db4 <HAL_RCCEx_PeriphCLKConfig+0x24c>)

    /* Enable write access to Backup domain */
    PWR->CR |= PWR_CR_DBP;
 8005c16:	4d68      	ldr	r5, [pc, #416]	@ (8005db8 <HAL_RCCEx_PeriphCLKConfig+0x250>)
    __HAL_RCC_PWR_CLK_ENABLE();
 8005c18:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 8005c1a:	f042 5280 	orr.w	r2, r2, #268435456	@ 0x10000000
 8005c1e:	641a      	str	r2, [r3, #64]	@ 0x40
 8005c20:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8005c22:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8005c26:	9301      	str	r3, [sp, #4]
 8005c28:	9b01      	ldr	r3, [sp, #4]
    PWR->CR |= PWR_CR_DBP;
 8005c2a:	682b      	ldr	r3, [r5, #0]
 8005c2c:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8005c30:	602b      	str	r3, [r5, #0]

    /* Get tick */
    tickstart = HAL_GetTick();
 8005c32:	f7fd ff3f 	bl	8003ab4 <HAL_GetTick>
 8005c36:	4606      	mov	r6, r0

    while ((PWR->CR & PWR_CR_DBP) == RESET)
 8005c38:	682b      	ldr	r3, [r5, #0]
 8005c3a:	05d8      	lsls	r0, r3, #23
 8005c3c:	f140 8083 	bpl.w	8005d46 <HAL_RCCEx_PeriphCLKConfig+0x1de>
      {
        return HAL_TIMEOUT;
      }
    }
    /* Reset the Backup domain only if the RTC Clock source selection is modified from reset value */
    tmpreg1 = (RCC->BDCR & RCC_BDCR_RTCSEL);
 8005c40:	4d5c      	ldr	r5, [pc, #368]	@ (8005db4 <HAL_RCCEx_PeriphCLKConfig+0x24c>)
    if ((tmpreg1 != 0x00000000U) && ((tmpreg1) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 8005c42:	6aa2      	ldr	r2, [r4, #40]	@ 0x28
    tmpreg1 = (RCC->BDCR & RCC_BDCR_RTCSEL);
 8005c44:	6f2b      	ldr	r3, [r5, #112]	@ 0x70
    if ((tmpreg1 != 0x00000000U) && ((tmpreg1) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 8005c46:	f413 7340 	ands.w	r3, r3, #768	@ 0x300
 8005c4a:	f040 8083 	bne.w	8005d54 <HAL_RCCEx_PeriphCLKConfig+0x1ec>
            return HAL_TIMEOUT;
          }
        }
      }
    }
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 8005c4e:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
 8005c50:	f403 7240 	and.w	r2, r3, #768	@ 0x300
 8005c54:	f5b2 7f40 	cmp.w	r2, #768	@ 0x300
 8005c58:	4a56      	ldr	r2, [pc, #344]	@ (8005db4 <HAL_RCCEx_PeriphCLKConfig+0x24c>)
 8005c5a:	f040 809e 	bne.w	8005d9a <HAL_RCCEx_PeriphCLKConfig+0x232>
 8005c5e:	6891      	ldr	r1, [r2, #8]
 8005c60:	f023 4070 	bic.w	r0, r3, #4026531840	@ 0xf0000000
 8005c64:	f421 11f8 	bic.w	r1, r1, #2031616	@ 0x1f0000
 8005c68:	f420 7040 	bic.w	r0, r0, #768	@ 0x300
 8005c6c:	4301      	orrs	r1, r0
 8005c6e:	6091      	str	r1, [r2, #8]
 8005c70:	6f11      	ldr	r1, [r2, #112]	@ 0x70
 8005c72:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8005c76:	430b      	orrs	r3, r1
 8005c78:	6713      	str	r3, [r2, #112]	@ 0x70
  }
  /*--------------------------------------------------------------------------*/

  /*---------------------------- TIM configuration ---------------------------*/
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_TIM) == (RCC_PERIPHCLK_TIM))
 8005c7a:	6823      	ldr	r3, [r4, #0]
 8005c7c:	06db      	lsls	r3, r3, #27
 8005c7e:	f100 8090 	bmi.w	8005da2 <HAL_RCCEx_PeriphCLKConfig+0x23a>
  {
    __HAL_RCC_TIMCLKPRESCALER(PeriphClkInit->TIMPresSelection);
  }
  return HAL_OK;
 8005c82:	2000      	movs	r0, #0
 8005c84:	e04f      	b.n	8005d26 <HAL_RCCEx_PeriphCLKConfig+0x1be>
    __HAL_RCC_PLLI2S_DISABLE();
 8005c86:	4b4a      	ldr	r3, [pc, #296]	@ (8005db0 <HAL_RCCEx_PeriphCLKConfig+0x248>)
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 8005c88:	4e4a      	ldr	r6, [pc, #296]	@ (8005db4 <HAL_RCCEx_PeriphCLKConfig+0x24c>)
    __HAL_RCC_PLLI2S_DISABLE();
 8005c8a:	2200      	movs	r2, #0
 8005c8c:	669a      	str	r2, [r3, #104]	@ 0x68
    tickstart = HAL_GetTick();
 8005c8e:	f7fd ff11 	bl	8003ab4 <HAL_GetTick>
 8005c92:	4605      	mov	r5, r0
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 8005c94:	6833      	ldr	r3, [r6, #0]
 8005c96:	011f      	lsls	r7, r3, #4
 8005c98:	d43f      	bmi.n	8005d1a <HAL_RCCEx_PeriphCLKConfig+0x1b2>
    if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == (RCC_PERIPHCLK_I2S))
 8005c9a:	6821      	ldr	r1, [r4, #0]
 8005c9c:	07c8      	lsls	r0, r1, #31
      __HAL_RCC_PLLI2S_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN, PeriphClkInit->PLLI2S.PLLI2SR);
 8005c9e:	bf41      	itttt	mi
 8005ca0:	e9d4 2301 	ldrdmi	r2, r3, [r4, #4]
 8005ca4:	071b      	lslmi	r3, r3, #28
 8005ca6:	ea43 1382 	orrmi.w	r3, r3, r2, lsl #6
 8005caa:	f8c6 3084 	strmi.w	r3, [r6, #132]	@ 0x84
    if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLI2S) == (RCC_PERIPHCLK_SAI_PLLI2S))
 8005cae:	078a      	lsls	r2, r1, #30
 8005cb0:	d515      	bpl.n	8005cde <HAL_RCCEx_PeriphCLKConfig+0x176>
      tmpreg1 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SR) >> RCC_PLLI2SCFGR_PLLI2SR_Pos);
 8005cb2:	4a40      	ldr	r2, [pc, #256]	@ (8005db4 <HAL_RCCEx_PeriphCLKConfig+0x24c>)
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN, PeriphClkInit->PLLI2S.PLLI2SQ, tmpreg1);
 8005cb4:	68e3      	ldr	r3, [r4, #12]
      tmpreg1 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SR) >> RCC_PLLI2SCFGR_PLLI2SR_Pos);
 8005cb6:	f8d2 0084 	ldr.w	r0, [r2, #132]	@ 0x84
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN, PeriphClkInit->PLLI2S.PLLI2SQ, tmpreg1);
 8005cba:	6865      	ldr	r5, [r4, #4]
 8005cbc:	061b      	lsls	r3, r3, #24
 8005cbe:	f000 40e0 	and.w	r0, r0, #1879048192	@ 0x70000000
 8005cc2:	ea43 1385 	orr.w	r3, r3, r5, lsl #6
 8005cc6:	4303      	orrs	r3, r0
 8005cc8:	f8c2 3084 	str.w	r3, [r2, #132]	@ 0x84
      __HAL_RCC_PLLI2S_PLLSAICLKDIVQ_CONFIG(PeriphClkInit->PLLI2SDivQ);
 8005ccc:	f8d2 008c 	ldr.w	r0, [r2, #140]	@ 0x8c
 8005cd0:	69e3      	ldr	r3, [r4, #28]
 8005cd2:	f020 001f 	bic.w	r0, r0, #31
 8005cd6:	3b01      	subs	r3, #1
 8005cd8:	4303      	orrs	r3, r0
 8005cda:	f8c2 308c 	str.w	r3, [r2, #140]	@ 0x8c
    if ((PeriphClkInit->PeriphClockSelection & RCC_PERIPHCLK_PLLI2S) == RCC_PERIPHCLK_PLLI2S)
 8005cde:	064b      	lsls	r3, r1, #25
 8005ce0:	d50a      	bpl.n	8005cf8 <HAL_RCCEx_PeriphCLKConfig+0x190>
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN, PeriphClkInit->PLLI2S.PLLI2SQ,
 8005ce2:	68e3      	ldr	r3, [r4, #12]
 8005ce4:	6862      	ldr	r2, [r4, #4]
 8005ce6:	061b      	lsls	r3, r3, #24
 8005ce8:	ea43 1382 	orr.w	r3, r3, r2, lsl #6
 8005cec:	68a2      	ldr	r2, [r4, #8]
 8005cee:	ea43 7302 	orr.w	r3, r3, r2, lsl #28
 8005cf2:	4a30      	ldr	r2, [pc, #192]	@ (8005db4 <HAL_RCCEx_PeriphCLKConfig+0x24c>)
 8005cf4:	f8c2 3084 	str.w	r3, [r2, #132]	@ 0x84
    __HAL_RCC_PLLI2S_ENABLE();
 8005cf8:	4b2d      	ldr	r3, [pc, #180]	@ (8005db0 <HAL_RCCEx_PeriphCLKConfig+0x248>)
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 8005cfa:	4e2e      	ldr	r6, [pc, #184]	@ (8005db4 <HAL_RCCEx_PeriphCLKConfig+0x24c>)
    __HAL_RCC_PLLI2S_ENABLE();
 8005cfc:	2201      	movs	r2, #1
 8005cfe:	669a      	str	r2, [r3, #104]	@ 0x68
    tickstart = HAL_GetTick();
 8005d00:	f7fd fed8 	bl	8003ab4 <HAL_GetTick>
 8005d04:	4605      	mov	r5, r0
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 8005d06:	6833      	ldr	r3, [r6, #0]
 8005d08:	011f      	lsls	r7, r3, #4
 8005d0a:	f53f af34 	bmi.w	8005b76 <HAL_RCCEx_PeriphCLKConfig+0xe>
      if ((HAL_GetTick() - tickstart) > PLLI2S_TIMEOUT_VALUE)
 8005d0e:	f7fd fed1 	bl	8003ab4 <HAL_GetTick>
 8005d12:	1b40      	subs	r0, r0, r5
 8005d14:	2802      	cmp	r0, #2
 8005d16:	d9f6      	bls.n	8005d06 <HAL_RCCEx_PeriphCLKConfig+0x19e>
 8005d18:	e004      	b.n	8005d24 <HAL_RCCEx_PeriphCLKConfig+0x1bc>
      if ((HAL_GetTick() - tickstart) > PLLI2S_TIMEOUT_VALUE)
 8005d1a:	f7fd fecb 	bl	8003ab4 <HAL_GetTick>
 8005d1e:	1b40      	subs	r0, r0, r5
 8005d20:	2802      	cmp	r0, #2
 8005d22:	d9b7      	bls.n	8005c94 <HAL_RCCEx_PeriphCLKConfig+0x12c>
        return HAL_TIMEOUT;
 8005d24:	2003      	movs	r0, #3
}
 8005d26:	b003      	add	sp, #12
 8005d28:	bdf0      	pop	{r4, r5, r6, r7, pc}
      if ((HAL_GetTick() - tickstart) > PLLSAI_TIMEOUT_VALUE)
 8005d2a:	f7fd fec3 	bl	8003ab4 <HAL_GetTick>
 8005d2e:	1b80      	subs	r0, r0, r6
 8005d30:	2802      	cmp	r0, #2
 8005d32:	f67f af2b 	bls.w	8005b8c <HAL_RCCEx_PeriphCLKConfig+0x24>
 8005d36:	e7f5      	b.n	8005d24 <HAL_RCCEx_PeriphCLKConfig+0x1bc>
      if ((HAL_GetTick() - tickstart) > PLLSAI_TIMEOUT_VALUE)
 8005d38:	f7fd febc 	bl	8003ab4 <HAL_GetTick>
 8005d3c:	1b40      	subs	r0, r0, r5
 8005d3e:	2802      	cmp	r0, #2
 8005d40:	f67f af5f 	bls.w	8005c02 <HAL_RCCEx_PeriphCLKConfig+0x9a>
 8005d44:	e7ee      	b.n	8005d24 <HAL_RCCEx_PeriphCLKConfig+0x1bc>
      if ((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 8005d46:	f7fd feb5 	bl	8003ab4 <HAL_GetTick>
 8005d4a:	1b80      	subs	r0, r0, r6
 8005d4c:	2802      	cmp	r0, #2
 8005d4e:	f67f af73 	bls.w	8005c38 <HAL_RCCEx_PeriphCLKConfig+0xd0>
 8005d52:	e7e7      	b.n	8005d24 <HAL_RCCEx_PeriphCLKConfig+0x1bc>
    if ((tmpreg1 != 0x00000000U) && ((tmpreg1) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 8005d54:	f402 7240 	and.w	r2, r2, #768	@ 0x300
 8005d58:	4293      	cmp	r3, r2
 8005d5a:	f43f af78 	beq.w	8005c4e <HAL_RCCEx_PeriphCLKConfig+0xe6>
      tmpreg1 = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
 8005d5e:	6f2b      	ldr	r3, [r5, #112]	@ 0x70
      __HAL_RCC_BACKUPRESET_FORCE();
 8005d60:	4a13      	ldr	r2, [pc, #76]	@ (8005db0 <HAL_RCCEx_PeriphCLKConfig+0x248>)
 8005d62:	2101      	movs	r1, #1
 8005d64:	f8c2 1e40 	str.w	r1, [r2, #3648]	@ 0xe40
      tmpreg1 = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
 8005d68:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
      __HAL_RCC_BACKUPRESET_RELEASE();
 8005d6c:	2100      	movs	r1, #0
 8005d6e:	f8c2 1e40 	str.w	r1, [r2, #3648]	@ 0xe40
      RCC->BDCR = tmpreg1;
 8005d72:	672b      	str	r3, [r5, #112]	@ 0x70
      if (HAL_IS_BIT_SET(RCC->BDCR, RCC_BDCR_LSEON))
 8005d74:	6f2b      	ldr	r3, [r5, #112]	@ 0x70
 8005d76:	07d9      	lsls	r1, r3, #31
 8005d78:	f57f af69 	bpl.w	8005c4e <HAL_RCCEx_PeriphCLKConfig+0xe6>
        tickstart = HAL_GetTick();
 8005d7c:	f7fd fe9a 	bl	8003ab4 <HAL_GetTick>
          if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 8005d80:	f241 3788 	movw	r7, #5000	@ 0x1388
        tickstart = HAL_GetTick();
 8005d84:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 8005d86:	6f2b      	ldr	r3, [r5, #112]	@ 0x70
 8005d88:	079a      	lsls	r2, r3, #30
 8005d8a:	f53f af60 	bmi.w	8005c4e <HAL_RCCEx_PeriphCLKConfig+0xe6>
          if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 8005d8e:	f7fd fe91 	bl	8003ab4 <HAL_GetTick>
 8005d92:	1b80      	subs	r0, r0, r6
 8005d94:	42b8      	cmp	r0, r7
 8005d96:	d9f6      	bls.n	8005d86 <HAL_RCCEx_PeriphCLKConfig+0x21e>
 8005d98:	e7c4      	b.n	8005d24 <HAL_RCCEx_PeriphCLKConfig+0x1bc>
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 8005d9a:	6891      	ldr	r1, [r2, #8]
 8005d9c:	f421 11f8 	bic.w	r1, r1, #2031616	@ 0x1f0000
 8005da0:	e765      	b.n	8005c6e <HAL_RCCEx_PeriphCLKConfig+0x106>
    __HAL_RCC_TIMCLKPRESCALER(PeriphClkInit->TIMPresSelection);
 8005da2:	4b06      	ldr	r3, [pc, #24]	@ (8005dbc <HAL_RCCEx_PeriphCLKConfig+0x254>)
 8005da4:	f894 202c 	ldrb.w	r2, [r4, #44]	@ 0x2c
 8005da8:	f8c3 21e0 	str.w	r2, [r3, #480]	@ 0x1e0
 8005dac:	e769      	b.n	8005c82 <HAL_RCCEx_PeriphCLKConfig+0x11a>
 8005dae:	bf00      	nop
 8005db0:	42470000 	.word	0x42470000
 8005db4:	40023800 	.word	0x40023800
 8005db8:	40007000 	.word	0x40007000
 8005dbc:	42471000 	.word	0x42471000

08005dc0 <HAL_SDRAM_Init>:
  *                the configuration information for SDRAM module.
  * @param  Timing Pointer to SDRAM control timing structure
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_Init(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_TimingTypeDef *Timing)
{
 8005dc0:	b538      	push	{r3, r4, r5, lr}
 8005dc2:	460d      	mov	r5, r1
  /* Check the SDRAM handle parameter */
  if (hsdram == NULL)
 8005dc4:	4604      	mov	r4, r0
 8005dc6:	b1c8      	cbz	r0, 8005dfc <HAL_SDRAM_Init+0x3c>
  {
    return HAL_ERROR;
  }

  if (hsdram->State == HAL_SDRAM_STATE_RESET)
 8005dc8:	f890 302c 	ldrb.w	r3, [r0, #44]	@ 0x2c
 8005dcc:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
 8005dd0:	b91b      	cbnz	r3, 8005dda <HAL_SDRAM_Init+0x1a>
  {
    /* Allocate lock resource and initialize it */
    hsdram->Lock = HAL_UNLOCKED;
 8005dd2:	f880 202d 	strb.w	r2, [r0, #45]	@ 0x2d

    /* Init the low level hardware */
    hsdram->MspInitCallback(hsdram);
#else
    /* Initialize the low level hardware (MSP) */
    HAL_SDRAM_MspInit(hsdram);
 8005dd6:	f7fc fcf3 	bl	80027c0 <HAL_SDRAM_MspInit>
#endif /* USE_HAL_SDRAM_REGISTER_CALLBACKS */
  }

  /* Initialize the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_BUSY;
 8005dda:	2302      	movs	r3, #2
 8005ddc:	f884 302c 	strb.w	r3, [r4, #44]	@ 0x2c

  /* Initialize SDRAM control Interface */
  (void)FMC_SDRAM_Init(hsdram->Instance, &(hsdram->Init));
 8005de0:	1d21      	adds	r1, r4, #4
 8005de2:	6820      	ldr	r0, [r4, #0]
 8005de4:	f000 fd0e 	bl	8006804 <FMC_SDRAM_Init>

  /* Initialize SDRAM timing Interface */
  (void)FMC_SDRAM_Timing_Init(hsdram->Instance, Timing, hsdram->Init.SDBank);
 8005de8:	6862      	ldr	r2, [r4, #4]
 8005dea:	6820      	ldr	r0, [r4, #0]
 8005dec:	4629      	mov	r1, r5
 8005dee:	f000 fd3f 	bl	8006870 <FMC_SDRAM_Timing_Init>
  /* Update the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_READY;
 8005df2:	2301      	movs	r3, #1
 8005df4:	f884 302c 	strb.w	r3, [r4, #44]	@ 0x2c

  return HAL_OK;
 8005df8:	2000      	movs	r0, #0
}
 8005dfa:	bd38      	pop	{r3, r4, r5, pc}
    return HAL_ERROR;
 8005dfc:	2001      	movs	r0, #1
 8005dfe:	e7fc      	b.n	8005dfa <HAL_SDRAM_Init+0x3a>

08005e00 <HAL_SDRAM_SendCommand>:
  * @param  Timeout Timeout duration
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_SendCommand(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_CommandTypeDef *Command,
                                        uint32_t Timeout)
{
 8005e00:	b570      	push	{r4, r5, r6, lr}
  HAL_SDRAM_StateTypeDef state = hsdram->State;
 8005e02:	f890 302c 	ldrb.w	r3, [r0, #44]	@ 0x2c

  /* Check the SDRAM controller state */
  if (state == HAL_SDRAM_STATE_BUSY)
 8005e06:	2b02      	cmp	r3, #2
{
 8005e08:	4605      	mov	r5, r0
 8005e0a:	460e      	mov	r6, r1
  HAL_SDRAM_StateTypeDef state = hsdram->State;
 8005e0c:	b2d8      	uxtb	r0, r3
  if (state == HAL_SDRAM_STATE_BUSY)
 8005e0e:	d012      	beq.n	8005e36 <HAL_SDRAM_SendCommand+0x36>
  {
    return HAL_BUSY;
  }
  else if ((state == HAL_SDRAM_STATE_READY) || (state == HAL_SDRAM_STATE_PRECHARGED))
 8005e10:	f000 04fb 	and.w	r4, r0, #251	@ 0xfb
 8005e14:	2c01      	cmp	r4, #1
 8005e16:	d10f      	bne.n	8005e38 <HAL_SDRAM_SendCommand+0x38>
  {
    /* Update the SDRAM state */
    hsdram->State = HAL_SDRAM_STATE_BUSY;
 8005e18:	2302      	movs	r3, #2
 8005e1a:	f885 302c 	strb.w	r3, [r5, #44]	@ 0x2c

    /* Send SDRAM command */
    (void)FMC_SDRAM_SendCommand(hsdram->Instance, Command, Timeout);
 8005e1e:	6828      	ldr	r0, [r5, #0]
 8005e20:	f000 fd5c 	bl	80068dc <FMC_SDRAM_SendCommand>

    /* Update the SDRAM controller state state */
    if (Command->CommandMode == FMC_SDRAM_CMD_PALL)
 8005e24:	6833      	ldr	r3, [r6, #0]
 8005e26:	2b02      	cmp	r3, #2
    {
      hsdram->State = HAL_SDRAM_STATE_PRECHARGED;
 8005e28:	bf06      	itte	eq
 8005e2a:	2305      	moveq	r3, #5
 8005e2c:	f885 302c 	strbeq.w	r3, [r5, #44]	@ 0x2c
    }
    else
    {
      hsdram->State = HAL_SDRAM_STATE_READY;
 8005e30:	f885 402c 	strbne.w	r4, [r5, #44]	@ 0x2c
  else
  {
    return HAL_ERROR;
  }

  return HAL_OK;
 8005e34:	2000      	movs	r0, #0
}
 8005e36:	bd70      	pop	{r4, r5, r6, pc}
    return HAL_ERROR;
 8005e38:	2001      	movs	r0, #1
 8005e3a:	e7fc      	b.n	8005e36 <HAL_SDRAM_SendCommand+0x36>

08005e3c <HAL_SDRAM_ProgramRefreshRate>:
  *                the configuration information for SDRAM module.
  * @param  RefreshRate The SDRAM refresh rate value
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_ProgramRefreshRate(SDRAM_HandleTypeDef *hsdram, uint32_t RefreshRate)
{
 8005e3c:	b538      	push	{r3, r4, r5, lr}
  /* Check the SDRAM controller state */
  if (hsdram->State == HAL_SDRAM_STATE_BUSY)
 8005e3e:	f890 302c 	ldrb.w	r3, [r0, #44]	@ 0x2c
 8005e42:	2b02      	cmp	r3, #2
{
 8005e44:	4604      	mov	r4, r0
  if (hsdram->State == HAL_SDRAM_STATE_BUSY)
 8005e46:	b2d8      	uxtb	r0, r3
 8005e48:	d00d      	beq.n	8005e66 <HAL_SDRAM_ProgramRefreshRate+0x2a>
  {
    return HAL_BUSY;
  }
  else if (hsdram->State == HAL_SDRAM_STATE_READY)
 8005e4a:	f894 302c 	ldrb.w	r3, [r4, #44]	@ 0x2c
 8005e4e:	2b01      	cmp	r3, #1
 8005e50:	b2dd      	uxtb	r5, r3
 8005e52:	d109      	bne.n	8005e68 <HAL_SDRAM_ProgramRefreshRate+0x2c>
  {
    /* Update the SDRAM state */
    hsdram->State = HAL_SDRAM_STATE_BUSY;
 8005e54:	2302      	movs	r3, #2

    /* Program the refresh rate */
    (void)FMC_SDRAM_ProgramRefreshRate(hsdram->Instance, RefreshRate);
 8005e56:	6820      	ldr	r0, [r4, #0]
    hsdram->State = HAL_SDRAM_STATE_BUSY;
 8005e58:	f884 302c 	strb.w	r3, [r4, #44]	@ 0x2c
    (void)FMC_SDRAM_ProgramRefreshRate(hsdram->Instance, RefreshRate);
 8005e5c:	f000 fd62 	bl	8006924 <FMC_SDRAM_ProgramRefreshRate>

    /* Update the SDRAM state */
    hsdram->State = HAL_SDRAM_STATE_READY;
 8005e60:	f884 502c 	strb.w	r5, [r4, #44]	@ 0x2c
  else
  {
    return HAL_ERROR;
  }

  return HAL_OK;
 8005e64:	2000      	movs	r0, #0
}
 8005e66:	bd38      	pop	{r3, r4, r5, pc}
    return HAL_ERROR;
 8005e68:	2001      	movs	r0, #1
 8005e6a:	e7fc      	b.n	8005e66 <HAL_SDRAM_ProgramRefreshRate+0x2a>

08005e6c <SPI_WaitFlagStateUntilTimeout>:
  * @param  Tickstart tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef SPI_WaitFlagStateUntilTimeout(SPI_HandleTypeDef *hspi, uint32_t Flag, FlagStatus State,
                                                       uint32_t Timeout, uint32_t Tickstart)
{
 8005e6c:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 8005e70:	461f      	mov	r7, r3
 8005e72:	4689      	mov	r9, r1
 8005e74:	4690      	mov	r8, r2
 8005e76:	4604      	mov	r4, r0
  __IO uint32_t count;
  uint32_t tmp_timeout;
  uint32_t tmp_tickstart;

  /* Adjust Timeout value  in case of end of transfer */
  tmp_timeout   = Timeout - (HAL_GetTick() - Tickstart);
 8005e78:	f7fd fe1c 	bl	8003ab4 <HAL_GetTick>
 8005e7c:	9d0a      	ldr	r5, [sp, #40]	@ 0x28
 8005e7e:	443d      	add	r5, r7
 8005e80:	1a2d      	subs	r5, r5, r0
  tmp_tickstart = HAL_GetTick();
 8005e82:	f7fd fe17 	bl	8003ab4 <HAL_GetTick>

  /* Calculate Timeout based on a software loop to avoid blocking issue if Systick is disabled */
  count = tmp_timeout * ((SystemCoreClock * 32U) >> 20U);
 8005e86:	4b26      	ldr	r3, [pc, #152]	@ (8005f20 <SPI_WaitFlagStateUntilTimeout+0xb4>)
 8005e88:	681e      	ldr	r6, [r3, #0]
 8005e8a:	f3c6 36cb 	ubfx	r6, r6, #15, #12
 8005e8e:	436e      	muls	r6, r5
  tmp_tickstart = HAL_GetTick();
 8005e90:	4682      	mov	sl, r0
  count = tmp_timeout * ((SystemCoreClock * 32U) >> 20U);
 8005e92:	9601      	str	r6, [sp, #4]

  while ((__HAL_SPI_GET_FLAG(hspi, Flag) ? SET : RESET) != State)
 8005e94:	6822      	ldr	r2, [r4, #0]
 8005e96:	6893      	ldr	r3, [r2, #8]
 8005e98:	ea39 0303 	bics.w	r3, r9, r3
 8005e9c:	bf0c      	ite	eq
 8005e9e:	2301      	moveq	r3, #1
 8005ea0:	2300      	movne	r3, #0
 8005ea2:	4543      	cmp	r3, r8
 8005ea4:	d101      	bne.n	8005eaa <SPI_WaitFlagStateUntilTimeout+0x3e>
      }
      count--;
    }
  }

  return HAL_OK;
 8005ea6:	2000      	movs	r0, #0
 8005ea8:	e02e      	b.n	8005f08 <SPI_WaitFlagStateUntilTimeout+0x9c>
    if (Timeout != HAL_MAX_DELAY)
 8005eaa:	1c7b      	adds	r3, r7, #1
 8005eac:	d0f3      	beq.n	8005e96 <SPI_WaitFlagStateUntilTimeout+0x2a>
      if (((HAL_GetTick() - tmp_tickstart) >= tmp_timeout) || (tmp_timeout == 0U))
 8005eae:	f7fd fe01 	bl	8003ab4 <HAL_GetTick>
 8005eb2:	eba0 000a 	sub.w	r0, r0, sl
 8005eb6:	42a8      	cmp	r0, r5
 8005eb8:	d329      	bcc.n	8005f0e <SPI_WaitFlagStateUntilTimeout+0xa2>
        __HAL_SPI_DISABLE_IT(hspi, (SPI_IT_TXE | SPI_IT_RXNE | SPI_IT_ERR));
 8005eba:	6823      	ldr	r3, [r4, #0]
 8005ebc:	685a      	ldr	r2, [r3, #4]
 8005ebe:	f022 02e0 	bic.w	r2, r2, #224	@ 0xe0
 8005ec2:	605a      	str	r2, [r3, #4]
        if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8005ec4:	6862      	ldr	r2, [r4, #4]
 8005ec6:	f5b2 7f82 	cmp.w	r2, #260	@ 0x104
 8005eca:	d10a      	bne.n	8005ee2 <SPI_WaitFlagStateUntilTimeout+0x76>
 8005ecc:	68a2      	ldr	r2, [r4, #8]
 8005ece:	f5b2 4f00 	cmp.w	r2, #32768	@ 0x8000
 8005ed2:	d002      	beq.n	8005eda <SPI_WaitFlagStateUntilTimeout+0x6e>
                                                     || (hspi->Init.Direction == SPI_DIRECTION_2LINES_RXONLY)))
 8005ed4:	f5b2 6f80 	cmp.w	r2, #1024	@ 0x400
 8005ed8:	d103      	bne.n	8005ee2 <SPI_WaitFlagStateUntilTimeout+0x76>
          __HAL_SPI_DISABLE(hspi);
 8005eda:	681a      	ldr	r2, [r3, #0]
 8005edc:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 8005ee0:	601a      	str	r2, [r3, #0]
        if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
 8005ee2:	6aa2      	ldr	r2, [r4, #40]	@ 0x28
 8005ee4:	f5b2 5f00 	cmp.w	r2, #8192	@ 0x2000
 8005ee8:	d107      	bne.n	8005efa <SPI_WaitFlagStateUntilTimeout+0x8e>
          SPI_RESET_CRC(hspi);
 8005eea:	681a      	ldr	r2, [r3, #0]
 8005eec:	f422 5200 	bic.w	r2, r2, #8192	@ 0x2000
 8005ef0:	601a      	str	r2, [r3, #0]
 8005ef2:	681a      	ldr	r2, [r3, #0]
 8005ef4:	f442 5200 	orr.w	r2, r2, #8192	@ 0x2000
 8005ef8:	601a      	str	r2, [r3, #0]
        hspi->State = HAL_SPI_STATE_READY;
 8005efa:	2301      	movs	r3, #1
 8005efc:	f884 3051 	strb.w	r3, [r4, #81]	@ 0x51
        __HAL_UNLOCK(hspi);
 8005f00:	2300      	movs	r3, #0
 8005f02:	f884 3050 	strb.w	r3, [r4, #80]	@ 0x50
        return HAL_TIMEOUT;
 8005f06:	2003      	movs	r0, #3
}
 8005f08:	b002      	add	sp, #8
 8005f0a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
      if (count == 0U)
 8005f0e:	9a01      	ldr	r2, [sp, #4]
      count--;
 8005f10:	9b01      	ldr	r3, [sp, #4]
      if (count == 0U)
 8005f12:	2a00      	cmp	r2, #0
      count--;
 8005f14:	f103 33ff 	add.w	r3, r3, #4294967295
 8005f18:	9301      	str	r3, [sp, #4]
 8005f1a:	bf08      	it	eq
 8005f1c:	4615      	moveq	r5, r2
 8005f1e:	e7b9      	b.n	8005e94 <SPI_WaitFlagStateUntilTimeout+0x28>
 8005f20:	200000c4 	.word	0x200000c4

08005f24 <SPI_EndRxTxTransaction>:
  * @param  Timeout Timeout duration
  * @param  Tickstart tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef SPI_EndRxTxTransaction(SPI_HandleTypeDef *hspi, uint32_t Timeout, uint32_t Tickstart)
{
 8005f24:	b5f0      	push	{r4, r5, r6, r7, lr}
 8005f26:	b085      	sub	sp, #20
  /* Wait until TXE flag */
  if(SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_TXE, SET, Timeout, Tickstart) != HAL_OK)
 8005f28:	460b      	mov	r3, r1
 8005f2a:	9200      	str	r2, [sp, #0]
{
 8005f2c:	460e      	mov	r6, r1
 8005f2e:	4617      	mov	r7, r2
  if(SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_TXE, SET, Timeout, Tickstart) != HAL_OK)
 8005f30:	2102      	movs	r1, #2
 8005f32:	2201      	movs	r2, #1
{
 8005f34:	4604      	mov	r4, r0
  if(SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_TXE, SET, Timeout, Tickstart) != HAL_OK)
 8005f36:	f7ff ff99 	bl	8005e6c <SPI_WaitFlagStateUntilTimeout>
 8005f3a:	4605      	mov	r5, r0
 8005f3c:	b128      	cbz	r0, 8005f4a <SPI_EndRxTxTransaction+0x26>
  if (hspi->Init.Mode == SPI_MODE_MASTER)
  {
    /* Control the BSY flag */
    if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
    {
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 8005f3e:	6d63      	ldr	r3, [r4, #84]	@ 0x54
 8005f40:	f043 0320 	orr.w	r3, r3, #32
 8005f44:	6563      	str	r3, [r4, #84]	@ 0x54
    return HAL_TIMEOUT;
 8005f46:	2503      	movs	r5, #3
 8005f48:	e015      	b.n	8005f76 <SPI_EndRxTxTransaction+0x52>
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 8005f4a:	4b12      	ldr	r3, [pc, #72]	@ (8005f94 <SPI_EndRxTxTransaction+0x70>)
 8005f4c:	6818      	ldr	r0, [r3, #0]
 8005f4e:	4b12      	ldr	r3, [pc, #72]	@ (8005f98 <SPI_EndRxTxTransaction+0x74>)
 8005f50:	fbb0 f0f3 	udiv	r0, r0, r3
 8005f54:	f44f 737a 	mov.w	r3, #1000	@ 0x3e8
 8005f58:	4358      	muls	r0, r3
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 8005f5a:	6863      	ldr	r3, [r4, #4]
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 8005f5c:	9003      	str	r0, [sp, #12]
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 8005f5e:	f5b3 7f82 	cmp.w	r3, #260	@ 0x104
 8005f62:	d10b      	bne.n	8005f7c <SPI_EndRxTxTransaction+0x58>
    if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
 8005f64:	9700      	str	r7, [sp, #0]
 8005f66:	4633      	mov	r3, r6
 8005f68:	462a      	mov	r2, r5
 8005f6a:	2180      	movs	r1, #128	@ 0x80
 8005f6c:	4620      	mov	r0, r4
 8005f6e:	f7ff ff7d 	bl	8005e6c <SPI_WaitFlagStateUntilTimeout>
 8005f72:	2800      	cmp	r0, #0
 8005f74:	d1e3      	bne.n	8005f3e <SPI_EndRxTxTransaction+0x1a>
      count--;
    } while (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_BSY) != RESET);
  }

  return HAL_OK;
}
 8005f76:	4628      	mov	r0, r5
 8005f78:	b005      	add	sp, #20
 8005f7a:	bdf0      	pop	{r4, r5, r6, r7, pc}
      if (count == 0U)
 8005f7c:	9b03      	ldr	r3, [sp, #12]
 8005f7e:	2b00      	cmp	r3, #0
 8005f80:	d0f9      	beq.n	8005f76 <SPI_EndRxTxTransaction+0x52>
      count--;
 8005f82:	9b03      	ldr	r3, [sp, #12]
 8005f84:	3b01      	subs	r3, #1
 8005f86:	9303      	str	r3, [sp, #12]
    } while (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_BSY) != RESET);
 8005f88:	6823      	ldr	r3, [r4, #0]
 8005f8a:	689b      	ldr	r3, [r3, #8]
 8005f8c:	061b      	lsls	r3, r3, #24
 8005f8e:	d4f5      	bmi.n	8005f7c <SPI_EndRxTxTransaction+0x58>
 8005f90:	e7f1      	b.n	8005f76 <SPI_EndRxTxTransaction+0x52>
 8005f92:	bf00      	nop
 8005f94:	200000c4 	.word	0x200000c4
 8005f98:	016e3600 	.word	0x016e3600

08005f9c <SPI_EndRxTransaction>:
{
 8005f9c:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8005f9e:	460b      	mov	r3, r1
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8005fa0:	6841      	ldr	r1, [r0, #4]
 8005fa2:	f5b1 7f82 	cmp.w	r1, #260	@ 0x104
{
 8005fa6:	4604      	mov	r4, r0
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8005fa8:	d008      	beq.n	8005fbc <SPI_EndRxTransaction+0x20>
    if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, RESET, Timeout, Tickstart) != HAL_OK)
 8005faa:	9200      	str	r2, [sp, #0]
 8005fac:	2101      	movs	r1, #1
 8005fae:	2200      	movs	r2, #0
 8005fb0:	f7ff ff5c 	bl	8005e6c <SPI_WaitFlagStateUntilTimeout>
 8005fb4:	b9d0      	cbnz	r0, 8005fec <SPI_EndRxTransaction+0x50>
  return HAL_OK;
 8005fb6:	2000      	movs	r0, #0
}
 8005fb8:	b003      	add	sp, #12
 8005fba:	bd30      	pop	{r4, r5, pc}
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8005fbc:	6881      	ldr	r1, [r0, #8]
 8005fbe:	f5b1 4f00 	cmp.w	r1, #32768	@ 0x8000
 8005fc2:	d002      	beq.n	8005fca <SPI_EndRxTransaction+0x2e>
                                               || (hspi->Init.Direction == SPI_DIRECTION_2LINES_RXONLY)))
 8005fc4:	f5b1 6f80 	cmp.w	r1, #1024	@ 0x400
 8005fc8:	d107      	bne.n	8005fda <SPI_EndRxTransaction+0x3e>
    __HAL_SPI_DISABLE(hspi);
 8005fca:	6825      	ldr	r5, [r4, #0]
 8005fcc:	6828      	ldr	r0, [r5, #0]
    if (hspi->Init.Direction != SPI_DIRECTION_2LINES_RXONLY)
 8005fce:	f5b1 6f80 	cmp.w	r1, #1024	@ 0x400
    __HAL_SPI_DISABLE(hspi);
 8005fd2:	f020 0040 	bic.w	r0, r0, #64	@ 0x40
 8005fd6:	6028      	str	r0, [r5, #0]
    if (hspi->Init.Direction != SPI_DIRECTION_2LINES_RXONLY)
 8005fd8:	d004      	beq.n	8005fe4 <SPI_EndRxTransaction+0x48>
      if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
 8005fda:	9200      	str	r2, [sp, #0]
 8005fdc:	2180      	movs	r1, #128	@ 0x80
 8005fde:	2200      	movs	r2, #0
      if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, RESET, Timeout, Tickstart) != HAL_OK)
 8005fe0:	4620      	mov	r0, r4
 8005fe2:	e7e5      	b.n	8005fb0 <SPI_EndRxTransaction+0x14>
 8005fe4:	9200      	str	r2, [sp, #0]
 8005fe6:	2101      	movs	r1, #1
 8005fe8:	2200      	movs	r2, #0
 8005fea:	e7f9      	b.n	8005fe0 <SPI_EndRxTransaction+0x44>
        SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 8005fec:	6d63      	ldr	r3, [r4, #84]	@ 0x54
 8005fee:	f043 0320 	orr.w	r3, r3, #32
 8005ff2:	6563      	str	r3, [r4, #84]	@ 0x54
        return HAL_TIMEOUT;
 8005ff4:	2003      	movs	r0, #3
 8005ff6:	e7df      	b.n	8005fb8 <SPI_EndRxTransaction+0x1c>

08005ff8 <HAL_SPI_Init>:
{
 8005ff8:	b510      	push	{r4, lr}
  if (hspi == NULL)
 8005ffa:	4604      	mov	r4, r0
 8005ffc:	2800      	cmp	r0, #0
 8005ffe:	d055      	beq.n	80060ac <HAL_SPI_Init+0xb4>
  if (hspi->Init.TIMode == SPI_TIMODE_DISABLE)
 8006000:	6a43      	ldr	r3, [r0, #36]	@ 0x24
 8006002:	2b00      	cmp	r3, #0
 8006004:	d14e      	bne.n	80060a4 <HAL_SPI_Init+0xac>
    if (hspi->Init.Mode == SPI_MODE_MASTER)
 8006006:	6842      	ldr	r2, [r0, #4]
 8006008:	f5b2 7f82 	cmp.w	r2, #260	@ 0x104
 800600c:	d000      	beq.n	8006010 <HAL_SPI_Init+0x18>
      hspi->Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 800600e:	61c3      	str	r3, [r0, #28]
  hspi->Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 8006010:	2300      	movs	r3, #0
 8006012:	62a3      	str	r3, [r4, #40]	@ 0x28
  if (hspi->State == HAL_SPI_STATE_RESET)
 8006014:	f894 3051 	ldrb.w	r3, [r4, #81]	@ 0x51
 8006018:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
 800601c:	b923      	cbnz	r3, 8006028 <HAL_SPI_Init+0x30>
    hspi->Lock = HAL_UNLOCKED;
 800601e:	f884 2050 	strb.w	r2, [r4, #80]	@ 0x50
    HAL_SPI_MspInit(hspi);
 8006022:	4620      	mov	r0, r4
 8006024:	f7fc fb96 	bl	8002754 <HAL_SPI_MspInit>
  __HAL_SPI_DISABLE(hspi);
 8006028:	6821      	ldr	r1, [r4, #0]
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 800602a:	68a0      	ldr	r0, [r4, #8]
 800602c:	69a2      	ldr	r2, [r4, #24]
  hspi->State = HAL_SPI_STATE_BUSY;
 800602e:	2302      	movs	r3, #2
 8006030:	f884 3051 	strb.w	r3, [r4, #81]	@ 0x51
  __HAL_SPI_DISABLE(hspi);
 8006034:	680b      	ldr	r3, [r1, #0]
 8006036:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 800603a:	600b      	str	r3, [r1, #0]
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 800603c:	6863      	ldr	r3, [r4, #4]
 800603e:	f400 4004 	and.w	r0, r0, #33792	@ 0x8400
 8006042:	f403 7382 	and.w	r3, r3, #260	@ 0x104
 8006046:	4303      	orrs	r3, r0
 8006048:	68e0      	ldr	r0, [r4, #12]
 800604a:	f400 6000 	and.w	r0, r0, #2048	@ 0x800
 800604e:	4303      	orrs	r3, r0
 8006050:	6920      	ldr	r0, [r4, #16]
 8006052:	f000 0002 	and.w	r0, r0, #2
 8006056:	4303      	orrs	r3, r0
 8006058:	6960      	ldr	r0, [r4, #20]
 800605a:	f000 0001 	and.w	r0, r0, #1
 800605e:	4303      	orrs	r3, r0
 8006060:	f402 7000 	and.w	r0, r2, #512	@ 0x200
 8006064:	4303      	orrs	r3, r0
 8006066:	69e0      	ldr	r0, [r4, #28]
 8006068:	f000 0038 	and.w	r0, r0, #56	@ 0x38
 800606c:	4303      	orrs	r3, r0
 800606e:	6a20      	ldr	r0, [r4, #32]
 8006070:	f000 0080 	and.w	r0, r0, #128	@ 0x80
 8006074:	4303      	orrs	r3, r0
 8006076:	6aa0      	ldr	r0, [r4, #40]	@ 0x28
 8006078:	f400 5000 	and.w	r0, r0, #8192	@ 0x2000
 800607c:	4303      	orrs	r3, r0
 800607e:	600b      	str	r3, [r1, #0]
  WRITE_REG(hspi->Instance->CR2, (((hspi->Init.NSS >> 16U) & SPI_CR2_SSOE) | (hspi->Init.TIMode & SPI_CR2_FRF)));
 8006080:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 8006082:	0c12      	lsrs	r2, r2, #16
 8006084:	f003 0310 	and.w	r3, r3, #16
 8006088:	f002 0204 	and.w	r2, r2, #4
 800608c:	431a      	orrs	r2, r3
 800608e:	604a      	str	r2, [r1, #4]
  CLEAR_BIT(hspi->Instance->I2SCFGR, SPI_I2SCFGR_I2SMOD);
 8006090:	69cb      	ldr	r3, [r1, #28]
 8006092:	f423 6300 	bic.w	r3, r3, #2048	@ 0x800
 8006096:	61cb      	str	r3, [r1, #28]
  hspi->ErrorCode = HAL_SPI_ERROR_NONE;
 8006098:	2000      	movs	r0, #0
  hspi->State     = HAL_SPI_STATE_READY;
 800609a:	2301      	movs	r3, #1
  hspi->ErrorCode = HAL_SPI_ERROR_NONE;
 800609c:	6560      	str	r0, [r4, #84]	@ 0x54
  hspi->State     = HAL_SPI_STATE_READY;
 800609e:	f884 3051 	strb.w	r3, [r4, #81]	@ 0x51
}
 80060a2:	bd10      	pop	{r4, pc}
    hspi->Init.CLKPolarity = SPI_POLARITY_LOW;
 80060a4:	2300      	movs	r3, #0
    hspi->Init.CLKPhase    = SPI_PHASE_1EDGE;
 80060a6:	e9c0 3304 	strd	r3, r3, [r0, #16]
 80060aa:	e7b1      	b.n	8006010 <HAL_SPI_Init+0x18>
    return HAL_ERROR;
 80060ac:	2001      	movs	r0, #1
 80060ae:	e7f8      	b.n	80060a2 <HAL_SPI_Init+0xaa>

080060b0 <HAL_SPI_Transmit>:
{
 80060b0:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 80060b4:	4604      	mov	r4, r0
 80060b6:	461f      	mov	r7, r3
 80060b8:	460d      	mov	r5, r1
 80060ba:	4690      	mov	r8, r2
  tickstart = HAL_GetTick();
 80060bc:	f7fd fcfa 	bl	8003ab4 <HAL_GetTick>
  if (hspi->State != HAL_SPI_STATE_READY)
 80060c0:	f894 3051 	ldrb.w	r3, [r4, #81]	@ 0x51
 80060c4:	2b01      	cmp	r3, #1
  tickstart = HAL_GetTick();
 80060c6:	4681      	mov	r9, r0
  if (hspi->State != HAL_SPI_STATE_READY)
 80060c8:	b2d8      	uxtb	r0, r3
 80060ca:	f040 809f 	bne.w	800620c <HAL_SPI_Transmit+0x15c>
  if ((pData == NULL) || (Size == 0U))
 80060ce:	2d00      	cmp	r5, #0
 80060d0:	d074      	beq.n	80061bc <HAL_SPI_Transmit+0x10c>
 80060d2:	f1b8 0f00 	cmp.w	r8, #0
 80060d6:	d071      	beq.n	80061bc <HAL_SPI_Transmit+0x10c>
  __HAL_LOCK(hspi);
 80060d8:	f894 3050 	ldrb.w	r3, [r4, #80]	@ 0x50
 80060dc:	2b01      	cmp	r3, #1
 80060de:	f000 8095 	beq.w	800620c <HAL_SPI_Transmit+0x15c>
  hspi->State       = HAL_SPI_STATE_BUSY_TX;
 80060e2:	2303      	movs	r3, #3
 80060e4:	f884 3051 	strb.w	r3, [r4, #81]	@ 0x51
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 80060e8:	2300      	movs	r3, #0
 80060ea:	6563      	str	r3, [r4, #84]	@ 0x54
  hspi->RxISR       = NULL;
 80060ec:	e9c4 3310 	strd	r3, r3, [r4, #64]	@ 0x40
  hspi->TxXferCount = Size;
 80060f0:	f8a4 8036 	strh.w	r8, [r4, #54]	@ 0x36
  hspi->pRxBuffPtr  = (uint8_t *)NULL;
 80060f4:	63a3      	str	r3, [r4, #56]	@ 0x38
  hspi->RxXferSize  = 0U;
 80060f6:	87a3      	strh	r3, [r4, #60]	@ 0x3c
  hspi->RxXferCount = 0U;
 80060f8:	87e3      	strh	r3, [r4, #62]	@ 0x3e
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 80060fa:	68a3      	ldr	r3, [r4, #8]
    __HAL_SPI_DISABLE(hspi);
 80060fc:	6826      	ldr	r6, [r4, #0]
  __HAL_LOCK(hspi);
 80060fe:	f884 0050 	strb.w	r0, [r4, #80]	@ 0x50
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8006102:	f5b3 4f00 	cmp.w	r3, #32768	@ 0x8000
  hspi->pTxBuffPtr  = (const uint8_t *)pData;
 8006106:	6325      	str	r5, [r4, #48]	@ 0x30
  hspi->TxXferSize  = Size;
 8006108:	f8a4 8034 	strh.w	r8, [r4, #52]	@ 0x34
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800610c:	d107      	bne.n	800611e <HAL_SPI_Transmit+0x6e>
    __HAL_SPI_DISABLE(hspi);
 800610e:	6833      	ldr	r3, [r6, #0]
 8006110:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 8006114:	6033      	str	r3, [r6, #0]
    SPI_1LINE_TX(hspi);
 8006116:	6833      	ldr	r3, [r6, #0]
 8006118:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 800611c:	6033      	str	r3, [r6, #0]
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800611e:	6833      	ldr	r3, [r6, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 8006120:	68e2      	ldr	r2, [r4, #12]
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 8006122:	065b      	lsls	r3, r3, #25
    __HAL_SPI_ENABLE(hspi);
 8006124:	bf5e      	ittt	pl
 8006126:	6833      	ldrpl	r3, [r6, #0]
 8006128:	f043 0340 	orrpl.w	r3, r3, #64	@ 0x40
 800612c:	6033      	strpl	r3, [r6, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 800612e:	f5b2 6f00 	cmp.w	r2, #2048	@ 0x800
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 8006132:	6863      	ldr	r3, [r4, #4]
  if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 8006134:	d145      	bne.n	80061c2 <HAL_SPI_Transmit+0x112>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 8006136:	b113      	cbz	r3, 800613e <HAL_SPI_Transmit+0x8e>
 8006138:	f1b8 0f01 	cmp.w	r8, #1
 800613c:	d107      	bne.n	800614e <HAL_SPI_Transmit+0x9e>
      hspi->Instance->DR = *((const uint16_t *)hspi->pTxBuffPtr);
 800613e:	f835 3b02 	ldrh.w	r3, [r5], #2
 8006142:	60f3      	str	r3, [r6, #12]
      hspi->pTxBuffPtr += sizeof(uint16_t);
 8006144:	6325      	str	r5, [r4, #48]	@ 0x30
        hspi->TxXferCount--;
 8006146:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
 8006148:	3b01      	subs	r3, #1
 800614a:	b29b      	uxth	r3, r3
 800614c:	86e3      	strh	r3, [r4, #54]	@ 0x36
    while (hspi->TxXferCount > 0U)
 800614e:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
 8006150:	b29b      	uxth	r3, r3
 8006152:	b9d3      	cbnz	r3, 800618a <HAL_SPI_Transmit+0xda>
  if (SPI_EndRxTxTransaction(hspi, Timeout, tickstart) != HAL_OK)
 8006154:	464a      	mov	r2, r9
 8006156:	4639      	mov	r1, r7
 8006158:	4620      	mov	r0, r4
 800615a:	f7ff fee3 	bl	8005f24 <SPI_EndRxTxTransaction>
 800615e:	2800      	cmp	r0, #0
 8006160:	d151      	bne.n	8006206 <HAL_SPI_Transmit+0x156>
  if (hspi->Init.Direction == SPI_DIRECTION_2LINES)
 8006162:	68a3      	ldr	r3, [r4, #8]
 8006164:	b933      	cbnz	r3, 8006174 <HAL_SPI_Transmit+0xc4>
    __HAL_SPI_CLEAR_OVRFLAG(hspi);
 8006166:	9301      	str	r3, [sp, #4]
 8006168:	6823      	ldr	r3, [r4, #0]
 800616a:	68da      	ldr	r2, [r3, #12]
 800616c:	9201      	str	r2, [sp, #4]
 800616e:	689b      	ldr	r3, [r3, #8]
 8006170:	9301      	str	r3, [sp, #4]
 8006172:	9b01      	ldr	r3, [sp, #4]
  hspi->State = HAL_SPI_STATE_READY;
 8006174:	2301      	movs	r3, #1
 8006176:	f884 3051 	strb.w	r3, [r4, #81]	@ 0x51
  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 800617a:	6d60      	ldr	r0, [r4, #84]	@ 0x54
  __HAL_UNLOCK(hspi);
 800617c:	2300      	movs	r3, #0
  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 800617e:	1ac0      	subs	r0, r0, r3
  __HAL_UNLOCK(hspi);
 8006180:	f884 3050 	strb.w	r3, [r4, #80]	@ 0x50
  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 8006184:	bf18      	it	ne
 8006186:	2001      	movne	r0, #1
 8006188:	e018      	b.n	80061bc <HAL_SPI_Transmit+0x10c>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 800618a:	6822      	ldr	r2, [r4, #0]
 800618c:	6893      	ldr	r3, [r2, #8]
 800618e:	0798      	lsls	r0, r3, #30
 8006190:	d505      	bpl.n	800619e <HAL_SPI_Transmit+0xee>
        hspi->Instance->DR = *((const uint16_t *)hspi->pTxBuffPtr);
 8006192:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 8006194:	f833 1b02 	ldrh.w	r1, [r3], #2
 8006198:	60d1      	str	r1, [r2, #12]
        hspi->pTxBuffPtr += sizeof(uint16_t);
 800619a:	6323      	str	r3, [r4, #48]	@ 0x30
 800619c:	e7d3      	b.n	8006146 <HAL_SPI_Transmit+0x96>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800619e:	f7fd fc89 	bl	8003ab4 <HAL_GetTick>
 80061a2:	eba0 0009 	sub.w	r0, r0, r9
 80061a6:	42b8      	cmp	r0, r7
 80061a8:	d3d1      	bcc.n	800614e <HAL_SPI_Transmit+0x9e>
 80061aa:	1c79      	adds	r1, r7, #1
 80061ac:	d0cf      	beq.n	800614e <HAL_SPI_Transmit+0x9e>
          hspi->State = HAL_SPI_STATE_READY;
 80061ae:	2301      	movs	r3, #1
 80061b0:	f884 3051 	strb.w	r3, [r4, #81]	@ 0x51
          __HAL_UNLOCK(hspi);
 80061b4:	2300      	movs	r3, #0
 80061b6:	f884 3050 	strb.w	r3, [r4, #80]	@ 0x50
          return HAL_TIMEOUT;
 80061ba:	2003      	movs	r0, #3
}
 80061bc:	b003      	add	sp, #12
 80061be:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 80061c2:	b113      	cbz	r3, 80061ca <HAL_SPI_Transmit+0x11a>
 80061c4:	f1b8 0f01 	cmp.w	r8, #1
 80061c8:	d108      	bne.n	80061dc <HAL_SPI_Transmit+0x12c>
      *((__IO uint8_t *)&hspi->Instance->DR) = *((const uint8_t *)hspi->pTxBuffPtr);
 80061ca:	782b      	ldrb	r3, [r5, #0]
 80061cc:	7333      	strb	r3, [r6, #12]
        hspi->pTxBuffPtr += sizeof(uint8_t);
 80061ce:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 80061d0:	3301      	adds	r3, #1
 80061d2:	6323      	str	r3, [r4, #48]	@ 0x30
        hspi->TxXferCount--;
 80061d4:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
 80061d6:	3b01      	subs	r3, #1
 80061d8:	b29b      	uxth	r3, r3
 80061da:	86e3      	strh	r3, [r4, #54]	@ 0x36
    while (hspi->TxXferCount > 0U)
 80061dc:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
 80061de:	b29b      	uxth	r3, r3
 80061e0:	2b00      	cmp	r3, #0
 80061e2:	d0b7      	beq.n	8006154 <HAL_SPI_Transmit+0xa4>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 80061e4:	6823      	ldr	r3, [r4, #0]
 80061e6:	689a      	ldr	r2, [r3, #8]
 80061e8:	0792      	lsls	r2, r2, #30
 80061ea:	d503      	bpl.n	80061f4 <HAL_SPI_Transmit+0x144>
        *((__IO uint8_t *)&hspi->Instance->DR) = *((const uint8_t *)hspi->pTxBuffPtr);
 80061ec:	6b22      	ldr	r2, [r4, #48]	@ 0x30
 80061ee:	7812      	ldrb	r2, [r2, #0]
 80061f0:	731a      	strb	r2, [r3, #12]
 80061f2:	e7ec      	b.n	80061ce <HAL_SPI_Transmit+0x11e>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 80061f4:	f7fd fc5e 	bl	8003ab4 <HAL_GetTick>
 80061f8:	eba0 0009 	sub.w	r0, r0, r9
 80061fc:	42b8      	cmp	r0, r7
 80061fe:	d3ed      	bcc.n	80061dc <HAL_SPI_Transmit+0x12c>
 8006200:	1c7b      	adds	r3, r7, #1
 8006202:	d0eb      	beq.n	80061dc <HAL_SPI_Transmit+0x12c>
 8006204:	e7d3      	b.n	80061ae <HAL_SPI_Transmit+0xfe>
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 8006206:	2320      	movs	r3, #32
 8006208:	6563      	str	r3, [r4, #84]	@ 0x54
 800620a:	e7aa      	b.n	8006162 <HAL_SPI_Transmit+0xb2>
    return HAL_BUSY;
 800620c:	2002      	movs	r0, #2
 800620e:	e7d5      	b.n	80061bc <HAL_SPI_Transmit+0x10c>

08006210 <HAL_SPI_TransmitReceive>:
{
 8006210:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8006214:	4604      	mov	r4, r0
 8006216:	460d      	mov	r5, r1
 8006218:	4691      	mov	r9, r2
 800621a:	461e      	mov	r6, r3
 800621c:	f8dd 8028 	ldr.w	r8, [sp, #40]	@ 0x28
  tickstart = HAL_GetTick();
 8006220:	f7fd fc48 	bl	8003ab4 <HAL_GetTick>
  tmp_state           = hspi->State;
 8006224:	f894 3051 	ldrb.w	r3, [r4, #81]	@ 0x51
  tmp_mode            = hspi->Init.Mode;
 8006228:	6862      	ldr	r2, [r4, #4]
  if (!((tmp_state == HAL_SPI_STATE_READY) || \
 800622a:	2b01      	cmp	r3, #1
  tickstart = HAL_GetTick();
 800622c:	4607      	mov	r7, r0
  tmp_state           = hspi->State;
 800622e:	b2d9      	uxtb	r1, r3
  if (!((tmp_state == HAL_SPI_STATE_READY) || \
 8006230:	d00a      	beq.n	8006248 <HAL_SPI_TransmitReceive+0x38>
 8006232:	f5b2 7f82 	cmp.w	r2, #260	@ 0x104
 8006236:	f040 80e5 	bne.w	8006404 <HAL_SPI_TransmitReceive+0x1f4>
        ((tmp_mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES) && (tmp_state == HAL_SPI_STATE_BUSY_RX))))
 800623a:	68a3      	ldr	r3, [r4, #8]
 800623c:	2b00      	cmp	r3, #0
 800623e:	f040 80e1 	bne.w	8006404 <HAL_SPI_TransmitReceive+0x1f4>
 8006242:	2904      	cmp	r1, #4
 8006244:	f040 80de 	bne.w	8006404 <HAL_SPI_TransmitReceive+0x1f4>
  if ((pTxData == NULL) || (pRxData == NULL) || (Size == 0U))
 8006248:	2d00      	cmp	r5, #0
 800624a:	d04b      	beq.n	80062e4 <HAL_SPI_TransmitReceive+0xd4>
 800624c:	f1b9 0f00 	cmp.w	r9, #0
 8006250:	d048      	beq.n	80062e4 <HAL_SPI_TransmitReceive+0xd4>
 8006252:	2e00      	cmp	r6, #0
 8006254:	d046      	beq.n	80062e4 <HAL_SPI_TransmitReceive+0xd4>
  __HAL_LOCK(hspi);
 8006256:	f894 3050 	ldrb.w	r3, [r4, #80]	@ 0x50
 800625a:	2b01      	cmp	r3, #1
 800625c:	f000 80d2 	beq.w	8006404 <HAL_SPI_TransmitReceive+0x1f4>
 8006260:	2301      	movs	r3, #1
 8006262:	f884 3050 	strb.w	r3, [r4, #80]	@ 0x50
  if (hspi->State != HAL_SPI_STATE_BUSY_RX)
 8006266:	f894 3051 	ldrb.w	r3, [r4, #81]	@ 0x51
  hspi->pRxBuffPtr  = (uint8_t *)pRxData;
 800626a:	f8c4 9038 	str.w	r9, [r4, #56]	@ 0x38
  if (hspi->State != HAL_SPI_STATE_BUSY_RX)
 800626e:	2b04      	cmp	r3, #4
    hspi->State = HAL_SPI_STATE_BUSY_TX_RX;
 8006270:	bf1c      	itt	ne
 8006272:	2305      	movne	r3, #5
 8006274:	f884 3051 	strbne.w	r3, [r4, #81]	@ 0x51
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 8006278:	2300      	movs	r3, #0
 800627a:	6563      	str	r3, [r4, #84]	@ 0x54
  hspi->TxISR       = NULL;
 800627c:	e9c4 3310 	strd	r3, r3, [r4, #64]	@ 0x40
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 8006280:	6823      	ldr	r3, [r4, #0]
  hspi->RxXferCount = Size;
 8006282:	87e6      	strh	r6, [r4, #62]	@ 0x3e
  hspi->TxXferCount = Size;
 8006284:	86e6      	strh	r6, [r4, #54]	@ 0x36
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 8006286:	6819      	ldr	r1, [r3, #0]
  hspi->RxXferSize  = Size;
 8006288:	87a6      	strh	r6, [r4, #60]	@ 0x3c
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800628a:	0649      	lsls	r1, r1, #25
    __HAL_SPI_ENABLE(hspi);
 800628c:	bf58      	it	pl
 800628e:	6819      	ldrpl	r1, [r3, #0]
  hspi->pTxBuffPtr  = (const uint8_t *)pTxData;
 8006290:	6325      	str	r5, [r4, #48]	@ 0x30
    __HAL_SPI_ENABLE(hspi);
 8006292:	bf58      	it	pl
 8006294:	f041 0140 	orrpl.w	r1, r1, #64	@ 0x40
  hspi->TxXferSize  = Size;
 8006298:	86a6      	strh	r6, [r4, #52]	@ 0x34
    __HAL_SPI_ENABLE(hspi);
 800629a:	bf58      	it	pl
 800629c:	6019      	strpl	r1, [r3, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 800629e:	68e1      	ldr	r1, [r4, #12]
 80062a0:	f5b1 6f00 	cmp.w	r1, #2048	@ 0x800
 80062a4:	d155      	bne.n	8006352 <HAL_SPI_TransmitReceive+0x142>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 80062a6:	b10a      	cbz	r2, 80062ac <HAL_SPI_TransmitReceive+0x9c>
 80062a8:	2e01      	cmp	r6, #1
 80062aa:	d107      	bne.n	80062bc <HAL_SPI_TransmitReceive+0xac>
      hspi->Instance->DR = *((const uint16_t *)hspi->pTxBuffPtr);
 80062ac:	f835 2b02 	ldrh.w	r2, [r5], #2
 80062b0:	60da      	str	r2, [r3, #12]
      hspi->TxXferCount--;
 80062b2:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
      hspi->pTxBuffPtr += sizeof(uint16_t);
 80062b4:	6325      	str	r5, [r4, #48]	@ 0x30
      hspi->TxXferCount--;
 80062b6:	3b01      	subs	r3, #1
 80062b8:	b29b      	uxth	r3, r3
 80062ba:	86e3      	strh	r3, [r4, #54]	@ 0x36
        txallowed = 1U;
 80062bc:	2501      	movs	r5, #1
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 80062be:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
 80062c0:	b29b      	uxth	r3, r3
 80062c2:	b98b      	cbnz	r3, 80062e8 <HAL_SPI_TransmitReceive+0xd8>
 80062c4:	8fe3      	ldrh	r3, [r4, #62]	@ 0x3e
 80062c6:	b29b      	uxth	r3, r3
 80062c8:	b973      	cbnz	r3, 80062e8 <HAL_SPI_TransmitReceive+0xd8>
  if (SPI_EndRxTxTransaction(hspi, Timeout, tickstart) != HAL_OK)
 80062ca:	463a      	mov	r2, r7
 80062cc:	4641      	mov	r1, r8
 80062ce:	4620      	mov	r0, r4
 80062d0:	f7ff fe28 	bl	8005f24 <SPI_EndRxTxTransaction>
 80062d4:	2800      	cmp	r0, #0
 80062d6:	f000 8081 	beq.w	80063dc <HAL_SPI_TransmitReceive+0x1cc>
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 80062da:	2320      	movs	r3, #32
 80062dc:	6563      	str	r3, [r4, #84]	@ 0x54
    __HAL_UNLOCK(hspi);
 80062de:	2300      	movs	r3, #0
 80062e0:	f884 3050 	strb.w	r3, [r4, #80]	@ 0x50
    return HAL_ERROR;
 80062e4:	2001      	movs	r0, #1
 80062e6:	e031      	b.n	800634c <HAL_SPI_TransmitReceive+0x13c>
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U))
 80062e8:	6821      	ldr	r1, [r4, #0]
 80062ea:	688b      	ldr	r3, [r1, #8]
 80062ec:	079a      	lsls	r2, r3, #30
 80062ee:	d50d      	bpl.n	800630c <HAL_SPI_TransmitReceive+0xfc>
 80062f0:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
 80062f2:	b29b      	uxth	r3, r3
 80062f4:	b153      	cbz	r3, 800630c <HAL_SPI_TransmitReceive+0xfc>
 80062f6:	b145      	cbz	r5, 800630a <HAL_SPI_TransmitReceive+0xfa>
        hspi->Instance->DR = *((const uint16_t *)hspi->pTxBuffPtr);
 80062f8:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 80062fa:	f833 2b02 	ldrh.w	r2, [r3], #2
 80062fe:	60ca      	str	r2, [r1, #12]
        hspi->pTxBuffPtr += sizeof(uint16_t);
 8006300:	6323      	str	r3, [r4, #48]	@ 0x30
        hspi->TxXferCount--;
 8006302:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
 8006304:	3b01      	subs	r3, #1
 8006306:	b29b      	uxth	r3, r3
 8006308:	86e3      	strh	r3, [r4, #54]	@ 0x36
{
 800630a:	2500      	movs	r5, #0
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 800630c:	688a      	ldr	r2, [r1, #8]
 800630e:	f012 0201 	ands.w	r2, r2, #1
 8006312:	d00c      	beq.n	800632e <HAL_SPI_TransmitReceive+0x11e>
 8006314:	8fe3      	ldrh	r3, [r4, #62]	@ 0x3e
 8006316:	b29b      	uxth	r3, r3
 8006318:	b14b      	cbz	r3, 800632e <HAL_SPI_TransmitReceive+0x11e>
        *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
 800631a:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
 800631c:	68c9      	ldr	r1, [r1, #12]
 800631e:	f823 1b02 	strh.w	r1, [r3], #2
        hspi->pRxBuffPtr += sizeof(uint16_t);
 8006322:	63a3      	str	r3, [r4, #56]	@ 0x38
        hspi->RxXferCount--;
 8006324:	8fe3      	ldrh	r3, [r4, #62]	@ 0x3e
 8006326:	3b01      	subs	r3, #1
 8006328:	b29b      	uxth	r3, r3
 800632a:	87e3      	strh	r3, [r4, #62]	@ 0x3e
        txallowed = 1U;
 800632c:	4615      	mov	r5, r2
      if (((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY))
 800632e:	f7fd fbc1 	bl	8003ab4 <HAL_GetTick>
 8006332:	1bc0      	subs	r0, r0, r7
 8006334:	4540      	cmp	r0, r8
 8006336:	d3c2      	bcc.n	80062be <HAL_SPI_TransmitReceive+0xae>
 8006338:	f1b8 3fff 	cmp.w	r8, #4294967295
 800633c:	d0bf      	beq.n	80062be <HAL_SPI_TransmitReceive+0xae>
        hspi->State = HAL_SPI_STATE_READY;
 800633e:	2301      	movs	r3, #1
 8006340:	f884 3051 	strb.w	r3, [r4, #81]	@ 0x51
        __HAL_UNLOCK(hspi);
 8006344:	2300      	movs	r3, #0
 8006346:	f884 3050 	strb.w	r3, [r4, #80]	@ 0x50
        return HAL_TIMEOUT;
 800634a:	2003      	movs	r0, #3
}
 800634c:	b003      	add	sp, #12
 800634e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 8006352:	b10a      	cbz	r2, 8006358 <HAL_SPI_TransmitReceive+0x148>
 8006354:	2e01      	cmp	r6, #1
 8006356:	d108      	bne.n	800636a <HAL_SPI_TransmitReceive+0x15a>
      *((__IO uint8_t *)&hspi->Instance->DR) = *((const uint8_t *)hspi->pTxBuffPtr);
 8006358:	782a      	ldrb	r2, [r5, #0]
 800635a:	731a      	strb	r2, [r3, #12]
      hspi->pTxBuffPtr += sizeof(uint8_t);
 800635c:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 800635e:	3301      	adds	r3, #1
 8006360:	6323      	str	r3, [r4, #48]	@ 0x30
      hspi->TxXferCount--;
 8006362:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
 8006364:	3b01      	subs	r3, #1
 8006366:	b29b      	uxth	r3, r3
 8006368:	86e3      	strh	r3, [r4, #54]	@ 0x36
        txallowed = 1U;
 800636a:	2501      	movs	r5, #1
 800636c:	e02d      	b.n	80063ca <HAL_SPI_TransmitReceive+0x1ba>
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U))
 800636e:	6822      	ldr	r2, [r4, #0]
 8006370:	6893      	ldr	r3, [r2, #8]
 8006372:	079b      	lsls	r3, r3, #30
 8006374:	d50e      	bpl.n	8006394 <HAL_SPI_TransmitReceive+0x184>
 8006376:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
 8006378:	b29b      	uxth	r3, r3
 800637a:	b15b      	cbz	r3, 8006394 <HAL_SPI_TransmitReceive+0x184>
 800637c:	b14d      	cbz	r5, 8006392 <HAL_SPI_TransmitReceive+0x182>
        *(__IO uint8_t *)&hspi->Instance->DR = *((const uint8_t *)hspi->pTxBuffPtr);
 800637e:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 8006380:	781b      	ldrb	r3, [r3, #0]
 8006382:	7313      	strb	r3, [r2, #12]
        hspi->pTxBuffPtr++;
 8006384:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 8006386:	3301      	adds	r3, #1
 8006388:	6323      	str	r3, [r4, #48]	@ 0x30
        hspi->TxXferCount--;
 800638a:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
 800638c:	3b01      	subs	r3, #1
 800638e:	b29b      	uxth	r3, r3
 8006390:	86e3      	strh	r3, [r4, #54]	@ 0x36
        txallowed = 1U;
 8006392:	2500      	movs	r5, #0
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 8006394:	6822      	ldr	r2, [r4, #0]
 8006396:	6891      	ldr	r1, [r2, #8]
 8006398:	f011 0101 	ands.w	r1, r1, #1
 800639c:	d00d      	beq.n	80063ba <HAL_SPI_TransmitReceive+0x1aa>
 800639e:	8fe3      	ldrh	r3, [r4, #62]	@ 0x3e
 80063a0:	b29b      	uxth	r3, r3
 80063a2:	b153      	cbz	r3, 80063ba <HAL_SPI_TransmitReceive+0x1aa>
        (*(uint8_t *)hspi->pRxBuffPtr) = hspi->Instance->DR;
 80063a4:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
 80063a6:	68d2      	ldr	r2, [r2, #12]
 80063a8:	701a      	strb	r2, [r3, #0]
        hspi->pRxBuffPtr++;
 80063aa:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
 80063ac:	3301      	adds	r3, #1
 80063ae:	63a3      	str	r3, [r4, #56]	@ 0x38
        hspi->RxXferCount--;
 80063b0:	8fe3      	ldrh	r3, [r4, #62]	@ 0x3e
 80063b2:	3b01      	subs	r3, #1
 80063b4:	b29b      	uxth	r3, r3
 80063b6:	87e3      	strh	r3, [r4, #62]	@ 0x3e
        txallowed = 1U;
 80063b8:	460d      	mov	r5, r1
      if ((((HAL_GetTick() - tickstart) >=  Timeout) && ((Timeout != HAL_MAX_DELAY))) || (Timeout == 0U))
 80063ba:	f7fd fb7b 	bl	8003ab4 <HAL_GetTick>
 80063be:	1bc0      	subs	r0, r0, r7
 80063c0:	4540      	cmp	r0, r8
 80063c2:	d302      	bcc.n	80063ca <HAL_SPI_TransmitReceive+0x1ba>
 80063c4:	f1b8 3fff 	cmp.w	r8, #4294967295
 80063c8:	d1b9      	bne.n	800633e <HAL_SPI_TransmitReceive+0x12e>
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 80063ca:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
 80063cc:	b29b      	uxth	r3, r3
 80063ce:	2b00      	cmp	r3, #0
 80063d0:	d1cd      	bne.n	800636e <HAL_SPI_TransmitReceive+0x15e>
 80063d2:	8fe3      	ldrh	r3, [r4, #62]	@ 0x3e
 80063d4:	b29b      	uxth	r3, r3
 80063d6:	2b00      	cmp	r3, #0
 80063d8:	d1c9      	bne.n	800636e <HAL_SPI_TransmitReceive+0x15e>
 80063da:	e776      	b.n	80062ca <HAL_SPI_TransmitReceive+0xba>
  if (hspi->Init.Direction == SPI_DIRECTION_2LINES)
 80063dc:	68a3      	ldr	r3, [r4, #8]
 80063de:	b933      	cbnz	r3, 80063ee <HAL_SPI_TransmitReceive+0x1de>
    __HAL_SPI_CLEAR_OVRFLAG(hspi);
 80063e0:	9301      	str	r3, [sp, #4]
 80063e2:	6823      	ldr	r3, [r4, #0]
 80063e4:	68da      	ldr	r2, [r3, #12]
 80063e6:	9201      	str	r2, [sp, #4]
 80063e8:	689b      	ldr	r3, [r3, #8]
 80063ea:	9301      	str	r3, [sp, #4]
 80063ec:	9b01      	ldr	r3, [sp, #4]
  hspi->State = HAL_SPI_STATE_READY;
 80063ee:	2301      	movs	r3, #1
 80063f0:	f884 3051 	strb.w	r3, [r4, #81]	@ 0x51
  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 80063f4:	6d60      	ldr	r0, [r4, #84]	@ 0x54
  __HAL_UNLOCK(hspi);
 80063f6:	2300      	movs	r3, #0
  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 80063f8:	1ac0      	subs	r0, r0, r3
  __HAL_UNLOCK(hspi);
 80063fa:	f884 3050 	strb.w	r3, [r4, #80]	@ 0x50
  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 80063fe:	bf18      	it	ne
 8006400:	2001      	movne	r0, #1
 8006402:	e7a3      	b.n	800634c <HAL_SPI_TransmitReceive+0x13c>
    return HAL_BUSY;
 8006404:	2002      	movs	r0, #2
 8006406:	e7a1      	b.n	800634c <HAL_SPI_TransmitReceive+0x13c>

08006408 <HAL_SPI_Receive>:
{
 8006408:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 800640c:	461e      	mov	r6, r3
  if (hspi->State != HAL_SPI_STATE_READY)
 800640e:	f890 3051 	ldrb.w	r3, [r0, #81]	@ 0x51
 8006412:	2b01      	cmp	r3, #1
{
 8006414:	4604      	mov	r4, r0
 8006416:	4689      	mov	r9, r1
 8006418:	4617      	mov	r7, r2
  if (hspi->State != HAL_SPI_STATE_READY)
 800641a:	b2dd      	uxtb	r5, r3
 800641c:	d004      	beq.n	8006428 <HAL_SPI_Receive+0x20>
    return HAL_BUSY;
 800641e:	2502      	movs	r5, #2
}
 8006420:	4628      	mov	r0, r5
 8006422:	b003      	add	sp, #12
 8006424:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES))
 8006428:	6843      	ldr	r3, [r0, #4]
 800642a:	f5b3 7f82 	cmp.w	r3, #260	@ 0x104
 800642e:	d10b      	bne.n	8006448 <HAL_SPI_Receive+0x40>
 8006430:	6883      	ldr	r3, [r0, #8]
 8006432:	b94b      	cbnz	r3, 8006448 <HAL_SPI_Receive+0x40>
    hspi->State = HAL_SPI_STATE_BUSY_RX;
 8006434:	2304      	movs	r3, #4
 8006436:	f880 3051 	strb.w	r3, [r0, #81]	@ 0x51
    return HAL_SPI_TransmitReceive(hspi, pData, pData, Size, Timeout);
 800643a:	4613      	mov	r3, r2
 800643c:	9600      	str	r6, [sp, #0]
 800643e:	460a      	mov	r2, r1
 8006440:	f7ff fee6 	bl	8006210 <HAL_SPI_TransmitReceive>
 8006444:	4605      	mov	r5, r0
 8006446:	e7eb      	b.n	8006420 <HAL_SPI_Receive+0x18>
  tickstart = HAL_GetTick();
 8006448:	f7fd fb34 	bl	8003ab4 <HAL_GetTick>
 800644c:	4680      	mov	r8, r0
  if ((pData == NULL) || (Size == 0U))
 800644e:	f1b9 0f00 	cmp.w	r9, #0
 8006452:	d0e5      	beq.n	8006420 <HAL_SPI_Receive+0x18>
 8006454:	2f00      	cmp	r7, #0
 8006456:	d0e3      	beq.n	8006420 <HAL_SPI_Receive+0x18>
  __HAL_LOCK(hspi);
 8006458:	f894 3050 	ldrb.w	r3, [r4, #80]	@ 0x50
 800645c:	2b01      	cmp	r3, #1
 800645e:	d0de      	beq.n	800641e <HAL_SPI_Receive+0x16>
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8006460:	68a2      	ldr	r2, [r4, #8]
  hspi->pRxBuffPtr  = (uint8_t *)pData;
 8006462:	f8c4 9038 	str.w	r9, [r4, #56]	@ 0x38
  __HAL_LOCK(hspi);
 8006466:	2301      	movs	r3, #1
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 8006468:	2500      	movs	r5, #0
  __HAL_LOCK(hspi);
 800646a:	f884 3050 	strb.w	r3, [r4, #80]	@ 0x50
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800646e:	f5b2 4f00 	cmp.w	r2, #32768	@ 0x8000
  hspi->State       = HAL_SPI_STATE_BUSY_RX;
 8006472:	f04f 0304 	mov.w	r3, #4
 8006476:	f884 3051 	strb.w	r3, [r4, #81]	@ 0x51
  hspi->TxISR       = NULL;
 800647a:	e9c4 5510 	strd	r5, r5, [r4, #64]	@ 0x40
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 800647e:	6565      	str	r5, [r4, #84]	@ 0x54
    __HAL_SPI_DISABLE(hspi);
 8006480:	6823      	ldr	r3, [r4, #0]
  hspi->RxXferCount = Size;
 8006482:	87e7      	strh	r7, [r4, #62]	@ 0x3e
  hspi->RxXferSize  = Size;
 8006484:	87a7      	strh	r7, [r4, #60]	@ 0x3c
  hspi->pTxBuffPtr  = (uint8_t *)NULL;
 8006486:	6325      	str	r5, [r4, #48]	@ 0x30
  hspi->TxXferSize  = 0U;
 8006488:	86a5      	strh	r5, [r4, #52]	@ 0x34
  hspi->TxXferCount = 0U;
 800648a:	86e5      	strh	r5, [r4, #54]	@ 0x36
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800648c:	d107      	bne.n	800649e <HAL_SPI_Receive+0x96>
    __HAL_SPI_DISABLE(hspi);
 800648e:	681a      	ldr	r2, [r3, #0]
 8006490:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 8006494:	601a      	str	r2, [r3, #0]
    SPI_1LINE_RX(hspi);
 8006496:	681a      	ldr	r2, [r3, #0]
 8006498:	f422 4280 	bic.w	r2, r2, #16384	@ 0x4000
 800649c:	601a      	str	r2, [r3, #0]
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800649e:	681a      	ldr	r2, [r3, #0]
 80064a0:	0655      	lsls	r5, r2, #25
    __HAL_SPI_ENABLE(hspi);
 80064a2:	bf5e      	ittt	pl
 80064a4:	681a      	ldrpl	r2, [r3, #0]
 80064a6:	f042 0240 	orrpl.w	r2, r2, #64	@ 0x40
 80064aa:	601a      	strpl	r2, [r3, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_8BIT)
 80064ac:	68e3      	ldr	r3, [r4, #12]
 80064ae:	b1f3      	cbz	r3, 80064ee <HAL_SPI_Receive+0xe6>
    while (hspi->RxXferCount > 0U)
 80064b0:	8fe3      	ldrh	r3, [r4, #62]	@ 0x3e
 80064b2:	b29b      	uxth	r3, r3
 80064b4:	b1fb      	cbz	r3, 80064f6 <HAL_SPI_Receive+0xee>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE))
 80064b6:	6823      	ldr	r3, [r4, #0]
 80064b8:	689a      	ldr	r2, [r3, #8]
 80064ba:	07d2      	lsls	r2, r2, #31
 80064bc:	d53c      	bpl.n	8006538 <HAL_SPI_Receive+0x130>
        *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
 80064be:	68da      	ldr	r2, [r3, #12]
 80064c0:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
 80064c2:	f823 2b02 	strh.w	r2, [r3], #2
        hspi->pRxBuffPtr += sizeof(uint16_t);
 80064c6:	63a3      	str	r3, [r4, #56]	@ 0x38
        hspi->RxXferCount--;
 80064c8:	8fe3      	ldrh	r3, [r4, #62]	@ 0x3e
 80064ca:	3b01      	subs	r3, #1
 80064cc:	b29b      	uxth	r3, r3
 80064ce:	87e3      	strh	r3, [r4, #62]	@ 0x3e
 80064d0:	e7ee      	b.n	80064b0 <HAL_SPI_Receive+0xa8>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE))
 80064d2:	6823      	ldr	r3, [r4, #0]
 80064d4:	689a      	ldr	r2, [r3, #8]
 80064d6:	07d0      	lsls	r0, r2, #31
 80064d8:	d51e      	bpl.n	8006518 <HAL_SPI_Receive+0x110>
        (* (uint8_t *)hspi->pRxBuffPtr) = *(__IO uint8_t *)&hspi->Instance->DR;
 80064da:	6ba2      	ldr	r2, [r4, #56]	@ 0x38
 80064dc:	7b1b      	ldrb	r3, [r3, #12]
 80064de:	7013      	strb	r3, [r2, #0]
        hspi->pRxBuffPtr += sizeof(uint8_t);
 80064e0:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
 80064e2:	3301      	adds	r3, #1
 80064e4:	63a3      	str	r3, [r4, #56]	@ 0x38
        hspi->RxXferCount--;
 80064e6:	8fe3      	ldrh	r3, [r4, #62]	@ 0x3e
 80064e8:	3b01      	subs	r3, #1
 80064ea:	b29b      	uxth	r3, r3
 80064ec:	87e3      	strh	r3, [r4, #62]	@ 0x3e
    while (hspi->RxXferCount > 0U)
 80064ee:	8fe3      	ldrh	r3, [r4, #62]	@ 0x3e
 80064f0:	b29b      	uxth	r3, r3
 80064f2:	2b00      	cmp	r3, #0
 80064f4:	d1ed      	bne.n	80064d2 <HAL_SPI_Receive+0xca>
  if (SPI_EndRxTransaction(hspi, Timeout, tickstart) != HAL_OK)
 80064f6:	4642      	mov	r2, r8
 80064f8:	4631      	mov	r1, r6
 80064fa:	4620      	mov	r0, r4
 80064fc:	f7ff fd4e 	bl	8005f9c <SPI_EndRxTransaction>
 8006500:	bb18      	cbnz	r0, 800654a <HAL_SPI_Receive+0x142>
  hspi->State = HAL_SPI_STATE_READY;
 8006502:	2301      	movs	r3, #1
 8006504:	f884 3051 	strb.w	r3, [r4, #81]	@ 0x51
  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 8006508:	6d65      	ldr	r5, [r4, #84]	@ 0x54
  __HAL_UNLOCK(hspi);
 800650a:	2300      	movs	r3, #0
  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 800650c:	1aed      	subs	r5, r5, r3
  __HAL_UNLOCK(hspi);
 800650e:	f884 3050 	strb.w	r3, [r4, #80]	@ 0x50
  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 8006512:	bf18      	it	ne
 8006514:	2501      	movne	r5, #1
 8006516:	e783      	b.n	8006420 <HAL_SPI_Receive+0x18>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 8006518:	f7fd facc 	bl	8003ab4 <HAL_GetTick>
 800651c:	eba0 0008 	sub.w	r0, r0, r8
 8006520:	42b0      	cmp	r0, r6
 8006522:	d3e4      	bcc.n	80064ee <HAL_SPI_Receive+0xe6>
 8006524:	1c71      	adds	r1, r6, #1
 8006526:	d0e2      	beq.n	80064ee <HAL_SPI_Receive+0xe6>
          hspi->State = HAL_SPI_STATE_READY;
 8006528:	2301      	movs	r3, #1
 800652a:	f884 3051 	strb.w	r3, [r4, #81]	@ 0x51
          __HAL_UNLOCK(hspi);
 800652e:	2300      	movs	r3, #0
 8006530:	f884 3050 	strb.w	r3, [r4, #80]	@ 0x50
          return HAL_TIMEOUT;
 8006534:	2503      	movs	r5, #3
 8006536:	e773      	b.n	8006420 <HAL_SPI_Receive+0x18>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 8006538:	f7fd fabc 	bl	8003ab4 <HAL_GetTick>
 800653c:	eba0 0008 	sub.w	r0, r0, r8
 8006540:	42b0      	cmp	r0, r6
 8006542:	d3b5      	bcc.n	80064b0 <HAL_SPI_Receive+0xa8>
 8006544:	1c73      	adds	r3, r6, #1
 8006546:	d0b3      	beq.n	80064b0 <HAL_SPI_Receive+0xa8>
 8006548:	e7ee      	b.n	8006528 <HAL_SPI_Receive+0x120>
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 800654a:	2320      	movs	r3, #32
 800654c:	6563      	str	r3, [r4, #84]	@ 0x54
 800654e:	e7d8      	b.n	8006502 <HAL_SPI_Receive+0xfa>

08006550 <HAL_TIM_Base_MspInit>:
  UNUSED(htim);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_TIM_Base_MspInit could be implemented in the user file
   */
}
 8006550:	4770      	bx	lr
	...

08006554 <HAL_TIM_Base_Start_IT>:

  /* Check the parameters */
  assert_param(IS_TIM_INSTANCE(htim->Instance));

  /* Check the TIM state */
  if (htim->State != HAL_TIM_STATE_READY)
 8006554:	f890 303d 	ldrb.w	r3, [r0, #61]	@ 0x3d
 8006558:	2b01      	cmp	r3, #1
 800655a:	d130      	bne.n	80065be <HAL_TIM_Base_Start_IT+0x6a>
  {
    return HAL_ERROR;
  }

  /* Set the TIM state */
  htim->State = HAL_TIM_STATE_BUSY;
 800655c:	2302      	movs	r3, #2
 800655e:	f880 303d 	strb.w	r3, [r0, #61]	@ 0x3d

  /* Enable the TIM Update interrupt */
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
 8006562:	6803      	ldr	r3, [r0, #0]
 8006564:	68da      	ldr	r2, [r3, #12]
 8006566:	f042 0201 	orr.w	r2, r2, #1
 800656a:	60da      	str	r2, [r3, #12]

  /* Enable the Peripheral, except in trigger mode where enable is automatically done with trigger */
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 800656c:	4a15      	ldr	r2, [pc, #84]	@ (80065c4 <HAL_TIM_Base_Start_IT+0x70>)
 800656e:	4293      	cmp	r3, r2
 8006570:	d01a      	beq.n	80065a8 <HAL_TIM_Base_Start_IT+0x54>
 8006572:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8006576:	d017      	beq.n	80065a8 <HAL_TIM_Base_Start_IT+0x54>
 8006578:	f5a2 427c 	sub.w	r2, r2, #64512	@ 0xfc00
 800657c:	4293      	cmp	r3, r2
 800657e:	d013      	beq.n	80065a8 <HAL_TIM_Base_Start_IT+0x54>
 8006580:	f502 6280 	add.w	r2, r2, #1024	@ 0x400
 8006584:	4293      	cmp	r3, r2
 8006586:	d00f      	beq.n	80065a8 <HAL_TIM_Base_Start_IT+0x54>
 8006588:	f502 6280 	add.w	r2, r2, #1024	@ 0x400
 800658c:	4293      	cmp	r3, r2
 800658e:	d00b      	beq.n	80065a8 <HAL_TIM_Base_Start_IT+0x54>
 8006590:	f502 4278 	add.w	r2, r2, #63488	@ 0xf800
 8006594:	4293      	cmp	r3, r2
 8006596:	d007      	beq.n	80065a8 <HAL_TIM_Base_Start_IT+0x54>
 8006598:	f502 5270 	add.w	r2, r2, #15360	@ 0x3c00
 800659c:	4293      	cmp	r3, r2
 800659e:	d003      	beq.n	80065a8 <HAL_TIM_Base_Start_IT+0x54>
 80065a0:	f5a2 3294 	sub.w	r2, r2, #75776	@ 0x12800
 80065a4:	4293      	cmp	r3, r2
 80065a6:	d104      	bne.n	80065b2 <HAL_TIM_Base_Start_IT+0x5e>
  {
    tmpsmcr = htim->Instance->SMCR & TIM_SMCR_SMS;
 80065a8:	689a      	ldr	r2, [r3, #8]
 80065aa:	f002 0207 	and.w	r2, r2, #7
    if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
 80065ae:	2a06      	cmp	r2, #6
 80065b0:	d003      	beq.n	80065ba <HAL_TIM_Base_Start_IT+0x66>
    {
      __HAL_TIM_ENABLE(htim);
 80065b2:	681a      	ldr	r2, [r3, #0]
 80065b4:	f042 0201 	orr.w	r2, r2, #1
 80065b8:	601a      	str	r2, [r3, #0]
  {
    __HAL_TIM_ENABLE(htim);
  }

  /* Return function status */
  return HAL_OK;
 80065ba:	2000      	movs	r0, #0
 80065bc:	4770      	bx	lr
    return HAL_ERROR;
 80065be:	2001      	movs	r0, #1
}
 80065c0:	4770      	bx	lr
 80065c2:	bf00      	nop
 80065c4:	40010000 	.word	0x40010000

080065c8 <HAL_TIM_OC_DelayElapsedCallback>:
/**
  * @brief  Output Compare callback in non-blocking mode
  * @param  htim TIM OC handle
  * @retval None
  */
__weak void HAL_TIM_OC_DelayElapsedCallback(TIM_HandleTypeDef *htim)
 80065c8:	4770      	bx	lr

080065ca <HAL_TIM_IC_CaptureCallback>:
/**
  * @brief  Input Capture callback in non-blocking mode
  * @param  htim TIM IC handle
  * @retval None
  */
__weak void HAL_TIM_IC_CaptureCallback(TIM_HandleTypeDef *htim)
 80065ca:	4770      	bx	lr

080065cc <HAL_TIM_PWM_PulseFinishedCallback>:
/**
  * @brief  PWM Pulse finished callback in non-blocking mode
  * @param  htim TIM handle
  * @retval None
  */
__weak void HAL_TIM_PWM_PulseFinishedCallback(TIM_HandleTypeDef *htim)
 80065cc:	4770      	bx	lr

080065ce <HAL_TIM_TriggerCallback>:
/**
  * @brief  Hall Trigger detection callback in non-blocking mode
  * @param  htim TIM handle
  * @retval None
  */
__weak void HAL_TIM_TriggerCallback(TIM_HandleTypeDef *htim)
 80065ce:	4770      	bx	lr

080065d0 <HAL_TIM_IRQHandler>:
  uint32_t itsource = htim->Instance->DIER;
 80065d0:	6803      	ldr	r3, [r0, #0]
{
 80065d2:	b570      	push	{r4, r5, r6, lr}
  uint32_t itsource = htim->Instance->DIER;
 80065d4:	68dd      	ldr	r5, [r3, #12]
  uint32_t itflag   = htim->Instance->SR;
 80065d6:	691e      	ldr	r6, [r3, #16]
  if ((itflag & (TIM_FLAG_CC1)) == (TIM_FLAG_CC1))
 80065d8:	07b1      	lsls	r1, r6, #30
{
 80065da:	4604      	mov	r4, r0
  if ((itflag & (TIM_FLAG_CC1)) == (TIM_FLAG_CC1))
 80065dc:	d50d      	bpl.n	80065fa <HAL_TIM_IRQHandler+0x2a>
    if ((itsource & (TIM_IT_CC1)) == (TIM_IT_CC1))
 80065de:	07aa      	lsls	r2, r5, #30
 80065e0:	d50b      	bpl.n	80065fa <HAL_TIM_IRQHandler+0x2a>
        __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_CC1);
 80065e2:	f06f 0202 	mvn.w	r2, #2
 80065e6:	611a      	str	r2, [r3, #16]
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_1;
 80065e8:	2201      	movs	r2, #1
 80065ea:	7702      	strb	r2, [r0, #28]
        if ((htim->Instance->CCMR1 & TIM_CCMR1_CC1S) != 0x00U)
 80065ec:	699b      	ldr	r3, [r3, #24]
 80065ee:	079b      	lsls	r3, r3, #30
 80065f0:	d069      	beq.n	80066c6 <HAL_TIM_IRQHandler+0xf6>
          HAL_TIM_IC_CaptureCallback(htim);
 80065f2:	f7ff ffea 	bl	80065ca <HAL_TIM_IC_CaptureCallback>
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 80065f6:	2300      	movs	r3, #0
 80065f8:	7723      	strb	r3, [r4, #28]
  if ((itflag & (TIM_FLAG_CC2)) == (TIM_FLAG_CC2))
 80065fa:	0771      	lsls	r1, r6, #29
 80065fc:	d510      	bpl.n	8006620 <HAL_TIM_IRQHandler+0x50>
    if ((itsource & (TIM_IT_CC2)) == (TIM_IT_CC2))
 80065fe:	076a      	lsls	r2, r5, #29
 8006600:	d50e      	bpl.n	8006620 <HAL_TIM_IRQHandler+0x50>
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_CC2);
 8006602:	6823      	ldr	r3, [r4, #0]
 8006604:	f06f 0204 	mvn.w	r2, #4
 8006608:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_2;
 800660a:	2202      	movs	r2, #2
 800660c:	7722      	strb	r2, [r4, #28]
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
 800660e:	699b      	ldr	r3, [r3, #24]
 8006610:	f413 7f40 	tst.w	r3, #768	@ 0x300
        HAL_TIM_IC_CaptureCallback(htim);
 8006614:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
 8006616:	d05c      	beq.n	80066d2 <HAL_TIM_IRQHandler+0x102>
        HAL_TIM_IC_CaptureCallback(htim);
 8006618:	f7ff ffd7 	bl	80065ca <HAL_TIM_IC_CaptureCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800661c:	2300      	movs	r3, #0
 800661e:	7723      	strb	r3, [r4, #28]
  if ((itflag & (TIM_FLAG_CC3)) == (TIM_FLAG_CC3))
 8006620:	0733      	lsls	r3, r6, #28
 8006622:	d50f      	bpl.n	8006644 <HAL_TIM_IRQHandler+0x74>
    if ((itsource & (TIM_IT_CC3)) == (TIM_IT_CC3))
 8006624:	0728      	lsls	r0, r5, #28
 8006626:	d50d      	bpl.n	8006644 <HAL_TIM_IRQHandler+0x74>
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_CC3);
 8006628:	6823      	ldr	r3, [r4, #0]
 800662a:	f06f 0208 	mvn.w	r2, #8
 800662e:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_3;
 8006630:	2204      	movs	r2, #4
 8006632:	7722      	strb	r2, [r4, #28]
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
 8006634:	69db      	ldr	r3, [r3, #28]
 8006636:	0799      	lsls	r1, r3, #30
        HAL_TIM_IC_CaptureCallback(htim);
 8006638:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
 800663a:	d050      	beq.n	80066de <HAL_TIM_IRQHandler+0x10e>
        HAL_TIM_IC_CaptureCallback(htim);
 800663c:	f7ff ffc5 	bl	80065ca <HAL_TIM_IC_CaptureCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 8006640:	2300      	movs	r3, #0
 8006642:	7723      	strb	r3, [r4, #28]
  if ((itflag & (TIM_FLAG_CC4)) == (TIM_FLAG_CC4))
 8006644:	06f2      	lsls	r2, r6, #27
 8006646:	d510      	bpl.n	800666a <HAL_TIM_IRQHandler+0x9a>
    if ((itsource & (TIM_IT_CC4)) == (TIM_IT_CC4))
 8006648:	06eb      	lsls	r3, r5, #27
 800664a:	d50e      	bpl.n	800666a <HAL_TIM_IRQHandler+0x9a>
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_CC4);
 800664c:	6823      	ldr	r3, [r4, #0]
 800664e:	f06f 0210 	mvn.w	r2, #16
 8006652:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_4;
 8006654:	2208      	movs	r2, #8
 8006656:	7722      	strb	r2, [r4, #28]
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
 8006658:	69db      	ldr	r3, [r3, #28]
 800665a:	f413 7f40 	tst.w	r3, #768	@ 0x300
        HAL_TIM_IC_CaptureCallback(htim);
 800665e:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
 8006660:	d043      	beq.n	80066ea <HAL_TIM_IRQHandler+0x11a>
        HAL_TIM_IC_CaptureCallback(htim);
 8006662:	f7ff ffb2 	bl	80065ca <HAL_TIM_IC_CaptureCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 8006666:	2300      	movs	r3, #0
 8006668:	7723      	strb	r3, [r4, #28]
  if ((itflag & (TIM_FLAG_UPDATE)) == (TIM_FLAG_UPDATE))
 800666a:	07f0      	lsls	r0, r6, #31
 800666c:	d508      	bpl.n	8006680 <HAL_TIM_IRQHandler+0xb0>
    if ((itsource & (TIM_IT_UPDATE)) == (TIM_IT_UPDATE))
 800666e:	07e9      	lsls	r1, r5, #31
 8006670:	d506      	bpl.n	8006680 <HAL_TIM_IRQHandler+0xb0>
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_UPDATE);
 8006672:	6823      	ldr	r3, [r4, #0]
 8006674:	f06f 0201 	mvn.w	r2, #1
 8006678:	611a      	str	r2, [r3, #16]
      HAL_TIM_PeriodElapsedCallback(htim);
 800667a:	4620      	mov	r0, r4
 800667c:	f7fb fdc8 	bl	8002210 <HAL_TIM_PeriodElapsedCallback>
  if ((itflag & (TIM_FLAG_BREAK)) == (TIM_FLAG_BREAK))
 8006680:	0632      	lsls	r2, r6, #24
 8006682:	d508      	bpl.n	8006696 <HAL_TIM_IRQHandler+0xc6>
    if ((itsource & (TIM_IT_BREAK)) == (TIM_IT_BREAK))
 8006684:	062b      	lsls	r3, r5, #24
 8006686:	d506      	bpl.n	8006696 <HAL_TIM_IRQHandler+0xc6>
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_BREAK);
 8006688:	6823      	ldr	r3, [r4, #0]
 800668a:	f06f 0280 	mvn.w	r2, #128	@ 0x80
 800668e:	611a      	str	r2, [r3, #16]
      HAL_TIMEx_BreakCallback(htim);
 8006690:	4620      	mov	r0, r4
 8006692:	f000 f8b6 	bl	8006802 <HAL_TIMEx_BreakCallback>
  if ((itflag & (TIM_FLAG_TRIGGER)) == (TIM_FLAG_TRIGGER))
 8006696:	0670      	lsls	r0, r6, #25
 8006698:	d508      	bpl.n	80066ac <HAL_TIM_IRQHandler+0xdc>
    if ((itsource & (TIM_IT_TRIGGER)) == (TIM_IT_TRIGGER))
 800669a:	0669      	lsls	r1, r5, #25
 800669c:	d506      	bpl.n	80066ac <HAL_TIM_IRQHandler+0xdc>
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_TRIGGER);
 800669e:	6823      	ldr	r3, [r4, #0]
 80066a0:	f06f 0240 	mvn.w	r2, #64	@ 0x40
 80066a4:	611a      	str	r2, [r3, #16]
      HAL_TIM_TriggerCallback(htim);
 80066a6:	4620      	mov	r0, r4
 80066a8:	f7ff ff91 	bl	80065ce <HAL_TIM_TriggerCallback>
  if ((itflag & (TIM_FLAG_COM)) == (TIM_FLAG_COM))
 80066ac:	06b2      	lsls	r2, r6, #26
 80066ae:	d522      	bpl.n	80066f6 <HAL_TIM_IRQHandler+0x126>
    if ((itsource & (TIM_IT_COM)) == (TIM_IT_COM))
 80066b0:	06ab      	lsls	r3, r5, #26
 80066b2:	d520      	bpl.n	80066f6 <HAL_TIM_IRQHandler+0x126>
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_COM);
 80066b4:	6823      	ldr	r3, [r4, #0]
 80066b6:	f06f 0220 	mvn.w	r2, #32
      HAL_TIMEx_CommutCallback(htim);
 80066ba:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_COM);
 80066bc:	611a      	str	r2, [r3, #16]
}
 80066be:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
      HAL_TIMEx_CommutCallback(htim);
 80066c2:	f000 b89d 	b.w	8006800 <HAL_TIMEx_CommutCallback>
          HAL_TIM_OC_DelayElapsedCallback(htim);
 80066c6:	f7ff ff7f 	bl	80065c8 <HAL_TIM_OC_DelayElapsedCallback>
          HAL_TIM_PWM_PulseFinishedCallback(htim);
 80066ca:	4620      	mov	r0, r4
 80066cc:	f7ff ff7e 	bl	80065cc <HAL_TIM_PWM_PulseFinishedCallback>
 80066d0:	e791      	b.n	80065f6 <HAL_TIM_IRQHandler+0x26>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 80066d2:	f7ff ff79 	bl	80065c8 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 80066d6:	4620      	mov	r0, r4
 80066d8:	f7ff ff78 	bl	80065cc <HAL_TIM_PWM_PulseFinishedCallback>
 80066dc:	e79e      	b.n	800661c <HAL_TIM_IRQHandler+0x4c>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 80066de:	f7ff ff73 	bl	80065c8 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 80066e2:	4620      	mov	r0, r4
 80066e4:	f7ff ff72 	bl	80065cc <HAL_TIM_PWM_PulseFinishedCallback>
 80066e8:	e7aa      	b.n	8006640 <HAL_TIM_IRQHandler+0x70>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 80066ea:	f7ff ff6d 	bl	80065c8 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 80066ee:	4620      	mov	r0, r4
 80066f0:	f7ff ff6c 	bl	80065cc <HAL_TIM_PWM_PulseFinishedCallback>
 80066f4:	e7b7      	b.n	8006666 <HAL_TIM_IRQHandler+0x96>
}
 80066f6:	bd70      	pop	{r4, r5, r6, pc}

080066f8 <TIM_Base_SetConfig>:
{
  uint32_t tmpcr1;
  tmpcr1 = TIMx->CR1;

  /* Set TIM Time Base Unit parameters ---------------------------------------*/
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 80066f8:	4a29      	ldr	r2, [pc, #164]	@ (80067a0 <TIM_Base_SetConfig+0xa8>)
  tmpcr1 = TIMx->CR1;
 80066fa:	6803      	ldr	r3, [r0, #0]
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 80066fc:	4290      	cmp	r0, r2
 80066fe:	d012      	beq.n	8006726 <TIM_Base_SetConfig+0x2e>
 8006700:	f1b0 4f80 	cmp.w	r0, #1073741824	@ 0x40000000
 8006704:	d00f      	beq.n	8006726 <TIM_Base_SetConfig+0x2e>
 8006706:	f5a2 427c 	sub.w	r2, r2, #64512	@ 0xfc00
 800670a:	4290      	cmp	r0, r2
 800670c:	d00b      	beq.n	8006726 <TIM_Base_SetConfig+0x2e>
 800670e:	f502 6280 	add.w	r2, r2, #1024	@ 0x400
 8006712:	4290      	cmp	r0, r2
 8006714:	d007      	beq.n	8006726 <TIM_Base_SetConfig+0x2e>
 8006716:	f502 6280 	add.w	r2, r2, #1024	@ 0x400
 800671a:	4290      	cmp	r0, r2
 800671c:	d003      	beq.n	8006726 <TIM_Base_SetConfig+0x2e>
 800671e:	f502 4278 	add.w	r2, r2, #63488	@ 0xf800
 8006722:	4290      	cmp	r0, r2
 8006724:	d108      	bne.n	8006738 <TIM_Base_SetConfig+0x40>
  {
    /* Select the Counter Mode */
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
    tmpcr1 |= Structure->CounterMode;
 8006726:	684a      	ldr	r2, [r1, #4]
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
 8006728:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
    tmpcr1 |= Structure->CounterMode;
 800672c:	4313      	orrs	r3, r2

  if (IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx))
  {
    /* Set the clock division */
    tmpcr1 &= ~TIM_CR1_CKD;
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 800672e:	68ca      	ldr	r2, [r1, #12]
    tmpcr1 &= ~TIM_CR1_CKD;
 8006730:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 8006734:	4313      	orrs	r3, r2
 8006736:	e016      	b.n	8006766 <TIM_Base_SetConfig+0x6e>
  if (IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx))
 8006738:	4a1a      	ldr	r2, [pc, #104]	@ (80067a4 <TIM_Base_SetConfig+0xac>)
 800673a:	4290      	cmp	r0, r2
 800673c:	d0f7      	beq.n	800672e <TIM_Base_SetConfig+0x36>
 800673e:	f502 6280 	add.w	r2, r2, #1024	@ 0x400
 8006742:	4290      	cmp	r0, r2
 8006744:	d0f3      	beq.n	800672e <TIM_Base_SetConfig+0x36>
 8006746:	f502 6280 	add.w	r2, r2, #1024	@ 0x400
 800674a:	4290      	cmp	r0, r2
 800674c:	d0ef      	beq.n	800672e <TIM_Base_SetConfig+0x36>
 800674e:	f5a2 3298 	sub.w	r2, r2, #77824	@ 0x13000
 8006752:	4290      	cmp	r0, r2
 8006754:	d0eb      	beq.n	800672e <TIM_Base_SetConfig+0x36>
 8006756:	f502 6280 	add.w	r2, r2, #1024	@ 0x400
 800675a:	4290      	cmp	r0, r2
 800675c:	d0e7      	beq.n	800672e <TIM_Base_SetConfig+0x36>
 800675e:	f502 6280 	add.w	r2, r2, #1024	@ 0x400
 8006762:	4290      	cmp	r0, r2
 8006764:	d0e3      	beq.n	800672e <TIM_Base_SetConfig+0x36>
  }

  /* Set the auto-reload preload */
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 8006766:	694a      	ldr	r2, [r1, #20]
 8006768:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 800676c:	4313      	orrs	r3, r2

  TIMx->CR1 = tmpcr1;
 800676e:	6003      	str	r3, [r0, #0]

  /* Set the Autoreload value */
  TIMx->ARR = (uint32_t)Structure->Period ;
 8006770:	688b      	ldr	r3, [r1, #8]
 8006772:	62c3      	str	r3, [r0, #44]	@ 0x2c

  /* Set the Prescaler value */
  TIMx->PSC = Structure->Prescaler;
 8006774:	680b      	ldr	r3, [r1, #0]
 8006776:	6283      	str	r3, [r0, #40]	@ 0x28

  if (IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx))
 8006778:	4b09      	ldr	r3, [pc, #36]	@ (80067a0 <TIM_Base_SetConfig+0xa8>)
 800677a:	4298      	cmp	r0, r3
 800677c:	d003      	beq.n	8006786 <TIM_Base_SetConfig+0x8e>
 800677e:	f503 6380 	add.w	r3, r3, #1024	@ 0x400
 8006782:	4298      	cmp	r0, r3
 8006784:	d101      	bne.n	800678a <TIM_Base_SetConfig+0x92>
  {
    /* Set the Repetition Counter value */
    TIMx->RCR = Structure->RepetitionCounter;
 8006786:	690b      	ldr	r3, [r1, #16]
 8006788:	6303      	str	r3, [r0, #48]	@ 0x30
  }

  /* Generate an update event to reload the Prescaler
     and the repetition counter (only for advanced timer) value immediately */
  TIMx->EGR = TIM_EGR_UG;
 800678a:	2301      	movs	r3, #1
 800678c:	6143      	str	r3, [r0, #20]

  /* Check if the update flag is set after the Update Generation, if so clear the UIF flag */
  if (HAL_IS_BIT_SET(TIMx->SR, TIM_FLAG_UPDATE))
 800678e:	6903      	ldr	r3, [r0, #16]
 8006790:	07db      	lsls	r3, r3, #31
  {
    /* Clear the update flag */
    CLEAR_BIT(TIMx->SR, TIM_FLAG_UPDATE);
 8006792:	bf42      	ittt	mi
 8006794:	6903      	ldrmi	r3, [r0, #16]
 8006796:	f023 0301 	bicmi.w	r3, r3, #1
 800679a:	6103      	strmi	r3, [r0, #16]
  }
}
 800679c:	4770      	bx	lr
 800679e:	bf00      	nop
 80067a0:	40010000 	.word	0x40010000
 80067a4:	40014000 	.word	0x40014000

080067a8 <HAL_TIM_Base_Init>:
{
 80067a8:	b510      	push	{r4, lr}
  if (htim == NULL)
 80067aa:	4604      	mov	r4, r0
 80067ac:	b330      	cbz	r0, 80067fc <HAL_TIM_Base_Init+0x54>
  if (htim->State == HAL_TIM_STATE_RESET)
 80067ae:	f890 303d 	ldrb.w	r3, [r0, #61]	@ 0x3d
 80067b2:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
 80067b6:	b91b      	cbnz	r3, 80067c0 <HAL_TIM_Base_Init+0x18>
    htim->Lock = HAL_UNLOCKED;
 80067b8:	f880 203c 	strb.w	r2, [r0, #60]	@ 0x3c
    HAL_TIM_Base_MspInit(htim);
 80067bc:	f7ff fec8 	bl	8006550 <HAL_TIM_Base_MspInit>
  htim->State = HAL_TIM_STATE_BUSY;
 80067c0:	2302      	movs	r3, #2
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 80067c2:	6820      	ldr	r0, [r4, #0]
  htim->State = HAL_TIM_STATE_BUSY;
 80067c4:	f884 303d 	strb.w	r3, [r4, #61]	@ 0x3d
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 80067c8:	1d21      	adds	r1, r4, #4
 80067ca:	f7ff ff95 	bl	80066f8 <TIM_Base_SetConfig>
  htim->DMABurstState = HAL_DMA_BURST_STATE_READY;
 80067ce:	2301      	movs	r3, #1
 80067d0:	f884 3046 	strb.w	r3, [r4, #70]	@ 0x46
  return HAL_OK;
 80067d4:	2000      	movs	r0, #0
  TIM_CHANNEL_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 80067d6:	f884 303e 	strb.w	r3, [r4, #62]	@ 0x3e
 80067da:	f884 303f 	strb.w	r3, [r4, #63]	@ 0x3f
 80067de:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
 80067e2:	f884 3041 	strb.w	r3, [r4, #65]	@ 0x41
  TIM_CHANNEL_N_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 80067e6:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
 80067ea:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 80067ee:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
 80067f2:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
  htim->State = HAL_TIM_STATE_READY;
 80067f6:	f884 303d 	strb.w	r3, [r4, #61]	@ 0x3d
}
 80067fa:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 80067fc:	2001      	movs	r0, #1
 80067fe:	e7fc      	b.n	80067fa <HAL_TIM_Base_Init+0x52>

08006800 <HAL_TIMEx_CommutCallback>:
/**
  * @brief  Commutation callback in non-blocking mode
  * @param  htim TIM handle
  * @retval None
  */
__weak void HAL_TIMEx_CommutCallback(TIM_HandleTypeDef *htim)
 8006800:	4770      	bx	lr

08006802 <HAL_TIMEx_BreakCallback>:
/**
  * @brief  Break detection callback in non-blocking mode
  * @param  htim TIM handle
  * @retval None
  */
__weak void HAL_TIMEx_BreakCallback(TIM_HandleTypeDef *htim)
 8006802:	4770      	bx	lr

08006804 <FMC_SDRAM_Init>:
  * @param  Device Pointer to SDRAM device instance
  * @param  Init Pointer to SDRAM Initialization structure
  * @retval HAL status
  */
HAL_StatusTypeDef FMC_SDRAM_Init(FMC_SDRAM_TypeDef *Device, FMC_SDRAM_InitTypeDef *Init)
{
 8006804:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  assert_param(IS_FMC_READPIPE_DELAY(Init->ReadPipeDelay));

  /* Set SDRAM bank configuration parameters */
  if (Init->SDBank == FMC_SDRAM_BANK1)
  {
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
 8006808:	e9d1 3807 	ldrd	r3, r8, [r1, #28]
 800680c:	e9d1 2c01 	ldrd	r2, ip, [r1, #4]
 8006810:	e9d1 7603 	ldrd	r7, r6, [r1, #12]
 8006814:	e9d1 5405 	ldrd	r5, r4, [r1, #20]
 8006818:	f8d1 e024 	ldr.w	lr, [r1, #36]	@ 0x24
  if (Init->SDBank == FMC_SDRAM_BANK1)
 800681c:	6809      	ldr	r1, [r1, #0]
 800681e:	ea43 0308 	orr.w	r3, r3, r8
 8006822:	b981      	cbnz	r1, 8006846 <FMC_SDRAM_Init+0x42>
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
 8006824:	ea43 030e 	orr.w	r3, r3, lr
 8006828:	4313      	orrs	r3, r2
 800682a:	ea43 030c 	orr.w	r3, r3, ip
 800682e:	433b      	orrs	r3, r7
 8006830:	6801      	ldr	r1, [r0, #0]
 8006832:	4333      	orrs	r3, r6
 8006834:	432b      	orrs	r3, r5
 8006836:	4323      	orrs	r3, r4
 8006838:	f36f 010e 	bfc	r1, #0, #15
 800683c:	430b      	orrs	r3, r1
 800683e:	6003      	str	r3, [r0, #0]
                Init->CASLatency         |
                Init->WriteProtection));
  }

  return HAL_OK;
}
 8006840:	2000      	movs	r0, #0
 8006842:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
 8006846:	6801      	ldr	r1, [r0, #0]
 8006848:	ea43 030e 	orr.w	r3, r3, lr
 800684c:	f421 41f8 	bic.w	r1, r1, #31744	@ 0x7c00
 8006850:	430b      	orrs	r3, r1
 8006852:	6003      	str	r3, [r0, #0]
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK2],
 8006854:	ea42 030c 	orr.w	r3, r2, ip
 8006858:	6841      	ldr	r1, [r0, #4]
 800685a:	433b      	orrs	r3, r7
 800685c:	4333      	orrs	r3, r6
 800685e:	432b      	orrs	r3, r5
 8006860:	f421 42ff 	bic.w	r2, r1, #32640	@ 0x7f80
 8006864:	4323      	orrs	r3, r4
 8006866:	f022 027f 	bic.w	r2, r2, #127	@ 0x7f
 800686a:	4313      	orrs	r3, r2
 800686c:	6043      	str	r3, [r0, #4]
 800686e:	e7e7      	b.n	8006840 <FMC_SDRAM_Init+0x3c>

08006870 <FMC_SDRAM_Timing_Init>:
  assert_param(IS_FMC_SDRAM_BANK(Bank));

  /* Set SDRAM device timing parameters */
  if (Bank == FMC_SDRAM_BANK1)
  {
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 8006870:	68cb      	ldr	r3, [r1, #12]
 8006872:	f103 3cff 	add.w	ip, r3, #4294967295
 8006876:	694b      	ldr	r3, [r1, #20]
{
 8006878:	b5f0      	push	{r4, r5, r6, r7, lr}
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 800687a:	684c      	ldr	r4, [r1, #4]
 800687c:	688f      	ldr	r7, [r1, #8]
 800687e:	690e      	ldr	r6, [r1, #16]
 8006880:	698d      	ldr	r5, [r1, #24]
 8006882:	6809      	ldr	r1, [r1, #0]
 8006884:	3b01      	subs	r3, #1
 8006886:	051b      	lsls	r3, r3, #20
 8006888:	3c01      	subs	r4, #1
 800688a:	3f01      	subs	r7, #1
 800688c:	3e01      	subs	r6, #1
 800688e:	3d01      	subs	r5, #1
 8006890:	0124      	lsls	r4, r4, #4
 8006892:	023f      	lsls	r7, r7, #8
 8006894:	0436      	lsls	r6, r6, #16
 8006896:	062d      	lsls	r5, r5, #24
 8006898:	3901      	subs	r1, #1
 800689a:	ea43 330c 	orr.w	r3, r3, ip, lsl #12
  if (Bank == FMC_SDRAM_BANK1)
 800689e:	b95a      	cbnz	r2, 80068b8 <FMC_SDRAM_Timing_Init+0x48>
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 80068a0:	430b      	orrs	r3, r1
 80068a2:	4323      	orrs	r3, r4
 80068a4:	6882      	ldr	r2, [r0, #8]
 80068a6:	433b      	orrs	r3, r7
 80068a8:	4333      	orrs	r3, r6
 80068aa:	432b      	orrs	r3, r5
 80068ac:	f002 4270 	and.w	r2, r2, #4026531840	@ 0xf0000000
 80068b0:	4313      	orrs	r3, r2
 80068b2:	6083      	str	r3, [r0, #8]
                (((Timing->WriteRecoveryTime) - 1U)    << FMC_SDTR1_TWR_Pos)  |
                (((Timing->RCDDelay) - 1U)             << FMC_SDTR1_TRCD_Pos)));
  }

  return HAL_OK;
}
 80068b4:	2000      	movs	r0, #0
 80068b6:	bdf0      	pop	{r4, r5, r6, r7, pc}
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 80068b8:	6882      	ldr	r2, [r0, #8]
 80068ba:	f422 0270 	bic.w	r2, r2, #15728640	@ 0xf00000
 80068be:	f422 4270 	bic.w	r2, r2, #61440	@ 0xf000
 80068c2:	4313      	orrs	r3, r2
 80068c4:	6083      	str	r3, [r0, #8]
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK2],
 80068c6:	ea44 0307 	orr.w	r3, r4, r7
 80068ca:	68c2      	ldr	r2, [r0, #12]
 80068cc:	430b      	orrs	r3, r1
 80068ce:	4333      	orrs	r3, r6
 80068d0:	432b      	orrs	r3, r5
 80068d2:	f002 4270 	and.w	r2, r2, #4026531840	@ 0xf0000000
 80068d6:	4313      	orrs	r3, r2
 80068d8:	60c3      	str	r3, [r0, #12]
 80068da:	e7eb      	b.n	80068b4 <FMC_SDRAM_Timing_Init+0x44>

080068dc <FMC_SDRAM_SendCommand>:
  * @param  Timeout Timeout wait value
  * @retval HAL state
  */
HAL_StatusTypeDef FMC_SDRAM_SendCommand(FMC_SDRAM_TypeDef *Device,
                                        FMC_SDRAM_CommandTypeDef *Command, uint32_t Timeout)
{
 80068dc:	b570      	push	{r4, r5, r6, lr}
 80068de:	4604      	mov	r4, r0
 80068e0:	4615      	mov	r5, r2
  assert_param(IS_FMC_COMMAND_TARGET(Command->CommandTarget));
  assert_param(IS_FMC_AUTOREFRESH_NUMBER(Command->AutoRefreshNumber));
  assert_param(IS_FMC_MODE_REGISTER(Command->ModeRegisterDefinition));

  /* Set command register */
  MODIFY_REG(Device->SDCMR, (FMC_SDCMR_MODE | FMC_SDCMR_CTB2 | FMC_SDCMR_CTB1 | FMC_SDCMR_NRFS | FMC_SDCMR_MRD),
 80068e2:	6902      	ldr	r2, [r0, #16]
 80068e4:	e9d1 3000 	ldrd	r3, r0, [r1]
 80068e8:	4303      	orrs	r3, r0
 80068ea:	68c8      	ldr	r0, [r1, #12]
 80068ec:	f36f 0215 	bfc	r2, #0, #22
 80068f0:	ea43 2340 	orr.w	r3, r3, r0, lsl #9
 80068f4:	4313      	orrs	r3, r2
 80068f6:	688a      	ldr	r2, [r1, #8]
 80068f8:	3a01      	subs	r2, #1
 80068fa:	ea43 1342 	orr.w	r3, r3, r2, lsl #5
 80068fe:	6123      	str	r3, [r4, #16]
             ((Command->CommandMode) | (Command->CommandTarget) |
              (((Command->AutoRefreshNumber) - 1U) << FMC_SDCMR_NRFS_Pos) |
              ((Command->ModeRegisterDefinition) << FMC_SDCMR_MRD_Pos)));
  /* Get tick */
  tickstart = HAL_GetTick();
 8006900:	f7fd f8d8 	bl	8003ab4 <HAL_GetTick>
 8006904:	4606      	mov	r6, r0

  /* wait until command is send */
  while (HAL_IS_BIT_SET(Device->SDSR, FMC_SDSR_BUSY))
 8006906:	69a0      	ldr	r0, [r4, #24]
 8006908:	f010 0020 	ands.w	r0, r0, #32
 800690c:	d003      	beq.n	8006916 <FMC_SDRAM_SendCommand+0x3a>
  {
    /* Check for the Timeout */
    if (Timeout != HAL_MAX_DELAY)
 800690e:	1c6b      	adds	r3, r5, #1
 8006910:	d0f9      	beq.n	8006906 <FMC_SDRAM_SendCommand+0x2a>
    {
      if ((Timeout == 0U) || ((HAL_GetTick() - tickstart) > Timeout))
 8006912:	b90d      	cbnz	r5, 8006918 <FMC_SDRAM_SendCommand+0x3c>
      {
        return HAL_TIMEOUT;
 8006914:	2003      	movs	r0, #3
      }
    }
  }
  return HAL_OK;
}
 8006916:	bd70      	pop	{r4, r5, r6, pc}
      if ((Timeout == 0U) || ((HAL_GetTick() - tickstart) > Timeout))
 8006918:	f7fd f8cc 	bl	8003ab4 <HAL_GetTick>
 800691c:	1b80      	subs	r0, r0, r6
 800691e:	42a8      	cmp	r0, r5
 8006920:	d9f1      	bls.n	8006906 <FMC_SDRAM_SendCommand+0x2a>
 8006922:	e7f7      	b.n	8006914 <FMC_SDRAM_SendCommand+0x38>

08006924 <FMC_SDRAM_ProgramRefreshRate>:
  /* Check the parameters */
  assert_param(IS_FMC_SDRAM_DEVICE(Device));
  assert_param(IS_FMC_REFRESH_RATE(RefreshRate));

  /* Set the refresh rate in command register */
  MODIFY_REG(Device->SDRTR, FMC_SDRTR_COUNT, (RefreshRate << FMC_SDRTR_COUNT_Pos));
 8006924:	6943      	ldr	r3, [r0, #20]
 8006926:	f36f 034d 	bfc	r3, #1, #13
 800692a:	ea43 0341 	orr.w	r3, r3, r1, lsl #1
 800692e:	6143      	str	r3, [r0, #20]

  return HAL_OK;
}
 8006930:	2000      	movs	r0, #0
 8006932:	4770      	bx	lr

08006934 <USB_CoreReset>:
  * @brief  Reset the USB Core (needed after USB clock settings change)
  * @param  USBx  Selected device
  * @retval HAL status
  */
static HAL_StatusTypeDef USB_CoreReset(USB_OTG_GlobalTypeDef *USBx)
{
 8006934:	b082      	sub	sp, #8
  __IO uint32_t count = 0U;
 8006936:	2300      	movs	r3, #0
{
 8006938:	4602      	mov	r2, r0
  __IO uint32_t count = 0U;
 800693a:	9301      	str	r3, [sp, #4]

  /* Wait for AHB master IDLE state. */
  do
  {
    count++;
 800693c:	9b01      	ldr	r3, [sp, #4]
 800693e:	3301      	adds	r3, #1
 8006940:	9301      	str	r3, [sp, #4]

    if (count > HAL_USB_TIMEOUT)
 8006942:	9b01      	ldr	r3, [sp, #4]
 8006944:	f1b3 6f70 	cmp.w	r3, #251658240	@ 0xf000000
 8006948:	d815      	bhi.n	8006976 <USB_CoreReset+0x42>
    {
      return HAL_TIMEOUT;
    }
  } while ((USBx->GRSTCTL & USB_OTG_GRSTCTL_AHBIDL) == 0U);
 800694a:	6913      	ldr	r3, [r2, #16]
 800694c:	2b00      	cmp	r3, #0
 800694e:	daf5      	bge.n	800693c <USB_CoreReset+0x8>

  /* Core Soft Reset */
  count = 0U;
 8006950:	2300      	movs	r3, #0
 8006952:	9301      	str	r3, [sp, #4]
  USBx->GRSTCTL |= USB_OTG_GRSTCTL_CSRST;
 8006954:	6913      	ldr	r3, [r2, #16]
 8006956:	f043 0301 	orr.w	r3, r3, #1
 800695a:	6113      	str	r3, [r2, #16]

  do
  {
    count++;
 800695c:	9b01      	ldr	r3, [sp, #4]
 800695e:	3301      	adds	r3, #1
 8006960:	9301      	str	r3, [sp, #4]

    if (count > HAL_USB_TIMEOUT)
 8006962:	9b01      	ldr	r3, [sp, #4]
 8006964:	f1b3 6f70 	cmp.w	r3, #251658240	@ 0xf000000
 8006968:	d805      	bhi.n	8006976 <USB_CoreReset+0x42>
    {
      return HAL_TIMEOUT;
    }
  } while ((USBx->GRSTCTL & USB_OTG_GRSTCTL_CSRST) == USB_OTG_GRSTCTL_CSRST);
 800696a:	6910      	ldr	r0, [r2, #16]
 800696c:	f010 0001 	ands.w	r0, r0, #1
 8006970:	d1f4      	bne.n	800695c <USB_CoreReset+0x28>

  return HAL_OK;
}
 8006972:	b002      	add	sp, #8
 8006974:	4770      	bx	lr
      return HAL_TIMEOUT;
 8006976:	2003      	movs	r0, #3
 8006978:	e7fb      	b.n	8006972 <USB_CoreReset+0x3e>

0800697a <USB_CoreInit>:
{
 800697a:	b084      	sub	sp, #16
 800697c:	b538      	push	{r3, r4, r5, lr}
 800697e:	ad05      	add	r5, sp, #20
 8006980:	e885 000e 	stmia.w	r5, {r1, r2, r3}
  if (cfg.phy_itface == USB_OTG_ULPI_PHY)
 8006984:	f89d 3019 	ldrb.w	r3, [sp, #25]
 8006988:	2b01      	cmp	r3, #1
{
 800698a:	4604      	mov	r4, r0
  if (cfg.phy_itface == USB_OTG_ULPI_PHY)
 800698c:	d127      	bne.n	80069de <USB_CoreInit+0x64>
    USBx->GCCFG &= ~(USB_OTG_GCCFG_PWRDWN);
 800698e:	6b83      	ldr	r3, [r0, #56]	@ 0x38
 8006990:	f423 3380 	bic.w	r3, r3, #65536	@ 0x10000
 8006994:	6383      	str	r3, [r0, #56]	@ 0x38
    USBx->GUSBCFG &= ~(USB_OTG_GUSBCFG_TSDPS | USB_OTG_GUSBCFG_ULPIFSLS | USB_OTG_GUSBCFG_PHYSEL);
 8006996:	68c3      	ldr	r3, [r0, #12]
 8006998:	f423 0384 	bic.w	r3, r3, #4325376	@ 0x420000
 800699c:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 80069a0:	60c3      	str	r3, [r0, #12]
    USBx->GUSBCFG &= ~(USB_OTG_GUSBCFG_ULPIEVBUSD | USB_OTG_GUSBCFG_ULPIEVBUSI);
 80069a2:	68c3      	ldr	r3, [r0, #12]
 80069a4:	f423 1340 	bic.w	r3, r3, #3145728	@ 0x300000
 80069a8:	60c3      	str	r3, [r0, #12]
    if (cfg.use_external_vbus == 1U)
 80069aa:	f89d 3020 	ldrb.w	r3, [sp, #32]
 80069ae:	2b01      	cmp	r3, #1
      USBx->GUSBCFG |= USB_OTG_GUSBCFG_ULPIEVBUSD;
 80069b0:	bf02      	ittt	eq
 80069b2:	68c3      	ldreq	r3, [r0, #12]
 80069b4:	f443 1380 	orreq.w	r3, r3, #1048576	@ 0x100000
 80069b8:	60c3      	streq	r3, [r0, #12]
    ret = USB_CoreReset(USBx);
 80069ba:	f7ff ffbb 	bl	8006934 <USB_CoreReset>
  if (cfg.dma_enable == 1U)
 80069be:	f89d 3016 	ldrb.w	r3, [sp, #22]
 80069c2:	2b01      	cmp	r3, #1
 80069c4:	d107      	bne.n	80069d6 <USB_CoreInit+0x5c>
    USBx->GAHBCFG |= USB_OTG_GAHBCFG_HBSTLEN_2;
 80069c6:	68a3      	ldr	r3, [r4, #8]
 80069c8:	f043 0306 	orr.w	r3, r3, #6
 80069cc:	60a3      	str	r3, [r4, #8]
    USBx->GAHBCFG |= USB_OTG_GAHBCFG_DMAEN;
 80069ce:	68a3      	ldr	r3, [r4, #8]
 80069d0:	f043 0320 	orr.w	r3, r3, #32
 80069d4:	60a3      	str	r3, [r4, #8]
}
 80069d6:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80069da:	b004      	add	sp, #16
 80069dc:	4770      	bx	lr
    USBx->GUSBCFG |= USB_OTG_GUSBCFG_PHYSEL;
 80069de:	68c3      	ldr	r3, [r0, #12]
 80069e0:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 80069e4:	60c3      	str	r3, [r0, #12]
    ret = USB_CoreReset(USBx);
 80069e6:	f7ff ffa5 	bl	8006934 <USB_CoreReset>
    if (cfg.battery_charging_enable == 0U)
 80069ea:	f89d 301d 	ldrb.w	r3, [sp, #29]
 80069ee:	b923      	cbnz	r3, 80069fa <USB_CoreInit+0x80>
      USBx->GCCFG |= USB_OTG_GCCFG_PWRDWN;
 80069f0:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
 80069f2:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
      USBx->GCCFG &= ~(USB_OTG_GCCFG_PWRDWN);
 80069f6:	63a3      	str	r3, [r4, #56]	@ 0x38
 80069f8:	e7e1      	b.n	80069be <USB_CoreInit+0x44>
 80069fa:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
 80069fc:	f423 3380 	bic.w	r3, r3, #65536	@ 0x10000
 8006a00:	e7f9      	b.n	80069f6 <USB_CoreInit+0x7c>
	...

08006a04 <USB_SetTurnaroundTime>:
  if (speed == USBD_FS_SPEED)
 8006a04:	2a02      	cmp	r2, #2
 8006a06:	d14a      	bne.n	8006a9e <USB_SetTurnaroundTime+0x9a>
    if ((hclk >= 14200000U) && (hclk < 15000000U))
 8006a08:	4b27      	ldr	r3, [pc, #156]	@ (8006aa8 <USB_SetTurnaroundTime+0xa4>)
 8006a0a:	4a28      	ldr	r2, [pc, #160]	@ (8006aac <USB_SetTurnaroundTime+0xa8>)
 8006a0c:	440b      	add	r3, r1
 8006a0e:	4293      	cmp	r3, r2
 8006a10:	d939      	bls.n	8006a86 <USB_SetTurnaroundTime+0x82>
    else if ((hclk >= 15000000U) && (hclk < 16000000U))
 8006a12:	4b27      	ldr	r3, [pc, #156]	@ (8006ab0 <USB_SetTurnaroundTime+0xac>)
 8006a14:	4a27      	ldr	r2, [pc, #156]	@ (8006ab4 <USB_SetTurnaroundTime+0xb0>)
 8006a16:	440b      	add	r3, r1
 8006a18:	4293      	cmp	r3, r2
 8006a1a:	d936      	bls.n	8006a8a <USB_SetTurnaroundTime+0x86>
    else if ((hclk >= 16000000U) && (hclk < 17200000U))
 8006a1c:	4a26      	ldr	r2, [pc, #152]	@ (8006ab8 <USB_SetTurnaroundTime+0xb4>)
 8006a1e:	f5a1 0374 	sub.w	r3, r1, #15990784	@ 0xf40000
 8006a22:	f5a3 5310 	sub.w	r3, r3, #9216	@ 0x2400
 8006a26:	4293      	cmp	r3, r2
 8006a28:	d931      	bls.n	8006a8e <USB_SetTurnaroundTime+0x8a>
    else if ((hclk >= 17200000U) && (hclk < 18500000U))
 8006a2a:	4a24      	ldr	r2, [pc, #144]	@ (8006abc <USB_SetTurnaroundTime+0xb8>)
 8006a2c:	f1a1 7383 	sub.w	r3, r1, #17170432	@ 0x1060000
 8006a30:	f5a3 43e7 	sub.w	r3, r3, #29568	@ 0x7380
 8006a34:	4293      	cmp	r3, r2
 8006a36:	d32c      	bcc.n	8006a92 <USB_SetTurnaroundTime+0x8e>
    else if ((hclk >= 18500000U) && (hclk < 20000000U))
 8006a38:	4b21      	ldr	r3, [pc, #132]	@ (8006ac0 <USB_SetTurnaroundTime+0xbc>)
 8006a3a:	4a22      	ldr	r2, [pc, #136]	@ (8006ac4 <USB_SetTurnaroundTime+0xc0>)
 8006a3c:	440b      	add	r3, r1
 8006a3e:	4293      	cmp	r3, r2
 8006a40:	d929      	bls.n	8006a96 <USB_SetTurnaroundTime+0x92>
    else if ((hclk >= 20000000U) && (hclk < 21800000U))
 8006a42:	4b21      	ldr	r3, [pc, #132]	@ (8006ac8 <USB_SetTurnaroundTime+0xc4>)
 8006a44:	4a21      	ldr	r2, [pc, #132]	@ (8006acc <USB_SetTurnaroundTime+0xc8>)
 8006a46:	440b      	add	r3, r1
 8006a48:	4293      	cmp	r3, r2
 8006a4a:	d326      	bcc.n	8006a9a <USB_SetTurnaroundTime+0x96>
    else if ((hclk >= 21800000U) && (hclk < 24000000U))
 8006a4c:	4b20      	ldr	r3, [pc, #128]	@ (8006ad0 <USB_SetTurnaroundTime+0xcc>)
 8006a4e:	4a21      	ldr	r2, [pc, #132]	@ (8006ad4 <USB_SetTurnaroundTime+0xd0>)
 8006a50:	440b      	add	r3, r1
 8006a52:	4293      	cmp	r3, r2
 8006a54:	d323      	bcc.n	8006a9e <USB_SetTurnaroundTime+0x9a>
    else if ((hclk >= 24000000U) && (hclk < 27700000U))
 8006a56:	4a20      	ldr	r2, [pc, #128]	@ (8006ad8 <USB_SetTurnaroundTime+0xd4>)
 8006a58:	f1a1 73b7 	sub.w	r3, r1, #23986176	@ 0x16e0000
 8006a5c:	f5a3 5358 	sub.w	r3, r3, #13824	@ 0x3600
 8006a60:	4293      	cmp	r3, r2
 8006a62:	d31e      	bcc.n	8006aa2 <USB_SetTurnaroundTime+0x9e>
    else if ((hclk >= 27700000U) && (hclk < 32000000U))
 8006a64:	4b1d      	ldr	r3, [pc, #116]	@ (8006adc <USB_SetTurnaroundTime+0xd8>)
      UsbTrd = 0x7U;
 8006a66:	4a1e      	ldr	r2, [pc, #120]	@ (8006ae0 <USB_SetTurnaroundTime+0xdc>)
    else if ((hclk >= 27700000U) && (hclk < 32000000U))
 8006a68:	440b      	add	r3, r1
      UsbTrd = 0x7U;
 8006a6a:	4293      	cmp	r3, r2
 8006a6c:	bf2c      	ite	cs
 8006a6e:	2306      	movcs	r3, #6
 8006a70:	2307      	movcc	r3, #7
  USBx->GUSBCFG &= ~USB_OTG_GUSBCFG_TRDT;
 8006a72:	68c2      	ldr	r2, [r0, #12]
 8006a74:	f422 5270 	bic.w	r2, r2, #15360	@ 0x3c00
 8006a78:	60c2      	str	r2, [r0, #12]
  USBx->GUSBCFG |= (uint32_t)((UsbTrd << 10) & USB_OTG_GUSBCFG_TRDT);
 8006a7a:	68c2      	ldr	r2, [r0, #12]
 8006a7c:	ea42 2383 	orr.w	r3, r2, r3, lsl #10
 8006a80:	60c3      	str	r3, [r0, #12]
}
 8006a82:	2000      	movs	r0, #0
 8006a84:	4770      	bx	lr
      UsbTrd = 0xFU;
 8006a86:	230f      	movs	r3, #15
 8006a88:	e7f3      	b.n	8006a72 <USB_SetTurnaroundTime+0x6e>
      UsbTrd = 0xEU;
 8006a8a:	230e      	movs	r3, #14
 8006a8c:	e7f1      	b.n	8006a72 <USB_SetTurnaroundTime+0x6e>
      UsbTrd = 0xDU;
 8006a8e:	230d      	movs	r3, #13
 8006a90:	e7ef      	b.n	8006a72 <USB_SetTurnaroundTime+0x6e>
      UsbTrd = 0xCU;
 8006a92:	230c      	movs	r3, #12
 8006a94:	e7ed      	b.n	8006a72 <USB_SetTurnaroundTime+0x6e>
      UsbTrd = 0xBU;
 8006a96:	230b      	movs	r3, #11
 8006a98:	e7eb      	b.n	8006a72 <USB_SetTurnaroundTime+0x6e>
      UsbTrd = 0xAU;
 8006a9a:	230a      	movs	r3, #10
 8006a9c:	e7e9      	b.n	8006a72 <USB_SetTurnaroundTime+0x6e>
    UsbTrd = USBD_HS_TRDT_VALUE;
 8006a9e:	2309      	movs	r3, #9
 8006aa0:	e7e7      	b.n	8006a72 <USB_SetTurnaroundTime+0x6e>
      UsbTrd = 0x8U;
 8006aa2:	2308      	movs	r3, #8
 8006aa4:	e7e5      	b.n	8006a72 <USB_SetTurnaroundTime+0x6e>
 8006aa6:	bf00      	nop
 8006aa8:	ff275340 	.word	0xff275340
 8006aac:	000c34ff 	.word	0x000c34ff
 8006ab0:	ff1b1e40 	.word	0xff1b1e40
 8006ab4:	000f423f 	.word	0x000f423f
 8006ab8:	00124f7f 	.word	0x00124f7f
 8006abc:	0013d620 	.word	0x0013d620
 8006ac0:	fee5b660 	.word	0xfee5b660
 8006ac4:	0016e35f 	.word	0x0016e35f
 8006ac8:	feced300 	.word	0xfeced300
 8006acc:	001b7740 	.word	0x001b7740
 8006ad0:	feb35bc0 	.word	0xfeb35bc0
 8006ad4:	002191c0 	.word	0x002191c0
 8006ad8:	00387520 	.word	0x00387520
 8006adc:	fe5954e0 	.word	0xfe5954e0
 8006ae0:	00419ce0 	.word	0x00419ce0

08006ae4 <USB_EnableGlobalInt>:
  USBx->GAHBCFG |= USB_OTG_GAHBCFG_GINT;
 8006ae4:	6883      	ldr	r3, [r0, #8]
 8006ae6:	f043 0301 	orr.w	r3, r3, #1
 8006aea:	6083      	str	r3, [r0, #8]
}
 8006aec:	2000      	movs	r0, #0
 8006aee:	4770      	bx	lr

08006af0 <USB_DisableGlobalInt>:
  USBx->GAHBCFG &= ~USB_OTG_GAHBCFG_GINT;
 8006af0:	6883      	ldr	r3, [r0, #8]
 8006af2:	f023 0301 	bic.w	r3, r3, #1
 8006af6:	6083      	str	r3, [r0, #8]
}
 8006af8:	2000      	movs	r0, #0
 8006afa:	4770      	bx	lr

08006afc <USB_SetCurrentMode>:
{
 8006afc:	b538      	push	{r3, r4, r5, lr}
  USBx->GUSBCFG &= ~(USB_OTG_GUSBCFG_FHMOD | USB_OTG_GUSBCFG_FDMOD);
 8006afe:	68c3      	ldr	r3, [r0, #12]
  if (mode == USB_HOST_MODE)
 8006b00:	2901      	cmp	r1, #1
  USBx->GUSBCFG &= ~(USB_OTG_GUSBCFG_FHMOD | USB_OTG_GUSBCFG_FDMOD);
 8006b02:	f023 43c0 	bic.w	r3, r3, #1610612736	@ 0x60000000
{
 8006b06:	4605      	mov	r5, r0
 8006b08:	460c      	mov	r4, r1
  USBx->GUSBCFG &= ~(USB_OTG_GUSBCFG_FHMOD | USB_OTG_GUSBCFG_FDMOD);
 8006b0a:	60c3      	str	r3, [r0, #12]
  if (mode == USB_HOST_MODE)
 8006b0c:	d114      	bne.n	8006b38 <USB_SetCurrentMode+0x3c>
    USBx->GUSBCFG |= USB_OTG_GUSBCFG_FHMOD;
 8006b0e:	68c3      	ldr	r3, [r0, #12]
 8006b10:	f043 5300 	orr.w	r3, r3, #536870912	@ 0x20000000
 8006b14:	60c3      	str	r3, [r0, #12]
  uint32_t ms = 0U;
 8006b16:	2400      	movs	r4, #0
      HAL_Delay(10U);
 8006b18:	200a      	movs	r0, #10
 8006b1a:	f7fc ffd1 	bl	8003ac0 <HAL_Delay>
  return ((USBx->GINTSTS) & 0x1U);
 8006b1e:	696b      	ldr	r3, [r5, #20]
    } while ((USB_GetMode(USBx) != (uint32_t)USB_HOST_MODE) && (ms < HAL_USB_CURRENT_MODE_MAX_DELAY_MS));
 8006b20:	07d9      	lsls	r1, r3, #31
      ms += 10U;
 8006b22:	f104 040a 	add.w	r4, r4, #10
    } while ((USB_GetMode(USBx) != (uint32_t)USB_HOST_MODE) && (ms < HAL_USB_CURRENT_MODE_MAX_DELAY_MS));
 8006b26:	d402      	bmi.n	8006b2e <USB_SetCurrentMode+0x32>
 8006b28:	2cc8      	cmp	r4, #200	@ 0xc8
 8006b2a:	d1f5      	bne.n	8006b18 <USB_SetCurrentMode+0x1c>
      ms += 10U;
 8006b2c:	24c8      	movs	r4, #200	@ 0xc8
  if (ms == HAL_USB_CURRENT_MODE_MAX_DELAY_MS)
 8006b2e:	f1a4 03c8 	sub.w	r3, r4, #200	@ 0xc8
 8006b32:	4258      	negs	r0, r3
 8006b34:	4158      	adcs	r0, r3
}
 8006b36:	bd38      	pop	{r3, r4, r5, pc}
  else if (mode == USB_DEVICE_MODE)
 8006b38:	b971      	cbnz	r1, 8006b58 <USB_SetCurrentMode+0x5c>
    USBx->GUSBCFG |= USB_OTG_GUSBCFG_FDMOD;
 8006b3a:	68c3      	ldr	r3, [r0, #12]
 8006b3c:	f043 4380 	orr.w	r3, r3, #1073741824	@ 0x40000000
 8006b40:	60c3      	str	r3, [r0, #12]
      HAL_Delay(10U);
 8006b42:	200a      	movs	r0, #10
 8006b44:	f7fc ffbc 	bl	8003ac0 <HAL_Delay>
  return ((USBx->GINTSTS) & 0x1U);
 8006b48:	696b      	ldr	r3, [r5, #20]
    } while ((USB_GetMode(USBx) != (uint32_t)USB_DEVICE_MODE) && (ms < HAL_USB_CURRENT_MODE_MAX_DELAY_MS));
 8006b4a:	07da      	lsls	r2, r3, #31
      ms += 10U;
 8006b4c:	f104 040a 	add.w	r4, r4, #10
    } while ((USB_GetMode(USBx) != (uint32_t)USB_DEVICE_MODE) && (ms < HAL_USB_CURRENT_MODE_MAX_DELAY_MS));
 8006b50:	d5ed      	bpl.n	8006b2e <USB_SetCurrentMode+0x32>
 8006b52:	2cc8      	cmp	r4, #200	@ 0xc8
 8006b54:	d1f5      	bne.n	8006b42 <USB_SetCurrentMode+0x46>
 8006b56:	e7e9      	b.n	8006b2c <USB_SetCurrentMode+0x30>
    return HAL_ERROR;
 8006b58:	2001      	movs	r0, #1
 8006b5a:	e7ec      	b.n	8006b36 <USB_SetCurrentMode+0x3a>

08006b5c <USB_FlushTxFifo>:
{
 8006b5c:	b082      	sub	sp, #8
  __IO uint32_t count = 0U;
 8006b5e:	2300      	movs	r3, #0
{
 8006b60:	4602      	mov	r2, r0
  __IO uint32_t count = 0U;
 8006b62:	9301      	str	r3, [sp, #4]
    count++;
 8006b64:	9b01      	ldr	r3, [sp, #4]
 8006b66:	3301      	adds	r3, #1
 8006b68:	9301      	str	r3, [sp, #4]
    if (count > HAL_USB_TIMEOUT)
 8006b6a:	9b01      	ldr	r3, [sp, #4]
 8006b6c:	f1b3 6f70 	cmp.w	r3, #251658240	@ 0xf000000
 8006b70:	d815      	bhi.n	8006b9e <USB_FlushTxFifo+0x42>
  } while ((USBx->GRSTCTL & USB_OTG_GRSTCTL_AHBIDL) == 0U);
 8006b72:	6913      	ldr	r3, [r2, #16]
 8006b74:	2b00      	cmp	r3, #0
 8006b76:	daf5      	bge.n	8006b64 <USB_FlushTxFifo+0x8>
  USBx->GRSTCTL = (USB_OTG_GRSTCTL_TXFFLSH | (num << 6));
 8006b78:	0189      	lsls	r1, r1, #6
  count = 0U;
 8006b7a:	2300      	movs	r3, #0
  USBx->GRSTCTL = (USB_OTG_GRSTCTL_TXFFLSH | (num << 6));
 8006b7c:	f041 0120 	orr.w	r1, r1, #32
  count = 0U;
 8006b80:	9301      	str	r3, [sp, #4]
  USBx->GRSTCTL = (USB_OTG_GRSTCTL_TXFFLSH | (num << 6));
 8006b82:	6111      	str	r1, [r2, #16]
    count++;
 8006b84:	9b01      	ldr	r3, [sp, #4]
 8006b86:	3301      	adds	r3, #1
 8006b88:	9301      	str	r3, [sp, #4]
    if (count > HAL_USB_TIMEOUT)
 8006b8a:	9b01      	ldr	r3, [sp, #4]
 8006b8c:	f1b3 6f70 	cmp.w	r3, #251658240	@ 0xf000000
 8006b90:	d805      	bhi.n	8006b9e <USB_FlushTxFifo+0x42>
  } while ((USBx->GRSTCTL & USB_OTG_GRSTCTL_TXFFLSH) == USB_OTG_GRSTCTL_TXFFLSH);
 8006b92:	6910      	ldr	r0, [r2, #16]
 8006b94:	f010 0020 	ands.w	r0, r0, #32
 8006b98:	d1f4      	bne.n	8006b84 <USB_FlushTxFifo+0x28>
}
 8006b9a:	b002      	add	sp, #8
 8006b9c:	4770      	bx	lr
      return HAL_TIMEOUT;
 8006b9e:	2003      	movs	r0, #3
 8006ba0:	e7fb      	b.n	8006b9a <USB_FlushTxFifo+0x3e>

08006ba2 <USB_FlushRxFifo>:
{
 8006ba2:	b082      	sub	sp, #8
  __IO uint32_t count = 0U;
 8006ba4:	2300      	movs	r3, #0
{
 8006ba6:	4602      	mov	r2, r0
  __IO uint32_t count = 0U;
 8006ba8:	9301      	str	r3, [sp, #4]
    count++;
 8006baa:	9b01      	ldr	r3, [sp, #4]
 8006bac:	3301      	adds	r3, #1
 8006bae:	9301      	str	r3, [sp, #4]
    if (count > HAL_USB_TIMEOUT)
 8006bb0:	9b01      	ldr	r3, [sp, #4]
 8006bb2:	f1b3 6f70 	cmp.w	r3, #251658240	@ 0xf000000
 8006bb6:	d813      	bhi.n	8006be0 <USB_FlushRxFifo+0x3e>
  } while ((USBx->GRSTCTL & USB_OTG_GRSTCTL_AHBIDL) == 0U);
 8006bb8:	6913      	ldr	r3, [r2, #16]
 8006bba:	2b00      	cmp	r3, #0
 8006bbc:	daf5      	bge.n	8006baa <USB_FlushRxFifo+0x8>
  count = 0U;
 8006bbe:	2300      	movs	r3, #0
 8006bc0:	9301      	str	r3, [sp, #4]
  USBx->GRSTCTL = USB_OTG_GRSTCTL_RXFFLSH;
 8006bc2:	2310      	movs	r3, #16
 8006bc4:	6113      	str	r3, [r2, #16]
    count++;
 8006bc6:	9b01      	ldr	r3, [sp, #4]
 8006bc8:	3301      	adds	r3, #1
 8006bca:	9301      	str	r3, [sp, #4]
    if (count > HAL_USB_TIMEOUT)
 8006bcc:	9b01      	ldr	r3, [sp, #4]
 8006bce:	f1b3 6f70 	cmp.w	r3, #251658240	@ 0xf000000
 8006bd2:	d805      	bhi.n	8006be0 <USB_FlushRxFifo+0x3e>
  } while ((USBx->GRSTCTL & USB_OTG_GRSTCTL_RXFFLSH) == USB_OTG_GRSTCTL_RXFFLSH);
 8006bd4:	6910      	ldr	r0, [r2, #16]
 8006bd6:	f010 0010 	ands.w	r0, r0, #16
 8006bda:	d1f4      	bne.n	8006bc6 <USB_FlushRxFifo+0x24>
}
 8006bdc:	b002      	add	sp, #8
 8006bde:	4770      	bx	lr
      return HAL_TIMEOUT;
 8006be0:	2003      	movs	r0, #3
 8006be2:	e7fb      	b.n	8006bdc <USB_FlushRxFifo+0x3a>

08006be4 <USB_SetDevSpeed>:
  USBx_DEVICE->DCFG |= speed;
 8006be4:	f8d0 3800 	ldr.w	r3, [r0, #2048]	@ 0x800
 8006be8:	4319      	orrs	r1, r3
 8006bea:	f8c0 1800 	str.w	r1, [r0, #2048]	@ 0x800
}
 8006bee:	2000      	movs	r0, #0
 8006bf0:	4770      	bx	lr
	...

08006bf4 <USB_DevInit>:
{
 8006bf4:	b084      	sub	sp, #16
 8006bf6:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8006bfa:	4604      	mov	r4, r0
 8006bfc:	a809      	add	r0, sp, #36	@ 0x24
 8006bfe:	e880 000e 	stmia.w	r0, {r1, r2, r3}
  for (i = 0U; i < 15U; i++)
 8006c02:	2300      	movs	r3, #0
 8006c04:	f89d 6024 	ldrb.w	r6, [sp, #36]	@ 0x24
 8006c08:	f89d 502e 	ldrb.w	r5, [sp, #46]	@ 0x2e
    USBx->DIEPTXF[i] = 0U;
 8006c0c:	4619      	mov	r1, r3
 8006c0e:	f103 0240 	add.w	r2, r3, #64	@ 0x40
 8006c12:	eb04 0282 	add.w	r2, r4, r2, lsl #2
  for (i = 0U; i < 15U; i++)
 8006c16:	3301      	adds	r3, #1
 8006c18:	2b0f      	cmp	r3, #15
    USBx->DIEPTXF[i] = 0U;
 8006c1a:	6051      	str	r1, [r2, #4]
  for (i = 0U; i < 15U; i++)
 8006c1c:	d1f7      	bne.n	8006c0e <USB_DevInit+0x1a>
    USBx_DEVICE->DCTL |= USB_OTG_DCTL_SDIS;
 8006c1e:	f504 6700 	add.w	r7, r4, #2048	@ 0x800
  if (cfg.vbus_sensing_enable == 0U)
 8006c22:	2d00      	cmp	r5, #0
 8006c24:	d16c      	bne.n	8006d00 <USB_DevInit+0x10c>
    USBx_DEVICE->DCTL |= USB_OTG_DCTL_SDIS;
 8006c26:	687b      	ldr	r3, [r7, #4]
 8006c28:	f043 0302 	orr.w	r3, r3, #2
 8006c2c:	607b      	str	r3, [r7, #4]
    USBx->GCCFG |= USB_OTG_GCCFG_NOVBUSSENS;
 8006c2e:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
 8006c30:	f443 1300 	orr.w	r3, r3, #2097152	@ 0x200000
 8006c34:	63a3      	str	r3, [r4, #56]	@ 0x38
    USBx->GCCFG &= ~USB_OTG_GCCFG_VBUSBSEN;
 8006c36:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
 8006c38:	f423 2300 	bic.w	r3, r3, #524288	@ 0x80000
 8006c3c:	63a3      	str	r3, [r4, #56]	@ 0x38
    USBx->GCCFG &= ~USB_OTG_GCCFG_VBUSASEN;
 8006c3e:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
 8006c40:	f423 2380 	bic.w	r3, r3, #262144	@ 0x40000
    USBx->GCCFG |= USB_OTG_GCCFG_VBUSBSEN;
 8006c44:	63a3      	str	r3, [r4, #56]	@ 0x38
  USBx_PCGCCTL = 0U;
 8006c46:	2300      	movs	r3, #0
 8006c48:	f8c4 3e00 	str.w	r3, [r4, #3584]	@ 0xe00
  if (cfg.phy_itface == USB_OTG_ULPI_PHY)
 8006c4c:	f89d 3029 	ldrb.w	r3, [sp, #41]	@ 0x29
 8006c50:	2b01      	cmp	r3, #1
 8006c52:	d15f      	bne.n	8006d14 <USB_DevInit+0x120>
    if (cfg.speed == USBD_HS_SPEED)
 8006c54:	f89d 1027 	ldrb.w	r1, [sp, #39]	@ 0x27
 8006c58:	2900      	cmp	r1, #0
 8006c5a:	d159      	bne.n	8006d10 <USB_DevInit+0x11c>
    (void)USB_SetDevSpeed(USBx, USB_OTG_SPEED_FULL);
 8006c5c:	4620      	mov	r0, r4
 8006c5e:	f7ff ffc1 	bl	8006be4 <USB_SetDevSpeed>
  if (USB_FlushTxFifo(USBx, 0x10U) != HAL_OK) /* all Tx FIFOs */
 8006c62:	2110      	movs	r1, #16
 8006c64:	4620      	mov	r0, r4
 8006c66:	f7ff ff79 	bl	8006b5c <USB_FlushTxFifo>
 8006c6a:	4601      	mov	r1, r0
  if (USB_FlushRxFifo(USBx) != HAL_OK)
 8006c6c:	4620      	mov	r0, r4
 8006c6e:	f7ff ff98 	bl	8006ba2 <USB_FlushRxFifo>
 8006c72:	4308      	orrs	r0, r1
 8006c74:	b2c0      	uxtb	r0, r0
  USBx_DEVICE->DIEPMSK = 0U;
 8006c76:	2300      	movs	r3, #0
  if (USB_FlushRxFifo(USBx) != HAL_OK)
 8006c78:	3800      	subs	r0, #0
  USBx_DEVICE->DIEPMSK = 0U;
 8006c7a:	613b      	str	r3, [r7, #16]
  if (USB_FlushRxFifo(USBx) != HAL_OK)
 8006c7c:	bf18      	it	ne
 8006c7e:	2001      	movne	r0, #1
  USBx_DEVICE->DOEPMSK = 0U;
 8006c80:	617b      	str	r3, [r7, #20]
  USBx_DEVICE->DAINTMSK = 0U;
 8006c82:	f504 6210 	add.w	r2, r4, #2304	@ 0x900
 8006c86:	61fb      	str	r3, [r7, #28]
      USBx_INEP(i)->DIEPCTL = 0U;
 8006c88:	4619      	mov	r1, r3
        USBx_INEP(i)->DIEPCTL = USB_OTG_DIEPCTL_EPDIS | USB_OTG_DIEPCTL_SNAK;
 8006c8a:	f04f 4c90 	mov.w	ip, #1207959552	@ 0x48000000
        USBx_INEP(i)->DIEPCTL = USB_OTG_DIEPCTL_SNAK;
 8006c8e:	f04f 6e00 	mov.w	lr, #134217728	@ 0x8000000
    USBx_INEP(i)->DIEPINT  = 0xFB7FU;
 8006c92:	f64f 387f 	movw	r8, #64383	@ 0xfb7f
  for (i = 0U; i < cfg.dev_endpoints; i++)
 8006c96:	429e      	cmp	r6, r3
 8006c98:	d83e      	bhi.n	8006d18 <USB_DevInit+0x124>
  for (i = 0U; i < cfg.dev_endpoints; i++)
 8006c9a:	2200      	movs	r2, #0
 8006c9c:	f504 6330 	add.w	r3, r4, #2816	@ 0xb00
      USBx_OUTEP(i)->DOEPCTL = 0U;
 8006ca0:	4611      	mov	r1, r2
        USBx_OUTEP(i)->DOEPCTL = USB_OTG_DOEPCTL_EPDIS | USB_OTG_DOEPCTL_SNAK;
 8006ca2:	f04f 4c90 	mov.w	ip, #1207959552	@ 0x48000000
        USBx_OUTEP(i)->DOEPCTL = USB_OTG_DOEPCTL_SNAK;
 8006ca6:	f04f 6e00 	mov.w	lr, #134217728	@ 0x8000000
    USBx_OUTEP(i)->DOEPINT  = 0xFB7FU;
 8006caa:	f64f 387f 	movw	r8, #64383	@ 0xfb7f
  for (i = 0U; i < cfg.dev_endpoints; i++)
 8006cae:	4296      	cmp	r6, r2
 8006cb0:	d845      	bhi.n	8006d3e <USB_DevInit+0x14a>
  USBx_DEVICE->DIEPMSK &= ~(USB_OTG_DIEPMSK_TXFURM);
 8006cb2:	693b      	ldr	r3, [r7, #16]
 8006cb4:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
 8006cb8:	613b      	str	r3, [r7, #16]
  USBx->GINTMSK = 0U;
 8006cba:	2300      	movs	r3, #0
 8006cbc:	61a3      	str	r3, [r4, #24]
  USBx->GINTSTS = 0xBFFFFFFFU;
 8006cbe:	f06f 4380 	mvn.w	r3, #1073741824	@ 0x40000000
 8006cc2:	6163      	str	r3, [r4, #20]
  if (cfg.dma_enable == 0U)
 8006cc4:	f89d 3026 	ldrb.w	r3, [sp, #38]	@ 0x26
 8006cc8:	b91b      	cbnz	r3, 8006cd2 <USB_DevInit+0xde>
    USBx->GINTMSK |= USB_OTG_GINTMSK_RXFLVLM;
 8006cca:	69a3      	ldr	r3, [r4, #24]
 8006ccc:	f043 0310 	orr.w	r3, r3, #16
 8006cd0:	61a3      	str	r3, [r4, #24]
  USBx->GINTMSK |= USB_OTG_GINTMSK_USBSUSPM | USB_OTG_GINTMSK_USBRST |
 8006cd2:	69a2      	ldr	r2, [r4, #24]
 8006cd4:	4b23      	ldr	r3, [pc, #140]	@ (8006d64 <USB_DevInit+0x170>)
 8006cd6:	4313      	orrs	r3, r2
 8006cd8:	61a3      	str	r3, [r4, #24]
  if (cfg.Sof_enable != 0U)
 8006cda:	f89d 302a 	ldrb.w	r3, [sp, #42]	@ 0x2a
 8006cde:	b11b      	cbz	r3, 8006ce8 <USB_DevInit+0xf4>
    USBx->GINTMSK |= USB_OTG_GINTMSK_SOFM;
 8006ce0:	69a3      	ldr	r3, [r4, #24]
 8006ce2:	f043 0308 	orr.w	r3, r3, #8
 8006ce6:	61a3      	str	r3, [r4, #24]
  if (cfg.vbus_sensing_enable == 1U)
 8006ce8:	2d01      	cmp	r5, #1
    USBx->GINTMSK |= (USB_OTG_GINTMSK_SRQIM | USB_OTG_GINTMSK_OTGINT);
 8006cea:	bf01      	itttt	eq
 8006cec:	69a3      	ldreq	r3, [r4, #24]
 8006cee:	f043 4380 	orreq.w	r3, r3, #1073741824	@ 0x40000000
 8006cf2:	f043 0304 	orreq.w	r3, r3, #4
 8006cf6:	61a3      	streq	r3, [r4, #24]
}
 8006cf8:	e8bd 43f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8006cfc:	b004      	add	sp, #16
 8006cfe:	4770      	bx	lr
    USBx->GCCFG &= ~USB_OTG_GCCFG_NOVBUSSENS;
 8006d00:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
 8006d02:	f423 1300 	bic.w	r3, r3, #2097152	@ 0x200000
 8006d06:	63a3      	str	r3, [r4, #56]	@ 0x38
    USBx->GCCFG |= USB_OTG_GCCFG_VBUSBSEN;
 8006d08:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
 8006d0a:	f443 2300 	orr.w	r3, r3, #524288	@ 0x80000
 8006d0e:	e799      	b.n	8006c44 <USB_DevInit+0x50>
      (void)USB_SetDevSpeed(USBx, USB_OTG_SPEED_HIGH_IN_FULL);
 8006d10:	4619      	mov	r1, r3
 8006d12:	e7a3      	b.n	8006c5c <USB_DevInit+0x68>
    (void)USB_SetDevSpeed(USBx, USB_OTG_SPEED_FULL);
 8006d14:	2103      	movs	r1, #3
 8006d16:	e7a1      	b.n	8006c5c <USB_DevInit+0x68>
    if ((USBx_INEP(i)->DIEPCTL & USB_OTG_DIEPCTL_EPENA) == USB_OTG_DIEPCTL_EPENA)
 8006d18:	f8d2 9000 	ldr.w	r9, [r2]
 8006d1c:	f1b9 0f00 	cmp.w	r9, #0
 8006d20:	da0b      	bge.n	8006d3a <USB_DevInit+0x146>
      if (i == 0U)
 8006d22:	b93b      	cbnz	r3, 8006d34 <USB_DevInit+0x140>
        USBx_INEP(i)->DIEPCTL = USB_OTG_DIEPCTL_SNAK;
 8006d24:	f8c2 e000 	str.w	lr, [r2]
    USBx_INEP(i)->DIEPTSIZ = 0U;
 8006d28:	6111      	str	r1, [r2, #16]
  for (i = 0U; i < cfg.dev_endpoints; i++)
 8006d2a:	3301      	adds	r3, #1
    USBx_INEP(i)->DIEPINT  = 0xFB7FU;
 8006d2c:	f8c2 8008 	str.w	r8, [r2, #8]
  for (i = 0U; i < cfg.dev_endpoints; i++)
 8006d30:	3220      	adds	r2, #32
 8006d32:	e7b0      	b.n	8006c96 <USB_DevInit+0xa2>
        USBx_INEP(i)->DIEPCTL = USB_OTG_DIEPCTL_EPDIS | USB_OTG_DIEPCTL_SNAK;
 8006d34:	f8c2 c000 	str.w	ip, [r2]
 8006d38:	e7f6      	b.n	8006d28 <USB_DevInit+0x134>
      USBx_INEP(i)->DIEPCTL = 0U;
 8006d3a:	6011      	str	r1, [r2, #0]
 8006d3c:	e7f4      	b.n	8006d28 <USB_DevInit+0x134>
    if ((USBx_OUTEP(i)->DOEPCTL & USB_OTG_DOEPCTL_EPENA) == USB_OTG_DOEPCTL_EPENA)
 8006d3e:	f8d3 9000 	ldr.w	r9, [r3]
 8006d42:	f1b9 0f00 	cmp.w	r9, #0
 8006d46:	da0b      	bge.n	8006d60 <USB_DevInit+0x16c>
      if (i == 0U)
 8006d48:	b93a      	cbnz	r2, 8006d5a <USB_DevInit+0x166>
        USBx_OUTEP(i)->DOEPCTL = USB_OTG_DOEPCTL_SNAK;
 8006d4a:	f8c3 e000 	str.w	lr, [r3]
    USBx_OUTEP(i)->DOEPTSIZ = 0U;
 8006d4e:	6119      	str	r1, [r3, #16]
  for (i = 0U; i < cfg.dev_endpoints; i++)
 8006d50:	3201      	adds	r2, #1
    USBx_OUTEP(i)->DOEPINT  = 0xFB7FU;
 8006d52:	f8c3 8008 	str.w	r8, [r3, #8]
  for (i = 0U; i < cfg.dev_endpoints; i++)
 8006d56:	3320      	adds	r3, #32
 8006d58:	e7a9      	b.n	8006cae <USB_DevInit+0xba>
        USBx_OUTEP(i)->DOEPCTL = USB_OTG_DOEPCTL_EPDIS | USB_OTG_DOEPCTL_SNAK;
 8006d5a:	f8c3 c000 	str.w	ip, [r3]
 8006d5e:	e7f6      	b.n	8006d4e <USB_DevInit+0x15a>
      USBx_OUTEP(i)->DOEPCTL = 0U;
 8006d60:	6019      	str	r1, [r3, #0]
 8006d62:	e7f4      	b.n	8006d4e <USB_DevInit+0x15a>
 8006d64:	803c3800 	.word	0x803c3800

08006d68 <USB_GetDevSpeed>:
  uint32_t DevEnumSpeed = USBx_DEVICE->DSTS & USB_OTG_DSTS_ENUMSPD;
 8006d68:	f8d0 3808 	ldr.w	r3, [r0, #2056]	@ 0x808
  if (DevEnumSpeed == DSTS_ENUMSPD_HS_PHY_30MHZ_OR_60MHZ)
 8006d6c:	f013 0006 	ands.w	r0, r3, #6
 8006d70:	d004      	beq.n	8006d7c <USB_GetDevSpeed+0x14>
    speed = 0xFU;
 8006d72:	f013 0f02 	tst.w	r3, #2
 8006d76:	bf14      	ite	ne
 8006d78:	2002      	movne	r0, #2
 8006d7a:	200f      	moveq	r0, #15
}
 8006d7c:	4770      	bx	lr

08006d7e <USB_ActivateEndpoint>:
{
 8006d7e:	b530      	push	{r4, r5, lr}
  uint32_t epnum = (uint32_t)ep->num;
 8006d80:	780c      	ldrb	r4, [r1, #0]
    USBx_DEVICE->DAINTMSK |= USB_OTG_DAINTMSK_IEPM & (uint32_t)(1UL << (ep->num & EP_ADDR_MSK));
 8006d82:	2201      	movs	r2, #1
 8006d84:	f004 050f 	and.w	r5, r4, #15
 8006d88:	40aa      	lsls	r2, r5
  if (ep->is_in == 1U)
 8006d8a:	784d      	ldrb	r5, [r1, #1]
 8006d8c:	2d01      	cmp	r5, #1
    USBx_DEVICE->DAINTMSK |= USB_OTG_DAINTMSK_IEPM & (uint32_t)(1UL << (ep->num & EP_ADDR_MSK));
 8006d8e:	f500 6300 	add.w	r3, r0, #2048	@ 0x800
    if ((USBx_INEP(epnum)->DIEPCTL & USB_OTG_DIEPCTL_USBAEP) == 0U)
 8006d92:	eb00 1044 	add.w	r0, r0, r4, lsl #5
  if (ep->is_in == 1U)
 8006d96:	d119      	bne.n	8006dcc <USB_ActivateEndpoint+0x4e>
    USBx_DEVICE->DAINTMSK |= USB_OTG_DAINTMSK_IEPM & (uint32_t)(1UL << (ep->num & EP_ADDR_MSK));
 8006d98:	69dd      	ldr	r5, [r3, #28]
 8006d9a:	432a      	orrs	r2, r5
 8006d9c:	61da      	str	r2, [r3, #28]
    if ((USBx_INEP(epnum)->DIEPCTL & USB_OTG_DIEPCTL_USBAEP) == 0U)
 8006d9e:	f8d0 3900 	ldr.w	r3, [r0, #2304]	@ 0x900
 8006da2:	041a      	lsls	r2, r3, #16
 8006da4:	d410      	bmi.n	8006dc8 <USB_ActivateEndpoint+0x4a>
      USBx_INEP(epnum)->DIEPCTL |= (ep->maxpacket & USB_OTG_DIEPCTL_MPSIZ) |
 8006da6:	688a      	ldr	r2, [r1, #8]
 8006da8:	f8d0 5900 	ldr.w	r5, [r0, #2304]	@ 0x900
 8006dac:	f3c2 030a 	ubfx	r3, r2, #0, #11
                                   ((uint32_t)ep->type << 18) | (epnum << 22) |
 8006db0:	790a      	ldrb	r2, [r1, #4]
      USBx_INEP(epnum)->DIEPCTL |= (ep->maxpacket & USB_OTG_DIEPCTL_MPSIZ) |
 8006db2:	432b      	orrs	r3, r5
 8006db4:	ea43 4382 	orr.w	r3, r3, r2, lsl #18
 8006db8:	ea43 5384 	orr.w	r3, r3, r4, lsl #22
 8006dbc:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 8006dc0:	f443 4300 	orr.w	r3, r3, #32768	@ 0x8000
 8006dc4:	f8c0 3900 	str.w	r3, [r0, #2304]	@ 0x900
}
 8006dc8:	2000      	movs	r0, #0
 8006dca:	bd30      	pop	{r4, r5, pc}
    USBx_DEVICE->DAINTMSK |= USB_OTG_DAINTMSK_OEPM & ((uint32_t)(1UL << (ep->num & EP_ADDR_MSK)) << 16);
 8006dcc:	69dc      	ldr	r4, [r3, #28]
 8006dce:	ea44 4202 	orr.w	r2, r4, r2, lsl #16
 8006dd2:	61da      	str	r2, [r3, #28]
    if (((USBx_OUTEP(epnum)->DOEPCTL) & USB_OTG_DOEPCTL_USBAEP) == 0U)
 8006dd4:	f8d0 3b00 	ldr.w	r3, [r0, #2816]	@ 0xb00
 8006dd8:	041b      	lsls	r3, r3, #16
 8006dda:	d4f5      	bmi.n	8006dc8 <USB_ActivateEndpoint+0x4a>
      USBx_OUTEP(epnum)->DOEPCTL |= (ep->maxpacket & USB_OTG_DOEPCTL_MPSIZ) |
 8006ddc:	688b      	ldr	r3, [r1, #8]
 8006dde:	f8d0 2b00 	ldr.w	r2, [r0, #2816]	@ 0xb00
 8006de2:	f3c3 030a 	ubfx	r3, r3, #0, #11
 8006de6:	4313      	orrs	r3, r2
                                    ((uint32_t)ep->type << 18) |
 8006de8:	790a      	ldrb	r2, [r1, #4]
      USBx_OUTEP(epnum)->DOEPCTL |= (ep->maxpacket & USB_OTG_DOEPCTL_MPSIZ) |
 8006dea:	ea43 4382 	orr.w	r3, r3, r2, lsl #18
 8006dee:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 8006df2:	f443 4300 	orr.w	r3, r3, #32768	@ 0x8000
 8006df6:	f8c0 3b00 	str.w	r3, [r0, #2816]	@ 0xb00
 8006dfa:	e7e5      	b.n	8006dc8 <USB_ActivateEndpoint+0x4a>

08006dfc <USB_DeactivateEndpoint>:
{
 8006dfc:	b510      	push	{r4, lr}
  uint32_t epnum = (uint32_t)ep->num;
 8006dfe:	780a      	ldrb	r2, [r1, #0]
  if (ep->is_in == 1U)
 8006e00:	7849      	ldrb	r1, [r1, #1]
 8006e02:	2901      	cmp	r1, #1
    if ((USBx_INEP(epnum)->DIEPCTL & USB_OTG_DIEPCTL_EPENA) == USB_OTG_DIEPCTL_EPENA)
 8006e04:	eb00 1342 	add.w	r3, r0, r2, lsl #5
 8006e08:	f500 6000 	add.w	r0, r0, #2048	@ 0x800
 8006e0c:	f002 020f 	and.w	r2, r2, #15
  if (ep->is_in == 1U)
 8006e10:	d122      	bne.n	8006e58 <USB_DeactivateEndpoint+0x5c>
    if ((USBx_INEP(epnum)->DIEPCTL & USB_OTG_DIEPCTL_EPENA) == USB_OTG_DIEPCTL_EPENA)
 8006e12:	f8d3 1900 	ldr.w	r1, [r3, #2304]	@ 0x900
 8006e16:	2900      	cmp	r1, #0
 8006e18:	da0b      	bge.n	8006e32 <USB_DeactivateEndpoint+0x36>
      USBx_INEP(epnum)->DIEPCTL |= USB_OTG_DIEPCTL_SNAK;
 8006e1a:	f8d3 1900 	ldr.w	r1, [r3, #2304]	@ 0x900
 8006e1e:	f041 6100 	orr.w	r1, r1, #134217728	@ 0x8000000
 8006e22:	f8c3 1900 	str.w	r1, [r3, #2304]	@ 0x900
      USBx_INEP(epnum)->DIEPCTL |= USB_OTG_DIEPCTL_EPDIS;
 8006e26:	f8d3 1900 	ldr.w	r1, [r3, #2304]	@ 0x900
 8006e2a:	f041 4180 	orr.w	r1, r1, #1073741824	@ 0x40000000
 8006e2e:	f8c3 1900 	str.w	r1, [r3, #2304]	@ 0x900
    USBx_DEVICE->DEACHMSK &= ~(USB_OTG_DAINTMSK_IEPM & (uint32_t)(1UL << (ep->num & EP_ADDR_MSK)));
 8006e32:	6bc4      	ldr	r4, [r0, #60]	@ 0x3c
 8006e34:	2101      	movs	r1, #1
 8006e36:	fa01 f202 	lsl.w	r2, r1, r2
 8006e3a:	ea24 0402 	bic.w	r4, r4, r2
 8006e3e:	63c4      	str	r4, [r0, #60]	@ 0x3c
    USBx_DEVICE->DAINTMSK &= ~(USB_OTG_DAINTMSK_IEPM & (uint32_t)(1UL << (ep->num & EP_ADDR_MSK)));
 8006e40:	69c1      	ldr	r1, [r0, #28]
 8006e42:	ea21 0202 	bic.w	r2, r1, r2
 8006e46:	61c2      	str	r2, [r0, #28]
    USBx_INEP(epnum)->DIEPCTL &= ~(USB_OTG_DIEPCTL_USBAEP |
 8006e48:	f8d3 1900 	ldr.w	r1, [r3, #2304]	@ 0x900
 8006e4c:	4a14      	ldr	r2, [pc, #80]	@ (8006ea0 <USB_DeactivateEndpoint+0xa4>)
 8006e4e:	400a      	ands	r2, r1
 8006e50:	f8c3 2900 	str.w	r2, [r3, #2304]	@ 0x900
}
 8006e54:	2000      	movs	r0, #0
 8006e56:	bd10      	pop	{r4, pc}
    if ((USBx_OUTEP(epnum)->DOEPCTL & USB_OTG_DOEPCTL_EPENA) == USB_OTG_DOEPCTL_EPENA)
 8006e58:	f8d3 1b00 	ldr.w	r1, [r3, #2816]	@ 0xb00
 8006e5c:	2900      	cmp	r1, #0
 8006e5e:	da0b      	bge.n	8006e78 <USB_DeactivateEndpoint+0x7c>
      USBx_OUTEP(epnum)->DOEPCTL |= USB_OTG_DOEPCTL_SNAK;
 8006e60:	f8d3 1b00 	ldr.w	r1, [r3, #2816]	@ 0xb00
 8006e64:	f041 6100 	orr.w	r1, r1, #134217728	@ 0x8000000
 8006e68:	f8c3 1b00 	str.w	r1, [r3, #2816]	@ 0xb00
      USBx_OUTEP(epnum)->DOEPCTL |= USB_OTG_DOEPCTL_EPDIS;
 8006e6c:	f8d3 1b00 	ldr.w	r1, [r3, #2816]	@ 0xb00
 8006e70:	f041 4180 	orr.w	r1, r1, #1073741824	@ 0x40000000
 8006e74:	f8c3 1b00 	str.w	r1, [r3, #2816]	@ 0xb00
    USBx_DEVICE->DEACHMSK &= ~(USB_OTG_DAINTMSK_OEPM & ((uint32_t)(1UL << (ep->num & EP_ADDR_MSK)) << 16));
 8006e78:	6bc4      	ldr	r4, [r0, #60]	@ 0x3c
 8006e7a:	f44f 3180 	mov.w	r1, #65536	@ 0x10000
 8006e7e:	fa01 f202 	lsl.w	r2, r1, r2
 8006e82:	ea24 0402 	bic.w	r4, r4, r2
 8006e86:	63c4      	str	r4, [r0, #60]	@ 0x3c
    USBx_DEVICE->DAINTMSK &= ~(USB_OTG_DAINTMSK_OEPM & ((uint32_t)(1UL << (ep->num & EP_ADDR_MSK)) << 16));
 8006e88:	69c1      	ldr	r1, [r0, #28]
 8006e8a:	ea21 0202 	bic.w	r2, r1, r2
 8006e8e:	61c2      	str	r2, [r0, #28]
    USBx_OUTEP(epnum)->DOEPCTL &= ~(USB_OTG_DOEPCTL_USBAEP |
 8006e90:	f8d3 1b00 	ldr.w	r1, [r3, #2816]	@ 0xb00
 8006e94:	4a03      	ldr	r2, [pc, #12]	@ (8006ea4 <USB_DeactivateEndpoint+0xa8>)
 8006e96:	400a      	ands	r2, r1
 8006e98:	f8c3 2b00 	str.w	r2, [r3, #2816]	@ 0xb00
 8006e9c:	e7da      	b.n	8006e54 <USB_DeactivateEndpoint+0x58>
 8006e9e:	bf00      	nop
 8006ea0:	ec337800 	.word	0xec337800
 8006ea4:	eff37800 	.word	0xeff37800

08006ea8 <USB_EPStopXfer>:
{
 8006ea8:	b082      	sub	sp, #8
  __IO uint32_t count = 0U;
 8006eaa:	2300      	movs	r3, #0
  if (ep->is_in == 1U)
 8006eac:	784a      	ldrb	r2, [r1, #1]
  __IO uint32_t count = 0U;
 8006eae:	9301      	str	r3, [sp, #4]
    if (((USBx_INEP(ep->num)->DIEPCTL) & USB_OTG_DIEPCTL_EPENA) == USB_OTG_DIEPCTL_EPENA)
 8006eb0:	780b      	ldrb	r3, [r1, #0]
  if (ep->is_in == 1U)
 8006eb2:	2a01      	cmp	r2, #1
    if (((USBx_INEP(ep->num)->DIEPCTL) & USB_OTG_DIEPCTL_EPENA) == USB_OTG_DIEPCTL_EPENA)
 8006eb4:	ea4f 1343 	mov.w	r3, r3, lsl #5
  if (ep->is_in == 1U)
 8006eb8:	d11e      	bne.n	8006ef8 <USB_EPStopXfer+0x50>
    if (((USBx_INEP(ep->num)->DIEPCTL) & USB_OTG_DIEPCTL_EPENA) == USB_OTG_DIEPCTL_EPENA)
 8006eba:	f500 6010 	add.w	r0, r0, #2304	@ 0x900
 8006ebe:	18c1      	adds	r1, r0, r3
 8006ec0:	58c2      	ldr	r2, [r0, r3]
 8006ec2:	2a00      	cmp	r2, #0
 8006ec4:	db02      	blt.n	8006ecc <USB_EPStopXfer+0x24>
  HAL_StatusTypeDef ret = HAL_OK;
 8006ec6:	2000      	movs	r0, #0
}
 8006ec8:	b002      	add	sp, #8
 8006eca:	4770      	bx	lr
      USBx_INEP(ep->num)->DIEPCTL |= (USB_OTG_DIEPCTL_SNAK);
 8006ecc:	58c2      	ldr	r2, [r0, r3]
 8006ece:	f042 6200 	orr.w	r2, r2, #134217728	@ 0x8000000
 8006ed2:	50c2      	str	r2, [r0, r3]
      USBx_INEP(ep->num)->DIEPCTL |= (USB_OTG_DIEPCTL_EPDIS);
 8006ed4:	58c2      	ldr	r2, [r0, r3]
 8006ed6:	f042 4280 	orr.w	r2, r2, #1073741824	@ 0x40000000
 8006eda:	50c2      	str	r2, [r0, r3]
        if (count > 10000U)
 8006edc:	f242 7210 	movw	r2, #10000	@ 0x2710
        count++;
 8006ee0:	9b01      	ldr	r3, [sp, #4]
 8006ee2:	3301      	adds	r3, #1
 8006ee4:	9301      	str	r3, [sp, #4]
        if (count > 10000U)
 8006ee6:	9b01      	ldr	r3, [sp, #4]
 8006ee8:	4293      	cmp	r3, r2
 8006eea:	d901      	bls.n	8006ef0 <USB_EPStopXfer+0x48>
          ret = HAL_ERROR;
 8006eec:	2001      	movs	r0, #1
 8006eee:	e7eb      	b.n	8006ec8 <USB_EPStopXfer+0x20>
      } while (((USBx_INEP(ep->num)->DIEPCTL) & USB_OTG_DIEPCTL_EPENA) ==  USB_OTG_DIEPCTL_EPENA);
 8006ef0:	680b      	ldr	r3, [r1, #0]
 8006ef2:	2b00      	cmp	r3, #0
 8006ef4:	dbf4      	blt.n	8006ee0 <USB_EPStopXfer+0x38>
 8006ef6:	e7e6      	b.n	8006ec6 <USB_EPStopXfer+0x1e>
    if (((USBx_OUTEP(ep->num)->DOEPCTL) & USB_OTG_DOEPCTL_EPENA) == USB_OTG_DOEPCTL_EPENA)
 8006ef8:	f500 6030 	add.w	r0, r0, #2816	@ 0xb00
 8006efc:	18c1      	adds	r1, r0, r3
 8006efe:	58c2      	ldr	r2, [r0, r3]
 8006f00:	2a00      	cmp	r2, #0
 8006f02:	dae0      	bge.n	8006ec6 <USB_EPStopXfer+0x1e>
      USBx_OUTEP(ep->num)->DOEPCTL |= (USB_OTG_DOEPCTL_SNAK);
 8006f04:	58c2      	ldr	r2, [r0, r3]
 8006f06:	f042 6200 	orr.w	r2, r2, #134217728	@ 0x8000000
 8006f0a:	50c2      	str	r2, [r0, r3]
      USBx_OUTEP(ep->num)->DOEPCTL |= (USB_OTG_DOEPCTL_EPDIS);
 8006f0c:	58c2      	ldr	r2, [r0, r3]
 8006f0e:	f042 4280 	orr.w	r2, r2, #1073741824	@ 0x40000000
 8006f12:	50c2      	str	r2, [r0, r3]
        if (count > 10000U)
 8006f14:	f242 7210 	movw	r2, #10000	@ 0x2710
        count++;
 8006f18:	9b01      	ldr	r3, [sp, #4]
 8006f1a:	3301      	adds	r3, #1
 8006f1c:	9301      	str	r3, [sp, #4]
        if (count > 10000U)
 8006f1e:	9b01      	ldr	r3, [sp, #4]
 8006f20:	4293      	cmp	r3, r2
 8006f22:	d8e3      	bhi.n	8006eec <USB_EPStopXfer+0x44>
      } while (((USBx_OUTEP(ep->num)->DOEPCTL) & USB_OTG_DOEPCTL_EPENA) ==  USB_OTG_DOEPCTL_EPENA);
 8006f24:	680b      	ldr	r3, [r1, #0]
 8006f26:	2b00      	cmp	r3, #0
 8006f28:	dbf6      	blt.n	8006f18 <USB_EPStopXfer+0x70>
 8006f2a:	e7cc      	b.n	8006ec6 <USB_EPStopXfer+0x1e>

08006f2c <USB_WritePacket>:
{
 8006f2c:	b510      	push	{r4, lr}
 8006f2e:	f89d 4008 	ldrb.w	r4, [sp, #8]
  if (dma == 0U)
 8006f32:	b944      	cbnz	r4, 8006f46 <USB_WritePacket+0x1a>
    count32b = ((uint32_t)len + 3U) / 4U;
 8006f34:	3303      	adds	r3, #3
      USBx_DFIFO((uint32_t)ch_ep_num) = __UNALIGNED_UINT32_READ(pSrc);
 8006f36:	3201      	adds	r2, #1
    count32b = ((uint32_t)len + 3U) / 4U;
 8006f38:	089b      	lsrs	r3, r3, #2
      USBx_DFIFO((uint32_t)ch_ep_num) = __UNALIGNED_UINT32_READ(pSrc);
 8006f3a:	eb00 3002 	add.w	r0, r0, r2, lsl #12
 8006f3e:	eb01 0383 	add.w	r3, r1, r3, lsl #2
    for (i = 0U; i < count32b; i++)
 8006f42:	4299      	cmp	r1, r3
 8006f44:	d101      	bne.n	8006f4a <USB_WritePacket+0x1e>
}
 8006f46:	2000      	movs	r0, #0
 8006f48:	bd10      	pop	{r4, pc}
      USBx_DFIFO((uint32_t)ch_ep_num) = __UNALIGNED_UINT32_READ(pSrc);
 8006f4a:	f851 2b04 	ldr.w	r2, [r1], #4
 8006f4e:	6002      	str	r2, [r0, #0]
    for (i = 0U; i < count32b; i++)
 8006f50:	e7f7      	b.n	8006f42 <USB_WritePacket+0x16>
	...

08006f54 <USB_EPStartXfer>:
{
 8006f54:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
  if (ep->is_in == 1U)
 8006f58:	784b      	ldrb	r3, [r1, #1]
    if (ep->xfer_len == 0U)
 8006f5a:	690c      	ldr	r4, [r1, #16]
        if (ep->type == EP_TYPE_ISOC)
 8006f5c:	790f      	ldrb	r7, [r1, #4]
 8006f5e:	f8df e1f0 	ldr.w	lr, [pc, #496]	@ 8007150 <USB_EPStartXfer+0x1fc>
 8006f62:	f8df 81f0 	ldr.w	r8, [pc, #496]	@ 8007154 <USB_EPStartXfer+0x200>
{
 8006f66:	4616      	mov	r6, r2
  uint32_t epnum = (uint32_t)ep->num;
 8006f68:	780a      	ldrb	r2, [r1, #0]
  if (ep->is_in == 1U)
 8006f6a:	2b01      	cmp	r3, #1
      USBx_INEP(epnum)->DIEPTSIZ &= ~(USB_OTG_DIEPTSIZ_PKTCNT);
 8006f6c:	eb00 1542 	add.w	r5, r0, r2, lsl #5
  if (ep->is_in == 1U)
 8006f70:	f040 8097 	bne.w	80070a2 <USB_EPStartXfer+0x14e>
      USBx_INEP(epnum)->DIEPTSIZ &= ~(USB_OTG_DIEPTSIZ_PKTCNT);
 8006f74:	f505 6c10 	add.w	ip, r5, #2304	@ 0x900
 8006f78:	f8dc 3010 	ldr.w	r3, [ip, #16]
    if (ep->xfer_len == 0U)
 8006f7c:	bb74      	cbnz	r4, 8006fdc <USB_EPStartXfer+0x88>
      USBx_INEP(epnum)->DIEPTSIZ &= ~(USB_OTG_DIEPTSIZ_PKTCNT);
 8006f7e:	ea03 030e 	and.w	r3, r3, lr
 8006f82:	f8cc 3010 	str.w	r3, [ip, #16]
      USBx_INEP(epnum)->DIEPTSIZ |= (USB_OTG_DIEPTSIZ_PKTCNT & (1U << 19));
 8006f86:	f8dc 3010 	ldr.w	r3, [ip, #16]
 8006f8a:	f443 2300 	orr.w	r3, r3, #524288	@ 0x80000
 8006f8e:	f8cc 3010 	str.w	r3, [ip, #16]
      USBx_INEP(epnum)->DIEPTSIZ &= ~(USB_OTG_DIEPTSIZ_XFRSIZ);
 8006f92:	f8dc 3010 	ldr.w	r3, [ip, #16]
 8006f96:	ea03 0308 	and.w	r3, r3, r8
    if (dma == 1U)
 8006f9a:	2e01      	cmp	r6, #1
      USBx_INEP(epnum)->DIEPTSIZ |= (USB_OTG_DIEPTSIZ_XFRSIZ & ep->xfer_len);
 8006f9c:	f8cc 3010 	str.w	r3, [ip, #16]
    if (dma == 1U)
 8006fa0:	d157      	bne.n	8007052 <USB_EPStartXfer+0xfe>
      if ((uint32_t)ep->dma_addr != 0U)
 8006fa2:	69cb      	ldr	r3, [r1, #28]
 8006fa4:	b10b      	cbz	r3, 8006faa <USB_EPStartXfer+0x56>
        USBx_INEP(epnum)->DIEPDMA = (uint32_t)(ep->dma_addr);
 8006fa6:	f8cc 3014 	str.w	r3, [ip, #20]
      if (ep->type == EP_TYPE_ISOC)
 8006faa:	2f01      	cmp	r7, #1
 8006fac:	d10c      	bne.n	8006fc8 <USB_EPStartXfer+0x74>
        if ((USBx_DEVICE->DSTS & (1U << 8)) == 0U)
 8006fae:	f8d0 3808 	ldr.w	r3, [r0, #2056]	@ 0x808
 8006fb2:	f413 7f80 	tst.w	r3, #256	@ 0x100
          USBx_INEP(epnum)->DIEPCTL |= USB_OTG_DIEPCTL_SODDFRM;
 8006fb6:	f8d5 3900 	ldr.w	r3, [r5, #2304]	@ 0x900
 8006fba:	bf0c      	ite	eq
 8006fbc:	f043 5300 	orreq.w	r3, r3, #536870912	@ 0x20000000
          USBx_INEP(epnum)->DIEPCTL |= USB_OTG_DIEPCTL_SD0PID_SEVNFRM;
 8006fc0:	f043 5380 	orrne.w	r3, r3, #268435456	@ 0x10000000
 8006fc4:	f8c5 3900 	str.w	r3, [r5, #2304]	@ 0x900
      USBx_INEP(epnum)->DIEPCTL |= (USB_OTG_DIEPCTL_CNAK | USB_OTG_DIEPCTL_EPENA);
 8006fc8:	f8d5 3900 	ldr.w	r3, [r5, #2304]	@ 0x900
 8006fcc:	f043 4304 	orr.w	r3, r3, #2214592512	@ 0x84000000
 8006fd0:	f8c5 3900 	str.w	r3, [r5, #2304]	@ 0x900
}
 8006fd4:	2000      	movs	r0, #0
 8006fd6:	b002      	add	sp, #8
 8006fd8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
      USBx_INEP(epnum)->DIEPTSIZ &= ~(USB_OTG_DIEPTSIZ_XFRSIZ);
 8006fdc:	ea03 0308 	and.w	r3, r3, r8
 8006fe0:	f8cc 3010 	str.w	r3, [ip, #16]
      USBx_INEP(epnum)->DIEPTSIZ &= ~(USB_OTG_DIEPTSIZ_PKTCNT);
 8006fe4:	f8dc 3010 	ldr.w	r3, [ip, #16]
 8006fe8:	ea03 030e 	and.w	r3, r3, lr
 8006fec:	f8cc 3010 	str.w	r3, [ip, #16]
        if (ep->xfer_len > ep->maxpacket)
 8006ff0:	688b      	ldr	r3, [r1, #8]
      if (epnum == 0U)
 8006ff2:	b97a      	cbnz	r2, 8007014 <USB_EPStartXfer+0xc0>
        if (ep->xfer_len > ep->maxpacket)
 8006ff4:	42a3      	cmp	r3, r4
          ep->xfer_len = ep->maxpacket;
 8006ff6:	bf38      	it	cc
 8006ff8:	610b      	strcc	r3, [r1, #16]
        USBx_INEP(epnum)->DIEPTSIZ |= (USB_OTG_DIEPTSIZ_PKTCNT & (1U << 19));
 8006ffa:	f8dc 3010 	ldr.w	r3, [ip, #16]
 8006ffe:	f443 2300 	orr.w	r3, r3, #524288	@ 0x80000
          USBx_INEP(epnum)->DIEPTSIZ |= (USB_OTG_DIEPTSIZ_MULCNT & (pktcnt << 29));
 8007002:	f8cc 3010 	str.w	r3, [ip, #16]
      USBx_INEP(epnum)->DIEPTSIZ |= (USB_OTG_DIEPTSIZ_XFRSIZ & ep->xfer_len);
 8007006:	690b      	ldr	r3, [r1, #16]
 8007008:	f8dc 4010 	ldr.w	r4, [ip, #16]
 800700c:	f3c3 0312 	ubfx	r3, r3, #0, #19
 8007010:	4323      	orrs	r3, r4
 8007012:	e7c2      	b.n	8006f9a <USB_EPStartXfer+0x46>
        pktcnt = (uint16_t)((ep->xfer_len + ep->maxpacket - 1U) / ep->maxpacket);
 8007014:	441c      	add	r4, r3
 8007016:	3c01      	subs	r4, #1
 8007018:	fbb4 f4f3 	udiv	r4, r4, r3
        USBx_INEP(epnum)->DIEPTSIZ |= (USB_OTG_DIEPTSIZ_PKTCNT & (pktcnt << 19));
 800701c:	4b4b      	ldr	r3, [pc, #300]	@ (800714c <USB_EPStartXfer+0x1f8>)
 800701e:	f8dc e010 	ldr.w	lr, [ip, #16]
 8007022:	fa1f f884 	uxth.w	r8, r4
 8007026:	ea03 44c4 	and.w	r4, r3, r4, lsl #19
 800702a:	ea44 040e 	orr.w	r4, r4, lr
        if (ep->type == EP_TYPE_ISOC)
 800702e:	2f01      	cmp	r7, #1
        USBx_INEP(epnum)->DIEPTSIZ |= (USB_OTG_DIEPTSIZ_PKTCNT & (pktcnt << 19));
 8007030:	f8cc 4010 	str.w	r4, [ip, #16]
        if (ep->type == EP_TYPE_ISOC)
 8007034:	d1e7      	bne.n	8007006 <USB_EPStartXfer+0xb2>
          USBx_INEP(epnum)->DIEPTSIZ &= ~(USB_OTG_DIEPTSIZ_MULCNT);
 8007036:	f8dc 3010 	ldr.w	r3, [ip, #16]
 800703a:	f023 43c0 	bic.w	r3, r3, #1610612736	@ 0x60000000
 800703e:	f8cc 3010 	str.w	r3, [ip, #16]
          USBx_INEP(epnum)->DIEPTSIZ |= (USB_OTG_DIEPTSIZ_MULCNT & (pktcnt << 29));
 8007042:	f8dc 4010 	ldr.w	r4, [ip, #16]
 8007046:	ea4f 7348 	mov.w	r3, r8, lsl #29
 800704a:	f003 43c0 	and.w	r3, r3, #1610612736	@ 0x60000000
 800704e:	4323      	orrs	r3, r4
 8007050:	e7d7      	b.n	8007002 <USB_EPStartXfer+0xae>
      USBx_INEP(epnum)->DIEPCTL |= (USB_OTG_DIEPCTL_CNAK | USB_OTG_DIEPCTL_EPENA);
 8007052:	f8d5 3900 	ldr.w	r3, [r5, #2304]	@ 0x900
      if (ep->type != EP_TYPE_ISOC)
 8007056:	2f01      	cmp	r7, #1
      USBx_INEP(epnum)->DIEPCTL |= (USB_OTG_DIEPCTL_CNAK | USB_OTG_DIEPCTL_EPENA);
 8007058:	f043 4304 	orr.w	r3, r3, #2214592512	@ 0x84000000
 800705c:	f8c5 3900 	str.w	r3, [r5, #2304]	@ 0x900
        if (ep->xfer_len > 0U)
 8007060:	690b      	ldr	r3, [r1, #16]
      if (ep->type != EP_TYPE_ISOC)
 8007062:	d00b      	beq.n	800707c <USB_EPStartXfer+0x128>
        if (ep->xfer_len > 0U)
 8007064:	2b00      	cmp	r3, #0
 8007066:	d0b5      	beq.n	8006fd4 <USB_EPStartXfer+0x80>
          USBx_DEVICE->DIEPEMPMSK |= 1UL << (ep->num & EP_ADDR_MSK);
 8007068:	f8d0 1834 	ldr.w	r1, [r0, #2100]	@ 0x834
 800706c:	f002 020f 	and.w	r2, r2, #15
 8007070:	2301      	movs	r3, #1
 8007072:	4093      	lsls	r3, r2
 8007074:	430b      	orrs	r3, r1
 8007076:	f8c0 3834 	str.w	r3, [r0, #2100]	@ 0x834
 800707a:	e7ab      	b.n	8006fd4 <USB_EPStartXfer+0x80>
        if ((USBx_DEVICE->DSTS & (1U << 8)) == 0U)
 800707c:	f8d0 4808 	ldr.w	r4, [r0, #2056]	@ 0x808
 8007080:	f414 7f80 	tst.w	r4, #256	@ 0x100
          USBx_INEP(epnum)->DIEPCTL |= USB_OTG_DIEPCTL_SODDFRM;
 8007084:	f8d5 4900 	ldr.w	r4, [r5, #2304]	@ 0x900
 8007088:	bf0c      	ite	eq
 800708a:	f044 5400 	orreq.w	r4, r4, #536870912	@ 0x20000000
          USBx_INEP(epnum)->DIEPCTL |= USB_OTG_DIEPCTL_SD0PID_SEVNFRM;
 800708e:	f044 5480 	orrne.w	r4, r4, #268435456	@ 0x10000000
 8007092:	f8c5 4900 	str.w	r4, [r5, #2304]	@ 0x900
        (void)USB_WritePacket(USBx, ep->xfer_buff, ep->num, (uint16_t)ep->xfer_len, dma);
 8007096:	9600      	str	r6, [sp, #0]
 8007098:	68c9      	ldr	r1, [r1, #12]
 800709a:	b29b      	uxth	r3, r3
 800709c:	f7ff ff46 	bl	8006f2c <USB_WritePacket>
 80070a0:	e798      	b.n	8006fd4 <USB_EPStartXfer+0x80>
    USBx_OUTEP(epnum)->DOEPTSIZ &= ~(USB_OTG_DOEPTSIZ_XFRSIZ);
 80070a2:	f8d5 3b10 	ldr.w	r3, [r5, #2832]	@ 0xb10
 80070a6:	ea03 0308 	and.w	r3, r3, r8
 80070aa:	f8c5 3b10 	str.w	r3, [r5, #2832]	@ 0xb10
    USBx_OUTEP(epnum)->DOEPTSIZ &= ~(USB_OTG_DOEPTSIZ_PKTCNT);
 80070ae:	f8d5 3b10 	ldr.w	r3, [r5, #2832]	@ 0xb10
 80070b2:	ea03 030e 	and.w	r3, r3, lr
    USBx_OUTEP(epnum)->DOEPTSIZ &= ~(USB_OTG_DOEPTSIZ_XFRSIZ);
 80070b6:	f505 6c30 	add.w	ip, r5, #2816	@ 0xb00
    USBx_OUTEP(epnum)->DOEPTSIZ &= ~(USB_OTG_DOEPTSIZ_PKTCNT);
 80070ba:	f8cc 3010 	str.w	r3, [ip, #16]
        ep->xfer_len = ep->maxpacket;
 80070be:	688b      	ldr	r3, [r1, #8]
    if (epnum == 0U)
 80070c0:	bb5a      	cbnz	r2, 800711a <USB_EPStartXfer+0x1c6>
      if (ep->xfer_len > 0U)
 80070c2:	b104      	cbz	r4, 80070c6 <USB_EPStartXfer+0x172>
        ep->xfer_len = ep->maxpacket;
 80070c4:	610b      	str	r3, [r1, #16]
      ep->xfer_size = ep->maxpacket;
 80070c6:	620b      	str	r3, [r1, #32]
        USBx_OUTEP(epnum)->DOEPTSIZ |= (USB_OTG_DOEPTSIZ_XFRSIZ & ep->maxpacket);
 80070c8:	f8dc 2010 	ldr.w	r2, [ip, #16]
 80070cc:	f3c3 0312 	ubfx	r3, r3, #0, #19
 80070d0:	4313      	orrs	r3, r2
 80070d2:	f8cc 3010 	str.w	r3, [ip, #16]
        USBx_OUTEP(epnum)->DOEPTSIZ |= (USB_OTG_DOEPTSIZ_PKTCNT & (1U << 19));
 80070d6:	f8dc 3010 	ldr.w	r3, [ip, #16]
 80070da:	f443 2300 	orr.w	r3, r3, #524288	@ 0x80000
    if (dma == 1U)
 80070de:	2e01      	cmp	r6, #1
        USBx_OUTEP(epnum)->DOEPTSIZ |= USB_OTG_DOEPTSIZ_XFRSIZ & ep->xfer_size;
 80070e0:	f8cc 3010 	str.w	r3, [ip, #16]
    if (dma == 1U)
 80070e4:	d103      	bne.n	80070ee <USB_EPStartXfer+0x19a>
      if ((uint32_t)ep->xfer_buff != 0U)
 80070e6:	68cb      	ldr	r3, [r1, #12]
 80070e8:	b10b      	cbz	r3, 80070ee <USB_EPStartXfer+0x19a>
        USBx_OUTEP(epnum)->DOEPDMA = (uint32_t)(ep->xfer_buff);
 80070ea:	f8cc 3014 	str.w	r3, [ip, #20]
    if (ep->type == EP_TYPE_ISOC)
 80070ee:	2f01      	cmp	r7, #1
 80070f0:	d10c      	bne.n	800710c <USB_EPStartXfer+0x1b8>
      if ((USBx_DEVICE->DSTS & (1U << 8)) == 0U)
 80070f2:	f8d0 3808 	ldr.w	r3, [r0, #2056]	@ 0x808
 80070f6:	f413 7f80 	tst.w	r3, #256	@ 0x100
        USBx_OUTEP(epnum)->DOEPCTL |= USB_OTG_DOEPCTL_SODDFRM;
 80070fa:	f8d5 3b00 	ldr.w	r3, [r5, #2816]	@ 0xb00
 80070fe:	bf0c      	ite	eq
 8007100:	f043 5300 	orreq.w	r3, r3, #536870912	@ 0x20000000
        USBx_OUTEP(epnum)->DOEPCTL |= USB_OTG_DOEPCTL_SD0PID_SEVNFRM;
 8007104:	f043 5380 	orrne.w	r3, r3, #268435456	@ 0x10000000
 8007108:	f8c5 3b00 	str.w	r3, [r5, #2816]	@ 0xb00
    USBx_OUTEP(epnum)->DOEPCTL |= (USB_OTG_DOEPCTL_CNAK | USB_OTG_DOEPCTL_EPENA);
 800710c:	f8d5 3b00 	ldr.w	r3, [r5, #2816]	@ 0xb00
 8007110:	f043 4304 	orr.w	r3, r3, #2214592512	@ 0x84000000
 8007114:	f8c5 3b00 	str.w	r3, [r5, #2816]	@ 0xb00
 8007118:	e75c      	b.n	8006fd4 <USB_EPStartXfer+0x80>
      if (ep->xfer_len == 0U)
 800711a:	2c00      	cmp	r4, #0
 800711c:	d0d4      	beq.n	80070c8 <USB_EPStartXfer+0x174>
        pktcnt = (uint16_t)((ep->xfer_len + ep->maxpacket - 1U) / ep->maxpacket);
 800711e:	441c      	add	r4, r3
        USBx_OUTEP(epnum)->DOEPTSIZ |= USB_OTG_DOEPTSIZ_PKTCNT & ((uint32_t)pktcnt << 19);
 8007120:	4a0a      	ldr	r2, [pc, #40]	@ (800714c <USB_EPStartXfer+0x1f8>)
 8007122:	f8dc e010 	ldr.w	lr, [ip, #16]
        pktcnt = (uint16_t)((ep->xfer_len + ep->maxpacket - 1U) / ep->maxpacket);
 8007126:	3c01      	subs	r4, #1
 8007128:	fbb4 f4f3 	udiv	r4, r4, r3
 800712c:	b2a4      	uxth	r4, r4
        USBx_OUTEP(epnum)->DOEPTSIZ |= USB_OTG_DOEPTSIZ_PKTCNT & ((uint32_t)pktcnt << 19);
 800712e:	ea02 42c4 	and.w	r2, r2, r4, lsl #19
        ep->xfer_size = ep->maxpacket * pktcnt;
 8007132:	4363      	muls	r3, r4
        USBx_OUTEP(epnum)->DOEPTSIZ |= USB_OTG_DOEPTSIZ_PKTCNT & ((uint32_t)pktcnt << 19);
 8007134:	ea42 020e 	orr.w	r2, r2, lr
        ep->xfer_size = ep->maxpacket * pktcnt;
 8007138:	620b      	str	r3, [r1, #32]
        USBx_OUTEP(epnum)->DOEPTSIZ |= USB_OTG_DOEPTSIZ_PKTCNT & ((uint32_t)pktcnt << 19);
 800713a:	f8cc 2010 	str.w	r2, [ip, #16]
        USBx_OUTEP(epnum)->DOEPTSIZ |= USB_OTG_DOEPTSIZ_XFRSIZ & ep->xfer_size;
 800713e:	f8dc 2010 	ldr.w	r2, [ip, #16]
 8007142:	f3c3 0312 	ubfx	r3, r3, #0, #19
 8007146:	4313      	orrs	r3, r2
 8007148:	e7c9      	b.n	80070de <USB_EPStartXfer+0x18a>
 800714a:	bf00      	nop
 800714c:	1ff80000 	.word	0x1ff80000
 8007150:	e007ffff 	.word	0xe007ffff
 8007154:	fff80000 	.word	0xfff80000

08007158 <USB_ReadPacket>:
{
 8007158:	4603      	mov	r3, r0
 800715a:	b570      	push	{r4, r5, r6, lr}
  for (i = 0U; i < count32b; i++)
 800715c:	2000      	movs	r0, #0
  uint32_t count32b = (uint32_t)len >> 2U;
 800715e:	0894      	lsrs	r4, r2, #2
    __UNALIGNED_UINT32_WRITE(pDest, USBx_DFIFO(0U));
 8007160:	f503 5580 	add.w	r5, r3, #4096	@ 0x1000
  uint16_t remaining_bytes = len % 4U;
 8007164:	f002 0203 	and.w	r2, r2, #3
  for (i = 0U; i < count32b; i++)
 8007168:	42a0      	cmp	r0, r4
 800716a:	d310      	bcc.n	800718e <USB_ReadPacket+0x36>
 800716c:	eb01 0084 	add.w	r0, r1, r4, lsl #2
  if (remaining_bytes != 0U)
 8007170:	b162      	cbz	r2, 800718c <USB_ReadPacket+0x34>
    __UNALIGNED_UINT32_WRITE(&pData, USBx_DFIFO(0U));
 8007172:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 8007176:	681c      	ldr	r4, [r3, #0]
    i = 0U;
 8007178:	2300      	movs	r3, #0
      *(uint8_t *)pDest = (uint8_t)(pData >> (8U * (uint8_t)(i)));
 800717a:	00d9      	lsls	r1, r3, #3
 800717c:	fa24 f101 	lsr.w	r1, r4, r1
 8007180:	54c1      	strb	r1, [r0, r3]
      i++;
 8007182:	3301      	adds	r3, #1
    } while (remaining_bytes != 0U);
 8007184:	b299      	uxth	r1, r3
 8007186:	428a      	cmp	r2, r1
 8007188:	d1f7      	bne.n	800717a <USB_ReadPacket+0x22>
 800718a:	4410      	add	r0, r2
}
 800718c:	bd70      	pop	{r4, r5, r6, pc}
    __UNALIGNED_UINT32_WRITE(pDest, USBx_DFIFO(0U));
 800718e:	682e      	ldr	r6, [r5, #0]
 8007190:	f841 6020 	str.w	r6, [r1, r0, lsl #2]
  for (i = 0U; i < count32b; i++)
 8007194:	3001      	adds	r0, #1
 8007196:	e7e7      	b.n	8007168 <USB_ReadPacket+0x10>

08007198 <USB_EPSetStall>:
  if (ep->is_in == 1U)
 8007198:	784a      	ldrb	r2, [r1, #1]
  uint32_t epnum = (uint32_t)ep->num;
 800719a:	780b      	ldrb	r3, [r1, #0]
  if (ep->is_in == 1U)
 800719c:	2a01      	cmp	r2, #1
    if (((USBx_INEP(epnum)->DIEPCTL & USB_OTG_DIEPCTL_EPENA) == 0U) && (epnum != 0U))
 800719e:	eb00 1043 	add.w	r0, r0, r3, lsl #5
  if (ep->is_in == 1U)
 80071a2:	d112      	bne.n	80071ca <USB_EPSetStall+0x32>
    if (((USBx_INEP(epnum)->DIEPCTL & USB_OTG_DIEPCTL_EPENA) == 0U) && (epnum != 0U))
 80071a4:	f8d0 2900 	ldr.w	r2, [r0, #2304]	@ 0x900
 80071a8:	2a00      	cmp	r2, #0
 80071aa:	db06      	blt.n	80071ba <USB_EPSetStall+0x22>
 80071ac:	b12b      	cbz	r3, 80071ba <USB_EPSetStall+0x22>
      USBx_INEP(epnum)->DIEPCTL &= ~(USB_OTG_DIEPCTL_EPDIS);
 80071ae:	f8d0 3900 	ldr.w	r3, [r0, #2304]	@ 0x900
 80071b2:	f023 4380 	bic.w	r3, r3, #1073741824	@ 0x40000000
 80071b6:	f8c0 3900 	str.w	r3, [r0, #2304]	@ 0x900
    USBx_INEP(epnum)->DIEPCTL |= USB_OTG_DIEPCTL_STALL;
 80071ba:	f8d0 3900 	ldr.w	r3, [r0, #2304]	@ 0x900
 80071be:	f443 1300 	orr.w	r3, r3, #2097152	@ 0x200000
 80071c2:	f8c0 3900 	str.w	r3, [r0, #2304]	@ 0x900
}
 80071c6:	2000      	movs	r0, #0
 80071c8:	4770      	bx	lr
    if (((USBx_OUTEP(epnum)->DOEPCTL & USB_OTG_DOEPCTL_EPENA) == 0U) && (epnum != 0U))
 80071ca:	f8d0 2b00 	ldr.w	r2, [r0, #2816]	@ 0xb00
 80071ce:	2a00      	cmp	r2, #0
 80071d0:	db06      	blt.n	80071e0 <USB_EPSetStall+0x48>
 80071d2:	b12b      	cbz	r3, 80071e0 <USB_EPSetStall+0x48>
      USBx_OUTEP(epnum)->DOEPCTL &= ~(USB_OTG_DOEPCTL_EPDIS);
 80071d4:	f8d0 3b00 	ldr.w	r3, [r0, #2816]	@ 0xb00
 80071d8:	f023 4380 	bic.w	r3, r3, #1073741824	@ 0x40000000
 80071dc:	f8c0 3b00 	str.w	r3, [r0, #2816]	@ 0xb00
    USBx_OUTEP(epnum)->DOEPCTL |= USB_OTG_DOEPCTL_STALL;
 80071e0:	f8d0 3b00 	ldr.w	r3, [r0, #2816]	@ 0xb00
 80071e4:	f443 1300 	orr.w	r3, r3, #2097152	@ 0x200000
 80071e8:	f8c0 3b00 	str.w	r3, [r0, #2816]	@ 0xb00
 80071ec:	e7eb      	b.n	80071c6 <USB_EPSetStall+0x2e>

080071ee <USB_EPClearStall>:
    USBx_INEP(epnum)->DIEPCTL &= ~USB_OTG_DIEPCTL_STALL;
 80071ee:	780b      	ldrb	r3, [r1, #0]
  if (ep->is_in == 1U)
 80071f0:	784a      	ldrb	r2, [r1, #1]
    USBx_INEP(epnum)->DIEPCTL &= ~USB_OTG_DIEPCTL_STALL;
 80071f2:	eb00 1043 	add.w	r0, r0, r3, lsl #5
    if ((ep->type == EP_TYPE_INTR) || (ep->type == EP_TYPE_BULK))
 80071f6:	790b      	ldrb	r3, [r1, #4]
  if (ep->is_in == 1U)
 80071f8:	2a01      	cmp	r2, #1
    if ((ep->type == EP_TYPE_INTR) || (ep->type == EP_TYPE_BULK))
 80071fa:	f1a3 0302 	sub.w	r3, r3, #2
 80071fe:	b2db      	uxtb	r3, r3
  if (ep->is_in == 1U)
 8007200:	d10f      	bne.n	8007222 <USB_EPClearStall+0x34>
    USBx_INEP(epnum)->DIEPCTL &= ~USB_OTG_DIEPCTL_STALL;
 8007202:	f8d0 2900 	ldr.w	r2, [r0, #2304]	@ 0x900
    if ((ep->type == EP_TYPE_INTR) || (ep->type == EP_TYPE_BULK))
 8007206:	2b01      	cmp	r3, #1
    USBx_INEP(epnum)->DIEPCTL &= ~USB_OTG_DIEPCTL_STALL;
 8007208:	f422 1200 	bic.w	r2, r2, #2097152	@ 0x200000
 800720c:	f8c0 2900 	str.w	r2, [r0, #2304]	@ 0x900
    if ((ep->type == EP_TYPE_INTR) || (ep->type == EP_TYPE_BULK))
 8007210:	d805      	bhi.n	800721e <USB_EPClearStall+0x30>
      USBx_INEP(epnum)->DIEPCTL |= USB_OTG_DIEPCTL_SD0PID_SEVNFRM; /* DATA0 */
 8007212:	f8d0 3900 	ldr.w	r3, [r0, #2304]	@ 0x900
 8007216:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 800721a:	f8c0 3900 	str.w	r3, [r0, #2304]	@ 0x900
}
 800721e:	2000      	movs	r0, #0
 8007220:	4770      	bx	lr
    USBx_OUTEP(epnum)->DOEPCTL &= ~USB_OTG_DOEPCTL_STALL;
 8007222:	f8d0 2b00 	ldr.w	r2, [r0, #2816]	@ 0xb00
 8007226:	f422 1200 	bic.w	r2, r2, #2097152	@ 0x200000
    if ((ep->type == EP_TYPE_INTR) || (ep->type == EP_TYPE_BULK))
 800722a:	2b01      	cmp	r3, #1
    USBx_OUTEP(epnum)->DOEPCTL &= ~USB_OTG_DOEPCTL_STALL;
 800722c:	f8c0 2b00 	str.w	r2, [r0, #2816]	@ 0xb00
      USBx_OUTEP(epnum)->DOEPCTL |= USB_OTG_DOEPCTL_SD0PID_SEVNFRM; /* DATA0 */
 8007230:	bf9e      	ittt	ls
 8007232:	f8d0 3b00 	ldrls.w	r3, [r0, #2816]	@ 0xb00
 8007236:	f043 5380 	orrls.w	r3, r3, #268435456	@ 0x10000000
 800723a:	f8c0 3b00 	strls.w	r3, [r0, #2816]	@ 0xb00
 800723e:	e7ee      	b.n	800721e <USB_EPClearStall+0x30>

08007240 <USB_SetDevAddress>:
  USBx_DEVICE->DCFG &= ~(USB_OTG_DCFG_DAD);
 8007240:	f8d0 3800 	ldr.w	r3, [r0, #2048]	@ 0x800
 8007244:	f423 63fe 	bic.w	r3, r3, #2032	@ 0x7f0
 8007248:	f8c0 3800 	str.w	r3, [r0, #2048]	@ 0x800
  USBx_DEVICE->DCFG |= ((uint32_t)address << 4) & USB_OTG_DCFG_DAD;
 800724c:	f8d0 3800 	ldr.w	r3, [r0, #2048]	@ 0x800
 8007250:	0109      	lsls	r1, r1, #4
 8007252:	f401 61fe 	and.w	r1, r1, #2032	@ 0x7f0
 8007256:	4319      	orrs	r1, r3
 8007258:	f8c0 1800 	str.w	r1, [r0, #2048]	@ 0x800
}
 800725c:	2000      	movs	r0, #0
 800725e:	4770      	bx	lr

08007260 <USB_DevConnect>:
  USBx_PCGCCTL &= ~(USB_OTG_PCGCCTL_STOPCLK | USB_OTG_PCGCCTL_GATECLK);
 8007260:	f8d0 3e00 	ldr.w	r3, [r0, #3584]	@ 0xe00
 8007264:	f023 0303 	bic.w	r3, r3, #3
 8007268:	f8c0 3e00 	str.w	r3, [r0, #3584]	@ 0xe00
  USBx_DEVICE->DCTL &= ~USB_OTG_DCTL_SDIS;
 800726c:	f8d0 3804 	ldr.w	r3, [r0, #2052]	@ 0x804
 8007270:	f023 0302 	bic.w	r3, r3, #2
 8007274:	f8c0 3804 	str.w	r3, [r0, #2052]	@ 0x804
}
 8007278:	2000      	movs	r0, #0
 800727a:	4770      	bx	lr

0800727c <USB_DevDisconnect>:
  USBx_PCGCCTL &= ~(USB_OTG_PCGCCTL_STOPCLK | USB_OTG_PCGCCTL_GATECLK);
 800727c:	f8d0 3e00 	ldr.w	r3, [r0, #3584]	@ 0xe00
 8007280:	f023 0303 	bic.w	r3, r3, #3
 8007284:	f8c0 3e00 	str.w	r3, [r0, #3584]	@ 0xe00
  USBx_DEVICE->DCTL |= USB_OTG_DCTL_SDIS;
 8007288:	f8d0 3804 	ldr.w	r3, [r0, #2052]	@ 0x804
 800728c:	f043 0302 	orr.w	r3, r3, #2
 8007290:	f8c0 3804 	str.w	r3, [r0, #2052]	@ 0x804
}
 8007294:	2000      	movs	r0, #0
 8007296:	4770      	bx	lr

08007298 <USB_ReadInterrupts>:
  tmpreg = USBx->GINTSTS;
 8007298:	6942      	ldr	r2, [r0, #20]
  tmpreg &= USBx->GINTMSK;
 800729a:	6980      	ldr	r0, [r0, #24]
}
 800729c:	4010      	ands	r0, r2
 800729e:	4770      	bx	lr

080072a0 <USB_ReadDevAllOutEpInterrupt>:
  tmpreg  = USBx_DEVICE->DAINT;
 80072a0:	f8d0 3818 	ldr.w	r3, [r0, #2072]	@ 0x818
 80072a4:	f500 6000 	add.w	r0, r0, #2048	@ 0x800
  tmpreg &= USBx_DEVICE->DAINTMSK;
 80072a8:	69c0      	ldr	r0, [r0, #28]
 80072aa:	4018      	ands	r0, r3
}
 80072ac:	0c00      	lsrs	r0, r0, #16
 80072ae:	4770      	bx	lr

080072b0 <USB_ReadDevAllInEpInterrupt>:
  tmpreg  = USBx_DEVICE->DAINT;
 80072b0:	f8d0 3818 	ldr.w	r3, [r0, #2072]	@ 0x818
 80072b4:	f500 6000 	add.w	r0, r0, #2048	@ 0x800
  tmpreg &= USBx_DEVICE->DAINTMSK;
 80072b8:	69c0      	ldr	r0, [r0, #28]
 80072ba:	4018      	ands	r0, r3
}
 80072bc:	b280      	uxth	r0, r0
 80072be:	4770      	bx	lr

080072c0 <USB_ReadDevOutEPInterrupt>:
  tmpreg  = USBx_OUTEP((uint32_t)epnum)->DOEPINT;
 80072c0:	eb00 1141 	add.w	r1, r0, r1, lsl #5
  tmpreg &= USBx_DEVICE->DOEPMSK;
 80072c4:	f500 6000 	add.w	r0, r0, #2048	@ 0x800
  tmpreg  = USBx_OUTEP((uint32_t)epnum)->DOEPINT;
 80072c8:	f8d1 2b08 	ldr.w	r2, [r1, #2824]	@ 0xb08
  tmpreg &= USBx_DEVICE->DOEPMSK;
 80072cc:	6940      	ldr	r0, [r0, #20]
}
 80072ce:	4010      	ands	r0, r2
 80072d0:	4770      	bx	lr

080072d2 <USB_ReadDevInEPInterrupt>:
  msk = USBx_DEVICE->DIEPMSK;
 80072d2:	f8d0 2810 	ldr.w	r2, [r0, #2064]	@ 0x810
  emp = USBx_DEVICE->DIEPEMPMSK;
 80072d6:	f8d0 3834 	ldr.w	r3, [r0, #2100]	@ 0x834
  tmpreg = USBx_INEP((uint32_t)epnum)->DIEPINT & msk;
 80072da:	eb00 1041 	add.w	r0, r0, r1, lsl #5
  msk |= ((emp >> (epnum & EP_ADDR_MSK)) & 0x1U) << 7;
 80072de:	f001 010f 	and.w	r1, r1, #15
 80072e2:	40cb      	lsrs	r3, r1
  tmpreg = USBx_INEP((uint32_t)epnum)->DIEPINT & msk;
 80072e4:	f500 6010 	add.w	r0, r0, #2304	@ 0x900
  msk |= ((emp >> (epnum & EP_ADDR_MSK)) & 0x1U) << 7;
 80072e8:	01db      	lsls	r3, r3, #7
  tmpreg = USBx_INEP((uint32_t)epnum)->DIEPINT & msk;
 80072ea:	6880      	ldr	r0, [r0, #8]
  msk |= ((emp >> (epnum & EP_ADDR_MSK)) & 0x1U) << 7;
 80072ec:	b2db      	uxtb	r3, r3
 80072ee:	4313      	orrs	r3, r2
}
 80072f0:	4018      	ands	r0, r3
 80072f2:	4770      	bx	lr

080072f4 <USB_GetMode>:
  return ((USBx->GINTSTS) & 0x1U);
 80072f4:	6940      	ldr	r0, [r0, #20]
}
 80072f6:	f000 0001 	and.w	r0, r0, #1
 80072fa:	4770      	bx	lr

080072fc <USB_ActivateSetup>:
  USBx_INEP(0U)->DIEPCTL &= ~USB_OTG_DIEPCTL_MPSIZ;
 80072fc:	f8d0 3900 	ldr.w	r3, [r0, #2304]	@ 0x900
 8007300:	f36f 030a 	bfc	r3, #0, #11
 8007304:	f8c0 3900 	str.w	r3, [r0, #2304]	@ 0x900
  USBx_DEVICE->DCTL |= USB_OTG_DCTL_CGINAK;
 8007308:	f8d0 3804 	ldr.w	r3, [r0, #2052]	@ 0x804
 800730c:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8007310:	f8c0 3804 	str.w	r3, [r0, #2052]	@ 0x804
}
 8007314:	2000      	movs	r0, #0
 8007316:	4770      	bx	lr

08007318 <USB_EP0_OutStart>:
{
 8007318:	b530      	push	{r4, r5, lr}
  uint32_t gSNPSiD = *(__IO const uint32_t *)(&USBx->CID + 0x1U);
 800731a:	6c05      	ldr	r5, [r0, #64]	@ 0x40
  if (gSNPSiD > USB_OTG_CORE_ID_300A)
 800731c:	4c10      	ldr	r4, [pc, #64]	@ (8007360 <USB_EP0_OutStart+0x48>)
 800731e:	42a5      	cmp	r5, r4
    if ((USBx_OUTEP(0U)->DOEPCTL & USB_OTG_DOEPCTL_EPENA) == USB_OTG_DOEPCTL_EPENA)
 8007320:	f500 6330 	add.w	r3, r0, #2816	@ 0xb00
  if (gSNPSiD > USB_OTG_CORE_ID_300A)
 8007324:	d903      	bls.n	800732e <USB_EP0_OutStart+0x16>
    if ((USBx_OUTEP(0U)->DOEPCTL & USB_OTG_DOEPCTL_EPENA) == USB_OTG_DOEPCTL_EPENA)
 8007326:	f8d0 4b00 	ldr.w	r4, [r0, #2816]	@ 0xb00
 800732a:	2c00      	cmp	r4, #0
 800732c:	db16      	blt.n	800735c <USB_EP0_OutStart+0x44>
  USBx_OUTEP(0U)->DOEPTSIZ = 0U;
 800732e:	2400      	movs	r4, #0
 8007330:	611c      	str	r4, [r3, #16]
  USBx_OUTEP(0U)->DOEPTSIZ |= (USB_OTG_DOEPTSIZ_PKTCNT & (1U << 19));
 8007332:	691c      	ldr	r4, [r3, #16]
 8007334:	f444 2400 	orr.w	r4, r4, #524288	@ 0x80000
 8007338:	611c      	str	r4, [r3, #16]
  USBx_OUTEP(0U)->DOEPTSIZ |= (3U * 8U);
 800733a:	691c      	ldr	r4, [r3, #16]
 800733c:	f044 0418 	orr.w	r4, r4, #24
 8007340:	611c      	str	r4, [r3, #16]
  USBx_OUTEP(0U)->DOEPTSIZ |=  USB_OTG_DOEPTSIZ_STUPCNT;
 8007342:	691c      	ldr	r4, [r3, #16]
  if (dma == 1U)
 8007344:	2901      	cmp	r1, #1
  USBx_OUTEP(0U)->DOEPTSIZ |=  USB_OTG_DOEPTSIZ_STUPCNT;
 8007346:	f044 44c0 	orr.w	r4, r4, #1610612736	@ 0x60000000
 800734a:	611c      	str	r4, [r3, #16]
    USBx_OUTEP(0U)->DOEPDMA = (uint32_t)psetup;
 800734c:	bf01      	itttt	eq
 800734e:	615a      	streq	r2, [r3, #20]
    USBx_OUTEP(0U)->DOEPCTL |= USB_OTG_DOEPCTL_EPENA | USB_OTG_DOEPCTL_USBAEP;
 8007350:	f8d0 3b00 	ldreq.w	r3, [r0, #2816]	@ 0xb00
 8007354:	f043 2380 	orreq.w	r3, r3, #2147516416	@ 0x80008000
 8007358:	f8c0 3b00 	streq.w	r3, [r0, #2816]	@ 0xb00
}
 800735c:	2000      	movs	r0, #0
 800735e:	bd30      	pop	{r4, r5, pc}
 8007360:	4f54300a 	.word	0x4f54300a

08007364 <SysTick_Handler>:

/*
  SysTick handler implementation that also clears overflow flag.
*/
#if (USE_CUSTOM_SYSTICK_HANDLER_IMPLEMENTATION == 0)
void SysTick_Handler (void) {
 8007364:	b508      	push	{r3, lr}
  /* Clear overflow flag */
  SysTick->CTRL;
 8007366:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 800736a:	691b      	ldr	r3, [r3, #16]

  if (xTaskGetSchedulerState() != taskSCHEDULER_NOT_STARTED) {
 800736c:	f001 fdee 	bl	8008f4c <xTaskGetSchedulerState>
 8007370:	2801      	cmp	r0, #1
 8007372:	d003      	beq.n	800737c <SysTick_Handler+0x18>
    /* Call tick handler */
    xPortSysTickHandler();
  }
}
 8007374:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    xPortSysTickHandler();
 8007378:	f000 bbdc 	b.w	8007b34 <xPortSysTickHandler>
}
 800737c:	bd08      	pop	{r3, pc}
	...

08007380 <osKernelInitialize>:
 */
__STATIC_FORCEINLINE uint32_t __get_IPSR(void)
{
  uint32_t result;

  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 8007380:	f3ef 8305 	mrs	r3, IPSR
/*---------------------------------------------------------------------------*/

osStatus_t osKernelInitialize (void) {
  osStatus_t stat;

  if (IS_IRQ()) {
 8007384:	b92b      	cbnz	r3, 8007392 <osKernelInitialize+0x12>
    stat = osErrorISR;
  }
  else {
    if (KernelState == osKernelInactive) {
 8007386:	4b06      	ldr	r3, [pc, #24]	@ (80073a0 <osKernelInitialize+0x20>)
 8007388:	6818      	ldr	r0, [r3, #0]
 800738a:	b928      	cbnz	r0, 8007398 <osKernelInitialize+0x18>
        EvrFreeRTOSSetup(0U);
      #endif
      #if defined(USE_FreeRTOS_HEAP_5) && (HEAP_5_REGION_SETUP == 1)
        vPortDefineHeapRegions (configHEAP_5_REGIONS);
      #endif
      KernelState = osKernelReady;
 800738c:	2201      	movs	r2, #1
 800738e:	601a      	str	r2, [r3, #0]
      stat = osOK;
 8007390:	4770      	bx	lr
    stat = osErrorISR;
 8007392:	f06f 0005 	mvn.w	r0, #5
 8007396:	4770      	bx	lr
    } else {
      stat = osError;
 8007398:	f04f 30ff 	mov.w	r0, #4294967295
    }
  }

  return (stat);
}
 800739c:	4770      	bx	lr
 800739e:	bf00      	nop
 80073a0:	20003888 	.word	0x20003888

080073a4 <osKernelStart>:
  }

  return (state);
}

osStatus_t osKernelStart (void) {
 80073a4:	b510      	push	{r4, lr}
 80073a6:	f3ef 8405 	mrs	r4, IPSR
  osStatus_t stat;

  if (IS_IRQ()) {
 80073aa:	b95c      	cbnz	r4, 80073c4 <osKernelStart+0x20>
    stat = osErrorISR;
  }
  else {
    if (KernelState == osKernelReady) {
 80073ac:	4b08      	ldr	r3, [pc, #32]	@ (80073d0 <osKernelStart+0x2c>)
 80073ae:	681a      	ldr	r2, [r3, #0]
 80073b0:	2a01      	cmp	r2, #1
 80073b2:	d10a      	bne.n	80073ca <osKernelStart+0x26>
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 80073b4:	4a07      	ldr	r2, [pc, #28]	@ (80073d4 <osKernelStart+0x30>)
 80073b6:	77d4      	strb	r4, [r2, #31]
      /* Ensure SVC priority is at the reset value */
      SVC_Setup();
      /* Change state to enable IRQ masking check */
      KernelState = osKernelRunning;
 80073b8:	2202      	movs	r2, #2
 80073ba:	601a      	str	r2, [r3, #0]
      /* Start the kernel scheduler */
      vTaskStartScheduler();
 80073bc:	f001 fb44 	bl	8008a48 <vTaskStartScheduler>
      stat = osOK;
 80073c0:	4620      	mov	r0, r4
      stat = osError;
    }
  }

  return (stat);
}
 80073c2:	bd10      	pop	{r4, pc}
    stat = osErrorISR;
 80073c4:	f06f 0005 	mvn.w	r0, #5
 80073c8:	e7fb      	b.n	80073c2 <osKernelStart+0x1e>
      stat = osError;
 80073ca:	f04f 30ff 	mov.w	r0, #4294967295
  return (stat);
 80073ce:	e7f8      	b.n	80073c2 <osKernelStart+0x1e>
 80073d0:	20003888 	.word	0x20003888
 80073d4:	e000ed00 	.word	0xe000ed00

080073d8 <osThreadNew>:
  return (configCPU_CLOCK_HZ);
}

/*---------------------------------------------------------------------------*/

osThreadId_t osThreadNew (osThreadFunc_t func, void *argument, const osThreadAttr_t *attr) {
 80073d8:	b5f0      	push	{r4, r5, r6, r7, lr}
 80073da:	b087      	sub	sp, #28
 80073dc:	4614      	mov	r4, r2
  uint32_t stack;
  TaskHandle_t hTask;
  UBaseType_t prio;
  int32_t mem;

  hTask = NULL;
 80073de:	2200      	movs	r2, #0
osThreadId_t osThreadNew (osThreadFunc_t func, void *argument, const osThreadAttr_t *attr) {
 80073e0:	460b      	mov	r3, r1
  hTask = NULL;
 80073e2:	9205      	str	r2, [sp, #20]
 80073e4:	f3ef 8205 	mrs	r2, IPSR

  if (!IS_IRQ() && (func != NULL)) {
 80073e8:	b9fa      	cbnz	r2, 800742a <osThreadNew+0x52>
 80073ea:	b1f0      	cbz	r0, 800742a <osThreadNew+0x52>
    prio  = (UBaseType_t)osPriorityNormal;

    name = NULL;
    mem  = -1;

    if (attr != NULL) {
 80073ec:	b354      	cbz	r4, 8007444 <osThreadNew+0x6c>
      if (attr->name != NULL) {
        name = attr->name;
      }
      if (attr->priority != osPriorityNone) {
 80073ee:	69a5      	ldr	r5, [r4, #24]
 80073f0:	b125      	cbz	r5, 80073fc <osThreadNew+0x24>
        prio = (UBaseType_t)attr->priority;
      }

      if ((prio < osPriorityIdle) || (prio > osPriorityISR) || ((attr->attr_bits & osThreadJoinable) == osThreadJoinable)) {
 80073f2:	1e69      	subs	r1, r5, #1
 80073f4:	2937      	cmp	r1, #55	@ 0x37
 80073f6:	d902      	bls.n	80073fe <osThreadNew+0x26>
        return (NULL);
 80073f8:	2000      	movs	r0, #0
 80073fa:	e017      	b.n	800742c <osThreadNew+0x54>
    prio  = (UBaseType_t)osPriorityNormal;
 80073fc:	2518      	movs	r5, #24
      if ((prio < osPriorityIdle) || (prio > osPriorityISR) || ((attr->attr_bits & osThreadJoinable) == osThreadJoinable)) {
 80073fe:	6862      	ldr	r2, [r4, #4]
 8007400:	07d2      	lsls	r2, r2, #31
 8007402:	d4f9      	bmi.n	80073f8 <osThreadNew+0x20>
      }

      if (attr->stack_size > 0U) {
 8007404:	6966      	ldr	r6, [r4, #20]
 8007406:	b19e      	cbz	r6, 8007430 <osThreadNew+0x58>
        /* In FreeRTOS stack is not in bytes, but in sizeof(StackType_t) which is 4 on ARM ports.       */
        /* Stack size should be therefore 4 byte aligned in order to avoid division caused side effects */
        stack = attr->stack_size / sizeof(StackType_t);
 8007408:	08b2      	lsrs	r2, r6, #2
      }

      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 800740a:	e9d4 7c02 	ldrd	r7, ip, [r4, #8]
      if (attr->name != NULL) {
 800740e:	6821      	ldr	r1, [r4, #0]
      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 8007410:	b187      	cbz	r7, 8007434 <osThreadNew+0x5c>
 8007412:	f1bc 0f5f 	cmp.w	ip, #95	@ 0x5f
 8007416:	d908      	bls.n	800742a <osThreadNew+0x52>
          (attr->stack_mem != NULL) && (attr->stack_size >  0U)) {
 8007418:	6924      	ldr	r4, [r4, #16]
      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 800741a:	b134      	cbz	r4, 800742a <osThreadNew+0x52>
          (attr->stack_mem != NULL) && (attr->stack_size >  0U)) {
 800741c:	b12e      	cbz	r6, 800742a <osThreadNew+0x52>
      mem = 0;
    }

    if (mem == 1) {
      #if (configSUPPORT_STATIC_ALLOCATION == 1)
        hTask = xTaskCreateStatic ((TaskFunction_t)func, name, stack, argument, prio, (StackType_t  *)attr->stack_mem,
 800741e:	e9cd 4701 	strd	r4, r7, [sp, #4]
 8007422:	9500      	str	r5, [sp, #0]
 8007424:	f001 faa9 	bl	800897a <xTaskCreateStatic>
 8007428:	9005      	str	r0, [sp, #20]
        #endif
      }
    }
  }

  return ((osThreadId_t)hTask);
 800742a:	9805      	ldr	r0, [sp, #20]
}
 800742c:	b007      	add	sp, #28
 800742e:	bdf0      	pop	{r4, r5, r6, r7, pc}
    stack = configMINIMAL_STACK_SIZE;
 8007430:	2280      	movs	r2, #128	@ 0x80
 8007432:	e7ea      	b.n	800740a <osThreadNew+0x32>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U) && (attr->stack_mem == NULL)) {
 8007434:	f1bc 0f00 	cmp.w	ip, #0
 8007438:	d1f7      	bne.n	800742a <osThreadNew+0x52>
 800743a:	6924      	ldr	r4, [r4, #16]
 800743c:	2c00      	cmp	r4, #0
 800743e:	d1f4      	bne.n	800742a <osThreadNew+0x52>
 8007440:	460c      	mov	r4, r1
 8007442:	e001      	b.n	8007448 <osThreadNew+0x70>
    prio  = (UBaseType_t)osPriorityNormal;
 8007444:	2518      	movs	r5, #24
    stack = configMINIMAL_STACK_SIZE;
 8007446:	2280      	movs	r2, #128	@ 0x80
          if (xTaskCreate ((TaskFunction_t)func, name, (uint16_t)stack, argument, prio, &hTask) != pdPASS) {
 8007448:	a905      	add	r1, sp, #20
 800744a:	e9cd 5100 	strd	r5, r1, [sp]
 800744e:	b292      	uxth	r2, r2
 8007450:	4621      	mov	r1, r4
 8007452:	f001 faca 	bl	80089ea <xTaskCreate>
 8007456:	2801      	cmp	r0, #1
            hTask = NULL;
 8007458:	bf1c      	itt	ne
 800745a:	2300      	movne	r3, #0
 800745c:	9305      	strne	r3, [sp, #20]
 800745e:	e7e4      	b.n	800742a <osThreadNew+0x52>

08007460 <osDelay>:
  /* Return flags before clearing */
  return (rflags);
}
#endif /* (configUSE_OS2_THREAD_FLAGS == 1) */

osStatus_t osDelay (uint32_t ticks) {
 8007460:	b508      	push	{r3, lr}
 8007462:	f3ef 8205 	mrs	r2, IPSR
  osStatus_t stat;

  if (IS_IRQ()) {
 8007466:	b922      	cbnz	r2, 8007472 <osDelay+0x12>
    stat = osErrorISR;
  }
  else {
    stat = osOK;

    if (ticks != 0U) {
 8007468:	b108      	cbz	r0, 800746e <osDelay+0xe>
      vTaskDelay(ticks);
 800746a:	f001 fc4b 	bl	8008d04 <vTaskDelay>
    stat = osOK;
 800746e:	2000      	movs	r0, #0
    }
  }

  return (stat);
}
 8007470:	bd08      	pop	{r3, pc}
    stat = osErrorISR;
 8007472:	f06f 0005 	mvn.w	r0, #5
  return (stat);
 8007476:	e7fb      	b.n	8007470 <osDelay+0x10>

08007478 <osSemaphoreNew>:
}
#endif /* (configUSE_OS2_MUTEX == 1) */

/*---------------------------------------------------------------------------*/

osSemaphoreId_t osSemaphoreNew (uint32_t max_count, uint32_t initial_count, const osSemaphoreAttr_t *attr) {
 8007478:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800747a:	4604      	mov	r4, r0
 800747c:	460e      	mov	r6, r1
 800747e:	4615      	mov	r5, r2
 8007480:	f3ef 8205 	mrs	r2, IPSR
  const char *name;
  #endif

  hSemaphore = NULL;

  if (!IS_IRQ() && (max_count > 0U) && (initial_count <= max_count)) {
 8007484:	b942      	cbnz	r2, 8007498 <osSemaphoreNew+0x20>
 8007486:	b138      	cbz	r0, 8007498 <osSemaphoreNew+0x20>
 8007488:	4288      	cmp	r0, r1
 800748a:	d305      	bcc.n	8007498 <osSemaphoreNew+0x20>
    mem = -1;

    if (attr != NULL) {
 800748c:	b155      	cbz	r5, 80074a4 <osSemaphoreNew+0x2c>
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticSemaphore_t))) {
 800748e:	e9d5 3702 	ldrd	r3, r7, [r5, #8]
 8007492:	b12b      	cbz	r3, 80074a0 <osSemaphoreNew+0x28>
 8007494:	2f4f      	cmp	r7, #79	@ 0x4f
 8007496:	d822      	bhi.n	80074de <osSemaphoreNew+0x66>
  hSemaphore = NULL;
 8007498:	2400      	movs	r4, #0
      #endif
    }
  }

  return ((osSemaphoreId_t)hSemaphore);
}
 800749a:	4620      	mov	r0, r4
 800749c:	b003      	add	sp, #12
 800749e:	bdf0      	pop	{r4, r5, r6, r7, pc}
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U)) {
 80074a0:	2f00      	cmp	r7, #0
 80074a2:	d1f9      	bne.n	8007498 <osSemaphoreNew+0x20>
      if (max_count == 1U) {
 80074a4:	2c01      	cmp	r4, #1
 80074a6:	d00c      	beq.n	80074c2 <osSemaphoreNew+0x4a>
            hSemaphore = xSemaphoreCreateCounting (max_count, initial_count);
 80074a8:	4620      	mov	r0, r4
 80074aa:	4631      	mov	r1, r6
 80074ac:	f000 fd7a 	bl	8007fa4 <xQueueCreateCountingSemaphore>
      if (hSemaphore != NULL) {
 80074b0:	4604      	mov	r4, r0
 80074b2:	2800      	cmp	r0, #0
 80074b4:	d0f0      	beq.n	8007498 <osSemaphoreNew+0x20>
        if (attr != NULL) {
 80074b6:	b985      	cbnz	r5, 80074da <osSemaphoreNew+0x62>
        vQueueAddToRegistry (hSemaphore, name);
 80074b8:	4629      	mov	r1, r5
 80074ba:	4620      	mov	r0, r4
 80074bc:	f001 f898 	bl	80085f0 <vQueueAddToRegistry>
  return ((osSemaphoreId_t)hSemaphore);
 80074c0:	e7eb      	b.n	800749a <osSemaphoreNew+0x22>
            hSemaphore = xSemaphoreCreateBinary();
 80074c2:	2203      	movs	r2, #3
 80074c4:	2100      	movs	r1, #0
 80074c6:	2001      	movs	r0, #1
 80074c8:	f000 fd23 	bl	8007f12 <xQueueGenericCreate>
 80074cc:	e00e      	b.n	80074ec <osSemaphoreNew+0x74>
            hSemaphore = xSemaphoreCreateCountingStatic (max_count, initial_count, (StaticSemaphore_t *)attr->cb_mem);
 80074ce:	461a      	mov	r2, r3
 80074d0:	f000 fd46 	bl	8007f60 <xQueueCreateCountingSemaphoreStatic>
      if (hSemaphore != NULL) {
 80074d4:	4604      	mov	r4, r0
 80074d6:	2800      	cmp	r0, #0
 80074d8:	d0de      	beq.n	8007498 <osSemaphoreNew+0x20>
          name = attr->name;
 80074da:	682d      	ldr	r5, [r5, #0]
 80074dc:	e7ec      	b.n	80074b8 <osSemaphoreNew+0x40>
      if (max_count == 1U) {
 80074de:	2801      	cmp	r0, #1
 80074e0:	d1f5      	bne.n	80074ce <osSemaphoreNew+0x56>
            hSemaphore = xSemaphoreCreateBinaryStatic ((StaticSemaphore_t *)attr->cb_mem);
 80074e2:	2103      	movs	r1, #3
 80074e4:	9100      	str	r1, [sp, #0]
 80074e6:	4611      	mov	r1, r2
 80074e8:	f000 fcc5 	bl	8007e76 <xQueueGenericCreateStatic>
            hSemaphore = xSemaphoreCreateBinary();
 80074ec:	4604      	mov	r4, r0
        if ((hSemaphore != NULL) && (initial_count != 0U)) {
 80074ee:	2800      	cmp	r0, #0
 80074f0:	d0d2      	beq.n	8007498 <osSemaphoreNew+0x20>
 80074f2:	2e00      	cmp	r6, #0
 80074f4:	d0df      	beq.n	80074b6 <osSemaphoreNew+0x3e>
          if (xSemaphoreGive (hSemaphore) != pdPASS) {
 80074f6:	2300      	movs	r3, #0
 80074f8:	461a      	mov	r2, r3
 80074fa:	4619      	mov	r1, r3
 80074fc:	f000 fd70 	bl	8007fe0 <xQueueGenericSend>
 8007500:	2801      	cmp	r0, #1
 8007502:	d0d8      	beq.n	80074b6 <osSemaphoreNew+0x3e>
            vSemaphoreDelete (hSemaphore);
 8007504:	4620      	mov	r0, r4
 8007506:	f001 f89d 	bl	8008644 <vQueueDelete>
      if (hSemaphore != NULL) {
 800750a:	e7c5      	b.n	8007498 <osSemaphoreNew+0x20>

0800750c <osSemaphoreAcquire>:

osStatus_t osSemaphoreAcquire (osSemaphoreId_t semaphore_id, uint32_t timeout) {
 800750c:	b513      	push	{r0, r1, r4, lr}
 800750e:	460c      	mov	r4, r1
  osStatus_t stat;
  BaseType_t yield;

  stat = osOK;

  if (hSemaphore == NULL) {
 8007510:	b328      	cbz	r0, 800755e <osSemaphoreAcquire+0x52>
 8007512:	f3ef 8305 	mrs	r3, IPSR
    stat = osErrorParameter;
  }
  else if (IS_IRQ()) {
 8007516:	b1cb      	cbz	r3, 800754c <osSemaphoreAcquire+0x40>
    if (timeout != 0U) {
 8007518:	bb09      	cbnz	r1, 800755e <osSemaphoreAcquire+0x52>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xSemaphoreTakeFromISR (hSemaphore, &yield) != pdPASS) {
 800751a:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 800751c:	9101      	str	r1, [sp, #4]
      if (xSemaphoreTakeFromISR (hSemaphore, &yield) != pdPASS) {
 800751e:	f001 f81a 	bl	8008556 <xQueueReceiveFromISR>
 8007522:	2801      	cmp	r0, #1
 8007524:	d003      	beq.n	800752e <osSemaphoreAcquire+0x22>
        stat = osErrorResource;
 8007526:	f06f 0002 	mvn.w	r0, #2
      }
    }
  }

  return (stat);
}
 800752a:	b002      	add	sp, #8
 800752c:	bd10      	pop	{r4, pc}
        portYIELD_FROM_ISR (yield);
 800752e:	9b01      	ldr	r3, [sp, #4]
 8007530:	b90b      	cbnz	r3, 8007536 <osSemaphoreAcquire+0x2a>
  stat = osOK;
 8007532:	2000      	movs	r0, #0
 8007534:	e7f9      	b.n	800752a <osSemaphoreAcquire+0x1e>
        portYIELD_FROM_ISR (yield);
 8007536:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 800753a:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 800753e:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 8007542:	f3bf 8f4f 	dsb	sy
 8007546:	f3bf 8f6f 	isb	sy
 800754a:	e7f2      	b.n	8007532 <osSemaphoreAcquire+0x26>
    if (xSemaphoreTake (hSemaphore, (TickType_t)timeout) != pdPASS) {
 800754c:	f000 ff46 	bl	80083dc <xQueueSemaphoreTake>
 8007550:	2801      	cmp	r0, #1
 8007552:	d0ee      	beq.n	8007532 <osSemaphoreAcquire+0x26>
      if (timeout != 0U) {
 8007554:	2c00      	cmp	r4, #0
 8007556:	d0e6      	beq.n	8007526 <osSemaphoreAcquire+0x1a>
        stat = osErrorTimeout;
 8007558:	f06f 0001 	mvn.w	r0, #1
 800755c:	e7e5      	b.n	800752a <osSemaphoreAcquire+0x1e>
    stat = osErrorParameter;
 800755e:	f06f 0003 	mvn.w	r0, #3
  return (stat);
 8007562:	e7e2      	b.n	800752a <osSemaphoreAcquire+0x1e>

08007564 <osSemaphoreRelease>:

osStatus_t osSemaphoreRelease (osSemaphoreId_t semaphore_id) {
 8007564:	b507      	push	{r0, r1, r2, lr}
  osStatus_t stat;
  BaseType_t yield;

  stat = osOK;

  if (hSemaphore == NULL) {
 8007566:	b318      	cbz	r0, 80075b0 <osSemaphoreRelease+0x4c>
 8007568:	f3ef 8305 	mrs	r3, IPSR
    stat = osErrorParameter;
  }
  else if (IS_IRQ()) {
 800756c:	b1cb      	cbz	r3, 80075a2 <osSemaphoreRelease+0x3e>
    yield = pdFALSE;
 800756e:	2300      	movs	r3, #0

    if (xSemaphoreGiveFromISR (hSemaphore, &yield) != pdTRUE) {
 8007570:	a901      	add	r1, sp, #4
    yield = pdFALSE;
 8007572:	9301      	str	r3, [sp, #4]
    if (xSemaphoreGiveFromISR (hSemaphore, &yield) != pdTRUE) {
 8007574:	f000 fe43 	bl	80081fe <xQueueGiveFromISR>
 8007578:	2801      	cmp	r0, #1
 800757a:	d004      	beq.n	8007586 <osSemaphoreRelease+0x22>
      portYIELD_FROM_ISR (yield);
    }
  }
  else {
    if (xSemaphoreGive (hSemaphore) != pdPASS) {
      stat = osErrorResource;
 800757c:	f06f 0002 	mvn.w	r0, #2
    }
  }

  return (stat);
}
 8007580:	b003      	add	sp, #12
 8007582:	f85d fb04 	ldr.w	pc, [sp], #4
      portYIELD_FROM_ISR (yield);
 8007586:	9b01      	ldr	r3, [sp, #4]
 8007588:	b14b      	cbz	r3, 800759e <osSemaphoreRelease+0x3a>
 800758a:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 800758e:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8007592:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 8007596:	f3bf 8f4f 	dsb	sy
 800759a:	f3bf 8f6f 	isb	sy
  stat = osOK;
 800759e:	2000      	movs	r0, #0
 80075a0:	e7ee      	b.n	8007580 <osSemaphoreRelease+0x1c>
    if (xSemaphoreGive (hSemaphore) != pdPASS) {
 80075a2:	461a      	mov	r2, r3
 80075a4:	4619      	mov	r1, r3
 80075a6:	f000 fd1b 	bl	8007fe0 <xQueueGenericSend>
 80075aa:	2801      	cmp	r0, #1
 80075ac:	d0f7      	beq.n	800759e <osSemaphoreRelease+0x3a>
 80075ae:	e7e5      	b.n	800757c <osSemaphoreRelease+0x18>
    stat = osErrorParameter;
 80075b0:	f06f 0003 	mvn.w	r0, #3
  return (stat);
 80075b4:	e7e4      	b.n	8007580 <osSemaphoreRelease+0x1c>

080075b6 <osMessageQueueNew>:
  return (stat);
}

/*---------------------------------------------------------------------------*/

osMessageQueueId_t osMessageQueueNew (uint32_t msg_count, uint32_t msg_size, const osMessageQueueAttr_t *attr) {
 80075b6:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80075b8:	4605      	mov	r5, r0
 80075ba:	460e      	mov	r6, r1
 80075bc:	4614      	mov	r4, r2
 80075be:	f3ef 8705 	mrs	r7, IPSR
  const char *name;
  #endif

  hQueue = NULL;

  if (!IS_IRQ() && (msg_count > 0U) && (msg_size > 0U)) {
 80075c2:	b11f      	cbz	r7, 80075cc <osMessageQueueNew+0x16>
  hQueue = NULL;
 80075c4:	2500      	movs	r5, #0
    #endif

  }

  return ((osMessageQueueId_t)hQueue);
}
 80075c6:	4628      	mov	r0, r5
 80075c8:	b003      	add	sp, #12
 80075ca:	bdf0      	pop	{r4, r5, r6, r7, pc}
  if (!IS_IRQ() && (msg_count > 0U) && (msg_size > 0U)) {
 80075cc:	2800      	cmp	r0, #0
 80075ce:	d0f9      	beq.n	80075c4 <osMessageQueueNew+0xe>
 80075d0:	2900      	cmp	r1, #0
 80075d2:	d0f7      	beq.n	80075c4 <osMessageQueueNew+0xe>
    if (attr != NULL) {
 80075d4:	b1da      	cbz	r2, 800760e <osMessageQueueNew+0x58>
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticQueue_t)) &&
 80075d6:	e9d2 3202 	ldrd	r3, r2, [r2, #8]
 80075da:	b183      	cbz	r3, 80075fe <osMessageQueueNew+0x48>
 80075dc:	2a4f      	cmp	r2, #79	@ 0x4f
 80075de:	d9f1      	bls.n	80075c4 <osMessageQueueNew+0xe>
          (attr->mq_mem != NULL) && (attr->mq_size >= (msg_count * msg_size))) {
 80075e0:	6922      	ldr	r2, [r4, #16]
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticQueue_t)) &&
 80075e2:	2a00      	cmp	r2, #0
 80075e4:	d0ee      	beq.n	80075c4 <osMessageQueueNew+0xe>
          (attr->mq_mem != NULL) && (attr->mq_size >= (msg_count * msg_size))) {
 80075e6:	6966      	ldr	r6, [r4, #20]
 80075e8:	434d      	muls	r5, r1
 80075ea:	42ae      	cmp	r6, r5
 80075ec:	d3ea      	bcc.n	80075c4 <osMessageQueueNew+0xe>
        hQueue = xQueueCreateStatic (msg_count, msg_size, attr->mq_mem, attr->cb_mem);
 80075ee:	9700      	str	r7, [sp, #0]
 80075f0:	f000 fc41 	bl	8007e76 <xQueueGenericCreateStatic>
    if (hQueue != NULL) {
 80075f4:	4605      	mov	r5, r0
 80075f6:	2800      	cmp	r0, #0
 80075f8:	d0e4      	beq.n	80075c4 <osMessageQueueNew+0xe>
        name = attr->name;
 80075fa:	6824      	ldr	r4, [r4, #0]
 80075fc:	e011      	b.n	8007622 <osMessageQueueNew+0x6c>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U) &&
 80075fe:	2a00      	cmp	r2, #0
 8007600:	d1e0      	bne.n	80075c4 <osMessageQueueNew+0xe>
 8007602:	6923      	ldr	r3, [r4, #16]
 8007604:	2b00      	cmp	r3, #0
 8007606:	d1dd      	bne.n	80075c4 <osMessageQueueNew+0xe>
            (attr->mq_mem == NULL) && (attr->mq_size == 0U)) {
 8007608:	6963      	ldr	r3, [r4, #20]
 800760a:	2b00      	cmp	r3, #0
 800760c:	d1da      	bne.n	80075c4 <osMessageQueueNew+0xe>
          hQueue = xQueueCreate (msg_count, msg_size);
 800760e:	4628      	mov	r0, r5
 8007610:	2200      	movs	r2, #0
 8007612:	4631      	mov	r1, r6
 8007614:	f000 fc7d 	bl	8007f12 <xQueueGenericCreate>
    if (hQueue != NULL) {
 8007618:	4605      	mov	r5, r0
 800761a:	2800      	cmp	r0, #0
 800761c:	d0d2      	beq.n	80075c4 <osMessageQueueNew+0xe>
      if (attr != NULL) {
 800761e:	2c00      	cmp	r4, #0
 8007620:	d1eb      	bne.n	80075fa <osMessageQueueNew+0x44>
      vQueueAddToRegistry (hQueue, name);
 8007622:	4621      	mov	r1, r4
 8007624:	4628      	mov	r0, r5
 8007626:	f000 ffe3 	bl	80085f0 <vQueueAddToRegistry>
  return ((osMessageQueueId_t)hQueue);
 800762a:	e7cc      	b.n	80075c6 <osMessageQueueNew+0x10>

0800762c <osMessageQueuePut>:

osStatus_t osMessageQueuePut (osMessageQueueId_t mq_id, const void *msg_ptr, uint8_t msg_prio, uint32_t timeout) {
 800762c:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800762e:	461c      	mov	r4, r3
 8007630:	f3ef 8605 	mrs	r6, IPSR

  (void)msg_prio; /* Message priority is ignored */

  stat = osOK;

  if (IS_IRQ()) {
 8007634:	b1de      	cbz	r6, 800766e <osMessageQueuePut+0x42>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 8007636:	b338      	cbz	r0, 8007688 <osMessageQueuePut+0x5c>
 8007638:	b331      	cbz	r1, 8007688 <osMessageQueuePut+0x5c>
 800763a:	bb2b      	cbnz	r3, 8007688 <osMessageQueuePut+0x5c>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xQueueSendToBackFromISR (hQueue, msg_ptr, &yield) != pdTRUE) {
 800763c:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 800763e:	9301      	str	r3, [sp, #4]
      if (xQueueSendToBackFromISR (hQueue, msg_ptr, &yield) != pdTRUE) {
 8007640:	f000 fd80 	bl	8008144 <xQueueGenericSendFromISR>
 8007644:	2801      	cmp	r0, #1
 8007646:	d003      	beq.n	8007650 <osMessageQueuePut+0x24>
        stat = osErrorResource;
 8007648:	f06f 0002 	mvn.w	r0, #2
      }
    }
  }

  return (stat);
}
 800764c:	b002      	add	sp, #8
 800764e:	bd70      	pop	{r4, r5, r6, pc}
        portYIELD_FROM_ISR (yield);
 8007650:	9b01      	ldr	r3, [sp, #4]
 8007652:	b90b      	cbnz	r3, 8007658 <osMessageQueuePut+0x2c>
  stat = osOK;
 8007654:	2000      	movs	r0, #0
 8007656:	e7f9      	b.n	800764c <osMessageQueuePut+0x20>
        portYIELD_FROM_ISR (yield);
 8007658:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 800765c:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8007660:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 8007664:	f3bf 8f4f 	dsb	sy
 8007668:	f3bf 8f6f 	isb	sy
 800766c:	e7f2      	b.n	8007654 <osMessageQueuePut+0x28>
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
 800766e:	b158      	cbz	r0, 8007688 <osMessageQueuePut+0x5c>
 8007670:	b151      	cbz	r1, 8007688 <osMessageQueuePut+0x5c>
      if (xQueueSendToBack (hQueue, msg_ptr, (TickType_t)timeout) != pdPASS) {
 8007672:	4633      	mov	r3, r6
 8007674:	4622      	mov	r2, r4
 8007676:	f000 fcb3 	bl	8007fe0 <xQueueGenericSend>
 800767a:	2801      	cmp	r0, #1
 800767c:	d0ea      	beq.n	8007654 <osMessageQueuePut+0x28>
        if (timeout != 0U) {
 800767e:	2c00      	cmp	r4, #0
 8007680:	d0e2      	beq.n	8007648 <osMessageQueuePut+0x1c>
          stat = osErrorTimeout;
 8007682:	f06f 0001 	mvn.w	r0, #1
 8007686:	e7e1      	b.n	800764c <osMessageQueuePut+0x20>
      stat = osErrorParameter;
 8007688:	f06f 0003 	mvn.w	r0, #3
  return (stat);
 800768c:	e7de      	b.n	800764c <osMessageQueuePut+0x20>

0800768e <osMessageQueueGet>:

osStatus_t osMessageQueueGet (osMessageQueueId_t mq_id, void *msg_ptr, uint8_t *msg_prio, uint32_t timeout) {
 800768e:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8007690:	461c      	mov	r4, r3
 8007692:	f3ef 8305 	mrs	r3, IPSR

  (void)msg_prio; /* Message priority is ignored */

  stat = osOK;

  if (IS_IRQ()) {
 8007696:	b1db      	cbz	r3, 80076d0 <osMessageQueueGet+0x42>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 8007698:	b330      	cbz	r0, 80076e8 <osMessageQueueGet+0x5a>
 800769a:	b329      	cbz	r1, 80076e8 <osMessageQueueGet+0x5a>
 800769c:	bb24      	cbnz	r4, 80076e8 <osMessageQueueGet+0x5a>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xQueueReceiveFromISR (hQueue, msg_ptr, &yield) != pdPASS) {
 800769e:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 80076a0:	9401      	str	r4, [sp, #4]
      if (xQueueReceiveFromISR (hQueue, msg_ptr, &yield) != pdPASS) {
 80076a2:	f000 ff58 	bl	8008556 <xQueueReceiveFromISR>
 80076a6:	2801      	cmp	r0, #1
 80076a8:	d003      	beq.n	80076b2 <osMessageQueueGet+0x24>
        stat = osErrorResource;
 80076aa:	f06f 0002 	mvn.w	r0, #2
      }
    }
  }

  return (stat);
}
 80076ae:	b003      	add	sp, #12
 80076b0:	bd30      	pop	{r4, r5, pc}
        portYIELD_FROM_ISR (yield);
 80076b2:	9b01      	ldr	r3, [sp, #4]
 80076b4:	b90b      	cbnz	r3, 80076ba <osMessageQueueGet+0x2c>
  stat = osOK;
 80076b6:	2000      	movs	r0, #0
 80076b8:	e7f9      	b.n	80076ae <osMessageQueueGet+0x20>
        portYIELD_FROM_ISR (yield);
 80076ba:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 80076be:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 80076c2:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 80076c6:	f3bf 8f4f 	dsb	sy
 80076ca:	f3bf 8f6f 	isb	sy
 80076ce:	e7f2      	b.n	80076b6 <osMessageQueueGet+0x28>
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
 80076d0:	b150      	cbz	r0, 80076e8 <osMessageQueueGet+0x5a>
 80076d2:	b149      	cbz	r1, 80076e8 <osMessageQueueGet+0x5a>
      if (xQueueReceive (hQueue, msg_ptr, (TickType_t)timeout) != pdPASS) {
 80076d4:	4622      	mov	r2, r4
 80076d6:	f000 fde3 	bl	80082a0 <xQueueReceive>
 80076da:	2801      	cmp	r0, #1
 80076dc:	d0eb      	beq.n	80076b6 <osMessageQueueGet+0x28>
        if (timeout != 0U) {
 80076de:	2c00      	cmp	r4, #0
 80076e0:	d0e3      	beq.n	80076aa <osMessageQueueGet+0x1c>
          stat = osErrorTimeout;
 80076e2:	f06f 0001 	mvn.w	r0, #1
 80076e6:	e7e2      	b.n	80076ae <osMessageQueueGet+0x20>
      stat = osErrorParameter;
 80076e8:	f06f 0003 	mvn.w	r0, #3
  return (stat);
 80076ec:	e7df      	b.n	80076ae <osMessageQueueGet+0x20>
	...

080076f0 <vApplicationGetIdleTaskMemory>:
__WEAK void vApplicationGetIdleTaskMemory (StaticTask_t **ppxIdleTaskTCBBuffer, StackType_t **ppxIdleTaskStackBuffer, uint32_t *pulIdleTaskStackSize) {
  /* Idle task control block and stack */
  static StaticTask_t Idle_TCB;
  static StackType_t  Idle_Stack[configMINIMAL_STACK_SIZE];

  *ppxIdleTaskTCBBuffer   = &Idle_TCB;
 80076f0:	4b03      	ldr	r3, [pc, #12]	@ (8007700 <vApplicationGetIdleTaskMemory+0x10>)
 80076f2:	6003      	str	r3, [r0, #0]
  *ppxIdleTaskStackBuffer = &Idle_Stack[0];
 80076f4:	4b03      	ldr	r3, [pc, #12]	@ (8007704 <vApplicationGetIdleTaskMemory+0x14>)
 80076f6:	600b      	str	r3, [r1, #0]
  *pulIdleTaskStackSize   = (uint32_t)configMINIMAL_STACK_SIZE;
 80076f8:	2380      	movs	r3, #128	@ 0x80
 80076fa:	6013      	str	r3, [r2, #0]
}
 80076fc:	4770      	bx	lr
 80076fe:	bf00      	nop
 8007700:	20003828 	.word	0x20003828
 8007704:	20003628 	.word	0x20003628

08007708 <vApplicationGetTimerTaskMemory>:
__WEAK void vApplicationGetTimerTaskMemory (StaticTask_t **ppxTimerTaskTCBBuffer, StackType_t **ppxTimerTaskStackBuffer, uint32_t *pulTimerTaskStackSize) {
  /* Timer task control block and stack */
  static StaticTask_t Timer_TCB;
  static StackType_t  Timer_Stack[configTIMER_TASK_STACK_DEPTH];

  *ppxTimerTaskTCBBuffer   = &Timer_TCB;
 8007708:	4b03      	ldr	r3, [pc, #12]	@ (8007718 <vApplicationGetTimerTaskMemory+0x10>)
 800770a:	6003      	str	r3, [r0, #0]
  *ppxTimerTaskStackBuffer = &Timer_Stack[0];
 800770c:	4b03      	ldr	r3, [pc, #12]	@ (800771c <vApplicationGetTimerTaskMemory+0x14>)
 800770e:	600b      	str	r3, [r1, #0]
  *pulTimerTaskStackSize   = (uint32_t)configTIMER_TASK_STACK_DEPTH;
 8007710:	f44f 7380 	mov.w	r3, #256	@ 0x100
 8007714:	6013      	str	r3, [r2, #0]
}
 8007716:	4770      	bx	lr
 8007718:	200035c8 	.word	0x200035c8
 800771c:	200031c8 	.word	0x200031c8

08007720 <prvInsertBlockIntoFreeList>:
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
}
/*-----------------------------------------------------------*/

static void prvInsertBlockIntoFreeList( BlockLink_t *pxBlockToInsert )
{
 8007720:	b510      	push	{r4, lr}
BlockLink_t *pxIterator;
uint8_t *puc;

	/* Iterate through the list until a block is found that has a higher address
	than the block being inserted. */
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
 8007722:	4b10      	ldr	r3, [pc, #64]	@ (8007764 <prvInsertBlockIntoFreeList+0x44>)
 8007724:	461a      	mov	r2, r3
 8007726:	681b      	ldr	r3, [r3, #0]
 8007728:	4283      	cmp	r3, r0
 800772a:	d3fb      	bcc.n	8007724 <prvInsertBlockIntoFreeList+0x4>
	}

	/* Do the block being inserted, and the block it is being inserted after
	make a contiguous block of memory? */
	puc = ( uint8_t * ) pxIterator;
	if( ( puc + pxIterator->xBlockSize ) == ( uint8_t * ) pxBlockToInsert )
 800772c:	6854      	ldr	r4, [r2, #4]
 800772e:	1911      	adds	r1, r2, r4
 8007730:	4288      	cmp	r0, r1
	{
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
 8007732:	bf01      	itttt	eq
 8007734:	6841      	ldreq	r1, [r0, #4]
		pxBlockToInsert = pxIterator;
 8007736:	4610      	moveq	r0, r2
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
 8007738:	1909      	addeq	r1, r1, r4
 800773a:	6051      	streq	r1, [r2, #4]
	}

	/* Do the block being inserted, and the block it is being inserted before
	make a contiguous block of memory? */
	puc = ( uint8_t * ) pxBlockToInsert;
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800773c:	6844      	ldr	r4, [r0, #4]
 800773e:	1901      	adds	r1, r0, r4
 8007740:	428b      	cmp	r3, r1
 8007742:	d10c      	bne.n	800775e <prvInsertBlockIntoFreeList+0x3e>
	{
		if( pxIterator->pxNextFreeBlock != pxEnd )
 8007744:	4908      	ldr	r1, [pc, #32]	@ (8007768 <prvInsertBlockIntoFreeList+0x48>)
 8007746:	6809      	ldr	r1, [r1, #0]
 8007748:	428b      	cmp	r3, r1
 800774a:	d003      	beq.n	8007754 <prvInsertBlockIntoFreeList+0x34>
		{
			/* Form one big block from the two blocks. */
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
 800774c:	6859      	ldr	r1, [r3, #4]
 800774e:	4421      	add	r1, r4
 8007750:	6041      	str	r1, [r0, #4]
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 8007752:	6819      	ldr	r1, [r3, #0]
		}
		else
		{
			pxBlockToInsert->pxNextFreeBlock = pxEnd;
 8007754:	6001      	str	r1, [r0, #0]

	/* If the block being inserted plugged a gab, so was merged with the block
	before and the block after, then it's pxNextFreeBlock pointer will have
	already been set, and should not be set here as that would make it point
	to itself. */
	if( pxIterator != pxBlockToInsert )
 8007756:	4290      	cmp	r0, r2
	{
		pxIterator->pxNextFreeBlock = pxBlockToInsert;
 8007758:	bf18      	it	ne
 800775a:	6010      	strne	r0, [r2, #0]
	}
	else
	{
		mtCOVERAGE_TEST_MARKER();
	}
}
 800775c:	bd10      	pop	{r4, pc}
 800775e:	4619      	mov	r1, r3
 8007760:	e7f8      	b.n	8007754 <prvInsertBlockIntoFreeList+0x34>
 8007762:	bf00      	nop
 8007764:	200038a4 	.word	0x200038a4
 8007768:	200038a0 	.word	0x200038a0

0800776c <pvPortMalloc>:
{
 800776c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8007770:	4604      	mov	r4, r0
	vTaskSuspendAll();
 8007772:	f001 f9af 	bl	8008ad4 <vTaskSuspendAll>
		if( pxEnd == NULL )
 8007776:	4942      	ldr	r1, [pc, #264]	@ (8007880 <pvPortMalloc+0x114>)
 8007778:	4d42      	ldr	r5, [pc, #264]	@ (8007884 <pvPortMalloc+0x118>)
 800777a:	680b      	ldr	r3, [r1, #0]
 800777c:	bb0b      	cbnz	r3, 80077c2 <pvPortMalloc+0x56>
	uxAddress = ( size_t ) ucHeap;
 800777e:	4a42      	ldr	r2, [pc, #264]	@ (8007888 <pvPortMalloc+0x11c>)
	if( ( uxAddress & portBYTE_ALIGNMENT_MASK ) != 0 )
 8007780:	0756      	lsls	r6, r2, #29
		uxAddress += ( portBYTE_ALIGNMENT - 1 );
 8007782:	bf1f      	itttt	ne
 8007784:	1dd0      	addne	r0, r2, #7
		uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 8007786:	f020 0007 	bicne.w	r0, r0, #7
		xTotalHeapSize -= uxAddress - ( size_t ) ucHeap;
 800778a:	f502 3280 	addne.w	r2, r2, #65536	@ 0x10000
 800778e:	1a13      	subne	r3, r2, r0
size_t xTotalHeapSize = configTOTAL_HEAP_SIZE;
 8007790:	bf0c      	ite	eq
 8007792:	f44f 3380 	moveq.w	r3, #65536	@ 0x10000
		uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 8007796:	4602      	movne	r2, r0
	uxAddress = ( ( size_t ) pucAlignedHeap ) + xTotalHeapSize;
 8007798:	4413      	add	r3, r2
	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
 800779a:	4e3c      	ldr	r6, [pc, #240]	@ (800788c <pvPortMalloc+0x120>)
	uxAddress -= xHeapStructSize;
 800779c:	3b08      	subs	r3, #8
	uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 800779e:	f023 0307 	bic.w	r3, r3, #7
	xStart.xBlockSize = ( size_t ) 0;
 80077a2:	2000      	movs	r0, #0
 80077a4:	6070      	str	r0, [r6, #4]
	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
 80077a6:	6032      	str	r2, [r6, #0]
	pxEnd->pxNextFreeBlock = NULL;
 80077a8:	e9c3 0000 	strd	r0, r0, [r3]
	pxFirstFreeBlock->xBlockSize = uxAddress - ( size_t ) pxFirstFreeBlock;
 80077ac:	1a98      	subs	r0, r3, r2
	pxFirstFreeBlock->pxNextFreeBlock = pxEnd;
 80077ae:	e9c2 3000 	strd	r3, r0, [r2]
	pxEnd = ( void * ) uxAddress;
 80077b2:	600b      	str	r3, [r1, #0]
	xMinimumEverFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 80077b4:	4b36      	ldr	r3, [pc, #216]	@ (8007890 <pvPortMalloc+0x124>)
 80077b6:	6018      	str	r0, [r3, #0]
	xFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 80077b8:	4b36      	ldr	r3, [pc, #216]	@ (8007894 <pvPortMalloc+0x128>)
 80077ba:	6018      	str	r0, [r3, #0]
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
 80077bc:	f04f 4300 	mov.w	r3, #2147483648	@ 0x80000000
 80077c0:	602b      	str	r3, [r5, #0]
		if( ( xWantedSize & xBlockAllocatedBit ) == 0 )
 80077c2:	682e      	ldr	r6, [r5, #0]
 80077c4:	4226      	tst	r6, r4
 80077c6:	d155      	bne.n	8007874 <pvPortMalloc+0x108>
			if( xWantedSize > 0 )
 80077c8:	2c00      	cmp	r4, #0
 80077ca:	d046      	beq.n	800785a <pvPortMalloc+0xee>
				xWantedSize += xHeapStructSize;
 80077cc:	f104 0308 	add.w	r3, r4, #8
				if( ( xWantedSize & portBYTE_ALIGNMENT_MASK ) != 0x00 )
 80077d0:	0760      	lsls	r0, r4, #29
					xWantedSize += ( portBYTE_ALIGNMENT - ( xWantedSize & portBYTE_ALIGNMENT_MASK ) );
 80077d2:	bf1c      	itt	ne
 80077d4:	f023 0307 	bicne.w	r3, r3, #7
 80077d8:	3308      	addne	r3, #8
			if( ( xWantedSize > 0 ) && ( xWantedSize <= xFreeBytesRemaining ) )
 80077da:	2b00      	cmp	r3, #0
 80077dc:	d04a      	beq.n	8007874 <pvPortMalloc+0x108>
 80077de:	4f2d      	ldr	r7, [pc, #180]	@ (8007894 <pvPortMalloc+0x128>)
 80077e0:	683c      	ldr	r4, [r7, #0]
 80077e2:	429c      	cmp	r4, r3
 80077e4:	d346      	bcc.n	8007874 <pvPortMalloc+0x108>
				pxBlock = xStart.pxNextFreeBlock;
 80077e6:	4a29      	ldr	r2, [pc, #164]	@ (800788c <pvPortMalloc+0x120>)
 80077e8:	6815      	ldr	r5, [r2, #0]
				while( ( pxBlock->xBlockSize < xWantedSize ) && ( pxBlock->pxNextFreeBlock != NULL ) )
 80077ea:	6868      	ldr	r0, [r5, #4]
 80077ec:	4298      	cmp	r0, r3
 80077ee:	d204      	bcs.n	80077fa <pvPortMalloc+0x8e>
 80077f0:	f8d5 c000 	ldr.w	ip, [r5]
 80077f4:	f1bc 0f00 	cmp.w	ip, #0
 80077f8:	d115      	bne.n	8007826 <pvPortMalloc+0xba>
				if( pxBlock != pxEnd )
 80077fa:	6809      	ldr	r1, [r1, #0]
 80077fc:	42a9      	cmp	r1, r5
 80077fe:	d039      	beq.n	8007874 <pvPortMalloc+0x108>
					pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;
 8007800:	6829      	ldr	r1, [r5, #0]
					pvReturn = ( void * ) ( ( ( uint8_t * ) pxPreviousBlock->pxNextFreeBlock ) + xHeapStructSize );
 8007802:	f8d2 8000 	ldr.w	r8, [r2]
					pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;
 8007806:	6011      	str	r1, [r2, #0]
					if( ( pxBlock->xBlockSize - xWantedSize ) > heapMINIMUM_BLOCK_SIZE )
 8007808:	1ac2      	subs	r2, r0, r3
 800780a:	2a10      	cmp	r2, #16
 800780c:	d912      	bls.n	8007834 <pvPortMalloc+0xc8>
						pxNewBlockLink = ( void * ) ( ( ( uint8_t * ) pxBlock ) + xWantedSize );
 800780e:	18e8      	adds	r0, r5, r3
						configASSERT( ( ( ( size_t ) pxNewBlockLink ) & portBYTE_ALIGNMENT_MASK ) == 0 );
 8007810:	0741      	lsls	r1, r0, #29
 8007812:	d00b      	beq.n	800782c <pvPortMalloc+0xc0>

portFORCE_INLINE static void vPortRaiseBASEPRI( void )
{
uint32_t ulNewBASEPRI;

	__asm volatile
 8007814:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8007818:	f383 8811 	msr	BASEPRI, r3
 800781c:	f3bf 8f6f 	isb	sy
 8007820:	f3bf 8f4f 	dsb	sy
 8007824:	e7fe      	b.n	8007824 <pvPortMalloc+0xb8>
					pxPreviousBlock = pxBlock;
 8007826:	462a      	mov	r2, r5
					pxBlock = pxBlock->pxNextFreeBlock;
 8007828:	4665      	mov	r5, ip
 800782a:	e7de      	b.n	80077ea <pvPortMalloc+0x7e>
						pxNewBlockLink->xBlockSize = pxBlock->xBlockSize - xWantedSize;
 800782c:	6042      	str	r2, [r0, #4]
						pxBlock->xBlockSize = xWantedSize;
 800782e:	606b      	str	r3, [r5, #4]
						prvInsertBlockIntoFreeList( pxNewBlockLink );
 8007830:	f7ff ff76 	bl	8007720 <prvInsertBlockIntoFreeList>
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 8007834:	686a      	ldr	r2, [r5, #4]
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 8007836:	4916      	ldr	r1, [pc, #88]	@ (8007890 <pvPortMalloc+0x124>)
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 8007838:	1aa4      	subs	r4, r4, r2
					pxBlock->xBlockSize |= xBlockAllocatedBit;
 800783a:	4316      	orrs	r6, r2
					xNumberOfSuccessfulAllocations++;
 800783c:	4a16      	ldr	r2, [pc, #88]	@ (8007898 <pvPortMalloc+0x12c>)
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 800783e:	6808      	ldr	r0, [r1, #0]
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 8007840:	603c      	str	r4, [r7, #0]
					pxBlock->pxNextFreeBlock = NULL;
 8007842:	2300      	movs	r3, #0
 8007844:	602b      	str	r3, [r5, #0]
					xNumberOfSuccessfulAllocations++;
 8007846:	6813      	ldr	r3, [r2, #0]
					pxBlock->xBlockSize |= xBlockAllocatedBit;
 8007848:	606e      	str	r6, [r5, #4]
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 800784a:	4284      	cmp	r4, r0
					xNumberOfSuccessfulAllocations++;
 800784c:	f103 0301 	add.w	r3, r3, #1
						xMinimumEverFreeBytesRemaining = xFreeBytesRemaining;
 8007850:	bf38      	it	cc
 8007852:	600c      	strcc	r4, [r1, #0]
					xNumberOfSuccessfulAllocations++;
 8007854:	6013      	str	r3, [r2, #0]
					pvReturn = ( void * ) ( ( ( uint8_t * ) pxPreviousBlock->pxNextFreeBlock ) + xHeapStructSize );
 8007856:	f108 0408 	add.w	r4, r8, #8
	( void ) xTaskResumeAll();
 800785a:	f001 f9df 	bl	8008c1c <xTaskResumeAll>
	configASSERT( ( ( ( size_t ) pvReturn ) & ( size_t ) portBYTE_ALIGNMENT_MASK ) == 0 );
 800785e:	0763      	lsls	r3, r4, #29
 8007860:	d00a      	beq.n	8007878 <pvPortMalloc+0x10c>
 8007862:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8007866:	f383 8811 	msr	BASEPRI, r3
 800786a:	f3bf 8f6f 	isb	sy
 800786e:	f3bf 8f4f 	dsb	sy
 8007872:	e7fe      	b.n	8007872 <pvPortMalloc+0x106>
void *pvReturn = NULL;
 8007874:	2400      	movs	r4, #0
 8007876:	e7f0      	b.n	800785a <pvPortMalloc+0xee>
}
 8007878:	4620      	mov	r0, r4
 800787a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800787e:	bf00      	nop
 8007880:	200038a0 	.word	0x200038a0
 8007884:	2000388c 	.word	0x2000388c
 8007888:	200038ac 	.word	0x200038ac
 800788c:	200038a4 	.word	0x200038a4
 8007890:	20003898 	.word	0x20003898
 8007894:	2000389c 	.word	0x2000389c
 8007898:	20003894 	.word	0x20003894

0800789c <vPortFree>:
{
 800789c:	b510      	push	{r4, lr}
	if( pv != NULL )
 800789e:	4604      	mov	r4, r0
 80078a0:	b390      	cbz	r0, 8007908 <vPortFree+0x6c>
		configASSERT( ( pxLink->xBlockSize & xBlockAllocatedBit ) != 0 );
 80078a2:	4a1a      	ldr	r2, [pc, #104]	@ (800790c <vPortFree+0x70>)
 80078a4:	f850 3c04 	ldr.w	r3, [r0, #-4]
 80078a8:	6812      	ldr	r2, [r2, #0]
 80078aa:	4213      	tst	r3, r2
 80078ac:	d108      	bne.n	80078c0 <vPortFree+0x24>
 80078ae:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80078b2:	f383 8811 	msr	BASEPRI, r3
 80078b6:	f3bf 8f6f 	isb	sy
 80078ba:	f3bf 8f4f 	dsb	sy
 80078be:	e7fe      	b.n	80078be <vPortFree+0x22>
		configASSERT( pxLink->pxNextFreeBlock == NULL );
 80078c0:	f850 1c08 	ldr.w	r1, [r0, #-8]
 80078c4:	b141      	cbz	r1, 80078d8 <vPortFree+0x3c>
 80078c6:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80078ca:	f383 8811 	msr	BASEPRI, r3
 80078ce:	f3bf 8f6f 	isb	sy
 80078d2:	f3bf 8f4f 	dsb	sy
 80078d6:	e7fe      	b.n	80078d6 <vPortFree+0x3a>
				pxLink->xBlockSize &= ~xBlockAllocatedBit;
 80078d8:	ea23 0302 	bic.w	r3, r3, r2
 80078dc:	f840 3c04 	str.w	r3, [r0, #-4]
				vTaskSuspendAll();
 80078e0:	f001 f8f8 	bl	8008ad4 <vTaskSuspendAll>
					xFreeBytesRemaining += pxLink->xBlockSize;
 80078e4:	4a0a      	ldr	r2, [pc, #40]	@ (8007910 <vPortFree+0x74>)
 80078e6:	f854 3c04 	ldr.w	r3, [r4, #-4]
 80078ea:	6811      	ldr	r1, [r2, #0]
					prvInsertBlockIntoFreeList( ( ( BlockLink_t * ) pxLink ) );
 80078ec:	f1a4 0008 	sub.w	r0, r4, #8
					xFreeBytesRemaining += pxLink->xBlockSize;
 80078f0:	440b      	add	r3, r1
 80078f2:	6013      	str	r3, [r2, #0]
					prvInsertBlockIntoFreeList( ( ( BlockLink_t * ) pxLink ) );
 80078f4:	f7ff ff14 	bl	8007720 <prvInsertBlockIntoFreeList>
					xNumberOfSuccessfulFrees++;
 80078f8:	4a06      	ldr	r2, [pc, #24]	@ (8007914 <vPortFree+0x78>)
 80078fa:	6813      	ldr	r3, [r2, #0]
}
 80078fc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
					xNumberOfSuccessfulFrees++;
 8007900:	3301      	adds	r3, #1
 8007902:	6013      	str	r3, [r2, #0]
				( void ) xTaskResumeAll();
 8007904:	f001 b98a 	b.w	8008c1c <xTaskResumeAll>
}
 8007908:	bd10      	pop	{r4, pc}
 800790a:	bf00      	nop
 800790c:	2000388c 	.word	0x2000388c
 8007910:	2000389c 	.word	0x2000389c
 8007914:	20003890 	.word	0x20003890

08007918 <vListInitialise>:
void vListInitialise( List_t * const pxList )
{
	/* The list structure contains a list item which is used to mark the
	end of the list.  To initialise the list the list end is inserted
	as the only list entry. */
	pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd );			/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 8007918:	f100 0308 	add.w	r3, r0, #8

	/* The list end value is the highest possible value in the list to
	ensure it remains at the end of the list. */
	pxList->xListEnd.xItemValue = portMAX_DELAY;
 800791c:	f04f 32ff 	mov.w	r2, #4294967295

	/* The list end next and previous pointers point to itself so we know
	when the list is empty. */
	pxList->xListEnd.pxNext = ( ListItem_t * ) &( pxList->xListEnd );	/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 8007920:	e9c0 2302 	strd	r2, r3, [r0, #8]
	pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd );			/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 8007924:	6043      	str	r3, [r0, #4]
	pxList->xListEnd.pxPrevious = ( ListItem_t * ) &( pxList->xListEnd );/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 8007926:	6103      	str	r3, [r0, #16]

	pxList->uxNumberOfItems = ( UBaseType_t ) 0U;
 8007928:	2300      	movs	r3, #0
 800792a:	6003      	str	r3, [r0, #0]

	/* Write known values into the list if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_LIST_INTEGRITY_CHECK_1_VALUE( pxList );
	listSET_LIST_INTEGRITY_CHECK_2_VALUE( pxList );
}
 800792c:	4770      	bx	lr

0800792e <vListInitialiseItem>:
/*-----------------------------------------------------------*/

void vListInitialiseItem( ListItem_t * const pxItem )
{
	/* Make sure the list item is not recorded as being on a list. */
	pxItem->pxContainer = NULL;
 800792e:	2300      	movs	r3, #0
 8007930:	6103      	str	r3, [r0, #16]

	/* Write known values into the list item if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_FIRST_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
	listSET_SECOND_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
}
 8007932:	4770      	bx	lr

08007934 <vListInsertEnd>:
/*-----------------------------------------------------------*/

void vListInsertEnd( List_t * const pxList, ListItem_t * const pxNewListItem )
{
ListItem_t * const pxIndex = pxList->pxIndex;
 8007934:	6843      	ldr	r3, [r0, #4]
	listTEST_LIST_ITEM_INTEGRITY( pxNewListItem );

	/* Insert a new list item into pxList, but rather than sort the list,
	makes the new list item the last item to be removed by a call to
	listGET_OWNER_OF_NEXT_ENTRY(). */
	pxNewListItem->pxNext = pxIndex;
 8007936:	604b      	str	r3, [r1, #4]
	pxNewListItem->pxPrevious = pxIndex->pxPrevious;
 8007938:	689a      	ldr	r2, [r3, #8]
 800793a:	608a      	str	r2, [r1, #8]

	/* Only used during decision coverage testing. */
	mtCOVERAGE_TEST_DELAY();

	pxIndex->pxPrevious->pxNext = pxNewListItem;
 800793c:	6051      	str	r1, [r2, #4]
	pxIndex->pxPrevious = pxNewListItem;
 800793e:	6099      	str	r1, [r3, #8]

	/* Remember which list the item is in. */
	pxNewListItem->pxContainer = pxList;

	( pxList->uxNumberOfItems )++;
 8007940:	6803      	ldr	r3, [r0, #0]
	pxNewListItem->pxContainer = pxList;
 8007942:	6108      	str	r0, [r1, #16]
	( pxList->uxNumberOfItems )++;
 8007944:	3301      	adds	r3, #1
 8007946:	6003      	str	r3, [r0, #0]
}
 8007948:	4770      	bx	lr

0800794a <vListInsert>:
/*-----------------------------------------------------------*/

void vListInsert( List_t * const pxList, ListItem_t * const pxNewListItem )
{
 800794a:	b530      	push	{r4, r5, lr}
ListItem_t *pxIterator;
const TickType_t xValueOfInsertion = pxNewListItem->xItemValue;
 800794c:	680c      	ldr	r4, [r1, #0]
	new list item should be placed after it.  This ensures that TCBs which are
	stored in ready lists (all of which have the same xItemValue value) get a
	share of the CPU.  However, if the xItemValue is the same as the back marker
	the iteration loop below will not end.  Therefore the value is checked
	first, and the algorithm slightly modified if necessary. */
	if( xValueOfInsertion == portMAX_DELAY )
 800794e:	1c63      	adds	r3, r4, #1
 8007950:	d10a      	bne.n	8007968 <vListInsert+0x1e>
	{
		pxIterator = pxList->xListEnd.pxPrevious;
 8007952:	6903      	ldr	r3, [r0, #16]
			/* There is nothing to do here, just iterating to the wanted
			insertion position. */
		}
	}

	pxNewListItem->pxNext = pxIterator->pxNext;
 8007954:	685a      	ldr	r2, [r3, #4]
 8007956:	604a      	str	r2, [r1, #4]
	pxNewListItem->pxNext->pxPrevious = pxNewListItem;
 8007958:	6091      	str	r1, [r2, #8]
	pxNewListItem->pxPrevious = pxIterator;
 800795a:	608b      	str	r3, [r1, #8]
	pxIterator->pxNext = pxNewListItem;
 800795c:	6059      	str	r1, [r3, #4]

	/* Remember which list the item is in.  This allows fast removal of the
	item later. */
	pxNewListItem->pxContainer = pxList;

	( pxList->uxNumberOfItems )++;
 800795e:	6803      	ldr	r3, [r0, #0]
	pxNewListItem->pxContainer = pxList;
 8007960:	6108      	str	r0, [r1, #16]
	( pxList->uxNumberOfItems )++;
 8007962:	3301      	adds	r3, #1
 8007964:	6003      	str	r3, [r0, #0]
}
 8007966:	bd30      	pop	{r4, r5, pc}
		for( pxIterator = ( ListItem_t * ) &( pxList->xListEnd ); pxIterator->pxNext->xItemValue <= xValueOfInsertion; pxIterator = pxIterator->pxNext ) /*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. *//*lint !e440 The iterator moves to a different value, not xValueOfInsertion. */
 8007968:	f100 0208 	add.w	r2, r0, #8
 800796c:	4613      	mov	r3, r2
 800796e:	6852      	ldr	r2, [r2, #4]
 8007970:	6815      	ldr	r5, [r2, #0]
 8007972:	42a5      	cmp	r5, r4
 8007974:	d9fa      	bls.n	800796c <vListInsert+0x22>
 8007976:	e7ed      	b.n	8007954 <vListInsert+0xa>

08007978 <uxListRemove>:
{
/* The list item knows which list it is in.  Obtain the list from the list
item. */
List_t * const pxList = pxItemToRemove->pxContainer;

	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
 8007978:	e9d0 1201 	ldrd	r1, r2, [r0, #4]
List_t * const pxList = pxItemToRemove->pxContainer;
 800797c:	6903      	ldr	r3, [r0, #16]
	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
 800797e:	608a      	str	r2, [r1, #8]
	pxItemToRemove->pxPrevious->pxNext = pxItemToRemove->pxNext;
 8007980:	6051      	str	r1, [r2, #4]

	/* Only used during decision coverage testing. */
	mtCOVERAGE_TEST_DELAY();

	/* Make sure the index is left pointing to a valid item. */
	if( pxList->pxIndex == pxItemToRemove )
 8007982:	6859      	ldr	r1, [r3, #4]
 8007984:	4281      	cmp	r1, r0
	{
		pxList->pxIndex = pxItemToRemove->pxPrevious;
 8007986:	bf08      	it	eq
 8007988:	605a      	streq	r2, [r3, #4]
	else
	{
		mtCOVERAGE_TEST_MARKER();
	}

	pxItemToRemove->pxContainer = NULL;
 800798a:	2200      	movs	r2, #0
 800798c:	6102      	str	r2, [r0, #16]
	( pxList->uxNumberOfItems )--;
 800798e:	681a      	ldr	r2, [r3, #0]
 8007990:	3a01      	subs	r2, #1
 8007992:	601a      	str	r2, [r3, #0]

	return pxList->uxNumberOfItems;
 8007994:	6818      	ldr	r0, [r3, #0]
}
 8007996:	4770      	bx	lr

08007998 <prvPortStartFirstTask>:
{
	/* Start the first task.  This also clears the bit that indicates the FPU is
	in use in case the FPU was used before the scheduler was started - which
	would otherwise result in the unnecessary leaving of space in the SVC stack
	for lazy saving of FPU registers. */
	__asm volatile(
 8007998:	4808      	ldr	r0, [pc, #32]	@ (80079bc <prvPortStartFirstTask+0x24>)
 800799a:	6800      	ldr	r0, [r0, #0]
 800799c:	6800      	ldr	r0, [r0, #0]
 800799e:	f380 8808 	msr	MSP, r0
 80079a2:	f04f 0000 	mov.w	r0, #0
 80079a6:	f380 8814 	msr	CONTROL, r0
 80079aa:	b662      	cpsie	i
 80079ac:	b661      	cpsie	f
 80079ae:	f3bf 8f4f 	dsb	sy
 80079b2:	f3bf 8f6f 	isb	sy
 80079b6:	df00      	svc	0
 80079b8:	bf00      	nop
					" dsb					\n"
					" isb					\n"
					" svc 0					\n" /* System call to start first task. */
					" nop					\n"
				);
}
 80079ba:	0000      	.short	0x0000
 80079bc:	e000ed08 	.word	0xe000ed08

080079c0 <vPortEnableVFP>:
/*-----------------------------------------------------------*/

/* This is a naked function. */
static void vPortEnableVFP( void )
{
	__asm volatile
 80079c0:	f8df 000c 	ldr.w	r0, [pc, #12]	@ 80079d0 <vPortEnableVFP+0x10>
 80079c4:	6801      	ldr	r1, [r0, #0]
 80079c6:	f441 0170 	orr.w	r1, r1, #15728640	@ 0xf00000
 80079ca:	6001      	str	r1, [r0, #0]
 80079cc:	4770      	bx	lr
		"								\n"
		"	orr r1, r1, #( 0xf << 20 )	\n" /* Enable CP10 and CP11 coprocessors, then save back. */
		"	str r1, [r0]				\n"
		"	bx r14						"
	);
}
 80079ce:	0000      	.short	0x0000
 80079d0:	e000ed88 	.word	0xe000ed88

080079d4 <prvTaskExitError>:
{
 80079d4:	b082      	sub	sp, #8
volatile uint32_t ulDummy = 0;
 80079d6:	2300      	movs	r3, #0
 80079d8:	9301      	str	r3, [sp, #4]
	configASSERT( uxCriticalNesting == ~0UL );
 80079da:	4b0d      	ldr	r3, [pc, #52]	@ (8007a10 <prvTaskExitError+0x3c>)
 80079dc:	681b      	ldr	r3, [r3, #0]
 80079de:	3301      	adds	r3, #1
 80079e0:	d008      	beq.n	80079f4 <prvTaskExitError+0x20>
 80079e2:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80079e6:	f383 8811 	msr	BASEPRI, r3
 80079ea:	f3bf 8f6f 	isb	sy
 80079ee:	f3bf 8f4f 	dsb	sy
 80079f2:	e7fe      	b.n	80079f2 <prvTaskExitError+0x1e>
 80079f4:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80079f8:	f383 8811 	msr	BASEPRI, r3
 80079fc:	f3bf 8f6f 	isb	sy
 8007a00:	f3bf 8f4f 	dsb	sy
	while( ulDummy == 0 )
 8007a04:	9b01      	ldr	r3, [sp, #4]
 8007a06:	2b00      	cmp	r3, #0
 8007a08:	d0fc      	beq.n	8007a04 <prvTaskExitError+0x30>
}
 8007a0a:	b002      	add	sp, #8
 8007a0c:	4770      	bx	lr
 8007a0e:	bf00      	nop
 8007a10:	200000d0 	.word	0x200000d0

08007a14 <pxPortInitialiseStack>:
	*pxTopOfStack = portINITIAL_XPSR;	/* xPSR */
 8007a14:	f04f 7380 	mov.w	r3, #16777216	@ 0x1000000
 8007a18:	f840 3c04 	str.w	r3, [r0, #-4]
	*pxTopOfStack = ( StackType_t ) portTASK_RETURN_ADDRESS;	/* LR */
 8007a1c:	4b07      	ldr	r3, [pc, #28]	@ (8007a3c <pxPortInitialiseStack+0x28>)
 8007a1e:	f840 3c0c 	str.w	r3, [r0, #-12]
	*pxTopOfStack = ( ( StackType_t ) pxCode ) & portSTART_ADDRESS_MASK;	/* PC */
 8007a22:	f021 0101 	bic.w	r1, r1, #1
	*pxTopOfStack = portINITIAL_EXC_RETURN;
 8007a26:	f06f 0302 	mvn.w	r3, #2
	*pxTopOfStack = ( ( StackType_t ) pxCode ) & portSTART_ADDRESS_MASK;	/* PC */
 8007a2a:	f840 1c08 	str.w	r1, [r0, #-8]
	*pxTopOfStack = ( StackType_t ) pvParameters;	/* R0 */
 8007a2e:	f840 2c20 	str.w	r2, [r0, #-32]
	*pxTopOfStack = portINITIAL_EXC_RETURN;
 8007a32:	f840 3c24 	str.w	r3, [r0, #-36]
}
 8007a36:	3844      	subs	r0, #68	@ 0x44
 8007a38:	4770      	bx	lr
 8007a3a:	bf00      	nop
 8007a3c:	080079d5 	.word	0x080079d5

08007a40 <SVC_Handler>:
	__asm volatile (
 8007a40:	4b07      	ldr	r3, [pc, #28]	@ (8007a60 <pxCurrentTCBConst2>)
 8007a42:	6819      	ldr	r1, [r3, #0]
 8007a44:	6808      	ldr	r0, [r1, #0]
 8007a46:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8007a4a:	f380 8809 	msr	PSP, r0
 8007a4e:	f3bf 8f6f 	isb	sy
 8007a52:	f04f 0000 	mov.w	r0, #0
 8007a56:	f380 8811 	msr	BASEPRI, r0
 8007a5a:	4770      	bx	lr
 8007a5c:	f3af 8000 	nop.w

08007a60 <pxCurrentTCBConst2>:
 8007a60:	20013dec 	.word	0x20013dec

08007a64 <vPortEnterCritical>:
 8007a64:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8007a68:	f383 8811 	msr	BASEPRI, r3
 8007a6c:	f3bf 8f6f 	isb	sy
 8007a70:	f3bf 8f4f 	dsb	sy
	uxCriticalNesting++;
 8007a74:	4a0a      	ldr	r2, [pc, #40]	@ (8007aa0 <vPortEnterCritical+0x3c>)
 8007a76:	6813      	ldr	r3, [r2, #0]
 8007a78:	3301      	adds	r3, #1
	if( uxCriticalNesting == 1 )
 8007a7a:	2b01      	cmp	r3, #1
	uxCriticalNesting++;
 8007a7c:	6013      	str	r3, [r2, #0]
	if( uxCriticalNesting == 1 )
 8007a7e:	d10e      	bne.n	8007a9e <vPortEnterCritical+0x3a>
		configASSERT( ( portNVIC_INT_CTRL_REG & portVECTACTIVE_MASK ) == 0 );
 8007a80:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 8007a84:	f8d3 3d04 	ldr.w	r3, [r3, #3332]	@ 0xd04
 8007a88:	b2db      	uxtb	r3, r3
 8007a8a:	b143      	cbz	r3, 8007a9e <vPortEnterCritical+0x3a>
 8007a8c:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8007a90:	f383 8811 	msr	BASEPRI, r3
 8007a94:	f3bf 8f6f 	isb	sy
 8007a98:	f3bf 8f4f 	dsb	sy
 8007a9c:	e7fe      	b.n	8007a9c <vPortEnterCritical+0x38>
}
 8007a9e:	4770      	bx	lr
 8007aa0:	200000d0 	.word	0x200000d0

08007aa4 <vPortExitCritical>:
	configASSERT( uxCriticalNesting );
 8007aa4:	4a08      	ldr	r2, [pc, #32]	@ (8007ac8 <vPortExitCritical+0x24>)
 8007aa6:	6813      	ldr	r3, [r2, #0]
 8007aa8:	b943      	cbnz	r3, 8007abc <vPortExitCritical+0x18>
 8007aaa:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8007aae:	f383 8811 	msr	BASEPRI, r3
 8007ab2:	f3bf 8f6f 	isb	sy
 8007ab6:	f3bf 8f4f 	dsb	sy
 8007aba:	e7fe      	b.n	8007aba <vPortExitCritical+0x16>
	uxCriticalNesting--;
 8007abc:	3b01      	subs	r3, #1
 8007abe:	6013      	str	r3, [r2, #0]
	if( uxCriticalNesting == 0 )
 8007ac0:	b90b      	cbnz	r3, 8007ac6 <vPortExitCritical+0x22>
}
/*-----------------------------------------------------------*/

portFORCE_INLINE static void vPortSetBASEPRI( uint32_t ulNewMaskValue )
{
	__asm volatile
 8007ac2:	f383 8811 	msr	BASEPRI, r3
}
 8007ac6:	4770      	bx	lr
 8007ac8:	200000d0 	.word	0x200000d0
 8007acc:	00000000 	.word	0x00000000

08007ad0 <PendSV_Handler>:
	__asm volatile
 8007ad0:	f3ef 8009 	mrs	r0, PSP
 8007ad4:	f3bf 8f6f 	isb	sy
 8007ad8:	4b15      	ldr	r3, [pc, #84]	@ (8007b30 <pxCurrentTCBConst>)
 8007ada:	681a      	ldr	r2, [r3, #0]
 8007adc:	f01e 0f10 	tst.w	lr, #16
 8007ae0:	bf08      	it	eq
 8007ae2:	ed20 8a10 	vstmdbeq	r0!, {s16-s31}
 8007ae6:	e920 4ff0 	stmdb	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8007aea:	6010      	str	r0, [r2, #0]
 8007aec:	e92d 0009 	stmdb	sp!, {r0, r3}
 8007af0:	f04f 0050 	mov.w	r0, #80	@ 0x50
 8007af4:	f380 8811 	msr	BASEPRI, r0
 8007af8:	f3bf 8f4f 	dsb	sy
 8007afc:	f3bf 8f6f 	isb	sy
 8007b00:	f001 f924 	bl	8008d4c <vTaskSwitchContext>
 8007b04:	f04f 0000 	mov.w	r0, #0
 8007b08:	f380 8811 	msr	BASEPRI, r0
 8007b0c:	bc09      	pop	{r0, r3}
 8007b0e:	6819      	ldr	r1, [r3, #0]
 8007b10:	6808      	ldr	r0, [r1, #0]
 8007b12:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8007b16:	f01e 0f10 	tst.w	lr, #16
 8007b1a:	bf08      	it	eq
 8007b1c:	ecb0 8a10 	vldmiaeq	r0!, {s16-s31}
 8007b20:	f380 8809 	msr	PSP, r0
 8007b24:	f3bf 8f6f 	isb	sy
 8007b28:	4770      	bx	lr
 8007b2a:	bf00      	nop
 8007b2c:	f3af 8000 	nop.w

08007b30 <pxCurrentTCBConst>:
 8007b30:	20013dec 	.word	0x20013dec

08007b34 <xPortSysTickHandler>:
{
 8007b34:	b508      	push	{r3, lr}
	__asm volatile
 8007b36:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8007b3a:	f383 8811 	msr	BASEPRI, r3
 8007b3e:	f3bf 8f6f 	isb	sy
 8007b42:	f3bf 8f4f 	dsb	sy
		if( xTaskIncrementTick() != pdFALSE )
 8007b46:	f000 ffd3 	bl	8008af0 <xTaskIncrementTick>
 8007b4a:	b128      	cbz	r0, 8007b58 <xPortSysTickHandler+0x24>
			portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;
 8007b4c:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 8007b50:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8007b54:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
	__asm volatile
 8007b58:	2300      	movs	r3, #0
 8007b5a:	f383 8811 	msr	BASEPRI, r3
}
 8007b5e:	bd08      	pop	{r3, pc}

08007b60 <vPortSetupTimerInterrupt>:
	portNVIC_SYSTICK_CTRL_REG = 0UL;
 8007b60:	f04f 22e0 	mov.w	r2, #3758153728	@ 0xe000e000
 8007b64:	2300      	movs	r3, #0
 8007b66:	6113      	str	r3, [r2, #16]
	portNVIC_SYSTICK_CURRENT_VALUE_REG = 0UL;
 8007b68:	6193      	str	r3, [r2, #24]
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
 8007b6a:	4b05      	ldr	r3, [pc, #20]	@ (8007b80 <vPortSetupTimerInterrupt+0x20>)
 8007b6c:	f44f 717a 	mov.w	r1, #1000	@ 0x3e8
 8007b70:	681b      	ldr	r3, [r3, #0]
 8007b72:	fbb3 f3f1 	udiv	r3, r3, r1
 8007b76:	3b01      	subs	r3, #1
 8007b78:	6153      	str	r3, [r2, #20]
	portNVIC_SYSTICK_CTRL_REG = ( portNVIC_SYSTICK_CLK_BIT | portNVIC_SYSTICK_INT_BIT | portNVIC_SYSTICK_ENABLE_BIT );
 8007b7a:	2307      	movs	r3, #7
 8007b7c:	6113      	str	r3, [r2, #16]
}
 8007b7e:	4770      	bx	lr
 8007b80:	200000c4 	.word	0x200000c4

08007b84 <xPortStartScheduler>:
	configASSERT( portCPUID != portCORTEX_M7_r0p1_ID );
 8007b84:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
{
 8007b88:	b537      	push	{r0, r1, r2, r4, r5, lr}
	configASSERT( portCPUID != portCORTEX_M7_r0p1_ID );
 8007b8a:	f8d3 1d00 	ldr.w	r1, [r3, #3328]	@ 0xd00
 8007b8e:	4a38      	ldr	r2, [pc, #224]	@ (8007c70 <xPortStartScheduler+0xec>)
 8007b90:	4291      	cmp	r1, r2
 8007b92:	d108      	bne.n	8007ba6 <xPortStartScheduler+0x22>
	__asm volatile
 8007b94:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8007b98:	f383 8811 	msr	BASEPRI, r3
 8007b9c:	f3bf 8f6f 	isb	sy
 8007ba0:	f3bf 8f4f 	dsb	sy
 8007ba4:	e7fe      	b.n	8007ba4 <xPortStartScheduler+0x20>
	configASSERT( portCPUID != portCORTEX_M7_r0p0_ID );
 8007ba6:	f8d3 2d00 	ldr.w	r2, [r3, #3328]	@ 0xd00
 8007baa:	4b32      	ldr	r3, [pc, #200]	@ (8007c74 <xPortStartScheduler+0xf0>)
 8007bac:	429a      	cmp	r2, r3
 8007bae:	d108      	bne.n	8007bc2 <xPortStartScheduler+0x3e>
 8007bb0:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8007bb4:	f383 8811 	msr	BASEPRI, r3
 8007bb8:	f3bf 8f6f 	isb	sy
 8007bbc:	f3bf 8f4f 	dsb	sy
 8007bc0:	e7fe      	b.n	8007bc0 <xPortStartScheduler+0x3c>
		ulOriginalPriority = *pucFirstUserPriorityRegister;
 8007bc2:	4b2d      	ldr	r3, [pc, #180]	@ (8007c78 <xPortStartScheduler+0xf4>)
 8007bc4:	781a      	ldrb	r2, [r3, #0]
 8007bc6:	b2d2      	uxtb	r2, r2
 8007bc8:	9201      	str	r2, [sp, #4]
		*pucFirstUserPriorityRegister = portMAX_8_BIT_VALUE;
 8007bca:	22ff      	movs	r2, #255	@ 0xff
 8007bcc:	701a      	strb	r2, [r3, #0]
		ucMaxPriorityValue = *pucFirstUserPriorityRegister;
 8007bce:	781b      	ldrb	r3, [r3, #0]
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 8007bd0:	4a2a      	ldr	r2, [pc, #168]	@ (8007c7c <xPortStartScheduler+0xf8>)
		ucMaxPriorityValue = *pucFirstUserPriorityRegister;
 8007bd2:	b2db      	uxtb	r3, r3
 8007bd4:	f88d 3003 	strb.w	r3, [sp, #3]
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 8007bd8:	f89d 3003 	ldrb.w	r3, [sp, #3]
 8007bdc:	f003 0350 	and.w	r3, r3, #80	@ 0x50
 8007be0:	7013      	strb	r3, [r2, #0]
		ulMaxPRIGROUPValue = portMAX_PRIGROUP_BITS;
 8007be2:	4a27      	ldr	r2, [pc, #156]	@ (8007c80 <xPortStartScheduler+0xfc>)
 8007be4:	2307      	movs	r3, #7
 8007be6:	6013      	str	r3, [r2, #0]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
 8007be8:	f89d 1003 	ldrb.w	r1, [sp, #3]
			ulMaxPRIGROUPValue--;
 8007bec:	6813      	ldr	r3, [r2, #0]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
 8007bee:	0609      	lsls	r1, r1, #24
 8007bf0:	d40a      	bmi.n	8007c08 <xPortStartScheduler+0x84>
			configASSERT( ( portMAX_PRIGROUP_BITS - ulMaxPRIGROUPValue ) == configPRIO_BITS );
 8007bf2:	2b03      	cmp	r3, #3
 8007bf4:	d011      	beq.n	8007c1a <xPortStartScheduler+0x96>
 8007bf6:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8007bfa:	f383 8811 	msr	BASEPRI, r3
 8007bfe:	f3bf 8f6f 	isb	sy
 8007c02:	f3bf 8f4f 	dsb	sy
 8007c06:	e7fe      	b.n	8007c06 <xPortStartScheduler+0x82>
			ulMaxPRIGROUPValue--;
 8007c08:	3b01      	subs	r3, #1
 8007c0a:	6013      	str	r3, [r2, #0]
			ucMaxPriorityValue <<= ( uint8_t ) 0x01;
 8007c0c:	f89d 3003 	ldrb.w	r3, [sp, #3]
 8007c10:	005b      	lsls	r3, r3, #1
 8007c12:	b2db      	uxtb	r3, r3
 8007c14:	f88d 3003 	strb.w	r3, [sp, #3]
 8007c18:	e7e6      	b.n	8007be8 <xPortStartScheduler+0x64>
		ulMaxPRIGROUPValue &= portPRIORITY_GROUP_MASK;
 8007c1a:	f44f 7340 	mov.w	r3, #768	@ 0x300
 8007c1e:	6013      	str	r3, [r2, #0]
		*pucFirstUserPriorityRegister = ulOriginalPriority;
 8007c20:	9b01      	ldr	r3, [sp, #4]
 8007c22:	4a15      	ldr	r2, [pc, #84]	@ (8007c78 <xPortStartScheduler+0xf4>)
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
 8007c24:	f04f 24e0 	mov.w	r4, #3758153728	@ 0xe000e000
		*pucFirstUserPriorityRegister = ulOriginalPriority;
 8007c28:	b2db      	uxtb	r3, r3
 8007c2a:	7013      	strb	r3, [r2, #0]
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
 8007c2c:	f8d4 3d20 	ldr.w	r3, [r4, #3360]	@ 0xd20
 8007c30:	f443 0370 	orr.w	r3, r3, #15728640	@ 0xf00000
 8007c34:	f8c4 3d20 	str.w	r3, [r4, #3360]	@ 0xd20
	portNVIC_SYSPRI2_REG |= portNVIC_SYSTICK_PRI;
 8007c38:	f8d4 3d20 	ldr.w	r3, [r4, #3360]	@ 0xd20
 8007c3c:	f043 4370 	orr.w	r3, r3, #4026531840	@ 0xf0000000
 8007c40:	f8c4 3d20 	str.w	r3, [r4, #3360]	@ 0xd20
	vPortSetupTimerInterrupt();
 8007c44:	f7ff ff8c 	bl	8007b60 <vPortSetupTimerInterrupt>
	uxCriticalNesting = 0;
 8007c48:	4b0e      	ldr	r3, [pc, #56]	@ (8007c84 <xPortStartScheduler+0x100>)
 8007c4a:	2500      	movs	r5, #0
 8007c4c:	601d      	str	r5, [r3, #0]
	vPortEnableVFP();
 8007c4e:	f7ff feb7 	bl	80079c0 <vPortEnableVFP>
	*( portFPCCR ) |= portASPEN_AND_LSPEN_BITS;
 8007c52:	f8d4 3f34 	ldr.w	r3, [r4, #3892]	@ 0xf34
 8007c56:	f043 4340 	orr.w	r3, r3, #3221225472	@ 0xc0000000
 8007c5a:	f8c4 3f34 	str.w	r3, [r4, #3892]	@ 0xf34
	prvPortStartFirstTask();
 8007c5e:	f7ff fe9b 	bl	8007998 <prvPortStartFirstTask>
	vTaskSwitchContext();
 8007c62:	f001 f873 	bl	8008d4c <vTaskSwitchContext>
	prvTaskExitError();
 8007c66:	f7ff feb5 	bl	80079d4 <prvTaskExitError>
}
 8007c6a:	4628      	mov	r0, r5
 8007c6c:	b003      	add	sp, #12
 8007c6e:	bd30      	pop	{r4, r5, pc}
 8007c70:	410fc271 	.word	0x410fc271
 8007c74:	410fc270 	.word	0x410fc270
 8007c78:	e000e400 	.word	0xe000e400
 8007c7c:	200138b0 	.word	0x200138b0
 8007c80:	200138ac 	.word	0x200138ac
 8007c84:	200000d0 	.word	0x200000d0

08007c88 <vPortValidateInterruptPriority>:
	{
	uint32_t ulCurrentInterrupt;
	uint8_t ucCurrentPriority;

		/* Obtain the number of the currently executing interrupt. */
		__asm volatile( "mrs %0, ipsr" : "=r"( ulCurrentInterrupt ) :: "memory" );
 8007c88:	f3ef 8305 	mrs	r3, IPSR

		/* Is the interrupt number a user defined interrupt? */
		if( ulCurrentInterrupt >= portFIRST_USER_INTERRUPT_NUMBER )
 8007c8c:	2b0f      	cmp	r3, #15
 8007c8e:	d90e      	bls.n	8007cae <vPortValidateInterruptPriority+0x26>
		{
			/* Look up the interrupt's priority. */
			ucCurrentPriority = pcInterruptPriorityRegisters[ ulCurrentInterrupt ];
 8007c90:	4a11      	ldr	r2, [pc, #68]	@ (8007cd8 <vPortValidateInterruptPriority+0x50>)
 8007c92:	5c9b      	ldrb	r3, [r3, r2]
			interrupt entry is as fast and simple as possible.

			The following links provide detailed information:
			http://www.freertos.org/RTOS-Cortex-M3-M4.html
			http://www.freertos.org/FAQHelp.html */
			configASSERT( ucCurrentPriority >= ucMaxSysCallPriority );
 8007c94:	4a11      	ldr	r2, [pc, #68]	@ (8007cdc <vPortValidateInterruptPriority+0x54>)
 8007c96:	7812      	ldrb	r2, [r2, #0]
 8007c98:	429a      	cmp	r2, r3
 8007c9a:	d908      	bls.n	8007cae <vPortValidateInterruptPriority+0x26>
 8007c9c:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8007ca0:	f383 8811 	msr	BASEPRI, r3
 8007ca4:	f3bf 8f6f 	isb	sy
 8007ca8:	f3bf 8f4f 	dsb	sy
 8007cac:	e7fe      	b.n	8007cac <vPortValidateInterruptPriority+0x24>
		configuration then the correct setting can be achieved on all Cortex-M
		devices by calling NVIC_SetPriorityGrouping( 0 ); before starting the
		scheduler.  Note however that some vendor specific peripheral libraries
		assume a non-zero priority group setting, in which cases using a value
		of zero will result in unpredictable behaviour. */
		configASSERT( ( portAIRCR_REG & portPRIORITY_GROUP_MASK ) <= ulMaxPRIGROUPValue );
 8007cae:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 8007cb2:	4a0b      	ldr	r2, [pc, #44]	@ (8007ce0 <vPortValidateInterruptPriority+0x58>)
 8007cb4:	f8d3 3d0c 	ldr.w	r3, [r3, #3340]	@ 0xd0c
 8007cb8:	6812      	ldr	r2, [r2, #0]
 8007cba:	f403 63e0 	and.w	r3, r3, #1792	@ 0x700
 8007cbe:	4293      	cmp	r3, r2
 8007cc0:	d908      	bls.n	8007cd4 <vPortValidateInterruptPriority+0x4c>
 8007cc2:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8007cc6:	f383 8811 	msr	BASEPRI, r3
 8007cca:	f3bf 8f6f 	isb	sy
 8007cce:	f3bf 8f4f 	dsb	sy
 8007cd2:	e7fe      	b.n	8007cd2 <vPortValidateInterruptPriority+0x4a>
	}
 8007cd4:	4770      	bx	lr
 8007cd6:	bf00      	nop
 8007cd8:	e000e3f0 	.word	0xe000e3f0
 8007cdc:	200138b0 	.word	0x200138b0
 8007ce0:	200138ac 	.word	0x200138ac

08007ce4 <prvIsQueueEmpty>:
	taskEXIT_CRITICAL();
}
/*-----------------------------------------------------------*/

static BaseType_t prvIsQueueEmpty( const Queue_t *pxQueue )
{
 8007ce4:	b510      	push	{r4, lr}
 8007ce6:	4604      	mov	r4, r0
BaseType_t xReturn;

	taskENTER_CRITICAL();
 8007ce8:	f7ff febc 	bl	8007a64 <vPortEnterCritical>
	{
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
 8007cec:	6ba4      	ldr	r4, [r4, #56]	@ 0x38
		else
		{
			xReturn = pdFALSE;
		}
	}
	taskEXIT_CRITICAL();
 8007cee:	f7ff fed9 	bl	8007aa4 <vPortExitCritical>

	return xReturn;
}
 8007cf2:	fab4 f084 	clz	r0, r4
 8007cf6:	0940      	lsrs	r0, r0, #5
 8007cf8:	bd10      	pop	{r4, pc}

08007cfa <prvCopyDataToQueue>:
{
 8007cfa:	b570      	push	{r4, r5, r6, lr}
 8007cfc:	4616      	mov	r6, r2
	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
 8007cfe:	6c02      	ldr	r2, [r0, #64]	@ 0x40
	uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 8007d00:	6b85      	ldr	r5, [r0, #56]	@ 0x38
{
 8007d02:	4604      	mov	r4, r0
	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
 8007d04:	b942      	cbnz	r2, 8007d18 <prvCopyDataToQueue+0x1e>
			if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 8007d06:	6806      	ldr	r6, [r0, #0]
 8007d08:	b99e      	cbnz	r6, 8007d32 <prvCopyDataToQueue+0x38>
				xReturn = xTaskPriorityDisinherit( pxQueue->u.xSemaphore.xMutexHolder );
 8007d0a:	6880      	ldr	r0, [r0, #8]
 8007d0c:	f001 f96c 	bl	8008fe8 <xTaskPriorityDisinherit>
				pxQueue->u.xSemaphore.xMutexHolder = NULL;
 8007d10:	60a6      	str	r6, [r4, #8]
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 8007d12:	3501      	adds	r5, #1
 8007d14:	63a5      	str	r5, [r4, #56]	@ 0x38
}
 8007d16:	bd70      	pop	{r4, r5, r6, pc}
	else if( xPosition == queueSEND_TO_BACK )
 8007d18:	b96e      	cbnz	r6, 8007d36 <prvCopyDataToQueue+0x3c>
		( void ) memcpy( ( void * ) pxQueue->pcWriteTo, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports, plus previous logic ensures a null pointer can only be passed to memcpy() if the copy size is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 8007d1a:	6840      	ldr	r0, [r0, #4]
 8007d1c:	f01b f89f 	bl	8022e5e <memcpy>
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 8007d20:	6863      	ldr	r3, [r4, #4]
 8007d22:	6c22      	ldr	r2, [r4, #64]	@ 0x40
 8007d24:	4413      	add	r3, r2
		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 8007d26:	68a2      	ldr	r2, [r4, #8]
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 8007d28:	6063      	str	r3, [r4, #4]
		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 8007d2a:	4293      	cmp	r3, r2
			pxQueue->pcWriteTo = pxQueue->pcHead;
 8007d2c:	bf24      	itt	cs
 8007d2e:	6823      	ldrcs	r3, [r4, #0]
 8007d30:	6063      	strcs	r3, [r4, #4]
BaseType_t xReturn = pdFALSE;
 8007d32:	2000      	movs	r0, #0
 8007d34:	e7ed      	b.n	8007d12 <prvCopyDataToQueue+0x18>
		( void ) memcpy( ( void * ) pxQueue->u.xQueue.pcReadFrom, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e9087 !e418 MISRA exception as the casts are only redundant for some ports.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes.  Assert checks null pointer only used when length is 0. */
 8007d36:	68c0      	ldr	r0, [r0, #12]
 8007d38:	f01b f891 	bl	8022e5e <memcpy>
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
 8007d3c:	6c22      	ldr	r2, [r4, #64]	@ 0x40
 8007d3e:	68e3      	ldr	r3, [r4, #12]
 8007d40:	4251      	negs	r1, r2
 8007d42:	1a9b      	subs	r3, r3, r2
		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 8007d44:	6822      	ldr	r2, [r4, #0]
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
 8007d46:	60e3      	str	r3, [r4, #12]
		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 8007d48:	4293      	cmp	r3, r2
			pxQueue->u.xQueue.pcReadFrom = ( pxQueue->u.xQueue.pcTail - pxQueue->uxItemSize );
 8007d4a:	bf3e      	ittt	cc
 8007d4c:	68a3      	ldrcc	r3, [r4, #8]
 8007d4e:	185b      	addcc	r3, r3, r1
 8007d50:	60e3      	strcc	r3, [r4, #12]
		if( xPosition == queueOVERWRITE )
 8007d52:	2e02      	cmp	r6, #2
 8007d54:	d1ed      	bne.n	8007d32 <prvCopyDataToQueue+0x38>
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 8007d56:	b10d      	cbz	r5, 8007d5c <prvCopyDataToQueue+0x62>
				--uxMessagesWaiting;
 8007d58:	3d01      	subs	r5, #1
 8007d5a:	e7ea      	b.n	8007d32 <prvCopyDataToQueue+0x38>
BaseType_t xReturn = pdFALSE;
 8007d5c:	4628      	mov	r0, r5
 8007d5e:	e7d8      	b.n	8007d12 <prvCopyDataToQueue+0x18>

08007d60 <prvCopyDataFromQueue>:
{
 8007d60:	4603      	mov	r3, r0
 8007d62:	b410      	push	{r4}
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 8007d64:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
{
 8007d66:	4608      	mov	r0, r1
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 8007d68:	b16a      	cbz	r2, 8007d86 <prvCopyDataFromQueue+0x26>
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 8007d6a:	68dc      	ldr	r4, [r3, #12]
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 8007d6c:	6899      	ldr	r1, [r3, #8]
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 8007d6e:	4414      	add	r4, r2
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 8007d70:	428c      	cmp	r4, r1
			pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
 8007d72:	bf28      	it	cs
 8007d74:	6819      	ldrcs	r1, [r3, #0]
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 8007d76:	60dc      	str	r4, [r3, #12]
			pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
 8007d78:	bf28      	it	cs
 8007d7a:	60d9      	strcs	r1, [r3, #12]
		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 8007d7c:	68d9      	ldr	r1, [r3, #12]
}
 8007d7e:	f85d 4b04 	ldr.w	r4, [sp], #4
		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 8007d82:	f01b b86c 	b.w	8022e5e <memcpy>
}
 8007d86:	f85d 4b04 	ldr.w	r4, [sp], #4
 8007d8a:	4770      	bx	lr

08007d8c <prvUnlockQueue>:
{
 8007d8c:	b570      	push	{r4, r5, r6, lr}
 8007d8e:	4604      	mov	r4, r0
	taskENTER_CRITICAL();
 8007d90:	f7ff fe68 	bl	8007a64 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 8007d94:	f894 5045 	ldrb.w	r5, [r4, #69]	@ 0x45
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8007d98:	f104 0624 	add.w	r6, r4, #36	@ 0x24
		int8_t cTxLock = pxQueue->cTxLock;
 8007d9c:	b26d      	sxtb	r5, r5
		while( cTxLock > queueLOCKED_UNMODIFIED )
 8007d9e:	2d00      	cmp	r5, #0
 8007da0:	dd01      	ble.n	8007da6 <prvUnlockQueue+0x1a>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8007da2:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 8007da4:	b9b3      	cbnz	r3, 8007dd4 <prvUnlockQueue+0x48>
		pxQueue->cTxLock = queueUNLOCKED;
 8007da6:	23ff      	movs	r3, #255	@ 0xff
 8007da8:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
	taskEXIT_CRITICAL();
 8007dac:	f7ff fe7a 	bl	8007aa4 <vPortExitCritical>
	taskENTER_CRITICAL();
 8007db0:	f7ff fe58 	bl	8007a64 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 8007db4:	f894 5044 	ldrb.w	r5, [r4, #68]	@ 0x44
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8007db8:	f104 0610 	add.w	r6, r4, #16
		int8_t cRxLock = pxQueue->cRxLock;
 8007dbc:	b26d      	sxtb	r5, r5
		while( cRxLock > queueLOCKED_UNMODIFIED )
 8007dbe:	2d00      	cmp	r5, #0
 8007dc0:	dd01      	ble.n	8007dc6 <prvUnlockQueue+0x3a>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 8007dc2:	6923      	ldr	r3, [r4, #16]
 8007dc4:	b97b      	cbnz	r3, 8007de6 <prvUnlockQueue+0x5a>
		pxQueue->cRxLock = queueUNLOCKED;
 8007dc6:	23ff      	movs	r3, #255	@ 0xff
 8007dc8:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
}
 8007dcc:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
	taskEXIT_CRITICAL();
 8007dd0:	f7ff be68 	b.w	8007aa4 <vPortExitCritical>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8007dd4:	4630      	mov	r0, r6
 8007dd6:	f001 f82b 	bl	8008e30 <xTaskRemoveFromEventList>
 8007dda:	b108      	cbz	r0, 8007de0 <prvUnlockQueue+0x54>
						vTaskMissedYield();
 8007ddc:	f001 f8b0 	bl	8008f40 <vTaskMissedYield>
			--cTxLock;
 8007de0:	3d01      	subs	r5, #1
 8007de2:	b26d      	sxtb	r5, r5
 8007de4:	e7db      	b.n	8007d9e <prvUnlockQueue+0x12>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8007de6:	4630      	mov	r0, r6
 8007de8:	f001 f822 	bl	8008e30 <xTaskRemoveFromEventList>
 8007dec:	b108      	cbz	r0, 8007df2 <prvUnlockQueue+0x66>
					vTaskMissedYield();
 8007dee:	f001 f8a7 	bl	8008f40 <vTaskMissedYield>
				--cRxLock;
 8007df2:	3d01      	subs	r5, #1
 8007df4:	b26d      	sxtb	r5, r5
 8007df6:	e7e2      	b.n	8007dbe <prvUnlockQueue+0x32>

08007df8 <xQueueGenericReset>:
{
 8007df8:	b538      	push	{r3, r4, r5, lr}
 8007dfa:	460d      	mov	r5, r1
	configASSERT( pxQueue );
 8007dfc:	4604      	mov	r4, r0
 8007dfe:	b940      	cbnz	r0, 8007e12 <xQueueGenericReset+0x1a>
 8007e00:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8007e04:	f383 8811 	msr	BASEPRI, r3
 8007e08:	f3bf 8f6f 	isb	sy
 8007e0c:	f3bf 8f4f 	dsb	sy
 8007e10:	e7fe      	b.n	8007e10 <xQueueGenericReset+0x18>
	taskENTER_CRITICAL();
 8007e12:	f7ff fe27 	bl	8007a64 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8007e16:	e9d4 310f 	ldrd	r3, r1, [r4, #60]	@ 0x3c
 8007e1a:	6822      	ldr	r2, [r4, #0]
		pxQueue->pcWriteTo = pxQueue->pcHead;
 8007e1c:	6062      	str	r2, [r4, #4]
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8007e1e:	434b      	muls	r3, r1
 8007e20:	18d0      	adds	r0, r2, r3
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8007e22:	1a5b      	subs	r3, r3, r1
 8007e24:	441a      	add	r2, r3
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8007e26:	60a0      	str	r0, [r4, #8]
		pxQueue->cRxLock = queueUNLOCKED;
 8007e28:	23ff      	movs	r3, #255	@ 0xff
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 8007e2a:	2000      	movs	r0, #0
 8007e2c:	63a0      	str	r0, [r4, #56]	@ 0x38
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8007e2e:	60e2      	str	r2, [r4, #12]
		pxQueue->cRxLock = queueUNLOCKED;
 8007e30:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
		pxQueue->cTxLock = queueUNLOCKED;
 8007e34:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
		if( xNewQueue == pdFALSE )
 8007e38:	b9a5      	cbnz	r5, 8007e64 <xQueueGenericReset+0x6c>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 8007e3a:	6923      	ldr	r3, [r4, #16]
 8007e3c:	b173      	cbz	r3, 8007e5c <xQueueGenericReset+0x64>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8007e3e:	f104 0010 	add.w	r0, r4, #16
 8007e42:	f000 fff5 	bl	8008e30 <xTaskRemoveFromEventList>
 8007e46:	b148      	cbz	r0, 8007e5c <xQueueGenericReset+0x64>
					queueYIELD_IF_USING_PREEMPTION();
 8007e48:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 8007e4c:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8007e50:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 8007e54:	f3bf 8f4f 	dsb	sy
 8007e58:	f3bf 8f6f 	isb	sy
	taskEXIT_CRITICAL();
 8007e5c:	f7ff fe22 	bl	8007aa4 <vPortExitCritical>
}
 8007e60:	2001      	movs	r0, #1
 8007e62:	bd38      	pop	{r3, r4, r5, pc}
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
 8007e64:	f104 0010 	add.w	r0, r4, #16
 8007e68:	f7ff fd56 	bl	8007918 <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
 8007e6c:	f104 0024 	add.w	r0, r4, #36	@ 0x24
 8007e70:	f7ff fd52 	bl	8007918 <vListInitialise>
 8007e74:	e7f2      	b.n	8007e5c <xQueueGenericReset+0x64>

08007e76 <xQueueGenericCreateStatic>:
	{
 8007e76:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8007e78:	460d      	mov	r5, r1
 8007e7a:	461c      	mov	r4, r3
		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
 8007e7c:	b940      	cbnz	r0, 8007e90 <xQueueGenericCreateStatic+0x1a>
 8007e7e:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8007e82:	f383 8811 	msr	BASEPRI, r3
 8007e86:	f3bf 8f6f 	isb	sy
 8007e8a:	f3bf 8f4f 	dsb	sy
 8007e8e:	e7fe      	b.n	8007e8e <xQueueGenericCreateStatic+0x18>
		configASSERT( pxStaticQueue != NULL );
 8007e90:	b943      	cbnz	r3, 8007ea4 <xQueueGenericCreateStatic+0x2e>
 8007e92:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8007e96:	f383 8811 	msr	BASEPRI, r3
 8007e9a:	f3bf 8f6f 	isb	sy
 8007e9e:	f3bf 8f4f 	dsb	sy
 8007ea2:	e7fe      	b.n	8007ea2 <xQueueGenericCreateStatic+0x2c>
		configASSERT( !( ( pucQueueStorage != NULL ) && ( uxItemSize == 0 ) ) );
 8007ea4:	b14a      	cbz	r2, 8007eba <xQueueGenericCreateStatic+0x44>
 8007ea6:	b991      	cbnz	r1, 8007ece <xQueueGenericCreateStatic+0x58>
 8007ea8:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8007eac:	f383 8811 	msr	BASEPRI, r3
 8007eb0:	f3bf 8f6f 	isb	sy
 8007eb4:	f3bf 8f4f 	dsb	sy
 8007eb8:	e7fe      	b.n	8007eb8 <xQueueGenericCreateStatic+0x42>
		configASSERT( !( ( pucQueueStorage == NULL ) && ( uxItemSize != 0 ) ) );
 8007eba:	b141      	cbz	r1, 8007ece <xQueueGenericCreateStatic+0x58>
 8007ebc:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8007ec0:	f383 8811 	msr	BASEPRI, r3
 8007ec4:	f3bf 8f6f 	isb	sy
 8007ec8:	f3bf 8f4f 	dsb	sy
 8007ecc:	e7fe      	b.n	8007ecc <xQueueGenericCreateStatic+0x56>
			volatile size_t xSize = sizeof( StaticQueue_t );
 8007ece:	2350      	movs	r3, #80	@ 0x50
 8007ed0:	9301      	str	r3, [sp, #4]
			configASSERT( xSize == sizeof( Queue_t ) );
 8007ed2:	9b01      	ldr	r3, [sp, #4]
 8007ed4:	2b50      	cmp	r3, #80	@ 0x50
 8007ed6:	d008      	beq.n	8007eea <xQueueGenericCreateStatic+0x74>
 8007ed8:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8007edc:	f383 8811 	msr	BASEPRI, r3
 8007ee0:	f3bf 8f6f 	isb	sy
 8007ee4:	f3bf 8f4f 	dsb	sy
 8007ee8:	e7fe      	b.n	8007ee8 <xQueueGenericCreateStatic+0x72>
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
 8007eea:	2101      	movs	r1, #1
		pxNewQueue->pcHead = ( int8_t * ) pxNewQueue;
 8007eec:	2d00      	cmp	r5, #0
 8007eee:	bf08      	it	eq
 8007ef0:	4622      	moveq	r2, r4
	pxNewQueue->uxItemSize = uxItemSize;
 8007ef2:	e9c4 050f 	strd	r0, r5, [r4, #60]	@ 0x3c
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
 8007ef6:	f884 1046 	strb.w	r1, [r4, #70]	@ 0x46
 8007efa:	6022      	str	r2, [r4, #0]
	( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
 8007efc:	4620      	mov	r0, r4
			( void ) xSize; /* Keeps lint quiet when configASSERT() is not defined. */
 8007efe:	9b01      	ldr	r3, [sp, #4]
	( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
 8007f00:	f7ff ff7a 	bl	8007df8 <xQueueGenericReset>
		pxNewQueue->ucQueueType = ucQueueType;
 8007f04:	f89d 3018 	ldrb.w	r3, [sp, #24]
 8007f08:	f884 304c 	strb.w	r3, [r4, #76]	@ 0x4c
	}
 8007f0c:	4620      	mov	r0, r4
 8007f0e:	b003      	add	sp, #12
 8007f10:	bd30      	pop	{r4, r5, pc}

08007f12 <xQueueGenericCreate>:
	{
 8007f12:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8007f14:	460d      	mov	r5, r1
 8007f16:	4617      	mov	r7, r2
		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
 8007f18:	4606      	mov	r6, r0
 8007f1a:	b940      	cbnz	r0, 8007f2e <xQueueGenericCreate+0x1c>
 8007f1c:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8007f20:	f383 8811 	msr	BASEPRI, r3
 8007f24:	f3bf 8f6f 	isb	sy
 8007f28:	f3bf 8f4f 	dsb	sy
 8007f2c:	e7fe      	b.n	8007f2c <xQueueGenericCreate+0x1a>
		xQueueSizeInBytes = ( size_t ) ( uxQueueLength * uxItemSize ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8007f2e:	4348      	muls	r0, r1
		pxNewQueue = ( Queue_t * ) pvPortMalloc( sizeof( Queue_t ) + xQueueSizeInBytes ); /*lint !e9087 !e9079 see comment above. */
 8007f30:	3050      	adds	r0, #80	@ 0x50
 8007f32:	f7ff fc1b 	bl	800776c <pvPortMalloc>
		if( pxNewQueue != NULL )
 8007f36:	4604      	mov	r4, r0
 8007f38:	b170      	cbz	r0, 8007f58 <xQueueGenericCreate+0x46>
				pxNewQueue->ucStaticallyAllocated = pdFALSE;
 8007f3a:	2300      	movs	r3, #0
 8007f3c:	f880 3046 	strb.w	r3, [r0, #70]	@ 0x46
	if( uxItemSize == ( UBaseType_t ) 0 )
 8007f40:	b165      	cbz	r5, 8007f5c <xQueueGenericCreate+0x4a>
			pucQueueStorage += sizeof( Queue_t ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8007f42:	f100 0350 	add.w	r3, r0, #80	@ 0x50
	pxNewQueue->uxItemSize = uxItemSize;
 8007f46:	e9c4 650f 	strd	r6, r5, [r4, #60]	@ 0x3c
 8007f4a:	6023      	str	r3, [r4, #0]
	( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
 8007f4c:	2101      	movs	r1, #1
 8007f4e:	4620      	mov	r0, r4
 8007f50:	f7ff ff52 	bl	8007df8 <xQueueGenericReset>
		pxNewQueue->ucQueueType = ucQueueType;
 8007f54:	f884 704c 	strb.w	r7, [r4, #76]	@ 0x4c
	}
 8007f58:	4620      	mov	r0, r4
 8007f5a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
		pxNewQueue->pcHead = ( int8_t * ) pxNewQueue;
 8007f5c:	4603      	mov	r3, r0
 8007f5e:	e7f2      	b.n	8007f46 <xQueueGenericCreate+0x34>

08007f60 <xQueueCreateCountingSemaphoreStatic>:
	{
 8007f60:	b513      	push	{r0, r1, r4, lr}
 8007f62:	4613      	mov	r3, r2
 8007f64:	460c      	mov	r4, r1
		configASSERT( uxMaxCount != 0 );
 8007f66:	b940      	cbnz	r0, 8007f7a <xQueueCreateCountingSemaphoreStatic+0x1a>
 8007f68:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8007f6c:	f383 8811 	msr	BASEPRI, r3
 8007f70:	f3bf 8f6f 	isb	sy
 8007f74:	f3bf 8f4f 	dsb	sy
 8007f78:	e7fe      	b.n	8007f78 <xQueueCreateCountingSemaphoreStatic+0x18>
		configASSERT( uxInitialCount <= uxMaxCount );
 8007f7a:	4288      	cmp	r0, r1
 8007f7c:	d208      	bcs.n	8007f90 <xQueueCreateCountingSemaphoreStatic+0x30>
 8007f7e:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8007f82:	f383 8811 	msr	BASEPRI, r3
 8007f86:	f3bf 8f6f 	isb	sy
 8007f8a:	f3bf 8f4f 	dsb	sy
 8007f8e:	e7fe      	b.n	8007f8e <xQueueCreateCountingSemaphoreStatic+0x2e>
		xHandle = xQueueGenericCreateStatic( uxMaxCount, queueSEMAPHORE_QUEUE_ITEM_LENGTH, NULL, pxStaticQueue, queueQUEUE_TYPE_COUNTING_SEMAPHORE );
 8007f90:	2202      	movs	r2, #2
 8007f92:	9200      	str	r2, [sp, #0]
 8007f94:	2200      	movs	r2, #0
 8007f96:	4611      	mov	r1, r2
 8007f98:	f7ff ff6d 	bl	8007e76 <xQueueGenericCreateStatic>
		if( xHandle != NULL )
 8007f9c:	b100      	cbz	r0, 8007fa0 <xQueueCreateCountingSemaphoreStatic+0x40>
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 8007f9e:	6384      	str	r4, [r0, #56]	@ 0x38
	}
 8007fa0:	b002      	add	sp, #8
 8007fa2:	bd10      	pop	{r4, pc}

08007fa4 <xQueueCreateCountingSemaphore>:
	{
 8007fa4:	b510      	push	{r4, lr}
 8007fa6:	460c      	mov	r4, r1
		configASSERT( uxMaxCount != 0 );
 8007fa8:	b940      	cbnz	r0, 8007fbc <xQueueCreateCountingSemaphore+0x18>
 8007faa:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8007fae:	f383 8811 	msr	BASEPRI, r3
 8007fb2:	f3bf 8f6f 	isb	sy
 8007fb6:	f3bf 8f4f 	dsb	sy
 8007fba:	e7fe      	b.n	8007fba <xQueueCreateCountingSemaphore+0x16>
		configASSERT( uxInitialCount <= uxMaxCount );
 8007fbc:	4288      	cmp	r0, r1
 8007fbe:	d208      	bcs.n	8007fd2 <xQueueCreateCountingSemaphore+0x2e>
 8007fc0:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8007fc4:	f383 8811 	msr	BASEPRI, r3
 8007fc8:	f3bf 8f6f 	isb	sy
 8007fcc:	f3bf 8f4f 	dsb	sy
 8007fd0:	e7fe      	b.n	8007fd0 <xQueueCreateCountingSemaphore+0x2c>
		xHandle = xQueueGenericCreate( uxMaxCount, queueSEMAPHORE_QUEUE_ITEM_LENGTH, queueQUEUE_TYPE_COUNTING_SEMAPHORE );
 8007fd2:	2202      	movs	r2, #2
 8007fd4:	2100      	movs	r1, #0
 8007fd6:	f7ff ff9c 	bl	8007f12 <xQueueGenericCreate>
		if( xHandle != NULL )
 8007fda:	b100      	cbz	r0, 8007fde <xQueueCreateCountingSemaphore+0x3a>
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 8007fdc:	6384      	str	r4, [r0, #56]	@ 0x38
	}
 8007fde:	bd10      	pop	{r4, pc}

08007fe0 <xQueueGenericSend>:
{
 8007fe0:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 8007fe4:	460f      	mov	r7, r1
 8007fe6:	9201      	str	r2, [sp, #4]
 8007fe8:	461e      	mov	r6, r3
	configASSERT( pxQueue );
 8007fea:	4604      	mov	r4, r0
 8007fec:	b940      	cbnz	r0, 8008000 <xQueueGenericSend+0x20>
 8007fee:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8007ff2:	f383 8811 	msr	BASEPRI, r3
 8007ff6:	f3bf 8f6f 	isb	sy
 8007ffa:	f3bf 8f4f 	dsb	sy
 8007ffe:	e7fe      	b.n	8007ffe <xQueueGenericSend+0x1e>
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 8008000:	b951      	cbnz	r1, 8008018 <xQueueGenericSend+0x38>
 8008002:	6c03      	ldr	r3, [r0, #64]	@ 0x40
 8008004:	b143      	cbz	r3, 8008018 <xQueueGenericSend+0x38>
 8008006:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800800a:	f383 8811 	msr	BASEPRI, r3
 800800e:	f3bf 8f6f 	isb	sy
 8008012:	f3bf 8f4f 	dsb	sy
 8008016:	e7fe      	b.n	8008016 <xQueueGenericSend+0x36>
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 8008018:	2e02      	cmp	r6, #2
 800801a:	d10b      	bne.n	8008034 <xQueueGenericSend+0x54>
 800801c:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 800801e:	2b01      	cmp	r3, #1
 8008020:	d008      	beq.n	8008034 <xQueueGenericSend+0x54>
 8008022:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008026:	f383 8811 	msr	BASEPRI, r3
 800802a:	f3bf 8f6f 	isb	sy
 800802e:	f3bf 8f4f 	dsb	sy
 8008032:	e7fe      	b.n	8008032 <xQueueGenericSend+0x52>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 8008034:	f000 ff8a 	bl	8008f4c <xTaskGetSchedulerState>
 8008038:	4605      	mov	r5, r0
 800803a:	b320      	cbz	r0, 8008086 <xQueueGenericSend+0xa6>
 800803c:	2500      	movs	r5, #0
		prvLockQueue( pxQueue );
 800803e:	f04f 0800 	mov.w	r8, #0
		taskENTER_CRITICAL();
 8008042:	f7ff fd0f 	bl	8007a64 <vPortEnterCritical>
			if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 8008046:	6ba2      	ldr	r2, [r4, #56]	@ 0x38
 8008048:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 800804a:	429a      	cmp	r2, r3
 800804c:	d227      	bcs.n	800809e <xQueueGenericSend+0xbe>
					xYieldRequired = prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 800804e:	4632      	mov	r2, r6
 8008050:	4639      	mov	r1, r7
 8008052:	4620      	mov	r0, r4
 8008054:	f7ff fe51 	bl	8007cfa <prvCopyDataToQueue>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8008058:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 800805a:	b11b      	cbz	r3, 8008064 <xQueueGenericSend+0x84>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800805c:	f104 0024 	add.w	r0, r4, #36	@ 0x24
 8008060:	f000 fee6 	bl	8008e30 <xTaskRemoveFromEventList>
					else if( xYieldRequired != pdFALSE )
 8008064:	b148      	cbz	r0, 800807a <xQueueGenericSend+0x9a>
						queueYIELD_IF_USING_PREEMPTION();
 8008066:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 800806a:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 800806e:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 8008072:	f3bf 8f4f 	dsb	sy
 8008076:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
 800807a:	f7ff fd13 	bl	8007aa4 <vPortExitCritical>
				return pdPASS;
 800807e:	2001      	movs	r0, #1
}
 8008080:	b004      	add	sp, #16
 8008082:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 8008086:	9b01      	ldr	r3, [sp, #4]
 8008088:	2b00      	cmp	r3, #0
 800808a:	d0d8      	beq.n	800803e <xQueueGenericSend+0x5e>
 800808c:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008090:	f383 8811 	msr	BASEPRI, r3
 8008094:	f3bf 8f6f 	isb	sy
 8008098:	f3bf 8f4f 	dsb	sy
 800809c:	e7fe      	b.n	800809c <xQueueGenericSend+0xbc>
			if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 800809e:	2e02      	cmp	r6, #2
 80080a0:	d0d5      	beq.n	800804e <xQueueGenericSend+0x6e>
				if( xTicksToWait == ( TickType_t ) 0 )
 80080a2:	9b01      	ldr	r3, [sp, #4]
 80080a4:	b91b      	cbnz	r3, 80080ae <xQueueGenericSend+0xce>
					taskEXIT_CRITICAL();
 80080a6:	f7ff fcfd 	bl	8007aa4 <vPortExitCritical>
					return errQUEUE_FULL;
 80080aa:	2000      	movs	r0, #0
 80080ac:	e7e8      	b.n	8008080 <xQueueGenericSend+0xa0>
				else if( xEntryTimeSet == pdFALSE )
 80080ae:	b915      	cbnz	r5, 80080b6 <xQueueGenericSend+0xd6>
					vTaskInternalSetTimeOutState( &xTimeOut );
 80080b0:	a802      	add	r0, sp, #8
 80080b2:	f000 fefd 	bl	8008eb0 <vTaskInternalSetTimeOutState>
		taskEXIT_CRITICAL();
 80080b6:	f7ff fcf5 	bl	8007aa4 <vPortExitCritical>
		vTaskSuspendAll();
 80080ba:	f000 fd0b 	bl	8008ad4 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 80080be:	f7ff fcd1 	bl	8007a64 <vPortEnterCritical>
 80080c2:	f894 3044 	ldrb.w	r3, [r4, #68]	@ 0x44
 80080c6:	2bff      	cmp	r3, #255	@ 0xff
 80080c8:	bf08      	it	eq
 80080ca:	f884 8044 	strbeq.w	r8, [r4, #68]	@ 0x44
 80080ce:	f894 3045 	ldrb.w	r3, [r4, #69]	@ 0x45
 80080d2:	2bff      	cmp	r3, #255	@ 0xff
 80080d4:	bf08      	it	eq
 80080d6:	f884 8045 	strbeq.w	r8, [r4, #69]	@ 0x45
 80080da:	f7ff fce3 	bl	8007aa4 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 80080de:	a901      	add	r1, sp, #4
 80080e0:	a802      	add	r0, sp, #8
 80080e2:	f000 fef1 	bl	8008ec8 <xTaskCheckForTimeOut>
 80080e6:	bb38      	cbnz	r0, 8008138 <xQueueGenericSend+0x158>

static BaseType_t prvIsQueueFull( const Queue_t *pxQueue )
{
BaseType_t xReturn;

	taskENTER_CRITICAL();
 80080e8:	f7ff fcbc 	bl	8007a64 <vPortEnterCritical>
	{
		if( pxQueue->uxMessagesWaiting == pxQueue->uxLength )
 80080ec:	6ba2      	ldr	r2, [r4, #56]	@ 0x38
 80080ee:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 80080f0:	429a      	cmp	r2, r3
 80080f2:	d10e      	bne.n	8008112 <xQueueGenericSend+0x132>
		else
		{
			xReturn = pdFALSE;
		}
	}
	taskEXIT_CRITICAL();
 80080f4:	f7ff fcd6 	bl	8007aa4 <vPortExitCritical>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToSend ), xTicksToWait );
 80080f8:	9901      	ldr	r1, [sp, #4]
 80080fa:	f104 0010 	add.w	r0, r4, #16
 80080fe:	f000 fe5f 	bl	8008dc0 <vTaskPlaceOnEventList>
				prvUnlockQueue( pxQueue );
 8008102:	4620      	mov	r0, r4
 8008104:	f7ff fe42 	bl	8007d8c <prvUnlockQueue>
				if( xTaskResumeAll() == pdFALSE )
 8008108:	f000 fd88 	bl	8008c1c <xTaskResumeAll>
 800810c:	b148      	cbz	r0, 8008122 <xQueueGenericSend+0x142>
 800810e:	2501      	movs	r5, #1
 8008110:	e797      	b.n	8008042 <xQueueGenericSend+0x62>
	taskEXIT_CRITICAL();
 8008112:	f7ff fcc7 	bl	8007aa4 <vPortExitCritical>
				prvUnlockQueue( pxQueue );
 8008116:	4620      	mov	r0, r4
 8008118:	f7ff fe38 	bl	8007d8c <prvUnlockQueue>
				( void ) xTaskResumeAll();
 800811c:	f000 fd7e 	bl	8008c1c <xTaskResumeAll>
 8008120:	e7f5      	b.n	800810e <xQueueGenericSend+0x12e>
					portYIELD_WITHIN_API();
 8008122:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 8008126:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 800812a:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 800812e:	f3bf 8f4f 	dsb	sy
 8008132:	f3bf 8f6f 	isb	sy
 8008136:	e7ea      	b.n	800810e <xQueueGenericSend+0x12e>
			prvUnlockQueue( pxQueue );
 8008138:	4620      	mov	r0, r4
 800813a:	f7ff fe27 	bl	8007d8c <prvUnlockQueue>
			( void ) xTaskResumeAll();
 800813e:	f000 fd6d 	bl	8008c1c <xTaskResumeAll>
			return errQUEUE_FULL;
 8008142:	e7b2      	b.n	80080aa <xQueueGenericSend+0xca>

08008144 <xQueueGenericSendFromISR>:
{
 8008144:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8008148:	4689      	mov	r9, r1
 800814a:	4617      	mov	r7, r2
 800814c:	461e      	mov	r6, r3
	configASSERT( pxQueue );
 800814e:	4604      	mov	r4, r0
 8008150:	b940      	cbnz	r0, 8008164 <xQueueGenericSendFromISR+0x20>
 8008152:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008156:	f383 8811 	msr	BASEPRI, r3
 800815a:	f3bf 8f6f 	isb	sy
 800815e:	f3bf 8f4f 	dsb	sy
 8008162:	e7fe      	b.n	8008162 <xQueueGenericSendFromISR+0x1e>
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 8008164:	b951      	cbnz	r1, 800817c <xQueueGenericSendFromISR+0x38>
 8008166:	6c03      	ldr	r3, [r0, #64]	@ 0x40
 8008168:	b143      	cbz	r3, 800817c <xQueueGenericSendFromISR+0x38>
 800816a:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800816e:	f383 8811 	msr	BASEPRI, r3
 8008172:	f3bf 8f6f 	isb	sy
 8008176:	f3bf 8f4f 	dsb	sy
 800817a:	e7fe      	b.n	800817a <xQueueGenericSendFromISR+0x36>
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 800817c:	2e02      	cmp	r6, #2
 800817e:	d10b      	bne.n	8008198 <xQueueGenericSendFromISR+0x54>
 8008180:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 8008182:	2b01      	cmp	r3, #1
 8008184:	d008      	beq.n	8008198 <xQueueGenericSendFromISR+0x54>
 8008186:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800818a:	f383 8811 	msr	BASEPRI, r3
 800818e:	f3bf 8f6f 	isb	sy
 8008192:	f3bf 8f4f 	dsb	sy
 8008196:	e7fe      	b.n	8008196 <xQueueGenericSendFromISR+0x52>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 8008198:	f7ff fd76 	bl	8007c88 <vPortValidateInterruptPriority>
	__asm volatile
 800819c:	f3ef 8811 	mrs	r8, BASEPRI
 80081a0:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80081a4:	f383 8811 	msr	BASEPRI, r3
 80081a8:	f3bf 8f6f 	isb	sy
 80081ac:	f3bf 8f4f 	dsb	sy
		if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 80081b0:	6ba2      	ldr	r2, [r4, #56]	@ 0x38
 80081b2:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 80081b4:	429a      	cmp	r2, r3
 80081b6:	d301      	bcc.n	80081bc <xQueueGenericSendFromISR+0x78>
 80081b8:	2e02      	cmp	r6, #2
 80081ba:	d11e      	bne.n	80081fa <xQueueGenericSendFromISR+0xb6>
			const int8_t cTxLock = pxQueue->cTxLock;
 80081bc:	f894 5045 	ldrb.w	r5, [r4, #69]	@ 0x45
			const UBaseType_t uxPreviousMessagesWaiting = pxQueue->uxMessagesWaiting;
 80081c0:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
			const int8_t cTxLock = pxQueue->cTxLock;
 80081c2:	b26d      	sxtb	r5, r5
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 80081c4:	4632      	mov	r2, r6
 80081c6:	4649      	mov	r1, r9
 80081c8:	4620      	mov	r0, r4
 80081ca:	f7ff fd96 	bl	8007cfa <prvCopyDataToQueue>
			if( cTxLock == queueUNLOCKED )
 80081ce:	1c6b      	adds	r3, r5, #1
 80081d0:	d10e      	bne.n	80081f0 <xQueueGenericSendFromISR+0xac>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 80081d2:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 80081d4:	b13b      	cbz	r3, 80081e6 <xQueueGenericSendFromISR+0xa2>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 80081d6:	f104 0024 	add.w	r0, r4, #36	@ 0x24
 80081da:	f000 fe29 	bl	8008e30 <xTaskRemoveFromEventList>
 80081de:	b110      	cbz	r0, 80081e6 <xQueueGenericSendFromISR+0xa2>
							if( pxHigherPriorityTaskWoken != NULL )
 80081e0:	b10f      	cbz	r7, 80081e6 <xQueueGenericSendFromISR+0xa2>
								*pxHigherPriorityTaskWoken = pdTRUE;
 80081e2:	2301      	movs	r3, #1
 80081e4:	603b      	str	r3, [r7, #0]
			xReturn = pdPASS;
 80081e6:	2001      	movs	r0, #1
	__asm volatile
 80081e8:	f388 8811 	msr	BASEPRI, r8
}
 80081ec:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
 80081f0:	3501      	adds	r5, #1
 80081f2:	b26d      	sxtb	r5, r5
 80081f4:	f884 5045 	strb.w	r5, [r4, #69]	@ 0x45
 80081f8:	e7f5      	b.n	80081e6 <xQueueGenericSendFromISR+0xa2>
			xReturn = errQUEUE_FULL;
 80081fa:	2000      	movs	r0, #0
 80081fc:	e7f4      	b.n	80081e8 <xQueueGenericSendFromISR+0xa4>

080081fe <xQueueGiveFromISR>:
{
 80081fe:	b570      	push	{r4, r5, r6, lr}
 8008200:	460d      	mov	r5, r1
	configASSERT( pxQueue );
 8008202:	4604      	mov	r4, r0
 8008204:	b940      	cbnz	r0, 8008218 <xQueueGiveFromISR+0x1a>
	__asm volatile
 8008206:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800820a:	f383 8811 	msr	BASEPRI, r3
 800820e:	f3bf 8f6f 	isb	sy
 8008212:	f3bf 8f4f 	dsb	sy
 8008216:	e7fe      	b.n	8008216 <xQueueGiveFromISR+0x18>
	configASSERT( pxQueue->uxItemSize == 0 );
 8008218:	6c03      	ldr	r3, [r0, #64]	@ 0x40
 800821a:	b143      	cbz	r3, 800822e <xQueueGiveFromISR+0x30>
 800821c:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008220:	f383 8811 	msr	BASEPRI, r3
 8008224:	f3bf 8f6f 	isb	sy
 8008228:	f3bf 8f4f 	dsb	sy
 800822c:	e7fe      	b.n	800822c <xQueueGiveFromISR+0x2e>
	configASSERT( !( ( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX ) && ( pxQueue->u.xSemaphore.xMutexHolder != NULL ) ) );
 800822e:	6803      	ldr	r3, [r0, #0]
 8008230:	b953      	cbnz	r3, 8008248 <xQueueGiveFromISR+0x4a>
 8008232:	6883      	ldr	r3, [r0, #8]
 8008234:	b143      	cbz	r3, 8008248 <xQueueGiveFromISR+0x4a>
 8008236:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800823a:	f383 8811 	msr	BASEPRI, r3
 800823e:	f3bf 8f6f 	isb	sy
 8008242:	f3bf 8f4f 	dsb	sy
 8008246:	e7fe      	b.n	8008246 <xQueueGiveFromISR+0x48>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 8008248:	f7ff fd1e 	bl	8007c88 <vPortValidateInterruptPriority>
	__asm volatile
 800824c:	f3ef 8611 	mrs	r6, BASEPRI
 8008250:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008254:	f383 8811 	msr	BASEPRI, r3
 8008258:	f3bf 8f6f 	isb	sy
 800825c:	f3bf 8f4f 	dsb	sy
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 8008260:	6ba2      	ldr	r2, [r4, #56]	@ 0x38
		if( uxMessagesWaiting < pxQueue->uxLength )
 8008262:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 8008264:	4293      	cmp	r3, r2
 8008266:	d919      	bls.n	800829c <xQueueGiveFromISR+0x9e>
			const int8_t cTxLock = pxQueue->cTxLock;
 8008268:	f894 1045 	ldrb.w	r1, [r4, #69]	@ 0x45
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800826c:	3201      	adds	r2, #1
			if( cTxLock == queueUNLOCKED )
 800826e:	29ff      	cmp	r1, #255	@ 0xff
			const int8_t cTxLock = pxQueue->cTxLock;
 8008270:	b24b      	sxtb	r3, r1
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 8008272:	63a2      	str	r2, [r4, #56]	@ 0x38
			if( cTxLock == queueUNLOCKED )
 8008274:	d10d      	bne.n	8008292 <xQueueGiveFromISR+0x94>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8008276:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 8008278:	b13b      	cbz	r3, 800828a <xQueueGiveFromISR+0x8c>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800827a:	f104 0024 	add.w	r0, r4, #36	@ 0x24
 800827e:	f000 fdd7 	bl	8008e30 <xTaskRemoveFromEventList>
 8008282:	b110      	cbz	r0, 800828a <xQueueGiveFromISR+0x8c>
							if( pxHigherPriorityTaskWoken != NULL )
 8008284:	b10d      	cbz	r5, 800828a <xQueueGiveFromISR+0x8c>
								*pxHigherPriorityTaskWoken = pdTRUE;
 8008286:	2301      	movs	r3, #1
 8008288:	602b      	str	r3, [r5, #0]
			xReturn = pdPASS;
 800828a:	2001      	movs	r0, #1
	__asm volatile
 800828c:	f386 8811 	msr	BASEPRI, r6
}
 8008290:	bd70      	pop	{r4, r5, r6, pc}
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
 8008292:	3301      	adds	r3, #1
 8008294:	b25b      	sxtb	r3, r3
 8008296:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
 800829a:	e7f6      	b.n	800828a <xQueueGiveFromISR+0x8c>
			xReturn = errQUEUE_FULL;
 800829c:	2000      	movs	r0, #0
 800829e:	e7f5      	b.n	800828c <xQueueGiveFromISR+0x8e>

080082a0 <xQueueReceive>:
{
 80082a0:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 80082a4:	460e      	mov	r6, r1
 80082a6:	9201      	str	r2, [sp, #4]
	configASSERT( ( pxQueue ) );
 80082a8:	4604      	mov	r4, r0
 80082aa:	b940      	cbnz	r0, 80082be <xQueueReceive+0x1e>
	__asm volatile
 80082ac:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80082b0:	f383 8811 	msr	BASEPRI, r3
 80082b4:	f3bf 8f6f 	isb	sy
 80082b8:	f3bf 8f4f 	dsb	sy
 80082bc:	e7fe      	b.n	80082bc <xQueueReceive+0x1c>
	configASSERT( !( ( ( pvBuffer ) == NULL ) && ( ( pxQueue )->uxItemSize != ( UBaseType_t ) 0U ) ) );
 80082be:	b951      	cbnz	r1, 80082d6 <xQueueReceive+0x36>
 80082c0:	6c03      	ldr	r3, [r0, #64]	@ 0x40
 80082c2:	b143      	cbz	r3, 80082d6 <xQueueReceive+0x36>
 80082c4:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80082c8:	f383 8811 	msr	BASEPRI, r3
 80082cc:	f3bf 8f6f 	isb	sy
 80082d0:	f3bf 8f4f 	dsb	sy
 80082d4:	e7fe      	b.n	80082d4 <xQueueReceive+0x34>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 80082d6:	f000 fe39 	bl	8008f4c <xTaskGetSchedulerState>
 80082da:	4605      	mov	r5, r0
 80082dc:	b318      	cbz	r0, 8008326 <xQueueReceive+0x86>
 80082de:	2500      	movs	r5, #0
		prvLockQueue( pxQueue );
 80082e0:	f04f 0800 	mov.w	r8, #0
		taskENTER_CRITICAL();
 80082e4:	f7ff fbbe 	bl	8007a64 <vPortEnterCritical>
			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 80082e8:	6ba7      	ldr	r7, [r4, #56]	@ 0x38
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 80082ea:	b347      	cbz	r7, 800833e <xQueueReceive+0x9e>
				prvCopyDataFromQueue( pxQueue, pvBuffer );
 80082ec:	4631      	mov	r1, r6
 80082ee:	4620      	mov	r0, r4
				pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 80082f0:	3f01      	subs	r7, #1
				prvCopyDataFromQueue( pxQueue, pvBuffer );
 80082f2:	f7ff fd35 	bl	8007d60 <prvCopyDataFromQueue>
				pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 80082f6:	63a7      	str	r7, [r4, #56]	@ 0x38
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 80082f8:	6923      	ldr	r3, [r4, #16]
 80082fa:	b173      	cbz	r3, 800831a <xQueueReceive+0x7a>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 80082fc:	f104 0010 	add.w	r0, r4, #16
 8008300:	f000 fd96 	bl	8008e30 <xTaskRemoveFromEventList>
 8008304:	b148      	cbz	r0, 800831a <xQueueReceive+0x7a>
						queueYIELD_IF_USING_PREEMPTION();
 8008306:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 800830a:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 800830e:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 8008312:	f3bf 8f4f 	dsb	sy
 8008316:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
 800831a:	f7ff fbc3 	bl	8007aa4 <vPortExitCritical>
				return pdPASS;
 800831e:	2001      	movs	r0, #1
}
 8008320:	b004      	add	sp, #16
 8008322:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 8008326:	9b01      	ldr	r3, [sp, #4]
 8008328:	2b00      	cmp	r3, #0
 800832a:	d0d9      	beq.n	80082e0 <xQueueReceive+0x40>
 800832c:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008330:	f383 8811 	msr	BASEPRI, r3
 8008334:	f3bf 8f6f 	isb	sy
 8008338:	f3bf 8f4f 	dsb	sy
 800833c:	e7fe      	b.n	800833c <xQueueReceive+0x9c>
				if( xTicksToWait == ( TickType_t ) 0 )
 800833e:	9b01      	ldr	r3, [sp, #4]
 8008340:	b91b      	cbnz	r3, 800834a <xQueueReceive+0xaa>
					taskEXIT_CRITICAL();
 8008342:	f7ff fbaf 	bl	8007aa4 <vPortExitCritical>
					return errQUEUE_EMPTY;
 8008346:	2000      	movs	r0, #0
 8008348:	e7ea      	b.n	8008320 <xQueueReceive+0x80>
				else if( xEntryTimeSet == pdFALSE )
 800834a:	b915      	cbnz	r5, 8008352 <xQueueReceive+0xb2>
					vTaskInternalSetTimeOutState( &xTimeOut );
 800834c:	a802      	add	r0, sp, #8
 800834e:	f000 fdaf 	bl	8008eb0 <vTaskInternalSetTimeOutState>
		taskEXIT_CRITICAL();
 8008352:	f7ff fba7 	bl	8007aa4 <vPortExitCritical>
		vTaskSuspendAll();
 8008356:	f000 fbbd 	bl	8008ad4 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 800835a:	f7ff fb83 	bl	8007a64 <vPortEnterCritical>
 800835e:	f894 3044 	ldrb.w	r3, [r4, #68]	@ 0x44
 8008362:	2bff      	cmp	r3, #255	@ 0xff
 8008364:	bf08      	it	eq
 8008366:	f884 8044 	strbeq.w	r8, [r4, #68]	@ 0x44
 800836a:	f894 3045 	ldrb.w	r3, [r4, #69]	@ 0x45
 800836e:	2bff      	cmp	r3, #255	@ 0xff
 8008370:	bf08      	it	eq
 8008372:	f884 8045 	strbeq.w	r8, [r4, #69]	@ 0x45
 8008376:	f7ff fb95 	bl	8007aa4 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 800837a:	a901      	add	r1, sp, #4
 800837c:	a802      	add	r0, sp, #8
 800837e:	f000 fda3 	bl	8008ec8 <xTaskCheckForTimeOut>
 8008382:	bb00      	cbnz	r0, 80083c6 <xQueueReceive+0x126>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 8008384:	4620      	mov	r0, r4
 8008386:	f7ff fcad 	bl	8007ce4 <prvIsQueueEmpty>
 800838a:	b1b0      	cbz	r0, 80083ba <xQueueReceive+0x11a>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
 800838c:	9901      	ldr	r1, [sp, #4]
 800838e:	f104 0024 	add.w	r0, r4, #36	@ 0x24
 8008392:	f000 fd15 	bl	8008dc0 <vTaskPlaceOnEventList>
				prvUnlockQueue( pxQueue );
 8008396:	4620      	mov	r0, r4
 8008398:	f7ff fcf8 	bl	8007d8c <prvUnlockQueue>
				if( xTaskResumeAll() == pdFALSE )
 800839c:	f000 fc3e 	bl	8008c1c <xTaskResumeAll>
 80083a0:	b948      	cbnz	r0, 80083b6 <xQueueReceive+0x116>
					portYIELD_WITHIN_API();
 80083a2:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 80083a6:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 80083aa:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 80083ae:	f3bf 8f4f 	dsb	sy
 80083b2:	f3bf 8f6f 	isb	sy
 80083b6:	2501      	movs	r5, #1
 80083b8:	e794      	b.n	80082e4 <xQueueReceive+0x44>
				prvUnlockQueue( pxQueue );
 80083ba:	4620      	mov	r0, r4
 80083bc:	f7ff fce6 	bl	8007d8c <prvUnlockQueue>
				( void ) xTaskResumeAll();
 80083c0:	f000 fc2c 	bl	8008c1c <xTaskResumeAll>
 80083c4:	e7f7      	b.n	80083b6 <xQueueReceive+0x116>
			prvUnlockQueue( pxQueue );
 80083c6:	4620      	mov	r0, r4
 80083c8:	f7ff fce0 	bl	8007d8c <prvUnlockQueue>
			( void ) xTaskResumeAll();
 80083cc:	f000 fc26 	bl	8008c1c <xTaskResumeAll>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 80083d0:	4620      	mov	r0, r4
 80083d2:	f7ff fc87 	bl	8007ce4 <prvIsQueueEmpty>
 80083d6:	2800      	cmp	r0, #0
 80083d8:	d0ed      	beq.n	80083b6 <xQueueReceive+0x116>
 80083da:	e7b4      	b.n	8008346 <xQueueReceive+0xa6>

080083dc <xQueueSemaphoreTake>:
{
 80083dc:	b5f0      	push	{r4, r5, r6, r7, lr}
 80083de:	b085      	sub	sp, #20
	configASSERT( ( pxQueue ) );
 80083e0:	4604      	mov	r4, r0
{
 80083e2:	9101      	str	r1, [sp, #4]
	configASSERT( ( pxQueue ) );
 80083e4:	b940      	cbnz	r0, 80083f8 <xQueueSemaphoreTake+0x1c>
 80083e6:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80083ea:	f383 8811 	msr	BASEPRI, r3
 80083ee:	f3bf 8f6f 	isb	sy
 80083f2:	f3bf 8f4f 	dsb	sy
 80083f6:	e7fe      	b.n	80083f6 <xQueueSemaphoreTake+0x1a>
	configASSERT( pxQueue->uxItemSize == 0 );
 80083f8:	6c05      	ldr	r5, [r0, #64]	@ 0x40
 80083fa:	b145      	cbz	r5, 800840e <xQueueSemaphoreTake+0x32>
 80083fc:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008400:	f383 8811 	msr	BASEPRI, r3
 8008404:	f3bf 8f6f 	isb	sy
 8008408:	f3bf 8f4f 	dsb	sy
 800840c:	e7fe      	b.n	800840c <xQueueSemaphoreTake+0x30>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 800840e:	f000 fd9d 	bl	8008f4c <xTaskGetSchedulerState>
 8008412:	4606      	mov	r6, r0
 8008414:	b320      	cbz	r0, 8008460 <xQueueSemaphoreTake+0x84>
 8008416:	462e      	mov	r6, r5
		prvLockQueue( pxQueue );
 8008418:	2700      	movs	r7, #0
		taskENTER_CRITICAL();
 800841a:	f7ff fb23 	bl	8007a64 <vPortEnterCritical>
			const UBaseType_t uxSemaphoreCount = pxQueue->uxMessagesWaiting;
 800841e:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
			if( uxSemaphoreCount > ( UBaseType_t ) 0 )
 8008420:	b353      	cbz	r3, 8008478 <xQueueSemaphoreTake+0x9c>
				pxQueue->uxMessagesWaiting = uxSemaphoreCount - ( UBaseType_t ) 1;
 8008422:	3b01      	subs	r3, #1
 8008424:	63a3      	str	r3, [r4, #56]	@ 0x38
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 8008426:	6823      	ldr	r3, [r4, #0]
 8008428:	b913      	cbnz	r3, 8008430 <xQueueSemaphoreTake+0x54>
						pxQueue->u.xSemaphore.xMutexHolder = pvTaskIncrementMutexHeldCount();
 800842a:	f000 fe6d 	bl	8009108 <pvTaskIncrementMutexHeldCount>
 800842e:	60a0      	str	r0, [r4, #8]
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 8008430:	6923      	ldr	r3, [r4, #16]
 8008432:	b173      	cbz	r3, 8008452 <xQueueSemaphoreTake+0x76>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8008434:	f104 0010 	add.w	r0, r4, #16
 8008438:	f000 fcfa 	bl	8008e30 <xTaskRemoveFromEventList>
 800843c:	b148      	cbz	r0, 8008452 <xQueueSemaphoreTake+0x76>
						queueYIELD_IF_USING_PREEMPTION();
 800843e:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 8008442:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8008446:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 800844a:	f3bf 8f4f 	dsb	sy
 800844e:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
 8008452:	f7ff fb27 	bl	8007aa4 <vPortExitCritical>
				return pdPASS;
 8008456:	2001      	movs	r0, #1
}
 8008458:	b005      	add	sp, #20
 800845a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800845c:	4635      	mov	r5, r6
 800845e:	e7db      	b.n	8008418 <xQueueSemaphoreTake+0x3c>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 8008460:	9b01      	ldr	r3, [sp, #4]
 8008462:	2b00      	cmp	r3, #0
 8008464:	d0fa      	beq.n	800845c <xQueueSemaphoreTake+0x80>
 8008466:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800846a:	f383 8811 	msr	BASEPRI, r3
 800846e:	f3bf 8f6f 	isb	sy
 8008472:	f3bf 8f4f 	dsb	sy
 8008476:	e7fe      	b.n	8008476 <xQueueSemaphoreTake+0x9a>
				if( xTicksToWait == ( TickType_t ) 0 )
 8008478:	9b01      	ldr	r3, [sp, #4]
 800847a:	b953      	cbnz	r3, 8008492 <xQueueSemaphoreTake+0xb6>
						configASSERT( xInheritanceOccurred == pdFALSE );
 800847c:	2d00      	cmp	r5, #0
 800847e:	d066      	beq.n	800854e <xQueueSemaphoreTake+0x172>
 8008480:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008484:	f383 8811 	msr	BASEPRI, r3
 8008488:	f3bf 8f6f 	isb	sy
 800848c:	f3bf 8f4f 	dsb	sy
 8008490:	e7fe      	b.n	8008490 <xQueueSemaphoreTake+0xb4>
				else if( xEntryTimeSet == pdFALSE )
 8008492:	b916      	cbnz	r6, 800849a <xQueueSemaphoreTake+0xbe>
					vTaskInternalSetTimeOutState( &xTimeOut );
 8008494:	a802      	add	r0, sp, #8
 8008496:	f000 fd0b 	bl	8008eb0 <vTaskInternalSetTimeOutState>
		taskEXIT_CRITICAL();
 800849a:	f7ff fb03 	bl	8007aa4 <vPortExitCritical>
		vTaskSuspendAll();
 800849e:	f000 fb19 	bl	8008ad4 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 80084a2:	f7ff fadf 	bl	8007a64 <vPortEnterCritical>
 80084a6:	f894 3044 	ldrb.w	r3, [r4, #68]	@ 0x44
 80084aa:	2bff      	cmp	r3, #255	@ 0xff
 80084ac:	bf08      	it	eq
 80084ae:	f884 7044 	strbeq.w	r7, [r4, #68]	@ 0x44
 80084b2:	f894 3045 	ldrb.w	r3, [r4, #69]	@ 0x45
 80084b6:	2bff      	cmp	r3, #255	@ 0xff
 80084b8:	bf08      	it	eq
 80084ba:	f884 7045 	strbeq.w	r7, [r4, #69]	@ 0x45
 80084be:	f7ff faf1 	bl	8007aa4 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 80084c2:	a901      	add	r1, sp, #4
 80084c4:	a802      	add	r0, sp, #8
 80084c6:	f000 fcff 	bl	8008ec8 <xTaskCheckForTimeOut>
 80084ca:	bb50      	cbnz	r0, 8008522 <xQueueSemaphoreTake+0x146>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 80084cc:	4620      	mov	r0, r4
 80084ce:	f7ff fc09 	bl	8007ce4 <prvIsQueueEmpty>
 80084d2:	b300      	cbz	r0, 8008516 <xQueueSemaphoreTake+0x13a>
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 80084d4:	6823      	ldr	r3, [r4, #0]
 80084d6:	b93b      	cbnz	r3, 80084e8 <xQueueSemaphoreTake+0x10c>
						taskENTER_CRITICAL();
 80084d8:	f7ff fac4 	bl	8007a64 <vPortEnterCritical>
							xInheritanceOccurred = xTaskPriorityInherit( pxQueue->u.xSemaphore.xMutexHolder );
 80084dc:	68a0      	ldr	r0, [r4, #8]
 80084de:	f000 fd45 	bl	8008f6c <xTaskPriorityInherit>
 80084e2:	4605      	mov	r5, r0
						taskEXIT_CRITICAL();
 80084e4:	f7ff fade 	bl	8007aa4 <vPortExitCritical>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
 80084e8:	9901      	ldr	r1, [sp, #4]
 80084ea:	f104 0024 	add.w	r0, r4, #36	@ 0x24
 80084ee:	f000 fc67 	bl	8008dc0 <vTaskPlaceOnEventList>
				prvUnlockQueue( pxQueue );
 80084f2:	4620      	mov	r0, r4
 80084f4:	f7ff fc4a 	bl	8007d8c <prvUnlockQueue>
				if( xTaskResumeAll() == pdFALSE )
 80084f8:	f000 fb90 	bl	8008c1c <xTaskResumeAll>
 80084fc:	b948      	cbnz	r0, 8008512 <xQueueSemaphoreTake+0x136>
					portYIELD_WITHIN_API();
 80084fe:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 8008502:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8008506:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 800850a:	f3bf 8f4f 	dsb	sy
 800850e:	f3bf 8f6f 	isb	sy
 8008512:	2601      	movs	r6, #1
 8008514:	e781      	b.n	800841a <xQueueSemaphoreTake+0x3e>
				prvUnlockQueue( pxQueue );
 8008516:	4620      	mov	r0, r4
 8008518:	f7ff fc38 	bl	8007d8c <prvUnlockQueue>
				( void ) xTaskResumeAll();
 800851c:	f000 fb7e 	bl	8008c1c <xTaskResumeAll>
 8008520:	e7f7      	b.n	8008512 <xQueueSemaphoreTake+0x136>
			prvUnlockQueue( pxQueue );
 8008522:	4620      	mov	r0, r4
 8008524:	f7ff fc32 	bl	8007d8c <prvUnlockQueue>
			( void ) xTaskResumeAll();
 8008528:	f000 fb78 	bl	8008c1c <xTaskResumeAll>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 800852c:	4620      	mov	r0, r4
 800852e:	f7ff fbd9 	bl	8007ce4 <prvIsQueueEmpty>
 8008532:	2800      	cmp	r0, #0
 8008534:	d0ed      	beq.n	8008512 <xQueueSemaphoreTake+0x136>
					if( xInheritanceOccurred != pdFALSE )
 8008536:	b165      	cbz	r5, 8008552 <xQueueSemaphoreTake+0x176>
						taskENTER_CRITICAL();
 8008538:	f7ff fa94 	bl	8007a64 <vPortEnterCritical>
		if( listCURRENT_LIST_LENGTH( &( pxQueue->xTasksWaitingToReceive ) ) > 0U )
 800853c:	6a61      	ldr	r1, [r4, #36]	@ 0x24
 800853e:	b119      	cbz	r1, 8008548 <xQueueSemaphoreTake+0x16c>
			uxHighestPriorityOfWaitingTasks = ( UBaseType_t ) configMAX_PRIORITIES - ( UBaseType_t ) listGET_ITEM_VALUE_OF_HEAD_ENTRY( &( pxQueue->xTasksWaitingToReceive ) );
 8008540:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 8008542:	6819      	ldr	r1, [r3, #0]
 8008544:	f1c1 0138 	rsb	r1, r1, #56	@ 0x38
							vTaskPriorityDisinheritAfterTimeout( pxQueue->u.xSemaphore.xMutexHolder, uxHighestWaitingPriority );
 8008548:	68a0      	ldr	r0, [r4, #8]
 800854a:	f000 fd8f 	bl	800906c <vTaskPriorityDisinheritAfterTimeout>
						taskEXIT_CRITICAL();
 800854e:	f7ff faa9 	bl	8007aa4 <vPortExitCritical>
					return errQUEUE_EMPTY;
 8008552:	2000      	movs	r0, #0
 8008554:	e780      	b.n	8008458 <xQueueSemaphoreTake+0x7c>

08008556 <xQueueReceiveFromISR>:
{
 8008556:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800855a:	4689      	mov	r9, r1
 800855c:	4690      	mov	r8, r2
	configASSERT( pxQueue );
 800855e:	4604      	mov	r4, r0
 8008560:	b940      	cbnz	r0, 8008574 <xQueueReceiveFromISR+0x1e>
 8008562:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008566:	f383 8811 	msr	BASEPRI, r3
 800856a:	f3bf 8f6f 	isb	sy
 800856e:	f3bf 8f4f 	dsb	sy
 8008572:	e7fe      	b.n	8008572 <xQueueReceiveFromISR+0x1c>
	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 8008574:	b951      	cbnz	r1, 800858c <xQueueReceiveFromISR+0x36>
 8008576:	6c03      	ldr	r3, [r0, #64]	@ 0x40
 8008578:	b143      	cbz	r3, 800858c <xQueueReceiveFromISR+0x36>
 800857a:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800857e:	f383 8811 	msr	BASEPRI, r3
 8008582:	f3bf 8f6f 	isb	sy
 8008586:	f3bf 8f4f 	dsb	sy
 800858a:	e7fe      	b.n	800858a <xQueueReceiveFromISR+0x34>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 800858c:	f7ff fb7c 	bl	8007c88 <vPortValidateInterruptPriority>
	__asm volatile
 8008590:	f3ef 8711 	mrs	r7, BASEPRI
 8008594:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008598:	f383 8811 	msr	BASEPRI, r3
 800859c:	f3bf 8f6f 	isb	sy
 80085a0:	f3bf 8f4f 	dsb	sy
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 80085a4:	6ba5      	ldr	r5, [r4, #56]	@ 0x38
		if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 80085a6:	b30d      	cbz	r5, 80085ec <xQueueReceiveFromISR+0x96>
			const int8_t cRxLock = pxQueue->cRxLock;
 80085a8:	f894 6044 	ldrb.w	r6, [r4, #68]	@ 0x44
			prvCopyDataFromQueue( pxQueue, pvBuffer );
 80085ac:	4649      	mov	r1, r9
			const int8_t cRxLock = pxQueue->cRxLock;
 80085ae:	b276      	sxtb	r6, r6
			prvCopyDataFromQueue( pxQueue, pvBuffer );
 80085b0:	4620      	mov	r0, r4
 80085b2:	f7ff fbd5 	bl	8007d60 <prvCopyDataFromQueue>
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 80085b6:	3d01      	subs	r5, #1
			if( cRxLock == queueUNLOCKED )
 80085b8:	1c73      	adds	r3, r6, #1
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 80085ba:	63a5      	str	r5, [r4, #56]	@ 0x38
			if( cRxLock == queueUNLOCKED )
 80085bc:	d111      	bne.n	80085e2 <xQueueReceiveFromISR+0x8c>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 80085be:	6923      	ldr	r3, [r4, #16]
 80085c0:	b153      	cbz	r3, 80085d8 <xQueueReceiveFromISR+0x82>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 80085c2:	f104 0010 	add.w	r0, r4, #16
 80085c6:	f000 fc33 	bl	8008e30 <xTaskRemoveFromEventList>
 80085ca:	b128      	cbz	r0, 80085d8 <xQueueReceiveFromISR+0x82>
						if( pxHigherPriorityTaskWoken != NULL )
 80085cc:	f1b8 0f00 	cmp.w	r8, #0
 80085d0:	d002      	beq.n	80085d8 <xQueueReceiveFromISR+0x82>
							*pxHigherPriorityTaskWoken = pdTRUE;
 80085d2:	2301      	movs	r3, #1
 80085d4:	f8c8 3000 	str.w	r3, [r8]
			xReturn = pdPASS;
 80085d8:	2001      	movs	r0, #1
	__asm volatile
 80085da:	f387 8811 	msr	BASEPRI, r7
}
 80085de:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
				pxQueue->cRxLock = ( int8_t ) ( cRxLock + 1 );
 80085e2:	3601      	adds	r6, #1
 80085e4:	b276      	sxtb	r6, r6
 80085e6:	f884 6044 	strb.w	r6, [r4, #68]	@ 0x44
 80085ea:	e7f5      	b.n	80085d8 <xQueueReceiveFromISR+0x82>
			xReturn = pdFAIL;
 80085ec:	4628      	mov	r0, r5
 80085ee:	e7f4      	b.n	80085da <xQueueReceiveFromISR+0x84>

080085f0 <vQueueAddToRegistry>:
/*-----------------------------------------------------------*/

#if ( configQUEUE_REGISTRY_SIZE > 0 )

	void vQueueAddToRegistry( QueueHandle_t xQueue, const char *pcQueueName ) /*lint !e971 Unqualified char types are allowed for strings and single characters only. */
	{
 80085f0:	b530      	push	{r4, r5, lr}

		/* See if there is an empty space in the registry.  A NULL name denotes
		a free slot. */
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
		{
			if( xQueueRegistry[ ux ].pcQueueName == NULL )
 80085f2:	4a07      	ldr	r2, [pc, #28]	@ (8008610 <vQueueAddToRegistry+0x20>)
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 80085f4:	2300      	movs	r3, #0
			if( xQueueRegistry[ ux ].pcQueueName == NULL )
 80085f6:	f852 5033 	ldr.w	r5, [r2, r3, lsl #3]
 80085fa:	eb02 04c3 	add.w	r4, r2, r3, lsl #3
 80085fe:	b91d      	cbnz	r5, 8008608 <vQueueAddToRegistry+0x18>
			{
				/* Store the information on this queue. */
				xQueueRegistry[ ux ].pcQueueName = pcQueueName;
 8008600:	f842 1033 	str.w	r1, [r2, r3, lsl #3]
				xQueueRegistry[ ux ].xHandle = xQueue;
 8008604:	6060      	str	r0, [r4, #4]
			else
			{
				mtCOVERAGE_TEST_MARKER();
			}
		}
	}
 8008606:	bd30      	pop	{r4, r5, pc}
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 8008608:	3301      	adds	r3, #1
 800860a:	2b08      	cmp	r3, #8
 800860c:	d1f3      	bne.n	80085f6 <vQueueAddToRegistry+0x6>
 800860e:	e7fa      	b.n	8008606 <vQueueAddToRegistry+0x16>
 8008610:	200138b4 	.word	0x200138b4

08008614 <vQueueUnregisterQueue>:
/*-----------------------------------------------------------*/

#if ( configQUEUE_REGISTRY_SIZE > 0 )

	void vQueueUnregisterQueue( QueueHandle_t xQueue )
	{
 8008614:	b510      	push	{r4, lr}

		/* See if the handle of the queue being unregistered in actually in the
		registry. */
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
		{
			if( xQueueRegistry[ ux ].xHandle == xQueue )
 8008616:	4a09      	ldr	r2, [pc, #36]	@ (800863c <vQueueUnregisterQueue+0x28>)
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 8008618:	2300      	movs	r3, #0
			if( xQueueRegistry[ ux ].xHandle == xQueue )
 800861a:	f852 1033 	ldr.w	r1, [r2, r3, lsl #3]
 800861e:	4281      	cmp	r1, r0
 8008620:	ea4f 04c3 	mov.w	r4, r3, lsl #3
 8008624:	d106      	bne.n	8008634 <vQueueUnregisterQueue+0x20>
			{
				/* Set the name to NULL to show that this slot if free again. */
				xQueueRegistry[ ux ].pcQueueName = NULL;
 8008626:	4a06      	ldr	r2, [pc, #24]	@ (8008640 <vQueueUnregisterQueue+0x2c>)
 8008628:	2100      	movs	r1, #0
 800862a:	f842 1033 	str.w	r1, [r2, r3, lsl #3]

				/* Set the handle to NULL to ensure the same queue handle cannot
				appear in the registry twice if it is added, removed, then
				added again. */
				xQueueRegistry[ ux ].xHandle = ( QueueHandle_t ) 0;
 800862e:	4422      	add	r2, r4
 8008630:	6051      	str	r1, [r2, #4]
			{
				mtCOVERAGE_TEST_MARKER();
			}
		}

	} /*lint !e818 xQueue could not be pointer to const because it is a typedef. */
 8008632:	bd10      	pop	{r4, pc}
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 8008634:	3301      	adds	r3, #1
 8008636:	2b08      	cmp	r3, #8
 8008638:	d1ef      	bne.n	800861a <vQueueUnregisterQueue+0x6>
 800863a:	e7fa      	b.n	8008632 <vQueueUnregisterQueue+0x1e>
 800863c:	200138b8 	.word	0x200138b8
 8008640:	200138b4 	.word	0x200138b4

08008644 <vQueueDelete>:
{
 8008644:	b510      	push	{r4, lr}
	configASSERT( pxQueue );
 8008646:	b940      	cbnz	r0, 800865a <vQueueDelete+0x16>
	__asm volatile
 8008648:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800864c:	f383 8811 	msr	BASEPRI, r3
 8008650:	f3bf 8f6f 	isb	sy
 8008654:	f3bf 8f4f 	dsb	sy
 8008658:	e7fe      	b.n	8008658 <vQueueDelete+0x14>
		vQueueUnregisterQueue( pxQueue );
 800865a:	f7ff ffdb 	bl	8008614 <vQueueUnregisterQueue>
		if( pxQueue->ucStaticallyAllocated == ( uint8_t ) pdFALSE )
 800865e:	f890 3046 	ldrb.w	r3, [r0, #70]	@ 0x46
 8008662:	b91b      	cbnz	r3, 800866c <vQueueDelete+0x28>
}
 8008664:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
			vPortFree( pxQueue );
 8008668:	f7ff b918 	b.w	800789c <vPortFree>
}
 800866c:	bd10      	pop	{r4, pc}

0800866e <vQueueWaitForMessageRestricted>:
/*-----------------------------------------------------------*/

#if ( configUSE_TIMERS == 1 )

	void vQueueWaitForMessageRestricted( QueueHandle_t xQueue, TickType_t xTicksToWait, const BaseType_t xWaitIndefinitely )
	{
 800866e:	b570      	push	{r4, r5, r6, lr}
 8008670:	4604      	mov	r4, r0
 8008672:	460d      	mov	r5, r1
 8008674:	4616      	mov	r6, r2
		will not actually cause the task to block, just place it on a blocked
		list.  It will not block until the scheduler is unlocked - at which
		time a yield will be performed.  If an item is added to the queue while
		the queue is locked, and the calling task blocks on the queue, then the
		calling task will be immediately unblocked when the queue is unlocked. */
		prvLockQueue( pxQueue );
 8008676:	f7ff f9f5 	bl	8007a64 <vPortEnterCritical>
 800867a:	f894 3044 	ldrb.w	r3, [r4, #68]	@ 0x44
 800867e:	2bff      	cmp	r3, #255	@ 0xff
 8008680:	bf04      	itt	eq
 8008682:	2300      	moveq	r3, #0
 8008684:	f884 3044 	strbeq.w	r3, [r4, #68]	@ 0x44
 8008688:	f894 3045 	ldrb.w	r3, [r4, #69]	@ 0x45
 800868c:	2bff      	cmp	r3, #255	@ 0xff
 800868e:	bf04      	itt	eq
 8008690:	2300      	moveq	r3, #0
 8008692:	f884 3045 	strbeq.w	r3, [r4, #69]	@ 0x45
 8008696:	f7ff fa05 	bl	8007aa4 <vPortExitCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t ) 0U )
 800869a:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
 800869c:	b92b      	cbnz	r3, 80086aa <vQueueWaitForMessageRestricted+0x3c>
		{
			/* There is nothing in the queue, block for the specified period. */
			vTaskPlaceOnEventListRestricted( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait, xWaitIndefinitely );
 800869e:	4632      	mov	r2, r6
 80086a0:	4629      	mov	r1, r5
 80086a2:	f104 0024 	add.w	r0, r4, #36	@ 0x24
 80086a6:	f000 fba5 	bl	8008df4 <vTaskPlaceOnEventListRestricted>
		}
		else
		{
			mtCOVERAGE_TEST_MARKER();
		}
		prvUnlockQueue( pxQueue );
 80086aa:	4620      	mov	r0, r4
	}
 80086ac:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
		prvUnlockQueue( pxQueue );
 80086b0:	f7ff bb6c 	b.w	8007d8c <prvUnlockQueue>

080086b4 <prvAddNewTaskToReadyList>:
	}
}
/*-----------------------------------------------------------*/

static void prvAddNewTaskToReadyList( TCB_t *pxNewTCB )
{
 80086b4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80086b8:	4604      	mov	r4, r0
	/* Ensure interrupts don't access the task lists while the lists are being
	updated. */
	taskENTER_CRITICAL();
 80086ba:	f7ff f9d3 	bl	8007a64 <vPortEnterCritical>
	{
		uxCurrentNumberOfTasks++;
 80086be:	4b30      	ldr	r3, [pc, #192]	@ (8008780 <prvAddNewTaskToReadyList+0xcc>)
		if( pxCurrentTCB == NULL )
 80086c0:	4e30      	ldr	r6, [pc, #192]	@ (8008784 <prvAddNewTaskToReadyList+0xd0>)
		uxCurrentNumberOfTasks++;
 80086c2:	681a      	ldr	r2, [r3, #0]
 80086c4:	4f30      	ldr	r7, [pc, #192]	@ (8008788 <prvAddNewTaskToReadyList+0xd4>)
 80086c6:	3201      	adds	r2, #1
 80086c8:	601a      	str	r2, [r3, #0]
		if( pxCurrentTCB == NULL )
 80086ca:	6835      	ldr	r5, [r6, #0]
 80086cc:	2d00      	cmp	r5, #0
 80086ce:	d14b      	bne.n	8008768 <prvAddNewTaskToReadyList+0xb4>
		{
			/* There are no other tasks, or all the other tasks are in
			the suspended state - make this the current task. */
			pxCurrentTCB = pxNewTCB;
 80086d0:	6034      	str	r4, [r6, #0]

			if( uxCurrentNumberOfTasks == ( UBaseType_t ) 1 )
 80086d2:	681b      	ldr	r3, [r3, #0]
 80086d4:	2b01      	cmp	r3, #1
 80086d6:	d11f      	bne.n	8008718 <prvAddNewTaskToReadyList+0x64>
 80086d8:	46b8      	mov	r8, r7
{
UBaseType_t uxPriority;

	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
	{
		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
 80086da:	4640      	mov	r0, r8
	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
 80086dc:	3501      	adds	r5, #1
		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
 80086de:	f7ff f91b 	bl	8007918 <vListInitialise>
	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
 80086e2:	2d38      	cmp	r5, #56	@ 0x38
 80086e4:	f108 0814 	add.w	r8, r8, #20
 80086e8:	d1f7      	bne.n	80086da <prvAddNewTaskToReadyList+0x26>
	}

	vListInitialise( &xDelayedTaskList1 );
 80086ea:	f8df 80c4 	ldr.w	r8, [pc, #196]	@ 80087b0 <prvAddNewTaskToReadyList+0xfc>
	vListInitialise( &xDelayedTaskList2 );
 80086ee:	4d27      	ldr	r5, [pc, #156]	@ (800878c <prvAddNewTaskToReadyList+0xd8>)
	vListInitialise( &xDelayedTaskList1 );
 80086f0:	4640      	mov	r0, r8
 80086f2:	f7ff f911 	bl	8007918 <vListInitialise>
	vListInitialise( &xDelayedTaskList2 );
 80086f6:	4628      	mov	r0, r5
 80086f8:	f7ff f90e 	bl	8007918 <vListInitialise>
	vListInitialise( &xPendingReadyList );
 80086fc:	4824      	ldr	r0, [pc, #144]	@ (8008790 <prvAddNewTaskToReadyList+0xdc>)
 80086fe:	f7ff f90b 	bl	8007918 <vListInitialise>

	#if ( INCLUDE_vTaskDelete == 1 )
	{
		vListInitialise( &xTasksWaitingTermination );
 8008702:	4824      	ldr	r0, [pc, #144]	@ (8008794 <prvAddNewTaskToReadyList+0xe0>)
 8008704:	f7ff f908 	bl	8007918 <vListInitialise>
	}
	#endif /* INCLUDE_vTaskDelete */

	#if ( INCLUDE_vTaskSuspend == 1 )
	{
		vListInitialise( &xSuspendedTaskList );
 8008708:	4823      	ldr	r0, [pc, #140]	@ (8008798 <prvAddNewTaskToReadyList+0xe4>)
 800870a:	f7ff f905 	bl	8007918 <vListInitialise>
	}
	#endif /* INCLUDE_vTaskSuspend */

	/* Start with pxDelayedTaskList using list1 and the pxOverflowDelayedTaskList
	using list2. */
	pxDelayedTaskList = &xDelayedTaskList1;
 800870e:	4b23      	ldr	r3, [pc, #140]	@ (800879c <prvAddNewTaskToReadyList+0xe8>)
 8008710:	f8c3 8000 	str.w	r8, [r3]
	pxOverflowDelayedTaskList = &xDelayedTaskList2;
 8008714:	4b22      	ldr	r3, [pc, #136]	@ (80087a0 <prvAddNewTaskToReadyList+0xec>)
 8008716:	601d      	str	r5, [r3, #0]
		uxTaskNumber++;
 8008718:	4a22      	ldr	r2, [pc, #136]	@ (80087a4 <prvAddNewTaskToReadyList+0xf0>)
 800871a:	6813      	ldr	r3, [r2, #0]
 800871c:	3301      	adds	r3, #1
 800871e:	6013      	str	r3, [r2, #0]
		prvAddTaskToReadyList( pxNewTCB );
 8008720:	4a21      	ldr	r2, [pc, #132]	@ (80087a8 <prvAddNewTaskToReadyList+0xf4>)
			pxNewTCB->uxTCBNumber = uxTaskNumber;
 8008722:	6463      	str	r3, [r4, #68]	@ 0x44
		prvAddTaskToReadyList( pxNewTCB );
 8008724:	6811      	ldr	r1, [r2, #0]
 8008726:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 8008728:	2014      	movs	r0, #20
 800872a:	428b      	cmp	r3, r1
 800872c:	fb00 7003 	mla	r0, r0, r3, r7
 8008730:	f104 0104 	add.w	r1, r4, #4
 8008734:	bf88      	it	hi
 8008736:	6013      	strhi	r3, [r2, #0]
 8008738:	f7ff f8fc 	bl	8007934 <vListInsertEnd>
	taskEXIT_CRITICAL();
 800873c:	f7ff f9b2 	bl	8007aa4 <vPortExitCritical>
	if( xSchedulerRunning != pdFALSE )
 8008740:	4b1a      	ldr	r3, [pc, #104]	@ (80087ac <prvAddNewTaskToReadyList+0xf8>)
 8008742:	681b      	ldr	r3, [r3, #0]
 8008744:	b173      	cbz	r3, 8008764 <prvAddNewTaskToReadyList+0xb0>
		if( pxCurrentTCB->uxPriority < pxNewTCB->uxPriority )
 8008746:	6833      	ldr	r3, [r6, #0]
 8008748:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 800874a:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 800874c:	429a      	cmp	r2, r3
 800874e:	d209      	bcs.n	8008764 <prvAddNewTaskToReadyList+0xb0>
			taskYIELD_IF_USING_PREEMPTION();
 8008750:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 8008754:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8008758:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 800875c:	f3bf 8f4f 	dsb	sy
 8008760:	f3bf 8f6f 	isb	sy
}
 8008764:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
			if( xSchedulerRunning == pdFALSE )
 8008768:	4b10      	ldr	r3, [pc, #64]	@ (80087ac <prvAddNewTaskToReadyList+0xf8>)
 800876a:	681a      	ldr	r2, [r3, #0]
				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
 800876c:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
			if( xSchedulerRunning == pdFALSE )
 800876e:	2a00      	cmp	r2, #0
 8008770:	d1d2      	bne.n	8008718 <prvAddNewTaskToReadyList+0x64>
				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
 8008772:	6832      	ldr	r2, [r6, #0]
 8008774:	6ad2      	ldr	r2, [r2, #44]	@ 0x2c
 8008776:	429a      	cmp	r2, r3
					pxCurrentTCB = pxNewTCB;
 8008778:	bf98      	it	ls
 800877a:	6034      	strls	r4, [r6, #0]
 800877c:	e7cc      	b.n	8008718 <prvAddNewTaskToReadyList+0x64>
 800877e:	bf00      	nop
 8008780:	20013918 	.word	0x20013918
 8008784:	20013dec 	.word	0x20013dec
 8008788:	2001398c 	.word	0x2001398c
 800878c:	20013964 	.word	0x20013964
 8008790:	20013948 	.word	0x20013948
 8008794:	20013934 	.word	0x20013934
 8008798:	2001391c 	.word	0x2001391c
 800879c:	20013960 	.word	0x20013960
 80087a0:	2001395c 	.word	0x2001395c
 80087a4:	200138fc 	.word	0x200138fc
 80087a8:	20013910 	.word	0x20013910
 80087ac:	2001390c 	.word	0x2001390c
 80087b0:	20013978 	.word	0x20013978

080087b4 <prvAddCurrentTaskToDelayedList>:

#endif
/*-----------------------------------------------------------*/

static void prvAddCurrentTaskToDelayedList( TickType_t xTicksToWait, const BaseType_t xCanBlockIndefinitely )
{
 80087b4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
TickType_t xTimeToWake;
const TickType_t xConstTickCount = xTickCount;
 80087b6:	4b15      	ldr	r3, [pc, #84]	@ (800880c <prvAddCurrentTaskToDelayedList+0x58>)
	}
	#endif

	/* Remove the task from the ready list before adding it to the blocked list
	as the same list item is used for both lists. */
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 80087b8:	4d15      	ldr	r5, [pc, #84]	@ (8008810 <prvAddCurrentTaskToDelayedList+0x5c>)
const TickType_t xConstTickCount = xTickCount;
 80087ba:	681c      	ldr	r4, [r3, #0]
{
 80087bc:	4606      	mov	r6, r0
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 80087be:	6828      	ldr	r0, [r5, #0]
 80087c0:	3004      	adds	r0, #4
{
 80087c2:	460f      	mov	r7, r1
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 80087c4:	f7ff f8d8 	bl	8007978 <uxListRemove>
		mtCOVERAGE_TEST_MARKER();
	}

	#if ( INCLUDE_vTaskSuspend == 1 )
	{
		if( ( xTicksToWait == portMAX_DELAY ) && ( xCanBlockIndefinitely != pdFALSE ) )
 80087c8:	1c73      	adds	r3, r6, #1
 80087ca:	d107      	bne.n	80087dc <prvAddCurrentTaskToDelayedList+0x28>
 80087cc:	b137      	cbz	r7, 80087dc <prvAddCurrentTaskToDelayedList+0x28>
		{
			/* Add the task to the suspended task list instead of a delayed task
			list to ensure it is not woken by a timing event.  It will block
			indefinitely. */
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 80087ce:	6829      	ldr	r1, [r5, #0]
 80087d0:	4810      	ldr	r0, [pc, #64]	@ (8008814 <prvAddCurrentTaskToDelayedList+0x60>)

		/* Avoid compiler warning when INCLUDE_vTaskSuspend is not 1. */
		( void ) xCanBlockIndefinitely;
	}
	#endif /* INCLUDE_vTaskSuspend */
}
 80087d2:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 80087d6:	3104      	adds	r1, #4
 80087d8:	f7ff b8ac 	b.w	8007934 <vListInsertEnd>
			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
 80087dc:	682b      	ldr	r3, [r5, #0]
 80087de:	19a4      	adds	r4, r4, r6
 80087e0:	605c      	str	r4, [r3, #4]
			if( xTimeToWake < xConstTickCount )
 80087e2:	d307      	bcc.n	80087f4 <prvAddCurrentTaskToDelayedList+0x40>
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 80087e4:	4b0c      	ldr	r3, [pc, #48]	@ (8008818 <prvAddCurrentTaskToDelayedList+0x64>)
 80087e6:	6818      	ldr	r0, [r3, #0]
 80087e8:	6829      	ldr	r1, [r5, #0]
}
 80087ea:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 80087ee:	3104      	adds	r1, #4
 80087f0:	f7ff b8ab 	b.w	800794a <vListInsert>
				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 80087f4:	4b09      	ldr	r3, [pc, #36]	@ (800881c <prvAddCurrentTaskToDelayedList+0x68>)
 80087f6:	6818      	ldr	r0, [r3, #0]
 80087f8:	6829      	ldr	r1, [r5, #0]
 80087fa:	3104      	adds	r1, #4
 80087fc:	f7ff f8a5 	bl	800794a <vListInsert>
				if( xTimeToWake < xNextTaskUnblockTime )
 8008800:	4b07      	ldr	r3, [pc, #28]	@ (8008820 <prvAddCurrentTaskToDelayedList+0x6c>)
 8008802:	681a      	ldr	r2, [r3, #0]
 8008804:	42a2      	cmp	r2, r4
					xNextTaskUnblockTime = xTimeToWake;
 8008806:	bf88      	it	hi
 8008808:	601c      	strhi	r4, [r3, #0]
}
 800880a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800880c:	20013914 	.word	0x20013914
 8008810:	20013dec 	.word	0x20013dec
 8008814:	2001391c 	.word	0x2001391c
 8008818:	2001395c 	.word	0x2001395c
 800881c:	20013960 	.word	0x20013960
 8008820:	200138f8 	.word	0x200138f8

08008824 <prvResetNextTaskUnblockTime>:
	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 8008824:	4a06      	ldr	r2, [pc, #24]	@ (8008840 <prvResetNextTaskUnblockTime+0x1c>)
 8008826:	6813      	ldr	r3, [r2, #0]
 8008828:	6819      	ldr	r1, [r3, #0]
 800882a:	4b06      	ldr	r3, [pc, #24]	@ (8008844 <prvResetNextTaskUnblockTime+0x20>)
 800882c:	b919      	cbnz	r1, 8008836 <prvResetNextTaskUnblockTime+0x12>
		xNextTaskUnblockTime = portMAX_DELAY;
 800882e:	f04f 32ff 	mov.w	r2, #4294967295
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 8008832:	601a      	str	r2, [r3, #0]
}
 8008834:	4770      	bx	lr
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8008836:	6812      	ldr	r2, [r2, #0]
 8008838:	68d2      	ldr	r2, [r2, #12]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 800883a:	68d2      	ldr	r2, [r2, #12]
 800883c:	6852      	ldr	r2, [r2, #4]
 800883e:	e7f8      	b.n	8008832 <prvResetNextTaskUnblockTime+0xe>
 8008840:	20013960 	.word	0x20013960
 8008844:	200138f8 	.word	0x200138f8

08008848 <prvDeleteTCB>:
	{
 8008848:	b510      	push	{r4, lr}
			if( pxTCB->ucStaticallyAllocated == tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB )
 800884a:	f890 305d 	ldrb.w	r3, [r0, #93]	@ 0x5d
	{
 800884e:	4604      	mov	r4, r0
			if( pxTCB->ucStaticallyAllocated == tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB )
 8008850:	b93b      	cbnz	r3, 8008862 <prvDeleteTCB+0x1a>
				vPortFree( pxTCB->pxStack );
 8008852:	6b00      	ldr	r0, [r0, #48]	@ 0x30
 8008854:	f7ff f822 	bl	800789c <vPortFree>
				vPortFree( pxTCB );
 8008858:	4620      	mov	r0, r4
	}
 800885a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
				vPortFree( pxTCB );
 800885e:	f7ff b81d 	b.w	800789c <vPortFree>
			else if( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_ONLY )
 8008862:	2b01      	cmp	r3, #1
 8008864:	d0f9      	beq.n	800885a <prvDeleteTCB+0x12>
				configASSERT( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_AND_TCB	);
 8008866:	2b02      	cmp	r3, #2
 8008868:	d008      	beq.n	800887c <prvDeleteTCB+0x34>
 800886a:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800886e:	f383 8811 	msr	BASEPRI, r3
 8008872:	f3bf 8f6f 	isb	sy
 8008876:	f3bf 8f4f 	dsb	sy
 800887a:	e7fe      	b.n	800887a <prvDeleteTCB+0x32>
	}
 800887c:	bd10      	pop	{r4, pc}
	...

08008880 <prvIdleTask>:
{
 8008880:	b580      	push	{r7, lr}
		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
 8008882:	4c13      	ldr	r4, [pc, #76]	@ (80088d0 <prvIdleTask+0x50>)
				pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xTasksWaitingTermination ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8008884:	4f13      	ldr	r7, [pc, #76]	@ (80088d4 <prvIdleTask+0x54>)
				--uxCurrentNumberOfTasks;
 8008886:	4d14      	ldr	r5, [pc, #80]	@ (80088d8 <prvIdleTask+0x58>)
		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
 8008888:	6823      	ldr	r3, [r4, #0]
 800888a:	b973      	cbnz	r3, 80088aa <prvIdleTask+0x2a>
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ tskIDLE_PRIORITY ] ) ) > ( UBaseType_t ) 1 )
 800888c:	4b13      	ldr	r3, [pc, #76]	@ (80088dc <prvIdleTask+0x5c>)
 800888e:	681b      	ldr	r3, [r3, #0]
 8008890:	2b01      	cmp	r3, #1
 8008892:	d9f8      	bls.n	8008886 <prvIdleTask+0x6>
				taskYIELD();
 8008894:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 8008898:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 800889c:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 80088a0:	f3bf 8f4f 	dsb	sy
 80088a4:	f3bf 8f6f 	isb	sy
 80088a8:	e7ed      	b.n	8008886 <prvIdleTask+0x6>
			taskENTER_CRITICAL();
 80088aa:	f7ff f8db 	bl	8007a64 <vPortEnterCritical>
				pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xTasksWaitingTermination ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 80088ae:	68fb      	ldr	r3, [r7, #12]
 80088b0:	68de      	ldr	r6, [r3, #12]
				( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 80088b2:	1d30      	adds	r0, r6, #4
 80088b4:	f7ff f860 	bl	8007978 <uxListRemove>
				--uxCurrentNumberOfTasks;
 80088b8:	682b      	ldr	r3, [r5, #0]
 80088ba:	3b01      	subs	r3, #1
 80088bc:	602b      	str	r3, [r5, #0]
				--uxDeletedTasksWaitingCleanUp;
 80088be:	6823      	ldr	r3, [r4, #0]
 80088c0:	3b01      	subs	r3, #1
 80088c2:	6023      	str	r3, [r4, #0]
			taskEXIT_CRITICAL();
 80088c4:	f7ff f8ee 	bl	8007aa4 <vPortExitCritical>
			prvDeleteTCB( pxTCB );
 80088c8:	4630      	mov	r0, r6
 80088ca:	f7ff ffbd 	bl	8008848 <prvDeleteTCB>
 80088ce:	e7db      	b.n	8008888 <prvIdleTask+0x8>
 80088d0:	20013930 	.word	0x20013930
 80088d4:	20013934 	.word	0x20013934
 80088d8:	20013918 	.word	0x20013918
 80088dc:	2001398c 	.word	0x2001398c

080088e0 <prvInitialiseNewTask.constprop.0>:
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 80088e0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80088e4:	e9dd 9409 	ldrd	r9, r4, [sp, #36]	@ 0x24
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 80088e8:	0096      	lsls	r6, r2, #2
 80088ea:	4632      	mov	r2, r6
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 80088ec:	4607      	mov	r7, r0
 80088ee:	460d      	mov	r5, r1
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 80088f0:	6b20      	ldr	r0, [r4, #48]	@ 0x30
 80088f2:	21a5      	movs	r1, #165	@ 0xa5
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 80088f4:	4698      	mov	r8, r3
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 80088f6:	f01a f9e2 	bl	8022cbe <memset>
		pxTopOfStack = &( pxNewTCB->pxStack[ ulStackDepth - ( uint32_t ) 1 ] );
 80088fa:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 80088fc:	3e04      	subs	r6, #4
 80088fe:	441e      	add	r6, r3
		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTER_SIZE_TYPE ) portBYTE_ALIGNMENT_MASK ) ) ); /*lint !e923 !e9033 !e9078 MISRA exception.  Avoiding casts between pointers and integers is not practical.  Size differences accounted for using portPOINTER_SIZE_TYPE type.  Checked by assert(). */
 8008900:	f026 0607 	bic.w	r6, r6, #7
	if( pcName != NULL )
 8008904:	b3b5      	cbz	r5, 8008974 <prvInitialiseNewTask.constprop.0+0x94>
 8008906:	1e6b      	subs	r3, r5, #1
 8008908:	f104 0233 	add.w	r2, r4, #51	@ 0x33
 800890c:	350f      	adds	r5, #15
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800890e:	f813 1f01 	ldrb.w	r1, [r3, #1]!
 8008912:	f802 1f01 	strb.w	r1, [r2, #1]!
			if( pcName[ x ] == ( char ) 0x00 )
 8008916:	b109      	cbz	r1, 800891c <prvInitialiseNewTask.constprop.0+0x3c>
		for( x = ( UBaseType_t ) 0; x < ( UBaseType_t ) configMAX_TASK_NAME_LEN; x++ )
 8008918:	42ab      	cmp	r3, r5
 800891a:	d1f8      	bne.n	800890e <prvInitialiseNewTask.constprop.0+0x2e>
		pxNewTCB->pcTaskName[ configMAX_TASK_NAME_LEN - 1 ] = '\0';
 800891c:	2300      	movs	r3, #0
 800891e:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
	if( uxPriority >= ( UBaseType_t ) configMAX_PRIORITIES )
 8008922:	9d08      	ldr	r5, [sp, #32]
 8008924:	2d37      	cmp	r5, #55	@ 0x37
 8008926:	bf28      	it	cs
 8008928:	2537      	movcs	r5, #55	@ 0x37
		pxNewTCB->uxMutexesHeld = 0;
 800892a:	f04f 0a00 	mov.w	sl, #0
	pxNewTCB->uxPriority = uxPriority;
 800892e:	62e5      	str	r5, [r4, #44]	@ 0x2c
		pxNewTCB->uxBasePriority = uxPriority;
 8008930:	64e5      	str	r5, [r4, #76]	@ 0x4c
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
 8008932:	1d20      	adds	r0, r4, #4
		pxNewTCB->uxMutexesHeld = 0;
 8008934:	f8c4 a050 	str.w	sl, [r4, #80]	@ 0x50
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
 8008938:	f7fe fff9 	bl	800792e <vListInitialiseItem>
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800893c:	f1c5 0538 	rsb	r5, r5, #56	@ 0x38
	vListInitialiseItem( &( pxNewTCB->xEventListItem ) );
 8008940:	f104 0018 	add.w	r0, r4, #24
 8008944:	f7fe fff3 	bl	800792e <vListInitialiseItem>
		pxNewTCB->ulNotifiedValue = 0;
 8008948:	f8c4 a058 	str.w	sl, [r4, #88]	@ 0x58
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xStateListItem ), pxNewTCB );
 800894c:	6124      	str	r4, [r4, #16]
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800894e:	61a5      	str	r5, [r4, #24]
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xEventListItem ), pxNewTCB );
 8008950:	6264      	str	r4, [r4, #36]	@ 0x24
		pxNewTCB->pxTaskTag = NULL;
 8008952:	f8c4 a054 	str.w	sl, [r4, #84]	@ 0x54
		pxNewTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
 8008956:	f884 a05c 	strb.w	sl, [r4, #92]	@ 0x5c
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
 800895a:	4642      	mov	r2, r8
 800895c:	4639      	mov	r1, r7
 800895e:	4630      	mov	r0, r6
 8008960:	f7ff f858 	bl	8007a14 <pxPortInitialiseStack>
 8008964:	6020      	str	r0, [r4, #0]
	if( pxCreatedTask != NULL )
 8008966:	f1b9 0f00 	cmp.w	r9, #0
 800896a:	d001      	beq.n	8008970 <prvInitialiseNewTask.constprop.0+0x90>
		*pxCreatedTask = ( TaskHandle_t ) pxNewTCB;
 800896c:	f8c9 4000 	str.w	r4, [r9]
}
 8008970:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
		pxNewTCB->pcTaskName[ 0 ] = 0x00;
 8008974:	f884 5034 	strb.w	r5, [r4, #52]	@ 0x34
 8008978:	e7d3      	b.n	8008922 <prvInitialiseNewTask.constprop.0+0x42>

0800897a <xTaskCreateStatic>:
	{
 800897a:	b570      	push	{r4, r5, r6, lr}
 800897c:	b086      	sub	sp, #24
 800897e:	e9dd 540b 	ldrd	r5, r4, [sp, #44]	@ 0x2c
		configASSERT( puxStackBuffer != NULL );
 8008982:	b945      	cbnz	r5, 8008996 <xTaskCreateStatic+0x1c>
 8008984:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008988:	f383 8811 	msr	BASEPRI, r3
 800898c:	f3bf 8f6f 	isb	sy
 8008990:	f3bf 8f4f 	dsb	sy
 8008994:	e7fe      	b.n	8008994 <xTaskCreateStatic+0x1a>
		configASSERT( pxTaskBuffer != NULL );
 8008996:	b944      	cbnz	r4, 80089aa <xTaskCreateStatic+0x30>
 8008998:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800899c:	f383 8811 	msr	BASEPRI, r3
 80089a0:	f3bf 8f6f 	isb	sy
 80089a4:	f3bf 8f4f 	dsb	sy
 80089a8:	e7fe      	b.n	80089a8 <xTaskCreateStatic+0x2e>
			volatile size_t xSize = sizeof( StaticTask_t );
 80089aa:	2660      	movs	r6, #96	@ 0x60
 80089ac:	9605      	str	r6, [sp, #20]
			configASSERT( xSize == sizeof( TCB_t ) );
 80089ae:	9e05      	ldr	r6, [sp, #20]
 80089b0:	2e60      	cmp	r6, #96	@ 0x60
 80089b2:	d008      	beq.n	80089c6 <xTaskCreateStatic+0x4c>
 80089b4:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80089b8:	f383 8811 	msr	BASEPRI, r3
 80089bc:	f3bf 8f6f 	isb	sy
 80089c0:	f3bf 8f4f 	dsb	sy
 80089c4:	e7fe      	b.n	80089c4 <xTaskCreateStatic+0x4a>
			pxNewTCB->pxStack = ( StackType_t * ) puxStackBuffer;
 80089c6:	6325      	str	r5, [r4, #48]	@ 0x30
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
 80089c8:	2502      	movs	r5, #2
 80089ca:	f884 505d 	strb.w	r5, [r4, #93]	@ 0x5d
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 80089ce:	ad04      	add	r5, sp, #16
 80089d0:	9501      	str	r5, [sp, #4]
 80089d2:	9d0a      	ldr	r5, [sp, #40]	@ 0x28
 80089d4:	9402      	str	r4, [sp, #8]
 80089d6:	9500      	str	r5, [sp, #0]
			( void ) xSize; /* Prevent lint warning when configASSERT() is not used. */
 80089d8:	9e05      	ldr	r6, [sp, #20]
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 80089da:	f7ff ff81 	bl	80088e0 <prvInitialiseNewTask.constprop.0>
			prvAddNewTaskToReadyList( pxNewTCB );
 80089de:	4620      	mov	r0, r4
 80089e0:	f7ff fe68 	bl	80086b4 <prvAddNewTaskToReadyList>
	}
 80089e4:	9804      	ldr	r0, [sp, #16]
 80089e6:	b006      	add	sp, #24
 80089e8:	bd70      	pop	{r4, r5, r6, pc}

080089ea <xTaskCreate>:
	{
 80089ea:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80089ee:	4607      	mov	r7, r0
 80089f0:	b085      	sub	sp, #20
			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
 80089f2:	0090      	lsls	r0, r2, #2
	{
 80089f4:	4688      	mov	r8, r1
 80089f6:	4616      	mov	r6, r2
 80089f8:	4699      	mov	r9, r3
			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
 80089fa:	f7fe feb7 	bl	800776c <pvPortMalloc>
			if( pxStack != NULL )
 80089fe:	4605      	mov	r5, r0
 8008a00:	b920      	cbnz	r0, 8008a0c <xTaskCreate+0x22>
			xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
 8008a02:	f04f 30ff 	mov.w	r0, #4294967295
	}
 8008a06:	b005      	add	sp, #20
 8008a08:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
				pxNewTCB = ( TCB_t * ) pvPortMalloc( sizeof( TCB_t ) ); /*lint !e9087 !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack, and the first member of TCB_t is always a pointer to the task's stack. */
 8008a0c:	2060      	movs	r0, #96	@ 0x60
 8008a0e:	f7fe fead 	bl	800776c <pvPortMalloc>
				if( pxNewTCB != NULL )
 8008a12:	4604      	mov	r4, r0
 8008a14:	b198      	cbz	r0, 8008a3e <xTaskCreate+0x54>
				pxNewTCB->ucStaticallyAllocated = tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB;
 8008a16:	2300      	movs	r3, #0
 8008a18:	f880 305d 	strb.w	r3, [r0, #93]	@ 0x5d
			prvInitialiseNewTask( pxTaskCode, pcName, ( uint32_t ) usStackDepth, pvParameters, uxPriority, pxCreatedTask, pxNewTCB, NULL );
 8008a1c:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
					pxNewTCB->pxStack = pxStack;
 8008a1e:	6305      	str	r5, [r0, #48]	@ 0x30
			prvInitialiseNewTask( pxTaskCode, pcName, ( uint32_t ) usStackDepth, pvParameters, uxPriority, pxCreatedTask, pxNewTCB, NULL );
 8008a20:	9301      	str	r3, [sp, #4]
 8008a22:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8008a24:	9002      	str	r0, [sp, #8]
 8008a26:	9300      	str	r3, [sp, #0]
 8008a28:	4632      	mov	r2, r6
 8008a2a:	464b      	mov	r3, r9
 8008a2c:	4641      	mov	r1, r8
 8008a2e:	4638      	mov	r0, r7
 8008a30:	f7ff ff56 	bl	80088e0 <prvInitialiseNewTask.constprop.0>
			prvAddNewTaskToReadyList( pxNewTCB );
 8008a34:	4620      	mov	r0, r4
 8008a36:	f7ff fe3d 	bl	80086b4 <prvAddNewTaskToReadyList>
			xReturn = pdPASS;
 8008a3a:	2001      	movs	r0, #1
 8008a3c:	e7e3      	b.n	8008a06 <xTaskCreate+0x1c>
					vPortFree( pxStack );
 8008a3e:	4628      	mov	r0, r5
 8008a40:	f7fe ff2c 	bl	800789c <vPortFree>
		if( pxNewTCB != NULL )
 8008a44:	e7dd      	b.n	8008a02 <xTaskCreate+0x18>
	...

08008a48 <vTaskStartScheduler>:
{
 8008a48:	b510      	push	{r4, lr}
 8008a4a:	b088      	sub	sp, #32
		StaticTask_t *pxIdleTaskTCBBuffer = NULL;
 8008a4c:	2400      	movs	r4, #0
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
 8008a4e:	aa07      	add	r2, sp, #28
 8008a50:	a906      	add	r1, sp, #24
 8008a52:	a805      	add	r0, sp, #20
		StackType_t *pxIdleTaskStackBuffer = NULL;
 8008a54:	e9cd 4405 	strd	r4, r4, [sp, #20]
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
 8008a58:	f7fe fe4a 	bl	80076f0 <vApplicationGetIdleTaskMemory>
		xIdleTaskHandle = xTaskCreateStatic(	prvIdleTask,
 8008a5c:	9b05      	ldr	r3, [sp, #20]
 8008a5e:	9302      	str	r3, [sp, #8]
 8008a60:	9b06      	ldr	r3, [sp, #24]
 8008a62:	9a07      	ldr	r2, [sp, #28]
 8008a64:	4916      	ldr	r1, [pc, #88]	@ (8008ac0 <vTaskStartScheduler+0x78>)
 8008a66:	4817      	ldr	r0, [pc, #92]	@ (8008ac4 <vTaskStartScheduler+0x7c>)
 8008a68:	e9cd 4300 	strd	r4, r3, [sp]
 8008a6c:	4623      	mov	r3, r4
 8008a6e:	f7ff ff84 	bl	800897a <xTaskCreateStatic>
		if( xIdleTaskHandle != NULL )
 8008a72:	b318      	cbz	r0, 8008abc <vTaskStartScheduler+0x74>
			xReturn = xTimerCreateTimerTask();
 8008a74:	f000 fba6 	bl	80091c4 <xTimerCreateTimerTask>
	if( xReturn == pdPASS )
 8008a78:	2801      	cmp	r0, #1
 8008a7a:	d114      	bne.n	8008aa6 <vTaskStartScheduler+0x5e>
 8008a7c:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008a80:	f383 8811 	msr	BASEPRI, r3
 8008a84:	f3bf 8f6f 	isb	sy
 8008a88:	f3bf 8f4f 	dsb	sy
		xNextTaskUnblockTime = portMAX_DELAY;
 8008a8c:	4b0e      	ldr	r3, [pc, #56]	@ (8008ac8 <vTaskStartScheduler+0x80>)
 8008a8e:	f04f 32ff 	mov.w	r2, #4294967295
 8008a92:	601a      	str	r2, [r3, #0]
		xSchedulerRunning = pdTRUE;
 8008a94:	4b0d      	ldr	r3, [pc, #52]	@ (8008acc <vTaskStartScheduler+0x84>)
 8008a96:	6018      	str	r0, [r3, #0]
		xTickCount = ( TickType_t ) configINITIAL_TICK_COUNT;
 8008a98:	4b0d      	ldr	r3, [pc, #52]	@ (8008ad0 <vTaskStartScheduler+0x88>)
 8008a9a:	601c      	str	r4, [r3, #0]
}
 8008a9c:	b008      	add	sp, #32
 8008a9e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
		if( xPortStartScheduler() != pdFALSE )
 8008aa2:	f7ff b86f 	b.w	8007b84 <xPortStartScheduler>
		configASSERT( xReturn != errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY );
 8008aa6:	3001      	adds	r0, #1
 8008aa8:	d108      	bne.n	8008abc <vTaskStartScheduler+0x74>
 8008aaa:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008aae:	f383 8811 	msr	BASEPRI, r3
 8008ab2:	f3bf 8f6f 	isb	sy
 8008ab6:	f3bf 8f4f 	dsb	sy
 8008aba:	e7fe      	b.n	8008aba <vTaskStartScheduler+0x72>
}
 8008abc:	b008      	add	sp, #32
 8008abe:	bd10      	pop	{r4, pc}
 8008ac0:	08024397 	.word	0x08024397
 8008ac4:	08008881 	.word	0x08008881
 8008ac8:	200138f8 	.word	0x200138f8
 8008acc:	2001390c 	.word	0x2001390c
 8008ad0:	20013914 	.word	0x20013914

08008ad4 <vTaskSuspendAll>:
	++uxSchedulerSuspended;
 8008ad4:	4a02      	ldr	r2, [pc, #8]	@ (8008ae0 <vTaskSuspendAll+0xc>)
 8008ad6:	6813      	ldr	r3, [r2, #0]
 8008ad8:	3301      	adds	r3, #1
 8008ada:	6013      	str	r3, [r2, #0]
}
 8008adc:	4770      	bx	lr
 8008ade:	bf00      	nop
 8008ae0:	200138f4 	.word	0x200138f4

08008ae4 <xTaskGetTickCount>:
		xTicks = xTickCount;
 8008ae4:	4b01      	ldr	r3, [pc, #4]	@ (8008aec <xTaskGetTickCount+0x8>)
 8008ae6:	6818      	ldr	r0, [r3, #0]
}
 8008ae8:	4770      	bx	lr
 8008aea:	bf00      	nop
 8008aec:	20013914 	.word	0x20013914

08008af0 <xTaskIncrementTick>:
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 8008af0:	4b3f      	ldr	r3, [pc, #252]	@ (8008bf0 <xTaskIncrementTick+0x100>)
 8008af2:	681b      	ldr	r3, [r3, #0]
{
 8008af4:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 8008af8:	2b00      	cmp	r3, #0
 8008afa:	d172      	bne.n	8008be2 <xTaskIncrementTick+0xf2>
		const TickType_t xConstTickCount = xTickCount + ( TickType_t ) 1;
 8008afc:	4b3d      	ldr	r3, [pc, #244]	@ (8008bf4 <xTaskIncrementTick+0x104>)
 8008afe:	681c      	ldr	r4, [r3, #0]
 8008b00:	3401      	adds	r4, #1
		xTickCount = xConstTickCount;
 8008b02:	601c      	str	r4, [r3, #0]
		if( xConstTickCount == ( TickType_t ) 0U ) /*lint !e774 'if' does not always evaluate to false as it is looking for an overflow. */
 8008b04:	b9bc      	cbnz	r4, 8008b36 <xTaskIncrementTick+0x46>
			taskSWITCH_DELAYED_LISTS();
 8008b06:	4b3c      	ldr	r3, [pc, #240]	@ (8008bf8 <xTaskIncrementTick+0x108>)
 8008b08:	681a      	ldr	r2, [r3, #0]
 8008b0a:	6812      	ldr	r2, [r2, #0]
 8008b0c:	b142      	cbz	r2, 8008b20 <xTaskIncrementTick+0x30>
 8008b0e:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008b12:	f383 8811 	msr	BASEPRI, r3
 8008b16:	f3bf 8f6f 	isb	sy
 8008b1a:	f3bf 8f4f 	dsb	sy
 8008b1e:	e7fe      	b.n	8008b1e <xTaskIncrementTick+0x2e>
 8008b20:	4a36      	ldr	r2, [pc, #216]	@ (8008bfc <xTaskIncrementTick+0x10c>)
 8008b22:	6819      	ldr	r1, [r3, #0]
 8008b24:	6810      	ldr	r0, [r2, #0]
 8008b26:	6018      	str	r0, [r3, #0]
 8008b28:	6011      	str	r1, [r2, #0]
 8008b2a:	4a35      	ldr	r2, [pc, #212]	@ (8008c00 <xTaskIncrementTick+0x110>)
 8008b2c:	6813      	ldr	r3, [r2, #0]
 8008b2e:	3301      	adds	r3, #1
 8008b30:	6013      	str	r3, [r2, #0]
 8008b32:	f7ff fe77 	bl	8008824 <prvResetNextTaskUnblockTime>
		if( xConstTickCount >= xNextTaskUnblockTime )
 8008b36:	4d33      	ldr	r5, [pc, #204]	@ (8008c04 <xTaskIncrementTick+0x114>)
 8008b38:	4e33      	ldr	r6, [pc, #204]	@ (8008c08 <xTaskIncrementTick+0x118>)
 8008b3a:	682b      	ldr	r3, [r5, #0]
 8008b3c:	4f33      	ldr	r7, [pc, #204]	@ (8008c0c <xTaskIncrementTick+0x11c>)
 8008b3e:	429c      	cmp	r4, r3
BaseType_t xSwitchRequired = pdFALSE;
 8008b40:	f04f 0b00 	mov.w	fp, #0
		if( xConstTickCount >= xNextTaskUnblockTime )
 8008b44:	d212      	bcs.n	8008b6c <xTaskIncrementTick+0x7c>
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ pxCurrentTCB->uxPriority ] ) ) > ( UBaseType_t ) 1 )
 8008b46:	683a      	ldr	r2, [r7, #0]
 8008b48:	6ad2      	ldr	r2, [r2, #44]	@ 0x2c
 8008b4a:	2114      	movs	r1, #20
 8008b4c:	434a      	muls	r2, r1
 8008b4e:	58b2      	ldr	r2, [r6, r2]
				xSwitchRequired = pdTRUE;
 8008b50:	2a02      	cmp	r2, #2
			if( xYieldPending != pdFALSE )
 8008b52:	4a2f      	ldr	r2, [pc, #188]	@ (8008c10 <xTaskIncrementTick+0x120>)
 8008b54:	6812      	ldr	r2, [r2, #0]
				xSwitchRequired = pdTRUE;
 8008b56:	bf28      	it	cs
 8008b58:	f04f 0b01 	movcs.w	fp, #1
				xSwitchRequired = pdTRUE;
 8008b5c:	2a00      	cmp	r2, #0
 8008b5e:	bf18      	it	ne
 8008b60:	f04f 0b01 	movne.w	fp, #1
}
 8008b64:	4658      	mov	r0, fp
 8008b66:	b003      	add	sp, #12
 8008b68:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 8008b6c:	f8df 9088 	ldr.w	r9, [pc, #136]	@ 8008bf8 <xTaskIncrementTick+0x108>
					prvAddTaskToReadyList( pxTCB );
 8008b70:	f8df a0a4 	ldr.w	sl, [pc, #164]	@ 8008c18 <xTaskIncrementTick+0x128>
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 8008b74:	f8d9 2000 	ldr.w	r2, [r9]
 8008b78:	6812      	ldr	r2, [r2, #0]
 8008b7a:	b91a      	cbnz	r2, 8008b84 <xTaskIncrementTick+0x94>
					xNextTaskUnblockTime = portMAX_DELAY; /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8008b7c:	f04f 32ff 	mov.w	r2, #4294967295
 8008b80:	602a      	str	r2, [r5, #0]
					break;
 8008b82:	e7e0      	b.n	8008b46 <xTaskIncrementTick+0x56>
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8008b84:	f8d9 2000 	ldr.w	r2, [r9]
 8008b88:	68d2      	ldr	r2, [r2, #12]
 8008b8a:	f8d2 800c 	ldr.w	r8, [r2, #12]
					xItemValue = listGET_LIST_ITEM_VALUE( &( pxTCB->xStateListItem ) );
 8008b8e:	f8d8 1004 	ldr.w	r1, [r8, #4]
					if( xConstTickCount < xItemValue )
 8008b92:	428c      	cmp	r4, r1
 8008b94:	d201      	bcs.n	8008b9a <xTaskIncrementTick+0xaa>
						xNextTaskUnblockTime = xItemValue;
 8008b96:	6029      	str	r1, [r5, #0]
						break; /*lint !e9011 Code structure here is deedmed easier to understand with multiple breaks. */
 8008b98:	e7d5      	b.n	8008b46 <xTaskIncrementTick+0x56>
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 8008b9a:	f108 0304 	add.w	r3, r8, #4
 8008b9e:	4618      	mov	r0, r3
 8008ba0:	9301      	str	r3, [sp, #4]
 8008ba2:	f7fe fee9 	bl	8007978 <uxListRemove>
					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
 8008ba6:	f8d8 1028 	ldr.w	r1, [r8, #40]	@ 0x28
 8008baa:	b119      	cbz	r1, 8008bb4 <xTaskIncrementTick+0xc4>
						( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 8008bac:	f108 0018 	add.w	r0, r8, #24
 8008bb0:	f7fe fee2 	bl	8007978 <uxListRemove>
					prvAddTaskToReadyList( pxTCB );
 8008bb4:	f8d8 002c 	ldr.w	r0, [r8, #44]	@ 0x2c
 8008bb8:	f8da 1000 	ldr.w	r1, [sl]
 8008bbc:	2314      	movs	r3, #20
 8008bbe:	4288      	cmp	r0, r1
 8008bc0:	bf88      	it	hi
 8008bc2:	f8ca 0000 	strhi.w	r0, [sl]
 8008bc6:	9901      	ldr	r1, [sp, #4]
 8008bc8:	fb03 6000 	mla	r0, r3, r0, r6
 8008bcc:	f7fe feb2 	bl	8007934 <vListInsertEnd>
						if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 8008bd0:	6838      	ldr	r0, [r7, #0]
 8008bd2:	f8d8 102c 	ldr.w	r1, [r8, #44]	@ 0x2c
 8008bd6:	6ac2      	ldr	r2, [r0, #44]	@ 0x2c
							xSwitchRequired = pdTRUE;
 8008bd8:	4291      	cmp	r1, r2
 8008bda:	bf28      	it	cs
 8008bdc:	f04f 0b01 	movcs.w	fp, #1
 8008be0:	e7c8      	b.n	8008b74 <xTaskIncrementTick+0x84>
		++xPendedTicks;
 8008be2:	4a0c      	ldr	r2, [pc, #48]	@ (8008c14 <xTaskIncrementTick+0x124>)
 8008be4:	6813      	ldr	r3, [r2, #0]
 8008be6:	3301      	adds	r3, #1
 8008be8:	6013      	str	r3, [r2, #0]
BaseType_t xSwitchRequired = pdFALSE;
 8008bea:	f04f 0b00 	mov.w	fp, #0
 8008bee:	e7b9      	b.n	8008b64 <xTaskIncrementTick+0x74>
 8008bf0:	200138f4 	.word	0x200138f4
 8008bf4:	20013914 	.word	0x20013914
 8008bf8:	20013960 	.word	0x20013960
 8008bfc:	2001395c 	.word	0x2001395c
 8008c00:	20013900 	.word	0x20013900
 8008c04:	200138f8 	.word	0x200138f8
 8008c08:	2001398c 	.word	0x2001398c
 8008c0c:	20013dec 	.word	0x20013dec
 8008c10:	20013904 	.word	0x20013904
 8008c14:	20013908 	.word	0x20013908
 8008c18:	20013910 	.word	0x20013910

08008c1c <xTaskResumeAll>:
{
 8008c1c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
	configASSERT( uxSchedulerSuspended );
 8008c20:	4c30      	ldr	r4, [pc, #192]	@ (8008ce4 <xTaskResumeAll+0xc8>)
 8008c22:	6823      	ldr	r3, [r4, #0]
 8008c24:	b943      	cbnz	r3, 8008c38 <xTaskResumeAll+0x1c>
 8008c26:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008c2a:	f383 8811 	msr	BASEPRI, r3
 8008c2e:	f3bf 8f6f 	isb	sy
 8008c32:	f3bf 8f4f 	dsb	sy
 8008c36:	e7fe      	b.n	8008c36 <xTaskResumeAll+0x1a>
	taskENTER_CRITICAL();
 8008c38:	f7fe ff14 	bl	8007a64 <vPortEnterCritical>
		--uxSchedulerSuspended;
 8008c3c:	6823      	ldr	r3, [r4, #0]
 8008c3e:	3b01      	subs	r3, #1
 8008c40:	6023      	str	r3, [r4, #0]
		if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 8008c42:	6824      	ldr	r4, [r4, #0]
 8008c44:	b12c      	cbz	r4, 8008c52 <xTaskResumeAll+0x36>
BaseType_t xAlreadyYielded = pdFALSE;
 8008c46:	2400      	movs	r4, #0
	taskEXIT_CRITICAL();
 8008c48:	f7fe ff2c 	bl	8007aa4 <vPortExitCritical>
}
 8008c4c:	4620      	mov	r0, r4
 8008c4e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
			if( uxCurrentNumberOfTasks > ( UBaseType_t ) 0U )
 8008c52:	4b25      	ldr	r3, [pc, #148]	@ (8008ce8 <xTaskResumeAll+0xcc>)
 8008c54:	681b      	ldr	r3, [r3, #0]
 8008c56:	2b00      	cmp	r3, #0
 8008c58:	d0f5      	beq.n	8008c46 <xTaskResumeAll+0x2a>
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
 8008c5a:	4d24      	ldr	r5, [pc, #144]	@ (8008cec <xTaskResumeAll+0xd0>)
					prvAddTaskToReadyList( pxTCB );
 8008c5c:	4e24      	ldr	r6, [pc, #144]	@ (8008cf0 <xTaskResumeAll+0xd4>)
 8008c5e:	f8df 80a0 	ldr.w	r8, [pc, #160]	@ 8008d00 <xTaskResumeAll+0xe4>
 8008c62:	e01d      	b.n	8008ca0 <xTaskResumeAll+0x84>
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xPendingReadyList ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8008c64:	68eb      	ldr	r3, [r5, #12]
 8008c66:	68dc      	ldr	r4, [r3, #12]
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 8008c68:	1d27      	adds	r7, r4, #4
					( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 8008c6a:	f104 0018 	add.w	r0, r4, #24
 8008c6e:	f7fe fe83 	bl	8007978 <uxListRemove>
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 8008c72:	4638      	mov	r0, r7
 8008c74:	f7fe fe80 	bl	8007978 <uxListRemove>
					prvAddTaskToReadyList( pxTCB );
 8008c78:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 8008c7a:	6832      	ldr	r2, [r6, #0]
 8008c7c:	2014      	movs	r0, #20
 8008c7e:	4293      	cmp	r3, r2
 8008c80:	fb00 8003 	mla	r0, r0, r3, r8
 8008c84:	4639      	mov	r1, r7
 8008c86:	bf88      	it	hi
 8008c88:	6033      	strhi	r3, [r6, #0]
 8008c8a:	f7fe fe53 	bl	8007934 <vListInsertEnd>
					if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 8008c8e:	4b19      	ldr	r3, [pc, #100]	@ (8008cf4 <xTaskResumeAll+0xd8>)
 8008c90:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
 8008c92:	681b      	ldr	r3, [r3, #0]
 8008c94:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8008c96:	429a      	cmp	r2, r3
 8008c98:	d302      	bcc.n	8008ca0 <xTaskResumeAll+0x84>
						xYieldPending = pdTRUE;
 8008c9a:	4b17      	ldr	r3, [pc, #92]	@ (8008cf8 <xTaskResumeAll+0xdc>)
 8008c9c:	2201      	movs	r2, #1
 8008c9e:	601a      	str	r2, [r3, #0]
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
 8008ca0:	682b      	ldr	r3, [r5, #0]
 8008ca2:	2b00      	cmp	r3, #0
 8008ca4:	d1de      	bne.n	8008c64 <xTaskResumeAll+0x48>
				if( pxTCB != NULL )
 8008ca6:	b10c      	cbz	r4, 8008cac <xTaskResumeAll+0x90>
					prvResetNextTaskUnblockTime();
 8008ca8:	f7ff fdbc 	bl	8008824 <prvResetNextTaskUnblockTime>
					TickType_t xPendedCounts = xPendedTicks; /* Non-volatile copy. */
 8008cac:	4d13      	ldr	r5, [pc, #76]	@ (8008cfc <xTaskResumeAll+0xe0>)
 8008cae:	682c      	ldr	r4, [r5, #0]
					if( xPendedCounts > ( TickType_t ) 0U )
 8008cb0:	b144      	cbz	r4, 8008cc4 <xTaskResumeAll+0xa8>
								xYieldPending = pdTRUE;
 8008cb2:	4e11      	ldr	r6, [pc, #68]	@ (8008cf8 <xTaskResumeAll+0xdc>)
 8008cb4:	2701      	movs	r7, #1
							if( xTaskIncrementTick() != pdFALSE )
 8008cb6:	f7ff ff1b 	bl	8008af0 <xTaskIncrementTick>
 8008cba:	b100      	cbz	r0, 8008cbe <xTaskResumeAll+0xa2>
								xYieldPending = pdTRUE;
 8008cbc:	6037      	str	r7, [r6, #0]
						} while( xPendedCounts > ( TickType_t ) 0U );
 8008cbe:	3c01      	subs	r4, #1
 8008cc0:	d1f9      	bne.n	8008cb6 <xTaskResumeAll+0x9a>
						xPendedTicks = 0;
 8008cc2:	602c      	str	r4, [r5, #0]
				if( xYieldPending != pdFALSE )
 8008cc4:	4b0c      	ldr	r3, [pc, #48]	@ (8008cf8 <xTaskResumeAll+0xdc>)
 8008cc6:	681b      	ldr	r3, [r3, #0]
 8008cc8:	2b00      	cmp	r3, #0
 8008cca:	d0bc      	beq.n	8008c46 <xTaskResumeAll+0x2a>
					taskYIELD_IF_USING_PREEMPTION();
 8008ccc:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 8008cd0:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8008cd4:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 8008cd8:	f3bf 8f4f 	dsb	sy
 8008cdc:	f3bf 8f6f 	isb	sy
						xAlreadyYielded = pdTRUE;
 8008ce0:	2401      	movs	r4, #1
 8008ce2:	e7b1      	b.n	8008c48 <xTaskResumeAll+0x2c>
 8008ce4:	200138f4 	.word	0x200138f4
 8008ce8:	20013918 	.word	0x20013918
 8008cec:	20013948 	.word	0x20013948
 8008cf0:	20013910 	.word	0x20013910
 8008cf4:	20013dec 	.word	0x20013dec
 8008cf8:	20013904 	.word	0x20013904
 8008cfc:	20013908 	.word	0x20013908
 8008d00:	2001398c 	.word	0x2001398c

08008d04 <vTaskDelay>:
	{
 8008d04:	b508      	push	{r3, lr}
		if( xTicksToDelay > ( TickType_t ) 0U )
 8008d06:	b950      	cbnz	r0, 8008d1e <vTaskDelay+0x1a>
			portYIELD_WITHIN_API();
 8008d08:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 8008d0c:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8008d10:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 8008d14:	f3bf 8f4f 	dsb	sy
 8008d18:	f3bf 8f6f 	isb	sy
	}
 8008d1c:	bd08      	pop	{r3, pc}
			configASSERT( uxSchedulerSuspended == 0 );
 8008d1e:	4b0a      	ldr	r3, [pc, #40]	@ (8008d48 <vTaskDelay+0x44>)
 8008d20:	6819      	ldr	r1, [r3, #0]
 8008d22:	b141      	cbz	r1, 8008d36 <vTaskDelay+0x32>
 8008d24:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008d28:	f383 8811 	msr	BASEPRI, r3
 8008d2c:	f3bf 8f6f 	isb	sy
 8008d30:	f3bf 8f4f 	dsb	sy
 8008d34:	e7fe      	b.n	8008d34 <vTaskDelay+0x30>
			vTaskSuspendAll();
 8008d36:	f7ff fecd 	bl	8008ad4 <vTaskSuspendAll>
				prvAddCurrentTaskToDelayedList( xTicksToDelay, pdFALSE );
 8008d3a:	f7ff fd3b 	bl	80087b4 <prvAddCurrentTaskToDelayedList>
			xAlreadyYielded = xTaskResumeAll();
 8008d3e:	f7ff ff6d 	bl	8008c1c <xTaskResumeAll>
		if( xAlreadyYielded == pdFALSE )
 8008d42:	2800      	cmp	r0, #0
 8008d44:	d0e0      	beq.n	8008d08 <vTaskDelay+0x4>
 8008d46:	e7e9      	b.n	8008d1c <vTaskDelay+0x18>
 8008d48:	200138f4 	.word	0x200138f4

08008d4c <vTaskSwitchContext>:
	if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
 8008d4c:	4b17      	ldr	r3, [pc, #92]	@ (8008dac <vTaskSwitchContext+0x60>)
 8008d4e:	681a      	ldr	r2, [r3, #0]
 8008d50:	4b17      	ldr	r3, [pc, #92]	@ (8008db0 <vTaskSwitchContext+0x64>)
{
 8008d52:	b570      	push	{r4, r5, r6, lr}
	if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
 8008d54:	b112      	cbz	r2, 8008d5c <vTaskSwitchContext+0x10>
		xYieldPending = pdTRUE;
 8008d56:	2201      	movs	r2, #1
 8008d58:	601a      	str	r2, [r3, #0]
}
 8008d5a:	bd70      	pop	{r4, r5, r6, pc}
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8008d5c:	4d15      	ldr	r5, [pc, #84]	@ (8008db4 <vTaskSwitchContext+0x68>)
		xYieldPending = pdFALSE;
 8008d5e:	601a      	str	r2, [r3, #0]
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8008d60:	682a      	ldr	r2, [r5, #0]
 8008d62:	4915      	ldr	r1, [pc, #84]	@ (8008db8 <vTaskSwitchContext+0x6c>)
 8008d64:	2614      	movs	r6, #20
 8008d66:	fb06 f302 	mul.w	r3, r6, r2
 8008d6a:	18c8      	adds	r0, r1, r3
 8008d6c:	58cc      	ldr	r4, [r1, r3]
 8008d6e:	b18c      	cbz	r4, 8008d94 <vTaskSwitchContext+0x48>
 8008d70:	6844      	ldr	r4, [r0, #4]
 8008d72:	3308      	adds	r3, #8
 8008d74:	6864      	ldr	r4, [r4, #4]
 8008d76:	6044      	str	r4, [r0, #4]
 8008d78:	440b      	add	r3, r1
 8008d7a:	429c      	cmp	r4, r3
 8008d7c:	bf04      	itt	eq
 8008d7e:	6863      	ldreq	r3, [r4, #4]
 8008d80:	6043      	streq	r3, [r0, #4]
 8008d82:	2314      	movs	r3, #20
 8008d84:	fb03 1102 	mla	r1, r3, r2, r1
 8008d88:	684b      	ldr	r3, [r1, #4]
 8008d8a:	68d9      	ldr	r1, [r3, #12]
 8008d8c:	4b0b      	ldr	r3, [pc, #44]	@ (8008dbc <vTaskSwitchContext+0x70>)
 8008d8e:	6019      	str	r1, [r3, #0]
 8008d90:	602a      	str	r2, [r5, #0]
}
 8008d92:	e7e2      	b.n	8008d5a <vTaskSwitchContext+0xe>
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8008d94:	b942      	cbnz	r2, 8008da8 <vTaskSwitchContext+0x5c>
 8008d96:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008d9a:	f383 8811 	msr	BASEPRI, r3
 8008d9e:	f3bf 8f6f 	isb	sy
 8008da2:	f3bf 8f4f 	dsb	sy
 8008da6:	e7fe      	b.n	8008da6 <vTaskSwitchContext+0x5a>
 8008da8:	3a01      	subs	r2, #1
 8008daa:	e7dc      	b.n	8008d66 <vTaskSwitchContext+0x1a>
 8008dac:	200138f4 	.word	0x200138f4
 8008db0:	20013904 	.word	0x20013904
 8008db4:	20013910 	.word	0x20013910
 8008db8:	2001398c 	.word	0x2001398c
 8008dbc:	20013dec 	.word	0x20013dec

08008dc0 <vTaskPlaceOnEventList>:
{
 8008dc0:	b510      	push	{r4, lr}
 8008dc2:	460c      	mov	r4, r1
	configASSERT( pxEventList );
 8008dc4:	b940      	cbnz	r0, 8008dd8 <vTaskPlaceOnEventList+0x18>
 8008dc6:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008dca:	f383 8811 	msr	BASEPRI, r3
 8008dce:	f3bf 8f6f 	isb	sy
 8008dd2:	f3bf 8f4f 	dsb	sy
 8008dd6:	e7fe      	b.n	8008dd6 <vTaskPlaceOnEventList+0x16>
	vListInsert( pxEventList, &( pxCurrentTCB->xEventListItem ) );
 8008dd8:	4b05      	ldr	r3, [pc, #20]	@ (8008df0 <vTaskPlaceOnEventList+0x30>)
 8008dda:	6819      	ldr	r1, [r3, #0]
 8008ddc:	3118      	adds	r1, #24
 8008dde:	f7fe fdb4 	bl	800794a <vListInsert>
	prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
 8008de2:	4620      	mov	r0, r4
 8008de4:	2101      	movs	r1, #1
}
 8008de6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
 8008dea:	f7ff bce3 	b.w	80087b4 <prvAddCurrentTaskToDelayedList>
 8008dee:	bf00      	nop
 8008df0:	20013dec 	.word	0x20013dec

08008df4 <vTaskPlaceOnEventListRestricted>:
	{
 8008df4:	b538      	push	{r3, r4, r5, lr}
 8008df6:	460d      	mov	r5, r1
 8008df8:	4614      	mov	r4, r2
		configASSERT( pxEventList );
 8008dfa:	b940      	cbnz	r0, 8008e0e <vTaskPlaceOnEventListRestricted+0x1a>
 8008dfc:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008e00:	f383 8811 	msr	BASEPRI, r3
 8008e04:	f3bf 8f6f 	isb	sy
 8008e08:	f3bf 8f4f 	dsb	sy
 8008e0c:	e7fe      	b.n	8008e0c <vTaskPlaceOnEventListRestricted+0x18>
		vListInsertEnd( pxEventList, &( pxCurrentTCB->xEventListItem ) );
 8008e0e:	4b07      	ldr	r3, [pc, #28]	@ (8008e2c <vTaskPlaceOnEventListRestricted+0x38>)
 8008e10:	6819      	ldr	r1, [r3, #0]
 8008e12:	3118      	adds	r1, #24
 8008e14:	f7fe fd8e 	bl	8007934 <vListInsertEnd>
			xTicksToWait = portMAX_DELAY;
 8008e18:	2c00      	cmp	r4, #0
		prvAddCurrentTaskToDelayedList( xTicksToWait, xWaitIndefinitely );
 8008e1a:	4621      	mov	r1, r4
 8008e1c:	bf0c      	ite	eq
 8008e1e:	4628      	moveq	r0, r5
 8008e20:	f04f 30ff 	movne.w	r0, #4294967295
	}
 8008e24:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		prvAddCurrentTaskToDelayedList( xTicksToWait, xWaitIndefinitely );
 8008e28:	f7ff bcc4 	b.w	80087b4 <prvAddCurrentTaskToDelayedList>
 8008e2c:	20013dec 	.word	0x20013dec

08008e30 <xTaskRemoveFromEventList>:
{
 8008e30:	b538      	push	{r3, r4, r5, lr}
	pxUnblockedTCB = listGET_OWNER_OF_HEAD_ENTRY( pxEventList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8008e32:	68c3      	ldr	r3, [r0, #12]
 8008e34:	68dc      	ldr	r4, [r3, #12]
	configASSERT( pxUnblockedTCB );
 8008e36:	b944      	cbnz	r4, 8008e4a <xTaskRemoveFromEventList+0x1a>
 8008e38:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008e3c:	f383 8811 	msr	BASEPRI, r3
 8008e40:	f3bf 8f6f 	isb	sy
 8008e44:	f3bf 8f4f 	dsb	sy
 8008e48:	e7fe      	b.n	8008e48 <xTaskRemoveFromEventList+0x18>
	( void ) uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
 8008e4a:	f104 0518 	add.w	r5, r4, #24
 8008e4e:	4628      	mov	r0, r5
 8008e50:	f7fe fd92 	bl	8007978 <uxListRemove>
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 8008e54:	4b10      	ldr	r3, [pc, #64]	@ (8008e98 <xTaskRemoveFromEventList+0x68>)
 8008e56:	681b      	ldr	r3, [r3, #0]
 8008e58:	b9db      	cbnz	r3, 8008e92 <xTaskRemoveFromEventList+0x62>
		( void ) uxListRemove( &( pxUnblockedTCB->xStateListItem ) );
 8008e5a:	1d25      	adds	r5, r4, #4
 8008e5c:	4628      	mov	r0, r5
 8008e5e:	f7fe fd8b 	bl	8007978 <uxListRemove>
		prvAddTaskToReadyList( pxUnblockedTCB );
 8008e62:	4a0e      	ldr	r2, [pc, #56]	@ (8008e9c <xTaskRemoveFromEventList+0x6c>)
 8008e64:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 8008e66:	6811      	ldr	r1, [r2, #0]
 8008e68:	428b      	cmp	r3, r1
 8008e6a:	bf88      	it	hi
 8008e6c:	6013      	strhi	r3, [r2, #0]
 8008e6e:	4a0c      	ldr	r2, [pc, #48]	@ (8008ea0 <xTaskRemoveFromEventList+0x70>)
 8008e70:	2014      	movs	r0, #20
 8008e72:	4629      	mov	r1, r5
 8008e74:	fb00 2003 	mla	r0, r0, r3, r2
		vListInsertEnd( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
 8008e78:	f7fe fd5c 	bl	8007934 <vListInsertEnd>
	if( pxUnblockedTCB->uxPriority > pxCurrentTCB->uxPriority )
 8008e7c:	4b09      	ldr	r3, [pc, #36]	@ (8008ea4 <xTaskRemoveFromEventList+0x74>)
 8008e7e:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
 8008e80:	681b      	ldr	r3, [r3, #0]
 8008e82:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8008e84:	429a      	cmp	r2, r3
		xYieldPending = pdTRUE;
 8008e86:	bf83      	ittte	hi
 8008e88:	4b07      	ldrhi	r3, [pc, #28]	@ (8008ea8 <xTaskRemoveFromEventList+0x78>)
 8008e8a:	2001      	movhi	r0, #1
 8008e8c:	6018      	strhi	r0, [r3, #0]
		xReturn = pdFALSE;
 8008e8e:	2000      	movls	r0, #0
}
 8008e90:	bd38      	pop	{r3, r4, r5, pc}
		vListInsertEnd( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
 8008e92:	4806      	ldr	r0, [pc, #24]	@ (8008eac <xTaskRemoveFromEventList+0x7c>)
 8008e94:	4629      	mov	r1, r5
 8008e96:	e7ef      	b.n	8008e78 <xTaskRemoveFromEventList+0x48>
 8008e98:	200138f4 	.word	0x200138f4
 8008e9c:	20013910 	.word	0x20013910
 8008ea0:	2001398c 	.word	0x2001398c
 8008ea4:	20013dec 	.word	0x20013dec
 8008ea8:	20013904 	.word	0x20013904
 8008eac:	20013948 	.word	0x20013948

08008eb0 <vTaskInternalSetTimeOutState>:
	pxTimeOut->xOverflowCount = xNumOfOverflows;
 8008eb0:	4b03      	ldr	r3, [pc, #12]	@ (8008ec0 <vTaskInternalSetTimeOutState+0x10>)
 8008eb2:	681b      	ldr	r3, [r3, #0]
 8008eb4:	6003      	str	r3, [r0, #0]
	pxTimeOut->xTimeOnEntering = xTickCount;
 8008eb6:	4b03      	ldr	r3, [pc, #12]	@ (8008ec4 <vTaskInternalSetTimeOutState+0x14>)
 8008eb8:	681b      	ldr	r3, [r3, #0]
 8008eba:	6043      	str	r3, [r0, #4]
}
 8008ebc:	4770      	bx	lr
 8008ebe:	bf00      	nop
 8008ec0:	20013900 	.word	0x20013900
 8008ec4:	20013914 	.word	0x20013914

08008ec8 <xTaskCheckForTimeOut>:
{
 8008ec8:	b570      	push	{r4, r5, r6, lr}
 8008eca:	460c      	mov	r4, r1
	configASSERT( pxTimeOut );
 8008ecc:	4605      	mov	r5, r0
 8008ece:	b940      	cbnz	r0, 8008ee2 <xTaskCheckForTimeOut+0x1a>
 8008ed0:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008ed4:	f383 8811 	msr	BASEPRI, r3
 8008ed8:	f3bf 8f6f 	isb	sy
 8008edc:	f3bf 8f4f 	dsb	sy
 8008ee0:	e7fe      	b.n	8008ee0 <xTaskCheckForTimeOut+0x18>
	configASSERT( pxTicksToWait );
 8008ee2:	b941      	cbnz	r1, 8008ef6 <xTaskCheckForTimeOut+0x2e>
 8008ee4:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008ee8:	f383 8811 	msr	BASEPRI, r3
 8008eec:	f3bf 8f6f 	isb	sy
 8008ef0:	f3bf 8f4f 	dsb	sy
 8008ef4:	e7fe      	b.n	8008ef4 <xTaskCheckForTimeOut+0x2c>
	taskENTER_CRITICAL();
 8008ef6:	f7fe fdb5 	bl	8007a64 <vPortEnterCritical>
		const TickType_t xConstTickCount = xTickCount;
 8008efa:	4b0f      	ldr	r3, [pc, #60]	@ (8008f38 <xTaskCheckForTimeOut+0x70>)
 8008efc:	6819      	ldr	r1, [r3, #0]
			if( *pxTicksToWait == portMAX_DELAY )
 8008efe:	6823      	ldr	r3, [r4, #0]
 8008f00:	1c5a      	adds	r2, r3, #1
 8008f02:	d010      	beq.n	8008f26 <xTaskCheckForTimeOut+0x5e>
		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEntering ) ) /*lint !e525 Indentation preferred as is to make code within pre-processor directives clearer. */
 8008f04:	480d      	ldr	r0, [pc, #52]	@ (8008f3c <xTaskCheckForTimeOut+0x74>)
 8008f06:	682e      	ldr	r6, [r5, #0]
 8008f08:	6800      	ldr	r0, [r0, #0]
		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
 8008f0a:	686a      	ldr	r2, [r5, #4]
		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEntering ) ) /*lint !e525 Indentation preferred as is to make code within pre-processor directives clearer. */
 8008f0c:	4286      	cmp	r6, r0
 8008f0e:	d001      	beq.n	8008f14 <xTaskCheckForTimeOut+0x4c>
 8008f10:	428a      	cmp	r2, r1
 8008f12:	d90f      	bls.n	8008f34 <xTaskCheckForTimeOut+0x6c>
		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
 8008f14:	1a88      	subs	r0, r1, r2
		else if( xElapsedTime < *pxTicksToWait ) /*lint !e961 Explicit casting is only redundant with some compilers, whereas others require it to prevent integer conversion errors. */
 8008f16:	4283      	cmp	r3, r0
 8008f18:	d90a      	bls.n	8008f30 <xTaskCheckForTimeOut+0x68>
			*pxTicksToWait -= xElapsedTime;
 8008f1a:	1a5b      	subs	r3, r3, r1
 8008f1c:	4413      	add	r3, r2
 8008f1e:	6023      	str	r3, [r4, #0]
			vTaskInternalSetTimeOutState( pxTimeOut );
 8008f20:	4628      	mov	r0, r5
 8008f22:	f7ff ffc5 	bl	8008eb0 <vTaskInternalSetTimeOutState>
				xReturn = pdFALSE;
 8008f26:	2400      	movs	r4, #0
	taskEXIT_CRITICAL();
 8008f28:	f7fe fdbc 	bl	8007aa4 <vPortExitCritical>
}
 8008f2c:	4620      	mov	r0, r4
 8008f2e:	bd70      	pop	{r4, r5, r6, pc}
			*pxTicksToWait = 0;
 8008f30:	2300      	movs	r3, #0
 8008f32:	6023      	str	r3, [r4, #0]
			xReturn = pdTRUE;
 8008f34:	2401      	movs	r4, #1
 8008f36:	e7f7      	b.n	8008f28 <xTaskCheckForTimeOut+0x60>
 8008f38:	20013914 	.word	0x20013914
 8008f3c:	20013900 	.word	0x20013900

08008f40 <vTaskMissedYield>:
	xYieldPending = pdTRUE;
 8008f40:	4b01      	ldr	r3, [pc, #4]	@ (8008f48 <vTaskMissedYield+0x8>)
 8008f42:	2201      	movs	r2, #1
 8008f44:	601a      	str	r2, [r3, #0]
}
 8008f46:	4770      	bx	lr
 8008f48:	20013904 	.word	0x20013904

08008f4c <xTaskGetSchedulerState>:
		if( xSchedulerRunning == pdFALSE )
 8008f4c:	4b05      	ldr	r3, [pc, #20]	@ (8008f64 <xTaskGetSchedulerState+0x18>)
 8008f4e:	681b      	ldr	r3, [r3, #0]
 8008f50:	b133      	cbz	r3, 8008f60 <xTaskGetSchedulerState+0x14>
			if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 8008f52:	4b05      	ldr	r3, [pc, #20]	@ (8008f68 <xTaskGetSchedulerState+0x1c>)
 8008f54:	6818      	ldr	r0, [r3, #0]
 8008f56:	fab0 f080 	clz	r0, r0
 8008f5a:	0940      	lsrs	r0, r0, #5
 8008f5c:	0040      	lsls	r0, r0, #1
 8008f5e:	4770      	bx	lr
			xReturn = taskSCHEDULER_NOT_STARTED;
 8008f60:	2001      	movs	r0, #1
	}
 8008f62:	4770      	bx	lr
 8008f64:	2001390c 	.word	0x2001390c
 8008f68:	200138f4 	.word	0x200138f4

08008f6c <xTaskPriorityInherit>:
	{
 8008f6c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
		if( pxMutexHolder != NULL )
 8008f6e:	4604      	mov	r4, r0
 8008f70:	b338      	cbz	r0, 8008fc2 <xTaskPriorityInherit+0x56>
			if( pxMutexHolderTCB->uxPriority < pxCurrentTCB->uxPriority )
 8008f72:	4d1a      	ldr	r5, [pc, #104]	@ (8008fdc <xTaskPriorityInherit+0x70>)
 8008f74:	6ac3      	ldr	r3, [r0, #44]	@ 0x2c
 8008f76:	682a      	ldr	r2, [r5, #0]
 8008f78:	6ad2      	ldr	r2, [r2, #44]	@ 0x2c
 8008f7a:	4293      	cmp	r3, r2
 8008f7c:	d226      	bcs.n	8008fcc <xTaskPriorityInherit+0x60>
				if( ( listGET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 8008f7e:	6982      	ldr	r2, [r0, #24]
				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxMutexHolderTCB->uxPriority ] ), &( pxMutexHolderTCB->xStateListItem ) ) != pdFALSE )
 8008f80:	4e17      	ldr	r6, [pc, #92]	@ (8008fe0 <xTaskPriorityInherit+0x74>)
				if( ( listGET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 8008f82:	2a00      	cmp	r2, #0
					listSET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxCurrentTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8008f84:	bfa1      	itttt	ge
 8008f86:	682a      	ldrge	r2, [r5, #0]
 8008f88:	6ad2      	ldrge	r2, [r2, #44]	@ 0x2c
 8008f8a:	f1c2 0238 	rsbge	r2, r2, #56	@ 0x38
 8008f8e:	6182      	strge	r2, [r0, #24]
				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxMutexHolderTCB->uxPriority ] ), &( pxMutexHolderTCB->xStateListItem ) ) != pdFALSE )
 8008f90:	2214      	movs	r2, #20
 8008f92:	fb02 6303 	mla	r3, r2, r3, r6
 8008f96:	6942      	ldr	r2, [r0, #20]
 8008f98:	429a      	cmp	r2, r3
 8008f9a:	d113      	bne.n	8008fc4 <xTaskPriorityInherit+0x58>
					if( uxListRemove( &( pxMutexHolderTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 8008f9c:	1d07      	adds	r7, r0, #4
 8008f9e:	4638      	mov	r0, r7
 8008fa0:	f7fe fcea 	bl	8007978 <uxListRemove>
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 8008fa4:	682b      	ldr	r3, [r5, #0]
					prvAddTaskToReadyList( pxMutexHolderTCB );
 8008fa6:	4a0f      	ldr	r2, [pc, #60]	@ (8008fe4 <xTaskPriorityInherit+0x78>)
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 8008fa8:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
					prvAddTaskToReadyList( pxMutexHolderTCB );
 8008faa:	6811      	ldr	r1, [r2, #0]
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 8008fac:	62e3      	str	r3, [r4, #44]	@ 0x2c
					prvAddTaskToReadyList( pxMutexHolderTCB );
 8008fae:	2014      	movs	r0, #20
 8008fb0:	428b      	cmp	r3, r1
 8008fb2:	fb00 6003 	mla	r0, r0, r3, r6
 8008fb6:	4639      	mov	r1, r7
 8008fb8:	bf88      	it	hi
 8008fba:	6013      	strhi	r3, [r2, #0]
 8008fbc:	f7fe fcba 	bl	8007934 <vListInsertEnd>
				xReturn = pdTRUE;
 8008fc0:	2001      	movs	r0, #1
	}
 8008fc2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 8008fc4:	682b      	ldr	r3, [r5, #0]
 8008fc6:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8008fc8:	62c3      	str	r3, [r0, #44]	@ 0x2c
 8008fca:	e7f9      	b.n	8008fc0 <xTaskPriorityInherit+0x54>
				if( pxMutexHolderTCB->uxBasePriority < pxCurrentTCB->uxPriority )
 8008fcc:	682b      	ldr	r3, [r5, #0]
 8008fce:	6cc0      	ldr	r0, [r0, #76]	@ 0x4c
 8008fd0:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8008fd2:	4298      	cmp	r0, r3
 8008fd4:	bf2c      	ite	cs
 8008fd6:	2000      	movcs	r0, #0
 8008fd8:	2001      	movcc	r0, #1
 8008fda:	e7f2      	b.n	8008fc2 <xTaskPriorityInherit+0x56>
 8008fdc:	20013dec 	.word	0x20013dec
 8008fe0:	2001398c 	.word	0x2001398c
 8008fe4:	20013910 	.word	0x20013910

08008fe8 <xTaskPriorityDisinherit>:
	{
 8008fe8:	b538      	push	{r3, r4, r5, lr}
		if( pxMutexHolder != NULL )
 8008fea:	b908      	cbnz	r0, 8008ff0 <xTaskPriorityDisinherit+0x8>
	BaseType_t xReturn = pdFALSE;
 8008fec:	2000      	movs	r0, #0
	}
 8008fee:	bd38      	pop	{r3, r4, r5, pc}
			configASSERT( pxTCB == pxCurrentTCB );
 8008ff0:	4b1b      	ldr	r3, [pc, #108]	@ (8009060 <xTaskPriorityDisinherit+0x78>)
 8008ff2:	681c      	ldr	r4, [r3, #0]
 8008ff4:	4284      	cmp	r4, r0
 8008ff6:	d008      	beq.n	800900a <xTaskPriorityDisinherit+0x22>
 8008ff8:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008ffc:	f383 8811 	msr	BASEPRI, r3
 8009000:	f3bf 8f6f 	isb	sy
 8009004:	f3bf 8f4f 	dsb	sy
 8009008:	e7fe      	b.n	8009008 <xTaskPriorityDisinherit+0x20>
			configASSERT( pxTCB->uxMutexesHeld );
 800900a:	6d23      	ldr	r3, [r4, #80]	@ 0x50
 800900c:	b943      	cbnz	r3, 8009020 <xTaskPriorityDisinherit+0x38>
 800900e:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8009012:	f383 8811 	msr	BASEPRI, r3
 8009016:	f3bf 8f6f 	isb	sy
 800901a:	f3bf 8f4f 	dsb	sy
 800901e:	e7fe      	b.n	800901e <xTaskPriorityDisinherit+0x36>
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 8009020:	6ae1      	ldr	r1, [r4, #44]	@ 0x2c
 8009022:	6ce2      	ldr	r2, [r4, #76]	@ 0x4c
			( pxTCB->uxMutexesHeld )--;
 8009024:	3b01      	subs	r3, #1
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 8009026:	4291      	cmp	r1, r2
			( pxTCB->uxMutexesHeld )--;
 8009028:	6523      	str	r3, [r4, #80]	@ 0x50
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 800902a:	d0df      	beq.n	8008fec <xTaskPriorityDisinherit+0x4>
				if( pxTCB->uxMutexesHeld == ( UBaseType_t ) 0 )
 800902c:	2b00      	cmp	r3, #0
 800902e:	d1dd      	bne.n	8008fec <xTaskPriorityDisinherit+0x4>
					if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 8009030:	1d25      	adds	r5, r4, #4
 8009032:	4628      	mov	r0, r5
 8009034:	f7fe fca0 	bl	8007978 <uxListRemove>
					pxTCB->uxPriority = pxTCB->uxBasePriority;
 8009038:	6ce3      	ldr	r3, [r4, #76]	@ 0x4c
 800903a:	62e3      	str	r3, [r4, #44]	@ 0x2c
					listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800903c:	f1c3 0238 	rsb	r2, r3, #56	@ 0x38
 8009040:	61a2      	str	r2, [r4, #24]
					prvAddTaskToReadyList( pxTCB );
 8009042:	4a08      	ldr	r2, [pc, #32]	@ (8009064 <xTaskPriorityDisinherit+0x7c>)
 8009044:	6811      	ldr	r1, [r2, #0]
 8009046:	428b      	cmp	r3, r1
 8009048:	bf88      	it	hi
 800904a:	6013      	strhi	r3, [r2, #0]
 800904c:	4a06      	ldr	r2, [pc, #24]	@ (8009068 <xTaskPriorityDisinherit+0x80>)
 800904e:	2014      	movs	r0, #20
 8009050:	fb00 2003 	mla	r0, r0, r3, r2
 8009054:	4629      	mov	r1, r5
 8009056:	f7fe fc6d 	bl	8007934 <vListInsertEnd>
					xReturn = pdTRUE;
 800905a:	2001      	movs	r0, #1
		return xReturn;
 800905c:	e7c7      	b.n	8008fee <xTaskPriorityDisinherit+0x6>
 800905e:	bf00      	nop
 8009060:	20013dec 	.word	0x20013dec
 8009064:	20013910 	.word	0x20013910
 8009068:	2001398c 	.word	0x2001398c

0800906c <vTaskPriorityDisinheritAfterTimeout>:
	{
 800906c:	b570      	push	{r4, r5, r6, lr}
		if( pxMutexHolder != NULL )
 800906e:	4604      	mov	r4, r0
 8009070:	2800      	cmp	r0, #0
 8009072:	d041      	beq.n	80090f8 <vTaskPriorityDisinheritAfterTimeout+0x8c>
			configASSERT( pxTCB->uxMutexesHeld );
 8009074:	6d02      	ldr	r2, [r0, #80]	@ 0x50
 8009076:	b942      	cbnz	r2, 800908a <vTaskPriorityDisinheritAfterTimeout+0x1e>
 8009078:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800907c:	f383 8811 	msr	BASEPRI, r3
 8009080:	f3bf 8f6f 	isb	sy
 8009084:	f3bf 8f4f 	dsb	sy
 8009088:	e7fe      	b.n	8009088 <vTaskPriorityDisinheritAfterTimeout+0x1c>
			if( pxTCB->uxBasePriority < uxHighestPriorityWaitingTask )
 800908a:	6cc3      	ldr	r3, [r0, #76]	@ 0x4c
 800908c:	4299      	cmp	r1, r3
 800908e:	bf38      	it	cc
 8009090:	4619      	movcc	r1, r3
			if( pxTCB->uxPriority != uxPriorityToUse )
 8009092:	6ac3      	ldr	r3, [r0, #44]	@ 0x2c
 8009094:	428b      	cmp	r3, r1
 8009096:	d02f      	beq.n	80090f8 <vTaskPriorityDisinheritAfterTimeout+0x8c>
				if( pxTCB->uxMutexesHeld == uxOnlyOneMutexHeld )
 8009098:	2a01      	cmp	r2, #1
 800909a:	d12d      	bne.n	80090f8 <vTaskPriorityDisinheritAfterTimeout+0x8c>
					configASSERT( pxTCB != pxCurrentTCB );
 800909c:	4a17      	ldr	r2, [pc, #92]	@ (80090fc <vTaskPriorityDisinheritAfterTimeout+0x90>)
 800909e:	6812      	ldr	r2, [r2, #0]
 80090a0:	4282      	cmp	r2, r0
 80090a2:	d108      	bne.n	80090b6 <vTaskPriorityDisinheritAfterTimeout+0x4a>
 80090a4:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80090a8:	f383 8811 	msr	BASEPRI, r3
 80090ac:	f3bf 8f6f 	isb	sy
 80090b0:	f3bf 8f4f 	dsb	sy
 80090b4:	e7fe      	b.n	80090b4 <vTaskPriorityDisinheritAfterTimeout+0x48>
					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 80090b6:	6982      	ldr	r2, [r0, #24]
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 80090b8:	4d11      	ldr	r5, [pc, #68]	@ (8009100 <vTaskPriorityDisinheritAfterTimeout+0x94>)
					pxTCB->uxPriority = uxPriorityToUse;
 80090ba:	62c1      	str	r1, [r0, #44]	@ 0x2c
					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 80090bc:	2a00      	cmp	r2, #0
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 80090be:	f04f 0214 	mov.w	r2, #20
 80090c2:	fb02 5303 	mla	r3, r2, r3, r5
 80090c6:	6942      	ldr	r2, [r0, #20]
						listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriorityToUse ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 80090c8:	bfa4      	itt	ge
 80090ca:	f1c1 0138 	rsbge	r1, r1, #56	@ 0x38
 80090ce:	6181      	strge	r1, [r0, #24]
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 80090d0:	429a      	cmp	r2, r3
 80090d2:	d111      	bne.n	80090f8 <vTaskPriorityDisinheritAfterTimeout+0x8c>
						if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 80090d4:	1d06      	adds	r6, r0, #4
 80090d6:	4630      	mov	r0, r6
 80090d8:	f7fe fc4e 	bl	8007978 <uxListRemove>
						prvAddTaskToReadyList( pxTCB );
 80090dc:	4a09      	ldr	r2, [pc, #36]	@ (8009104 <vTaskPriorityDisinheritAfterTimeout+0x98>)
 80090de:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 80090e0:	6811      	ldr	r1, [r2, #0]
 80090e2:	2014      	movs	r0, #20
 80090e4:	428b      	cmp	r3, r1
 80090e6:	fb00 5003 	mla	r0, r0, r3, r5
 80090ea:	4631      	mov	r1, r6
	}
 80090ec:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
						prvAddTaskToReadyList( pxTCB );
 80090f0:	bf88      	it	hi
 80090f2:	6013      	strhi	r3, [r2, #0]
 80090f4:	f7fe bc1e 	b.w	8007934 <vListInsertEnd>
	}
 80090f8:	bd70      	pop	{r4, r5, r6, pc}
 80090fa:	bf00      	nop
 80090fc:	20013dec 	.word	0x20013dec
 8009100:	2001398c 	.word	0x2001398c
 8009104:	20013910 	.word	0x20013910

08009108 <pvTaskIncrementMutexHeldCount>:
		if( pxCurrentTCB != NULL )
 8009108:	4b04      	ldr	r3, [pc, #16]	@ (800911c <pvTaskIncrementMutexHeldCount+0x14>)
 800910a:	681a      	ldr	r2, [r3, #0]
 800910c:	b11a      	cbz	r2, 8009116 <pvTaskIncrementMutexHeldCount+0xe>
			( pxCurrentTCB->uxMutexesHeld )++;
 800910e:	6819      	ldr	r1, [r3, #0]
 8009110:	6d0a      	ldr	r2, [r1, #80]	@ 0x50
 8009112:	3201      	adds	r2, #1
 8009114:	650a      	str	r2, [r1, #80]	@ 0x50
		return pxCurrentTCB;
 8009116:	6818      	ldr	r0, [r3, #0]
	}
 8009118:	4770      	bx	lr
 800911a:	bf00      	nop
 800911c:	20013dec 	.word	0x20013dec

08009120 <prvInsertTimerInActiveList>:
BaseType_t xProcessTimerNow = pdFALSE;

	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );

	if( xNextExpiryTime <= xTimeNow )
 8009120:	4291      	cmp	r1, r2
{
 8009122:	b508      	push	{r3, lr}
	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
 8009124:	6041      	str	r1, [r0, #4]
	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 8009126:	6100      	str	r0, [r0, #16]
	if( xNextExpiryTime <= xTimeNow )
 8009128:	d80a      	bhi.n	8009140 <prvInsertTimerInActiveList+0x20>
	{
		/* Has the expiry time elapsed between the command to start/reset a
		timer was issued, and the time the command was processed? */
		if( ( ( TickType_t ) ( xTimeNow - xCommandTime ) ) >= pxTimer->xTimerPeriodInTicks ) /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800912a:	1ad2      	subs	r2, r2, r3
 800912c:	6983      	ldr	r3, [r0, #24]
 800912e:	429a      	cmp	r2, r3
 8009130:	d20d      	bcs.n	800914e <prvInsertTimerInActiveList+0x2e>
			processed actually exceeds the timers period.  */
			xProcessTimerNow = pdTRUE;
		}
		else
		{
			vListInsert( pxOverflowTimerList, &( pxTimer->xTimerListItem ) );
 8009132:	4b08      	ldr	r3, [pc, #32]	@ (8009154 <prvInsertTimerInActiveList+0x34>)
 8009134:	1d01      	adds	r1, r0, #4
			its expiry time and should be processed immediately. */
			xProcessTimerNow = pdTRUE;
		}
		else
		{
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 8009136:	6818      	ldr	r0, [r3, #0]
 8009138:	f7fe fc07 	bl	800794a <vListInsert>
BaseType_t xProcessTimerNow = pdFALSE;
 800913c:	2000      	movs	r0, #0
		}
	}

	return xProcessTimerNow;
}
 800913e:	bd08      	pop	{r3, pc}
		if( ( xTimeNow < xCommandTime ) && ( xNextExpiryTime >= xCommandTime ) )
 8009140:	429a      	cmp	r2, r3
 8009142:	d201      	bcs.n	8009148 <prvInsertTimerInActiveList+0x28>
 8009144:	4299      	cmp	r1, r3
 8009146:	d202      	bcs.n	800914e <prvInsertTimerInActiveList+0x2e>
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 8009148:	4b03      	ldr	r3, [pc, #12]	@ (8009158 <prvInsertTimerInActiveList+0x38>)
 800914a:	1d01      	adds	r1, r0, #4
 800914c:	e7f3      	b.n	8009136 <prvInsertTimerInActiveList+0x16>
			xProcessTimerNow = pdTRUE;
 800914e:	2001      	movs	r0, #1
	return xProcessTimerNow;
 8009150:	e7f5      	b.n	800913e <prvInsertTimerInActiveList+0x1e>
 8009152:	bf00      	nop
 8009154:	20013eec 	.word	0x20013eec
 8009158:	20013ef0 	.word	0x20013ef0

0800915c <prvCheckForValidListAndQueue>:
	pxOverflowTimerList = pxTemp;
}
/*-----------------------------------------------------------*/

static void prvCheckForValidListAndQueue( void )
{
 800915c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
	/* Check that the list from which active timers are referenced, and the
	queue used to communicate with the timer service, have been
	initialised. */
	taskENTER_CRITICAL();
	{
		if( xTimerQueue == NULL )
 800915e:	4c11      	ldr	r4, [pc, #68]	@ (80091a4 <prvCheckForValidListAndQueue+0x48>)
	taskENTER_CRITICAL();
 8009160:	f7fe fc80 	bl	8007a64 <vPortEnterCritical>
		if( xTimerQueue == NULL )
 8009164:	6825      	ldr	r5, [r4, #0]
 8009166:	b9bd      	cbnz	r5, 8009198 <prvCheckForValidListAndQueue+0x3c>
		{
			vListInitialise( &xActiveTimerList1 );
 8009168:	4f0f      	ldr	r7, [pc, #60]	@ (80091a8 <prvCheckForValidListAndQueue+0x4c>)
			vListInitialise( &xActiveTimerList2 );
 800916a:	4e10      	ldr	r6, [pc, #64]	@ (80091ac <prvCheckForValidListAndQueue+0x50>)
			vListInitialise( &xActiveTimerList1 );
 800916c:	4638      	mov	r0, r7
 800916e:	f7fe fbd3 	bl	8007918 <vListInitialise>
			vListInitialise( &xActiveTimerList2 );
 8009172:	4630      	mov	r0, r6
 8009174:	f7fe fbd0 	bl	8007918 <vListInitialise>
			pxCurrentTimerList = &xActiveTimerList1;
 8009178:	4b0d      	ldr	r3, [pc, #52]	@ (80091b0 <prvCheckForValidListAndQueue+0x54>)
				/* The timer queue is allocated statically in case
				configSUPPORT_DYNAMIC_ALLOCATION is 0. */
				static StaticQueue_t xStaticTimerQueue; /*lint !e956 Ok to declare in this manner to prevent additional conditional compilation guards in other locations. */
				static uint8_t ucStaticTimerQueueStorage[ ( size_t ) configTIMER_QUEUE_LENGTH * sizeof( DaemonTaskMessage_t ) ]; /*lint !e956 Ok to declare in this manner to prevent additional conditional compilation guards in other locations. */

				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 800917a:	4a0e      	ldr	r2, [pc, #56]	@ (80091b4 <prvCheckForValidListAndQueue+0x58>)
			pxCurrentTimerList = &xActiveTimerList1;
 800917c:	601f      	str	r7, [r3, #0]
			pxOverflowTimerList = &xActiveTimerList2;
 800917e:	4b0e      	ldr	r3, [pc, #56]	@ (80091b8 <prvCheckForValidListAndQueue+0x5c>)
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 8009180:	2110      	movs	r1, #16
			pxOverflowTimerList = &xActiveTimerList2;
 8009182:	601e      	str	r6, [r3, #0]
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 8009184:	200a      	movs	r0, #10
 8009186:	4b0d      	ldr	r3, [pc, #52]	@ (80091bc <prvCheckForValidListAndQueue+0x60>)
 8009188:	9500      	str	r5, [sp, #0]
 800918a:	f7fe fe74 	bl	8007e76 <xQueueGenericCreateStatic>
 800918e:	6020      	str	r0, [r4, #0]
			}
			#endif

			#if ( configQUEUE_REGISTRY_SIZE > 0 )
			{
				if( xTimerQueue != NULL )
 8009190:	b110      	cbz	r0, 8009198 <prvCheckForValidListAndQueue+0x3c>
				{
					vQueueAddToRegistry( xTimerQueue, "TmrQ" );
 8009192:	490b      	ldr	r1, [pc, #44]	@ (80091c0 <prvCheckForValidListAndQueue+0x64>)
 8009194:	f7ff fa2c 	bl	80085f0 <vQueueAddToRegistry>
		{
			mtCOVERAGE_TEST_MARKER();
		}
	}
	taskEXIT_CRITICAL();
}
 8009198:	b003      	add	sp, #12
 800919a:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
	taskEXIT_CRITICAL();
 800919e:	f7fe bc81 	b.w	8007aa4 <vPortExitCritical>
 80091a2:	bf00      	nop
 80091a4:	20013ee8 	.word	0x20013ee8
 80091a8:	20013f08 	.word	0x20013f08
 80091ac:	20013ef4 	.word	0x20013ef4
 80091b0:	20013ef0 	.word	0x20013ef0
 80091b4:	20013e40 	.word	0x20013e40
 80091b8:	20013eec 	.word	0x20013eec
 80091bc:	20013df0 	.word	0x20013df0
 80091c0:	0802439c 	.word	0x0802439c

080091c4 <xTimerCreateTimerTask>:
{
 80091c4:	b510      	push	{r4, lr}
 80091c6:	b088      	sub	sp, #32
	prvCheckForValidListAndQueue();
 80091c8:	f7ff ffc8 	bl	800915c <prvCheckForValidListAndQueue>
	if( xTimerQueue != NULL )
 80091cc:	4b12      	ldr	r3, [pc, #72]	@ (8009218 <xTimerCreateTimerTask+0x54>)
 80091ce:	681b      	ldr	r3, [r3, #0]
 80091d0:	b1b3      	cbz	r3, 8009200 <xTimerCreateTimerTask+0x3c>
			StaticTask_t *pxTimerTaskTCBBuffer = NULL;
 80091d2:	2400      	movs	r4, #0
			vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStackSize );
 80091d4:	aa07      	add	r2, sp, #28
 80091d6:	a906      	add	r1, sp, #24
 80091d8:	a805      	add	r0, sp, #20
			StackType_t *pxTimerTaskStackBuffer = NULL;
 80091da:	e9cd 4405 	strd	r4, r4, [sp, #20]
			vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStackSize );
 80091de:	f7fe fa93 	bl	8007708 <vApplicationGetTimerTaskMemory>
			xTimerTaskHandle = xTaskCreateStatic(	prvTimerTask,
 80091e2:	9b05      	ldr	r3, [sp, #20]
 80091e4:	9302      	str	r3, [sp, #8]
 80091e6:	9b06      	ldr	r3, [sp, #24]
 80091e8:	9301      	str	r3, [sp, #4]
 80091ea:	2302      	movs	r3, #2
 80091ec:	9300      	str	r3, [sp, #0]
 80091ee:	9a07      	ldr	r2, [sp, #28]
 80091f0:	490a      	ldr	r1, [pc, #40]	@ (800921c <xTimerCreateTimerTask+0x58>)
 80091f2:	480b      	ldr	r0, [pc, #44]	@ (8009220 <xTimerCreateTimerTask+0x5c>)
 80091f4:	4623      	mov	r3, r4
 80091f6:	f7ff fbc0 	bl	800897a <xTaskCreateStatic>
 80091fa:	4b0a      	ldr	r3, [pc, #40]	@ (8009224 <xTimerCreateTimerTask+0x60>)
 80091fc:	6018      	str	r0, [r3, #0]
			if( xTimerTaskHandle != NULL )
 80091fe:	b940      	cbnz	r0, 8009212 <xTimerCreateTimerTask+0x4e>
 8009200:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8009204:	f383 8811 	msr	BASEPRI, r3
 8009208:	f3bf 8f6f 	isb	sy
 800920c:	f3bf 8f4f 	dsb	sy
	configASSERT( xReturn );
 8009210:	e7fe      	b.n	8009210 <xTimerCreateTimerTask+0x4c>
}
 8009212:	2001      	movs	r0, #1
 8009214:	b008      	add	sp, #32
 8009216:	bd10      	pop	{r4, pc}
 8009218:	20013ee8 	.word	0x20013ee8
 800921c:	080243a1 	.word	0x080243a1
 8009220:	08009325 	.word	0x08009325
 8009224:	20013ee4 	.word	0x20013ee4

08009228 <xTimerGenericCommand>:
{
 8009228:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800922a:	4616      	mov	r6, r2
	configASSERT( xTimer );
 800922c:	4604      	mov	r4, r0
{
 800922e:	461a      	mov	r2, r3
	configASSERT( xTimer );
 8009230:	b940      	cbnz	r0, 8009244 <xTimerGenericCommand+0x1c>
 8009232:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8009236:	f383 8811 	msr	BASEPRI, r3
 800923a:	f3bf 8f6f 	isb	sy
 800923e:	f3bf 8f4f 	dsb	sy
 8009242:	e7fe      	b.n	8009242 <xTimerGenericCommand+0x1a>
	if( xTimerQueue != NULL )
 8009244:	4d0d      	ldr	r5, [pc, #52]	@ (800927c <xTimerGenericCommand+0x54>)
 8009246:	6828      	ldr	r0, [r5, #0]
 8009248:	b180      	cbz	r0, 800926c <xTimerGenericCommand+0x44>
		if( xCommandID < tmrFIRST_FROM_ISR_COMMAND )
 800924a:	2905      	cmp	r1, #5
		xMessage.u.xTimerParameters.xMessageValue = xOptionalValue;
 800924c:	e9cd 1600 	strd	r1, r6, [sp]
		xMessage.u.xTimerParameters.pxTimer = xTimer;
 8009250:	9402      	str	r4, [sp, #8]
		if( xCommandID < tmrFIRST_FROM_ISR_COMMAND )
 8009252:	dc0d      	bgt.n	8009270 <xTimerGenericCommand+0x48>
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
 8009254:	f7ff fe7a 	bl	8008f4c <xTaskGetSchedulerState>
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 8009258:	2300      	movs	r3, #0
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
 800925a:	2802      	cmp	r0, #2
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 800925c:	bf08      	it	eq
 800925e:	9a08      	ldreq	r2, [sp, #32]
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, tmrNO_DELAY );
 8009260:	6828      	ldr	r0, [r5, #0]
 8009262:	bf18      	it	ne
 8009264:	461a      	movne	r2, r3
 8009266:	4669      	mov	r1, sp
 8009268:	f7fe feba 	bl	8007fe0 <xQueueGenericSend>
}
 800926c:	b004      	add	sp, #16
 800926e:	bd70      	pop	{r4, r5, r6, pc}
			xReturn = xQueueSendToBackFromISR( xTimerQueue, &xMessage, pxHigherPriorityTaskWoken );
 8009270:	2300      	movs	r3, #0
 8009272:	4669      	mov	r1, sp
 8009274:	f7fe ff66 	bl	8008144 <xQueueGenericSendFromISR>
 8009278:	e7f8      	b.n	800926c <xTimerGenericCommand+0x44>
 800927a:	bf00      	nop
 800927c:	20013ee8 	.word	0x20013ee8

08009280 <prvSampleTimeNow>:
{
 8009280:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
	if( xTimeNow < xLastTime )
 8009284:	f8df 8098 	ldr.w	r8, [pc, #152]	@ 8009320 <prvSampleTimeNow+0xa0>
{
 8009288:	4606      	mov	r6, r0
	xTimeNow = xTaskGetTickCount();
 800928a:	f7ff fc2b 	bl	8008ae4 <xTaskGetTickCount>
	if( xTimeNow < xLastTime )
 800928e:	f8d8 3000 	ldr.w	r3, [r8]
 8009292:	4283      	cmp	r3, r0
	xTimeNow = xTaskGetTickCount();
 8009294:	4605      	mov	r5, r0
	if( xTimeNow < xLastTime )
 8009296:	d909      	bls.n	80092ac <prvSampleTimeNow+0x2c>
	while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
 8009298:	4f1f      	ldr	r7, [pc, #124]	@ (8009318 <prvSampleTimeNow+0x98>)
 800929a:	683b      	ldr	r3, [r7, #0]
 800929c:	681a      	ldr	r2, [r3, #0]
 800929e:	b96a      	cbnz	r2, 80092bc <prvSampleTimeNow+0x3c>
	pxCurrentTimerList = pxOverflowTimerList;
 80092a0:	4a1e      	ldr	r2, [pc, #120]	@ (800931c <prvSampleTimeNow+0x9c>)
 80092a2:	6811      	ldr	r1, [r2, #0]
 80092a4:	6039      	str	r1, [r7, #0]
	pxOverflowTimerList = pxTemp;
 80092a6:	6013      	str	r3, [r2, #0]
		*pxTimerListsWereSwitched = pdTRUE;
 80092a8:	2301      	movs	r3, #1
 80092aa:	e000      	b.n	80092ae <prvSampleTimeNow+0x2e>
 80092ac:	2300      	movs	r3, #0
}
 80092ae:	4628      	mov	r0, r5
		*pxTimerListsWereSwitched = pdTRUE;
 80092b0:	6033      	str	r3, [r6, #0]
	xLastTime = xTimeNow;
 80092b2:	f8c8 5000 	str.w	r5, [r8]
}
 80092b6:	b002      	add	sp, #8
 80092b8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 80092bc:	68db      	ldr	r3, [r3, #12]
		pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 80092be:	68dc      	ldr	r4, [r3, #12]
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 80092c0:	f8d3 9000 	ldr.w	r9, [r3]
		( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 80092c4:	f104 0a04 	add.w	sl, r4, #4
 80092c8:	4650      	mov	r0, sl
 80092ca:	f7fe fb55 	bl	8007978 <uxListRemove>
		pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 80092ce:	6a23      	ldr	r3, [r4, #32]
 80092d0:	4620      	mov	r0, r4
 80092d2:	4798      	blx	r3
		if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 80092d4:	f894 3028 	ldrb.w	r3, [r4, #40]	@ 0x28
 80092d8:	075b      	lsls	r3, r3, #29
 80092da:	d5de      	bpl.n	800929a <prvSampleTimeNow+0x1a>
			xReloadTime = ( xNextExpireTime + pxTimer->xTimerPeriodInTicks );
 80092dc:	69a3      	ldr	r3, [r4, #24]
 80092de:	444b      	add	r3, r9
			if( xReloadTime > xNextExpireTime )
 80092e0:	4599      	cmp	r9, r3
 80092e2:	d206      	bcs.n	80092f2 <prvSampleTimeNow+0x72>
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 80092e4:	6838      	ldr	r0, [r7, #0]
				listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xReloadTime );
 80092e6:	6063      	str	r3, [r4, #4]
				listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 80092e8:	6124      	str	r4, [r4, #16]
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 80092ea:	4651      	mov	r1, sl
 80092ec:	f7fe fb2d 	bl	800794a <vListInsert>
 80092f0:	e7d3      	b.n	800929a <prvSampleTimeNow+0x1a>
				xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xNextExpireTime, NULL, tmrNO_DELAY );
 80092f2:	2300      	movs	r3, #0
 80092f4:	9300      	str	r3, [sp, #0]
 80092f6:	464a      	mov	r2, r9
 80092f8:	4619      	mov	r1, r3
 80092fa:	4620      	mov	r0, r4
 80092fc:	f7ff ff94 	bl	8009228 <xTimerGenericCommand>
				configASSERT( xResult );
 8009300:	2800      	cmp	r0, #0
 8009302:	d1ca      	bne.n	800929a <prvSampleTimeNow+0x1a>
 8009304:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8009308:	f383 8811 	msr	BASEPRI, r3
 800930c:	f3bf 8f6f 	isb	sy
 8009310:	f3bf 8f4f 	dsb	sy
 8009314:	e7fe      	b.n	8009314 <prvSampleTimeNow+0x94>
 8009316:	bf00      	nop
 8009318:	20013ef0 	.word	0x20013ef0
 800931c:	20013eec 	.word	0x20013eec
 8009320:	20013ee0 	.word	0x20013ee0

08009324 <prvTimerTask>:
{
 8009324:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 8009328:	4d6e      	ldr	r5, [pc, #440]	@ (80094e4 <prvTimerTask+0x1c0>)
				vQueueWaitForMessageRestricted( xTimerQueue, ( xNextExpireTime - xTimeNow ), xListWasEmpty );
 800932a:	4e6f      	ldr	r6, [pc, #444]	@ (80094e8 <prvTimerTask+0x1c4>)
{
 800932c:	b089      	sub	sp, #36	@ 0x24
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 800932e:	682b      	ldr	r3, [r5, #0]
 8009330:	f8d3 8000 	ldr.w	r8, [r3]
 8009334:	f1b8 0f00 	cmp.w	r8, #0
 8009338:	d035      	beq.n	80093a6 <prvTimerTask+0x82>
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 800933a:	68db      	ldr	r3, [r3, #12]
 800933c:	f8d3 8000 	ldr.w	r8, [r3]
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 8009340:	2400      	movs	r4, #0
	vTaskSuspendAll();
 8009342:	f7ff fbc7 	bl	8008ad4 <vTaskSuspendAll>
		xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 8009346:	a804      	add	r0, sp, #16
 8009348:	f7ff ff9a 	bl	8009280 <prvSampleTimeNow>
		if( xTimerListsWereSwitched == pdFALSE )
 800934c:	9b04      	ldr	r3, [sp, #16]
		xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 800934e:	4681      	mov	r9, r0
		if( xTimerListsWereSwitched == pdFALSE )
 8009350:	2b00      	cmp	r3, #0
 8009352:	d169      	bne.n	8009428 <prvTimerTask+0x104>
			if( ( xListWasEmpty == pdFALSE ) && ( xNextExpireTime <= xTimeNow ) )
 8009354:	2c00      	cmp	r4, #0
 8009356:	d14c      	bne.n	80093f2 <prvTimerTask+0xce>
 8009358:	4540      	cmp	r0, r8
 800935a:	d350      	bcc.n	80093fe <prvTimerTask+0xda>
				( void ) xTaskResumeAll();
 800935c:	f7ff fc5e 	bl	8008c1c <xTaskResumeAll>
Timer_t * const pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8009360:	682b      	ldr	r3, [r5, #0]
 8009362:	68db      	ldr	r3, [r3, #12]
 8009364:	68df      	ldr	r7, [r3, #12]
	( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 8009366:	1d38      	adds	r0, r7, #4
 8009368:	f7fe fb06 	bl	8007978 <uxListRemove>
	if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 800936c:	f897 3028 	ldrb.w	r3, [r7, #40]	@ 0x28
 8009370:	0758      	lsls	r0, r3, #29
 8009372:	d51a      	bpl.n	80093aa <prvTimerTask+0x86>
		if( prvInsertTimerInActiveList( pxTimer, ( xNextExpireTime + pxTimer->xTimerPeriodInTicks ), xTimeNow, xNextExpireTime ) != pdFALSE )
 8009374:	69b9      	ldr	r1, [r7, #24]
 8009376:	4643      	mov	r3, r8
 8009378:	464a      	mov	r2, r9
 800937a:	4441      	add	r1, r8
 800937c:	4638      	mov	r0, r7
 800937e:	f7ff fecf 	bl	8009120 <prvInsertTimerInActiveList>
 8009382:	b1b0      	cbz	r0, 80093b2 <prvTimerTask+0x8e>
			xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xNextExpireTime, NULL, tmrNO_DELAY );
 8009384:	9400      	str	r4, [sp, #0]
 8009386:	4623      	mov	r3, r4
 8009388:	4642      	mov	r2, r8
 800938a:	4621      	mov	r1, r4
 800938c:	4638      	mov	r0, r7
 800938e:	f7ff ff4b 	bl	8009228 <xTimerGenericCommand>
			configASSERT( xResult );
 8009392:	b970      	cbnz	r0, 80093b2 <prvTimerTask+0x8e>
 8009394:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8009398:	f383 8811 	msr	BASEPRI, r3
 800939c:	f3bf 8f6f 	isb	sy
 80093a0:	f3bf 8f4f 	dsb	sy
 80093a4:	e7fe      	b.n	80093a4 <prvTimerTask+0x80>
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 80093a6:	2401      	movs	r4, #1
 80093a8:	e7cb      	b.n	8009342 <prvTimerTask+0x1e>
		pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 80093aa:	f023 0301 	bic.w	r3, r3, #1
 80093ae:	f887 3028 	strb.w	r3, [r7, #40]	@ 0x28
	pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 80093b2:	6a3b      	ldr	r3, [r7, #32]
 80093b4:	4638      	mov	r0, r7
 80093b6:	4798      	blx	r3
	while( xQueueReceive( xTimerQueue, &xMessage, tmrNO_DELAY ) != pdFAIL ) /*lint !e603 xMessage does not have to be initialised as it is passed out, not in, and it is not used unless xQueueReceive() returns pdTRUE. */
 80093b8:	6830      	ldr	r0, [r6, #0]
 80093ba:	2200      	movs	r2, #0
 80093bc:	a904      	add	r1, sp, #16
 80093be:	f7fe ff6f 	bl	80082a0 <xQueueReceive>
 80093c2:	2800      	cmp	r0, #0
 80093c4:	d0b3      	beq.n	800932e <prvTimerTask+0xa>
			if( xMessage.xMessageID < ( BaseType_t ) 0 )
 80093c6:	9b04      	ldr	r3, [sp, #16]
				pxCallback->pxCallbackFunction( pxCallback->pvParameter1, pxCallback->ulParameter2 );
 80093c8:	9806      	ldr	r0, [sp, #24]
			if( xMessage.xMessageID < ( BaseType_t ) 0 )
 80093ca:	2b00      	cmp	r3, #0
 80093cc:	db2f      	blt.n	800942e <prvTimerTask+0x10a>
			pxTimer = xMessage.u.xTimerParameters.pxTimer;
 80093ce:	9c06      	ldr	r4, [sp, #24]
			if( listIS_CONTAINED_WITHIN( NULL, &( pxTimer->xTimerListItem ) ) == pdFALSE ) /*lint !e961. The cast is only redundant when NULL is passed into the macro. */
 80093d0:	6963      	ldr	r3, [r4, #20]
 80093d2:	2b00      	cmp	r3, #0
 80093d4:	d132      	bne.n	800943c <prvTimerTask+0x118>
			xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 80093d6:	a803      	add	r0, sp, #12
 80093d8:	f7ff ff52 	bl	8009280 <prvSampleTimeNow>
			switch( xMessage.xMessageID )
 80093dc:	9b04      	ldr	r3, [sp, #16]
			xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 80093de:	4602      	mov	r2, r0
			switch( xMessage.xMessageID )
 80093e0:	2b09      	cmp	r3, #9
 80093e2:	d8e9      	bhi.n	80093b8 <prvTimerTask+0x94>
 80093e4:	e8df f003 	tbb	[pc, r3]
 80093e8:	572e2e2e 	.word	0x572e2e2e
 80093ec:	2e2e765e 	.word	0x2e2e765e
 80093f0:	5e57      	.short	0x5e57
					xListWasEmpty = listLIST_IS_EMPTY( pxOverflowTimerList );
 80093f2:	4b3e      	ldr	r3, [pc, #248]	@ (80094ec <prvTimerTask+0x1c8>)
 80093f4:	681b      	ldr	r3, [r3, #0]
 80093f6:	681c      	ldr	r4, [r3, #0]
 80093f8:	fab4 f484 	clz	r4, r4
 80093fc:	0964      	lsrs	r4, r4, #5
				vQueueWaitForMessageRestricted( xTimerQueue, ( xNextExpireTime - xTimeNow ), xListWasEmpty );
 80093fe:	6830      	ldr	r0, [r6, #0]
 8009400:	4622      	mov	r2, r4
 8009402:	eba8 0109 	sub.w	r1, r8, r9
 8009406:	f7ff f932 	bl	800866e <vQueueWaitForMessageRestricted>
				if( xTaskResumeAll() == pdFALSE )
 800940a:	f7ff fc07 	bl	8008c1c <xTaskResumeAll>
 800940e:	2800      	cmp	r0, #0
 8009410:	d1d2      	bne.n	80093b8 <prvTimerTask+0x94>
					portYIELD_WITHIN_API();
 8009412:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 8009416:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 800941a:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 800941e:	f3bf 8f4f 	dsb	sy
 8009422:	f3bf 8f6f 	isb	sy
 8009426:	e7c7      	b.n	80093b8 <prvTimerTask+0x94>
			( void ) xTaskResumeAll();
 8009428:	f7ff fbf8 	bl	8008c1c <xTaskResumeAll>
}
 800942c:	e7c4      	b.n	80093b8 <prvTimerTask+0x94>
				pxCallback->pxCallbackFunction( pxCallback->pvParameter1, pxCallback->ulParameter2 );
 800942e:	9b05      	ldr	r3, [sp, #20]
 8009430:	9907      	ldr	r1, [sp, #28]
 8009432:	4798      	blx	r3
		if( xMessage.xMessageID >= ( BaseType_t ) 0 )
 8009434:	9b04      	ldr	r3, [sp, #16]
 8009436:	2b00      	cmp	r3, #0
 8009438:	dbbe      	blt.n	80093b8 <prvTimerTask+0x94>
 800943a:	e7c8      	b.n	80093ce <prvTimerTask+0xaa>
				( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 800943c:	1d20      	adds	r0, r4, #4
 800943e:	f7fe fa9b 	bl	8007978 <uxListRemove>
 8009442:	e7c8      	b.n	80093d6 <prvTimerTask+0xb2>
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 8009444:	f894 3028 	ldrb.w	r3, [r4, #40]	@ 0x28
					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
 8009448:	69a1      	ldr	r1, [r4, #24]
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 800944a:	f043 0301 	orr.w	r3, r3, #1
 800944e:	f884 3028 	strb.w	r3, [r4, #40]	@ 0x28
					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
 8009452:	9b05      	ldr	r3, [sp, #20]
 8009454:	4620      	mov	r0, r4
 8009456:	4419      	add	r1, r3
 8009458:	f7ff fe62 	bl	8009120 <prvInsertTimerInActiveList>
 800945c:	2800      	cmp	r0, #0
 800945e:	d0ab      	beq.n	80093b8 <prvTimerTask+0x94>
						pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 8009460:	6a23      	ldr	r3, [r4, #32]
 8009462:	4620      	mov	r0, r4
 8009464:	4798      	blx	r3
						if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 8009466:	f894 3028 	ldrb.w	r3, [r4, #40]	@ 0x28
 800946a:	0759      	lsls	r1, r3, #29
 800946c:	d5a4      	bpl.n	80093b8 <prvTimerTask+0x94>
							xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, NULL, tmrNO_DELAY );
 800946e:	69a2      	ldr	r2, [r4, #24]
 8009470:	9905      	ldr	r1, [sp, #20]
 8009472:	2300      	movs	r3, #0
 8009474:	440a      	add	r2, r1
 8009476:	9300      	str	r3, [sp, #0]
 8009478:	4619      	mov	r1, r3
 800947a:	4620      	mov	r0, r4
 800947c:	f7ff fed4 	bl	8009228 <xTimerGenericCommand>
							configASSERT( xResult );
 8009480:	2800      	cmp	r0, #0
 8009482:	d199      	bne.n	80093b8 <prvTimerTask+0x94>
 8009484:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8009488:	f383 8811 	msr	BASEPRI, r3
 800948c:	f3bf 8f6f 	isb	sy
 8009490:	f3bf 8f4f 	dsb	sy
 8009494:	e7fe      	b.n	8009494 <prvTimerTask+0x170>
					pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 8009496:	f894 3028 	ldrb.w	r3, [r4, #40]	@ 0x28
							pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 800949a:	f023 0301 	bic.w	r3, r3, #1
 800949e:	f884 3028 	strb.w	r3, [r4, #40]	@ 0x28
 80094a2:	e789      	b.n	80093b8 <prvTimerTask+0x94>
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 80094a4:	f894 3028 	ldrb.w	r3, [r4, #40]	@ 0x28
 80094a8:	f043 0301 	orr.w	r3, r3, #1
 80094ac:	f884 3028 	strb.w	r3, [r4, #40]	@ 0x28
					pxTimer->xTimerPeriodInTicks = xMessage.u.xTimerParameters.xMessageValue;
 80094b0:	9905      	ldr	r1, [sp, #20]
 80094b2:	61a1      	str	r1, [r4, #24]
					configASSERT( ( pxTimer->xTimerPeriodInTicks > 0 ) );
 80094b4:	b941      	cbnz	r1, 80094c8 <prvTimerTask+0x1a4>
 80094b6:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80094ba:	f383 8811 	msr	BASEPRI, r3
 80094be:	f3bf 8f6f 	isb	sy
 80094c2:	f3bf 8f4f 	dsb	sy
 80094c6:	e7fe      	b.n	80094c6 <prvTimerTask+0x1a2>
					( void ) prvInsertTimerInActiveList( pxTimer, ( xTimeNow + pxTimer->xTimerPeriodInTicks ), xTimeNow, xTimeNow );
 80094c8:	4603      	mov	r3, r0
 80094ca:	4401      	add	r1, r0
 80094cc:	4620      	mov	r0, r4
 80094ce:	f7ff fe27 	bl	8009120 <prvInsertTimerInActiveList>
					break;
 80094d2:	e771      	b.n	80093b8 <prvTimerTask+0x94>
						if( ( pxTimer->ucStatus & tmrSTATUS_IS_STATICALLY_ALLOCATED ) == ( uint8_t ) 0 )
 80094d4:	f894 3028 	ldrb.w	r3, [r4, #40]	@ 0x28
 80094d8:	079a      	lsls	r2, r3, #30
 80094da:	d4de      	bmi.n	800949a <prvTimerTask+0x176>
							vPortFree( pxTimer );
 80094dc:	4620      	mov	r0, r4
 80094de:	f7fe f9dd 	bl	800789c <vPortFree>
 80094e2:	e769      	b.n	80093b8 <prvTimerTask+0x94>
 80094e4:	20013ef0 	.word	0x20013ef0
 80094e8:	20013ee8 	.word	0x20013ee8
 80094ec:	20013eec 	.word	0x20013eec

080094f0 <USBD_Init>:
                             USBD_DescriptorsTypeDef *pdesc, uint8_t id)
{
  USBD_StatusTypeDef ret;

  /* Check whether the USB Host handle is valid */
  if (pdev == NULL)
 80094f0:	b178      	cbz	r0, 8009512 <USBD_Init+0x22>
    pdev->NumClasses = 0;
    pdev->classId = 0;
  }
#else
  /* Unlink previous class*/
  pdev->pClass[0] = NULL;
 80094f2:	2300      	movs	r3, #0
 80094f4:	f8c0 32b8 	str.w	r3, [r0, #696]	@ 0x2b8
  pdev->pUserData[0] = NULL;
 80094f8:	f8c0 32c4 	str.w	r3, [r0, #708]	@ 0x2c4
#endif /* USE_USBD_COMPOSITE */

  pdev->pConfDesc = NULL;
 80094fc:	f8c0 32d0 	str.w	r3, [r0, #720]	@ 0x2d0

  /* Assign USBD Descriptors */
  if (pdesc != NULL)
 8009500:	b109      	cbz	r1, 8009506 <USBD_Init+0x16>
  {
    pdev->pDesc = pdesc;
 8009502:	f8c0 12b4 	str.w	r1, [r0, #692]	@ 0x2b4
  }

  /* Set Device initial State */
  pdev->dev_state = USBD_STATE_DEFAULT;
 8009506:	2301      	movs	r3, #1
 8009508:	f880 329c 	strb.w	r3, [r0, #668]	@ 0x29c
  pdev->id = id;
 800950c:	7002      	strb	r2, [r0, #0]

  /* Initialize low level driver */
  ret = USBD_LL_Init(pdev);
 800950e:	f7f8 b9ff 	b.w	8001910 <USBD_LL_Init>

  return ret;
}
 8009512:	2003      	movs	r0, #3
 8009514:	4770      	bx	lr

08009516 <USBD_RegisterClass>:
  * @param  pdev: Device Handle
  * @param  pclass: Class handle
  * @retval USBD Status
  */
USBD_StatusTypeDef USBD_RegisterClass(USBD_HandleTypeDef *pdev, USBD_ClassTypeDef *pclass)
{
 8009516:	b513      	push	{r0, r1, r4, lr}
  uint16_t len = 0U;
 8009518:	2300      	movs	r3, #0
{
 800951a:	4604      	mov	r4, r0
  uint16_t len = 0U;
 800951c:	f8ad 3006 	strh.w	r3, [sp, #6]

  if (pclass == NULL)
 8009520:	b181      	cbz	r1, 8009544 <USBD_RegisterClass+0x2e>
  if (pdev->pClass[pdev->classId]->GetHSConfigDescriptor != NULL)
  {
    pdev->pConfDesc = (void *)pdev->pClass[pdev->classId]->GetHSConfigDescriptor(&len);
  }
#else /* Default USE_USB_FS */
  if (pdev->pClass[pdev->classId]->GetFSConfigDescriptor != NULL)
 8009522:	6acb      	ldr	r3, [r1, #44]	@ 0x2c
  pdev->pClass[0] = pclass;
 8009524:	f8c0 12b8 	str.w	r1, [r0, #696]	@ 0x2b8
  if (pdev->pClass[pdev->classId]->GetFSConfigDescriptor != NULL)
 8009528:	b123      	cbz	r3, 8009534 <USBD_RegisterClass+0x1e>
  {
    pdev->pConfDesc = (void *)pdev->pClass[pdev->classId]->GetFSConfigDescriptor(&len);
 800952a:	f10d 0006 	add.w	r0, sp, #6
 800952e:	4798      	blx	r3
 8009530:	f8c4 02d0 	str.w	r0, [r4, #720]	@ 0x2d0
  }
#endif /* USE_USB_FS */

  /* Increment the NumClasses */
  pdev->NumClasses++;
 8009534:	f8d4 32d8 	ldr.w	r3, [r4, #728]	@ 0x2d8
 8009538:	3301      	adds	r3, #1
 800953a:	f8c4 32d8 	str.w	r3, [r4, #728]	@ 0x2d8

  return USBD_OK;
 800953e:	2000      	movs	r0, #0
}
 8009540:	b002      	add	sp, #8
 8009542:	bd10      	pop	{r4, pc}
    return USBD_FAIL;
 8009544:	2003      	movs	r0, #3
 8009546:	e7fb      	b.n	8009540 <USBD_RegisterClass+0x2a>

08009548 <USBD_Start>:
#ifdef USE_USBD_COMPOSITE
  pdev->classId = 0U;
#endif /* USE_USBD_COMPOSITE */

  /* Start the low level driver  */
  return USBD_LL_Start(pdev);
 8009548:	f7f8 ba33 	b.w	80019b2 <USBD_LL_Start>

0800954c <USBD_SetClassConfig>:
        }
      }
    }
  }
#else
  if (pdev->pClass[0] != NULL)
 800954c:	f8d0 32b8 	ldr.w	r3, [r0, #696]	@ 0x2b8
 8009550:	b10b      	cbz	r3, 8009556 <USBD_SetClassConfig+0xa>
  {
    /* Set configuration and Start the Class */
    ret = (USBD_StatusTypeDef)pdev->pClass[0]->Init(pdev, cfgidx);
 8009552:	681b      	ldr	r3, [r3, #0]
 8009554:	4718      	bx	r3
  }
#endif /* USE_USBD_COMPOSITE */

  return ret;
}
 8009556:	4618      	mov	r0, r3
 8009558:	4770      	bx	lr

0800955a <USBD_ClrClassConfig>:
  * @param  pdev: device instance
  * @param  cfgidx: configuration index
  * @retval status
  */
USBD_StatusTypeDef USBD_ClrClassConfig(USBD_HandleTypeDef *pdev, uint8_t cfgidx)
{
 800955a:	b508      	push	{r3, lr}
      }
    }
  }
#else
  /* Clear configuration  and De-initialize the Class process */
  if (pdev->pClass[0]->DeInit(pdev, cfgidx) != 0U)
 800955c:	f8d0 32b8 	ldr.w	r3, [r0, #696]	@ 0x2b8
 8009560:	685b      	ldr	r3, [r3, #4]
 8009562:	4798      	blx	r3
  {
    ret = USBD_FAIL;
 8009564:	2800      	cmp	r0, #0
  }
#endif /* USE_USBD_COMPOSITE */

  return ret;
}
 8009566:	bf18      	it	ne
 8009568:	2003      	movne	r0, #3
 800956a:	bd08      	pop	{r3, pc}

0800956c <USBD_LL_SetupStage>:
  * @param  pdev: device instance
  * @param  psetup: setup packet buffer pointer
  * @retval status
  */
USBD_StatusTypeDef USBD_LL_SetupStage(USBD_HandleTypeDef *pdev, uint8_t *psetup)
{
 800956c:	b538      	push	{r3, r4, r5, lr}
 800956e:	4604      	mov	r4, r0
  USBD_StatusTypeDef ret;

  USBD_ParseSetupRequest(&pdev->request, psetup);
 8009570:	f200 25aa 	addw	r5, r0, #682	@ 0x2aa
 8009574:	4628      	mov	r0, r5
 8009576:	f000 fb97 	bl	8009ca8 <USBD_ParseSetupRequest>

  pdev->ep0_state = USBD_EP0_SETUP;
 800957a:	2301      	movs	r3, #1

  pdev->ep0_data_len = pdev->request.wLength;

  switch (pdev->request.bmRequest & 0x1FU)
 800957c:	f894 12aa 	ldrb.w	r1, [r4, #682]	@ 0x2aa
  pdev->ep0_state = USBD_EP0_SETUP;
 8009580:	f8c4 3294 	str.w	r3, [r4, #660]	@ 0x294
  pdev->ep0_data_len = pdev->request.wLength;
 8009584:	f8b4 32b0 	ldrh.w	r3, [r4, #688]	@ 0x2b0
 8009588:	f8c4 3298 	str.w	r3, [r4, #664]	@ 0x298
  switch (pdev->request.bmRequest & 0x1FU)
 800958c:	f001 031f 	and.w	r3, r1, #31
 8009590:	2b01      	cmp	r3, #1
 8009592:	d008      	beq.n	80095a6 <USBD_LL_SetupStage+0x3a>
 8009594:	2b02      	cmp	r3, #2
 8009596:	d00c      	beq.n	80095b2 <USBD_LL_SetupStage+0x46>
 8009598:	b98b      	cbnz	r3, 80095be <USBD_LL_SetupStage+0x52>
  {
    case USB_REQ_RECIPIENT_DEVICE:
      ret = USBD_StdDevReq(pdev, &pdev->request);
 800959a:	4629      	mov	r1, r5
 800959c:	4620      	mov	r0, r4
      ret = USBD_LL_StallEP(pdev, (pdev->request.bmRequest & 0x80U));
      break;
  }

  return ret;
}
 800959e:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
      ret = USBD_StdDevReq(pdev, &pdev->request);
 80095a2:	f000 b94d 	b.w	8009840 <USBD_StdDevReq>
      ret = USBD_StdItfReq(pdev, &pdev->request);
 80095a6:	4629      	mov	r1, r5
 80095a8:	4620      	mov	r0, r4
}
 80095aa:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
      ret = USBD_StdItfReq(pdev, &pdev->request);
 80095ae:	f000 baab 	b.w	8009b08 <USBD_StdItfReq>
      ret = USBD_StdEPReq(pdev, &pdev->request);
 80095b2:	4629      	mov	r1, r5
 80095b4:	4620      	mov	r0, r4
}
 80095b6:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
      ret = USBD_StdEPReq(pdev, &pdev->request);
 80095ba:	f000 bad4 	b.w	8009b66 <USBD_StdEPReq>
      ret = USBD_LL_StallEP(pdev, (pdev->request.bmRequest & 0x80U));
 80095be:	4620      	mov	r0, r4
 80095c0:	f001 0180 	and.w	r1, r1, #128	@ 0x80
}
 80095c4:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
      ret = USBD_LL_StallEP(pdev, (pdev->request.bmRequest & 0x80U));
 80095c8:	f7f8 ba11 	b.w	80019ee <USBD_LL_StallEP>

080095cc <USBD_LL_DataOutStage>:
  * @param  pdata: data pointer
  * @retval status
  */
USBD_StatusTypeDef USBD_LL_DataOutStage(USBD_HandleTypeDef *pdev,
                                        uint8_t epnum, uint8_t *pdata)
{
 80095cc:	b570      	push	{r4, r5, r6, lr}
 80095ce:	4604      	mov	r4, r0
 80095d0:	4616      	mov	r6, r2
  USBD_EndpointTypeDef *pep;
  USBD_StatusTypeDef ret = USBD_OK;
  uint8_t idx;

  if (epnum == 0U)
 80095d2:	bb09      	cbnz	r1, 8009618 <USBD_LL_DataOutStage+0x4c>
  {
    pep = &pdev->ep_out[0];

    if (pdev->ep0_state == USBD_EP0_DATA_OUT)
 80095d4:	f8d0 3294 	ldr.w	r3, [r0, #660]	@ 0x294
 80095d8:	2b03      	cmp	r3, #3
 80095da:	d10c      	bne.n	80095f6 <USBD_LL_DataOutStage+0x2a>
    {
      if (pep->rem_length > pep->maxpacket)
 80095dc:	e9d0 3257 	ldrd	r3, r2, [r0, #348]	@ 0x15c
 80095e0:	4293      	cmp	r3, r2
 80095e2:	d90a      	bls.n	80095fa <USBD_LL_DataOutStage+0x2e>
      {
        pep->rem_length -= pep->maxpacket;
 80095e4:	1a9b      	subs	r3, r3, r2

        (void)USBD_CtlContinueRx(pdev, pdata, MIN(pep->rem_length, pep->maxpacket));
 80095e6:	429a      	cmp	r2, r3
        pep->rem_length -= pep->maxpacket;
 80095e8:	f8c0 315c 	str.w	r3, [r0, #348]	@ 0x15c
        (void)USBD_CtlContinueRx(pdev, pdata, MIN(pep->rem_length, pep->maxpacket));
 80095ec:	bf28      	it	cs
 80095ee:	461a      	movcs	r2, r3
 80095f0:	4631      	mov	r1, r6
 80095f2:	f000 fc9e 	bl	8009f32 <USBD_CtlContinueRx>
      }
    }
  }

  return USBD_OK;
}
 80095f6:	2000      	movs	r0, #0
 80095f8:	bd70      	pop	{r4, r5, r6, pc}
          if (pdev->dev_state == USBD_STATE_CONFIGURED)
 80095fa:	f890 329c 	ldrb.w	r3, [r0, #668]	@ 0x29c
 80095fe:	2b03      	cmp	r3, #3
 8009600:	d106      	bne.n	8009610 <USBD_LL_DataOutStage+0x44>
            if (pdev->pClass[idx]->EP0_RxReady != NULL)
 8009602:	f8d0 32b8 	ldr.w	r3, [r0, #696]	@ 0x2b8
 8009606:	691b      	ldr	r3, [r3, #16]
 8009608:	b113      	cbz	r3, 8009610 <USBD_LL_DataOutStage+0x44>
              pdev->classId = idx;
 800960a:	f8c0 12d4 	str.w	r1, [r0, #724]	@ 0x2d4
              pdev->pClass[idx]->EP0_RxReady(pdev);
 800960e:	4798      	blx	r3
        (void)USBD_CtlSendStatus(pdev);
 8009610:	4620      	mov	r0, r4
 8009612:	f000 fc96 	bl	8009f42 <USBD_CtlSendStatus>
 8009616:	e7ee      	b.n	80095f6 <USBD_LL_DataOutStage+0x2a>
      if (pdev->dev_state == USBD_STATE_CONFIGURED)
 8009618:	f890 329c 	ldrb.w	r3, [r0, #668]	@ 0x29c
 800961c:	2b03      	cmp	r3, #3
 800961e:	d1ea      	bne.n	80095f6 <USBD_LL_DataOutStage+0x2a>
        if (pdev->pClass[idx]->DataOut != NULL)
 8009620:	f8d0 32b8 	ldr.w	r3, [r0, #696]	@ 0x2b8
 8009624:	699b      	ldr	r3, [r3, #24]
 8009626:	2b00      	cmp	r3, #0
 8009628:	d0e5      	beq.n	80095f6 <USBD_LL_DataOutStage+0x2a>
          pdev->classId = idx;
 800962a:	2200      	movs	r2, #0
}
 800962c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
          pdev->classId = idx;
 8009630:	f8c0 22d4 	str.w	r2, [r0, #724]	@ 0x2d4
          ret = (USBD_StatusTypeDef)pdev->pClass[idx]->DataOut(pdev, epnum);
 8009634:	4718      	bx	r3

08009636 <USBD_LL_DataInStage>:
  * @param  pdata: data pointer
  * @retval status
  */
USBD_StatusTypeDef USBD_LL_DataInStage(USBD_HandleTypeDef *pdev,
                                       uint8_t epnum, uint8_t *pdata)
{
 8009636:	b570      	push	{r4, r5, r6, lr}
 8009638:	4604      	mov	r4, r0
 800963a:	4616      	mov	r6, r2
  USBD_EndpointTypeDef *pep;
  USBD_StatusTypeDef ret;
  uint8_t idx;

  if (epnum == 0U)
 800963c:	460d      	mov	r5, r1
 800963e:	2900      	cmp	r1, #0
 8009640:	d13d      	bne.n	80096be <USBD_LL_DataInStage+0x88>
  {
    pep = &pdev->ep_in[0];

    if (pdev->ep0_state == USBD_EP0_DATA_IN)
 8009642:	f8d0 3294 	ldr.w	r3, [r0, #660]	@ 0x294
 8009646:	2b02      	cmp	r3, #2
 8009648:	d10e      	bne.n	8009668 <USBD_LL_DataInStage+0x32>
    {
      if (pep->rem_length > pep->maxpacket)
 800964a:	e9d0 3207 	ldrd	r3, r2, [r0, #28]
 800964e:	4293      	cmp	r3, r2
 8009650:	d912      	bls.n	8009678 <USBD_LL_DataInStage+0x42>
      {
        pep->rem_length -= pep->maxpacket;
 8009652:	1a9a      	subs	r2, r3, r2
 8009654:	61c2      	str	r2, [r0, #28]

        (void)USBD_CtlContinueSendData(pdev, pdata, pep->rem_length);
 8009656:	4631      	mov	r1, r6
 8009658:	f000 fc63 	bl	8009f22 <USBD_CtlContinueSendData>
        {
          (void)USBD_CtlContinueSendData(pdev, NULL, 0U);
          pdev->ep0_data_len = 0U;

          /* Prepare endpoint for premature end of transfer */
          (void)USBD_LL_PrepareReceive(pdev, 0U, NULL, 0U);
 800965c:	462b      	mov	r3, r5
 800965e:	462a      	mov	r2, r5
 8009660:	4629      	mov	r1, r5
 8009662:	4620      	mov	r0, r4
 8009664:	f7f8 f9e7 	bl	8001a36 <USBD_LL_PrepareReceive>
          (void)USBD_CtlReceiveStatus(pdev);
        }
      }
    }

    if (pdev->dev_test_mode != 0U)
 8009668:	f894 32a0 	ldrb.w	r3, [r4, #672]	@ 0x2a0
 800966c:	b113      	cbz	r3, 8009674 <USBD_LL_DataInStage+0x3e>
    {
      (void)USBD_RunTestMode(pdev);
      pdev->dev_test_mode = 0U;
 800966e:	2300      	movs	r3, #0
 8009670:	f884 32a0 	strb.w	r3, [r4, #672]	@ 0x2a0
      }
    }
  }

  return USBD_OK;
}
 8009674:	2000      	movs	r0, #0
 8009676:	bd70      	pop	{r4, r5, r6, pc}
        if ((pep->maxpacket == pep->rem_length) &&
 8009678:	d10c      	bne.n	8009694 <USBD_LL_DataInStage+0x5e>
            (pep->total_length >= pep->maxpacket) &&
 800967a:	6982      	ldr	r2, [r0, #24]
        if ((pep->maxpacket == pep->rem_length) &&
 800967c:	4293      	cmp	r3, r2
 800967e:	d809      	bhi.n	8009694 <USBD_LL_DataInStage+0x5e>
            (pep->total_length >= pep->maxpacket) &&
 8009680:	f8d0 3298 	ldr.w	r3, [r0, #664]	@ 0x298
 8009684:	429a      	cmp	r2, r3
 8009686:	d205      	bcs.n	8009694 <USBD_LL_DataInStage+0x5e>
          (void)USBD_CtlContinueSendData(pdev, NULL, 0U);
 8009688:	460a      	mov	r2, r1
 800968a:	f000 fc4a 	bl	8009f22 <USBD_CtlContinueSendData>
          pdev->ep0_data_len = 0U;
 800968e:	f8c4 5298 	str.w	r5, [r4, #664]	@ 0x298
 8009692:	e7e3      	b.n	800965c <USBD_LL_DataInStage+0x26>
          if (pdev->dev_state == USBD_STATE_CONFIGURED)
 8009694:	f894 329c 	ldrb.w	r3, [r4, #668]	@ 0x29c
 8009698:	2b03      	cmp	r3, #3
 800969a:	d108      	bne.n	80096ae <USBD_LL_DataInStage+0x78>
            if (pdev->pClass[0]->EP0_TxSent != NULL)
 800969c:	f8d4 32b8 	ldr.w	r3, [r4, #696]	@ 0x2b8
 80096a0:	68db      	ldr	r3, [r3, #12]
 80096a2:	b123      	cbz	r3, 80096ae <USBD_LL_DataInStage+0x78>
              pdev->classId = 0U;
 80096a4:	2200      	movs	r2, #0
 80096a6:	f8c4 22d4 	str.w	r2, [r4, #724]	@ 0x2d4
              pdev->pClass[0]->EP0_TxSent(pdev);
 80096aa:	4620      	mov	r0, r4
 80096ac:	4798      	blx	r3
          (void)USBD_LL_StallEP(pdev, 0x80U);
 80096ae:	2180      	movs	r1, #128	@ 0x80
 80096b0:	4620      	mov	r0, r4
 80096b2:	f7f8 f99c 	bl	80019ee <USBD_LL_StallEP>
          (void)USBD_CtlReceiveStatus(pdev);
 80096b6:	4620      	mov	r0, r4
 80096b8:	f000 fc4e 	bl	8009f58 <USBD_CtlReceiveStatus>
 80096bc:	e7d4      	b.n	8009668 <USBD_LL_DataInStage+0x32>
      if (pdev->dev_state == USBD_STATE_CONFIGURED)
 80096be:	f890 329c 	ldrb.w	r3, [r0, #668]	@ 0x29c
 80096c2:	2b03      	cmp	r3, #3
 80096c4:	d1d6      	bne.n	8009674 <USBD_LL_DataInStage+0x3e>
        if (pdev->pClass[idx]->DataIn != NULL)
 80096c6:	f8d0 32b8 	ldr.w	r3, [r0, #696]	@ 0x2b8
 80096ca:	695b      	ldr	r3, [r3, #20]
 80096cc:	2b00      	cmp	r3, #0
 80096ce:	d0d1      	beq.n	8009674 <USBD_LL_DataInStage+0x3e>
          pdev->classId = idx;
 80096d0:	2200      	movs	r2, #0
}
 80096d2:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
          pdev->classId = idx;
 80096d6:	f8c0 22d4 	str.w	r2, [r0, #724]	@ 0x2d4
          ret = (USBD_StatusTypeDef)pdev->pClass[idx]->DataIn(pdev, epnum);
 80096da:	4718      	bx	r3

080096dc <USBD_LL_Reset>:
  *         Handle Reset event
  * @param  pdev: device instance
  * @retval status
  */
USBD_StatusTypeDef USBD_LL_Reset(USBD_HandleTypeDef *pdev)
{
 80096dc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  USBD_StatusTypeDef ret = USBD_OK;

  /* Upon Reset call user call back */
  pdev->dev_state = USBD_STATE_DEFAULT;
 80096de:	2301      	movs	r3, #1
 80096e0:	f880 329c 	strb.w	r3, [r0, #668]	@ 0x29c
      }
    }
  }
#else

  if (pdev->pClass[0] != NULL)
 80096e4:	f8d0 32b8 	ldr.w	r3, [r0, #696]	@ 0x2b8
  pdev->ep0_state = USBD_EP0_IDLE;
 80096e8:	2100      	movs	r1, #0
{
 80096ea:	4604      	mov	r4, r0
  pdev->ep0_state = USBD_EP0_IDLE;
 80096ec:	f8c0 1294 	str.w	r1, [r0, #660]	@ 0x294
  pdev->dev_config = 0U;
 80096f0:	6041      	str	r1, [r0, #4]
  pdev->dev_remote_wakeup = 0U;
 80096f2:	f8c0 12a4 	str.w	r1, [r0, #676]	@ 0x2a4
  pdev->dev_test_mode = 0U;
 80096f6:	f880 12a0 	strb.w	r1, [r0, #672]	@ 0x2a0
  if (pdev->pClass[0] != NULL)
 80096fa:	b9b3      	cbnz	r3, 800972a <USBD_LL_Reset+0x4e>
  USBD_StatusTypeDef ret = USBD_OK;
 80096fc:	2600      	movs	r6, #0
    }
  }
#endif /* USE_USBD_COMPOSITE */

  /* Open EP0 OUT */
  (void)USBD_LL_OpenEP(pdev, 0x00U, USBD_EP_TYPE_CTRL, USB_MAX_EP0_SIZE);
 80096fe:	2200      	movs	r2, #0
  pdev->ep_out[0x00U & 0xFU].is_used = 1U;

  pdev->ep_out[0].maxpacket = USB_MAX_EP0_SIZE;
 8009700:	2540      	movs	r5, #64	@ 0x40
  (void)USBD_LL_OpenEP(pdev, 0x00U, USBD_EP_TYPE_CTRL, USB_MAX_EP0_SIZE);
 8009702:	4611      	mov	r1, r2
  pdev->ep_out[0x00U & 0xFU].is_used = 1U;
 8009704:	2701      	movs	r7, #1
  (void)USBD_LL_OpenEP(pdev, 0x00U, USBD_EP_TYPE_CTRL, USB_MAX_EP0_SIZE);
 8009706:	2340      	movs	r3, #64	@ 0x40
 8009708:	4620      	mov	r0, r4
 800970a:	f7f8 f95b 	bl	80019c4 <USBD_LL_OpenEP>
  pdev->ep_out[0x00U & 0xFU].is_used = 1U;
 800970e:	f8a4 7164 	strh.w	r7, [r4, #356]	@ 0x164
  pdev->ep_out[0].maxpacket = USB_MAX_EP0_SIZE;
 8009712:	f8c4 5160 	str.w	r5, [r4, #352]	@ 0x160

  /* Open EP0 IN */
  (void)USBD_LL_OpenEP(pdev, 0x80U, USBD_EP_TYPE_CTRL, USB_MAX_EP0_SIZE);
 8009716:	462b      	mov	r3, r5
 8009718:	2200      	movs	r2, #0
 800971a:	2180      	movs	r1, #128	@ 0x80
 800971c:	4620      	mov	r0, r4
 800971e:	f7f8 f951 	bl	80019c4 <USBD_LL_OpenEP>
  pdev->ep_in[0x80U & 0xFU].is_used = 1U;
 8009722:	84a7      	strh	r7, [r4, #36]	@ 0x24

  pdev->ep_in[0].maxpacket = USB_MAX_EP0_SIZE;
 8009724:	6225      	str	r5, [r4, #32]

  return ret;
}
 8009726:	4630      	mov	r0, r6
 8009728:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    if (pdev->pClass[0]->DeInit != NULL)
 800972a:	685b      	ldr	r3, [r3, #4]
 800972c:	2b00      	cmp	r3, #0
 800972e:	d0e5      	beq.n	80096fc <USBD_LL_Reset+0x20>
      if (pdev->pClass[0]->DeInit(pdev, (uint8_t)pdev->dev_config) != USBD_OK)
 8009730:	4798      	blx	r3
 8009732:	2800      	cmp	r0, #0
 8009734:	d0e2      	beq.n	80096fc <USBD_LL_Reset+0x20>
        ret = USBD_FAIL;
 8009736:	2603      	movs	r6, #3
 8009738:	e7e1      	b.n	80096fe <USBD_LL_Reset+0x22>

0800973a <USBD_LL_SetSpeed>:
  * @retval status
  */
USBD_StatusTypeDef USBD_LL_SetSpeed(USBD_HandleTypeDef *pdev,
                                    USBD_SpeedTypeDef speed)
{
  pdev->dev_speed = speed;
 800973a:	7401      	strb	r1, [r0, #16]

  return USBD_OK;
}
 800973c:	2000      	movs	r0, #0
 800973e:	4770      	bx	lr

08009740 <USBD_LL_Suspend>:
  * @param  pdev: device instance
  * @retval status
  */
USBD_StatusTypeDef USBD_LL_Suspend(USBD_HandleTypeDef *pdev)
{
  if (pdev->dev_state != USBD_STATE_SUSPENDED)
 8009740:	f890 329c 	ldrb.w	r3, [r0, #668]	@ 0x29c
 8009744:	2b04      	cmp	r3, #4
  {
    pdev->dev_old_state = pdev->dev_state;
 8009746:	bf1e      	ittt	ne
 8009748:	f890 329c 	ldrbne.w	r3, [r0, #668]	@ 0x29c
 800974c:	b2db      	uxtbne	r3, r3
 800974e:	f880 329d 	strbne.w	r3, [r0, #669]	@ 0x29d
  }

  pdev->dev_state = USBD_STATE_SUSPENDED;
 8009752:	2304      	movs	r3, #4
 8009754:	f880 329c 	strb.w	r3, [r0, #668]	@ 0x29c

  return USBD_OK;
}
 8009758:	2000      	movs	r0, #0
 800975a:	4770      	bx	lr

0800975c <USBD_LL_Resume>:
  * @param  pdev: device instance
  * @retval status
  */
USBD_StatusTypeDef USBD_LL_Resume(USBD_HandleTypeDef *pdev)
{
  if (pdev->dev_state == USBD_STATE_SUSPENDED)
 800975c:	f890 329c 	ldrb.w	r3, [r0, #668]	@ 0x29c
 8009760:	2b04      	cmp	r3, #4
  {
    pdev->dev_state = pdev->dev_old_state;
 8009762:	bf02      	ittt	eq
 8009764:	f890 329d 	ldrbeq.w	r3, [r0, #669]	@ 0x29d
 8009768:	b2db      	uxtbeq	r3, r3
 800976a:	f880 329c 	strbeq.w	r3, [r0, #668]	@ 0x29c
  }

  return USBD_OK;
}
 800976e:	2000      	movs	r0, #0
 8009770:	4770      	bx	lr

08009772 <USBD_LL_SOF>:
  *         Handle SOF event
  * @param  pdev: device instance
  * @retval status
  */
USBD_StatusTypeDef USBD_LL_SOF(USBD_HandleTypeDef *pdev)
{
 8009772:	b508      	push	{r3, lr}
  /* The SOF event can be distributed for all classes that support it */
  if (pdev->dev_state == USBD_STATE_CONFIGURED)
 8009774:	f890 229c 	ldrb.w	r2, [r0, #668]	@ 0x29c
 8009778:	2a03      	cmp	r2, #3
 800977a:	d105      	bne.n	8009788 <USBD_LL_SOF+0x16>
          }
        }
      }
    }
#else
    if (pdev->pClass[0] != NULL)
 800977c:	f8d0 32b8 	ldr.w	r3, [r0, #696]	@ 0x2b8
 8009780:	b113      	cbz	r3, 8009788 <USBD_LL_SOF+0x16>
    {
      if (pdev->pClass[0]->SOF != NULL)
 8009782:	69db      	ldr	r3, [r3, #28]
 8009784:	b103      	cbz	r3, 8009788 <USBD_LL_SOF+0x16>
      {
        (void)pdev->pClass[0]->SOF(pdev);
 8009786:	4798      	blx	r3
    }
#endif /* USE_USBD_COMPOSITE */
  }

  return USBD_OK;
}
 8009788:	2000      	movs	r0, #0
 800978a:	bd08      	pop	{r3, pc}

0800978c <USBD_LL_IsoINIncomplete>:
  * @retval status
  */
USBD_StatusTypeDef USBD_LL_IsoINIncomplete(USBD_HandleTypeDef *pdev,
                                           uint8_t epnum)
{
  if (pdev->pClass[pdev->classId] == NULL)
 800978c:	f8d0 22d4 	ldr.w	r2, [r0, #724]	@ 0x2d4
 8009790:	32ae      	adds	r2, #174	@ 0xae
{
 8009792:	b508      	push	{r3, lr}
  if (pdev->pClass[pdev->classId] == NULL)
 8009794:	f850 2022 	ldr.w	r2, [r0, r2, lsl #2]
 8009798:	b14a      	cbz	r2, 80097ae <USBD_LL_IsoINIncomplete+0x22>
  {
    return USBD_FAIL;
  }

  if (pdev->dev_state == USBD_STATE_CONFIGURED)
 800979a:	f890 329c 	ldrb.w	r3, [r0, #668]	@ 0x29c
 800979e:	2b03      	cmp	r3, #3
 80097a0:	d101      	bne.n	80097a6 <USBD_LL_IsoINIncomplete+0x1a>
  {
    if (pdev->pClass[pdev->classId]->IsoINIncomplete != NULL)
 80097a2:	6a13      	ldr	r3, [r2, #32]
 80097a4:	b90b      	cbnz	r3, 80097aa <USBD_LL_IsoINIncomplete+0x1e>
    {
      (void)pdev->pClass[pdev->classId]->IsoINIncomplete(pdev, epnum);
    }
  }

  return USBD_OK;
 80097a6:	2000      	movs	r0, #0
}
 80097a8:	bd08      	pop	{r3, pc}
      (void)pdev->pClass[pdev->classId]->IsoINIncomplete(pdev, epnum);
 80097aa:	4798      	blx	r3
 80097ac:	e7fb      	b.n	80097a6 <USBD_LL_IsoINIncomplete+0x1a>
    return USBD_FAIL;
 80097ae:	2003      	movs	r0, #3
 80097b0:	e7fa      	b.n	80097a8 <USBD_LL_IsoINIncomplete+0x1c>

080097b2 <USBD_LL_IsoOUTIncomplete>:
  * @retval status
  */
USBD_StatusTypeDef USBD_LL_IsoOUTIncomplete(USBD_HandleTypeDef *pdev,
                                            uint8_t epnum)
{
  if (pdev->pClass[pdev->classId] == NULL)
 80097b2:	f8d0 22d4 	ldr.w	r2, [r0, #724]	@ 0x2d4
 80097b6:	32ae      	adds	r2, #174	@ 0xae
{
 80097b8:	b508      	push	{r3, lr}
  if (pdev->pClass[pdev->classId] == NULL)
 80097ba:	f850 2022 	ldr.w	r2, [r0, r2, lsl #2]
 80097be:	b14a      	cbz	r2, 80097d4 <USBD_LL_IsoOUTIncomplete+0x22>
  {
    return USBD_FAIL;
  }

  if (pdev->dev_state == USBD_STATE_CONFIGURED)
 80097c0:	f890 329c 	ldrb.w	r3, [r0, #668]	@ 0x29c
 80097c4:	2b03      	cmp	r3, #3
 80097c6:	d101      	bne.n	80097cc <USBD_LL_IsoOUTIncomplete+0x1a>
  {
    if (pdev->pClass[pdev->classId]->IsoOUTIncomplete != NULL)
 80097c8:	6a53      	ldr	r3, [r2, #36]	@ 0x24
 80097ca:	b90b      	cbnz	r3, 80097d0 <USBD_LL_IsoOUTIncomplete+0x1e>
    {
      (void)pdev->pClass[pdev->classId]->IsoOUTIncomplete(pdev, epnum);
    }
  }

  return USBD_OK;
 80097cc:	2000      	movs	r0, #0
}
 80097ce:	bd08      	pop	{r3, pc}
      (void)pdev->pClass[pdev->classId]->IsoOUTIncomplete(pdev, epnum);
 80097d0:	4798      	blx	r3
 80097d2:	e7fb      	b.n	80097cc <USBD_LL_IsoOUTIncomplete+0x1a>
    return USBD_FAIL;
 80097d4:	2003      	movs	r0, #3
 80097d6:	e7fa      	b.n	80097ce <USBD_LL_IsoOUTIncomplete+0x1c>

080097d8 <USBD_LL_DevConnected>:
  * @brief  USBD_LL_DevConnected
  *         Handle device connection event
  * @param  pdev: device instance
  * @retval status
  */
USBD_StatusTypeDef USBD_LL_DevConnected(USBD_HandleTypeDef *pdev)
 80097d8:	2000      	movs	r0, #0
 80097da:	4770      	bx	lr

080097dc <USBD_LL_DevDisconnected>:
USBD_StatusTypeDef USBD_LL_DevDisconnected(USBD_HandleTypeDef *pdev)
{
  USBD_StatusTypeDef   ret = USBD_OK;

  /* Free Class Resources */
  pdev->dev_state = USBD_STATE_DEFAULT;
 80097dc:	2201      	movs	r2, #1
{
 80097de:	b508      	push	{r3, lr}
  pdev->dev_state = USBD_STATE_DEFAULT;
 80097e0:	f880 229c 	strb.w	r2, [r0, #668]	@ 0x29c
        }
      }
    }
  }
#else
  if (pdev->pClass[0] != NULL)
 80097e4:	f8d0 22b8 	ldr.w	r2, [r0, #696]	@ 0x2b8
 80097e8:	b90a      	cbnz	r2, 80097ee <USBD_LL_DevDisconnected+0x12>
  USBD_StatusTypeDef   ret = USBD_OK;
 80097ea:	2000      	movs	r0, #0
    }
  }
#endif /* USE_USBD_COMPOSITE */

  return ret;
}
 80097ec:	bd08      	pop	{r3, pc}
    if (pdev->pClass[0]->DeInit(pdev, (uint8_t)pdev->dev_config) != 0U)
 80097ee:	6852      	ldr	r2, [r2, #4]
 80097f0:	7901      	ldrb	r1, [r0, #4]
 80097f2:	4790      	blx	r2
 80097f4:	2800      	cmp	r0, #0
 80097f6:	d0f8      	beq.n	80097ea <USBD_LL_DevDisconnected+0xe>
      ret = USBD_FAIL;
 80097f8:	2003      	movs	r0, #3
 80097fa:	e7f7      	b.n	80097ec <USBD_LL_DevDisconnected+0x10>

080097fc <USBD_CoreFindIF>:
  UNUSED(pdev);
  UNUSED(index);

  return 0x00U;
#endif /* USE_USBD_COMPOSITE */
}
 80097fc:	2000      	movs	r0, #0
 80097fe:	4770      	bx	lr

08009800 <USBD_CoreFindEP>:
  *         return the class index relative to the selected endpoint
  * @param  pdev: device instance
  * @param  index : selected endpoint number
  * @retval index of the class using the selected endpoint number. 0xFF if no class found.
  */
uint8_t USBD_CoreFindEP(USBD_HandleTypeDef *pdev, uint8_t index)
 8009800:	2000      	movs	r0, #0
 8009802:	4770      	bx	lr

08009804 <USBD_GetEpDesc>:
  * @param  pConfDesc:  pointer to Bos descriptor
  * @param  EpAddr:  endpoint address
  * @retval pointer to video endpoint descriptor
  */
void *USBD_GetEpDesc(uint8_t *pConfDesc, uint8_t EpAddr)
{
 8009804:	b510      	push	{r4, lr}
  USBD_DescHeaderTypeDef *pdesc = (USBD_DescHeaderTypeDef *)(void *)pConfDesc;
  USBD_ConfigDescTypeDef *desc = (USBD_ConfigDescTypeDef *)(void *)pConfDesc;
  USBD_EpDescTypeDef *pEpDesc = NULL;
  uint16_t ptr;

  if (desc->wTotalLength > desc->bLength)
 8009806:	8842      	ldrh	r2, [r0, #2]
 8009808:	7803      	ldrb	r3, [r0, #0]
 800980a:	429a      	cmp	r2, r3
 800980c:	d801      	bhi.n	8009812 <USBD_GetEpDesc+0xe>
  USBD_EpDescTypeDef *pEpDesc = NULL;
 800980e:	2000      	movs	r0, #0
      }
    }
  }

  return (void *)pEpDesc;
}
 8009810:	bd10      	pop	{r4, pc}
  */
USBD_DescHeaderTypeDef *USBD_GetNextDesc(uint8_t *pbuf, uint16_t *ptr)
{
  USBD_DescHeaderTypeDef *pnext = (USBD_DescHeaderTypeDef *)(void *)pbuf;

  *ptr += pnext->bLength;
 8009812:	7804      	ldrb	r4, [r0, #0]
  pnext = (USBD_DescHeaderTypeDef *)(void *)(pbuf + pnext->bLength);
 8009814:	4420      	add	r0, r4
  *ptr += pnext->bLength;
 8009816:	4423      	add	r3, r4
      if (pdesc->bDescriptorType == USB_DESC_TYPE_ENDPOINT)
 8009818:	7844      	ldrb	r4, [r0, #1]
 800981a:	2c05      	cmp	r4, #5
  *ptr += pnext->bLength;
 800981c:	b29b      	uxth	r3, r3
      if (pdesc->bDescriptorType == USB_DESC_TYPE_ENDPOINT)
 800981e:	d1f4      	bne.n	800980a <USBD_GetEpDesc+0x6>
        if (pEpDesc->bEndpointAddress == EpAddr)
 8009820:	7884      	ldrb	r4, [r0, #2]
 8009822:	428c      	cmp	r4, r1
 8009824:	d1f1      	bne.n	800980a <USBD_GetEpDesc+0x6>
 8009826:	e7f3      	b.n	8009810 <USBD_GetEpDesc+0xc>

08009828 <USBD_CtlError.constprop.0>:
  *         Handle USB low level Error
  * @param  pdev: device instance
  * @param  req: usb request
  * @retval None
  */
void USBD_CtlError(USBD_HandleTypeDef *pdev, USBD_SetupReqTypedef *req)
 8009828:	b510      	push	{r4, lr}
{
  UNUSED(req);

  (void)USBD_LL_StallEP(pdev, 0x80U);
 800982a:	2180      	movs	r1, #128	@ 0x80
void USBD_CtlError(USBD_HandleTypeDef *pdev, USBD_SetupReqTypedef *req)
 800982c:	4604      	mov	r4, r0
  (void)USBD_LL_StallEP(pdev, 0x80U);
 800982e:	f7f8 f8de 	bl	80019ee <USBD_LL_StallEP>
  (void)USBD_LL_StallEP(pdev, 0U);
 8009832:	4620      	mov	r0, r4
 8009834:	2100      	movs	r1, #0
}
 8009836:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  (void)USBD_LL_StallEP(pdev, 0U);
 800983a:	f7f8 b8d8 	b.w	80019ee <USBD_LL_StallEP>
	...

08009840 <USBD_StdDevReq>:
{
 8009840:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8009842:	780b      	ldrb	r3, [r1, #0]
 8009844:	f003 0360 	and.w	r3, r3, #96	@ 0x60
  switch (req->bmRequest & USB_REQ_TYPE_MASK)
 8009848:	2b20      	cmp	r3, #32
{
 800984a:	4604      	mov	r4, r0
 800984c:	460d      	mov	r5, r1
  switch (req->bmRequest & USB_REQ_TYPE_MASK)
 800984e:	d009      	beq.n	8009864 <USBD_StdDevReq+0x24>
 8009850:	2b40      	cmp	r3, #64	@ 0x40
 8009852:	d007      	beq.n	8009864 <USBD_StdDevReq+0x24>
 8009854:	b193      	cbz	r3, 800987c <USBD_StdDevReq+0x3c>
      USBD_CtlError(pdev, req);
 8009856:	4620      	mov	r0, r4
 8009858:	f7ff ffe6 	bl	8009828 <USBD_CtlError.constprop.0>
  USBD_StatusTypeDef ret = USBD_OK;
 800985c:	2500      	movs	r5, #0
}
 800985e:	4628      	mov	r0, r5
 8009860:	b002      	add	sp, #8
 8009862:	bd70      	pop	{r4, r5, r6, pc}
      ret = (USBD_StatusTypeDef)pdev->pClass[pdev->classId]->Setup(pdev, req);
 8009864:	f8d4 32d4 	ldr.w	r3, [r4, #724]	@ 0x2d4
 8009868:	33ae      	adds	r3, #174	@ 0xae
 800986a:	4629      	mov	r1, r5
 800986c:	f854 3023 	ldr.w	r3, [r4, r3, lsl #2]
 8009870:	689b      	ldr	r3, [r3, #8]
 8009872:	4620      	mov	r0, r4
}
 8009874:	b002      	add	sp, #8
 8009876:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
      ret = (USBD_StatusTypeDef)pdev->pClass[pdev->classId]->Setup(pdev, req);
 800987a:	4718      	bx	r3
      switch (req->bRequest)
 800987c:	784b      	ldrb	r3, [r1, #1]
 800987e:	2b09      	cmp	r3, #9
 8009880:	d8e9      	bhi.n	8009856 <USBD_StdDevReq+0x16>
 8009882:	a201      	add	r2, pc, #4	@ (adr r2, 8009888 <USBD_StdDevReq+0x48>)
 8009884:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8009888:	08009aa9 	.word	0x08009aa9
 800988c:	08009aed 	.word	0x08009aed
 8009890:	08009857 	.word	0x08009857
 8009894:	08009ad1 	.word	0x08009ad1
 8009898:	08009857 	.word	0x08009857
 800989c:	080099a3 	.word	0x080099a3
 80098a0:	080098b1 	.word	0x080098b1
 80098a4:	08009857 	.word	0x08009857
 80098a8:	08009a7d 	.word	0x08009a7d
 80098ac:	080099e5 	.word	0x080099e5
  uint16_t len = 0U;
 80098b0:	2300      	movs	r3, #0
 80098b2:	f8ad 3006 	strh.w	r3, [sp, #6]
  switch (req->wValue >> 8)
 80098b6:	884b      	ldrh	r3, [r1, #2]
 80098b8:	0a1a      	lsrs	r2, r3, #8
 80098ba:	3a01      	subs	r2, #1
 80098bc:	2a06      	cmp	r2, #6
 80098be:	d8ca      	bhi.n	8009856 <USBD_StdDevReq+0x16>
 80098c0:	a101      	add	r1, pc, #4	@ (adr r1, 80098c8 <USBD_StdDevReq+0x88>)
 80098c2:	f851 f022 	ldr.w	pc, [r1, r2, lsl #2]
 80098c6:	bf00      	nop
 80098c8:	080098e5 	.word	0x080098e5
 80098cc:	08009917 	.word	0x08009917
 80098d0:	08009931 	.word	0x08009931
 80098d4:	08009857 	.word	0x08009857
 80098d8:	08009857 	.word	0x08009857
 80098dc:	08009975 	.word	0x08009975
 80098e0:	0800998b 	.word	0x0800998b
      pbuf = pdev->pDesc->GetDeviceDescriptor(pdev->dev_speed, &len);
 80098e4:	f8d0 32b4 	ldr.w	r3, [r0, #692]	@ 0x2b4
 80098e8:	681b      	ldr	r3, [r3, #0]
            pbuf = pdev->pDesc->GetInterfaceStrDescriptor(pdev->dev_speed, &len);
 80098ea:	7c20      	ldrb	r0, [r4, #16]
 80098ec:	f10d 0106 	add.w	r1, sp, #6
 80098f0:	4798      	blx	r3
  if (req->wLength != 0U)
 80098f2:	88ea      	ldrh	r2, [r5, #6]
 80098f4:	2a00      	cmp	r2, #0
 80098f6:	f000 80a4 	beq.w	8009a42 <USBD_StdDevReq+0x202>
    if (len != 0U)
 80098fa:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 80098fe:	2b00      	cmp	r3, #0
 8009900:	d0a9      	beq.n	8009856 <USBD_StdDevReq+0x16>
      len = MIN(len, req->wLength);
 8009902:	429a      	cmp	r2, r3
 8009904:	bf28      	it	cs
 8009906:	461a      	movcs	r2, r3
 8009908:	f8ad 2006 	strh.w	r2, [sp, #6]
      (void)USBD_CtlSendData(pdev, pbuf, len);
 800990c:	4601      	mov	r1, r0
      (void)USBD_CtlSendData(pdev, (uint8_t *)&pdev->dev_config_status, 2U);
 800990e:	4620      	mov	r0, r4
 8009910:	f000 fafa 	bl	8009f08 <USBD_CtlSendData>
      break;
 8009914:	e7a2      	b.n	800985c <USBD_StdDevReq+0x1c>
      if (pdev->dev_speed == USBD_SPEED_HIGH)
 8009916:	7c02      	ldrb	r2, [r0, #16]
          pbuf = (uint8_t *)pdev->pClass[0]->GetHSConfigDescriptor(&len);
 8009918:	f8d0 32b8 	ldr.w	r3, [r0, #696]	@ 0x2b8
      if (pdev->dev_speed == USBD_SPEED_HIGH)
 800991c:	b932      	cbnz	r2, 800992c <USBD_StdDevReq+0xec>
          pbuf = (uint8_t *)pdev->pClass[0]->GetHSConfigDescriptor(&len);
 800991e:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
          pbuf = (uint8_t *)pdev->pClass[0]->GetFSConfigDescriptor(&len);
 8009920:	f10d 0006 	add.w	r0, sp, #6
 8009924:	4798      	blx	r3
        pbuf[1] = USB_DESC_TYPE_CONFIGURATION;
 8009926:	2302      	movs	r3, #2
        pbuf[1] = USB_DESC_TYPE_OTHER_SPEED_CONFIGURATION;
 8009928:	7043      	strb	r3, [r0, #1]
  if (err != 0U)
 800992a:	e7e2      	b.n	80098f2 <USBD_StdDevReq+0xb2>
          pbuf = (uint8_t *)pdev->pClass[0]->GetFSConfigDescriptor(&len);
 800992c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800992e:	e7f7      	b.n	8009920 <USBD_StdDevReq+0xe0>
      switch ((uint8_t)(req->wValue))
 8009930:	b2db      	uxtb	r3, r3
 8009932:	2b05      	cmp	r3, #5
 8009934:	d88f      	bhi.n	8009856 <USBD_StdDevReq+0x16>
 8009936:	e8df f003 	tbb	[pc, r3]
 800993a:	0903      	.short	0x0903
 800993c:	1915110d 	.word	0x1915110d
          if (pdev->pDesc->GetLangIDStrDescriptor != NULL)
 8009940:	f8d0 32b4 	ldr.w	r3, [r0, #692]	@ 0x2b4
 8009944:	685b      	ldr	r3, [r3, #4]
          if (pdev->pDesc->GetInterfaceStrDescriptor != NULL)
 8009946:	2b00      	cmp	r3, #0
 8009948:	d1cf      	bne.n	80098ea <USBD_StdDevReq+0xaa>
 800994a:	e784      	b.n	8009856 <USBD_StdDevReq+0x16>
          if (pdev->pDesc->GetManufacturerStrDescriptor != NULL)
 800994c:	f8d0 32b4 	ldr.w	r3, [r0, #692]	@ 0x2b4
 8009950:	689b      	ldr	r3, [r3, #8]
 8009952:	e7f8      	b.n	8009946 <USBD_StdDevReq+0x106>
          if (pdev->pDesc->GetProductStrDescriptor != NULL)
 8009954:	f8d0 32b4 	ldr.w	r3, [r0, #692]	@ 0x2b4
 8009958:	68db      	ldr	r3, [r3, #12]
 800995a:	e7f4      	b.n	8009946 <USBD_StdDevReq+0x106>
          if (pdev->pDesc->GetSerialStrDescriptor != NULL)
 800995c:	f8d0 32b4 	ldr.w	r3, [r0, #692]	@ 0x2b4
 8009960:	691b      	ldr	r3, [r3, #16]
 8009962:	e7f0      	b.n	8009946 <USBD_StdDevReq+0x106>
          if (pdev->pDesc->GetConfigurationStrDescriptor != NULL)
 8009964:	f8d0 32b4 	ldr.w	r3, [r0, #692]	@ 0x2b4
 8009968:	695b      	ldr	r3, [r3, #20]
 800996a:	e7ec      	b.n	8009946 <USBD_StdDevReq+0x106>
          if (pdev->pDesc->GetInterfaceStrDescriptor != NULL)
 800996c:	f8d0 32b4 	ldr.w	r3, [r0, #692]	@ 0x2b4
 8009970:	699b      	ldr	r3, [r3, #24]
 8009972:	e7e8      	b.n	8009946 <USBD_StdDevReq+0x106>
      if (pdev->dev_speed == USBD_SPEED_HIGH)
 8009974:	7c03      	ldrb	r3, [r0, #16]
 8009976:	2b00      	cmp	r3, #0
 8009978:	f47f af6d 	bne.w	8009856 <USBD_StdDevReq+0x16>
          pbuf = (uint8_t *)pdev->pClass[0]->GetDeviceQualifierDescriptor(&len);
 800997c:	f8d0 32b8 	ldr.w	r3, [r0, #696]	@ 0x2b8
 8009980:	f10d 0006 	add.w	r0, sp, #6
 8009984:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8009986:	4798      	blx	r3
  if (err != 0U)
 8009988:	e7b3      	b.n	80098f2 <USBD_StdDevReq+0xb2>
      if (pdev->dev_speed == USBD_SPEED_HIGH)
 800998a:	7c03      	ldrb	r3, [r0, #16]
 800998c:	2b00      	cmp	r3, #0
 800998e:	f47f af62 	bne.w	8009856 <USBD_StdDevReq+0x16>
          pbuf = (uint8_t *)pdev->pClass[0]->GetOtherSpeedConfigDescriptor(&len);
 8009992:	f8d0 32b8 	ldr.w	r3, [r0, #696]	@ 0x2b8
 8009996:	f10d 0006 	add.w	r0, sp, #6
 800999a:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800999c:	4798      	blx	r3
        pbuf[1] = USB_DESC_TYPE_OTHER_SPEED_CONFIGURATION;
 800999e:	2307      	movs	r3, #7
 80099a0:	e7c2      	b.n	8009928 <USBD_StdDevReq+0xe8>
  if ((req->wIndex == 0U) && (req->wLength == 0U) && (req->wValue < 128U))
 80099a2:	888b      	ldrh	r3, [r1, #4]
 80099a4:	2b00      	cmp	r3, #0
 80099a6:	f47f af56 	bne.w	8009856 <USBD_StdDevReq+0x16>
 80099aa:	88cb      	ldrh	r3, [r1, #6]
 80099ac:	2b00      	cmp	r3, #0
 80099ae:	f47f af52 	bne.w	8009856 <USBD_StdDevReq+0x16>
 80099b2:	884d      	ldrh	r5, [r1, #2]
 80099b4:	2d7f      	cmp	r5, #127	@ 0x7f
 80099b6:	f63f af4e 	bhi.w	8009856 <USBD_StdDevReq+0x16>
    if (pdev->dev_state == USBD_STATE_CONFIGURED)
 80099ba:	f890 329c 	ldrb.w	r3, [r0, #668]	@ 0x29c
 80099be:	2b03      	cmp	r3, #3
 80099c0:	f43f af49 	beq.w	8009856 <USBD_StdDevReq+0x16>
    dev_addr = (uint8_t)(req->wValue) & 0x7FU;
 80099c4:	b2ed      	uxtb	r5, r5
      pdev->dev_address = dev_addr;
 80099c6:	f880 529e 	strb.w	r5, [r0, #670]	@ 0x29e
      (void)USBD_LL_SetUSBAddress(pdev, dev_addr);
 80099ca:	4629      	mov	r1, r5
 80099cc:	f7f8 f821 	bl	8001a12 <USBD_LL_SetUSBAddress>
      (void)USBD_CtlSendStatus(pdev);
 80099d0:	4620      	mov	r0, r4
 80099d2:	f000 fab6 	bl	8009f42 <USBD_CtlSendStatus>
      if (dev_addr != 0U)
 80099d6:	b11d      	cbz	r5, 80099e0 <USBD_StdDevReq+0x1a0>
        pdev->dev_state = USBD_STATE_ADDRESSED;
 80099d8:	2302      	movs	r3, #2
          pdev->dev_state = USBD_STATE_CONFIGURED;
 80099da:	f884 329c 	strb.w	r3, [r4, #668]	@ 0x29c
 80099de:	e73d      	b.n	800985c <USBD_StdDevReq+0x1c>
        pdev->dev_state = USBD_STATE_DEFAULT;
 80099e0:	2301      	movs	r3, #1
 80099e2:	e7fa      	b.n	80099da <USBD_StdDevReq+0x19a>
  cfgidx = (uint8_t)(req->wValue);
 80099e4:	7889      	ldrb	r1, [r1, #2]
 80099e6:	4d47      	ldr	r5, [pc, #284]	@ (8009b04 <USBD_StdDevReq+0x2c4>)
  if (cfgidx > USBD_MAX_NUM_CONFIGURATION)
 80099e8:	2901      	cmp	r1, #1
  cfgidx = (uint8_t)(req->wValue);
 80099ea:	7029      	strb	r1, [r5, #0]
  if (cfgidx > USBD_MAX_NUM_CONFIGURATION)
 80099ec:	d903      	bls.n	80099f6 <USBD_StdDevReq+0x1b6>
    USBD_CtlError(pdev, req);
 80099ee:	f7ff ff1b 	bl	8009828 <USBD_CtlError.constprop.0>
    return USBD_FAIL;
 80099f2:	2503      	movs	r5, #3
 80099f4:	e733      	b.n	800985e <USBD_StdDevReq+0x1e>
  switch (pdev->dev_state)
 80099f6:	f890 329c 	ldrb.w	r3, [r0, #668]	@ 0x29c
 80099fa:	2b02      	cmp	r3, #2
 80099fc:	b2de      	uxtb	r6, r3
 80099fe:	d008      	beq.n	8009a12 <USBD_StdDevReq+0x1d2>
 8009a00:	2e03      	cmp	r6, #3
 8009a02:	d017      	beq.n	8009a34 <USBD_StdDevReq+0x1f4>
      USBD_CtlError(pdev, req);
 8009a04:	f7ff ff10 	bl	8009828 <USBD_CtlError.constprop.0>
      (void)USBD_ClrClassConfig(pdev, cfgidx);
 8009a08:	7829      	ldrb	r1, [r5, #0]
 8009a0a:	4620      	mov	r0, r4
 8009a0c:	f7ff fda5 	bl	800955a <USBD_ClrClassConfig>
      break;
 8009a10:	e7ef      	b.n	80099f2 <USBD_StdDevReq+0x1b2>
      if (cfgidx != 0U)
 8009a12:	b1b1      	cbz	r1, 8009a42 <USBD_StdDevReq+0x202>
        pdev->dev_config = cfgidx;
 8009a14:	2101      	movs	r1, #1
 8009a16:	6041      	str	r1, [r0, #4]
        ret = USBD_SetClassConfig(pdev, cfgidx);
 8009a18:	f7ff fd98 	bl	800954c <USBD_SetClassConfig>
        if (ret != USBD_OK)
 8009a1c:	4605      	mov	r5, r0
          USBD_CtlError(pdev, req);
 8009a1e:	4620      	mov	r0, r4
        if (ret != USBD_OK)
 8009a20:	b125      	cbz	r5, 8009a2c <USBD_StdDevReq+0x1ec>
          USBD_CtlError(pdev, req);
 8009a22:	f7ff ff01 	bl	8009828 <USBD_CtlError.constprop.0>
          pdev->dev_state = USBD_STATE_ADDRESSED;
 8009a26:	f884 629c 	strb.w	r6, [r4, #668]	@ 0x29c
 8009a2a:	e718      	b.n	800985e <USBD_StdDevReq+0x1e>
          (void)USBD_CtlSendStatus(pdev);
 8009a2c:	f000 fa89 	bl	8009f42 <USBD_CtlSendStatus>
          pdev->dev_state = USBD_STATE_CONFIGURED;
 8009a30:	2303      	movs	r3, #3
 8009a32:	e7d2      	b.n	80099da <USBD_StdDevReq+0x19a>
      if (cfgidx == 0U)
 8009a34:	b949      	cbnz	r1, 8009a4a <USBD_StdDevReq+0x20a>
        pdev->dev_state = USBD_STATE_ADDRESSED;
 8009a36:	2302      	movs	r3, #2
 8009a38:	f880 329c 	strb.w	r3, [r0, #668]	@ 0x29c
        pdev->dev_config = cfgidx;
 8009a3c:	6041      	str	r1, [r0, #4]
        (void)USBD_ClrClassConfig(pdev, cfgidx);
 8009a3e:	f7ff fd8c 	bl	800955a <USBD_ClrClassConfig>
        (void)USBD_CtlSendStatus(pdev);
 8009a42:	4620      	mov	r0, r4
 8009a44:	f000 fa7d 	bl	8009f42 <USBD_CtlSendStatus>
 8009a48:	e708      	b.n	800985c <USBD_StdDevReq+0x1c>
      else if (cfgidx != pdev->dev_config)
 8009a4a:	6841      	ldr	r1, [r0, #4]
 8009a4c:	2901      	cmp	r1, #1
 8009a4e:	d0f8      	beq.n	8009a42 <USBD_StdDevReq+0x202>
        (void)USBD_ClrClassConfig(pdev, (uint8_t)pdev->dev_config);
 8009a50:	b2c9      	uxtb	r1, r1
 8009a52:	f7ff fd82 	bl	800955a <USBD_ClrClassConfig>
        pdev->dev_config = cfgidx;
 8009a56:	7829      	ldrb	r1, [r5, #0]
 8009a58:	6061      	str	r1, [r4, #4]
        ret = USBD_SetClassConfig(pdev, cfgidx);
 8009a5a:	4620      	mov	r0, r4
 8009a5c:	f7ff fd76 	bl	800954c <USBD_SetClassConfig>
        if (ret != USBD_OK)
 8009a60:	4605      	mov	r5, r0
 8009a62:	2800      	cmp	r0, #0
 8009a64:	d0ed      	beq.n	8009a42 <USBD_StdDevReq+0x202>
          USBD_CtlError(pdev, req);
 8009a66:	4620      	mov	r0, r4
 8009a68:	f7ff fede 	bl	8009828 <USBD_CtlError.constprop.0>
          (void)USBD_ClrClassConfig(pdev, (uint8_t)pdev->dev_config);
 8009a6c:	7921      	ldrb	r1, [r4, #4]
 8009a6e:	4620      	mov	r0, r4
 8009a70:	f7ff fd73 	bl	800955a <USBD_ClrClassConfig>
          pdev->dev_state = USBD_STATE_ADDRESSED;
 8009a74:	2302      	movs	r3, #2
 8009a76:	f884 329c 	strb.w	r3, [r4, #668]	@ 0x29c
 8009a7a:	e6f0      	b.n	800985e <USBD_StdDevReq+0x1e>
  if (req->wLength != 1U)
 8009a7c:	88ca      	ldrh	r2, [r1, #6]
 8009a7e:	2a01      	cmp	r2, #1
 8009a80:	f47f aee9 	bne.w	8009856 <USBD_StdDevReq+0x16>
    switch (pdev->dev_state)
 8009a84:	f890 129c 	ldrb.w	r1, [r0, #668]	@ 0x29c
 8009a88:	2902      	cmp	r1, #2
 8009a8a:	b2cb      	uxtb	r3, r1
 8009a8c:	d807      	bhi.n	8009a9e <USBD_StdDevReq+0x25e>
 8009a8e:	2b00      	cmp	r3, #0
 8009a90:	f43f aee1 	beq.w	8009856 <USBD_StdDevReq+0x16>
        pdev->dev_default_config = 0U;
 8009a94:	4601      	mov	r1, r0
 8009a96:	2300      	movs	r3, #0
 8009a98:	f841 3f08 	str.w	r3, [r1, #8]!
        (void)USBD_CtlSendData(pdev, (uint8_t *)&pdev->dev_default_config, 1U);
 8009a9c:	e737      	b.n	800990e <USBD_StdDevReq+0xce>
    switch (pdev->dev_state)
 8009a9e:	2b03      	cmp	r3, #3
 8009aa0:	f47f aed9 	bne.w	8009856 <USBD_StdDevReq+0x16>
        (void)USBD_CtlSendData(pdev, (uint8_t *)&pdev->dev_config, 1U);
 8009aa4:	1d01      	adds	r1, r0, #4
 8009aa6:	e732      	b.n	800990e <USBD_StdDevReq+0xce>
  switch (pdev->dev_state)
 8009aa8:	f890 329c 	ldrb.w	r3, [r0, #668]	@ 0x29c
 8009aac:	3b01      	subs	r3, #1
 8009aae:	2b02      	cmp	r3, #2
 8009ab0:	f63f aed1 	bhi.w	8009856 <USBD_StdDevReq+0x16>
      if (req->wLength != 0x2U)
 8009ab4:	88ca      	ldrh	r2, [r1, #6]
 8009ab6:	2a02      	cmp	r2, #2
 8009ab8:	f47f aecd 	bne.w	8009856 <USBD_StdDevReq+0x16>
      if (pdev->dev_remote_wakeup != 0U)
 8009abc:	f8d0 32a4 	ldr.w	r3, [r0, #676]	@ 0x2a4
 8009ac0:	4601      	mov	r1, r0
        pdev->dev_config_status |= USB_CONFIG_REMOTE_WAKEUP;
 8009ac2:	2b00      	cmp	r3, #0
 8009ac4:	bf0c      	ite	eq
 8009ac6:	2301      	moveq	r3, #1
 8009ac8:	2303      	movne	r3, #3
 8009aca:	f841 3f0c 	str.w	r3, [r1, #12]!
 8009ace:	e71e      	b.n	800990e <USBD_StdDevReq+0xce>
  if (req->wValue == USB_FEATURE_REMOTE_WAKEUP)
 8009ad0:	884b      	ldrh	r3, [r1, #2]
 8009ad2:	2b01      	cmp	r3, #1
 8009ad4:	d102      	bne.n	8009adc <USBD_StdDevReq+0x29c>
        pdev->dev_remote_wakeup = 0U;
 8009ad6:	f8c4 32a4 	str.w	r3, [r4, #676]	@ 0x2a4
 8009ada:	e7b2      	b.n	8009a42 <USBD_StdDevReq+0x202>
  else if (req->wValue == USB_FEATURE_TEST_MODE)
 8009adc:	2b02      	cmp	r3, #2
 8009ade:	f47f aeba 	bne.w	8009856 <USBD_StdDevReq+0x16>
    pdev->dev_test_mode = (uint8_t)(req->wIndex >> 8);
 8009ae2:	888b      	ldrh	r3, [r1, #4]
 8009ae4:	0a1b      	lsrs	r3, r3, #8
 8009ae6:	f880 32a0 	strb.w	r3, [r0, #672]	@ 0x2a0
    (void)USBD_CtlSendStatus(pdev);
 8009aea:	e7aa      	b.n	8009a42 <USBD_StdDevReq+0x202>
  switch (pdev->dev_state)
 8009aec:	f890 329c 	ldrb.w	r3, [r0, #668]	@ 0x29c
 8009af0:	3b01      	subs	r3, #1
 8009af2:	2b02      	cmp	r3, #2
 8009af4:	f63f aeaf 	bhi.w	8009856 <USBD_StdDevReq+0x16>
      if (req->wValue == USB_FEATURE_REMOTE_WAKEUP)
 8009af8:	884b      	ldrh	r3, [r1, #2]
 8009afa:	2b01      	cmp	r3, #1
 8009afc:	f47f aeae 	bne.w	800985c <USBD_StdDevReq+0x1c>
        pdev->dev_remote_wakeup = 0U;
 8009b00:	2300      	movs	r3, #0
 8009b02:	e7e8      	b.n	8009ad6 <USBD_StdDevReq+0x296>
 8009b04:	20013f1c 	.word	0x20013f1c

08009b08 <USBD_StdItfReq>:
{
 8009b08:	b570      	push	{r4, r5, r6, lr}
  switch (req->bmRequest & USB_REQ_TYPE_MASK)
 8009b0a:	780b      	ldrb	r3, [r1, #0]
 8009b0c:	f003 0260 	and.w	r2, r3, #96	@ 0x60
 8009b10:	065b      	lsls	r3, r3, #25
{
 8009b12:	4604      	mov	r4, r0
 8009b14:	460e      	mov	r6, r1
  switch (req->bmRequest & USB_REQ_TYPE_MASK)
 8009b16:	d501      	bpl.n	8009b1c <USBD_StdItfReq+0x14>
 8009b18:	2a40      	cmp	r2, #64	@ 0x40
 8009b1a:	d11f      	bne.n	8009b5c <USBD_StdItfReq+0x54>
      switch (pdev->dev_state)
 8009b1c:	f894 329c 	ldrb.w	r3, [r4, #668]	@ 0x29c
 8009b20:	3b01      	subs	r3, #1
 8009b22:	2b02      	cmp	r3, #2
 8009b24:	d81a      	bhi.n	8009b5c <USBD_StdItfReq+0x54>
          if (LOBYTE(req->wIndex) <= USBD_MAX_NUM_INTERFACES)
 8009b26:	7931      	ldrb	r1, [r6, #4]
 8009b28:	2901      	cmp	r1, #1
            idx = USBD_CoreFindIF(pdev, LOBYTE(req->wIndex));
 8009b2a:	4620      	mov	r0, r4
          if (LOBYTE(req->wIndex) <= USBD_MAX_NUM_INTERFACES)
 8009b2c:	d817      	bhi.n	8009b5e <USBD_StdItfReq+0x56>
            idx = USBD_CoreFindIF(pdev, LOBYTE(req->wIndex));
 8009b2e:	f7ff fe65 	bl	80097fc <USBD_CoreFindIF>
            if (((uint8_t)idx != 0xFFU) && (idx < USBD_MAX_SUPPORTED_CLASS))
 8009b32:	b988      	cbnz	r0, 8009b58 <USBD_StdItfReq+0x50>
              if (pdev->pClass[idx]->Setup != NULL)
 8009b34:	f8d4 32b8 	ldr.w	r3, [r4, #696]	@ 0x2b8
 8009b38:	689b      	ldr	r3, [r3, #8]
 8009b3a:	b16b      	cbz	r3, 8009b58 <USBD_StdItfReq+0x50>
                pdev->classId = idx;
 8009b3c:	f8c4 02d4 	str.w	r0, [r4, #724]	@ 0x2d4
                ret = (USBD_StatusTypeDef)(pdev->pClass[idx]->Setup(pdev, req));
 8009b40:	4631      	mov	r1, r6
 8009b42:	4620      	mov	r0, r4
 8009b44:	4798      	blx	r3
 8009b46:	4605      	mov	r5, r0
            if ((req->wLength == 0U) && (ret == USBD_OK))
 8009b48:	88f3      	ldrh	r3, [r6, #6]
 8009b4a:	b91b      	cbnz	r3, 8009b54 <USBD_StdItfReq+0x4c>
 8009b4c:	b915      	cbnz	r5, 8009b54 <USBD_StdItfReq+0x4c>
              (void)USBD_CtlSendStatus(pdev);
 8009b4e:	4620      	mov	r0, r4
 8009b50:	f000 f9f7 	bl	8009f42 <USBD_CtlSendStatus>
}
 8009b54:	4628      	mov	r0, r5
 8009b56:	bd70      	pop	{r4, r5, r6, pc}
                ret = USBD_FAIL;
 8009b58:	2503      	movs	r5, #3
 8009b5a:	e7f5      	b.n	8009b48 <USBD_StdItfReq+0x40>
          USBD_CtlError(pdev, req);
 8009b5c:	4620      	mov	r0, r4
            USBD_CtlError(pdev, req);
 8009b5e:	f7ff fe63 	bl	8009828 <USBD_CtlError.constprop.0>
  USBD_StatusTypeDef ret = USBD_OK;
 8009b62:	2500      	movs	r5, #0
 8009b64:	e7f6      	b.n	8009b54 <USBD_StdItfReq+0x4c>

08009b66 <USBD_StdEPReq>:
{
 8009b66:	b570      	push	{r4, r5, r6, lr}
 8009b68:	780b      	ldrb	r3, [r1, #0]
  ep_addr = LOBYTE(req->wIndex);
 8009b6a:	888a      	ldrh	r2, [r1, #4]
 8009b6c:	790d      	ldrb	r5, [r1, #4]
 8009b6e:	f003 0360 	and.w	r3, r3, #96	@ 0x60
  switch (req->bmRequest & USB_REQ_TYPE_MASK)
 8009b72:	2b20      	cmp	r3, #32
{
 8009b74:	4604      	mov	r4, r0
 8009b76:	460e      	mov	r6, r1
  switch (req->bmRequest & USB_REQ_TYPE_MASK)
 8009b78:	d058      	beq.n	8009c2c <USBD_StdEPReq+0xc6>
 8009b7a:	2b40      	cmp	r3, #64	@ 0x40
 8009b7c:	d056      	beq.n	8009c2c <USBD_StdEPReq+0xc6>
 8009b7e:	b11b      	cbz	r3, 8009b88 <USBD_StdEPReq+0x22>
              USBD_CtlError(pdev, req);
 8009b80:	4620      	mov	r0, r4
 8009b82:	f7ff fe51 	bl	8009828 <USBD_CtlError.constprop.0>
              break;
 8009b86:	e03d      	b.n	8009c04 <USBD_StdEPReq+0x9e>
      switch (req->bRequest)
 8009b88:	784b      	ldrb	r3, [r1, #1]
 8009b8a:	2b01      	cmp	r3, #1
 8009b8c:	d03c      	beq.n	8009c08 <USBD_StdEPReq+0xa2>
 8009b8e:	2b03      	cmp	r3, #3
 8009b90:	d025      	beq.n	8009bde <USBD_StdEPReq+0x78>
 8009b92:	2b00      	cmp	r3, #0
 8009b94:	d1f4      	bne.n	8009b80 <USBD_StdEPReq+0x1a>
          switch (pdev->dev_state)
 8009b96:	f890 329c 	ldrb.w	r3, [r0, #668]	@ 0x29c
 8009b9a:	2b02      	cmp	r3, #2
 8009b9c:	b2d9      	uxtb	r1, r3
 8009b9e:	d061      	beq.n	8009c64 <USBD_StdEPReq+0xfe>
 8009ba0:	2903      	cmp	r1, #3
 8009ba2:	d1ed      	bne.n	8009b80 <USBD_StdEPReq+0x1a>
                if (pdev->ep_in[ep_addr & 0xFU].is_used == 0U)
 8009ba4:	f005 030f 	and.w	r3, r5, #15
              if ((ep_addr & 0x80U) == 0x80U)
 8009ba8:	f012 0f80 	tst.w	r2, #128	@ 0x80
 8009bac:	f04f 0214 	mov.w	r2, #20
                if (pdev->ep_in[ep_addr & 0xFU].is_used == 0U)
 8009bb0:	fb02 0303 	mla	r3, r2, r3, r0
              if ((ep_addr & 0x80U) == 0x80U)
 8009bb4:	d065      	beq.n	8009c82 <USBD_StdEPReq+0x11c>
                if (pdev->ep_in[ep_addr & 0xFU].is_used == 0U)
 8009bb6:	8c9b      	ldrh	r3, [r3, #36]	@ 0x24
 8009bb8:	2b00      	cmp	r3, #0
 8009bba:	d0e1      	beq.n	8009b80 <USBD_StdEPReq+0x1a>
              pep = ((ep_addr & 0x80U) == 0x80U) ? &pdev->ep_in[ep_addr & 0x7FU] : \
 8009bbc:	f005 067f 	and.w	r6, r5, #127	@ 0x7f
 8009bc0:	3601      	adds	r6, #1
 8009bc2:	eb06 0686 	add.w	r6, r6, r6, lsl #2
              if ((ep_addr == 0x00U) || (ep_addr == 0x80U))
 8009bc6:	2d80      	cmp	r5, #128	@ 0x80
              pep = ((ep_addr & 0x80U) == 0x80U) ? &pdev->ep_in[ep_addr & 0x7FU] : \
 8009bc8:	eb00 0686 	add.w	r6, r0, r6, lsl #2
              if ((ep_addr == 0x00U) || (ep_addr == 0x80U))
 8009bcc:	d065      	beq.n	8009c9a <USBD_StdEPReq+0x134>
              else if (USBD_LL_IsStallEP(pdev, ep_addr) != 0U)
 8009bce:	4629      	mov	r1, r5
 8009bd0:	4620      	mov	r0, r4
 8009bd2:	f7f7 fed1 	bl	8001978 <USBD_LL_IsStallEP>
 8009bd6:	2800      	cmp	r0, #0
 8009bd8:	d064      	beq.n	8009ca4 <USBD_StdEPReq+0x13e>
                pep->status = 0x0001U;
 8009bda:	2301      	movs	r3, #1
 8009bdc:	e05e      	b.n	8009c9c <USBD_StdEPReq+0x136>
          switch (pdev->dev_state)
 8009bde:	f890 329c 	ldrb.w	r3, [r0, #668]	@ 0x29c
 8009be2:	2b02      	cmp	r3, #2
 8009be4:	b2da      	uxtb	r2, r3
 8009be6:	d033      	beq.n	8009c50 <USBD_StdEPReq+0xea>
 8009be8:	2a03      	cmp	r2, #3
 8009bea:	d1c9      	bne.n	8009b80 <USBD_StdEPReq+0x1a>
              if (req->wValue == USB_FEATURE_EP_HALT)
 8009bec:	884b      	ldrh	r3, [r1, #2]
 8009bee:	b933      	cbnz	r3, 8009bfe <USBD_StdEPReq+0x98>
                if ((ep_addr != 0x00U) && (ep_addr != 0x80U) && (req->wLength == 0x00U))
 8009bf0:	0669      	lsls	r1, r5, #25
 8009bf2:	d004      	beq.n	8009bfe <USBD_StdEPReq+0x98>
 8009bf4:	88f3      	ldrh	r3, [r6, #6]
 8009bf6:	b913      	cbnz	r3, 8009bfe <USBD_StdEPReq+0x98>
                  (void)USBD_LL_StallEP(pdev, ep_addr);
 8009bf8:	4629      	mov	r1, r5
 8009bfa:	f7f7 fef8 	bl	80019ee <USBD_LL_StallEP>
              (void)USBD_CtlSendStatus(pdev);
 8009bfe:	4620      	mov	r0, r4
 8009c00:	f000 f99f 	bl	8009f42 <USBD_CtlSendStatus>
}
 8009c04:	2000      	movs	r0, #0
 8009c06:	bd70      	pop	{r4, r5, r6, pc}
          switch (pdev->dev_state)
 8009c08:	f890 329c 	ldrb.w	r3, [r0, #668]	@ 0x29c
 8009c0c:	2b02      	cmp	r3, #2
 8009c0e:	b2da      	uxtb	r2, r3
 8009c10:	d01e      	beq.n	8009c50 <USBD_StdEPReq+0xea>
 8009c12:	2a03      	cmp	r2, #3
 8009c14:	d1b4      	bne.n	8009b80 <USBD_StdEPReq+0x1a>
              if (req->wValue == USB_FEATURE_EP_HALT)
 8009c16:	884b      	ldrh	r3, [r1, #2]
 8009c18:	2b00      	cmp	r3, #0
 8009c1a:	d1f3      	bne.n	8009c04 <USBD_StdEPReq+0x9e>
                if ((ep_addr & 0x7FU) != 0x00U)
 8009c1c:	066b      	lsls	r3, r5, #25
 8009c1e:	d002      	beq.n	8009c26 <USBD_StdEPReq+0xc0>
                  (void)USBD_LL_ClearStallEP(pdev, ep_addr);
 8009c20:	4629      	mov	r1, r5
 8009c22:	f7f7 feed 	bl	8001a00 <USBD_LL_ClearStallEP>
                (void)USBD_CtlSendStatus(pdev);
 8009c26:	4620      	mov	r0, r4
 8009c28:	f000 f98b 	bl	8009f42 <USBD_CtlSendStatus>
                idx = USBD_CoreFindEP(pdev, ep_addr);
 8009c2c:	4629      	mov	r1, r5
 8009c2e:	4620      	mov	r0, r4
 8009c30:	f7ff fde6 	bl	8009800 <USBD_CoreFindEP>
                if (((uint8_t)idx != 0xFFU) && (idx < USBD_MAX_SUPPORTED_CLASS))
 8009c34:	2800      	cmp	r0, #0
 8009c36:	d1e5      	bne.n	8009c04 <USBD_StdEPReq+0x9e>
                  if (pdev->pClass[idx]->Setup != NULL)
 8009c38:	f8d4 32b8 	ldr.w	r3, [r4, #696]	@ 0x2b8
                  pdev->classId = idx;
 8009c3c:	f8c4 02d4 	str.w	r0, [r4, #724]	@ 0x2d4
                  if (pdev->pClass[idx]->Setup != NULL)
 8009c40:	689b      	ldr	r3, [r3, #8]
 8009c42:	2b00      	cmp	r3, #0
 8009c44:	d0de      	beq.n	8009c04 <USBD_StdEPReq+0x9e>
                    ret = (USBD_StatusTypeDef)(pdev->pClass[idx]->Setup(pdev, req));
 8009c46:	4631      	mov	r1, r6
 8009c48:	4620      	mov	r0, r4
}
 8009c4a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
                    ret = (USBD_StatusTypeDef)(pdev->pClass[idx]->Setup(pdev, req));
 8009c4e:	4718      	bx	r3
              if ((ep_addr != 0x00U) && (ep_addr != 0x80U))
 8009c50:	066a      	lsls	r2, r5, #25
 8009c52:	d095      	beq.n	8009b80 <USBD_StdEPReq+0x1a>
                (void)USBD_LL_StallEP(pdev, ep_addr);
 8009c54:	4629      	mov	r1, r5
 8009c56:	f7f7 feca 	bl	80019ee <USBD_LL_StallEP>
                (void)USBD_LL_StallEP(pdev, 0x80U);
 8009c5a:	2180      	movs	r1, #128	@ 0x80
 8009c5c:	4620      	mov	r0, r4
 8009c5e:	f7f7 fec6 	bl	80019ee <USBD_LL_StallEP>
 8009c62:	e7cf      	b.n	8009c04 <USBD_StdEPReq+0x9e>
              if ((ep_addr != 0x00U) && (ep_addr != 0x80U))
 8009c64:	0669      	lsls	r1, r5, #25
 8009c66:	d18b      	bne.n	8009b80 <USBD_StdEPReq+0x1a>
              pep = ((ep_addr & 0x80U) == 0x80U) ? &pdev->ep_in[ep_addr & 0x7FU] : \
 8009c68:	0613      	lsls	r3, r2, #24
 8009c6a:	bf4c      	ite	mi
 8009c6c:	f100 0114 	addmi.w	r1, r0, #20
 8009c70:	f500 71aa 	addpl.w	r1, r0, #340	@ 0x154
              pep->status = 0x0000U;
 8009c74:	2300      	movs	r3, #0
 8009c76:	600b      	str	r3, [r1, #0]
              (void)USBD_CtlSendData(pdev, (uint8_t *)&pep->status, 2U);
 8009c78:	2202      	movs	r2, #2
              (void)USBD_CtlSendData(pdev, (uint8_t *)&pep->status, 2U);
 8009c7a:	4620      	mov	r0, r4
 8009c7c:	f000 f944 	bl	8009f08 <USBD_CtlSendData>
              break;
 8009c80:	e7c0      	b.n	8009c04 <USBD_StdEPReq+0x9e>
                if (pdev->ep_out[ep_addr & 0xFU].is_used == 0U)
 8009c82:	f8b3 3164 	ldrh.w	r3, [r3, #356]	@ 0x164
 8009c86:	2b00      	cmp	r3, #0
 8009c88:	f43f af7a 	beq.w	8009b80 <USBD_StdEPReq+0x1a>
              pep = ((ep_addr & 0x80U) == 0x80U) ? &pdev->ep_in[ep_addr & 0x7FU] : \
 8009c8c:	2614      	movs	r6, #20
 8009c8e:	fb06 0605 	mla	r6, r6, r5, r0
 8009c92:	f506 76aa 	add.w	r6, r6, #340	@ 0x154
              if ((ep_addr == 0x00U) || (ep_addr == 0x80U))
 8009c96:	2d00      	cmp	r5, #0
 8009c98:	d199      	bne.n	8009bce <USBD_StdEPReq+0x68>
                pep->status = 0x0000U;
 8009c9a:	2300      	movs	r3, #0
                pep->status = 0x0001U;
 8009c9c:	6033      	str	r3, [r6, #0]
              (void)USBD_CtlSendData(pdev, (uint8_t *)&pep->status, 2U);
 8009c9e:	2202      	movs	r2, #2
 8009ca0:	4631      	mov	r1, r6
 8009ca2:	e7ea      	b.n	8009c7a <USBD_StdEPReq+0x114>
                pep->status = 0x0000U;
 8009ca4:	6030      	str	r0, [r6, #0]
 8009ca6:	e7fa      	b.n	8009c9e <USBD_StdEPReq+0x138>

08009ca8 <USBD_ParseSetupRequest>:
  req->bmRequest = *(uint8_t *)(pbuff);
 8009ca8:	780b      	ldrb	r3, [r1, #0]
 8009caa:	7003      	strb	r3, [r0, #0]
  req->bRequest = *(uint8_t *)(pbuff);
 8009cac:	784b      	ldrb	r3, [r1, #1]
 8009cae:	7043      	strb	r3, [r0, #1]
  req->wValue = SWAPBYTE(pbuff);
 8009cb0:	884b      	ldrh	r3, [r1, #2]
 8009cb2:	8043      	strh	r3, [r0, #2]
  req->wIndex = SWAPBYTE(pbuff);
 8009cb4:	888b      	ldrh	r3, [r1, #4]
 8009cb6:	8083      	strh	r3, [r0, #4]
  req->wLength = SWAPBYTE(pbuff);
 8009cb8:	88cb      	ldrh	r3, [r1, #6]
 8009cba:	80c3      	strh	r3, [r0, #6]
}
 8009cbc:	4770      	bx	lr

08009cbe <USBD_CtlError>:
{
 8009cbe:	b510      	push	{r4, lr}
  (void)USBD_LL_StallEP(pdev, 0x80U);
 8009cc0:	2180      	movs	r1, #128	@ 0x80
{
 8009cc2:	4604      	mov	r4, r0
  (void)USBD_LL_StallEP(pdev, 0x80U);
 8009cc4:	f7f7 fe93 	bl	80019ee <USBD_LL_StallEP>
  (void)USBD_LL_StallEP(pdev, 0U);
 8009cc8:	4620      	mov	r0, r4
 8009cca:	2100      	movs	r1, #0
}
 8009ccc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  (void)USBD_LL_StallEP(pdev, 0U);
 8009cd0:	f7f7 be8d 	b.w	80019ee <USBD_LL_StallEP>

08009cd4 <USBD_GetString>:
  * @param  unicode : Formatted string buffer (unicode)
  * @param  len : descriptor length
  * @retval None
  */
void USBD_GetString(uint8_t *desc, uint8_t *unicode, uint16_t *len)
{
 8009cd4:	b570      	push	{r4, r5, r6, lr}
 8009cd6:	460d      	mov	r5, r1
 8009cd8:	4616      	mov	r6, r2
  uint8_t idx = 0U;
  uint8_t *pdesc;

  if (desc == NULL)
 8009cda:	4604      	mov	r4, r0
 8009cdc:	b170      	cbz	r0, 8009cfc <USBD_GetString+0x28>
static uint8_t USBD_GetLen(uint8_t *buf)
{
  uint8_t  len = 0U;
  uint8_t *pbuff = buf;

  while (*pbuff != (uint8_t)'\0')
 8009cde:	f7f6 fa87 	bl	80001f0 <strlen>
  *len = MIN(USBD_MAX_STR_DESC_SIZ, ((uint16_t)USBD_GetLen(pdesc) * 2U) + 2U);
 8009ce2:	b2c3      	uxtb	r3, r0
 8009ce4:	3301      	adds	r3, #1
 8009ce6:	005b      	lsls	r3, r3, #1
 8009ce8:	8033      	strh	r3, [r6, #0]
  unicode[idx] = *(uint8_t *)len;
 8009cea:	702b      	strb	r3, [r5, #0]
  unicode[idx] = USB_DESC_TYPE_STRING;
 8009cec:	2303      	movs	r3, #3
 8009cee:	706b      	strb	r3, [r5, #1]
  while (*pdesc != (uint8_t)'\0')
 8009cf0:	3c01      	subs	r4, #1
  idx++;
 8009cf2:	2302      	movs	r3, #2
    unicode[idx] = 0U;
 8009cf4:	2100      	movs	r1, #0
  while (*pdesc != (uint8_t)'\0')
 8009cf6:	f814 2f01 	ldrb.w	r2, [r4, #1]!
 8009cfa:	b902      	cbnz	r2, 8009cfe <USBD_GetString+0x2a>
}
 8009cfc:	bd70      	pop	{r4, r5, r6, pc}
    unicode[idx] = *pdesc;
 8009cfe:	54ea      	strb	r2, [r5, r3]
    idx++;
 8009d00:	1c5a      	adds	r2, r3, #1
    unicode[idx] = 0U;
 8009d02:	b2d2      	uxtb	r2, r2
    idx++;
 8009d04:	3302      	adds	r3, #2
    unicode[idx] = 0U;
 8009d06:	54a9      	strb	r1, [r5, r2]
    idx++;
 8009d08:	b2db      	uxtb	r3, r3
 8009d0a:	e7f4      	b.n	8009cf6 <USBD_GetString+0x22>

08009d0c <USBD_HID_DataIn>:
static uint8_t USBD_HID_DataIn(USBD_HandleTypeDef *pdev, uint8_t epnum)
{
  UNUSED(epnum);
  /* Ensure that the FIFO is empty before a new transfer, this condition could
  be caused by  a new transfer before the end of the previous transfer */
  ((USBD_HID_HandleTypeDef *)pdev->pClassDataCmsit[pdev->classId])->state = USBD_HID_IDLE;
 8009d0c:	f8d0 32d4 	ldr.w	r3, [r0, #724]	@ 0x2d4
 8009d10:	33b0      	adds	r3, #176	@ 0xb0
 8009d12:	f850 3023 	ldr.w	r3, [r0, r3, lsl #2]
 8009d16:	2000      	movs	r0, #0
 8009d18:	7318      	strb	r0, [r3, #12]

  return (uint8_t)USBD_OK;
}
 8009d1a:	4770      	bx	lr

08009d1c <USBD_HID_GetDeviceQualifierDesc>:
  * @param  length : pointer data length
  * @retval pointer to descriptor buffer
  */
static uint8_t *USBD_HID_GetDeviceQualifierDesc(uint16_t *length)
{
  *length = (uint16_t)sizeof(USBD_HID_DeviceQualifierDesc);
 8009d1c:	230a      	movs	r3, #10
 8009d1e:	8003      	strh	r3, [r0, #0]

  return USBD_HID_DeviceQualifierDesc;
}
 8009d20:	4800      	ldr	r0, [pc, #0]	@ (8009d24 <USBD_HID_GetDeviceQualifierDesc+0x8>)
 8009d22:	4770      	bx	lr
 8009d24:	20000120 	.word	0x20000120

08009d28 <USBD_HID_GetFSCfgDesc>:
{
 8009d28:	b510      	push	{r4, lr}
  USBD_EpDescTypeDef *pEpDesc = USBD_GetEpDesc(USBD_HID_CfgDesc, HID_EPIN_ADDR);
 8009d2a:	2181      	movs	r1, #129	@ 0x81
{
 8009d2c:	4604      	mov	r4, r0
  USBD_EpDescTypeDef *pEpDesc = USBD_GetEpDesc(USBD_HID_CfgDesc, HID_EPIN_ADDR);
 8009d2e:	4805      	ldr	r0, [pc, #20]	@ (8009d44 <USBD_HID_GetFSCfgDesc+0x1c>)
 8009d30:	f7ff fd68 	bl	8009804 <USBD_GetEpDesc>
  if (pEpDesc != NULL)
 8009d34:	b108      	cbz	r0, 8009d3a <USBD_HID_GetFSCfgDesc+0x12>
    pEpDesc->bInterval = HID_FS_BINTERVAL;
 8009d36:	230a      	movs	r3, #10
 8009d38:	7183      	strb	r3, [r0, #6]
  *length = (uint16_t)sizeof(USBD_HID_CfgDesc);
 8009d3a:	2322      	movs	r3, #34	@ 0x22
}
 8009d3c:	4801      	ldr	r0, [pc, #4]	@ (8009d44 <USBD_HID_GetFSCfgDesc+0x1c>)
  *length = (uint16_t)sizeof(USBD_HID_CfgDesc);
 8009d3e:	8023      	strh	r3, [r4, #0]
}
 8009d40:	bd10      	pop	{r4, pc}
 8009d42:	bf00      	nop
 8009d44:	20000138 	.word	0x20000138

08009d48 <USBD_HID_GetOtherSpeedCfgDesc>:
static uint8_t *USBD_HID_GetOtherSpeedCfgDesc(uint16_t *length)
 8009d48:	f7ff bfee 	b.w	8009d28 <USBD_HID_GetFSCfgDesc>

08009d4c <USBD_HID_GetHSCfgDesc>:
{
 8009d4c:	b510      	push	{r4, lr}
  USBD_EpDescTypeDef *pEpDesc = USBD_GetEpDesc(USBD_HID_CfgDesc, HID_EPIN_ADDR);
 8009d4e:	2181      	movs	r1, #129	@ 0x81
{
 8009d50:	4604      	mov	r4, r0
  USBD_EpDescTypeDef *pEpDesc = USBD_GetEpDesc(USBD_HID_CfgDesc, HID_EPIN_ADDR);
 8009d52:	4805      	ldr	r0, [pc, #20]	@ (8009d68 <USBD_HID_GetHSCfgDesc+0x1c>)
 8009d54:	f7ff fd56 	bl	8009804 <USBD_GetEpDesc>
  if (pEpDesc != NULL)
 8009d58:	b108      	cbz	r0, 8009d5e <USBD_HID_GetHSCfgDesc+0x12>
    pEpDesc->bInterval = HID_HS_BINTERVAL;
 8009d5a:	2307      	movs	r3, #7
 8009d5c:	7183      	strb	r3, [r0, #6]
  *length = (uint16_t)sizeof(USBD_HID_CfgDesc);
 8009d5e:	2322      	movs	r3, #34	@ 0x22
}
 8009d60:	4801      	ldr	r0, [pc, #4]	@ (8009d68 <USBD_HID_GetHSCfgDesc+0x1c>)
  *length = (uint16_t)sizeof(USBD_HID_CfgDesc);
 8009d62:	8023      	strh	r3, [r4, #0]
}
 8009d64:	bd10      	pop	{r4, pc}
 8009d66:	bf00      	nop
 8009d68:	20000138 	.word	0x20000138

08009d6c <USBD_HID_Setup>:
  USBD_HID_HandleTypeDef *hhid = (USBD_HID_HandleTypeDef *)pdev->pClassDataCmsit[pdev->classId];
 8009d6c:	f8d0 32d4 	ldr.w	r3, [r0, #724]	@ 0x2d4
{
 8009d70:	b513      	push	{r0, r1, r4, lr}
  USBD_HID_HandleTypeDef *hhid = (USBD_HID_HandleTypeDef *)pdev->pClassDataCmsit[pdev->classId];
 8009d72:	33b0      	adds	r3, #176	@ 0xb0
  uint16_t status_info = 0U;
 8009d74:	2200      	movs	r2, #0
  USBD_HID_HandleTypeDef *hhid = (USBD_HID_HandleTypeDef *)pdev->pClassDataCmsit[pdev->classId];
 8009d76:	f850 3023 	ldr.w	r3, [r0, r3, lsl #2]
  uint16_t status_info = 0U;
 8009d7a:	f8ad 2006 	strh.w	r2, [sp, #6]
  if (hhid == NULL)
 8009d7e:	2b00      	cmp	r3, #0
 8009d80:	d04a      	beq.n	8009e18 <USBD_HID_Setup+0xac>
  switch (req->bmRequest & USB_REQ_TYPE_MASK)
 8009d82:	780a      	ldrb	r2, [r1, #0]
 8009d84:	f012 0260 	ands.w	r2, r2, #96	@ 0x60
 8009d88:	d01d      	beq.n	8009dc6 <USBD_HID_Setup+0x5a>
 8009d8a:	2a20      	cmp	r2, #32
 8009d8c:	d142      	bne.n	8009e14 <USBD_HID_Setup+0xa8>
      switch (req->bRequest)
 8009d8e:	784a      	ldrb	r2, [r1, #1]
 8009d90:	3a02      	subs	r2, #2
 8009d92:	2a09      	cmp	r2, #9
 8009d94:	d83e      	bhi.n	8009e14 <USBD_HID_Setup+0xa8>
 8009d96:	e8df f002 	tbb	[pc, r2]
 8009d9a:	0a13      	.short	0x0a13
 8009d9c:	3d3d3d3d 	.word	0x3d3d3d3d
 8009da0:	050f3d3d 	.word	0x050f3d3d
          hhid->Protocol = (uint8_t)(req->wValue);
 8009da4:	788a      	ldrb	r2, [r1, #2]
 8009da6:	601a      	str	r2, [r3, #0]
  USBD_StatusTypeDef ret = USBD_OK;
 8009da8:	2000      	movs	r0, #0
}
 8009daa:	b002      	add	sp, #8
 8009dac:	bd10      	pop	{r4, pc}
          (void)USBD_CtlSendData(pdev, (uint8_t *)&hhid->Protocol, 1U);
 8009dae:	2201      	movs	r2, #1
 8009db0:	4619      	mov	r1, r3
          (void)USBD_CtlSendData(pdev, pbuf, len);
 8009db2:	f000 f8a9 	bl	8009f08 <USBD_CtlSendData>
          break;
 8009db6:	e7f7      	b.n	8009da8 <USBD_HID_Setup+0x3c>
          hhid->IdleState = (uint8_t)(req->wValue >> 8);
 8009db8:	884a      	ldrh	r2, [r1, #2]
 8009dba:	0a12      	lsrs	r2, r2, #8
 8009dbc:	605a      	str	r2, [r3, #4]
          break;
 8009dbe:	e7f3      	b.n	8009da8 <USBD_HID_Setup+0x3c>
          (void)USBD_CtlSendData(pdev, (uint8_t *)&hhid->IdleState, 1U);
 8009dc0:	2201      	movs	r2, #1
 8009dc2:	1d19      	adds	r1, r3, #4
 8009dc4:	e7f5      	b.n	8009db2 <USBD_HID_Setup+0x46>
      switch (req->bRequest)
 8009dc6:	784a      	ldrb	r2, [r1, #1]
 8009dc8:	2a0b      	cmp	r2, #11
 8009dca:	d823      	bhi.n	8009e14 <USBD_HID_Setup+0xa8>
 8009dcc:	a401      	add	r4, pc, #4	@ (adr r4, 8009dd4 <USBD_HID_Setup+0x68>)
 8009dce:	f854 f022 	ldr.w	pc, [r4, r2, lsl #2]
 8009dd2:	bf00      	nop
 8009dd4:	08009e05 	.word	0x08009e05
 8009dd8:	08009da9 	.word	0x08009da9
 8009ddc:	08009e15 	.word	0x08009e15
 8009de0:	08009e15 	.word	0x08009e15
 8009de4:	08009e15 	.word	0x08009e15
 8009de8:	08009e15 	.word	0x08009e15
 8009dec:	08009e1d 	.word	0x08009e1d
 8009df0:	08009e15 	.word	0x08009e15
 8009df4:	08009e15 	.word	0x08009e15
 8009df8:	08009e15 	.word	0x08009e15
 8009dfc:	08009e41 	.word	0x08009e41
 8009e00:	08009e51 	.word	0x08009e51
          if (pdev->dev_state == USBD_STATE_CONFIGURED)
 8009e04:	f890 329c 	ldrb.w	r3, [r0, #668]	@ 0x29c
 8009e08:	2b03      	cmp	r3, #3
 8009e0a:	d103      	bne.n	8009e14 <USBD_HID_Setup+0xa8>
            (void)USBD_CtlSendData(pdev, (uint8_t *)&status_info, 2U);
 8009e0c:	2202      	movs	r2, #2
 8009e0e:	f10d 0106 	add.w	r1, sp, #6
 8009e12:	e7ce      	b.n	8009db2 <USBD_HID_Setup+0x46>
            USBD_CtlError(pdev, req);
 8009e14:	f7ff ff53 	bl	8009cbe <USBD_CtlError>
    return (uint8_t)USBD_FAIL;
 8009e18:	2003      	movs	r0, #3
 8009e1a:	e7c6      	b.n	8009daa <USBD_HID_Setup+0x3e>
          if ((req->wValue >> 8) == HID_REPORT_DESC)
 8009e1c:	884b      	ldrh	r3, [r1, #2]
 8009e1e:	0a1b      	lsrs	r3, r3, #8
 8009e20:	2b22      	cmp	r3, #34	@ 0x22
 8009e22:	d105      	bne.n	8009e30 <USBD_HID_Setup+0xc4>
            len = MIN(HID_MOUSE_REPORT_DESC_SIZE, req->wLength);
 8009e24:	88ca      	ldrh	r2, [r1, #6]
            pbuf = HID_MOUSE_ReportDesc;
 8009e26:	490e      	ldr	r1, [pc, #56]	@ (8009e60 <USBD_HID_Setup+0xf4>)
            len = MIN(HID_MOUSE_REPORT_DESC_SIZE, req->wLength);
 8009e28:	2a4a      	cmp	r2, #74	@ 0x4a
 8009e2a:	bf28      	it	cs
 8009e2c:	224a      	movcs	r2, #74	@ 0x4a
            pbuf = HID_MOUSE_ReportDesc;
 8009e2e:	e7c0      	b.n	8009db2 <USBD_HID_Setup+0x46>
          else if ((req->wValue >> 8) == HID_DESCRIPTOR_TYPE)
 8009e30:	2b21      	cmp	r3, #33	@ 0x21
 8009e32:	d1ef      	bne.n	8009e14 <USBD_HID_Setup+0xa8>
            len = MIN(USB_HID_DESC_SIZ, req->wLength);
 8009e34:	88ca      	ldrh	r2, [r1, #6]
            pbuf = USBD_HID_Desc;
 8009e36:	490b      	ldr	r1, [pc, #44]	@ (8009e64 <USBD_HID_Setup+0xf8>)
            len = MIN(USB_HID_DESC_SIZ, req->wLength);
 8009e38:	2a09      	cmp	r2, #9
 8009e3a:	bf28      	it	cs
 8009e3c:	2209      	movcs	r2, #9
 8009e3e:	e7b8      	b.n	8009db2 <USBD_HID_Setup+0x46>
          if (pdev->dev_state == USBD_STATE_CONFIGURED)
 8009e40:	f890 229c 	ldrb.w	r2, [r0, #668]	@ 0x29c
 8009e44:	2a03      	cmp	r2, #3
 8009e46:	d1e5      	bne.n	8009e14 <USBD_HID_Setup+0xa8>
            (void)USBD_CtlSendData(pdev, (uint8_t *)&hhid->AltSetting, 1U);
 8009e48:	2201      	movs	r2, #1
 8009e4a:	f103 0108 	add.w	r1, r3, #8
 8009e4e:	e7b0      	b.n	8009db2 <USBD_HID_Setup+0x46>
          if (pdev->dev_state == USBD_STATE_CONFIGURED)
 8009e50:	f890 229c 	ldrb.w	r2, [r0, #668]	@ 0x29c
 8009e54:	2a03      	cmp	r2, #3
 8009e56:	d1dd      	bne.n	8009e14 <USBD_HID_Setup+0xa8>
            hhid->AltSetting = (uint8_t)(req->wValue);
 8009e58:	788a      	ldrb	r2, [r1, #2]
 8009e5a:	609a      	str	r2, [r3, #8]
 8009e5c:	e7a4      	b.n	8009da8 <USBD_HID_Setup+0x3c>
 8009e5e:	bf00      	nop
 8009e60:	200000d4 	.word	0x200000d4
 8009e64:	2000012c 	.word	0x2000012c

08009e68 <USBD_HID_DeInit>:
{
 8009e68:	b538      	push	{r3, r4, r5, lr}
 8009e6a:	4604      	mov	r4, r0
  (void)USBD_LL_CloseEP(pdev, HIDInEpAdd);
 8009e6c:	2181      	movs	r1, #129	@ 0x81
 8009e6e:	f7f7 fdb5 	bl	80019dc <USBD_LL_CloseEP>
  if (pdev->pClassDataCmsit[pdev->classId] != NULL)
 8009e72:	f8d4 32d4 	ldr.w	r3, [r4, #724]	@ 0x2d4
 8009e76:	33b0      	adds	r3, #176	@ 0xb0
  pdev->ep_in[HIDInEpAdd & 0xFU].is_used = 0U;
 8009e78:	2500      	movs	r5, #0
  if (pdev->pClassDataCmsit[pdev->classId] != NULL)
 8009e7a:	f854 0023 	ldr.w	r0, [r4, r3, lsl #2]
  pdev->ep_in[HIDInEpAdd & 0xFU].is_used = 0U;
 8009e7e:	63a5      	str	r5, [r4, #56]	@ 0x38
  if (pdev->pClassDataCmsit[pdev->classId] != NULL)
 8009e80:	b130      	cbz	r0, 8009e90 <USBD_HID_DeInit+0x28>
    (void)USBD_free(pdev->pClassDataCmsit[pdev->classId]);
 8009e82:	f7f7 fd8f 	bl	80019a4 <USBD_static_free>
    pdev->pClassDataCmsit[pdev->classId] = NULL;
 8009e86:	f8d4 32d4 	ldr.w	r3, [r4, #724]	@ 0x2d4
 8009e8a:	33b0      	adds	r3, #176	@ 0xb0
 8009e8c:	f844 5023 	str.w	r5, [r4, r3, lsl #2]
}
 8009e90:	2000      	movs	r0, #0
 8009e92:	bd38      	pop	{r3, r4, r5, pc}

08009e94 <USBD_HID_Init>:
{
 8009e94:	b538      	push	{r3, r4, r5, lr}
 8009e96:	4604      	mov	r4, r0
  hhid = (USBD_HID_HandleTypeDef *)USBD_malloc(sizeof(USBD_HID_HandleTypeDef));
 8009e98:	2010      	movs	r0, #16
 8009e9a:	f7f7 fd7f 	bl	800199c <USBD_static_malloc>
  if (hhid == NULL)
 8009e9e:	f8d4 32d4 	ldr.w	r3, [r4, #724]	@ 0x2d4
    pdev->pClassDataCmsit[pdev->classId] = NULL;
 8009ea2:	33b0      	adds	r3, #176	@ 0xb0
  if (hhid == NULL)
 8009ea4:	4605      	mov	r5, r0
    pdev->pClassDataCmsit[pdev->classId] = NULL;
 8009ea6:	f844 0023 	str.w	r0, [r4, r3, lsl #2]
  if (hhid == NULL)
 8009eaa:	b908      	cbnz	r0, 8009eb0 <USBD_HID_Init+0x1c>
    return (uint8_t)USBD_EMEM;
 8009eac:	2002      	movs	r0, #2
}
 8009eae:	bd38      	pop	{r3, r4, r5, pc}
  if (pdev->dev_speed == USBD_SPEED_HIGH)
 8009eb0:	7c23      	ldrb	r3, [r4, #16]
  pdev->pClassData = pdev->pClassDataCmsit[pdev->classId];
 8009eb2:	f8c4 02bc 	str.w	r0, [r4, #700]	@ 0x2bc
    pdev->ep_in[HIDInEpAdd & 0xFU].bInterval = HID_HS_BINTERVAL;
 8009eb6:	2b00      	cmp	r3, #0
 8009eb8:	bf14      	ite	ne
 8009eba:	230a      	movne	r3, #10
 8009ebc:	2307      	moveq	r3, #7
 8009ebe:	8763      	strh	r3, [r4, #58]	@ 0x3a
  (void)USBD_LL_OpenEP(pdev, HIDInEpAdd, USBD_EP_TYPE_INTR, HID_EPIN_SIZE);
 8009ec0:	2203      	movs	r2, #3
 8009ec2:	2304      	movs	r3, #4
 8009ec4:	2181      	movs	r1, #129	@ 0x81
 8009ec6:	4620      	mov	r0, r4
 8009ec8:	f7f7 fd7c 	bl	80019c4 <USBD_LL_OpenEP>
  pdev->ep_in[HIDInEpAdd & 0xFU].is_used = 1U;
 8009ecc:	2301      	movs	r3, #1
  hhid->state = USBD_HID_IDLE;
 8009ece:	2000      	movs	r0, #0
  pdev->ep_in[HIDInEpAdd & 0xFU].is_used = 1U;
 8009ed0:	8723      	strh	r3, [r4, #56]	@ 0x38
  hhid->state = USBD_HID_IDLE;
 8009ed2:	7328      	strb	r0, [r5, #12]
  return (uint8_t)USBD_OK;
 8009ed4:	e7eb      	b.n	8009eae <USBD_HID_Init+0x1a>

08009ed6 <USBD_HID_SendReport>:
{
 8009ed6:	4613      	mov	r3, r2
  USBD_HID_HandleTypeDef *hhid = (USBD_HID_HandleTypeDef *)pdev->pClassDataCmsit[pdev->classId];
 8009ed8:	f8d0 22d4 	ldr.w	r2, [r0, #724]	@ 0x2d4
 8009edc:	32b0      	adds	r2, #176	@ 0xb0
{
 8009ede:	b510      	push	{r4, lr}
  USBD_HID_HandleTypeDef *hhid = (USBD_HID_HandleTypeDef *)pdev->pClassDataCmsit[pdev->classId];
 8009ee0:	f850 2022 	ldr.w	r2, [r0, r2, lsl #2]
  if (hhid == NULL)
 8009ee4:	b172      	cbz	r2, 8009f04 <USBD_HID_SendReport+0x2e>
  if (pdev->dev_state == USBD_STATE_CONFIGURED)
 8009ee6:	f890 429c 	ldrb.w	r4, [r0, #668]	@ 0x29c
 8009eea:	2c03      	cmp	r4, #3
 8009eec:	d101      	bne.n	8009ef2 <USBD_HID_SendReport+0x1c>
    if (hhid->state == USBD_HID_IDLE)
 8009eee:	7b14      	ldrb	r4, [r2, #12]
 8009ef0:	b10c      	cbz	r4, 8009ef6 <USBD_HID_SendReport+0x20>
  return (uint8_t)USBD_OK;
 8009ef2:	2000      	movs	r0, #0
}
 8009ef4:	bd10      	pop	{r4, pc}
      hhid->state = USBD_HID_BUSY;
 8009ef6:	2401      	movs	r4, #1
 8009ef8:	7314      	strb	r4, [r2, #12]
      (void)USBD_LL_Transmit(pdev, HIDInEpAdd, report, len);
 8009efa:	460a      	mov	r2, r1
 8009efc:	2181      	movs	r1, #129	@ 0x81
 8009efe:	f7f7 fd91 	bl	8001a24 <USBD_LL_Transmit>
 8009f02:	e7f6      	b.n	8009ef2 <USBD_HID_SendReport+0x1c>
    return (uint8_t)USBD_FAIL;
 8009f04:	2003      	movs	r0, #3
 8009f06:	e7f5      	b.n	8009ef4 <USBD_HID_SendReport+0x1e>

08009f08 <USBD_CtlSendData>:
  * @param  len: length of data to be sent
  * @retval status
  */
USBD_StatusTypeDef USBD_CtlSendData(USBD_HandleTypeDef *pdev,
                                    uint8_t *pbuf, uint32_t len)
{
 8009f08:	b510      	push	{r4, lr}
 8009f0a:	4613      	mov	r3, r2
  /* Set EP0 State */
  pdev->ep0_state = USBD_EP0_DATA_IN;
 8009f0c:	2202      	movs	r2, #2
  pdev->ep_in[0].total_length = len;

#ifdef USBD_AVOID_PACKET_SPLIT_MPS
  pdev->ep_in[0].rem_length = 0U;
#else
  pdev->ep_in[0].rem_length = len;
 8009f0e:	e9c0 3306 	strd	r3, r3, [r0, #24]
  pdev->ep0_state = USBD_EP0_DATA_IN;
 8009f12:	f8c0 2294 	str.w	r2, [r0, #660]	@ 0x294
#endif /* USBD_AVOID_PACKET_SPLIT_MPS */

  /* Start the transfer */
  (void)USBD_LL_Transmit(pdev, 0x00U, pbuf, len);
 8009f16:	460a      	mov	r2, r1
 8009f18:	2100      	movs	r1, #0
 8009f1a:	f7f7 fd83 	bl	8001a24 <USBD_LL_Transmit>

  return USBD_OK;
}
 8009f1e:	2000      	movs	r0, #0
 8009f20:	bd10      	pop	{r4, pc}

08009f22 <USBD_CtlContinueSendData>:
  * @param  len: length of data to be sent
  * @retval status
  */
USBD_StatusTypeDef USBD_CtlContinueSendData(USBD_HandleTypeDef *pdev,
                                            uint8_t *pbuf, uint32_t len)
{
 8009f22:	b508      	push	{r3, lr}
 8009f24:	4613      	mov	r3, r2
  /* Start the next transfer */
  (void)USBD_LL_Transmit(pdev, 0x00U, pbuf, len);
 8009f26:	460a      	mov	r2, r1
 8009f28:	2100      	movs	r1, #0
 8009f2a:	f7f7 fd7b 	bl	8001a24 <USBD_LL_Transmit>

  return USBD_OK;
}
 8009f2e:	2000      	movs	r0, #0
 8009f30:	bd08      	pop	{r3, pc}

08009f32 <USBD_CtlContinueRx>:
  * @param  len: length of data to be received
  * @retval status
  */
USBD_StatusTypeDef USBD_CtlContinueRx(USBD_HandleTypeDef *pdev,
                                      uint8_t *pbuf, uint32_t len)
{
 8009f32:	b508      	push	{r3, lr}
 8009f34:	4613      	mov	r3, r2
  (void)USBD_LL_PrepareReceive(pdev, 0U, pbuf, len);
 8009f36:	460a      	mov	r2, r1
 8009f38:	2100      	movs	r1, #0
 8009f3a:	f7f7 fd7c 	bl	8001a36 <USBD_LL_PrepareReceive>

  return USBD_OK;
}
 8009f3e:	2000      	movs	r0, #0
 8009f40:	bd08      	pop	{r3, pc}

08009f42 <USBD_CtlSendStatus>:
  *         send zero lzngth packet on the ctl pipe
  * @param  pdev: device instance
  * @retval status
  */
USBD_StatusTypeDef USBD_CtlSendStatus(USBD_HandleTypeDef *pdev)
{
 8009f42:	b508      	push	{r3, lr}
  /* Set EP0 State */
  pdev->ep0_state = USBD_EP0_STATUS_IN;
 8009f44:	2204      	movs	r2, #4

  /* Start the transfer */
  (void)USBD_LL_Transmit(pdev, 0x00U, NULL, 0U);
 8009f46:	2300      	movs	r3, #0
  pdev->ep0_state = USBD_EP0_STATUS_IN;
 8009f48:	f8c0 2294 	str.w	r2, [r0, #660]	@ 0x294
  (void)USBD_LL_Transmit(pdev, 0x00U, NULL, 0U);
 8009f4c:	4619      	mov	r1, r3
 8009f4e:	461a      	mov	r2, r3
 8009f50:	f7f7 fd68 	bl	8001a24 <USBD_LL_Transmit>

  return USBD_OK;
}
 8009f54:	2000      	movs	r0, #0
 8009f56:	bd08      	pop	{r3, pc}

08009f58 <USBD_CtlReceiveStatus>:
  *         receive zero lzngth packet on the ctl pipe
  * @param  pdev: device instance
  * @retval status
  */
USBD_StatusTypeDef USBD_CtlReceiveStatus(USBD_HandleTypeDef *pdev)
{
 8009f58:	b508      	push	{r3, lr}
  /* Set EP0 State */
  pdev->ep0_state = USBD_EP0_STATUS_OUT;
 8009f5a:	2205      	movs	r2, #5

  /* Start the transfer */
  (void)USBD_LL_PrepareReceive(pdev, 0U, NULL, 0U);
 8009f5c:	2300      	movs	r3, #0
  pdev->ep0_state = USBD_EP0_STATUS_OUT;
 8009f5e:	f8c0 2294 	str.w	r2, [r0, #660]	@ 0x294
  (void)USBD_LL_PrepareReceive(pdev, 0U, NULL, 0U);
 8009f62:	4619      	mov	r1, r3
 8009f64:	461a      	mov	r2, r3
 8009f66:	f7f7 fd66 	bl	8001a36 <USBD_LL_PrepareReceive>

  return USBD_OK;
}
 8009f6a:	2000      	movs	r0, #0
 8009f6c:	bd08      	pop	{r3, pc}

08009f6e <_ZNK8touchgfx17AbstractPartition18getAllocationCountEv>:
 8009f6e:	8880      	ldrh	r0, [r0, #4]
 8009f70:	4770      	bx	lr

08009f72 <_ZN8touchgfx17AbstractPartition7indexOfEPKv>:
 8009f72:	b570      	push	{r4, r5, r6, lr}
 8009f74:	6803      	ldr	r3, [r0, #0]
 8009f76:	4605      	mov	r5, r0
 8009f78:	460c      	mov	r4, r1
 8009f7a:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8009f7c:	2100      	movs	r1, #0
 8009f7e:	4798      	blx	r3
 8009f80:	682b      	ldr	r3, [r5, #0]
 8009f82:	4606      	mov	r6, r0
 8009f84:	6a1b      	ldr	r3, [r3, #32]
 8009f86:	4628      	mov	r0, r5
 8009f88:	4798      	blx	r3
 8009f8a:	1ba4      	subs	r4, r4, r6
 8009f8c:	b2a4      	uxth	r4, r4
 8009f8e:	fbb4 f0f0 	udiv	r0, r4, r0
 8009f92:	bd70      	pop	{r4, r5, r6, pc}

08009f94 <_ZN8touchgfx17AbstractPartition5clearEv>:
 8009f94:	2300      	movs	r3, #0
 8009f96:	8083      	strh	r3, [r0, #4]
 8009f98:	4770      	bx	lr

08009f9a <_ZN8touchgfx17AbstractPartition8allocateEt>:
 8009f9a:	b510      	push	{r4, lr}
 8009f9c:	6803      	ldr	r3, [r0, #0]
 8009f9e:	8881      	ldrh	r1, [r0, #4]
 8009fa0:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8009fa2:	4604      	mov	r4, r0
 8009fa4:	4798      	blx	r3
 8009fa6:	88a3      	ldrh	r3, [r4, #4]
 8009fa8:	3301      	adds	r3, #1
 8009faa:	80a3      	strh	r3, [r4, #4]
 8009fac:	bd10      	pop	{r4, pc}

08009fae <_ZN8touchgfx17AbstractPartition10allocateAtEtt>:
 8009fae:	6803      	ldr	r3, [r0, #0]
 8009fb0:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8009fb2:	4718      	bx	r3

08009fb4 <_ZN8touchgfx17AbstractPartitionD1Ev>:
 8009fb4:	4770      	bx	lr
	...

08009fb8 <_ZN8touchgfx17AbstractPartitionC1Ev>:
 8009fb8:	4a02      	ldr	r2, [pc, #8]	@ (8009fc4 <_ZN8touchgfx17AbstractPartitionC1Ev+0xc>)
 8009fba:	6002      	str	r2, [r0, #0]
 8009fbc:	2200      	movs	r2, #0
 8009fbe:	8082      	strh	r2, [r0, #4]
 8009fc0:	4770      	bx	lr
 8009fc2:	bf00      	nop
 8009fc4:	08024988 	.word	0x08024988

08009fc8 <_ZN8touchgfx9Container13getFirstChildEv>:
 8009fc8:	6a80      	ldr	r0, [r0, #40]	@ 0x28
 8009fca:	4770      	bx	lr

08009fcc <_ZN8touchgfx9Container8containsERKNS_8DrawableE>:
 8009fcc:	6a83      	ldr	r3, [r0, #40]	@ 0x28
 8009fce:	2000      	movs	r0, #0
 8009fd0:	b12b      	cbz	r3, 8009fde <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 8009fd2:	b920      	cbnz	r0, 8009fde <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 8009fd4:	1a5a      	subs	r2, r3, r1
 8009fd6:	4250      	negs	r0, r2
 8009fd8:	4150      	adcs	r0, r2
 8009fda:	699b      	ldr	r3, [r3, #24]
 8009fdc:	e7f8      	b.n	8009fd0 <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x4>
 8009fde:	4770      	bx	lr

08009fe0 <_ZN8touchgfx9Container3addERNS_8DrawableE>:
 8009fe0:	2300      	movs	r3, #0
 8009fe2:	6148      	str	r0, [r1, #20]
 8009fe4:	618b      	str	r3, [r1, #24]
 8009fe6:	6a83      	ldr	r3, [r0, #40]	@ 0x28
 8009fe8:	b913      	cbnz	r3, 8009ff0 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x10>
 8009fea:	6281      	str	r1, [r0, #40]	@ 0x28
 8009fec:	4770      	bx	lr
 8009fee:	4613      	mov	r3, r2
 8009ff0:	699a      	ldr	r2, [r3, #24]
 8009ff2:	2a00      	cmp	r2, #0
 8009ff4:	d1fb      	bne.n	8009fee <_ZN8touchgfx9Container3addERNS_8DrawableE+0xe>
 8009ff6:	6199      	str	r1, [r3, #24]
 8009ff8:	4770      	bx	lr

08009ffa <_ZN8touchgfx9Container9removeAllEv>:
 8009ffa:	2200      	movs	r2, #0
 8009ffc:	6a83      	ldr	r3, [r0, #40]	@ 0x28
 8009ffe:	b123      	cbz	r3, 800a00a <_ZN8touchgfx9Container9removeAllEv+0x10>
 800a000:	6999      	ldr	r1, [r3, #24]
 800a002:	6281      	str	r1, [r0, #40]	@ 0x28
 800a004:	e9c3 2205 	strd	r2, r2, [r3, #20]
 800a008:	e7f8      	b.n	8009ffc <_ZN8touchgfx9Container9removeAllEv+0x2>
 800a00a:	4770      	bx	lr

0800a00c <_ZN8touchgfx9Container6unlinkEv>:
 800a00c:	2300      	movs	r3, #0
 800a00e:	6283      	str	r3, [r0, #40]	@ 0x28
 800a010:	4770      	bx	lr

0800a012 <_ZNK8touchgfx9Container12getSolidRectEv>:
 800a012:	2200      	movs	r2, #0
 800a014:	8002      	strh	r2, [r0, #0]
 800a016:	8042      	strh	r2, [r0, #2]
 800a018:	8082      	strh	r2, [r0, #4]
 800a01a:	80c2      	strh	r2, [r0, #6]
 800a01c:	4770      	bx	lr

0800a01e <_ZN8touchgfx9Container20moveChildrenRelativeEss>:
 800a01e:	b570      	push	{r4, r5, r6, lr}
 800a020:	6a84      	ldr	r4, [r0, #40]	@ 0x28
 800a022:	460d      	mov	r5, r1
 800a024:	4616      	mov	r6, r2
 800a026:	b13c      	cbz	r4, 800a038 <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x1a>
 800a028:	6823      	ldr	r3, [r4, #0]
 800a02a:	4620      	mov	r0, r4
 800a02c:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 800a02e:	4632      	mov	r2, r6
 800a030:	4629      	mov	r1, r5
 800a032:	4798      	blx	r3
 800a034:	69a4      	ldr	r4, [r4, #24]
 800a036:	e7f6      	b.n	800a026 <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x8>
 800a038:	bd70      	pop	{r4, r5, r6, pc}

0800a03a <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE>:
 800a03a:	b538      	push	{r3, r4, r5, lr}
 800a03c:	6a84      	ldr	r4, [r0, #40]	@ 0x28
 800a03e:	460d      	mov	r5, r1
 800a040:	b134      	cbz	r4, 800a050 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x16>
 800a042:	682b      	ldr	r3, [r5, #0]
 800a044:	4621      	mov	r1, r4
 800a046:	689b      	ldr	r3, [r3, #8]
 800a048:	4628      	mov	r0, r5
 800a04a:	4798      	blx	r3
 800a04c:	69a4      	ldr	r4, [r4, #24]
 800a04e:	e7f7      	b.n	800a040 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x6>
 800a050:	bd38      	pop	{r3, r4, r5, pc}

0800a052 <_ZN8touchgfx9ContainerD1Ev>:
 800a052:	4770      	bx	lr

0800a054 <_ZN8touchgfx9ContainerD0Ev>:
 800a054:	b510      	push	{r4, lr}
 800a056:	212c      	movs	r1, #44	@ 0x2c
 800a058:	4604      	mov	r4, r0
 800a05a:	f017 fcec 	bl	8021a36 <_ZdlPvj>
 800a05e:	4620      	mov	r0, r4
 800a060:	bd10      	pop	{r4, pc}

0800a062 <_ZN8touchgfx9Container6removeERNS_8DrawableE>:
 800a062:	6a83      	ldr	r3, [r0, #40]	@ 0x28
 800a064:	b19b      	cbz	r3, 800a08e <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 800a066:	428b      	cmp	r3, r1
 800a068:	d109      	bne.n	800a07e <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x1c>
 800a06a:	699a      	ldr	r2, [r3, #24]
 800a06c:	2100      	movs	r1, #0
 800a06e:	6159      	str	r1, [r3, #20]
 800a070:	6282      	str	r2, [r0, #40]	@ 0x28
 800a072:	b902      	cbnz	r2, 800a076 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x14>
 800a074:	4770      	bx	lr
 800a076:	6199      	str	r1, [r3, #24]
 800a078:	4770      	bx	lr
 800a07a:	4613      	mov	r3, r2
 800a07c:	b13a      	cbz	r2, 800a08e <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 800a07e:	699a      	ldr	r2, [r3, #24]
 800a080:	428a      	cmp	r2, r1
 800a082:	d1fa      	bne.n	800a07a <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x18>
 800a084:	698a      	ldr	r2, [r1, #24]
 800a086:	619a      	str	r2, [r3, #24]
 800a088:	2300      	movs	r3, #0
 800a08a:	e9c1 3305 	strd	r3, r3, [r1, #20]
 800a08e:	4770      	bx	lr

0800a090 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_>:
 800a090:	b410      	push	{r4}
 800a092:	6a83      	ldr	r3, [r0, #40]	@ 0x28
 800a094:	4604      	mov	r4, r0
 800a096:	b92b      	cbnz	r3, 800a0a4 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x14>
 800a098:	6803      	ldr	r3, [r0, #0]
 800a09a:	f85d 4b04 	ldr.w	r4, [sp], #4
 800a09e:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 800a0a0:	4611      	mov	r1, r2
 800a0a2:	4718      	bx	r3
 800a0a4:	b941      	cbnz	r1, 800a0b8 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x28>
 800a0a6:	6193      	str	r3, [r2, #24]
 800a0a8:	6282      	str	r2, [r0, #40]	@ 0x28
 800a0aa:	6154      	str	r4, [r2, #20]
 800a0ac:	f85d 4b04 	ldr.w	r4, [sp], #4
 800a0b0:	4770      	bx	lr
 800a0b2:	4603      	mov	r3, r0
 800a0b4:	2800      	cmp	r0, #0
 800a0b6:	d0f9      	beq.n	800a0ac <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1c>
 800a0b8:	4299      	cmp	r1, r3
 800a0ba:	6998      	ldr	r0, [r3, #24]
 800a0bc:	d1f9      	bne.n	800a0b2 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x22>
 800a0be:	6190      	str	r0, [r2, #24]
 800a0c0:	618a      	str	r2, [r1, #24]
 800a0c2:	e7f2      	b.n	800a0aa <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1a>

0800a0c4 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>:
 800a0c4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800a0c8:	461f      	mov	r7, r3
 800a0ca:	f890 3024 	ldrb.w	r3, [r0, #36]	@ 0x24
 800a0ce:	460d      	mov	r5, r1
 800a0d0:	4616      	mov	r6, r2
 800a0d2:	b103      	cbz	r3, 800a0d6 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x12>
 800a0d4:	6038      	str	r0, [r7, #0]
 800a0d6:	6a84      	ldr	r4, [r0, #40]	@ 0x28
 800a0d8:	b314      	cbz	r4, 800a120 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x5c>
 800a0da:	f894 3025 	ldrb.w	r3, [r4, #37]	@ 0x25
 800a0de:	b1eb      	cbz	r3, 800a11c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800a0e0:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 800a0e4:	428d      	cmp	r5, r1
 800a0e6:	db19      	blt.n	800a11c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800a0e8:	8923      	ldrh	r3, [r4, #8]
 800a0ea:	b289      	uxth	r1, r1
 800a0ec:	440b      	add	r3, r1
 800a0ee:	b21b      	sxth	r3, r3
 800a0f0:	429d      	cmp	r5, r3
 800a0f2:	da13      	bge.n	800a11c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800a0f4:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 800a0f8:	4296      	cmp	r6, r2
 800a0fa:	db0f      	blt.n	800a11c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800a0fc:	8963      	ldrh	r3, [r4, #10]
 800a0fe:	b292      	uxth	r2, r2
 800a100:	4413      	add	r3, r2
 800a102:	b21b      	sxth	r3, r3
 800a104:	429e      	cmp	r6, r3
 800a106:	da09      	bge.n	800a11c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800a108:	6823      	ldr	r3, [r4, #0]
 800a10a:	1ab2      	subs	r2, r6, r2
 800a10c:	1a69      	subs	r1, r5, r1
 800a10e:	f8d3 8024 	ldr.w	r8, [r3, #36]	@ 0x24
 800a112:	b212      	sxth	r2, r2
 800a114:	463b      	mov	r3, r7
 800a116:	b209      	sxth	r1, r1
 800a118:	4620      	mov	r0, r4
 800a11a:	47c0      	blx	r8
 800a11c:	69a4      	ldr	r4, [r4, #24]
 800a11e:	e7db      	b.n	800a0d8 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x14>
 800a120:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800a124 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>:
 800a124:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800a128:	4c6e      	ldr	r4, [pc, #440]	@ (800a2e4 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1c0>)
 800a12a:	b0a1      	sub	sp, #132	@ 0x84
 800a12c:	6824      	ldr	r4, [r4, #0]
 800a12e:	9d2a      	ldr	r5, [sp, #168]	@ 0xa8
 800a130:	f894 9049 	ldrb.w	r9, [r4, #73]	@ 0x49
 800a134:	9303      	str	r3, [sp, #12]
 800a136:	2400      	movs	r4, #0
 800a138:	802c      	strh	r4, [r5, #0]
 800a13a:	9d2b      	ldr	r5, [sp, #172]	@ 0xac
 800a13c:	802c      	strh	r4, [r5, #0]
 800a13e:	601c      	str	r4, [r3, #0]
 800a140:	4606      	mov	r6, r0
 800a142:	e9cd 1201 	strd	r1, r2, [sp, #4]
 800a146:	f7ff ffbd 	bl	800a0c4 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 800a14a:	f1b9 0f03 	cmp.w	r9, #3
 800a14e:	f340 80c2 	ble.w	800a2d6 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b2>
 800a152:	4631      	mov	r1, r6
 800a154:	a80c      	add	r0, sp, #48	@ 0x30
 800a156:	f006 fc27 	bl	80109a8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800a15a:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	@ 0x30
 800a15e:	9306      	str	r3, [sp, #24]
 800a160:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	@ 0x32
 800a164:	9307      	str	r3, [sp, #28]
 800a166:	9b03      	ldr	r3, [sp, #12]
 800a168:	f8d3 a000 	ldr.w	sl, [r3]
 800a16c:	f1ba 0f00 	cmp.w	sl, #0
 800a170:	f000 80b4 	beq.w	800a2dc <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b8>
 800a174:	4651      	mov	r1, sl
 800a176:	a810      	add	r0, sp, #64	@ 0x40
 800a178:	f006 fc16 	bl	80109a8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800a17c:	9b01      	ldr	r3, [sp, #4]
 800a17e:	9a06      	ldr	r2, [sp, #24]
 800a180:	f9bd 1044 	ldrsh.w	r1, [sp, #68]	@ 0x44
 800a184:	189d      	adds	r5, r3, r2
 800a186:	f9bd 3040 	ldrsh.w	r3, [sp, #64]	@ 0x40
 800a18a:	9a07      	ldr	r2, [sp, #28]
 800a18c:	2002      	movs	r0, #2
 800a18e:	fb91 f1f0 	sdiv	r1, r1, r0
 800a192:	4419      	add	r1, r3
 800a194:	1a6d      	subs	r5, r5, r1
 800a196:	9b02      	ldr	r3, [sp, #8]
 800a198:	f9bd 1042 	ldrsh.w	r1, [sp, #66]	@ 0x42
 800a19c:	4413      	add	r3, r2
 800a19e:	f9bd 2046 	ldrsh.w	r2, [sp, #70]	@ 0x46
 800a1a2:	fb92 f2f0 	sdiv	r2, r2, r0
 800a1a6:	440a      	add	r2, r1
 800a1a8:	1a9b      	subs	r3, r3, r2
 800a1aa:	435b      	muls	r3, r3
 800a1ac:	fb05 3505 	mla	r5, r5, r5, r3
 800a1b0:	4f4d      	ldr	r7, [pc, #308]	@ (800a2e8 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1c4>)
 800a1b2:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 800a1b4:	ac10      	add	r4, sp, #64	@ 0x40
 800a1b6:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800a1b8:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 800a1ba:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800a1bc:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 800a1be:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800a1c0:	e897 000f 	ldmia.w	r7, {r0, r1, r2, r3}
 800a1c4:	f1b9 0f0c 	cmp.w	r9, #12
 800a1c8:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 800a1cc:	f04f 0303 	mov.w	r3, #3
 800a1d0:	bfc8      	it	gt
 800a1d2:	4698      	movgt	r8, r3
 800a1d4:	f8cd 9000 	str.w	r9, [sp]
 800a1d8:	f04f 0400 	mov.w	r4, #0
 800a1dc:	bfdc      	itt	le
 800a1de:	f109 32ff 	addle.w	r2, r9, #4294967295
 800a1e2:	fb92 f8f3 	sdivle	r8, r2, r3
 800a1e6:	1c63      	adds	r3, r4, #1
 800a1e8:	aa10      	add	r2, sp, #64	@ 0x40
 800a1ea:	f004 0401 	and.w	r4, r4, #1
 800a1ee:	9308      	str	r3, [sp, #32]
 800a1f0:	eb02 1444 	add.w	r4, r2, r4, lsl #5
 800a1f4:	9b00      	ldr	r3, [sp, #0]
 800a1f6:	fb93 f3f8 	sdiv	r3, r3, r8
 800a1fa:	b29b      	uxth	r3, r3
 800a1fc:	3404      	adds	r4, #4
 800a1fe:	f04f 0b00 	mov.w	fp, #0
 800a202:	9304      	str	r3, [sp, #16]
 800a204:	9a04      	ldr	r2, [sp, #16]
 800a206:	f854 3c04 	ldr.w	r3, [r4, #-4]
 800a20a:	fb13 f302 	smulbb	r3, r3, r2
 800a20e:	9a01      	ldr	r2, [sp, #4]
 800a210:	b29b      	uxth	r3, r3
 800a212:	1899      	adds	r1, r3, r2
 800a214:	9305      	str	r3, [sp, #20]
 800a216:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
 800a21a:	b209      	sxth	r1, r1
 800a21c:	4299      	cmp	r1, r3
 800a21e:	db4d      	blt.n	800a2bc <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800a220:	8932      	ldrh	r2, [r6, #8]
 800a222:	4413      	add	r3, r2
 800a224:	b21b      	sxth	r3, r3
 800a226:	4299      	cmp	r1, r3
 800a228:	da48      	bge.n	800a2bc <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800a22a:	9b04      	ldr	r3, [sp, #16]
 800a22c:	6827      	ldr	r7, [r4, #0]
 800a22e:	fb17 f703 	smulbb	r7, r7, r3
 800a232:	9b02      	ldr	r3, [sp, #8]
 800a234:	b2bf      	uxth	r7, r7
 800a236:	18fa      	adds	r2, r7, r3
 800a238:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
 800a23c:	b212      	sxth	r2, r2
 800a23e:	429a      	cmp	r2, r3
 800a240:	db3c      	blt.n	800a2bc <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800a242:	8970      	ldrh	r0, [r6, #10]
 800a244:	4403      	add	r3, r0
 800a246:	b21b      	sxth	r3, r3
 800a248:	429a      	cmp	r2, r3
 800a24a:	da37      	bge.n	800a2bc <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800a24c:	2300      	movs	r3, #0
 800a24e:	930b      	str	r3, [sp, #44]	@ 0x2c
 800a250:	4630      	mov	r0, r6
 800a252:	ab0b      	add	r3, sp, #44	@ 0x2c
 800a254:	f7ff ff36 	bl	800a0c4 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 800a258:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 800a25a:	b37a      	cbz	r2, 800a2bc <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800a25c:	4552      	cmp	r2, sl
 800a25e:	d02d      	beq.n	800a2bc <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800a260:	4611      	mov	r1, r2
 800a262:	a80e      	add	r0, sp, #56	@ 0x38
 800a264:	9209      	str	r2, [sp, #36]	@ 0x24
 800a266:	f006 fb9f 	bl	80109a8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800a26a:	9a06      	ldr	r2, [sp, #24]
 800a26c:	f9bd 0038 	ldrsh.w	r0, [sp, #56]	@ 0x38
 800a270:	9b01      	ldr	r3, [sp, #4]
 800a272:	f9bd 103c 	ldrsh.w	r1, [sp, #60]	@ 0x3c
 800a276:	f9bd c03e 	ldrsh.w	ip, [sp, #62]	@ 0x3e
 800a27a:	4413      	add	r3, r2
 800a27c:	f04f 0e02 	mov.w	lr, #2
 800a280:	fb91 f1fe 	sdiv	r1, r1, lr
 800a284:	4401      	add	r1, r0
 800a286:	1a58      	subs	r0, r3, r1
 800a288:	9a07      	ldr	r2, [sp, #28]
 800a28a:	9b02      	ldr	r3, [sp, #8]
 800a28c:	f9bd 103a 	ldrsh.w	r1, [sp, #58]	@ 0x3a
 800a290:	fb9c fcfe 	sdiv	ip, ip, lr
 800a294:	4413      	add	r3, r2
 800a296:	448c      	add	ip, r1
 800a298:	eba3 030c 	sub.w	r3, r3, ip
 800a29c:	435b      	muls	r3, r3
 800a29e:	fb00 3300 	mla	r3, r0, r0, r3
 800a2a2:	42ab      	cmp	r3, r5
 800a2a4:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 800a2a6:	d208      	bcs.n	800a2ba <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x196>
 800a2a8:	9803      	ldr	r0, [sp, #12]
 800a2aa:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 800a2ac:	6001      	str	r1, [r0, #0]
 800a2ae:	992a      	ldr	r1, [sp, #168]	@ 0xa8
 800a2b0:	9805      	ldr	r0, [sp, #20]
 800a2b2:	8008      	strh	r0, [r1, #0]
 800a2b4:	992b      	ldr	r1, [sp, #172]	@ 0xac
 800a2b6:	461d      	mov	r5, r3
 800a2b8:	800f      	strh	r7, [r1, #0]
 800a2ba:	4692      	mov	sl, r2
 800a2bc:	f10b 0b01 	add.w	fp, fp, #1
 800a2c0:	f1bb 0f04 	cmp.w	fp, #4
 800a2c4:	f104 0408 	add.w	r4, r4, #8
 800a2c8:	d19c      	bne.n	800a204 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xe0>
 800a2ca:	9b00      	ldr	r3, [sp, #0]
 800a2cc:	9c08      	ldr	r4, [sp, #32]
 800a2ce:	444b      	add	r3, r9
 800a2d0:	4544      	cmp	r4, r8
 800a2d2:	9300      	str	r3, [sp, #0]
 800a2d4:	d187      	bne.n	800a1e6 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xc2>
 800a2d6:	b021      	add	sp, #132	@ 0x84
 800a2d8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800a2dc:	f04f 35ff 	mov.w	r5, #4294967295
 800a2e0:	e766      	b.n	800a1b0 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x8c>
 800a2e2:	bf00      	nop
 800a2e4:	20013f2c 	.word	0x20013f2c
 800a2e8:	08023904 	.word	0x08023904

0800a2ec <_ZN8touchgfx4RectaNERKS0_>:
 800a2ec:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800a2f0:	f9b1 7000 	ldrsh.w	r7, [r1]
 800a2f4:	888c      	ldrh	r4, [r1, #4]
 800a2f6:	f9b0 9000 	ldrsh.w	r9, [r0]
 800a2fa:	443c      	add	r4, r7
 800a2fc:	b2a4      	uxth	r4, r4
 800a2fe:	fa0f f884 	sxth.w	r8, r4
 800a302:	45c1      	cmp	r9, r8
 800a304:	da2f      	bge.n	800a366 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800a306:	8882      	ldrh	r2, [r0, #4]
 800a308:	444a      	add	r2, r9
 800a30a:	b292      	uxth	r2, r2
 800a30c:	fa0f fe82 	sxth.w	lr, r2
 800a310:	4577      	cmp	r7, lr
 800a312:	da28      	bge.n	800a366 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800a314:	f9b1 5002 	ldrsh.w	r5, [r1, #2]
 800a318:	88cb      	ldrh	r3, [r1, #6]
 800a31a:	f9b0 6002 	ldrsh.w	r6, [r0, #2]
 800a31e:	442b      	add	r3, r5
 800a320:	b21b      	sxth	r3, r3
 800a322:	429e      	cmp	r6, r3
 800a324:	da1f      	bge.n	800a366 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800a326:	88c3      	ldrh	r3, [r0, #6]
 800a328:	4433      	add	r3, r6
 800a32a:	b29b      	uxth	r3, r3
 800a32c:	fa0f fc83 	sxth.w	ip, r3
 800a330:	4565      	cmp	r5, ip
 800a332:	da18      	bge.n	800a366 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800a334:	454f      	cmp	r7, r9
 800a336:	bfb8      	it	lt
 800a338:	464f      	movlt	r7, r9
 800a33a:	42b5      	cmp	r5, r6
 800a33c:	bfb8      	it	lt
 800a33e:	4635      	movlt	r5, r6
 800a340:	45f0      	cmp	r8, lr
 800a342:	bfd8      	it	le
 800a344:	4622      	movle	r2, r4
 800a346:	1bd2      	subs	r2, r2, r7
 800a348:	8082      	strh	r2, [r0, #4]
 800a34a:	884a      	ldrh	r2, [r1, #2]
 800a34c:	88c9      	ldrh	r1, [r1, #6]
 800a34e:	8007      	strh	r7, [r0, #0]
 800a350:	440a      	add	r2, r1
 800a352:	b292      	uxth	r2, r2
 800a354:	b211      	sxth	r1, r2
 800a356:	458c      	cmp	ip, r1
 800a358:	bfa8      	it	ge
 800a35a:	4613      	movge	r3, r2
 800a35c:	1b5b      	subs	r3, r3, r5
 800a35e:	80c3      	strh	r3, [r0, #6]
 800a360:	8045      	strh	r5, [r0, #2]
 800a362:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800a366:	2300      	movs	r3, #0
 800a368:	8003      	strh	r3, [r0, #0]
 800a36a:	8043      	strh	r3, [r0, #2]
 800a36c:	8083      	strh	r3, [r0, #4]
 800a36e:	80c3      	strh	r3, [r0, #6]
 800a370:	e7f7      	b.n	800a362 <_ZN8touchgfx4RectaNERKS0_+0x76>

0800a372 <_ZNK8touchgfx4Rect7isEmptyEv>:
 800a372:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 800a376:	2b00      	cmp	r3, #0
 800a378:	dd06      	ble.n	800a388 <_ZNK8touchgfx4Rect7isEmptyEv+0x16>
 800a37a:	f9b0 0006 	ldrsh.w	r0, [r0, #6]
 800a37e:	2800      	cmp	r0, #0
 800a380:	bfcc      	ite	gt
 800a382:	2000      	movgt	r0, #0
 800a384:	2001      	movle	r0, #1
 800a386:	4770      	bx	lr
 800a388:	2001      	movs	r0, #1
 800a38a:	4770      	bx	lr

0800a38c <_ZNK8touchgfx9Container16getContainedAreaEv>:
 800a38c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800a390:	2300      	movs	r3, #0
 800a392:	6a8d      	ldr	r5, [r1, #40]	@ 0x28
 800a394:	8003      	strh	r3, [r0, #0]
 800a396:	4604      	mov	r4, r0
 800a398:	8043      	strh	r3, [r0, #2]
 800a39a:	8083      	strh	r3, [r0, #4]
 800a39c:	80c3      	strh	r3, [r0, #6]
 800a39e:	2d00      	cmp	r5, #0
 800a3a0:	d040      	beq.n	800a424 <_ZNK8touchgfx9Container16getContainedAreaEv+0x98>
 800a3a2:	1d28      	adds	r0, r5, #4
 800a3a4:	f7ff ffe5 	bl	800a372 <_ZNK8touchgfx4Rect7isEmptyEv>
 800a3a8:	b988      	cbnz	r0, 800a3ce <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 800a3aa:	4620      	mov	r0, r4
 800a3ac:	f7ff ffe1 	bl	800a372 <_ZNK8touchgfx4Rect7isEmptyEv>
 800a3b0:	f9b5 2004 	ldrsh.w	r2, [r5, #4]
 800a3b4:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 800a3b8:	f9b5 e008 	ldrsh.w	lr, [r5, #8]
 800a3bc:	f9b5 c00a 	ldrsh.w	ip, [r5, #10]
 800a3c0:	b138      	cbz	r0, 800a3d2 <_ZNK8touchgfx9Container16getContainedAreaEv+0x46>
 800a3c2:	8022      	strh	r2, [r4, #0]
 800a3c4:	8063      	strh	r3, [r4, #2]
 800a3c6:	f8a4 e004 	strh.w	lr, [r4, #4]
 800a3ca:	f8a4 c006 	strh.w	ip, [r4, #6]
 800a3ce:	69ad      	ldr	r5, [r5, #24]
 800a3d0:	e7e5      	b.n	800a39e <_ZNK8touchgfx9Container16getContainedAreaEv+0x12>
 800a3d2:	f9b4 0000 	ldrsh.w	r0, [r4]
 800a3d6:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 800a3da:	f8b4 8004 	ldrh.w	r8, [r4, #4]
 800a3de:	4290      	cmp	r0, r2
 800a3e0:	4607      	mov	r7, r0
 800a3e2:	bfa8      	it	ge
 800a3e4:	4617      	movge	r7, r2
 800a3e6:	4472      	add	r2, lr
 800a3e8:	f8b4 e006 	ldrh.w	lr, [r4, #6]
 800a3ec:	8027      	strh	r7, [r4, #0]
 800a3ee:	4299      	cmp	r1, r3
 800a3f0:	460e      	mov	r6, r1
 800a3f2:	4440      	add	r0, r8
 800a3f4:	bfa8      	it	ge
 800a3f6:	461e      	movge	r6, r3
 800a3f8:	4471      	add	r1, lr
 800a3fa:	4463      	add	r3, ip
 800a3fc:	b200      	sxth	r0, r0
 800a3fe:	b212      	sxth	r2, r2
 800a400:	b209      	sxth	r1, r1
 800a402:	b21b      	sxth	r3, r3
 800a404:	4290      	cmp	r0, r2
 800a406:	bfac      	ite	ge
 800a408:	ebc7 0200 	rsbge	r2, r7, r0
 800a40c:	ebc7 0202 	rsblt	r2, r7, r2
 800a410:	4299      	cmp	r1, r3
 800a412:	bfac      	ite	ge
 800a414:	ebc6 0301 	rsbge	r3, r6, r1
 800a418:	ebc6 0303 	rsblt	r3, r6, r3
 800a41c:	8066      	strh	r6, [r4, #2]
 800a41e:	80a2      	strh	r2, [r4, #4]
 800a420:	80e3      	strh	r3, [r4, #6]
 800a422:	e7d4      	b.n	800a3ce <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 800a424:	4620      	mov	r0, r4
 800a426:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800a42a <_ZNK8touchgfx9Container4drawERKNS_4RectE>:
 800a42a:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 800a42e:	f890 3025 	ldrb.w	r3, [r0, #37]	@ 0x25
 800a432:	b383      	cbz	r3, 800a496 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 800a434:	6a84      	ldr	r4, [r0, #40]	@ 0x28
 800a436:	b374      	cbz	r4, 800a496 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 800a438:	f9b1 5000 	ldrsh.w	r5, [r1]
 800a43c:	f9b1 6002 	ldrsh.w	r6, [r1, #2]
 800a440:	f9b1 7004 	ldrsh.w	r7, [r1, #4]
 800a444:	f9b1 8006 	ldrsh.w	r8, [r1, #6]
 800a448:	f894 3025 	ldrb.w	r3, [r4, #37]	@ 0x25
 800a44c:	b303      	cbz	r3, 800a490 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 800a44e:	4668      	mov	r0, sp
 800a450:	1d21      	adds	r1, r4, #4
 800a452:	f8ad 5000 	strh.w	r5, [sp]
 800a456:	f8ad 6002 	strh.w	r6, [sp, #2]
 800a45a:	f8ad 7004 	strh.w	r7, [sp, #4]
 800a45e:	f8ad 8006 	strh.w	r8, [sp, #6]
 800a462:	f7ff ff43 	bl	800a2ec <_ZN8touchgfx4RectaNERKS0_>
 800a466:	4668      	mov	r0, sp
 800a468:	f7ff ff83 	bl	800a372 <_ZNK8touchgfx4Rect7isEmptyEv>
 800a46c:	b980      	cbnz	r0, 800a490 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 800a46e:	f8bd 3000 	ldrh.w	r3, [sp]
 800a472:	88a2      	ldrh	r2, [r4, #4]
 800a474:	1a9b      	subs	r3, r3, r2
 800a476:	f8ad 3000 	strh.w	r3, [sp]
 800a47a:	88e2      	ldrh	r2, [r4, #6]
 800a47c:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800a480:	1a9b      	subs	r3, r3, r2
 800a482:	f8ad 3002 	strh.w	r3, [sp, #2]
 800a486:	6823      	ldr	r3, [r4, #0]
 800a488:	4669      	mov	r1, sp
 800a48a:	689b      	ldr	r3, [r3, #8]
 800a48c:	4620      	mov	r0, r4
 800a48e:	4798      	blx	r3
 800a490:	69a4      	ldr	r4, [r4, #24]
 800a492:	2c00      	cmp	r4, #0
 800a494:	d1d8      	bne.n	800a448 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x1e>
 800a496:	b002      	add	sp, #8
 800a498:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800a49c <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>:
 800a49c:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800a49e:	f890 3025 	ldrb.w	r3, [r0, #37]	@ 0x25
 800a4a2:	460d      	mov	r5, r1
 800a4a4:	4616      	mov	r6, r2
 800a4a6:	b323      	cbz	r3, 800a4f2 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 800a4a8:	6a84      	ldr	r4, [r0, #40]	@ 0x28
 800a4aa:	b314      	cbz	r4, 800a4f2 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 800a4ac:	f894 3025 	ldrb.w	r3, [r4, #37]	@ 0x25
 800a4b0:	b1eb      	cbz	r3, 800a4ee <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 800a4b2:	6828      	ldr	r0, [r5, #0]
 800a4b4:	6869      	ldr	r1, [r5, #4]
 800a4b6:	466b      	mov	r3, sp
 800a4b8:	c303      	stmia	r3!, {r0, r1}
 800a4ba:	4668      	mov	r0, sp
 800a4bc:	1d21      	adds	r1, r4, #4
 800a4be:	f7ff ff15 	bl	800a2ec <_ZN8touchgfx4RectaNERKS0_>
 800a4c2:	4668      	mov	r0, sp
 800a4c4:	f7ff ff55 	bl	800a372 <_ZNK8touchgfx4Rect7isEmptyEv>
 800a4c8:	b988      	cbnz	r0, 800a4ee <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 800a4ca:	f8bd 3000 	ldrh.w	r3, [sp]
 800a4ce:	88a2      	ldrh	r2, [r4, #4]
 800a4d0:	1a9b      	subs	r3, r3, r2
 800a4d2:	f8ad 3000 	strh.w	r3, [sp]
 800a4d6:	88e2      	ldrh	r2, [r4, #6]
 800a4d8:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800a4dc:	1a9b      	subs	r3, r3, r2
 800a4de:	f8ad 3002 	strh.w	r3, [sp, #2]
 800a4e2:	6823      	ldr	r3, [r4, #0]
 800a4e4:	4632      	mov	r2, r6
 800a4e6:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 800a4e8:	4669      	mov	r1, sp
 800a4ea:	4620      	mov	r0, r4
 800a4ec:	4798      	blx	r3
 800a4ee:	69a4      	ldr	r4, [r4, #24]
 800a4f0:	e7db      	b.n	800a4aa <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0xe>
 800a4f2:	b002      	add	sp, #8
 800a4f4:	bd70      	pop	{r4, r5, r6, pc}

0800a4f6 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEt>:
 800a4f6:	b513      	push	{r0, r1, r4, lr}
 800a4f8:	6803      	ldr	r3, [r0, #0]
 800a4fa:	f8d3 40b4 	ldr.w	r4, [r3, #180]	@ 0xb4
 800a4fe:	2300      	movs	r3, #0
 800a500:	e9cd 3300 	strd	r3, r3, [sp]
 800a504:	466b      	mov	r3, sp
 800a506:	47a0      	blx	r4
 800a508:	b002      	add	sp, #8
 800a50a:	bd10      	pop	{r4, pc}

0800a50c <_ZN8touchgfx3HAL16flushFrameBufferEv>:
 800a50c:	2301      	movs	r3, #1
 800a50e:	f880 304b 	strb.w	r3, [r0, #75]	@ 0x4b
 800a512:	f880 306d 	strb.w	r3, [r0, #109]	@ 0x6d
 800a516:	4770      	bx	lr

0800a518 <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>:
 800a518:	2301      	movs	r3, #1
 800a51a:	f880 304b 	strb.w	r3, [r0, #75]	@ 0x4b
 800a51e:	f880 306d 	strb.w	r3, [r0, #109]	@ 0x6d
 800a522:	4770      	bx	lr

0800a524 <_ZN8touchgfx3HAL17allowDMATransfersEv>:
 800a524:	6843      	ldr	r3, [r0, #4]
 800a526:	2201      	movs	r2, #1
 800a528:	725a      	strb	r2, [r3, #9]
 800a52a:	6840      	ldr	r0, [r0, #4]
 800a52c:	6803      	ldr	r3, [r0, #0]
 800a52e:	691b      	ldr	r3, [r3, #16]
 800a530:	4718      	bx	r3

0800a532 <_ZN8touchgfx3HAL8flushDMAEv>:
 800a532:	6840      	ldr	r0, [r0, #4]
 800a534:	6803      	ldr	r3, [r0, #0]
 800a536:	689b      	ldr	r3, [r3, #8]
 800a538:	4718      	bx	r3

0800a53a <_ZN8touchgfx3HAL8blitCopyEPKtttttthbtNS_6Bitmap12BitmapFormatES4_b>:
 800a53a:	b530      	push	{r4, r5, lr}
 800a53c:	b08b      	sub	sp, #44	@ 0x2c
 800a53e:	6804      	ldr	r4, [r0, #0]
 800a540:	f89d 5058 	ldrb.w	r5, [sp, #88]	@ 0x58
 800a544:	9509      	str	r5, [sp, #36]	@ 0x24
 800a546:	f89d 5054 	ldrb.w	r5, [sp, #84]	@ 0x54
 800a54a:	9508      	str	r5, [sp, #32]
 800a54c:	f89d 5050 	ldrb.w	r5, [sp, #80]	@ 0x50
 800a550:	9507      	str	r5, [sp, #28]
 800a552:	f8bd 504c 	ldrh.w	r5, [sp, #76]	@ 0x4c
 800a556:	9506      	str	r5, [sp, #24]
 800a558:	f89d 5048 	ldrb.w	r5, [sp, #72]	@ 0x48
 800a55c:	9505      	str	r5, [sp, #20]
 800a55e:	f89d 5044 	ldrb.w	r5, [sp, #68]	@ 0x44
 800a562:	9504      	str	r5, [sp, #16]
 800a564:	f8bd 5040 	ldrh.w	r5, [sp, #64]	@ 0x40
 800a568:	9503      	str	r5, [sp, #12]
 800a56a:	f8bd 503c 	ldrh.w	r5, [sp, #60]	@ 0x3c
 800a56e:	9502      	str	r5, [sp, #8]
 800a570:	f8bd 5038 	ldrh.w	r5, [sp, #56]	@ 0x38
 800a574:	e9cd 3500 	strd	r3, r5, [sp]
 800a578:	4613      	mov	r3, r2
 800a57a:	6c24      	ldr	r4, [r4, #64]	@ 0x40
 800a57c:	2200      	movs	r2, #0
 800a57e:	47a0      	blx	r4
 800a580:	b00b      	add	sp, #44	@ 0x2c
 800a582:	bd30      	pop	{r4, r5, pc}

0800a584 <_ZN8touchgfx3HAL10beginFrameEv>:
 800a584:	4b04      	ldr	r3, [pc, #16]	@ (800a598 <_ZN8touchgfx3HAL10beginFrameEv+0x14>)
 800a586:	781b      	ldrb	r3, [r3, #0]
 800a588:	b123      	cbz	r3, 800a594 <_ZN8touchgfx3HAL10beginFrameEv+0x10>
 800a58a:	f890 006e 	ldrb.w	r0, [r0, #110]	@ 0x6e
 800a58e:	f080 0001 	eor.w	r0, r0, #1
 800a592:	4770      	bx	lr
 800a594:	2001      	movs	r0, #1
 800a596:	4770      	bx	lr
 800a598:	20013f28 	.word	0x20013f28

0800a59c <_ZN8touchgfx3HAL8endFrameEv>:
 800a59c:	b510      	push	{r4, lr}
 800a59e:	4604      	mov	r4, r0
 800a5a0:	6840      	ldr	r0, [r0, #4]
 800a5a2:	6803      	ldr	r3, [r0, #0]
 800a5a4:	689b      	ldr	r3, [r3, #8]
 800a5a6:	4798      	blx	r3
 800a5a8:	f894 306d 	ldrb.w	r3, [r4, #109]	@ 0x6d
 800a5ac:	b113      	cbz	r3, 800a5b4 <_ZN8touchgfx3HAL8endFrameEv+0x18>
 800a5ae:	2301      	movs	r3, #1
 800a5b0:	f884 306e 	strb.w	r3, [r4, #110]	@ 0x6e
 800a5b4:	bd10      	pop	{r4, pc}

0800a5b6 <_ZN8touchgfx3HAL10initializeEv>:
 800a5b6:	b510      	push	{r4, lr}
 800a5b8:	4604      	mov	r4, r0
 800a5ba:	f7f6 fac5 	bl	8000b48 <_ZN8touchgfx10OSWrappers10initializeEv>
 800a5be:	f7f6 f9cd 	bl	800095c <_ZN8touchgfx4GPIO4initEv>
 800a5c2:	6860      	ldr	r0, [r4, #4]
 800a5c4:	6803      	ldr	r3, [r0, #0]
 800a5c6:	68db      	ldr	r3, [r3, #12]
 800a5c8:	4798      	blx	r3
 800a5ca:	68e0      	ldr	r0, [r4, #12]
 800a5cc:	6803      	ldr	r3, [r0, #0]
 800a5ce:	689b      	ldr	r3, [r3, #8]
 800a5d0:	4798      	blx	r3
 800a5d2:	6823      	ldr	r3, [r4, #0]
 800a5d4:	4620      	mov	r0, r4
 800a5d6:	6f9b      	ldr	r3, [r3, #120]	@ 0x78
 800a5d8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800a5dc:	4718      	bx	r3
	...

0800a5e0 <_ZN8touchgfx3HAL4tickEv>:
 800a5e0:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800a5e2:	6803      	ldr	r3, [r0, #0]
 800a5e4:	4d62      	ldr	r5, [pc, #392]	@ (800a770 <_ZN8touchgfx3HAL4tickEv+0x190>)
 800a5e6:	f8d3 30c0 	ldr.w	r3, [r3, #192]	@ 0xc0
 800a5ea:	4604      	mov	r4, r0
 800a5ec:	4798      	blx	r3
 800a5ee:	2800      	cmp	r0, #0
 800a5f0:	f000 809e 	beq.w	800a730 <_ZN8touchgfx3HAL4tickEv+0x150>
 800a5f4:	f894 3048 	ldrb.w	r3, [r4, #72]	@ 0x48
 800a5f8:	2b02      	cmp	r3, #2
 800a5fa:	d002      	beq.n	800a602 <_ZN8touchgfx3HAL4tickEv+0x22>
 800a5fc:	2001      	movs	r0, #1
 800a5fe:	f7f6 f92b 	bl	8000858 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
 800a602:	f894 306a 	ldrb.w	r3, [r4, #106]	@ 0x6a
 800a606:	f884 306b 	strb.w	r3, [r4, #107]	@ 0x6b
 800a60a:	f894 3079 	ldrb.w	r3, [r4, #121]	@ 0x79
 800a60e:	2600      	movs	r6, #0
 800a610:	f884 606a 	strb.w	r6, [r4, #106]	@ 0x6a
 800a614:	f884 604b 	strb.w	r6, [r4, #75]	@ 0x4b
 800a618:	b133      	cbz	r3, 800a628 <_ZN8touchgfx3HAL4tickEv+0x48>
 800a61a:	6823      	ldr	r3, [r4, #0]
 800a61c:	4620      	mov	r0, r4
 800a61e:	f8d3 30d4 	ldr.w	r3, [r3, #212]	@ 0xd4
 800a622:	4798      	blx	r3
 800a624:	f884 6079 	strb.w	r6, [r4, #121]	@ 0x79
 800a628:	f894 304a 	ldrb.w	r3, [r4, #74]	@ 0x4a
 800a62c:	6862      	ldr	r2, [r4, #4]
 800a62e:	f083 0301 	eor.w	r3, r3, #1
 800a632:	7253      	strb	r3, [r2, #9]
 800a634:	2601      	movs	r6, #1
 800a636:	702e      	strb	r6, [r5, #0]
 800a638:	f004 ff68 	bl	800f50c <_ZN8touchgfx11Application11getInstanceEv>
 800a63c:	6803      	ldr	r3, [r0, #0]
 800a63e:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 800a640:	4798      	blx	r3
 800a642:	f894 306b 	ldrb.w	r3, [r4, #107]	@ 0x6b
 800a646:	b90b      	cbnz	r3, 800a64c <_ZN8touchgfx3HAL4tickEv+0x6c>
 800a648:	f884 606b 	strb.w	r6, [r4, #107]	@ 0x6b
 800a64c:	f004 ff5e 	bl	800f50c <_ZN8touchgfx11Application11getInstanceEv>
 800a650:	6803      	ldr	r3, [r0, #0]
 800a652:	695b      	ldr	r3, [r3, #20]
 800a654:	4798      	blx	r3
 800a656:	6de0      	ldr	r0, [r4, #92]	@ 0x5c
 800a658:	6803      	ldr	r3, [r0, #0]
 800a65a:	691b      	ldr	r3, [r3, #16]
 800a65c:	4798      	blx	r3
 800a65e:	f894 306b 	ldrb.w	r3, [r4, #107]	@ 0x6b
 800a662:	f894 206c 	ldrb.w	r2, [r4, #108]	@ 0x6c
 800a666:	3b01      	subs	r3, #1
 800a668:	b2db      	uxtb	r3, r3
 800a66a:	f884 306b 	strb.w	r3, [r4, #107]	@ 0x6b
 800a66e:	b10a      	cbz	r2, 800a674 <_ZN8touchgfx3HAL4tickEv+0x94>
 800a670:	2b00      	cmp	r3, #0
 800a672:	d1eb      	bne.n	800a64c <_ZN8touchgfx3HAL4tickEv+0x6c>
 800a674:	4a3f      	ldr	r2, [pc, #252]	@ (800a774 <_ZN8touchgfx3HAL4tickEv+0x194>)
 800a676:	f994 1068 	ldrsb.w	r1, [r4, #104]	@ 0x68
 800a67a:	7813      	ldrb	r3, [r2, #0]
 800a67c:	3301      	adds	r3, #1
 800a67e:	b25b      	sxtb	r3, r3
 800a680:	4299      	cmp	r1, r3
 800a682:	7013      	strb	r3, [r2, #0]
 800a684:	dc10      	bgt.n	800a6a8 <_ZN8touchgfx3HAL4tickEv+0xc8>
 800a686:	68e0      	ldr	r0, [r4, #12]
 800a688:	2300      	movs	r3, #0
 800a68a:	7013      	strb	r3, [r2, #0]
 800a68c:	6803      	ldr	r3, [r0, #0]
 800a68e:	aa03      	add	r2, sp, #12
 800a690:	68db      	ldr	r3, [r3, #12]
 800a692:	a902      	add	r1, sp, #8
 800a694:	4798      	blx	r3
 800a696:	6823      	ldr	r3, [r4, #0]
 800a698:	2800      	cmp	r0, #0
 800a69a:	d059      	beq.n	800a750 <_ZN8touchgfx3HAL4tickEv+0x170>
 800a69c:	f8d3 30cc 	ldr.w	r3, [r3, #204]	@ 0xcc
 800a6a0:	e9dd 1202 	ldrd	r1, r2, [sp, #8]
 800a6a4:	4620      	mov	r0, r4
 800a6a6:	4798      	blx	r3
 800a6a8:	6960      	ldr	r0, [r4, #20]
 800a6aa:	2300      	movs	r3, #0
 800a6ac:	f88d 3007 	strb.w	r3, [sp, #7]
 800a6b0:	b158      	cbz	r0, 800a6ca <_ZN8touchgfx3HAL4tickEv+0xea>
 800a6b2:	6803      	ldr	r3, [r0, #0]
 800a6b4:	f10d 0107 	add.w	r1, sp, #7
 800a6b8:	68db      	ldr	r3, [r3, #12]
 800a6ba:	4798      	blx	r3
 800a6bc:	b128      	cbz	r0, 800a6ca <_ZN8touchgfx3HAL4tickEv+0xea>
 800a6be:	6de0      	ldr	r0, [r4, #92]	@ 0x5c
 800a6c0:	f89d 1007 	ldrb.w	r1, [sp, #7]
 800a6c4:	6803      	ldr	r3, [r0, #0]
 800a6c6:	68db      	ldr	r3, [r3, #12]
 800a6c8:	4798      	blx	r3
 800a6ca:	f104 001c 	add.w	r0, r4, #28
 800a6ce:	f016 fbb1 	bl	8020e34 <_ZN8touchgfx8Gestures4tickEv>
 800a6d2:	f894 3070 	ldrb.w	r3, [r4, #112]	@ 0x70
 800a6d6:	b30b      	cbz	r3, 800a71c <_ZN8touchgfx3HAL4tickEv+0x13c>
 800a6d8:	6920      	ldr	r0, [r4, #16]
 800a6da:	6803      	ldr	r3, [r0, #0]
 800a6dc:	691b      	ldr	r3, [r3, #16]
 800a6de:	4798      	blx	r3
 800a6e0:	6f63      	ldr	r3, [r4, #116]	@ 0x74
 800a6e2:	4606      	mov	r6, r0
 800a6e4:	b903      	cbnz	r3, 800a6e8 <_ZN8touchgfx3HAL4tickEv+0x108>
 800a6e6:	6760      	str	r0, [r4, #116]	@ 0x74
 800a6e8:	6f63      	ldr	r3, [r4, #116]	@ 0x74
 800a6ea:	4a23      	ldr	r2, [pc, #140]	@ (800a778 <_ZN8touchgfx3HAL4tickEv+0x198>)
 800a6ec:	1af3      	subs	r3, r6, r3
 800a6ee:	4293      	cmp	r3, r2
 800a6f0:	d914      	bls.n	800a71c <_ZN8touchgfx3HAL4tickEv+0x13c>
 800a6f2:	6920      	ldr	r0, [r4, #16]
 800a6f4:	6803      	ldr	r3, [r0, #0]
 800a6f6:	699b      	ldr	r3, [r3, #24]
 800a6f8:	4798      	blx	r3
 800a6fa:	6f63      	ldr	r3, [r4, #116]	@ 0x74
 800a6fc:	2264      	movs	r2, #100	@ 0x64
 800a6fe:	1af3      	subs	r3, r6, r3
 800a700:	fbb3 f3f2 	udiv	r3, r3, r2
 800a704:	fbb0 f0f3 	udiv	r0, r0, r3
 800a708:	2800      	cmp	r0, #0
 800a70a:	dc26      	bgt.n	800a75a <_ZN8touchgfx3HAL4tickEv+0x17a>
 800a70c:	f884 2069 	strb.w	r2, [r4, #105]	@ 0x69
 800a710:	6920      	ldr	r0, [r4, #16]
 800a712:	6803      	ldr	r3, [r0, #0]
 800a714:	2100      	movs	r1, #0
 800a716:	69db      	ldr	r3, [r3, #28]
 800a718:	4798      	blx	r3
 800a71a:	6766      	str	r6, [r4, #116]	@ 0x74
 800a71c:	6823      	ldr	r3, [r4, #0]
 800a71e:	4620      	mov	r0, r4
 800a720:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
 800a724:	4798      	blx	r3
 800a726:	f004 fef1 	bl	800f50c <_ZN8touchgfx11Application11getInstanceEv>
 800a72a:	6803      	ldr	r3, [r0, #0]
 800a72c:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800a72e:	4798      	blx	r3
 800a730:	6823      	ldr	r3, [r4, #0]
 800a732:	4620      	mov	r0, r4
 800a734:	f8d3 30c4 	ldr.w	r3, [r3, #196]	@ 0xc4
 800a738:	4798      	blx	r3
 800a73a:	f894 3048 	ldrb.w	r3, [r4, #72]	@ 0x48
 800a73e:	2b02      	cmp	r3, #2
 800a740:	d002      	beq.n	800a748 <_ZN8touchgfx3HAL4tickEv+0x168>
 800a742:	2001      	movs	r0, #1
 800a744:	f7f6 f8b2 	bl	80008ac <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
 800a748:	2300      	movs	r3, #0
 800a74a:	702b      	strb	r3, [r5, #0]
 800a74c:	b004      	add	sp, #16
 800a74e:	bd70      	pop	{r4, r5, r6, pc}
 800a750:	f8d3 30d0 	ldr.w	r3, [r3, #208]	@ 0xd0
 800a754:	4620      	mov	r0, r4
 800a756:	4798      	blx	r3
 800a758:	e7a6      	b.n	800a6a8 <_ZN8touchgfx3HAL4tickEv+0xc8>
 800a75a:	2863      	cmp	r0, #99	@ 0x63
 800a75c:	bfcb      	itete	gt
 800a75e:	2300      	movgt	r3, #0
 800a760:	f1c0 0064 	rsble	r0, r0, #100	@ 0x64
 800a764:	f884 3069 	strbgt.w	r3, [r4, #105]	@ 0x69
 800a768:	f884 0069 	strble.w	r0, [r4, #105]	@ 0x69
 800a76c:	e7d0      	b.n	800a710 <_ZN8touchgfx3HAL4tickEv+0x130>
 800a76e:	bf00      	nop
 800a770:	20013f30 	.word	0x20013f30
 800a774:	20013f31 	.word	0x20013f31
 800a778:	05f5e100 	.word	0x05f5e100

0800a77c <_ZN8touchgfx3HAL17unlockFrameBufferEv>:
 800a77c:	b510      	push	{r4, lr}
 800a77e:	4604      	mov	r4, r0
 800a780:	f7f6 fa12 	bl	8000ba8 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>
 800a784:	6863      	ldr	r3, [r4, #4]
 800a786:	2200      	movs	r2, #0
 800a788:	729a      	strb	r2, [r3, #10]
 800a78a:	bd10      	pop	{r4, pc}

0800a78c <_ZN8touchgfx3HAL21registerEventListenerERNS_15UIEventListenerE>:
 800a78c:	65c1      	str	r1, [r0, #92]	@ 0x5c
 800a78e:	301c      	adds	r0, #28
 800a790:	f016 bb4e 	b.w	8020e30 <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>

0800a794 <_ZN8touchgfx3HAL5touchEll>:
 800a794:	b530      	push	{r4, r5, lr}
 800a796:	b087      	sub	sp, #28
 800a798:	4604      	mov	r4, r0
 800a79a:	a804      	add	r0, sp, #16
 800a79c:	e9cd 1204 	strd	r1, r2, [sp, #16]
 800a7a0:	f004 fc9c 	bl	800f0dc <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>
 800a7a4:	9b04      	ldr	r3, [sp, #16]
 800a7a6:	f8ad 300c 	strh.w	r3, [sp, #12]
 800a7aa:	a906      	add	r1, sp, #24
 800a7ac:	9b05      	ldr	r3, [sp, #20]
 800a7ae:	f821 3d0a 	strh.w	r3, [r1, #-10]!
 800a7b2:	a803      	add	r0, sp, #12
 800a7b4:	f004 fce4 	bl	800f180 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>
 800a7b8:	f894 106f 	ldrb.w	r1, [r4, #111]	@ 0x6f
 800a7bc:	f8bd 200c 	ldrh.w	r2, [sp, #12]
 800a7c0:	f8bd 300e 	ldrh.w	r3, [sp, #14]
 800a7c4:	f104 001c 	add.w	r0, r4, #28
 800a7c8:	b189      	cbz	r1, 800a7ee <_ZN8touchgfx3HAL5touchEll+0x5a>
 800a7ca:	f8b4 5064 	ldrh.w	r5, [r4, #100]	@ 0x64
 800a7ce:	9300      	str	r3, [sp, #0]
 800a7d0:	f8b4 1060 	ldrh.w	r1, [r4, #96]	@ 0x60
 800a7d4:	4613      	mov	r3, r2
 800a7d6:	462a      	mov	r2, r5
 800a7d8:	f016 fb3a 	bl	8020e50 <_ZN8touchgfx8Gestures17registerDragEventEtttt>
 800a7dc:	b128      	cbz	r0, 800a7ea <_ZN8touchgfx3HAL5touchEll+0x56>
 800a7de:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 800a7e2:	6623      	str	r3, [r4, #96]	@ 0x60
 800a7e4:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 800a7e8:	6663      	str	r3, [r4, #100]	@ 0x64
 800a7ea:	b007      	add	sp, #28
 800a7ec:	bd30      	pop	{r4, r5, pc}
 800a7ee:	f016 fb6f 	bl	8020ed0 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 800a7f2:	2301      	movs	r3, #1
 800a7f4:	f884 306f 	strb.w	r3, [r4, #111]	@ 0x6f
 800a7f8:	e7f1      	b.n	800a7de <_ZN8touchgfx3HAL5touchEll+0x4a>

0800a7fa <_ZN8touchgfx3HAL9blockCopyEPvPKvm>:
 800a7fa:	b510      	push	{r4, lr}
 800a7fc:	2b00      	cmp	r3, #0
 800a7fe:	d046      	beq.n	800a88e <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 800a800:	ea81 0002 	eor.w	r0, r1, r2
 800a804:	07c4      	lsls	r4, r0, #31
 800a806:	d508      	bpl.n	800a81a <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x20>
 800a808:	440b      	add	r3, r1
 800a80a:	3a01      	subs	r2, #1
 800a80c:	428b      	cmp	r3, r1
 800a80e:	d93e      	bls.n	800a88e <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 800a810:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 800a814:	f801 0b01 	strb.w	r0, [r1], #1
 800a818:	e7f8      	b.n	800a80c <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x12>
 800a81a:	07d0      	lsls	r0, r2, #31
 800a81c:	bf42      	ittt	mi
 800a81e:	f812 0b01 	ldrbmi.w	r0, [r2], #1
 800a822:	f801 0b01 	strbmi.w	r0, [r1], #1
 800a826:	f103 33ff 	addmi.w	r3, r3, #4294967295
 800a82a:	2b01      	cmp	r3, #1
 800a82c:	d911      	bls.n	800a852 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 800a82e:	ea81 0402 	eor.w	r4, r1, r2
 800a832:	07a4      	lsls	r4, r4, #30
 800a834:	4610      	mov	r0, r2
 800a836:	d022      	beq.n	800a87e <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x84>
 800a838:	f023 0401 	bic.w	r4, r3, #1
 800a83c:	440c      	add	r4, r1
 800a83e:	428c      	cmp	r4, r1
 800a840:	4602      	mov	r2, r0
 800a842:	d904      	bls.n	800a84e <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x54>
 800a844:	8812      	ldrh	r2, [r2, #0]
 800a846:	f821 2b02 	strh.w	r2, [r1], #2
 800a84a:	3002      	adds	r0, #2
 800a84c:	e7f7      	b.n	800a83e <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x44>
 800a84e:	f003 0301 	and.w	r3, r3, #1
 800a852:	f023 0003 	bic.w	r0, r3, #3
 800a856:	4408      	add	r0, r1
 800a858:	4288      	cmp	r0, r1
 800a85a:	4614      	mov	r4, r2
 800a85c:	d904      	bls.n	800a868 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x6e>
 800a85e:	6824      	ldr	r4, [r4, #0]
 800a860:	f841 4b04 	str.w	r4, [r1], #4
 800a864:	3204      	adds	r2, #4
 800a866:	e7f7      	b.n	800a858 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x5e>
 800a868:	f003 0303 	and.w	r3, r3, #3
 800a86c:	440b      	add	r3, r1
 800a86e:	3a01      	subs	r2, #1
 800a870:	428b      	cmp	r3, r1
 800a872:	d90c      	bls.n	800a88e <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 800a874:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 800a878:	f801 0b01 	strb.w	r0, [r1], #1
 800a87c:	e7f8      	b.n	800a870 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x76>
 800a87e:	0790      	lsls	r0, r2, #30
 800a880:	d0e7      	beq.n	800a852 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 800a882:	f832 0b02 	ldrh.w	r0, [r2], #2
 800a886:	f821 0b02 	strh.w	r0, [r1], #2
 800a88a:	3b02      	subs	r3, #2
 800a88c:	e7e1      	b.n	800a852 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 800a88e:	2001      	movs	r0, #1
 800a890:	bd10      	pop	{r4, pc}

0800a892 <_ZN8touchgfx3HAL7noTouchEv>:
 800a892:	b510      	push	{r4, lr}
 800a894:	f890 306f 	ldrb.w	r3, [r0, #111]	@ 0x6f
 800a898:	4604      	mov	r4, r0
 800a89a:	b153      	cbz	r3, 800a8b2 <_ZN8touchgfx3HAL7noTouchEv+0x20>
 800a89c:	f8b0 3064 	ldrh.w	r3, [r0, #100]	@ 0x64
 800a8a0:	f8b0 2060 	ldrh.w	r2, [r0, #96]	@ 0x60
 800a8a4:	2101      	movs	r1, #1
 800a8a6:	301c      	adds	r0, #28
 800a8a8:	f016 fb12 	bl	8020ed0 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 800a8ac:	2300      	movs	r3, #0
 800a8ae:	f884 306f 	strb.w	r3, [r4, #111]	@ 0x6f
 800a8b2:	bd10      	pop	{r4, pc}

0800a8b4 <_ZN8touchgfx8Drawable5setXYEss>:
 800a8b4:	b570      	push	{r4, r5, r6, lr}
 800a8b6:	6803      	ldr	r3, [r0, #0]
 800a8b8:	4604      	mov	r4, r0
 800a8ba:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800a8bc:	4615      	mov	r5, r2
 800a8be:	4798      	blx	r3
 800a8c0:	6823      	ldr	r3, [r4, #0]
 800a8c2:	4629      	mov	r1, r5
 800a8c4:	4620      	mov	r0, r4
 800a8c6:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 800a8c8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800a8cc:	4718      	bx	r3
	...

0800a8d0 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt>:
 800a8d0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800a8d4:	b085      	sub	sp, #20
 800a8d6:	ad04      	add	r5, sp, #16
 800a8d8:	4604      	mov	r4, r0
 800a8da:	2000      	movs	r0, #0
 800a8dc:	f845 0d04 	str.w	r0, [r5, #-4]!
 800a8e0:	69a0      	ldr	r0, [r4, #24]
 800a8e2:	6806      	ldr	r6, [r0, #0]
 800a8e4:	9501      	str	r5, [sp, #4]
 800a8e6:	f8bd 5030 	ldrh.w	r5, [sp, #48]	@ 0x30
 800a8ea:	9500      	str	r5, [sp, #0]
 800a8ec:	6835      	ldr	r5, [r6, #0]
 800a8ee:	4699      	mov	r9, r3
 800a8f0:	460f      	mov	r7, r1
 800a8f2:	4690      	mov	r8, r2
 800a8f4:	47a8      	blx	r5
 800a8f6:	4d10      	ldr	r5, [pc, #64]	@ (800a938 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x68>)
 800a8f8:	4606      	mov	r6, r0
 800a8fa:	f8a5 9000 	strh.w	r9, [r5]
 800a8fe:	f7f8 f9e9 	bl	8002cd4 <_ZN8touchgfx3HAL3lcdEv>
 800a902:	6803      	ldr	r3, [r0, #0]
 800a904:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800a906:	4798      	blx	r3
 800a908:	b128      	cbz	r0, 800a916 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x46>
 800a90a:	2801      	cmp	r0, #1
 800a90c:	d00b      	beq.n	800a926 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x56>
 800a90e:	4630      	mov	r0, r6
 800a910:	b005      	add	sp, #20
 800a912:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800a916:	882b      	ldrh	r3, [r5, #0]
 800a918:	fb08 7203 	mla	r2, r8, r3, r7
 800a91c:	9b03      	ldr	r3, [sp, #12]
 800a91e:	eba3 0342 	sub.w	r3, r3, r2, lsl #1
 800a922:	63e3      	str	r3, [r4, #60]	@ 0x3c
 800a924:	e7f3      	b.n	800a90e <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x3e>
 800a926:	882a      	ldrh	r2, [r5, #0]
 800a928:	9b03      	ldr	r3, [sp, #12]
 800a92a:	fb08 7202 	mla	r2, r8, r2, r7
 800a92e:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 800a932:	1a9a      	subs	r2, r3, r2
 800a934:	63e2      	str	r2, [r4, #60]	@ 0x3c
 800a936:	e7ea      	b.n	800a90e <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x3e>
 800a938:	20013f24 	.word	0x20013f24

0800a93c <_ZN8touchgfx3HAL31configurePartialFrameBufferLTDCEs>:
 800a93c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800a93e:	4b15      	ldr	r3, [pc, #84]	@ (800a994 <_ZN8touchgfx3HAL31configurePartialFrameBufferLTDCEs+0x58>)
 800a940:	f890 407d 	ldrb.w	r4, [r0, #125]	@ 0x7d
 800a944:	881b      	ldrh	r3, [r3, #0]
 800a946:	6bc5      	ldr	r5, [r0, #60]	@ 0x3c
 800a948:	fb93 f4f4 	sdiv	r4, r3, r4
 800a94c:	460f      	mov	r7, r1
 800a94e:	4606      	mov	r6, r0
 800a950:	f7f8 f9c0 	bl	8002cd4 <_ZN8touchgfx3HAL3lcdEv>
 800a954:	6803      	ldr	r3, [r0, #0]
 800a956:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800a958:	4798      	blx	r3
 800a95a:	2801      	cmp	r0, #1
 800a95c:	d00b      	beq.n	800a976 <_ZN8touchgfx3HAL31configurePartialFrameBufferLTDCEs+0x3a>
 800a95e:	d303      	bcc.n	800a968 <_ZN8touchgfx3HAL31configurePartialFrameBufferLTDCEs+0x2c>
 800a960:	2802      	cmp	r0, #2
 800a962:	d010      	beq.n	800a986 <_ZN8touchgfx3HAL31configurePartialFrameBufferLTDCEs+0x4a>
 800a964:	63f5      	str	r5, [r6, #60]	@ 0x3c
 800a966:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800a968:	4b0b      	ldr	r3, [pc, #44]	@ (800a998 <_ZN8touchgfx3HAL31configurePartialFrameBufferLTDCEs+0x5c>)
 800a96a:	8819      	ldrh	r1, [r3, #0]
 800a96c:	437c      	muls	r4, r7
 800a96e:	434c      	muls	r4, r1
 800a970:	eba5 0544 	sub.w	r5, r5, r4, lsl #1
 800a974:	e7f6      	b.n	800a964 <_ZN8touchgfx3HAL31configurePartialFrameBufferLTDCEs+0x28>
 800a976:	4b08      	ldr	r3, [pc, #32]	@ (800a998 <_ZN8touchgfx3HAL31configurePartialFrameBufferLTDCEs+0x5c>)
 800a978:	8819      	ldrh	r1, [r3, #0]
 800a97a:	437c      	muls	r4, r7
 800a97c:	434c      	muls	r4, r1
 800a97e:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 800a982:	1b2d      	subs	r5, r5, r4
 800a984:	e7ee      	b.n	800a964 <_ZN8touchgfx3HAL31configurePartialFrameBufferLTDCEs+0x28>
 800a986:	4b04      	ldr	r3, [pc, #16]	@ (800a998 <_ZN8touchgfx3HAL31configurePartialFrameBufferLTDCEs+0x5c>)
 800a988:	8819      	ldrh	r1, [r3, #0]
 800a98a:	437c      	muls	r4, r7
 800a98c:	434c      	muls	r4, r1
 800a98e:	eba5 0584 	sub.w	r5, r5, r4, lsl #2
 800a992:	e7e7      	b.n	800a964 <_ZN8touchgfx3HAL31configurePartialFrameBufferLTDCEs+0x28>
 800a994:	20013f26 	.word	0x20013f26
 800a998:	20013f24 	.word	0x20013f24

0800a99c <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb>:
 800a99c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800a99e:	b08b      	sub	sp, #44	@ 0x2c
 800a9a0:	4617      	mov	r7, r2
 800a9a2:	4604      	mov	r4, r0
 800a9a4:	460e      	mov	r6, r1
 800a9a6:	461d      	mov	r5, r3
 800a9a8:	f7f8 f994 	bl	8002cd4 <_ZN8touchgfx3HAL3lcdEv>
 800a9ac:	6803      	ldr	r3, [r0, #0]
 800a9ae:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800a9b0:	4798      	blx	r3
 800a9b2:	f89d 3054 	ldrb.w	r3, [sp, #84]	@ 0x54
 800a9b6:	9007      	str	r0, [sp, #28]
 800a9b8:	e9cd 0308 	strd	r0, r3, [sp, #32]
 800a9bc:	4b0d      	ldr	r3, [pc, #52]	@ (800a9f4 <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb+0x58>)
 800a9be:	6822      	ldr	r2, [r4, #0]
 800a9c0:	881b      	ldrh	r3, [r3, #0]
 800a9c2:	9306      	str	r3, [sp, #24]
 800a9c4:	f89d 3050 	ldrb.w	r3, [sp, #80]	@ 0x50
 800a9c8:	9305      	str	r3, [sp, #20]
 800a9ca:	f89d 304c 	ldrb.w	r3, [sp, #76]	@ 0x4c
 800a9ce:	9304      	str	r3, [sp, #16]
 800a9d0:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
 800a9d4:	9303      	str	r3, [sp, #12]
 800a9d6:	f8bd 3044 	ldrh.w	r3, [sp, #68]	@ 0x44
 800a9da:	9302      	str	r3, [sp, #8]
 800a9dc:	f8bd 3040 	ldrh.w	r3, [sp, #64]	@ 0x40
 800a9e0:	e9cd 5300 	strd	r5, r3, [sp]
 800a9e4:	4631      	mov	r1, r6
 800a9e6:	6c15      	ldr	r5, [r2, #64]	@ 0x40
 800a9e8:	463b      	mov	r3, r7
 800a9ea:	2200      	movs	r2, #0
 800a9ec:	4620      	mov	r0, r4
 800a9ee:	47a8      	blx	r5
 800a9f0:	b00b      	add	sp, #44	@ 0x2c
 800a9f2:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800a9f4:	20013f24 	.word	0x20013f24

0800a9f8 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb>:
 800a9f8:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800a9fc:	4698      	mov	r8, r3
 800a9fe:	6803      	ldr	r3, [r0, #0]
 800aa00:	6c1d      	ldr	r5, [r3, #64]	@ 0x40
 800aa02:	4b15      	ldr	r3, [pc, #84]	@ (800aa58 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb+0x60>)
 800aa04:	b08b      	sub	sp, #44	@ 0x2c
 800aa06:	4617      	mov	r7, r2
 800aa08:	f8b3 9000 	ldrh.w	r9, [r3]
 800aa0c:	460e      	mov	r6, r1
 800aa0e:	4604      	mov	r4, r0
 800aa10:	f7f8 f960 	bl	8002cd4 <_ZN8touchgfx3HAL3lcdEv>
 800aa14:	6803      	ldr	r3, [r0, #0]
 800aa16:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800aa18:	4798      	blx	r3
 800aa1a:	f89d 3058 	ldrb.w	r3, [sp, #88]	@ 0x58
 800aa1e:	e9cd 0308 	strd	r0, r3, [sp, #32]
 800aa22:	2302      	movs	r3, #2
 800aa24:	e9cd 9306 	strd	r9, r3, [sp, #24]
 800aa28:	2301      	movs	r3, #1
 800aa2a:	9305      	str	r3, [sp, #20]
 800aa2c:	f89d 3054 	ldrb.w	r3, [sp, #84]	@ 0x54
 800aa30:	9304      	str	r3, [sp, #16]
 800aa32:	f8bd 3050 	ldrh.w	r3, [sp, #80]	@ 0x50
 800aa36:	9303      	str	r3, [sp, #12]
 800aa38:	f8bd 304c 	ldrh.w	r3, [sp, #76]	@ 0x4c
 800aa3c:	9302      	str	r3, [sp, #8]
 800aa3e:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
 800aa42:	2200      	movs	r2, #0
 800aa44:	e9cd 8300 	strd	r8, r3, [sp]
 800aa48:	4631      	mov	r1, r6
 800aa4a:	463b      	mov	r3, r7
 800aa4c:	4620      	mov	r0, r4
 800aa4e:	47a8      	blx	r5
 800aa50:	b00b      	add	sp, #44	@ 0x2c
 800aa52:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800aa56:	bf00      	nop
 800aa58:	20013f24 	.word	0x20013f24

0800aa5c <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb>:
 800aa5c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800aa60:	4698      	mov	r8, r3
 800aa62:	6803      	ldr	r3, [r0, #0]
 800aa64:	6ddd      	ldr	r5, [r3, #92]	@ 0x5c
 800aa66:	4b11      	ldr	r3, [pc, #68]	@ (800aaac <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb+0x50>)
 800aa68:	b087      	sub	sp, #28
 800aa6a:	f8b3 9000 	ldrh.w	r9, [r3]
 800aa6e:	460e      	mov	r6, r1
 800aa70:	4617      	mov	r7, r2
 800aa72:	4604      	mov	r4, r0
 800aa74:	f7f8 f92e 	bl	8002cd4 <_ZN8touchgfx3HAL3lcdEv>
 800aa78:	6803      	ldr	r3, [r0, #0]
 800aa7a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800aa7c:	4798      	blx	r3
 800aa7e:	f89d 3044 	ldrb.w	r3, [sp, #68]	@ 0x44
 800aa82:	f8cd 900c 	str.w	r9, [sp, #12]
 800aa86:	e9cd 0304 	strd	r0, r3, [sp, #16]
 800aa8a:	f89d 3040 	ldrb.w	r3, [sp, #64]	@ 0x40
 800aa8e:	9302      	str	r3, [sp, #8]
 800aa90:	f8bd 303c 	ldrh.w	r3, [sp, #60]	@ 0x3c
 800aa94:	9301      	str	r3, [sp, #4]
 800aa96:	f8bd 3038 	ldrh.w	r3, [sp, #56]	@ 0x38
 800aa9a:	9300      	str	r3, [sp, #0]
 800aa9c:	463a      	mov	r2, r7
 800aa9e:	4643      	mov	r3, r8
 800aaa0:	4631      	mov	r1, r6
 800aaa2:	4620      	mov	r0, r4
 800aaa4:	47a8      	blx	r5
 800aaa6:	b007      	add	sp, #28
 800aaa8:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800aaac:	20013f24 	.word	0x20013f24

0800aab0 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE>:
 800aab0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800aab4:	4604      	mov	r4, r0
 800aab6:	b08f      	sub	sp, #60	@ 0x3c
 800aab8:	4610      	mov	r0, r2
 800aaba:	460d      	mov	r5, r1
 800aabc:	4691      	mov	r9, r2
 800aabe:	461e      	mov	r6, r3
 800aac0:	f007 fea6 	bl	8012810 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 800aac4:	2800      	cmp	r0, #0
 800aac6:	f000 809d 	beq.w	800ac04 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x154>
 800aaca:	6823      	ldr	r3, [r4, #0]
 800aacc:	f8df b198 	ldr.w	fp, [pc, #408]	@ 800ac68 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>
 800aad0:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800aad2:	f8df a198 	ldr.w	sl, [pc, #408]	@ 800ac6c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1bc>
 800aad6:	4f61      	ldr	r7, [pc, #388]	@ (800ac5c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 800aad8:	4620      	mov	r0, r4
 800aada:	4798      	blx	r3
 800aadc:	6823      	ldr	r3, [r4, #0]
 800aade:	4620      	mov	r0, r4
 800aae0:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800aae2:	4798      	blx	r3
 800aae4:	f8bb 3000 	ldrh.w	r3, [fp]
 800aae8:	9301      	str	r3, [sp, #4]
 800aaea:	f10d 0838 	add.w	r8, sp, #56	@ 0x38
 800aaee:	f8ba 3000 	ldrh.w	r3, [sl]
 800aaf2:	9302      	str	r3, [sp, #8]
 800aaf4:	883b      	ldrh	r3, [r7, #0]
 800aaf6:	f828 9d1c 	strh.w	r9, [r8, #-28]!
 800aafa:	9303      	str	r3, [sp, #12]
 800aafc:	4b58      	ldr	r3, [pc, #352]	@ (800ac60 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 800aafe:	9305      	str	r3, [sp, #20]
 800ab00:	881a      	ldrh	r2, [r3, #0]
 800ab02:	9204      	str	r2, [sp, #16]
 800ab04:	4640      	mov	r0, r8
 800ab06:	f007 ff17 	bl	8012938 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800ab0a:	8038      	strh	r0, [r7, #0]
 800ab0c:	4640      	mov	r0, r8
 800ab0e:	f007 ff47 	bl	80129a0 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800ab12:	9b05      	ldr	r3, [sp, #20]
 800ab14:	b280      	uxth	r0, r0
 800ab16:	8018      	strh	r0, [r3, #0]
 800ab18:	4b52      	ldr	r3, [pc, #328]	@ (800ac64 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b4>)
 800ab1a:	781b      	ldrb	r3, [r3, #0]
 800ab1c:	2b00      	cmp	r3, #0
 800ab1e:	d174      	bne.n	800ac0a <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x15a>
 800ab20:	883b      	ldrh	r3, [r7, #0]
 800ab22:	f8ab 3000 	strh.w	r3, [fp]
 800ab26:	f8aa 0000 	strh.w	r0, [sl]
 800ab2a:	4648      	mov	r0, r9
 800ab2c:	e9d4 870f 	ldrd	r8, r7, [r4, #60]	@ 0x3c
 800ab30:	f007 fe6e 	bl	8012810 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 800ab34:	e9c4 000f 	strd	r0, r0, [r4, #60]	@ 0x3c
 800ab38:	2200      	movs	r2, #0
 800ab3a:	4611      	mov	r1, r2
 800ab3c:	4628      	mov	r0, r5
 800ab3e:	f9b5 9004 	ldrsh.w	r9, [r5, #4]
 800ab42:	f9b5 a006 	ldrsh.w	sl, [r5, #6]
 800ab46:	f7ff feb5 	bl	800a8b4 <_ZN8touchgfx8Drawable5setXYEss>
 800ab4a:	2301      	movs	r3, #1
 800ab4c:	f895 b025 	ldrb.w	fp, [r5, #37]	@ 0x25
 800ab50:	f885 3025 	strb.w	r3, [r5, #37]	@ 0x25
 800ab54:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
 800ab58:	2b00      	cmp	r3, #0
 800ab5a:	dd5c      	ble.n	800ac16 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x166>
 800ab5c:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
 800ab60:	2b00      	cmp	r3, #0
 800ab62:	dd58      	ble.n	800ac16 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x166>
 800ab64:	462a      	mov	r2, r5
 800ab66:	ab0a      	add	r3, sp, #40	@ 0x28
 800ab68:	f852 0f04 	ldr.w	r0, [r2, #4]!
 800ab6c:	6851      	ldr	r1, [r2, #4]
 800ab6e:	c303      	stmia	r3!, {r0, r1}
 800ab70:	4631      	mov	r1, r6
 800ab72:	a80a      	add	r0, sp, #40	@ 0x28
 800ab74:	f7ff fbba 	bl	800a2ec <_ZN8touchgfx4RectaNERKS0_>
 800ab78:	4b38      	ldr	r3, [pc, #224]	@ (800ac5c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 800ab7a:	f9b3 2000 	ldrsh.w	r2, [r3]
 800ab7e:	f8ad 2034 	strh.w	r2, [sp, #52]	@ 0x34
 800ab82:	2100      	movs	r1, #0
 800ab84:	aa0a      	add	r2, sp, #40	@ 0x28
 800ab86:	4b36      	ldr	r3, [pc, #216]	@ (800ac60 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 800ab88:	910c      	str	r1, [sp, #48]	@ 0x30
 800ab8a:	e892 0003 	ldmia.w	r2, {r0, r1}
 800ab8e:	f9b3 3000 	ldrsh.w	r3, [r3]
 800ab92:	f8ad 3036 	strh.w	r3, [sp, #54]	@ 0x36
 800ab96:	ab08      	add	r3, sp, #32
 800ab98:	e883 0003 	stmia.w	r3, {r0, r1}
 800ab9c:	4618      	mov	r0, r3
 800ab9e:	a90c      	add	r1, sp, #48	@ 0x30
 800aba0:	f7ff fba4 	bl	800a2ec <_ZN8touchgfx4RectaNERKS0_>
 800aba4:	6ce3      	ldr	r3, [r4, #76]	@ 0x4c
 800aba6:	2b00      	cmp	r3, #0
 800aba8:	d13c      	bne.n	800ac24 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x174>
 800abaa:	2000      	movs	r0, #0
 800abac:	f884 0058 	strb.w	r0, [r4, #88]	@ 0x58
 800abb0:	2600      	movs	r6, #0
 800abb2:	682a      	ldr	r2, [r5, #0]
 800abb4:	696b      	ldr	r3, [r5, #20]
 800abb6:	616e      	str	r6, [r5, #20]
 800abb8:	9305      	str	r3, [sp, #20]
 800abba:	6892      	ldr	r2, [r2, #8]
 800abbc:	a908      	add	r1, sp, #32
 800abbe:	4628      	mov	r0, r5
 800abc0:	4790      	blx	r2
 800abc2:	9b05      	ldr	r3, [sp, #20]
 800abc4:	616b      	str	r3, [r5, #20]
 800abc6:	4652      	mov	r2, sl
 800abc8:	f884 6058 	strb.w	r6, [r4, #88]	@ 0x58
 800abcc:	4649      	mov	r1, r9
 800abce:	4628      	mov	r0, r5
 800abd0:	f885 b025 	strb.w	fp, [r5, #37]	@ 0x25
 800abd4:	f7ff fe6e 	bl	800a8b4 <_ZN8touchgfx8Drawable5setXYEss>
 800abd8:	4b23      	ldr	r3, [pc, #140]	@ (800ac68 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>)
 800abda:	9a01      	ldr	r2, [sp, #4]
 800abdc:	801a      	strh	r2, [r3, #0]
 800abde:	4b23      	ldr	r3, [pc, #140]	@ (800ac6c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1bc>)
 800abe0:	9a02      	ldr	r2, [sp, #8]
 800abe2:	801a      	strh	r2, [r3, #0]
 800abe4:	4b1d      	ldr	r3, [pc, #116]	@ (800ac5c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 800abe6:	9a03      	ldr	r2, [sp, #12]
 800abe8:	801a      	strh	r2, [r3, #0]
 800abea:	4b1d      	ldr	r3, [pc, #116]	@ (800ac60 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 800abec:	9a04      	ldr	r2, [sp, #16]
 800abee:	801a      	strh	r2, [r3, #0]
 800abf0:	e9c4 870f 	strd	r8, r7, [r4, #60]	@ 0x3c
 800abf4:	6823      	ldr	r3, [r4, #0]
 800abf6:	4620      	mov	r0, r4
 800abf8:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800abfa:	4798      	blx	r3
 800abfc:	6823      	ldr	r3, [r4, #0]
 800abfe:	4620      	mov	r0, r4
 800ac00:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800ac02:	4798      	blx	r3
 800ac04:	b00f      	add	sp, #60	@ 0x3c
 800ac06:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800ac0a:	883b      	ldrh	r3, [r7, #0]
 800ac0c:	f8ab 0000 	strh.w	r0, [fp]
 800ac10:	f8aa 3000 	strh.w	r3, [sl]
 800ac14:	e789      	b.n	800ab2a <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x7a>
 800ac16:	462a      	mov	r2, r5
 800ac18:	ab0a      	add	r3, sp, #40	@ 0x28
 800ac1a:	f852 0f04 	ldr.w	r0, [r2, #4]!
 800ac1e:	6851      	ldr	r1, [r2, #4]
 800ac20:	c303      	stmia	r3!, {r0, r1}
 800ac22:	e7a9      	b.n	800ab78 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xc8>
 800ac24:	a807      	add	r0, sp, #28
 800ac26:	f007 fffd 	bl	8012c24 <_ZNK8touchgfx6Bitmap9getFormatEv>
 800ac2a:	4606      	mov	r6, r0
 800ac2c:	6ce0      	ldr	r0, [r4, #76]	@ 0x4c
 800ac2e:	6803      	ldr	r3, [r0, #0]
 800ac30:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800ac32:	4798      	blx	r3
 800ac34:	4286      	cmp	r6, r0
 800ac36:	d1b8      	bne.n	800abaa <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xfa>
 800ac38:	f7f8 f84c 	bl	8002cd4 <_ZN8touchgfx3HAL3lcdEv>
 800ac3c:	6803      	ldr	r3, [r0, #0]
 800ac3e:	4606      	mov	r6, r0
 800ac40:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 800ac42:	9305      	str	r3, [sp, #20]
 800ac44:	a807      	add	r0, sp, #28
 800ac46:	f007 ffed 	bl	8012c24 <_ZNK8touchgfx6Bitmap9getFormatEv>
 800ac4a:	9b05      	ldr	r3, [sp, #20]
 800ac4c:	4601      	mov	r1, r0
 800ac4e:	4630      	mov	r0, r6
 800ac50:	4798      	blx	r3
 800ac52:	f080 0001 	eor.w	r0, r0, #1
 800ac56:	b2c0      	uxtb	r0, r0
 800ac58:	e7a8      	b.n	800abac <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xfc>
 800ac5a:	bf00      	nop
 800ac5c:	20013f1e 	.word	0x20013f1e
 800ac60:	20013f20 	.word	0x20013f20
 800ac64:	20013f22 	.word	0x20013f22
 800ac68:	20013f24 	.word	0x20013f24
 800ac6c:	20013f26 	.word	0x20013f26

0800ac70 <_ZN8touchgfx3HAL20getClientFrameBufferEv>:
 800ac70:	b510      	push	{r4, lr}
 800ac72:	4b07      	ldr	r3, [pc, #28]	@ (800ac90 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x20>)
 800ac74:	781b      	ldrb	r3, [r3, #0]
 800ac76:	4604      	mov	r4, r0
 800ac78:	b13b      	cbz	r3, 800ac8a <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 800ac7a:	6803      	ldr	r3, [r0, #0]
 800ac7c:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 800ac7e:	4798      	blx	r3
 800ac80:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 800ac82:	4283      	cmp	r3, r0
 800ac84:	d101      	bne.n	800ac8a <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 800ac86:	6c20      	ldr	r0, [r4, #64]	@ 0x40
 800ac88:	bd10      	pop	{r4, pc}
 800ac8a:	6be0      	ldr	r0, [r4, #60]	@ 0x3c
 800ac8c:	e7fc      	b.n	800ac88 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x18>
 800ac8e:	bf00      	nop
 800ac90:	20013f28 	.word	0x20013f28

0800ac94 <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt>:
 800ac94:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800ac98:	b08a      	sub	sp, #40	@ 0x28
 800ac9a:	461d      	mov	r5, r3
 800ac9c:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 800aca0:	e9cd 3101 	strd	r3, r1, [sp, #4]
 800aca4:	f8bd 3040 	ldrh.w	r3, [sp, #64]	@ 0x40
 800aca8:	f8ad 3018 	strh.w	r3, [sp, #24]
 800acac:	f8bd 3044 	ldrh.w	r3, [sp, #68]	@ 0x44
 800acb0:	f8ad 301a 	strh.w	r3, [sp, #26]
 800acb4:	2400      	movs	r4, #0
 800acb6:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
 800acba:	f8bd 604c 	ldrh.w	r6, [sp, #76]	@ 0x4c
 800acbe:	f8ad 301c 	strh.w	r3, [sp, #28]
 800acc2:	4690      	mov	r8, r2
 800acc4:	4607      	mov	r7, r0
 800acc6:	9404      	str	r4, [sp, #16]
 800acc8:	f88d 4020 	strb.w	r4, [sp, #32]
 800accc:	f7ff ffd0 	bl	800ac70 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800acd0:	fb06 8505 	mla	r5, r6, r5, r8
 800acd4:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 800acd8:	6878      	ldr	r0, [r7, #4]
 800acda:	9505      	str	r5, [sp, #20]
 800acdc:	f8ad 601e 	strh.w	r6, [sp, #30]
 800ace0:	f88d 4022 	strb.w	r4, [sp, #34]	@ 0x22
 800ace4:	f88d 4021 	strb.w	r4, [sp, #33]	@ 0x21
 800ace8:	f88d 4023 	strb.w	r4, [sp, #35]	@ 0x23
 800acec:	f88d 4024 	strb.w	r4, [sp, #36]	@ 0x24
 800acf0:	6803      	ldr	r3, [r0, #0]
 800acf2:	a901      	add	r1, sp, #4
 800acf4:	685b      	ldr	r3, [r3, #4]
 800acf6:	4798      	blx	r3
 800acf8:	b00a      	add	sp, #40	@ 0x28
 800acfa:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800acfe <_ZN8touchgfx3HAL12blitFillWordEtttttt>:
 800acfe:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800ad02:	b08b      	sub	sp, #44	@ 0x2c
 800ad04:	2400      	movs	r4, #0
 800ad06:	461d      	mov	r5, r3
 800ad08:	f44f 6300 	mov.w	r3, #2048	@ 0x800
 800ad0c:	4688      	mov	r8, r1
 800ad0e:	4691      	mov	r9, r2
 800ad10:	f8bd 6050 	ldrh.w	r6, [sp, #80]	@ 0x50
 800ad14:	9404      	str	r4, [sp, #16]
 800ad16:	4607      	mov	r7, r0
 800ad18:	e9cd 3401 	strd	r3, r4, [sp, #4]
 800ad1c:	f7ff ffa8 	bl	800ac70 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800ad20:	fb06 9505 	mla	r5, r6, r5, r9
 800ad24:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
 800ad28:	f8ad 3018 	strh.w	r3, [sp, #24]
 800ad2c:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 800ad30:	f8bd 304c 	ldrh.w	r3, [sp, #76]	@ 0x4c
 800ad34:	6878      	ldr	r0, [r7, #4]
 800ad36:	9505      	str	r5, [sp, #20]
 800ad38:	f8ad 301a 	strh.w	r3, [sp, #26]
 800ad3c:	f8ad 401c 	strh.w	r4, [sp, #28]
 800ad40:	f8ad 601e 	strh.w	r6, [sp, #30]
 800ad44:	f8cd 8010 	str.w	r8, [sp, #16]
 800ad48:	f8ad 4020 	strh.w	r4, [sp, #32]
 800ad4c:	f88d 4022 	strb.w	r4, [sp, #34]	@ 0x22
 800ad50:	f88d 4023 	strb.w	r4, [sp, #35]	@ 0x23
 800ad54:	f88d 4024 	strb.w	r4, [sp, #36]	@ 0x24
 800ad58:	6803      	ldr	r3, [r0, #0]
 800ad5a:	a901      	add	r1, sp, #4
 800ad5c:	685b      	ldr	r3, [r3, #4]
 800ad5e:	4798      	blx	r3
 800ad60:	b00b      	add	sp, #44	@ 0x2c
 800ad62:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
	...

0800ad68 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b>:
 800ad68:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800ad6c:	b08a      	sub	sp, #40	@ 0x28
 800ad6e:	4698      	mov	r8, r3
 800ad70:	f89d 505c 	ldrb.w	r5, [sp, #92]	@ 0x5c
 800ad74:	f89d c054 	ldrb.w	ip, [sp, #84]	@ 0x54
 800ad78:	f8bd 7058 	ldrh.w	r7, [sp, #88]	@ 0x58
 800ad7c:	f89d 4060 	ldrb.w	r4, [sp, #96]	@ 0x60
 800ad80:	2300      	movs	r3, #0
 800ad82:	2d0b      	cmp	r5, #11
 800ad84:	4606      	mov	r6, r0
 800ad86:	9304      	str	r3, [sp, #16]
 800ad88:	f89d 0050 	ldrb.w	r0, [sp, #80]	@ 0x50
 800ad8c:	d138      	bne.n	800ae00 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x98>
 800ad8e:	2380      	movs	r3, #128	@ 0x80
 800ad90:	e9cd 3101 	strd	r3, r1, [sp, #4]
 800ad94:	f8bd 3044 	ldrh.w	r3, [sp, #68]	@ 0x44
 800ad98:	f8ad 3018 	strh.w	r3, [sp, #24]
 800ad9c:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
 800ada0:	f8ad 301a 	strh.w	r3, [sp, #26]
 800ada4:	f88d 0020 	strb.w	r0, [sp, #32]
 800ada8:	f8bd 304c 	ldrh.w	r3, [sp, #76]	@ 0x4c
 800adac:	f8ad 301c 	strh.w	r3, [sp, #28]
 800adb0:	4630      	mov	r0, r6
 800adb2:	9203      	str	r2, [sp, #12]
 800adb4:	f7ff ff5c 	bl	800ac70 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800adb8:	2c0b      	cmp	r4, #11
 800adba:	bf98      	it	ls
 800adbc:	4b1b      	ldrls	r3, [pc, #108]	@ (800ae2c <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xc4>)
 800adbe:	f8bd 2040 	ldrh.w	r2, [sp, #64]	@ 0x40
 800adc2:	bf98      	it	ls
 800adc4:	5d19      	ldrbls	r1, [r3, r4]
 800adc6:	f8ad 701e 	strh.w	r7, [sp, #30]
 800adca:	bf88      	it	hi
 800adcc:	2100      	movhi	r1, #0
 800adce:	fb02 8307 	mla	r3, r2, r7, r8
 800add2:	10c9      	asrs	r1, r1, #3
 800add4:	fb01 0003 	mla	r0, r1, r3, r0
 800add8:	f89d 3064 	ldrb.w	r3, [sp, #100]	@ 0x64
 800addc:	9005      	str	r0, [sp, #20]
 800adde:	f88d 3023 	strb.w	r3, [sp, #35]	@ 0x23
 800ade2:	6870      	ldr	r0, [r6, #4]
 800ade4:	f88d 5021 	strb.w	r5, [sp, #33]	@ 0x21
 800ade8:	2300      	movs	r3, #0
 800adea:	f88d 4022 	strb.w	r4, [sp, #34]	@ 0x22
 800adee:	f88d 3024 	strb.w	r3, [sp, #36]	@ 0x24
 800adf2:	6803      	ldr	r3, [r0, #0]
 800adf4:	a901      	add	r1, sp, #4
 800adf6:	685b      	ldr	r3, [r3, #4]
 800adf8:	4798      	blx	r3
 800adfa:	b00a      	add	sp, #40	@ 0x28
 800adfc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800ae00:	2d02      	cmp	r5, #2
 800ae02:	d109      	bne.n	800ae18 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xb0>
 800ae04:	28ff      	cmp	r0, #255	@ 0xff
 800ae06:	d105      	bne.n	800ae14 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xac>
 800ae08:	f1bc 0f00 	cmp.w	ip, #0
 800ae0c:	bf14      	ite	ne
 800ae0e:	2340      	movne	r3, #64	@ 0x40
 800ae10:	2320      	moveq	r3, #32
 800ae12:	e7bd      	b.n	800ad90 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 800ae14:	2340      	movs	r3, #64	@ 0x40
 800ae16:	e7bb      	b.n	800ad90 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 800ae18:	28ff      	cmp	r0, #255	@ 0xff
 800ae1a:	d105      	bne.n	800ae28 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xc0>
 800ae1c:	f1bc 0f00 	cmp.w	ip, #0
 800ae20:	bf14      	ite	ne
 800ae22:	2304      	movne	r3, #4
 800ae24:	2301      	moveq	r3, #1
 800ae26:	e7b3      	b.n	800ad90 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 800ae28:	2304      	movs	r3, #4
 800ae2a:	e7b1      	b.n	800ad90 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 800ae2c:	08024a44 	.word	0x08024a44

0800ae30 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb>:
 800ae30:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ae34:	b08b      	sub	sp, #44	@ 0x2c
 800ae36:	461d      	mov	r5, r3
 800ae38:	f89d 9058 	ldrb.w	r9, [sp, #88]	@ 0x58
 800ae3c:	f89d 6060 	ldrb.w	r6, [sp, #96]	@ 0x60
 800ae40:	f8bd a05c 	ldrh.w	sl, [sp, #92]	@ 0x5c
 800ae44:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
 800ae48:	bf14      	ite	ne
 800ae4a:	2308      	movne	r3, #8
 800ae4c:	2302      	moveq	r3, #2
 800ae4e:	2400      	movs	r4, #0
 800ae50:	e9cd 3401 	strd	r3, r4, [sp, #4]
 800ae54:	4688      	mov	r8, r1
 800ae56:	4693      	mov	fp, r2
 800ae58:	9404      	str	r4, [sp, #16]
 800ae5a:	4607      	mov	r7, r0
 800ae5c:	f7ff ff08 	bl	800ac70 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800ae60:	2e0b      	cmp	r6, #11
 800ae62:	bf98      	it	ls
 800ae64:	4b15      	ldrls	r3, [pc, #84]	@ (800aebc <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb+0x8c>)
 800ae66:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 800ae6a:	bf98      	it	ls
 800ae6c:	5d9c      	ldrbls	r4, [r3, r6]
 800ae6e:	f8bd 3050 	ldrh.w	r3, [sp, #80]	@ 0x50
 800ae72:	f8ad 3018 	strh.w	r3, [sp, #24]
 800ae76:	fb05 b50a 	mla	r5, r5, sl, fp
 800ae7a:	f8bd 3054 	ldrh.w	r3, [sp, #84]	@ 0x54
 800ae7e:	f8ad 301a 	strh.w	r3, [sp, #26]
 800ae82:	10e4      	asrs	r4, r4, #3
 800ae84:	fb04 0405 	mla	r4, r4, r5, r0
 800ae88:	2300      	movs	r3, #0
 800ae8a:	6878      	ldr	r0, [r7, #4]
 800ae8c:	9405      	str	r4, [sp, #20]
 800ae8e:	f8ad 301c 	strh.w	r3, [sp, #28]
 800ae92:	f8ad a01e 	strh.w	sl, [sp, #30]
 800ae96:	f8cd 8010 	str.w	r8, [sp, #16]
 800ae9a:	f88d 9020 	strb.w	r9, [sp, #32]
 800ae9e:	f88d 2023 	strb.w	r2, [sp, #35]	@ 0x23
 800aea2:	f88d 3024 	strb.w	r3, [sp, #36]	@ 0x24
 800aea6:	f88d 6021 	strb.w	r6, [sp, #33]	@ 0x21
 800aeaa:	f88d 6022 	strb.w	r6, [sp, #34]	@ 0x22
 800aeae:	6803      	ldr	r3, [r0, #0]
 800aeb0:	a901      	add	r1, sp, #4
 800aeb2:	685b      	ldr	r3, [r3, #4]
 800aeb4:	4798      	blx	r3
 800aeb6:	b00b      	add	sp, #44	@ 0x2c
 800aeb8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800aebc:	08024a44 	.word	0x08024a44

0800aec0 <_ZNK8touchgfx3HAL13getDstAddressEttPt>:
 800aec0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800aec4:	461e      	mov	r6, r3
 800aec6:	4b0a      	ldr	r3, [pc, #40]	@ (800aef0 <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x30>)
 800aec8:	460f      	mov	r7, r1
 800aeca:	881d      	ldrh	r5, [r3, #0]
 800aecc:	4690      	mov	r8, r2
 800aece:	f7f7 ff01 	bl	8002cd4 <_ZN8touchgfx3HAL3lcdEv>
 800aed2:	6803      	ldr	r3, [r0, #0]
 800aed4:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800aed6:	4798      	blx	r3
 800aed8:	280b      	cmp	r0, #11
 800aeda:	bf9a      	itte	ls
 800aedc:	4b05      	ldrls	r3, [pc, #20]	@ (800aef4 <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x34>)
 800aede:	5c1c      	ldrbls	r4, [r3, r0]
 800aee0:	2400      	movhi	r4, #0
 800aee2:	fb08 7005 	mla	r0, r8, r5, r7
 800aee6:	10e4      	asrs	r4, r4, #3
 800aee8:	fb04 6000 	mla	r0, r4, r0, r6
 800aeec:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800aef0:	20013f24 	.word	0x20013f24
 800aef4:	08024a44 	.word	0x08024a44

0800aef8 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb>:
 800aef8:	b5f0      	push	{r4, r5, r6, r7, lr}
 800aefa:	b08b      	sub	sp, #44	@ 0x2c
 800aefc:	461f      	mov	r7, r3
 800aefe:	f8bd 3054 	ldrh.w	r3, [sp, #84]	@ 0x54
 800af02:	e9cd 3101 	strd	r3, r1, [sp, #4]
 800af06:	f8bd 3040 	ldrh.w	r3, [sp, #64]	@ 0x40
 800af0a:	f8ad 3018 	strh.w	r3, [sp, #24]
 800af0e:	f8bd 3044 	ldrh.w	r3, [sp, #68]	@ 0x44
 800af12:	f8ad 301a 	strh.w	r3, [sp, #26]
 800af16:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
 800af1a:	f8ad 301c 	strh.w	r3, [sp, #28]
 800af1e:	2500      	movs	r5, #0
 800af20:	f89d 3050 	ldrb.w	r3, [sp, #80]	@ 0x50
 800af24:	f88d 3020 	strb.w	r3, [sp, #32]
 800af28:	4604      	mov	r4, r0
 800af2a:	4616      	mov	r6, r2
 800af2c:	9504      	str	r5, [sp, #16]
 800af2e:	f7ff fe9f 	bl	800ac70 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800af32:	463a      	mov	r2, r7
 800af34:	4631      	mov	r1, r6
 800af36:	4603      	mov	r3, r0
 800af38:	4620      	mov	r0, r4
 800af3a:	f7ff ffc1 	bl	800aec0 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800af3e:	4b0e      	ldr	r3, [pc, #56]	@ (800af78 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb+0x80>)
 800af40:	9005      	str	r0, [sp, #20]
 800af42:	881b      	ldrh	r3, [r3, #0]
 800af44:	f8ad 301e 	strh.w	r3, [sp, #30]
 800af48:	f7f7 fec4 	bl	8002cd4 <_ZN8touchgfx3HAL3lcdEv>
 800af4c:	6803      	ldr	r3, [r0, #0]
 800af4e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800af50:	4798      	blx	r3
 800af52:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 800af54:	f88d 0022 	strb.w	r0, [sp, #34]	@ 0x22
 800af58:	f88d 0021 	strb.w	r0, [sp, #33]	@ 0x21
 800af5c:	9304      	str	r3, [sp, #16]
 800af5e:	6860      	ldr	r0, [r4, #4]
 800af60:	f89d 3058 	ldrb.w	r3, [sp, #88]	@ 0x58
 800af64:	f88d 3023 	strb.w	r3, [sp, #35]	@ 0x23
 800af68:	f88d 5024 	strb.w	r5, [sp, #36]	@ 0x24
 800af6c:	6803      	ldr	r3, [r0, #0]
 800af6e:	a901      	add	r1, sp, #4
 800af70:	685b      	ldr	r3, [r3, #4]
 800af72:	4798      	blx	r3
 800af74:	b00b      	add	sp, #44	@ 0x2c
 800af76:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800af78:	20013f24 	.word	0x20013f24

0800af7c <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE>:
 800af7c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800af7e:	b08d      	sub	sp, #52	@ 0x34
 800af80:	466b      	mov	r3, sp
 800af82:	e883 0006 	stmia.w	r3, {r1, r2}
 800af86:	2300      	movs	r3, #0
 800af88:	9306      	str	r3, [sp, #24]
 800af8a:	6803      	ldr	r3, [r0, #0]
 800af8c:	f8bd 6000 	ldrh.w	r6, [sp]
 800af90:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 800af92:	f8bd 7002 	ldrh.w	r7, [sp, #2]
 800af96:	2501      	movs	r5, #1
 800af98:	9503      	str	r5, [sp, #12]
 800af9a:	4604      	mov	r4, r0
 800af9c:	4798      	blx	r3
 800af9e:	463a      	mov	r2, r7
 800afa0:	4631      	mov	r1, r6
 800afa2:	4603      	mov	r3, r0
 800afa4:	4620      	mov	r0, r4
 800afa6:	f7ff ff8b 	bl	800aec0 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800afaa:	6c63      	ldr	r3, [r4, #68]	@ 0x44
 800afac:	9307      	str	r3, [sp, #28]
 800afae:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 800afb2:	f8ad 3020 	strh.w	r3, [sp, #32]
 800afb6:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 800afba:	f8ad 3022 	strh.w	r3, [sp, #34]	@ 0x22
 800afbe:	4b0f      	ldr	r3, [pc, #60]	@ (800affc <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x80>)
 800afc0:	9004      	str	r0, [sp, #16]
 800afc2:	881b      	ldrh	r3, [r3, #0]
 800afc4:	f8ad 3024 	strh.w	r3, [sp, #36]	@ 0x24
 800afc8:	f8ad 3026 	strh.w	r3, [sp, #38]	@ 0x26
 800afcc:	f7f7 fe82 	bl	8002cd4 <_ZN8touchgfx3HAL3lcdEv>
 800afd0:	6803      	ldr	r3, [r0, #0]
 800afd2:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800afd4:	4798      	blx	r3
 800afd6:	23ff      	movs	r3, #255	@ 0xff
 800afd8:	f88d 0029 	strb.w	r0, [sp, #41]	@ 0x29
 800afdc:	f88d 002a 	strb.w	r0, [sp, #42]	@ 0x2a
 800afe0:	6860      	ldr	r0, [r4, #4]
 800afe2:	f88d 3028 	strb.w	r3, [sp, #40]	@ 0x28
 800afe6:	f88d 502b 	strb.w	r5, [sp, #43]	@ 0x2b
 800afea:	f88d 502c 	strb.w	r5, [sp, #44]	@ 0x2c
 800afee:	6803      	ldr	r3, [r0, #0]
 800aff0:	a903      	add	r1, sp, #12
 800aff2:	685b      	ldr	r3, [r3, #4]
 800aff4:	4798      	blx	r3
 800aff6:	6c60      	ldr	r0, [r4, #68]	@ 0x44
 800aff8:	b00d      	add	sp, #52	@ 0x34
 800affa:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800affc:	20013f24 	.word	0x20013f24

0800b000 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm>:
 800b000:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800b004:	b08c      	sub	sp, #48	@ 0x30
 800b006:	461e      	mov	r6, r3
 800b008:	466d      	mov	r5, sp
 800b00a:	2300      	movs	r3, #0
 800b00c:	e885 0006 	stmia.w	r5, {r1, r2}
 800b010:	9306      	str	r3, [sp, #24]
 800b012:	6803      	ldr	r3, [r0, #0]
 800b014:	f8bd 7000 	ldrh.w	r7, [sp]
 800b018:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 800b01a:	f8bd 8002 	ldrh.w	r8, [sp, #2]
 800b01e:	2501      	movs	r5, #1
 800b020:	9503      	str	r5, [sp, #12]
 800b022:	4604      	mov	r4, r0
 800b024:	4798      	blx	r3
 800b026:	4642      	mov	r2, r8
 800b028:	4639      	mov	r1, r7
 800b02a:	4603      	mov	r3, r0
 800b02c:	4620      	mov	r0, r4
 800b02e:	f7ff ff47 	bl	800aec0 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800b032:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 800b036:	f8ad 3020 	strh.w	r3, [sp, #32]
 800b03a:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 800b03e:	f8ad 3022 	strh.w	r3, [sp, #34]	@ 0x22
 800b042:	4b11      	ldr	r3, [pc, #68]	@ (800b088 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm+0x88>)
 800b044:	9004      	str	r0, [sp, #16]
 800b046:	881b      	ldrh	r3, [r3, #0]
 800b048:	f8ad 3024 	strh.w	r3, [sp, #36]	@ 0x24
 800b04c:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 800b04e:	f8ad 3026 	strh.w	r3, [sp, #38]	@ 0x26
 800b052:	9607      	str	r6, [sp, #28]
 800b054:	f7f7 fe3e 	bl	8002cd4 <_ZN8touchgfx3HAL3lcdEv>
 800b058:	6803      	ldr	r3, [r0, #0]
 800b05a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800b05c:	4798      	blx	r3
 800b05e:	23ff      	movs	r3, #255	@ 0xff
 800b060:	f88d 0029 	strb.w	r0, [sp, #41]	@ 0x29
 800b064:	f88d 002a 	strb.w	r0, [sp, #42]	@ 0x2a
 800b068:	6860      	ldr	r0, [r4, #4]
 800b06a:	f88d 3028 	strb.w	r3, [sp, #40]	@ 0x28
 800b06e:	f88d 502b 	strb.w	r5, [sp, #43]	@ 0x2b
 800b072:	f88d 502c 	strb.w	r5, [sp, #44]	@ 0x2c
 800b076:	6803      	ldr	r3, [r0, #0]
 800b078:	a903      	add	r1, sp, #12
 800b07a:	685b      	ldr	r3, [r3, #4]
 800b07c:	4798      	blx	r3
 800b07e:	4630      	mov	r0, r6
 800b080:	b00c      	add	sp, #48	@ 0x30
 800b082:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800b086:	bf00      	nop
 800b088:	20013f24 	.word	0x20013f24

0800b08c <_ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE>:
 800b08c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800b08e:	b085      	sub	sp, #20
 800b090:	ac02      	add	r4, sp, #8
 800b092:	e884 0006 	stmia.w	r4, {r1, r2}
 800b096:	4605      	mov	r5, r0
 800b098:	f8bd 6008 	ldrh.w	r6, [sp, #8]
 800b09c:	f8bd 700a 	ldrh.w	r7, [sp, #10]
 800b0a0:	f7ff fde6 	bl	800ac70 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800b0a4:	463a      	mov	r2, r7
 800b0a6:	4603      	mov	r3, r0
 800b0a8:	4631      	mov	r1, r6
 800b0aa:	4628      	mov	r0, r5
 800b0ac:	f7ff ff08 	bl	800aec0 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800b0b0:	4a05      	ldr	r2, [pc, #20]	@ (800b0c8 <_ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE+0x3c>)
 800b0b2:	682b      	ldr	r3, [r5, #0]
 800b0b4:	8812      	ldrh	r2, [r2, #0]
 800b0b6:	9200      	str	r2, [sp, #0]
 800b0b8:	6f1e      	ldr	r6, [r3, #112]	@ 0x70
 800b0ba:	e894 0006 	ldmia.w	r4, {r1, r2}
 800b0be:	4603      	mov	r3, r0
 800b0c0:	4628      	mov	r0, r5
 800b0c2:	47b0      	blx	r6
 800b0c4:	b005      	add	sp, #20
 800b0c6:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800b0c8:	20013f24 	.word	0x20013f24

0800b0cc <_ZN8touchgfx3HAL16swapFrameBuffersEv>:
 800b0cc:	b570      	push	{r4, r5, r6, lr}
 800b0ce:	f890 306e 	ldrb.w	r3, [r0, #110]	@ 0x6e
 800b0d2:	4604      	mov	r4, r0
 800b0d4:	b19b      	cbz	r3, 800b0fe <_ZN8touchgfx3HAL16swapFrameBuffersEv+0x32>
 800b0d6:	2002      	movs	r0, #2
 800b0d8:	f7f5 fc12 	bl	8000900 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>
 800b0dc:	2300      	movs	r3, #0
 800b0de:	f884 306e 	strb.w	r3, [r4, #110]	@ 0x6e
 800b0e2:	f884 306d 	strb.w	r3, [r4, #109]	@ 0x6d
 800b0e6:	6823      	ldr	r3, [r4, #0]
 800b0e8:	4620      	mov	r0, r4
 800b0ea:	f8d3 50c8 	ldr.w	r5, [r3, #200]	@ 0xc8
 800b0ee:	f7ff fdbf 	bl	800ac70 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800b0f2:	462b      	mov	r3, r5
 800b0f4:	4601      	mov	r1, r0
 800b0f6:	4620      	mov	r0, r4
 800b0f8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800b0fc:	4718      	bx	r3
 800b0fe:	bd70      	pop	{r4, r5, r6, pc}

0800b100 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>:
 800b100:	b538      	push	{r3, r4, r5, lr}
 800b102:	f890 307b 	ldrb.w	r3, [r0, #123]	@ 0x7b
 800b106:	428b      	cmp	r3, r1
 800b108:	4604      	mov	r4, r0
 800b10a:	460d      	mov	r5, r1
 800b10c:	d006      	beq.n	800b11c <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x1c>
 800b10e:	6803      	ldr	r3, [r0, #0]
 800b110:	b929      	cbnz	r1, 800b11e <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x1e>
 800b112:	f8d3 30d8 	ldr.w	r3, [r3, #216]	@ 0xd8
 800b116:	4798      	blx	r3
 800b118:	f884 507b 	strb.w	r5, [r4, #123]	@ 0x7b
 800b11c:	bd38      	pop	{r3, r4, r5, pc}
 800b11e:	f8d3 30dc 	ldr.w	r3, [r3, #220]	@ 0xdc
 800b122:	e7f8      	b.n	800b116 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x16>

0800b124 <_ZN8touchgfx3HAL15lockFrameBufferEv>:
 800b124:	b510      	push	{r4, lr}
 800b126:	4b0c      	ldr	r3, [pc, #48]	@ (800b158 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x34>)
 800b128:	781b      	ldrb	r3, [r3, #0]
 800b12a:	4604      	mov	r4, r0
 800b12c:	b953      	cbnz	r3, 800b144 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x20>
 800b12e:	f890 3048 	ldrb.w	r3, [r0, #72]	@ 0x48
 800b132:	b93b      	cbnz	r3, 800b144 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x20>
 800b134:	6840      	ldr	r0, [r0, #4]
 800b136:	f000 f92b 	bl	800b390 <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>
 800b13a:	b118      	cbz	r0, 800b144 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x20>
 800b13c:	6862      	ldr	r2, [r4, #4]
 800b13e:	7a53      	ldrb	r3, [r2, #9]
 800b140:	2b00      	cmp	r3, #0
 800b142:	d0fc      	beq.n	800b13e <_ZN8touchgfx3HAL15lockFrameBufferEv+0x1a>
 800b144:	f7f5 fd28 	bl	8000b98 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 800b148:	4620      	mov	r0, r4
 800b14a:	2100      	movs	r1, #0
 800b14c:	f7ff ffd8 	bl	800b100 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 800b150:	4620      	mov	r0, r4
 800b152:	f7ff fd8d 	bl	800ac70 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800b156:	bd10      	pop	{r4, pc}
 800b158:	20013f28 	.word	0x20013f28

0800b15c <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE>:
 800b15c:	b570      	push	{r4, r5, r6, lr}
 800b15e:	4604      	mov	r4, r0
 800b160:	6803      	ldr	r3, [r0, #0]
 800b162:	b919      	cbnz	r1, 800b16c <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE+0x10>
 800b164:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800b166:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800b16a:	4718      	bx	r3
 800b16c:	2200      	movs	r2, #0
 800b16e:	f890 607b 	ldrb.w	r6, [r0, #123]	@ 0x7b
 800b172:	f880 207b 	strb.w	r2, [r0, #123]	@ 0x7b
 800b176:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800b178:	4798      	blx	r3
 800b17a:	6863      	ldr	r3, [r4, #4]
 800b17c:	2101      	movs	r1, #1
 800b17e:	4605      	mov	r5, r0
 800b180:	7299      	strb	r1, [r3, #10]
 800b182:	4620      	mov	r0, r4
 800b184:	f884 607b 	strb.w	r6, [r4, #123]	@ 0x7b
 800b188:	f7ff ffba 	bl	800b100 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 800b18c:	4628      	mov	r0, r5
 800b18e:	bd70      	pop	{r4, r5, r6, pc}

0800b190 <_ZN8touchgfx17LockFreeDMA_Queue7isEmptyEv>:
 800b190:	e9d0 2003 	ldrd	r2, r0, [r0, #12]
 800b194:	1a13      	subs	r3, r2, r0
 800b196:	4258      	negs	r0, r3
 800b198:	4158      	adcs	r0, r3
 800b19a:	4770      	bx	lr

0800b19c <_ZN8touchgfx17LockFreeDMA_Queue6isFullEv>:
 800b19c:	e9d0 2303 	ldrd	r2, r3, [r0, #12]
 800b1a0:	1a9b      	subs	r3, r3, r2
 800b1a2:	2b00      	cmp	r3, #0
 800b1a4:	bfdc      	itt	le
 800b1a6:	6882      	ldrle	r2, [r0, #8]
 800b1a8:	189b      	addle	r3, r3, r2
 800b1aa:	2b01      	cmp	r3, #1
 800b1ac:	bfcc      	ite	gt
 800b1ae:	2000      	movgt	r0, #0
 800b1b0:	2001      	movle	r0, #1
 800b1b2:	4770      	bx	lr

0800b1b4 <_ZN8touchgfx17LockFreeDMA_Queue5firstEv>:
 800b1b4:	6902      	ldr	r2, [r0, #16]
 800b1b6:	6843      	ldr	r3, [r0, #4]
 800b1b8:	2024      	movs	r0, #36	@ 0x24
 800b1ba:	fb00 3002 	mla	r0, r0, r2, r3
 800b1be:	4770      	bx	lr

0800b1c0 <_ZN8touchgfx13DMA_Interface13seedExecutionEv>:
 800b1c0:	6803      	ldr	r3, [r0, #0]
 800b1c2:	691b      	ldr	r3, [r3, #16]
 800b1c4:	4718      	bx	r3

0800b1c6 <_ZN8touchgfx13DMA_Interface7executeEv>:
 800b1c6:	b570      	push	{r4, r5, r6, lr}
 800b1c8:	2301      	movs	r3, #1
 800b1ca:	7203      	strb	r3, [r0, #8]
 800b1cc:	4604      	mov	r4, r0
 800b1ce:	6840      	ldr	r0, [r0, #4]
 800b1d0:	6803      	ldr	r3, [r0, #0]
 800b1d2:	699b      	ldr	r3, [r3, #24]
 800b1d4:	4798      	blx	r3
 800b1d6:	6803      	ldr	r3, [r0, #0]
 800b1d8:	2b40      	cmp	r3, #64	@ 0x40
 800b1da:	4605      	mov	r5, r0
 800b1dc:	d00c      	beq.n	800b1f8 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800b1de:	d810      	bhi.n	800b202 <_ZN8touchgfx13DMA_Interface7executeEv+0x3c>
 800b1e0:	2b04      	cmp	r3, #4
 800b1e2:	d01d      	beq.n	800b220 <_ZN8touchgfx13DMA_Interface7executeEv+0x5a>
 800b1e4:	d804      	bhi.n	800b1f0 <_ZN8touchgfx13DMA_Interface7executeEv+0x2a>
 800b1e6:	2b01      	cmp	r3, #1
 800b1e8:	d006      	beq.n	800b1f8 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800b1ea:	2b02      	cmp	r3, #2
 800b1ec:	d02c      	beq.n	800b248 <_ZN8touchgfx13DMA_Interface7executeEv+0x82>
 800b1ee:	bd70      	pop	{r4, r5, r6, pc}
 800b1f0:	2b08      	cmp	r3, #8
 800b1f2:	d01d      	beq.n	800b230 <_ZN8touchgfx13DMA_Interface7executeEv+0x6a>
 800b1f4:	2b20      	cmp	r3, #32
 800b1f6:	d1fa      	bne.n	800b1ee <_ZN8touchgfx13DMA_Interface7executeEv+0x28>
 800b1f8:	6823      	ldr	r3, [r4, #0]
 800b1fa:	4620      	mov	r0, r4
 800b1fc:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 800b1fe:	4798      	blx	r3
 800b200:	e013      	b.n	800b22a <_ZN8touchgfx13DMA_Interface7executeEv+0x64>
 800b202:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 800b206:	d0f7      	beq.n	800b1f8 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800b208:	d804      	bhi.n	800b214 <_ZN8touchgfx13DMA_Interface7executeEv+0x4e>
 800b20a:	2b80      	cmp	r3, #128	@ 0x80
 800b20c:	d0f4      	beq.n	800b1f8 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800b20e:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 800b212:	e7f0      	b.n	800b1f6 <_ZN8touchgfx13DMA_Interface7executeEv+0x30>
 800b214:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 800b218:	d0ee      	beq.n	800b1f8 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800b21a:	f5b3 6f00 	cmp.w	r3, #2048	@ 0x800
 800b21e:	e7e5      	b.n	800b1ec <_ZN8touchgfx13DMA_Interface7executeEv+0x26>
 800b220:	6823      	ldr	r3, [r4, #0]
 800b222:	7f01      	ldrb	r1, [r0, #28]
 800b224:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800b226:	4620      	mov	r0, r4
 800b228:	4798      	blx	r3
 800b22a:	6823      	ldr	r3, [r4, #0]
 800b22c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800b22e:	e006      	b.n	800b23e <_ZN8touchgfx13DMA_Interface7executeEv+0x78>
 800b230:	6823      	ldr	r3, [r4, #0]
 800b232:	7f01      	ldrb	r1, [r0, #28]
 800b234:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800b236:	4620      	mov	r0, r4
 800b238:	4798      	blx	r3
 800b23a:	6823      	ldr	r3, [r4, #0]
 800b23c:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 800b23e:	4629      	mov	r1, r5
 800b240:	4620      	mov	r0, r4
 800b242:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800b246:	4718      	bx	r3
 800b248:	6823      	ldr	r3, [r4, #0]
 800b24a:	4620      	mov	r0, r4
 800b24c:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 800b24e:	4798      	blx	r3
 800b250:	e7f3      	b.n	800b23a <_ZN8touchgfx13DMA_Interface7executeEv+0x74>

0800b252 <_ZN8touchgfx13DMA_Interface11enableAlphaEh>:
 800b252:	4770      	bx	lr

0800b254 <_ZN8touchgfx13DMA_Interface12disableAlphaEv>:
 800b254:	4770      	bx	lr

0800b256 <_ZN8touchgfx17LockFreeDMA_QueueD1Ev>:
 800b256:	4770      	bx	lr

0800b258 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE>:
 800b258:	e9d0 3203 	ldrd	r3, r2, [r0, #12]
 800b25c:	1ad2      	subs	r2, r2, r3
 800b25e:	2a00      	cmp	r2, #0
 800b260:	b510      	push	{r4, lr}
 800b262:	bfdc      	itt	le
 800b264:	6884      	ldrle	r4, [r0, #8]
 800b266:	1912      	addle	r2, r2, r4
 800b268:	2a01      	cmp	r2, #1
 800b26a:	dd16      	ble.n	800b29a <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x42>
 800b26c:	6842      	ldr	r2, [r0, #4]
 800b26e:	2424      	movs	r4, #36	@ 0x24
 800b270:	fb04 2303 	mla	r3, r4, r3, r2
 800b274:	f101 0220 	add.w	r2, r1, #32
 800b278:	f851 4b04 	ldr.w	r4, [r1], #4
 800b27c:	f843 4b04 	str.w	r4, [r3], #4
 800b280:	4291      	cmp	r1, r2
 800b282:	d1f9      	bne.n	800b278 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x20>
 800b284:	780a      	ldrb	r2, [r1, #0]
 800b286:	701a      	strb	r2, [r3, #0]
 800b288:	68c3      	ldr	r3, [r0, #12]
 800b28a:	6882      	ldr	r2, [r0, #8]
 800b28c:	f3bf 8f5b 	dmb	ish
 800b290:	3301      	adds	r3, #1
 800b292:	429a      	cmp	r2, r3
 800b294:	bfd8      	it	le
 800b296:	1a9b      	suble	r3, r3, r2
 800b298:	60c3      	str	r3, [r0, #12]
 800b29a:	bd10      	pop	{r4, pc}

0800b29c <_ZN8touchgfx17LockFreeDMA_Queue3popEv>:
 800b29c:	6903      	ldr	r3, [r0, #16]
 800b29e:	6882      	ldr	r2, [r0, #8]
 800b2a0:	f3bf 8f5b 	dmb	ish
 800b2a4:	3301      	adds	r3, #1
 800b2a6:	429a      	cmp	r2, r3
 800b2a8:	bfd8      	it	le
 800b2aa:	1a9b      	suble	r3, r3, r2
 800b2ac:	6103      	str	r3, [r0, #16]
 800b2ae:	4770      	bx	lr

0800b2b0 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE>:
 800b2b0:	b570      	push	{r4, r5, r6, lr}
 800b2b2:	4604      	mov	r4, r0
 800b2b4:	460e      	mov	r6, r1
 800b2b6:	6860      	ldr	r0, [r4, #4]
 800b2b8:	6803      	ldr	r3, [r0, #0]
 800b2ba:	685b      	ldr	r3, [r3, #4]
 800b2bc:	4798      	blx	r3
 800b2be:	2800      	cmp	r0, #0
 800b2c0:	d1f9      	bne.n	800b2b6 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x6>
 800b2c2:	4d0d      	ldr	r5, [pc, #52]	@ (800b2f8 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x48>)
 800b2c4:	6828      	ldr	r0, [r5, #0]
 800b2c6:	6803      	ldr	r3, [r0, #0]
 800b2c8:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 800b2cc:	4798      	blx	r3
 800b2ce:	f7f5 fc71 	bl	8000bb4 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>
 800b2d2:	6828      	ldr	r0, [r5, #0]
 800b2d4:	2101      	movs	r1, #1
 800b2d6:	f7ff ff13 	bl	800b100 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 800b2da:	6860      	ldr	r0, [r4, #4]
 800b2dc:	6803      	ldr	r3, [r0, #0]
 800b2de:	4631      	mov	r1, r6
 800b2e0:	689b      	ldr	r3, [r3, #8]
 800b2e2:	4798      	blx	r3
 800b2e4:	6823      	ldr	r3, [r4, #0]
 800b2e6:	4620      	mov	r0, r4
 800b2e8:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800b2ea:	4798      	blx	r3
 800b2ec:	6828      	ldr	r0, [r5, #0]
 800b2ee:	6803      	ldr	r3, [r0, #0]
 800b2f0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800b2f4:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 800b2f6:	4718      	bx	r3
 800b2f8:	20013f2c 	.word	0x20013f2c

0800b2fc <_ZN8touchgfx13DMA_Interface27waitForFrameBufferSemaphoreEv>:
 800b2fc:	b508      	push	{r3, lr}
 800b2fe:	f7f5 fc4b 	bl	8000b98 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 800b302:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 800b306:	f7f5 bc4f 	b.w	8000ba8 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

0800b30a <_ZN8touchgfx17LockFreeDMA_QueueD0Ev>:
 800b30a:	b510      	push	{r4, lr}
 800b30c:	2114      	movs	r1, #20
 800b30e:	4604      	mov	r4, r0
 800b310:	f016 fb91 	bl	8021a36 <_ZdlPvj>
 800b314:	4620      	mov	r0, r4
 800b316:	bd10      	pop	{r4, pc}

0800b318 <_ZN8touchgfx13DMA_Interface5startEv>:
 800b318:	b510      	push	{r4, lr}
 800b31a:	4604      	mov	r4, r0
 800b31c:	6840      	ldr	r0, [r0, #4]
 800b31e:	6803      	ldr	r3, [r0, #0]
 800b320:	681b      	ldr	r3, [r3, #0]
 800b322:	4798      	blx	r3
 800b324:	b948      	cbnz	r0, 800b33a <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 800b326:	7a63      	ldrb	r3, [r4, #9]
 800b328:	b13b      	cbz	r3, 800b33a <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 800b32a:	7a23      	ldrb	r3, [r4, #8]
 800b32c:	b92b      	cbnz	r3, 800b33a <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 800b32e:	6823      	ldr	r3, [r4, #0]
 800b330:	4620      	mov	r0, r4
 800b332:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800b334:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800b338:	4718      	bx	r3
 800b33a:	bd10      	pop	{r4, pc}

0800b33c <_ZN8touchgfx13DMA_Interface16executeCompletedEv>:
 800b33c:	b570      	push	{r4, r5, r6, lr}
 800b33e:	4604      	mov	r4, r0
 800b340:	6840      	ldr	r0, [r0, #4]
 800b342:	6803      	ldr	r3, [r0, #0]
 800b344:	681b      	ldr	r3, [r3, #0]
 800b346:	4798      	blx	r3
 800b348:	4605      	mov	r5, r0
 800b34a:	b930      	cbnz	r0, 800b35a <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 800b34c:	7a23      	ldrb	r3, [r4, #8]
 800b34e:	b123      	cbz	r3, 800b35a <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 800b350:	6860      	ldr	r0, [r4, #4]
 800b352:	6803      	ldr	r3, [r0, #0]
 800b354:	695b      	ldr	r3, [r3, #20]
 800b356:	4798      	blx	r3
 800b358:	7225      	strb	r5, [r4, #8]
 800b35a:	6860      	ldr	r0, [r4, #4]
 800b35c:	6803      	ldr	r3, [r0, #0]
 800b35e:	681b      	ldr	r3, [r3, #0]
 800b360:	4798      	blx	r3
 800b362:	b928      	cbnz	r0, 800b370 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x34>
 800b364:	6823      	ldr	r3, [r4, #0]
 800b366:	4620      	mov	r0, r4
 800b368:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800b36a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800b36e:	4718      	bx	r3
 800b370:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800b374:	f7f5 bc26 	b.w	8000bc4 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>

0800b378 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>:
 800b378:	b510      	push	{r4, lr}
 800b37a:	4c04      	ldr	r4, [pc, #16]	@ (800b38c <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi+0x14>)
 800b37c:	6082      	str	r2, [r0, #8]
 800b37e:	2200      	movs	r2, #0
 800b380:	e9c0 4100 	strd	r4, r1, [r0]
 800b384:	e9c0 2203 	strd	r2, r2, [r0, #12]
 800b388:	bd10      	pop	{r4, pc}
 800b38a:	bf00      	nop
 800b38c:	08024a58 	.word	0x08024a58

0800b390 <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>:
 800b390:	6840      	ldr	r0, [r0, #4]
 800b392:	6803      	ldr	r3, [r0, #0]
 800b394:	681b      	ldr	r3, [r3, #0]
 800b396:	4718      	bx	r3

0800b398 <_ZN8touchgfxL10applyNoiseEiihhh>:
 800b398:	e92d 48f0 	stmdb	sp!, {r4, r5, r6, r7, fp, lr}
 800b39c:	4f20      	ldr	r7, [pc, #128]	@ (800b420 <_ZN8touchgfxL10applyNoiseEiihhh+0x88>)
 800b39e:	f89d 5018 	ldrb.w	r5, [sp, #24]
 800b3a2:	fb80 0101 	smull	r0, r1, r0, r1
 800b3a6:	fba0 bc07 	umull	fp, ip, r0, r7
 800b3aa:	fb07 cc01 	mla	ip, r7, r1, ip
 800b3ae:	fb0b f70c 	mul.w	r7, fp, ip
 800b3b2:	fbab 010b 	umull	r0, r1, fp, fp
 800b3b6:	461c      	mov	r4, r3
 800b3b8:	eb01 0147 	add.w	r1, r1, r7, lsl #1
 800b3bc:	fb00 f30c 	mul.w	r3, r0, ip
 800b3c0:	fb0b 3301 	mla	r3, fp, r1, r3
 800b3c4:	fba0 010b 	umull	r0, r1, r0, fp
 800b3c8:	4616      	mov	r6, r2
 800b3ca:	4419      	add	r1, r3
 800b3cc:	a312      	add	r3, pc, #72	@ (adr r3, 800b418 <_ZN8touchgfxL10applyNoiseEiihhh+0x80>)
 800b3ce:	e9d3 2300 	ldrd	r2, r3, [r3]
 800b3d2:	f7f4 ff65 	bl	80002a0 <__aeabi_ldivmod>
 800b3d6:	2ef7      	cmp	r6, #247	@ 0xf7
 800b3d8:	b290      	uxth	r0, r2
 800b3da:	bf9e      	ittt	ls
 800b3dc:	f002 0207 	andls.w	r2, r2, #7
 800b3e0:	18b6      	addls	r6, r6, r2
 800b3e2:	b2f6      	uxtbls	r6, r6
 800b3e4:	2cfb      	cmp	r4, #251	@ 0xfb
 800b3e6:	bf9e      	ittt	ls
 800b3e8:	f3c0 03c1 	ubfxls	r3, r0, #3, #2
 800b3ec:	18e4      	addls	r4, r4, r3
 800b3ee:	b2e4      	uxtbls	r4, r4
 800b3f0:	2df7      	cmp	r5, #247	@ 0xf7
 800b3f2:	bf9c      	itt	ls
 800b3f4:	f3c0 1042 	ubfxls	r0, r0, #5, #3
 800b3f8:	182d      	addls	r5, r5, r0
 800b3fa:	480a      	ldr	r0, [pc, #40]	@ (800b424 <_ZN8touchgfxL10applyNoiseEiihhh+0x8c>)
 800b3fc:	ea4f 04c4 	mov.w	r4, r4, lsl #3
 800b400:	ea00 2006 	and.w	r0, r0, r6, lsl #8
 800b404:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
 800b408:	bf98      	it	ls
 800b40a:	b2ed      	uxtbls	r5, r5
 800b40c:	4304      	orrs	r4, r0
 800b40e:	ea44 00d5 	orr.w	r0, r4, r5, lsr #3
 800b412:	b280      	uxth	r0, r0
 800b414:	e8bd 88f0 	ldmia.w	sp!, {r4, r5, r6, r7, fp, pc}
 800b418:	797a8d77 	.word	0x797a8d77
 800b41c:	00000000 	.word	0x00000000
 800b420:	00ec4ba7 	.word	0x00ec4ba7
 800b424:	fffff800 	.word	0xfffff800

0800b428 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh>:
 800b428:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800b42c:	ed2d 8b02 	vpush	{d8}
 800b430:	eb01 0442 	add.w	r4, r1, r2, lsl #1
 800b434:	b087      	sub	sp, #28
 800b436:	7c41      	ldrb	r1, [r0, #17]
 800b438:	f9bd 9048 	ldrsh.w	r9, [sp, #72]	@ 0x48
 800b43c:	f9bd 604c 	ldrsh.w	r6, [sp, #76]	@ 0x4c
 800b440:	f89d a050 	ldrb.w	sl, [sp, #80]	@ 0x50
 800b444:	4605      	mov	r5, r0
 800b446:	2900      	cmp	r1, #0
 800b448:	f000 809a 	beq.w	800b580 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x158>
 800b44c:	f9b0 2008 	ldrsh.w	r2, [r0, #8]
 800b450:	ed90 7a08 	vldr	s14, [r0, #32]
 800b454:	68c0      	ldr	r0, [r0, #12]
 800b456:	454a      	cmp	r2, r9
 800b458:	db25      	blt.n	800b4a6 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x7e>
 800b45a:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 800b45e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800b462:	f640 72fc 	movw	r2, #4092	@ 0xffc
 800b466:	bfc8      	it	gt
 800b468:	2200      	movgt	r2, #0
 800b46a:	5882      	ldr	r2, [r0, r2]
 800b46c:	2100      	movs	r1, #0
 800b46e:	7c2d      	ldrb	r5, [r5, #16]
 800b470:	ea4f 2812 	mov.w	r8, r2, lsr #8
 800b474:	0950      	lsrs	r0, r2, #5
 800b476:	f408 4e78 	and.w	lr, r8, #63488	@ 0xf800
 800b47a:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 800b47e:	f3c2 0cc4 	ubfx	ip, r2, #3, #5
 800b482:	eb04 0746 	add.w	r7, r4, r6, lsl #1
 800b486:	2d00      	cmp	r5, #0
 800b488:	d044      	beq.n	800b514 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0xec>
 800b48a:	f1ba 0fff 	cmp.w	sl, #255	@ 0xff
 800b48e:	d141      	bne.n	800b514 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0xec>
 800b490:	bb61      	cbnz	r1, 800b4ec <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0xc4>
 800b492:	ea4e 0000 	orr.w	r0, lr, r0
 800b496:	ea4c 0500 	orr.w	r5, ip, r0
 800b49a:	42bc      	cmp	r4, r7
 800b49c:	f080 8217 	bcs.w	800b8ce <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4a6>
 800b4a0:	f824 5b02 	strh.w	r5, [r4], #2
 800b4a4:	e7f9      	b.n	800b49a <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x72>
 800b4a6:	f9b5 700a 	ldrsh.w	r7, [r5, #10]
 800b4aa:	454f      	cmp	r7, r9
 800b4ac:	dc08      	bgt.n	800b4c0 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x98>
 800b4ae:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 800b4b2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800b4b6:	f640 72fc 	movw	r2, #4092	@ 0xffc
 800b4ba:	bfd8      	it	le
 800b4bc:	2200      	movle	r2, #0
 800b4be:	e7d4      	b.n	800b46a <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x42>
 800b4c0:	eba9 0202 	sub.w	r2, r9, r2
 800b4c4:	ee07 2a90 	vmov	s15, r2
 800b4c8:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800b4cc:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 800b4d0:	ee67 7a87 	vmul.f32	s15, s15, s14
 800b4d4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800b4d8:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800b4dc:	ee17 2a90 	vmov	r2, s15
 800b4e0:	bfd8      	it	le
 800b4e2:	f202 32ff 	addwle	r2, r2, #1023	@ 0x3ff
 800b4e6:	0092      	lsls	r2, r2, #2
 800b4e8:	5882      	ldr	r2, [r0, r2]
 800b4ea:	e7c0      	b.n	800b46e <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x46>
 800b4ec:	b2d5      	uxtb	r5, r2
 800b4ee:	fa5f f888 	uxtb.w	r8, r8
 800b4f2:	f3c2 4a07 	ubfx	sl, r2, #16, #8
 800b4f6:	461e      	mov	r6, r3
 800b4f8:	42bc      	cmp	r4, r7
 800b4fa:	f080 81e8 	bcs.w	800b8ce <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4a6>
 800b4fe:	4630      	mov	r0, r6
 800b500:	9500      	str	r5, [sp, #0]
 800b502:	4643      	mov	r3, r8
 800b504:	4652      	mov	r2, sl
 800b506:	4649      	mov	r1, r9
 800b508:	f7ff ff46 	bl	800b398 <_ZN8touchgfxL10applyNoiseEiihhh>
 800b50c:	3601      	adds	r6, #1
 800b50e:	f824 0b02 	strh.w	r0, [r4], #2
 800b512:	e7f1      	b.n	800b4f8 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0xd0>
 800b514:	0e12      	lsrs	r2, r2, #24
 800b516:	fb02 f20a 	mul.w	r2, r2, sl
 800b51a:	1c53      	adds	r3, r2, #1
 800b51c:	eb03 2222 	add.w	r2, r3, r2, asr #8
 800b520:	1212      	asrs	r2, r2, #8
 800b522:	fb02 f50c 	mul.w	r5, r2, ip
 800b526:	fb02 f10e 	mul.w	r1, r2, lr
 800b52a:	4350      	muls	r0, r2
 800b52c:	f8df c3b0 	ldr.w	ip, [pc, #944]	@ 800b8e0 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4b8>
 800b530:	43d2      	mvns	r2, r2
 800b532:	f002 02ff 	and.w	r2, r2, #255	@ 0xff
 800b536:	26ff      	movs	r6, #255	@ 0xff
 800b538:	42bc      	cmp	r4, r7
 800b53a:	f080 81c8 	bcs.w	800b8ce <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4a6>
 800b53e:	f8b4 e000 	ldrh.w	lr, [r4]
 800b542:	ea0e 030c 	and.w	r3, lr, ip
 800b546:	f40e 68fc 	and.w	r8, lr, #2016	@ 0x7e0
 800b54a:	fb02 1303 	mla	r3, r2, r3, r1
 800b54e:	fb02 0808 	mla	r8, r2, r8, r0
 800b552:	fb93 f3f6 	sdiv	r3, r3, r6
 800b556:	fb98 f8f6 	sdiv	r8, r8, r6
 800b55a:	ea03 030c 	and.w	r3, r3, ip
 800b55e:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
 800b562:	f00e 0e1f 	and.w	lr, lr, #31
 800b566:	ea43 0308 	orr.w	r3, r3, r8
 800b56a:	fb02 5e0e 	mla	lr, r2, lr, r5
 800b56e:	fb9e fef6 	sdiv	lr, lr, r6
 800b572:	f00e 0e1f 	and.w	lr, lr, #31
 800b576:	ea43 030e 	orr.w	r3, r3, lr
 800b57a:	f824 3b02 	strh.w	r3, [r4], #2
 800b57e:	e7db      	b.n	800b538 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x110>
 800b580:	7c82      	ldrb	r2, [r0, #18]
 800b582:	2a00      	cmp	r2, #0
 800b584:	d04f      	beq.n	800b626 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x1fe>
 800b586:	f9b0 2008 	ldrsh.w	r2, [r0, #8]
 800b58a:	ee07 2a90 	vmov	s15, r2
 800b58e:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800b592:	ee07 3a10 	vmov	s14, r3
 800b596:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800b59a:	461f      	mov	r7, r3
 800b59c:	eef4 6ae7 	vcmpe.f32	s13, s15
 800b5a0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800b5a4:	f200 8095 	bhi.w	800b6d2 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x2aa>
 800b5a8:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 800b5ac:	ee37 7a87 	vadd.f32	s14, s15, s14
 800b5b0:	f640 71fc 	movw	r1, #4092	@ 0xffc
 800b5b4:	ee37 7a66 	vsub.f32	s14, s14, s13
 800b5b8:	ee06 6a90 	vmov	s13, r6
 800b5bc:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 800b5c0:	68ea      	ldr	r2, [r5, #12]
 800b5c2:	f895 c010 	ldrb.w	ip, [r5, #16]
 800b5c6:	eeb4 7ae6 	vcmpe.f32	s14, s13
 800b5ca:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800b5ce:	bf4a      	itet	mi
 800b5d0:	eebd 7ac7 	vcvtmi.s32.f32	s14, s14
 800b5d4:	9602      	strpl	r6, [sp, #8]
 800b5d6:	ed8d 7a02 	vstrmi	s14, [sp, #8]
 800b5da:	ed95 7a08 	vldr	s14, [r5, #32]
 800b5de:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 800b5e2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800b5e6:	bfc8      	it	gt
 800b5e8:	2100      	movgt	r1, #0
 800b5ea:	5852      	ldr	r2, [r2, r1]
 800b5ec:	9902      	ldr	r1, [sp, #8]
 800b5ee:	ea4f 2b12 	mov.w	fp, r2, lsr #8
 800b5f2:	eb04 0141 	add.w	r1, r4, r1, lsl #1
 800b5f6:	0950      	lsrs	r0, r2, #5
 800b5f8:	9103      	str	r1, [sp, #12]
 800b5fa:	f40b 4b78 	and.w	fp, fp, #63488	@ 0xf800
 800b5fe:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 800b602:	f3c2 01c4 	ubfx	r1, r2, #3, #5
 800b606:	f1bc 0f00 	cmp.w	ip, #0
 800b60a:	d024      	beq.n	800b656 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x22e>
 800b60c:	f1ba 0fff 	cmp.w	sl, #255	@ 0xff
 800b610:	d121      	bne.n	800b656 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x22e>
 800b612:	ea4b 0b00 	orr.w	fp, fp, r0
 800b616:	ea41 010b 	orr.w	r1, r1, fp
 800b61a:	9a03      	ldr	r2, [sp, #12]
 800b61c:	4294      	cmp	r4, r2
 800b61e:	d255      	bcs.n	800b6cc <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x2a4>
 800b620:	f824 1b02 	strh.w	r1, [r4], #2
 800b624:	e7f9      	b.n	800b61a <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x1f2>
 800b626:	ee07 9a10 	vmov	s14, r9
 800b62a:	edd0 7a06 	vldr	s15, [r0, #24]
 800b62e:	edd0 6a05 	vldr	s13, [r0, #20]
 800b632:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800b636:	ee37 7a67 	vsub.f32	s14, s14, s15
 800b63a:	eec7 7a26 	vdiv.f32	s15, s14, s13
 800b63e:	ed90 7a08 	vldr	s14, [r0, #32]
 800b642:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 800b646:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800b64a:	bf44      	itt	mi
 800b64c:	ed90 7a07 	vldrmi	s14, [r0, #28]
 800b650:	ee77 7ac7 	vsubmi.f32	s15, s15, s14
 800b654:	e79d      	b.n	800b592 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x16a>
 800b656:	0e12      	lsrs	r2, r2, #24
 800b658:	fb02 f20a 	mul.w	r2, r2, sl
 800b65c:	f102 0c01 	add.w	ip, r2, #1
 800b660:	eb0c 2222 	add.w	r2, ip, r2, asr #8
 800b664:	1212      	asrs	r2, r2, #8
 800b666:	4350      	muls	r0, r2
 800b668:	4351      	muls	r1, r2
 800b66a:	fb02 fb0b 	mul.w	fp, r2, fp
 800b66e:	f8df 8270 	ldr.w	r8, [pc, #624]	@ 800b8e0 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4b8>
 800b672:	9004      	str	r0, [sp, #16]
 800b674:	43d2      	mvns	r2, r2
 800b676:	9105      	str	r1, [sp, #20]
 800b678:	f002 02ff 	and.w	r2, r2, #255	@ 0xff
 800b67c:	f04f 0eff 	mov.w	lr, #255	@ 0xff
 800b680:	9903      	ldr	r1, [sp, #12]
 800b682:	428c      	cmp	r4, r1
 800b684:	d222      	bcs.n	800b6cc <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x2a4>
 800b686:	8820      	ldrh	r0, [r4, #0]
 800b688:	f400 61fc 	and.w	r1, r0, #2016	@ 0x7e0
 800b68c:	460f      	mov	r7, r1
 800b68e:	9904      	ldr	r1, [sp, #16]
 800b690:	ea00 0c08 	and.w	ip, r0, r8
 800b694:	fb02 bc0c 	mla	ip, r2, ip, fp
 800b698:	fb02 1107 	mla	r1, r2, r7, r1
 800b69c:	fb9c fcfe 	sdiv	ip, ip, lr
 800b6a0:	fb91 f1fe 	sdiv	r1, r1, lr
 800b6a4:	ea0c 0c08 	and.w	ip, ip, r8
 800b6a8:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 800b6ac:	ea4c 0101 	orr.w	r1, ip, r1
 800b6b0:	f000 0c1f 	and.w	ip, r0, #31
 800b6b4:	9805      	ldr	r0, [sp, #20]
 800b6b6:	fb02 0c0c 	mla	ip, r2, ip, r0
 800b6ba:	fb9c fcfe 	sdiv	ip, ip, lr
 800b6be:	f00c 0c1f 	and.w	ip, ip, #31
 800b6c2:	ea41 010c 	orr.w	r1, r1, ip
 800b6c6:	f824 1b02 	strh.w	r1, [r4], #2
 800b6ca:	e7d9      	b.n	800b680 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x258>
 800b6cc:	9a02      	ldr	r2, [sp, #8]
 800b6ce:	441a      	add	r2, r3
 800b6d0:	4617      	mov	r7, r2
 800b6d2:	441e      	add	r6, r3
 800b6d4:	b236      	sxth	r6, r6
 800b6d6:	42be      	cmp	r6, r7
 800b6d8:	f340 80f9 	ble.w	800b8ce <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4a6>
 800b6dc:	ed95 7a07 	vldr	s14, [r5, #28]
 800b6e0:	ee06 7a90 	vmov	s13, r7
 800b6e4:	ee37 7a87 	vadd.f32	s14, s15, s14
 800b6e8:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 800b6ec:	eeb4 7ae6 	vcmpe.f32	s14, s13
 800b6f0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800b6f4:	f340 80b5 	ble.w	800b862 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x43a>
 800b6f8:	ee06 6a10 	vmov	s12, r6
 800b6fc:	eeb8 6ac6 	vcvt.f32.s32	s12, s12
 800b700:	ed9f 8a75 	vldr	s16, [pc, #468]	@ 800b8d8 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4b0>
 800b704:	7c2b      	ldrb	r3, [r5, #16]
 800b706:	eeb4 7ac6 	vcmpe.f32	s14, s12
 800b70a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800b70e:	bfd8      	it	le
 800b710:	eebd 7ac7 	vcvtle.s32.f32	s14, s14
 800b714:	ed9f 6a71 	vldr	s12, [pc, #452]	@ 800b8dc <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4b4>
 800b718:	bfd8      	it	le
 800b71a:	ee17 8a10 	vmovle	r8, s14
 800b71e:	ed95 7a08 	vldr	s14, [r5, #32]
 800b722:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 800b726:	bfc8      	it	gt
 800b728:	46b0      	movgt	r8, r6
 800b72a:	ee76 7ae7 	vsub.f32	s15, s13, s15
 800b72e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800b732:	eba8 0707 	sub.w	r7, r8, r7
 800b736:	bfd8      	it	le
 800b738:	eeb0 8a46 	vmovle.f32	s16, s12
 800b73c:	eb04 0747 	add.w	r7, r4, r7, lsl #1
 800b740:	eea7 8a27 	vfma.f32	s16, s14, s15
 800b744:	b1db      	cbz	r3, 800b77e <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x356>
 800b746:	f1ba 0fff 	cmp.w	sl, #255	@ 0xff
 800b74a:	d118      	bne.n	800b77e <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x356>
 800b74c:	42bc      	cmp	r4, r7
 800b74e:	d262      	bcs.n	800b816 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x3ee>
 800b750:	eefd 7ac8 	vcvt.s32.f32	s15, s16
 800b754:	68eb      	ldr	r3, [r5, #12]
 800b756:	ee17 0a90 	vmov	r0, s15
 800b75a:	f853 2020 	ldr.w	r2, [r3, r0, lsl #2]
 800b75e:	b2d3      	uxtb	r3, r2
 800b760:	9300      	str	r3, [sp, #0]
 800b762:	4649      	mov	r1, r9
 800b764:	f3c2 2307 	ubfx	r3, r2, #8, #8
 800b768:	f3c2 4207 	ubfx	r2, r2, #16, #8
 800b76c:	f7ff fe14 	bl	800b398 <_ZN8touchgfxL10applyNoiseEiihhh>
 800b770:	f824 0b02 	strh.w	r0, [r4], #2
 800b774:	edd5 7a08 	vldr	s15, [r5, #32]
 800b778:	ee38 8a27 	vadd.f32	s16, s16, s15
 800b77c:	e7e6      	b.n	800b74c <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x324>
 800b77e:	f8df b160 	ldr.w	fp, [pc, #352]	@ 800b8e0 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4b8>
 800b782:	f04f 09ff 	mov.w	r9, #255	@ 0xff
 800b786:	42bc      	cmp	r4, r7
 800b788:	d245      	bcs.n	800b816 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x3ee>
 800b78a:	eefd 7ac8 	vcvt.s32.f32	s15, s16
 800b78e:	68eb      	ldr	r3, [r5, #12]
 800b790:	f8b4 e000 	ldrh.w	lr, [r4]
 800b794:	ee17 2a90 	vmov	r2, s15
 800b798:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 800b79c:	0e13      	lsrs	r3, r2, #24
 800b79e:	fb03 f30a 	mul.w	r3, r3, sl
 800b7a2:	1c58      	adds	r0, r3, #1
 800b7a4:	eb00 2023 	add.w	r0, r0, r3, asr #8
 800b7a8:	1200      	asrs	r0, r0, #8
 800b7aa:	ea6f 0c00 	mvn.w	ip, r0
 800b7ae:	fa5f fc8c 	uxtb.w	ip, ip
 800b7b2:	ea0b 2112 	and.w	r1, fp, r2, lsr #8
 800b7b6:	ea0e 030b 	and.w	r3, lr, fp
 800b7ba:	fb0c f303 	mul.w	r3, ip, r3
 800b7be:	b289      	uxth	r1, r1
 800b7c0:	fb00 3101 	mla	r1, r0, r1, r3
 800b7c4:	fb91 f1f9 	sdiv	r1, r1, r9
 800b7c8:	ea01 030b 	and.w	r3, r1, fp
 800b7cc:	9302      	str	r3, [sp, #8]
 800b7ce:	0953      	lsrs	r3, r2, #5
 800b7d0:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 800b7d4:	4619      	mov	r1, r3
 800b7d6:	f40e 63fc 	and.w	r3, lr, #2016	@ 0x7e0
 800b7da:	fb0c f303 	mul.w	r3, ip, r3
 800b7de:	fb00 3301 	mla	r3, r0, r1, r3
 800b7e2:	f00e 0e1f 	and.w	lr, lr, #31
 800b7e6:	9902      	ldr	r1, [sp, #8]
 800b7e8:	fb93 f3f9 	sdiv	r3, r3, r9
 800b7ec:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 800b7f0:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 800b7f4:	fb0c fc0e 	mul.w	ip, ip, lr
 800b7f8:	4319      	orrs	r1, r3
 800b7fa:	fb00 c002 	mla	r0, r0, r2, ip
 800b7fe:	fb90 f0f9 	sdiv	r0, r0, r9
 800b802:	f000 001f 	and.w	r0, r0, #31
 800b806:	4301      	orrs	r1, r0
 800b808:	f824 1b02 	strh.w	r1, [r4], #2
 800b80c:	edd5 7a08 	vldr	s15, [r5, #32]
 800b810:	ee38 8a27 	vadd.f32	s16, s16, s15
 800b814:	e7b7      	b.n	800b786 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x35e>
 800b816:	4546      	cmp	r6, r8
 800b818:	dd59      	ble.n	800b8ce <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4a6>
 800b81a:	edd5 7a08 	vldr	s15, [r5, #32]
 800b81e:	68ea      	ldr	r2, [r5, #12]
 800b820:	7c29      	ldrb	r1, [r5, #16]
 800b822:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800b826:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800b82a:	f640 73fc 	movw	r3, #4092	@ 0xffc
 800b82e:	bfd8      	it	le
 800b830:	2300      	movle	r3, #0
 800b832:	eba6 0608 	sub.w	r6, r6, r8
 800b836:	58d2      	ldr	r2, [r2, r3]
 800b838:	0a10      	lsrs	r0, r2, #8
 800b83a:	0953      	lsrs	r3, r2, #5
 800b83c:	eb04 0646 	add.w	r6, r4, r6, lsl #1
 800b840:	f400 4078 	and.w	r0, r0, #63488	@ 0xf800
 800b844:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 800b848:	f3c2 07c4 	ubfx	r7, r2, #3, #5
 800b84c:	b159      	cbz	r1, 800b866 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x43e>
 800b84e:	f1ba 0fff 	cmp.w	sl, #255	@ 0xff
 800b852:	d108      	bne.n	800b866 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x43e>
 800b854:	4318      	orrs	r0, r3
 800b856:	4338      	orrs	r0, r7
 800b858:	42b4      	cmp	r4, r6
 800b85a:	d238      	bcs.n	800b8ce <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4a6>
 800b85c:	f824 0b02 	strh.w	r0, [r4], #2
 800b860:	e7fa      	b.n	800b858 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x430>
 800b862:	46b8      	mov	r8, r7
 800b864:	e7d9      	b.n	800b81a <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x3f2>
 800b866:	0e12      	lsrs	r2, r2, #24
 800b868:	fb02 f10a 	mul.w	r1, r2, sl
 800b86c:	1c4a      	adds	r2, r1, #1
 800b86e:	eb02 2221 	add.w	r2, r2, r1, asr #8
 800b872:	1212      	asrs	r2, r2, #8
 800b874:	fb02 f507 	mul.w	r5, r2, r7
 800b878:	4350      	muls	r0, r2
 800b87a:	4353      	muls	r3, r2
 800b87c:	f8df c060 	ldr.w	ip, [pc, #96]	@ 800b8e0 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4b8>
 800b880:	43d2      	mvns	r2, r2
 800b882:	f002 02ff 	and.w	r2, r2, #255	@ 0xff
 800b886:	27ff      	movs	r7, #255	@ 0xff
 800b888:	42b4      	cmp	r4, r6
 800b88a:	d220      	bcs.n	800b8ce <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4a6>
 800b88c:	f8b4 e000 	ldrh.w	lr, [r4]
 800b890:	ea0e 010c 	and.w	r1, lr, ip
 800b894:	f40e 68fc 	and.w	r8, lr, #2016	@ 0x7e0
 800b898:	fb02 0101 	mla	r1, r2, r1, r0
 800b89c:	fb02 3808 	mla	r8, r2, r8, r3
 800b8a0:	fb91 f1f7 	sdiv	r1, r1, r7
 800b8a4:	fb98 f8f7 	sdiv	r8, r8, r7
 800b8a8:	ea01 010c 	and.w	r1, r1, ip
 800b8ac:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
 800b8b0:	f00e 0e1f 	and.w	lr, lr, #31
 800b8b4:	ea41 0108 	orr.w	r1, r1, r8
 800b8b8:	fb02 5e0e 	mla	lr, r2, lr, r5
 800b8bc:	fb9e fef7 	sdiv	lr, lr, r7
 800b8c0:	f00e 0e1f 	and.w	lr, lr, #31
 800b8c4:	ea41 010e 	orr.w	r1, r1, lr
 800b8c8:	f824 1b02 	strh.w	r1, [r4], #2
 800b8cc:	e7dc      	b.n	800b888 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x460>
 800b8ce:	b007      	add	sp, #28
 800b8d0:	ecbd 8b02 	vpop	{d8}
 800b8d4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800b8d8:	00000000 	.word	0x00000000
 800b8dc:	447ffffe 	.word	0x447ffffe
 800b8e0:	fffff800 	.word	0xfffff800

0800b8e4 <_ZNK8touchgfx27PainterRGB565LinearGradient8tearDownEv>:
 800b8e4:	4770      	bx	lr

0800b8e6 <_ZN8touchgfx27PainterRGB565LinearGradientD1Ev>:
 800b8e6:	4770      	bx	lr

0800b8e8 <_ZN8touchgfx27PainterRGB565LinearGradientD0Ev>:
 800b8e8:	b510      	push	{r4, lr}
 800b8ea:	2124      	movs	r1, #36	@ 0x24
 800b8ec:	4604      	mov	r4, r0
 800b8ee:	f016 f8a2 	bl	8021a36 <_ZdlPvj>
 800b8f2:	4620      	mov	r0, r4
 800b8f4:	bd10      	pop	{r4, pc}
	...

0800b8f8 <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE>:
 800b8f8:	4b06      	ldr	r3, [pc, #24]	@ (800b914 <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE+0x1c>)
 800b8fa:	60c1      	str	r1, [r0, #12]
 800b8fc:	094a      	lsrs	r2, r1, #5
 800b8fe:	ea03 2311 	and.w	r3, r3, r1, lsr #8
 800b902:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 800b906:	4313      	orrs	r3, r2
 800b908:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 800b90c:	4319      	orrs	r1, r3
 800b90e:	8201      	strh	r1, [r0, #16]
 800b910:	4770      	bx	lr
 800b912:	bf00      	nop
 800b914:	fffff800 	.word	0xfffff800

0800b918 <_ZThn8_N8touchgfx13PainterRGB5658setColorENS_9colortypeE>:
 800b918:	f1a0 0008 	sub.w	r0, r0, #8
 800b91c:	e7ec      	b.n	800b8f8 <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE>
 800b91e:	bf00      	nop

0800b920 <_ZNK8touchgfx13PainterRGB56518getRenderingMethodEv>:
 800b920:	b508      	push	{r3, lr}
 800b922:	4b05      	ldr	r3, [pc, #20]	@ (800b938 <_ZNK8touchgfx13PainterRGB56518getRenderingMethodEv+0x18>)
 800b924:	6818      	ldr	r0, [r3, #0]
 800b926:	6803      	ldr	r3, [r0, #0]
 800b928:	f8d3 30ac 	ldr.w	r3, [r3, #172]	@ 0xac
 800b92c:	4798      	blx	r3
 800b92e:	1e43      	subs	r3, r0, #1
 800b930:	4258      	negs	r0, r3
 800b932:	4158      	adcs	r0, r3
 800b934:	bd08      	pop	{r3, pc}
 800b936:	bf00      	nop
 800b938:	20013f2c 	.word	0x20013f2c

0800b93c <_ZN8touchgfx13PainterRGB565D1Ev>:
 800b93c:	4770      	bx	lr

0800b93e <_ZThn8_N8touchgfx13PainterRGB565D1Ev>:
 800b93e:	3808      	subs	r0, #8
 800b940:	4770      	bx	lr

0800b942 <_ZNK8touchgfx13PainterRGB5655paintEPhssssh>:
 800b942:	b430      	push	{r4, r5}
 800b944:	eb01 0442 	add.w	r4, r1, r2, lsl #1
 800b948:	f9bd 500c 	ldrsh.w	r5, [sp, #12]
 800b94c:	8a02      	ldrh	r2, [r0, #16]
 800b94e:	9202      	str	r2, [sp, #8]
 800b950:	f89d 3010 	ldrb.w	r3, [sp, #16]
 800b954:	68c2      	ldr	r2, [r0, #12]
 800b956:	4629      	mov	r1, r5
 800b958:	4620      	mov	r0, r4
 800b95a:	bc30      	pop	{r4, r5}
 800b95c:	f7f5 bafa 	b.w	8000f54 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm>

0800b960 <_ZNK8touchgfx13PainterRGB5658tearDownEv>:
 800b960:	f7f5 baec 	b.w	8000f3c <_ZN8touchgfx5paint8tearDownEv>

0800b964 <_ZN8touchgfx13PainterRGB565D0Ev>:
 800b964:	b510      	push	{r4, lr}
 800b966:	2114      	movs	r1, #20
 800b968:	4604      	mov	r4, r0
 800b96a:	f016 f864 	bl	8021a36 <_ZdlPvj>
 800b96e:	4620      	mov	r0, r4
 800b970:	bd10      	pop	{r4, pc}

0800b972 <_ZThn8_N8touchgfx13PainterRGB565D0Ev>:
 800b972:	f1a0 0008 	sub.w	r0, r0, #8
 800b976:	e7f5      	b.n	800b964 <_ZN8touchgfx13PainterRGB565D0Ev>

0800b978 <_ZN8touchgfx17CWRVectorRenderer8tearDownEv>:
 800b978:	2300      	movs	r3, #0
 800b97a:	84c3      	strh	r3, [r0, #38]	@ 0x26
 800b97c:	8503      	strh	r3, [r0, #40]	@ 0x28
 800b97e:	8543      	strh	r3, [r0, #42]	@ 0x2a
 800b980:	8583      	strh	r3, [r0, #44]	@ 0x2c
 800b982:	6980      	ldr	r0, [r0, #24]
 800b984:	b110      	cbz	r0, 800b98c <_ZN8touchgfx17CWRVectorRenderer8tearDownEv+0x14>
 800b986:	6803      	ldr	r3, [r0, #0]
 800b988:	691b      	ldr	r3, [r3, #16]
 800b98a:	4718      	bx	r3
 800b98c:	4770      	bx	lr

0800b98e <_ZN8touchgfx17CWRVectorRenderer14setStrokeWidthEf>:
 800b98e:	ed80 0a0c 	vstr	s0, [r0, #48]	@ 0x30
 800b992:	4770      	bx	lr

0800b994 <_ZN8touchgfx17CWRVectorRenderer8setColorENS_9colortypeE>:
 800b994:	b538      	push	{r3, r4, r5, lr}
 800b996:	0e0b      	lsrs	r3, r1, #24
 800b998:	7783      	strb	r3, [r0, #30]
 800b99a:	6803      	ldr	r3, [r0, #0]
 800b99c:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 800b99e:	4604      	mov	r4, r0
 800b9a0:	460d      	mov	r5, r1
 800b9a2:	4798      	blx	r3
 800b9a4:	6803      	ldr	r3, [r0, #0]
 800b9a6:	4629      	mov	r1, r5
 800b9a8:	689b      	ldr	r3, [r3, #8]
 800b9aa:	4798      	blx	r3
 800b9ac:	6823      	ldr	r3, [r4, #0]
 800b9ae:	4620      	mov	r0, r4
 800b9b0:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800b9b2:	4798      	blx	r3
 800b9b4:	61a0      	str	r0, [r4, #24]
 800b9b6:	bd38      	pop	{r3, r4, r5, pc}

0800b9b8 <_ZN8touchgfx17CWRVectorRenderer8setAlphaEh>:
 800b9b8:	7741      	strb	r1, [r0, #29]
 800b9ba:	4770      	bx	lr

0800b9bc <_ZN8touchgfx17CWRVectorRenderer23setTransformationMatrixERKNS_9Matrix3x3E>:
 800b9bc:	b530      	push	{r4, r5, lr}
 800b9be:	460d      	mov	r5, r1
 800b9c0:	f100 0434 	add.w	r4, r0, #52	@ 0x34
 800b9c4:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800b9c6:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800b9c8:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800b9ca:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800b9cc:	682b      	ldr	r3, [r5, #0]
 800b9ce:	6023      	str	r3, [r4, #0]
 800b9d0:	bd30      	pop	{r4, r5, pc}

0800b9d2 <_ZN8touchgfx17CWRVectorRenderer5setupERKNS_4RectES3_>:
 800b9d2:	b538      	push	{r3, r4, r5, lr}
 800b9d4:	4604      	mov	r4, r0
 800b9d6:	1d03      	adds	r3, r0, #4
 800b9d8:	6808      	ldr	r0, [r1, #0]
 800b9da:	6849      	ldr	r1, [r1, #4]
 800b9dc:	c303      	stmia	r3!, {r0, r1}
 800b9de:	6813      	ldr	r3, [r2, #0]
 800b9e0:	f8c4 3026 	str.w	r3, [r4, #38]	@ 0x26
 800b9e4:	6853      	ldr	r3, [r2, #4]
 800b9e6:	f8c4 302a 	str.w	r3, [r4, #42]	@ 0x2a
 800b9ea:	2500      	movs	r5, #0
 800b9ec:	61a5      	str	r5, [r4, #24]
 800b9ee:	f104 0034 	add.w	r0, r4, #52	@ 0x34
 800b9f2:	f005 facb 	bl	8010f8c <_ZN8touchgfx9Matrix3x35resetEv>
 800b9f6:	23ff      	movs	r3, #255	@ 0xff
 800b9f8:	7763      	strb	r3, [r4, #29]
 800b9fa:	77a3      	strb	r3, [r4, #30]
 800b9fc:	f04f 537e 	mov.w	r3, #1065353216	@ 0x3f800000
 800ba00:	6323      	str	r3, [r4, #48]	@ 0x30
 800ba02:	2301      	movs	r3, #1
 800ba04:	f884 3024 	strb.w	r3, [r4, #36]	@ 0x24
 800ba08:	f884 5025 	strb.w	r5, [r4, #37]	@ 0x25
 800ba0c:	bd38      	pop	{r3, r4, r5, pc}
	...

0800ba10 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_>:
 800ba10:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800ba14:	ed2d 8b0a 	vpush	{d8-d12}
 800ba18:	ee70 7a41 	vsub.f32	s15, s0, s2
 800ba1c:	b087      	sub	sp, #28
 800ba1e:	eef5 7a40 	vcmp.f32	s15, #0.0
 800ba22:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800ba26:	4605      	mov	r5, r0
 800ba28:	eef0 9a40 	vmov.f32	s19, s0
 800ba2c:	eeb0 aa60 	vmov.f32	s20, s1
 800ba30:	eeb0 9a41 	vmov.f32	s18, s2
 800ba34:	eef0 8a61 	vmov.f32	s17, s3
 800ba38:	eeb0 ca42 	vmov.f32	s24, s4
 800ba3c:	eef0 ca62 	vmov.f32	s25, s5
 800ba40:	f89d 6060 	ldrb.w	r6, [sp, #96]	@ 0x60
 800ba44:	9f19      	ldr	r7, [sp, #100]	@ 0x64
 800ba46:	6802      	ldr	r2, [r0, #0]
 800ba48:	d112      	bne.n	800ba70 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x60>
 800ba4a:	ee70 7ae1 	vsub.f32	s15, s1, s3
 800ba4e:	eef5 7a40 	vcmp.f32	s15, #0.0
 800ba52:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800ba56:	d10b      	bne.n	800ba70 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x60>
 800ba58:	f101 4180 	add.w	r1, r1, #1073741824	@ 0x40000000
 800ba5c:	3901      	subs	r1, #1
 800ba5e:	6a92      	ldr	r2, [r2, #40]	@ 0x28
 800ba60:	f853 1021 	ldr.w	r1, [r3, r1, lsl #2]
 800ba64:	b007      	add	sp, #28
 800ba66:	ecbd 8b0a 	vpop	{d8-d12}
 800ba6a:	e8bd 43f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800ba6e:	4710      	bx	r2
 800ba70:	23ff      	movs	r3, #255	@ 0xff
 800ba72:	77ab      	strb	r3, [r5, #30]
 800ba74:	6b93      	ldr	r3, [r2, #56]	@ 0x38
 800ba76:	f8df 92c4 	ldr.w	r9, [pc, #708]	@ 800bd3c <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x32c>
 800ba7a:	4628      	mov	r0, r5
 800ba7c:	4798      	blx	r3
 800ba7e:	f105 0834 	add.w	r8, r5, #52	@ 0x34
 800ba82:	f9b5 3008 	ldrsh.w	r3, [r5, #8]
 800ba86:	80c3      	strh	r3, [r0, #6]
 800ba88:	eef0 0a4a 	vmov.f32	s1, s20
 800ba8c:	eeb0 0a69 	vmov.f32	s0, s19
 800ba90:	4604      	mov	r4, r0
 800ba92:	4640      	mov	r0, r8
 800ba94:	f005 fb29 	bl	80110ea <_ZNK8touchgfx9Matrix3x315affineTransformEff>
 800ba98:	4640      	mov	r0, r8
 800ba9a:	eeb0 ba40 	vmov.f32	s22, s0
 800ba9e:	eef0 ba60 	vmov.f32	s23, s1
 800baa2:	ed8d 0a00 	vstr	s0, [sp]
 800baa6:	edcd 0a01 	vstr	s1, [sp, #4]
 800baaa:	eeb0 0a49 	vmov.f32	s0, s18
 800baae:	eef0 0a68 	vmov.f32	s1, s17
 800bab2:	f005 fb1a 	bl	80110ea <_ZNK8touchgfx9Matrix3x315affineTransformEff>
 800bab6:	eeb4 ba40 	vcmp.f32	s22, s0
 800baba:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800babe:	eef4 ba60 	vcmp.f32	s23, s1
 800bac2:	bf0c      	ite	eq
 800bac4:	2301      	moveq	r3, #1
 800bac6:	2300      	movne	r3, #0
 800bac8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800bacc:	eeb4 ba40 	vcmp.f32	s22, s0
 800bad0:	7463      	strb	r3, [r4, #17]
 800bad2:	bf0c      	ite	eq
 800bad4:	2301      	moveq	r3, #1
 800bad6:	2300      	movne	r3, #0
 800bad8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800badc:	eeb0 8a40 	vmov.f32	s16, s0
 800bae0:	eef0 aa60 	vmov.f32	s21, s1
 800bae4:	ed8d 0a02 	vstr	s0, [sp, #8]
 800bae8:	edcd 0a03 	vstr	s1, [sp, #12]
 800baec:	74a3      	strb	r3, [r4, #18]
 800baee:	d030      	beq.n	800bb52 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x142>
 800baf0:	eef4 ba60 	vcmp.f32	s23, s1
 800baf4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800baf8:	d02b      	beq.n	800bb52 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x142>
 800bafa:	ee39 9a69 	vsub.f32	s18, s18, s19
 800bafe:	ee78 8aca 	vsub.f32	s17, s17, s20
 800bb02:	ee89 7a0c 	vdiv.f32	s14, s18, s24
 800bb06:	4640      	mov	r0, r8
 800bb08:	eec8 7aac 	vdiv.f32	s15, s17, s25
 800bb0c:	eef0 0a4a 	vmov.f32	s1, s20
 800bb10:	eeb0 0a69 	vmov.f32	s0, s19
 800bb14:	eea7 0acc 	vfms.f32	s0, s15, s24
 800bb18:	eeec 0a87 	vfma.f32	s1, s25, s14
 800bb1c:	f005 fae5 	bl	80110ea <_ZNK8touchgfx9Matrix3x315affineTransformEff>
 800bb20:	f899 3000 	ldrb.w	r3, [r9]
 800bb24:	edcd 0a05 	vstr	s1, [sp, #20]
 800bb28:	ee70 0aeb 	vsub.f32	s1, s1, s23
 800bb2c:	2b01      	cmp	r3, #1
 800bb2e:	ed8d 0a04 	vstr	s0, [sp, #16]
 800bb32:	ee30 0a4b 	vsub.f32	s0, s0, s22
 800bb36:	bf02      	ittt	eq
 800bb38:	eef1 7a60 	vnegeq.f32	s15, s1
 800bb3c:	eef0 0a40 	vmoveq.f32	s1, s0
 800bb40:	eeb0 0a67 	vmoveq.f32	s0, s15
 800bb44:	eeb5 0a40 	vcmp.f32	s0, #0.0
 800bb48:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800bb4c:	d134      	bne.n	800bbb8 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x1a8>
 800bb4e:	2301      	movs	r3, #1
 800bb50:	74a3      	strb	r3, [r4, #18]
 800bb52:	f899 2000 	ldrb.w	r2, [r9]
 800bb56:	7c63      	ldrb	r3, [r4, #17]
 800bb58:	2a01      	cmp	r2, #1
 800bb5a:	f040 80a3 	bne.w	800bca4 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x294>
 800bb5e:	2b00      	cmp	r3, #0
 800bb60:	d072      	beq.n	800bc48 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x238>
 800bb62:	ee3a 7aeb 	vsub.f32	s14, s21, s23
 800bb66:	eddf 6a73 	vldr	s13, [pc, #460]	@ 800bd34 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x324>
 800bb6a:	eec6 7a87 	vdiv.f32	s15, s13, s14
 800bb6e:	eef4 baea 	vcmpe.f32	s23, s21
 800bb72:	edc4 7a08 	vstr	s15, [r4, #32]
 800bb76:	eefd 7aea 	vcvt.s32.f32	s15, s21
 800bb7a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800bb7e:	ee17 3a90 	vmov	r3, s15
 800bb82:	eefd 7aeb 	vcvt.s32.f32	s15, s23
 800bb86:	b21a      	sxth	r2, r3
 800bb88:	ee17 3a90 	vmov	r3, s15
 800bb8c:	b21b      	sxth	r3, r3
 800bb8e:	bf47      	ittee	mi
 800bb90:	8123      	strhmi	r3, [r4, #8]
 800bb92:	8162      	strhmi	r2, [r4, #10]
 800bb94:	8122      	strhpl	r2, [r4, #8]
 800bb96:	8163      	strhpl	r3, [r4, #10]
 800bb98:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 800bb9c:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
 800bba0:	1a9b      	subs	r3, r3, r2
 800bba2:	ee07 3a90 	vmov	s15, r3
 800bba6:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800bbaa:	2300      	movs	r3, #0
 800bbac:	7463      	strb	r3, [r4, #17]
 800bbae:	edc4 7a07 	vstr	s15, [r4, #28]
 800bbb2:	2301      	movs	r3, #1
 800bbb4:	74a3      	strb	r3, [r4, #18]
 800bbb6:	e03f      	b.n	800bc38 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x228>
 800bbb8:	ee80 7a80 	vdiv.f32	s14, s1, s0
 800bbbc:	eeb5 7a40 	vcmp.f32	s14, #0.0
 800bbc0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800bbc4:	ed84 7a05 	vstr	s14, [r4, #20]
 800bbc8:	d102      	bne.n	800bbd0 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x1c0>
 800bbca:	2301      	movs	r3, #1
 800bbcc:	7463      	strb	r3, [r4, #17]
 800bbce:	e7c0      	b.n	800bb52 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x142>
 800bbd0:	2b01      	cmp	r3, #1
 800bbd2:	bf03      	ittte	eq
 800bbd4:	f9b4 2006 	ldrsheq.w	r2, [r4, #6]
 800bbd8:	ee07 2a90 	vmoveq	s15, r2
 800bbdc:	eef8 7ae7 	vcvteq.f32.s32	s15, s15
 800bbe0:	eef0 7a6b 	vmovne.f32	s15, s23
 800bbe4:	bf0a      	itet	eq
 800bbe6:	ee77 7acb 	vsubeq.f32	s15, s15, s22
 800bbea:	eeeb 7a47 	vfmsne.f32	s15, s22, s14
 800bbee:	eeeb 7ac7 	vfmseq.f32	s15, s23, s14
 800bbf2:	2b01      	cmp	r3, #1
 800bbf4:	ee38 8a4b 	vsub.f32	s16, s16, s22
 800bbf8:	ee7a aaeb 	vsub.f32	s21, s21, s23
 800bbfc:	edc4 7a06 	vstr	s15, [r4, #24]
 800bc00:	bf02      	ittt	eq
 800bc02:	eef1 7a48 	vnegeq.f32	s15, s16
 800bc06:	eeb0 8a6a 	vmoveq.f32	s16, s21
 800bc0a:	eef0 aa67 	vmoveq.f32	s21, s15
 800bc0e:	eeca 7a87 	vdiv.f32	s15, s21, s14
 800bc12:	ed9f 7a49 	vldr	s14, [pc, #292]	@ 800bd38 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x328>
 800bc16:	ee38 8a67 	vsub.f32	s16, s16, s15
 800bc1a:	eec7 7a08 	vdiv.f32	s15, s14, s16
 800bc1e:	eeb5 8ac0 	vcmpe.f32	s16, #0.0
 800bc22:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800bc26:	ed84 8a07 	vstr	s16, [r4, #28]
 800bc2a:	edc4 7a08 	vstr	s15, [r4, #32]
 800bc2e:	d503      	bpl.n	800bc38 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x228>
 800bc30:	eeb1 8a48 	vneg.f32	s16, s16
 800bc34:	ed84 8a07 	vstr	s16, [r4, #28]
 800bc38:	60e7      	str	r7, [r4, #12]
 800bc3a:	7426      	strb	r6, [r4, #16]
 800bc3c:	61ac      	str	r4, [r5, #24]
 800bc3e:	b007      	add	sp, #28
 800bc40:	ecbd 8b0a 	vpop	{d8-d12}
 800bc44:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800bc48:	7ca3      	ldrb	r3, [r4, #18]
 800bc4a:	2b00      	cmp	r3, #0
 800bc4c:	d0f4      	beq.n	800bc38 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x228>
 800bc4e:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 800bc52:	eddf 6a38 	vldr	s13, [pc, #224]	@ 800bd34 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x324>
 800bc56:	ee00 3a10 	vmov	s0, r3
 800bc5a:	eeb8 0ac0 	vcvt.f32.s32	s0, s0
 800bc5e:	ee30 8a48 	vsub.f32	s16, s0, s16
 800bc62:	ee30 0a4b 	vsub.f32	s0, s0, s22
 800bc66:	ee38 7a40 	vsub.f32	s14, s16, s0
 800bc6a:	eeb4 8ac0 	vcmpe.f32	s16, s0
 800bc6e:	eec6 7a87 	vdiv.f32	s15, s13, s14
 800bc72:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800bc76:	edc4 7a08 	vstr	s15, [r4, #32]
 800bc7a:	eefd 7ac8 	vcvt.s32.f32	s15, s16
 800bc7e:	ee17 3a90 	vmov	r3, s15
 800bc82:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 800bc86:	b21a      	sxth	r2, r3
 800bc88:	ee17 3a90 	vmov	r3, s15
 800bc8c:	b21b      	sxth	r3, r3
 800bc8e:	bfcc      	ite	gt
 800bc90:	8123      	strhgt	r3, [r4, #8]
 800bc92:	8163      	strhle	r3, [r4, #10]
 800bc94:	f04f 0301 	mov.w	r3, #1
 800bc98:	7463      	strb	r3, [r4, #17]
 800bc9a:	bfcc      	ite	gt
 800bc9c:	8162      	strhgt	r2, [r4, #10]
 800bc9e:	8122      	strhle	r2, [r4, #8]
 800bca0:	2300      	movs	r3, #0
 800bca2:	e787      	b.n	800bbb4 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x1a4>
 800bca4:	b1db      	cbz	r3, 800bcde <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x2ce>
 800bca6:	ee3a 7aeb 	vsub.f32	s14, s21, s23
 800bcaa:	eddf 6a22 	vldr	s13, [pc, #136]	@ 800bd34 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x324>
 800bcae:	eec6 7a87 	vdiv.f32	s15, s13, s14
 800bcb2:	eef4 baea 	vcmpe.f32	s23, s21
 800bcb6:	edc4 7a08 	vstr	s15, [r4, #32]
 800bcba:	eefd 7aea 	vcvt.s32.f32	s15, s21
 800bcbe:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800bcc2:	ee17 3a90 	vmov	r3, s15
 800bcc6:	eefd 7aeb 	vcvt.s32.f32	s15, s23
 800bcca:	b21a      	sxth	r2, r3
 800bccc:	ee17 3a90 	vmov	r3, s15
 800bcd0:	b21b      	sxth	r3, r3
 800bcd2:	bf47      	ittee	mi
 800bcd4:	8123      	strhmi	r3, [r4, #8]
 800bcd6:	8162      	strhmi	r2, [r4, #10]
 800bcd8:	8122      	strhpl	r2, [r4, #8]
 800bcda:	8163      	strhpl	r3, [r4, #10]
 800bcdc:	e7ac      	b.n	800bc38 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x228>
 800bcde:	7ca3      	ldrb	r3, [r4, #18]
 800bce0:	2b00      	cmp	r3, #0
 800bce2:	d0a9      	beq.n	800bc38 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x228>
 800bce4:	ee38 7a4b 	vsub.f32	s14, s16, s22
 800bce8:	eddf 6a12 	vldr	s13, [pc, #72]	@ 800bd34 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x324>
 800bcec:	eec6 7a87 	vdiv.f32	s15, s13, s14
 800bcf0:	eeb4 bac8 	vcmpe.f32	s22, s16
 800bcf4:	edc4 7a08 	vstr	s15, [r4, #32]
 800bcf8:	eefd 7ac8 	vcvt.s32.f32	s15, s16
 800bcfc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800bd00:	ee17 3a90 	vmov	r3, s15
 800bd04:	eefd 7acb 	vcvt.s32.f32	s15, s22
 800bd08:	b21a      	sxth	r2, r3
 800bd0a:	ee17 3a90 	vmov	r3, s15
 800bd0e:	b21b      	sxth	r3, r3
 800bd10:	bf47      	ittee	mi
 800bd12:	8123      	strhmi	r3, [r4, #8]
 800bd14:	8162      	strhmi	r2, [r4, #10]
 800bd16:	8122      	strhpl	r2, [r4, #8]
 800bd18:	8163      	strhpl	r3, [r4, #10]
 800bd1a:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 800bd1e:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
 800bd22:	1a9b      	subs	r3, r3, r2
 800bd24:	ee07 3a90 	vmov	s15, r3
 800bd28:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800bd2c:	edc4 7a07 	vstr	s15, [r4, #28]
 800bd30:	e782      	b.n	800bc38 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x228>
 800bd32:	bf00      	nop
 800bd34:	447ffffe 	.word	0x447ffffe
 800bd38:	44800000 	.word	0x44800000
 800bd3c:	20013f22 	.word	0x20013f22

0800bd40 <_ZN8touchgfx6Canvas17quadraticBezierToEffffff>:
 800bd40:	b510      	push	{r4, lr}
 800bd42:	2100      	movs	r1, #0
 800bd44:	ed2d 8b02 	vpush	{d8}
 800bd48:	eef0 8a62 	vmov.f32	s17, s5
 800bd4c:	4604      	mov	r4, r0
 800bd4e:	eeb0 8a42 	vmov.f32	s16, s4
 800bd52:	f015 fbff 	bl	8021554 <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj>
 800bd56:	eef0 7a68 	vmov.f32	s15, s17
 800bd5a:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
 800bd5e:	6823      	ldr	r3, [r4, #0]
 800bd60:	ee17 2a90 	vmov	r2, s15
 800bd64:	eef0 7a48 	vmov.f32	s15, s16
 800bd68:	ecbd 8b02 	vpop	{d8}
 800bd6c:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
 800bd70:	4620      	mov	r0, r4
 800bd72:	689b      	ldr	r3, [r3, #8]
 800bd74:	ee17 1a90 	vmov	r1, s15
 800bd78:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800bd7c:	4718      	bx	r3

0800bd7e <_ZN8touchgfx6Canvas13cubicBezierToEffffffff>:
 800bd7e:	b510      	push	{r4, lr}
 800bd80:	2100      	movs	r1, #0
 800bd82:	ed2d 8b02 	vpush	{d8}
 800bd86:	eef0 8a63 	vmov.f32	s17, s7
 800bd8a:	4604      	mov	r4, r0
 800bd8c:	eeb0 8a43 	vmov.f32	s16, s6
 800bd90:	f015 fca2 	bl	80216d8 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj>
 800bd94:	eef0 7a68 	vmov.f32	s15, s17
 800bd98:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
 800bd9c:	6823      	ldr	r3, [r4, #0]
 800bd9e:	ee17 2a90 	vmov	r2, s15
 800bda2:	eef0 7a48 	vmov.f32	s15, s16
 800bda6:	ecbd 8b02 	vpop	{d8}
 800bdaa:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
 800bdae:	4620      	mov	r0, r4
 800bdb0:	689b      	ldr	r3, [r3, #8]
 800bdb2:	ee17 1a90 	vmov	r1, s15
 800bdb6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800bdba:	4718      	bx	r3

0800bdbc <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19moveToWithTransformEff>:
 800bdbc:	b513      	push	{r0, r1, r4, lr}
 800bdbe:	4604      	mov	r4, r0
 800bdc0:	6f40      	ldr	r0, [r0, #116]	@ 0x74
 800bdc2:	f005 f992 	bl	80110ea <_ZNK8touchgfx9Matrix3x315affineTransformEff>
 800bdc6:	eef0 7a60 	vmov.f32	s15, s1
 800bdca:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
 800bdce:	4620      	mov	r0, r4
 800bdd0:	ee17 2a90 	vmov	r2, s15
 800bdd4:	eef0 7a40 	vmov.f32	s15, s0
 800bdd8:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
 800bddc:	ee17 1a90 	vmov	r1, s15
 800bde0:	b002      	add	sp, #8
 800bde2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800bde6:	f015 bb0f 	b.w	8021408 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>

0800bdea <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>:
 800bdea:	b513      	push	{r0, r1, r4, lr}
 800bdec:	4604      	mov	r4, r0
 800bdee:	6f40      	ldr	r0, [r0, #116]	@ 0x74
 800bdf0:	f005 f97b 	bl	80110ea <_ZNK8touchgfx9Matrix3x315affineTransformEff>
 800bdf4:	eef0 7a60 	vmov.f32	s15, s1
 800bdf8:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
 800bdfc:	4620      	mov	r0, r4
 800bdfe:	ee17 2a90 	vmov	r2, s15
 800be02:	eef0 7a40 	vmov.f32	s15, s0
 800be06:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
 800be0a:	ee17 1a90 	vmov	r1, s15
 800be0e:	b002      	add	sp, #8
 800be10:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800be14:	f015 bb45 	b.w	80214a2 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>

0800be18 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf>:
 800be18:	b5f0      	push	{r4, r5, r6, r7, lr}
 800be1a:	e9dd 0c05 	ldrd	r0, ip, [sp, #20]
 800be1e:	2400      	movs	r4, #0
 800be20:	9f07      	ldr	r7, [sp, #28]
 800be22:	4463      	add	r3, ip
 800be24:	4626      	mov	r6, r4
 800be26:	f04f 0e01 	mov.w	lr, #1
 800be2a:	4563      	cmp	r3, ip
 800be2c:	d02d      	beq.n	800be8a <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x72>
 800be2e:	f813 5d01 	ldrb.w	r5, [r3, #-1]!
 800be32:	2d06      	cmp	r5, #6
 800be34:	d8f9      	bhi.n	800be2a <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x12>
 800be36:	fa0e f505 	lsl.w	r5, lr, r5
 800be3a:	f015 0f66 	tst.w	r5, #102	@ 0x66
 800be3e:	d10d      	bne.n	800be5c <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x44>
 800be40:	f015 0f10 	tst.w	r5, #16
 800be44:	d117      	bne.n	800be76 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x5e>
 800be46:	072d      	lsls	r5, r5, #28
 800be48:	d5ef      	bpl.n	800be2a <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x12>
 800be4a:	3801      	subs	r0, #1
 800be4c:	b91e      	cbnz	r6, 800be56 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x3e>
 800be4e:	eb07 0580 	add.w	r5, r7, r0, lsl #2
 800be52:	682d      	ldr	r5, [r5, #0]
 800be54:	600d      	str	r5, [r1, #0]
 800be56:	b96c      	cbnz	r4, 800be74 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x5c>
 800be58:	2601      	movs	r6, #1
 800be5a:	e7e6      	b.n	800be2a <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x12>
 800be5c:	b926      	cbnz	r6, 800be68 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x50>
 800be5e:	eb07 0380 	add.w	r3, r7, r0, lsl #2
 800be62:	f853 3c08 	ldr.w	r3, [r3, #-8]
 800be66:	600b      	str	r3, [r1, #0]
 800be68:	b924      	cbnz	r4, 800be74 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x5c>
 800be6a:	eb07 0080 	add.w	r0, r7, r0, lsl #2
 800be6e:	f850 3c04 	ldr.w	r3, [r0, #-4]
 800be72:	6013      	str	r3, [r2, #0]
 800be74:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800be76:	3801      	subs	r0, #1
 800be78:	b91c      	cbnz	r4, 800be82 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x6a>
 800be7a:	eb07 0480 	add.w	r4, r7, r0, lsl #2
 800be7e:	6824      	ldr	r4, [r4, #0]
 800be80:	6014      	str	r4, [r2, #0]
 800be82:	2e00      	cmp	r6, #0
 800be84:	d1f6      	bne.n	800be74 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x5c>
 800be86:	2401      	movs	r4, #1
 800be88:	e7cf      	b.n	800be2a <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x12>
 800be8a:	b90e      	cbnz	r6, 800be90 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x78>
 800be8c:	2300      	movs	r3, #0
 800be8e:	600b      	str	r3, [r1, #0]
 800be90:	2c00      	cmp	r4, #0
 800be92:	d1ef      	bne.n	800be74 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x5c>
 800be94:	2300      	movs	r3, #0
 800be96:	e7ec      	b.n	800be72 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x5a>

0800be98 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawLineJoinRoundEffffffi>:
 800be98:	b538      	push	{r3, r4, r5, lr}
 800be9a:	4604      	mov	r4, r0
 800be9c:	ed2d 8b0a 	vpush	{d8-d12}
 800bea0:	460d      	mov	r5, r1
 800bea2:	eef0 ba40 	vmov.f32	s23, s0
 800bea6:	eeb0 ca60 	vmov.f32	s24, s1
 800beaa:	eef0 aa41 	vmov.f32	s21, s2
 800beae:	eeb0 ba61 	vmov.f32	s22, s3
 800beb2:	eeb0 9a42 	vmov.f32	s18, s4
 800beb6:	eef0 9a62 	vmov.f32	s19, s5
 800beba:	eeb6 aa00 	vmov.f32	s20, #96	@ 0x3f000000  0.5
 800bebe:	ee7b 8a29 	vadd.f32	s17, s22, s19
 800bec2:	ee3a 8a89 	vadd.f32	s16, s21, s18
 800bec6:	ee68 8a8a 	vmul.f32	s17, s17, s20
 800beca:	ee28 8a0a 	vmul.f32	s16, s16, s20
 800bece:	ee3c 0a68 	vsub.f32	s0, s24, s17
 800bed2:	ee7b 7ac8 	vsub.f32	s15, s23, s16
 800bed6:	ee20 0a00 	vmul.f32	s0, s0, s0
 800beda:	eea7 0aa7 	vfma.f32	s0, s15, s15
 800bede:	f015 fdd5 	bl	8021a8c <sqrtf>
 800bee2:	eeb5 0a40 	vcmp.f32	s0, #0.0
 800bee6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800beea:	d12e      	bne.n	800bf4a <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawLineJoinRoundEffffffi+0xb2>
 800beec:	ee79 7a6a 	vsub.f32	s15, s18, s21
 800bef0:	ee39 7acb 	vsub.f32	s14, s19, s22
 800bef4:	eeb0 8a6a 	vmov.f32	s16, s21
 800bef8:	eef0 8a4b 	vmov.f32	s17, s22
 800befc:	eea7 8a8a 	vfma.f32	s16, s15, s20
 800bf00:	eee7 8a0a 	vfma.f32	s17, s14, s20
 800bf04:	eea7 8a0a 	vfma.f32	s16, s14, s20
 800bf08:	eee7 8aca 	vfms.f32	s17, s15, s20
 800bf0c:	2d02      	cmp	r5, #2
 800bf0e:	dc2f      	bgt.n	800bf70 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawLineJoinRoundEffffffi+0xd8>
 800bf10:	3501      	adds	r5, #1
 800bf12:	eef0 1a4b 	vmov.f32	s3, s22
 800bf16:	eeb0 1a6a 	vmov.f32	s2, s21
 800bf1a:	4629      	mov	r1, r5
 800bf1c:	eef0 2a68 	vmov.f32	s5, s17
 800bf20:	eeb0 2a48 	vmov.f32	s4, s16
 800bf24:	eef0 0a4c 	vmov.f32	s1, s24
 800bf28:	eeb0 0a6b 	vmov.f32	s0, s23
 800bf2c:	4620      	mov	r0, r4
 800bf2e:	f7ff ffb3 	bl	800be98 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawLineJoinRoundEffffffi>
 800bf32:	eef0 0a68 	vmov.f32	s1, s17
 800bf36:	eeb0 0a48 	vmov.f32	s0, s16
 800bf3a:	4620      	mov	r0, r4
 800bf3c:	f7ff ff55 	bl	800bdea <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
 800bf40:	eeb0 ba68 	vmov.f32	s22, s17
 800bf44:	eef0 aa48 	vmov.f32	s21, s16
 800bf48:	e7b9      	b.n	800bebe <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawLineJoinRoundEffffffi+0x26>
 800bf4a:	edd4 7a1f 	vldr	s15, [r4, #124]	@ 0x7c
 800bf4e:	ee38 8a6b 	vsub.f32	s16, s16, s23
 800bf52:	ee78 8acc 	vsub.f32	s17, s17, s24
 800bf56:	ee28 7a27 	vmul.f32	s14, s16, s15
 800bf5a:	ee68 7aa7 	vmul.f32	s15, s17, s15
 800bf5e:	ee87 8a00 	vdiv.f32	s16, s14, s0
 800bf62:	eec7 8a80 	vdiv.f32	s17, s15, s0
 800bf66:	ee3b 8a88 	vadd.f32	s16, s23, s16
 800bf6a:	ee7c 8a28 	vadd.f32	s17, s24, s17
 800bf6e:	e7cd      	b.n	800bf0c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawLineJoinRoundEffffffi+0x74>
 800bf70:	eef0 0a68 	vmov.f32	s1, s17
 800bf74:	eeb0 0a48 	vmov.f32	s0, s16
 800bf78:	4620      	mov	r0, r4
 800bf7a:	f7ff ff36 	bl	800bdea <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
 800bf7e:	ecbd 8b0a 	vpop	{d8-d12}
 800bf82:	bd38      	pop	{r3, r4, r5, pc}

0800bf84 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas18strokeDrawLineJoinEffffffffff>:
 800bf84:	b510      	push	{r4, lr}
 800bf86:	ed2d 8b0a 	vpush	{d8-d12}
 800bf8a:	f890 3084 	ldrb.w	r3, [r0, #132]	@ 0x84
 800bf8e:	2b02      	cmp	r3, #2
 800bf90:	4604      	mov	r4, r0
 800bf92:	eeb0 ca40 	vmov.f32	s24, s0
 800bf96:	eeb0 9a60 	vmov.f32	s18, s1
 800bf9a:	eef0 9a41 	vmov.f32	s19, s2
 800bf9e:	eef0 8a61 	vmov.f32	s17, s3
 800bfa2:	eeb0 ba42 	vmov.f32	s22, s4
 800bfa6:	eef0 ba62 	vmov.f32	s23, s5
 800bfaa:	eeb0 aa43 	vmov.f32	s20, s6
 800bfae:	eef0 aa63 	vmov.f32	s21, s7
 800bfb2:	eeb0 8a44 	vmov.f32	s16, s8
 800bfb6:	eef0 ca64 	vmov.f32	s25, s9
 800bfba:	d12c      	bne.n	800c016 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas18strokeDrawLineJoinEffffffffff+0x92>
 800bfbc:	eef0 0a62 	vmov.f32	s1, s5
 800bfc0:	eeb0 0a42 	vmov.f32	s0, s4
 800bfc4:	f7ff ff11 	bl	800bdea <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
 800bfc8:	ee79 9acb 	vsub.f32	s19, s19, s22
 800bfcc:	ee7a caec 	vsub.f32	s25, s21, s25
 800bfd0:	ee78 8aeb 	vsub.f32	s17, s17, s23
 800bfd4:	ee3a 8a48 	vsub.f32	s16, s20, s16
 800bfd8:	ee69 9aac 	vmul.f32	s19, s19, s25
 800bfdc:	ee28 8a88 	vmul.f32	s16, s17, s16
 800bfe0:	eef4 9ac8 	vcmpe.f32	s19, s16
 800bfe4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800bfe8:	db0f      	blt.n	800c00a <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas18strokeDrawLineJoinEffffffffff+0x86>
 800bfea:	2101      	movs	r1, #1
 800bfec:	eef0 2a6a 	vmov.f32	s5, s21
 800bff0:	eeb0 2a4a 	vmov.f32	s4, s20
 800bff4:	eef0 1a6b 	vmov.f32	s3, s23
 800bff8:	eeb0 1a4b 	vmov.f32	s2, s22
 800bffc:	eef0 0a49 	vmov.f32	s1, s18
 800c000:	eeb0 0a4c 	vmov.f32	s0, s24
 800c004:	4620      	mov	r0, r4
 800c006:	f7ff ff47 	bl	800be98 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawLineJoinRoundEffffffi>
 800c00a:	eef0 0a6a 	vmov.f32	s1, s21
 800c00e:	eeb0 0a4a 	vmov.f32	s0, s20
 800c012:	4620      	mov	r0, r4
 800c014:	e035      	b.n	800c082 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas18strokeDrawLineJoinEffffffffff+0xfe>
 800c016:	2b01      	cmp	r3, #1
 800c018:	d138      	bne.n	800c08c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas18strokeDrawLineJoinEffffffffff+0x108>
 800c01a:	ee31 4ae2 	vsub.f32	s8, s3, s5
 800c01e:	ee33 6a48 	vsub.f32	s12, s6, s16
 800c022:	ee71 7a42 	vsub.f32	s15, s2, s4
 800c026:	ee73 6ae4 	vsub.f32	s13, s7, s9
 800c02a:	ee26 7a44 	vnmul.f32	s14, s12, s8
 800c02e:	eea7 7aa6 	vfma.f32	s14, s15, s13
 800c032:	eeb5 7a40 	vcmp.f32	s14, #0.0
 800c036:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800c03a:	d027      	beq.n	800c08c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas18strokeDrawLineJoinEffffffffff+0x108>
 800c03c:	ee28 8a63 	vnmul.f32	s16, s16, s7
 800c040:	ee61 8ac2 	vnmul.f32	s17, s3, s4
 800c044:	eea4 8a83 	vfma.f32	s16, s9, s6
 800c048:	eee1 8a22 	vfma.f32	s17, s2, s5
 800c04c:	ee68 7a67 	vnmul.f32	s15, s16, s15
 800c050:	ee28 8a44 	vnmul.f32	s16, s16, s8
 800c054:	eee6 7a28 	vfma.f32	s15, s12, s17
 800c058:	eea6 8aa8 	vfma.f32	s16, s13, s17
 800c05c:	ee87 0a87 	vdiv.f32	s0, s15, s14
 800c060:	eec8 0a07 	vdiv.f32	s1, s16, s14
 800c064:	ee3c ca40 	vsub.f32	s24, s24, s0
 800c068:	ee39 9a60 	vsub.f32	s18, s18, s1
 800c06c:	edd0 7a20 	vldr	s15, [r0, #128]	@ 0x80
 800c070:	ee29 9a09 	vmul.f32	s18, s18, s18
 800c074:	eeac 9a0c 	vfma.f32	s18, s24, s24
 800c078:	eef4 7ac9 	vcmpe.f32	s15, s18
 800c07c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800c080:	db04      	blt.n	800c08c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas18strokeDrawLineJoinEffffffffff+0x108>
 800c082:	f7ff feb2 	bl	800bdea <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
 800c086:	ecbd 8b0a 	vpop	{d8-d12}
 800c08a:	bd10      	pop	{r4, pc}
 800c08c:	eef0 0a6b 	vmov.f32	s1, s23
 800c090:	eeb0 0a4b 	vmov.f32	s0, s22
 800c094:	4620      	mov	r0, r4
 800c096:	f7ff fea8 	bl	800bdea <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
 800c09a:	e7b6      	b.n	800c00a <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas18strokeDrawLineJoinEffffffffff+0x86>

0800c09c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff>:
 800c09c:	b510      	push	{r4, lr}
 800c09e:	ed2d 8b0c 	vpush	{d8-d13}
 800c0a2:	f890 3085 	ldrb.w	r3, [r0, #133]	@ 0x85
 800c0a6:	4604      	mov	r4, r0
 800c0a8:	eeb0 9a40 	vmov.f32	s18, s0
 800c0ac:	eef0 9a60 	vmov.f32	s19, s1
 800c0b0:	eef0 aa41 	vmov.f32	s21, s2
 800c0b4:	eeb0 ba61 	vmov.f32	s22, s3
 800c0b8:	b933      	cbnz	r3, 800c0c8 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x2c>
 800c0ba:	f7ff fe96 	bl	800bdea <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
 800c0be:	eef0 0a4b 	vmov.f32	s1, s22
 800c0c2:	eeb0 0a6a 	vmov.f32	s0, s21
 800c0c6:	e015      	b.n	800c0f4 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x58>
 800c0c8:	ee71 8a40 	vsub.f32	s17, s2, s0
 800c0cc:	ee31 8ae0 	vsub.f32	s16, s3, s1
 800c0d0:	eef6 7a00 	vmov.f32	s15, #96	@ 0x3f000000  0.5
 800c0d4:	2b02      	cmp	r3, #2
 800c0d6:	ee68 8aa7 	vmul.f32	s17, s17, s15
 800c0da:	ee28 8a27 	vmul.f32	s16, s16, s15
 800c0de:	d10f      	bne.n	800c100 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x64>
 800c0e0:	ee70 0ae8 	vsub.f32	s1, s1, s17
 800c0e4:	ee30 0a08 	vadd.f32	s0, s0, s16
 800c0e8:	f7ff fe7f 	bl	800bdea <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
 800c0ec:	ee7b 0a68 	vsub.f32	s1, s22, s17
 800c0f0:	ee3a 0a88 	vadd.f32	s0, s21, s16
 800c0f4:	4620      	mov	r0, r4
 800c0f6:	f7ff fe78 	bl	800bdea <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
 800c0fa:	ecbd 8b0c 	vpop	{d8-d13}
 800c0fe:	bd10      	pop	{r4, pc}
 800c100:	f7ff fe73 	bl	800bdea <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
 800c104:	eddf 7a4d 	vldr	s15, [pc, #308]	@ 800c23c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1a0>
 800c108:	eddf ba4d 	vldr	s23, [pc, #308]	@ 800c240 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1a4>
 800c10c:	ed9f ca4d 	vldr	s24, [pc, #308]	@ 800c244 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1a8>
 800c110:	eddf ca4d 	vldr	s25, [pc, #308]	@ 800c248 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1ac>
 800c114:	ed9f da4d 	vldr	s26, [pc, #308]	@ 800c24c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1b0>
 800c118:	eef0 0a69 	vmov.f32	s1, s19
 800c11c:	eeb0 0a49 	vmov.f32	s0, s18
 800c120:	eee8 0a27 	vfma.f32	s1, s16, s15
 800c124:	4620      	mov	r0, r4
 800c126:	eea8 0aa7 	vfma.f32	s0, s17, s15
 800c12a:	eeb1 aa68 	vneg.f32	s20, s17
 800c12e:	eeea 0a2b 	vfma.f32	s1, s20, s23
 800c132:	eea8 0a2b 	vfma.f32	s0, s16, s23
 800c136:	f7ff fe58 	bl	800bdea <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
 800c13a:	eddf 7a45 	vldr	s15, [pc, #276]	@ 800c250 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1b4>
 800c13e:	eef0 0a69 	vmov.f32	s1, s19
 800c142:	eeb0 0a49 	vmov.f32	s0, s18
 800c146:	eee8 0a27 	vfma.f32	s1, s16, s15
 800c14a:	4620      	mov	r0, r4
 800c14c:	eea8 0aa7 	vfma.f32	s0, s17, s15
 800c150:	eeea 0a0c 	vfma.f32	s1, s20, s24
 800c154:	eea8 0a0c 	vfma.f32	s0, s16, s24
 800c158:	f7ff fe47 	bl	800bdea <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
 800c15c:	eddf 7a3d 	vldr	s15, [pc, #244]	@ 800c254 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1b8>
 800c160:	eef0 0a69 	vmov.f32	s1, s19
 800c164:	eeb0 0a49 	vmov.f32	s0, s18
 800c168:	eee8 0a27 	vfma.f32	s1, s16, s15
 800c16c:	4620      	mov	r0, r4
 800c16e:	eea8 0aa7 	vfma.f32	s0, s17, s15
 800c172:	eeea 0a2c 	vfma.f32	s1, s20, s25
 800c176:	eea8 0a2c 	vfma.f32	s0, s16, s25
 800c17a:	f7ff fe36 	bl	800bdea <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
 800c17e:	eddf 7a36 	vldr	s15, [pc, #216]	@ 800c258 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1bc>
 800c182:	eef0 0a69 	vmov.f32	s1, s19
 800c186:	eeb0 0a49 	vmov.f32	s0, s18
 800c18a:	eee8 0a27 	vfma.f32	s1, s16, s15
 800c18e:	4620      	mov	r0, r4
 800c190:	eea8 0aa7 	vfma.f32	s0, s17, s15
 800c194:	eeea 0a0d 	vfma.f32	s1, s20, s26
 800c198:	eea8 0a0d 	vfma.f32	s0, s16, s26
 800c19c:	f7ff fe25 	bl	800bdea <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
 800c1a0:	ee79 0a88 	vadd.f32	s1, s19, s16
 800c1a4:	ee39 0a28 	vadd.f32	s0, s18, s17
 800c1a8:	ee70 0ae8 	vsub.f32	s1, s1, s17
 800c1ac:	ee30 0a08 	vadd.f32	s0, s0, s16
 800c1b0:	4620      	mov	r0, r4
 800c1b2:	f7ff fe1a 	bl	800bdea <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
 800c1b6:	eddf 7a29 	vldr	s15, [pc, #164]	@ 800c25c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1c0>
 800c1ba:	eef0 0a69 	vmov.f32	s1, s19
 800c1be:	eeb0 0a49 	vmov.f32	s0, s18
 800c1c2:	eee8 0a27 	vfma.f32	s1, s16, s15
 800c1c6:	4620      	mov	r0, r4
 800c1c8:	eea8 0aa7 	vfma.f32	s0, s17, s15
 800c1cc:	eeea 0a0d 	vfma.f32	s1, s20, s26
 800c1d0:	eea8 0a0d 	vfma.f32	s0, s16, s26
 800c1d4:	f7ff fe09 	bl	800bdea <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
 800c1d8:	eddf 7a21 	vldr	s15, [pc, #132]	@ 800c260 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1c4>
 800c1dc:	eef0 0a69 	vmov.f32	s1, s19
 800c1e0:	eeb0 0a49 	vmov.f32	s0, s18
 800c1e4:	eee8 0a27 	vfma.f32	s1, s16, s15
 800c1e8:	4620      	mov	r0, r4
 800c1ea:	eea8 0aa7 	vfma.f32	s0, s17, s15
 800c1ee:	eeea 0a2c 	vfma.f32	s1, s20, s25
 800c1f2:	eea8 0a2c 	vfma.f32	s0, s16, s25
 800c1f6:	f7ff fdf8 	bl	800bdea <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
 800c1fa:	eddf 7a1a 	vldr	s15, [pc, #104]	@ 800c264 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1c8>
 800c1fe:	eef0 0a69 	vmov.f32	s1, s19
 800c202:	eeb0 0a49 	vmov.f32	s0, s18
 800c206:	eee8 0a27 	vfma.f32	s1, s16, s15
 800c20a:	4620      	mov	r0, r4
 800c20c:	eea8 0aa7 	vfma.f32	s0, s17, s15
 800c210:	eeea 0a0c 	vfma.f32	s1, s20, s24
 800c214:	eea8 0a0c 	vfma.f32	s0, s16, s24
 800c218:	f7ff fde7 	bl	800bdea <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
 800c21c:	eddf 7a12 	vldr	s15, [pc, #72]	@ 800c268 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1cc>
 800c220:	eef0 0a69 	vmov.f32	s1, s19
 800c224:	eeb0 0a49 	vmov.f32	s0, s18
 800c228:	eee8 0a27 	vfma.f32	s1, s16, s15
 800c22c:	4620      	mov	r0, r4
 800c22e:	eea8 0aa7 	vfma.f32	s0, s17, s15
 800c232:	eeea 0a2b 	vfma.f32	s1, s20, s23
 800c236:	eea8 0a2b 	vfma.f32	s0, s16, s23
 800c23a:	e73e      	b.n	800c0ba <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1e>
 800c23c:	3d23d70a 	.word	0x3d23d70a
 800c240:	3e8f5c29 	.word	0x3e8f5c29
 800c244:	3f19999a 	.word	0x3f19999a
 800c248:	3f4ccccd 	.word	0x3f4ccccd
 800c24c:	3f75c28f 	.word	0x3f75c28f
 800c250:	3e4ccccd 	.word	0x3e4ccccd
 800c254:	3ecccccd 	.word	0x3ecccccd
 800c258:	3f3851ec 	.word	0x3f3851ec
 800c25c:	3fa3d70a 	.word	0x3fa3d70a
 800c260:	3fcccccd 	.word	0x3fcccccd
 800c264:	3fe66666 	.word	0x3fe66666
 800c268:	3ffae148 	.word	0x3ffae148

0800c26c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff>:
 800c26c:	b570      	push	{r4, r5, r6, lr}
 800c26e:	ed2d 8b06 	vpush	{d8-d10}
 800c272:	ed90 8a23 	vldr	s16, [r0, #140]	@ 0x8c
 800c276:	ed90 9a22 	vldr	s18, [r0, #136]	@ 0x88
 800c27a:	ee30 8ac8 	vsub.f32	s16, s1, s16
 800c27e:	ee30 9a49 	vsub.f32	s18, s0, s18
 800c282:	eef0 aa40 	vmov.f32	s21, s0
 800c286:	ee28 0a08 	vmul.f32	s0, s16, s16
 800c28a:	4604      	mov	r4, r0
 800c28c:	eea9 0a09 	vfma.f32	s0, s18, s18
 800c290:	eeb0 aa60 	vmov.f32	s20, s1
 800c294:	f015 fbfa 	bl	8021a8c <sqrtf>
 800c298:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 800c29c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800c2a0:	dd36      	ble.n	800c310 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff+0xa4>
 800c2a2:	edd4 7a1f 	vldr	s15, [r4, #124]	@ 0x7c
 800c2a6:	edd4 0a23 	vldr	s1, [r4, #140]	@ 0x8c
 800c2aa:	f894 5078 	ldrb.w	r5, [r4, #120]	@ 0x78
 800c2ae:	eec0 6a27 	vdiv.f32	s13, s0, s15
 800c2b2:	2600      	movs	r6, #0
 800c2b4:	f884 6079 	strb.w	r6, [r4, #121]	@ 0x79
 800c2b8:	ed94 0a22 	vldr	s0, [r4, #136]	@ 0x88
 800c2bc:	eec8 8a26 	vdiv.f32	s17, s16, s13
 800c2c0:	ee89 8a26 	vdiv.f32	s16, s18, s13
 800c2c4:	ee70 9a28 	vadd.f32	s19, s0, s17
 800c2c8:	ee30 9ac8 	vsub.f32	s18, s1, s16
 800c2cc:	ee78 8aaa 	vadd.f32	s17, s17, s21
 800c2d0:	ee3a 8a48 	vsub.f32	s16, s20, s16
 800c2d4:	b1fd      	cbz	r5, 800c316 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff+0xaa>
 800c2d6:	edc4 9a24 	vstr	s19, [r4, #144]	@ 0x90
 800c2da:	ed84 9a25 	vstr	s18, [r4, #148]	@ 0x94
 800c2de:	edc4 8a26 	vstr	s17, [r4, #152]	@ 0x98
 800c2e2:	ed84 8a27 	vstr	s16, [r4, #156]	@ 0x9c
 800c2e6:	eef0 0a49 	vmov.f32	s1, s18
 800c2ea:	eeb0 0a69 	vmov.f32	s0, s19
 800c2ee:	4620      	mov	r0, r4
 800c2f0:	f7ff fd64 	bl	800bdbc <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19moveToWithTransformEff>
 800c2f4:	f884 6078 	strb.w	r6, [r4, #120]	@ 0x78
 800c2f8:	edc4 9a28 	vstr	s19, [r4, #160]	@ 0xa0
 800c2fc:	ed84 9a29 	vstr	s18, [r4, #164]	@ 0xa4
 800c300:	edc4 8a2a 	vstr	s17, [r4, #168]	@ 0xa8
 800c304:	ed84 8a2b 	vstr	s16, [r4, #172]	@ 0xac
 800c308:	edc4 aa22 	vstr	s21, [r4, #136]	@ 0x88
 800c30c:	ed84 aa23 	vstr	s20, [r4, #140]	@ 0x8c
 800c310:	ecbd 8b06 	vpop	{d8-d10}
 800c314:	bd70      	pop	{r4, r5, r6, pc}
 800c316:	f894 307a 	ldrb.w	r3, [r4, #122]	@ 0x7a
 800c31a:	ed94 2a2a 	vldr	s4, [r4, #168]	@ 0xa8
 800c31e:	edd4 2a2b 	vldr	s5, [r4, #172]	@ 0xac
 800c322:	b16b      	cbz	r3, 800c340 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff+0xd4>
 800c324:	eef0 1a49 	vmov.f32	s3, s18
 800c328:	eeb0 1a69 	vmov.f32	s2, s19
 800c32c:	eef0 0a62 	vmov.f32	s1, s5
 800c330:	eeb0 0a42 	vmov.f32	s0, s4
 800c334:	4620      	mov	r0, r4
 800c336:	f7ff feb1 	bl	800c09c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff>
 800c33a:	f884 507a 	strb.w	r5, [r4, #122]	@ 0x7a
 800c33e:	e7db      	b.n	800c2f8 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff+0x8c>
 800c340:	eef0 4a48 	vmov.f32	s9, s16
 800c344:	eeb0 4a68 	vmov.f32	s8, s17
 800c348:	eef0 3a49 	vmov.f32	s7, s18
 800c34c:	eeb0 3a69 	vmov.f32	s6, s19
 800c350:	edd4 1a29 	vldr	s3, [r4, #164]	@ 0xa4
 800c354:	ed94 1a28 	vldr	s2, [r4, #160]	@ 0xa0
 800c358:	4620      	mov	r0, r4
 800c35a:	f7ff fe13 	bl	800bf84 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas18strokeDrawLineJoinEffffffffff>
 800c35e:	e7cb      	b.n	800c2f8 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff+0x8c>

0800c360 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas6lineToENS_7CWRUtil2Q5ES3_>:
 800c360:	ee07 2a90 	vmov	s15, r2
 800c364:	ee07 1a10 	vmov	s14, r1
 800c368:	eef8 0ae7 	vcvt.f32.s32	s1, s15
 800c36c:	eeb8 0ac7 	vcvt.f32.s32	s0, s14
 800c370:	eddf 7a03 	vldr	s15, [pc, #12]	@ 800c380 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas6lineToENS_7CWRUtil2Q5ES3_+0x20>
 800c374:	ee60 0aa7 	vmul.f32	s1, s1, s15
 800c378:	ee20 0a27 	vmul.f32	s0, s0, s15
 800c37c:	f7ff bf76 	b.w	800c26c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff>
 800c380:	3d000000 	.word	0x3d000000

0800c384 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawDoubleLineCapEv>:
 800c384:	b538      	push	{r3, r4, r5, lr}
 800c386:	ed2d 8b02 	vpush	{d8}
 800c38a:	f890 5079 	ldrb.w	r5, [r0, #121]	@ 0x79
 800c38e:	4604      	mov	r4, r0
 800c390:	b31d      	cbz	r5, 800c3da <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawDoubleLineCapEv+0x56>
 800c392:	edd0 7a1f 	vldr	s15, [r0, #124]	@ 0x7c
 800c396:	ed90 8a23 	vldr	s16, [r0, #140]	@ 0x8c
 800c39a:	ed90 0a22 	vldr	s0, [r0, #136]	@ 0x88
 800c39e:	ee78 8a67 	vsub.f32	s17, s16, s15
 800c3a2:	ee38 8a27 	vadd.f32	s16, s16, s15
 800c3a6:	eef0 0a68 	vmov.f32	s1, s17
 800c3aa:	f7ff fd07 	bl	800bdbc <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19moveToWithTransformEff>
 800c3ae:	ed94 1a22 	vldr	s2, [r4, #136]	@ 0x88
 800c3b2:	eef0 1a48 	vmov.f32	s3, s16
 800c3b6:	eeb0 0a41 	vmov.f32	s0, s2
 800c3ba:	eef0 0a68 	vmov.f32	s1, s17
 800c3be:	4620      	mov	r0, r4
 800c3c0:	f7ff fe6c 	bl	800c09c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff>
 800c3c4:	ed94 1a22 	vldr	s2, [r4, #136]	@ 0x88
 800c3c8:	eef0 1a68 	vmov.f32	s3, s17
 800c3cc:	eef0 0a48 	vmov.f32	s1, s16
 800c3d0:	eeb0 0a41 	vmov.f32	s0, s2
 800c3d4:	4620      	mov	r0, r4
 800c3d6:	f7ff fe61 	bl	800c09c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff>
 800c3da:	ecbd 8b02 	vpop	{d8}
 800c3de:	4628      	mov	r0, r5
 800c3e0:	bd38      	pop	{r3, r4, r5, pc}

0800c3e2 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas11strokeCloseEff>:
 800c3e2:	b510      	push	{r4, lr}
 800c3e4:	ed2d 8b02 	vpush	{d8}
 800c3e8:	4604      	mov	r4, r0
 800c3ea:	eeb0 8a40 	vmov.f32	s16, s0
 800c3ee:	eef0 8a60 	vmov.f32	s17, s1
 800c3f2:	f7ff ffc7 	bl	800c384 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawDoubleLineCapEv>
 800c3f6:	b9d0      	cbnz	r0, 800c42e <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas11strokeCloseEff+0x4c>
 800c3f8:	4620      	mov	r0, r4
 800c3fa:	edd4 4a27 	vldr	s9, [r4, #156]	@ 0x9c
 800c3fe:	ed94 4a26 	vldr	s8, [r4, #152]	@ 0x98
 800c402:	edd4 3a25 	vldr	s7, [r4, #148]	@ 0x94
 800c406:	ed94 3a24 	vldr	s6, [r4, #144]	@ 0x90
 800c40a:	edd4 2a2b 	vldr	s5, [r4, #172]	@ 0xac
 800c40e:	ed94 2a2a 	vldr	s4, [r4, #168]	@ 0xa8
 800c412:	edd4 1a29 	vldr	s3, [r4, #164]	@ 0xa4
 800c416:	ed94 1a28 	vldr	s2, [r4, #160]	@ 0xa0
 800c41a:	eef0 0a68 	vmov.f32	s1, s17
 800c41e:	eeb0 0a48 	vmov.f32	s0, s16
 800c422:	f7ff fdaf 	bl	800bf84 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas18strokeDrawLineJoinEffffffffff>
 800c426:	2001      	movs	r0, #1
 800c428:	ecbd 8b02 	vpop	{d8}
 800c42c:	bd10      	pop	{r4, pc}
 800c42e:	2000      	movs	r0, #0
 800c430:	e7fa      	b.n	800c428 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas11strokeCloseEff+0x46>

0800c432 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas16drawFinalLineCapEv>:
 800c432:	edd0 1a25 	vldr	s3, [r0, #148]	@ 0x94
 800c436:	ed90 1a24 	vldr	s2, [r0, #144]	@ 0x90
 800c43a:	edd0 0a2b 	vldr	s1, [r0, #172]	@ 0xac
 800c43e:	ed90 0a2a 	vldr	s0, [r0, #168]	@ 0xa8
 800c442:	f7ff be2b 	b.w	800c09c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff>
	...

0800c448 <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE>:
 800c448:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c44c:	b089      	sub	sp, #36	@ 0x24
 800c44e:	461c      	mov	r4, r3
 800c450:	f10d 0820 	add.w	r8, sp, #32
 800c454:	f89d 3050 	ldrb.w	r3, [sp, #80]	@ 0x50
 800c458:	9304      	str	r3, [sp, #16]
 800c45a:	9e15      	ldr	r6, [sp, #84]	@ 0x54
 800c45c:	9105      	str	r1, [sp, #20]
 800c45e:	2300      	movs	r3, #0
 800c460:	e9dd 9712 	ldrd	r9, r7, [sp, #72]	@ 0x48
 800c464:	9306      	str	r3, [sp, #24]
 800c466:	f848 3d04 	str.w	r3, [r8, #-4]!
 800c46a:	9b04      	ldr	r3, [sp, #16]
 800c46c:	f886 307a 	strb.w	r3, [r6, #122]	@ 0x7a
 800c470:	4682      	mov	sl, r0
 800c472:	4615      	mov	r5, r2
 800c474:	9b05      	ldr	r3, [sp, #20]
 800c476:	429d      	cmp	r5, r3
 800c478:	d96d      	bls.n	800c556 <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE+0x10e>
 800c47a:	3d01      	subs	r5, #1
 800c47c:	f819 3005 	ldrb.w	r3, [r9, r5]
 800c480:	2b06      	cmp	r3, #6
 800c482:	d8f7      	bhi.n	800c474 <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE+0x2c>
 800c484:	a201      	add	r2, pc, #4	@ (adr r2, 800c48c <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE+0x44>)
 800c486:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800c48a:	bf00      	nop
 800c48c:	0800c4ab 	.word	0x0800c4ab
 800c490:	0800c475 	.word	0x0800c475
 800c494:	0800c4a9 	.word	0x0800c4a9
 800c498:	0800c4cd 	.word	0x0800c4cd
 800c49c:	0800c4cd 	.word	0x0800c4cd
 800c4a0:	0800c4d1 	.word	0x0800c4d1
 800c4a4:	0800c511 	.word	0x0800c511
 800c4a8:	3c02      	subs	r4, #2
 800c4aa:	4650      	mov	r0, sl
 800c4ac:	e9cd 9701 	strd	r9, r7, [sp, #4]
 800c4b0:	9400      	str	r4, [sp, #0]
 800c4b2:	462b      	mov	r3, r5
 800c4b4:	4642      	mov	r2, r8
 800c4b6:	a906      	add	r1, sp, #24
 800c4b8:	f7ff fcae 	bl	800be18 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf>
 800c4bc:	eddd 0a07 	vldr	s1, [sp, #28]
 800c4c0:	ed9d 0a06 	vldr	s0, [sp, #24]
 800c4c4:	4630      	mov	r0, r6
 800c4c6:	f7ff fed1 	bl	800c26c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff>
 800c4ca:	e7d3      	b.n	800c474 <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE+0x2c>
 800c4cc:	3c01      	subs	r4, #1
 800c4ce:	e7ec      	b.n	800c4aa <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE+0x62>
 800c4d0:	f1a4 0b04 	sub.w	fp, r4, #4
 800c4d4:	3c02      	subs	r4, #2
 800c4d6:	eb07 0484 	add.w	r4, r7, r4, lsl #2
 800c4da:	4650      	mov	r0, sl
 800c4dc:	e9cd 9701 	strd	r9, r7, [sp, #4]
 800c4e0:	f8cd b000 	str.w	fp, [sp]
 800c4e4:	462b      	mov	r3, r5
 800c4e6:	4642      	mov	r2, r8
 800c4e8:	a906      	add	r1, sp, #24
 800c4ea:	f7ff fc95 	bl	800be18 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf>
 800c4ee:	eddd 2a07 	vldr	s5, [sp, #28]
 800c4f2:	ed9d 2a06 	vldr	s4, [sp, #24]
 800c4f6:	ed54 1a01 	vldr	s3, [r4, #-4]
 800c4fa:	ed14 1a02 	vldr	s2, [r4, #-8]
 800c4fe:	edd4 0a01 	vldr	s1, [r4, #4]
 800c502:	ed94 0a00 	vldr	s0, [r4]
 800c506:	4630      	mov	r0, r6
 800c508:	f7ff fc1a 	bl	800bd40 <_ZN8touchgfx6Canvas17quadraticBezierToEffffff>
 800c50c:	465c      	mov	r4, fp
 800c50e:	e7b1      	b.n	800c474 <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE+0x2c>
 800c510:	f1a4 0b06 	sub.w	fp, r4, #6
 800c514:	3c02      	subs	r4, #2
 800c516:	eb07 0484 	add.w	r4, r7, r4, lsl #2
 800c51a:	4650      	mov	r0, sl
 800c51c:	e9cd 9701 	strd	r9, r7, [sp, #4]
 800c520:	f8cd b000 	str.w	fp, [sp]
 800c524:	462b      	mov	r3, r5
 800c526:	4642      	mov	r2, r8
 800c528:	a906      	add	r1, sp, #24
 800c52a:	f7ff fc75 	bl	800be18 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf>
 800c52e:	eddd 3a07 	vldr	s7, [sp, #28]
 800c532:	ed9d 3a06 	vldr	s6, [sp, #24]
 800c536:	ed54 2a03 	vldr	s5, [r4, #-12]
 800c53a:	ed14 2a04 	vldr	s4, [r4, #-16]
 800c53e:	ed54 1a01 	vldr	s3, [r4, #-4]
 800c542:	ed14 1a02 	vldr	s2, [r4, #-8]
 800c546:	edd4 0a01 	vldr	s1, [r4, #4]
 800c54a:	ed94 0a00 	vldr	s0, [r4]
 800c54e:	4630      	mov	r0, r6
 800c550:	f7ff fc15 	bl	800bd7e <_ZN8touchgfx6Canvas13cubicBezierToEffffffff>
 800c554:	e7da      	b.n	800c50c <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE+0xc4>
 800c556:	9b04      	ldr	r3, [sp, #16]
 800c558:	b113      	cbz	r3, 800c560 <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE+0x118>
 800c55a:	4630      	mov	r0, r6
 800c55c:	f7ff ff69 	bl	800c432 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas16drawFinalLineCapEv>
 800c560:	b009      	add	sp, #36	@ 0x24
 800c562:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800c566:	bf00      	nop

0800c568 <_ZN8touchgfx6Canvas6lineToIfEEvT_S2_>:
 800c568:	eef0 7a60 	vmov.f32	s15, s1
 800c56c:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
 800c570:	6803      	ldr	r3, [r0, #0]
 800c572:	ee17 2a90 	vmov	r2, s15
 800c576:	eef0 7a40 	vmov.f32	s15, s0
 800c57a:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
 800c57e:	689b      	ldr	r3, [r3, #8]
 800c580:	ee17 1a90 	vmov	r1, s15
 800c584:	4718      	bx	r3
	...

0800c588 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvasD1Ev>:
 800c588:	b510      	push	{r4, lr}
 800c58a:	4b04      	ldr	r3, [pc, #16]	@ (800c59c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvasD1Ev+0x14>)
 800c58c:	4604      	mov	r4, r0
 800c58e:	f840 3b14 	str.w	r3, [r0], #20
 800c592:	f001 f8d3 	bl	800d73c <_ZN8touchgfx7OutlineD1Ev>
 800c596:	4620      	mov	r0, r4
 800c598:	bd10      	pop	{r4, pc}
 800c59a:	bf00      	nop
 800c59c:	08025188 	.word	0x08025188

0800c5a0 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE>:
 800c5a0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c5a4:	ed2d 8b04 	vpush	{d8-d9}
 800c5a8:	edd0 7a0c 	vldr	s15, [r0, #48]	@ 0x30
 800c5ac:	b0b5      	sub	sp, #212	@ 0xd4
 800c5ae:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800c5b2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800c5b6:	4605      	mov	r5, r0
 800c5b8:	468b      	mov	fp, r1
 800c5ba:	9206      	str	r2, [sp, #24]
 800c5bc:	461e      	mov	r6, r3
 800c5be:	f04f 0400 	mov.w	r4, #0
 800c5c2:	f240 814e 	bls.w	800c862 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x2c2>
 800c5c6:	23ff      	movs	r3, #255	@ 0xff
 800c5c8:	9300      	str	r3, [sp, #0]
 800c5ca:	1d02      	adds	r2, r0, #4
 800c5cc:	6981      	ldr	r1, [r0, #24]
 800c5ce:	9b43      	ldr	r3, [sp, #268]	@ 0x10c
 800c5d0:	ed9f 9aa5 	vldr	s18, [pc, #660]	@ 800c868 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x2c8>
 800c5d4:	a808      	add	r0, sp, #32
 800c5d6:	f014 fdcb 	bl	8021170 <_ZN8touchgfx6CanvasC1EPKNS_15AbstractPainterERKNS_4RectES6_h>
 800c5da:	edd5 7a0c 	vldr	s15, [r5, #48]	@ 0x30
 800c5de:	4ba3      	ldr	r3, [pc, #652]	@ (800c86c <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x2cc>)
 800c5e0:	edd5 6a08 	vldr	s13, [r5, #32]
 800c5e4:	9308      	str	r3, [sp, #32]
 800c5e6:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800c5ea:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800c5ee:	eeb6 7a00 	vmov.f32	s14, #96	@ 0x3f000000  0.5
 800c5f2:	bf48      	it	mi
 800c5f4:	eef1 7a67 	vnegmi.f32	s15, s15
 800c5f8:	ee67 7a87 	vmul.f32	s15, s15, s14
 800c5fc:	f105 0334 	add.w	r3, r5, #52	@ 0x34
 800c600:	2201      	movs	r2, #1
 800c602:	9325      	str	r3, [sp, #148]	@ 0x94
 800c604:	2300      	movs	r3, #0
 800c606:	ee26 7aa7 	vmul.f32	s14, s13, s15
 800c60a:	f88d 3098 	strb.w	r3, [sp, #152]	@ 0x98
 800c60e:	f88d 2099 	strb.w	r2, [sp, #153]	@ 0x99
 800c612:	f88d 309a 	strb.w	r3, [sp, #154]	@ 0x9a
 800c616:	f88d 3064 	strb.w	r3, [sp, #100]	@ 0x64
 800c61a:	7f6a      	ldrb	r2, [r5, #29]
 800c61c:	7fab      	ldrb	r3, [r5, #30]
 800c61e:	edcd 7a27 	vstr	s15, [sp, #156]	@ 0x9c
 800c622:	435a      	muls	r2, r3
 800c624:	ee27 7a26 	vmul.f32	s14, s14, s13
 800c628:	1c53      	adds	r3, r2, #1
 800c62a:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 800c62e:	ee67 7a27 	vmul.f32	s15, s14, s15
 800c632:	f04f 0800 	mov.w	r8, #0
 800c636:	f895 0024 	ldrb.w	r0, [r5, #36]	@ 0x24
 800c63a:	f895 1025 	ldrb.w	r1, [r5, #37]	@ 0x25
 800c63e:	942a      	str	r4, [sp, #168]	@ 0xa8
 800c640:	f3c3 2307 	ubfx	r3, r3, #8, #8
 800c644:	942b      	str	r4, [sp, #172]	@ 0xac
 800c646:	942c      	str	r4, [sp, #176]	@ 0xb0
 800c648:	942d      	str	r4, [sp, #180]	@ 0xb4
 800c64a:	942e      	str	r4, [sp, #184]	@ 0xb8
 800c64c:	942f      	str	r4, [sp, #188]	@ 0xbc
 800c64e:	9430      	str	r4, [sp, #192]	@ 0xc0
 800c650:	9431      	str	r4, [sp, #196]	@ 0xc4
 800c652:	9432      	str	r4, [sp, #200]	@ 0xc8
 800c654:	9433      	str	r4, [sp, #204]	@ 0xcc
 800c656:	edcd 7a28 	vstr	s15, [sp, #160]	@ 0xa0
 800c65a:	f88d 00a4 	strb.w	r0, [sp, #164]	@ 0xa4
 800c65e:	f88d 10a5 	strb.w	r1, [sp, #165]	@ 0xa5
 800c662:	f88d 30a6 	strb.w	r3, [sp, #166]	@ 0xa6
 800c666:	eef0 9a49 	vmov.f32	s19, s18
 800c66a:	eeb0 8a49 	vmov.f32	s16, s18
 800c66e:	eef0 8a49 	vmov.f32	s17, s18
 800c672:	4644      	mov	r4, r8
 800c674:	46c1      	mov	r9, r8
 800c676:	af08      	add	r7, sp, #32
 800c678:	f04f 0a01 	mov.w	sl, #1
 800c67c:	9b06      	ldr	r3, [sp, #24]
 800c67e:	454b      	cmp	r3, r9
 800c680:	f000 80cc 	beq.w	800c81c <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x27c>
 800c684:	f109 0301 	add.w	r3, r9, #1
 800c688:	9305      	str	r3, [sp, #20]
 800c68a:	f81b 3009 	ldrb.w	r3, [fp, r9]
 800c68e:	2b06      	cmp	r3, #6
 800c690:	d839      	bhi.n	800c706 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x166>
 800c692:	e8df f003 	tbb	[pc, r3]
 800c696:	3b04      	.short	0x3b04
 800c698:	817c6f60 	.word	0x817c6f60
 800c69c:	a0          	.byte	0xa0
 800c69d:	00          	.byte	0x00
 800c69e:	45c1      	cmp	r9, r8
 800c6a0:	d92b      	bls.n	800c6fa <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x15a>
 800c6a2:	eef0 0a49 	vmov.f32	s1, s18
 800c6a6:	eeb0 0a69 	vmov.f32	s0, s19
 800c6aa:	4638      	mov	r0, r7
 800c6ac:	f7ff fdde 	bl	800c26c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff>
 800c6b0:	4638      	mov	r0, r7
 800c6b2:	f7ff fe67 	bl	800c384 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawDoubleLineCapEv>
 800c6b6:	4681      	mov	r9, r0
 800c6b8:	b9f8      	cbnz	r0, 800c6fa <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x15a>
 800c6ba:	eef0 0a49 	vmov.f32	s1, s18
 800c6be:	eeb0 0a69 	vmov.f32	s0, s19
 800c6c2:	4638      	mov	r0, r7
 800c6c4:	f7ff fe8d 	bl	800c3e2 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas11strokeCloseEff>
 800c6c8:	4628      	mov	r0, r5
 800c6ca:	e9cd 9702 	strd	r9, r7, [sp, #8]
 800c6ce:	e9cd b600 	strd	fp, r6, [sp]
 800c6d2:	4623      	mov	r3, r4
 800c6d4:	9a05      	ldr	r2, [sp, #20]
 800c6d6:	edcd 9a2a 	vstr	s19, [sp, #168]	@ 0xa8
 800c6da:	4641      	mov	r1, r8
 800c6dc:	ed8d 9a2b 	vstr	s18, [sp, #172]	@ 0xac
 800c6e0:	f88d a098 	strb.w	sl, [sp, #152]	@ 0x98
 800c6e4:	f88d a099 	strb.w	sl, [sp, #153]	@ 0x99
 800c6e8:	f7ff feae 	bl	800c448 <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE>
 800c6ec:	eef0 0a49 	vmov.f32	s1, s18
 800c6f0:	eeb0 0a69 	vmov.f32	s0, s19
 800c6f4:	4638      	mov	r0, r7
 800c6f6:	f7ff fe74 	bl	800c3e2 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas11strokeCloseEff>
 800c6fa:	f8dd 8014 	ldr.w	r8, [sp, #20]
 800c6fe:	eeb0 8a49 	vmov.f32	s16, s18
 800c702:	eef0 8a69 	vmov.f32	s17, s19
 800c706:	f8dd 9014 	ldr.w	r9, [sp, #20]
 800c70a:	e7b7      	b.n	800c67c <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0xdc>
 800c70c:	45c1      	cmp	r9, r8
 800c70e:	d90d      	bls.n	800c72c <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x18c>
 800c710:	4638      	mov	r0, r7
 800c712:	f7ff fe37 	bl	800c384 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawDoubleLineCapEv>
 800c716:	b948      	cbnz	r0, 800c72c <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x18c>
 800c718:	e9cd a702 	strd	sl, r7, [sp, #8]
 800c71c:	e9cd b600 	strd	fp, r6, [sp]
 800c720:	4623      	mov	r3, r4
 800c722:	464a      	mov	r2, r9
 800c724:	4641      	mov	r1, r8
 800c726:	4628      	mov	r0, r5
 800c728:	f7ff fe8e 	bl	800c448 <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE>
 800c72c:	eb06 0384 	add.w	r3, r6, r4, lsl #2
 800c730:	edd3 8a00 	vldr	s17, [r3]
 800c734:	ed93 8a01 	vldr	s16, [r3, #4]
 800c738:	edcd 8a2a 	vstr	s17, [sp, #168]	@ 0xa8
 800c73c:	ed8d 8a2b 	vstr	s16, [sp, #172]	@ 0xac
 800c740:	f88d a098 	strb.w	sl, [sp, #152]	@ 0x98
 800c744:	f88d a099 	strb.w	sl, [sp, #153]	@ 0x99
 800c748:	3402      	adds	r4, #2
 800c74a:	46c8      	mov	r8, r9
 800c74c:	eeb0 9a48 	vmov.f32	s18, s16
 800c750:	eef0 9a68 	vmov.f32	s19, s17
 800c754:	e7d7      	b.n	800c706 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x166>
 800c756:	eb06 0384 	add.w	r3, r6, r4, lsl #2
 800c75a:	edd3 8a00 	vldr	s17, [r3]
 800c75e:	ed93 8a01 	vldr	s16, [r3, #4]
 800c762:	eeb0 0a68 	vmov.f32	s0, s17
 800c766:	eef0 0a48 	vmov.f32	s1, s16
 800c76a:	4638      	mov	r0, r7
 800c76c:	f7ff fd7e 	bl	800c26c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff>
 800c770:	3402      	adds	r4, #2
 800c772:	e7c8      	b.n	800c706 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x166>
 800c774:	eb06 0384 	add.w	r3, r6, r4, lsl #2
 800c778:	edd3 8a00 	vldr	s17, [r3]
 800c77c:	eef0 0a48 	vmov.f32	s1, s16
 800c780:	eeb0 0a68 	vmov.f32	s0, s17
 800c784:	4638      	mov	r0, r7
 800c786:	f7ff fd71 	bl	800c26c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff>
 800c78a:	3401      	adds	r4, #1
 800c78c:	e7bb      	b.n	800c706 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x166>
 800c78e:	eb06 0384 	add.w	r3, r6, r4, lsl #2
 800c792:	ed93 8a00 	vldr	s16, [r3]
 800c796:	e7f1      	b.n	800c77c <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x1dc>
 800c798:	00a3      	lsls	r3, r4, #2
 800c79a:	f103 0208 	add.w	r2, r3, #8
 800c79e:	f103 090c 	add.w	r9, r3, #12
 800c7a2:	4432      	add	r2, r6
 800c7a4:	4433      	add	r3, r6
 800c7a6:	44b1      	add	r9, r6
 800c7a8:	ed92 2a00 	vldr	s4, [r2]
 800c7ac:	edd9 2a00 	vldr	s5, [r9]
 800c7b0:	edd3 1a01 	vldr	s3, [r3, #4]
 800c7b4:	ed93 1a00 	vldr	s2, [r3]
 800c7b8:	9207      	str	r2, [sp, #28]
 800c7ba:	eef0 0a48 	vmov.f32	s1, s16
 800c7be:	eeb0 0a68 	vmov.f32	s0, s17
 800c7c2:	4638      	mov	r0, r7
 800c7c4:	f7ff fabc 	bl	800bd40 <_ZN8touchgfx6Canvas17quadraticBezierToEffffff>
 800c7c8:	9a07      	ldr	r2, [sp, #28]
 800c7ca:	ed99 8a00 	vldr	s16, [r9]
 800c7ce:	edd2 8a00 	vldr	s17, [r2]
 800c7d2:	3404      	adds	r4, #4
 800c7d4:	e797      	b.n	800c706 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x166>
 800c7d6:	00a3      	lsls	r3, r4, #2
 800c7d8:	f103 0210 	add.w	r2, r3, #16
 800c7dc:	f103 0914 	add.w	r9, r3, #20
 800c7e0:	4432      	add	r2, r6
 800c7e2:	4433      	add	r3, r6
 800c7e4:	44b1      	add	r9, r6
 800c7e6:	ed92 3a00 	vldr	s6, [r2]
 800c7ea:	edd9 3a00 	vldr	s7, [r9]
 800c7ee:	edd3 2a03 	vldr	s5, [r3, #12]
 800c7f2:	ed93 2a02 	vldr	s4, [r3, #8]
 800c7f6:	edd3 1a01 	vldr	s3, [r3, #4]
 800c7fa:	ed93 1a00 	vldr	s2, [r3]
 800c7fe:	9207      	str	r2, [sp, #28]
 800c800:	eef0 0a48 	vmov.f32	s1, s16
 800c804:	eeb0 0a68 	vmov.f32	s0, s17
 800c808:	4638      	mov	r0, r7
 800c80a:	f7ff fab8 	bl	800bd7e <_ZN8touchgfx6Canvas13cubicBezierToEffffffff>
 800c80e:	9a07      	ldr	r2, [sp, #28]
 800c810:	ed99 8a00 	vldr	s16, [r9]
 800c814:	edd2 8a00 	vldr	s17, [r2]
 800c818:	3406      	adds	r4, #6
 800c81a:	e774      	b.n	800c706 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x166>
 800c81c:	9b06      	ldr	r3, [sp, #24]
 800c81e:	4543      	cmp	r3, r8
 800c820:	af08      	add	r7, sp, #32
 800c822:	d90f      	bls.n	800c844 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x2a4>
 800c824:	4638      	mov	r0, r7
 800c826:	f7ff fdad 	bl	800c384 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawDoubleLineCapEv>
 800c82a:	b958      	cbnz	r0, 800c844 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x2a4>
 800c82c:	2301      	movs	r3, #1
 800c82e:	e9cd 6301 	strd	r6, r3, [sp, #4]
 800c832:	9703      	str	r7, [sp, #12]
 800c834:	f8cd b000 	str.w	fp, [sp]
 800c838:	4623      	mov	r3, r4
 800c83a:	9a06      	ldr	r2, [sp, #24]
 800c83c:	4641      	mov	r1, r8
 800c83e:	4628      	mov	r0, r5
 800c840:	f7ff fe02 	bl	800c448 <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE>
 800c844:	f89d 10a6 	ldrb.w	r1, [sp, #166]	@ 0xa6
 800c848:	4638      	mov	r0, r7
 800c84a:	f014 fd25 	bl	8021298 <_ZN8touchgfx6Canvas6renderEh>
 800c84e:	4604      	mov	r4, r0
 800c850:	4638      	mov	r0, r7
 800c852:	f7ff fe99 	bl	800c588 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvasD1Ev>
 800c856:	4620      	mov	r0, r4
 800c858:	b035      	add	sp, #212	@ 0xd4
 800c85a:	ecbd 8b04 	vpop	{d8-d9}
 800c85e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800c862:	2401      	movs	r4, #1
 800c864:	e7f7      	b.n	800c856 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x2b6>
 800c866:	bf00      	nop
 800c868:	00000000 	.word	0x00000000
 800c86c:	08024ad4 	.word	0x08024ad4

0800c870 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvasD0Ev>:
 800c870:	b510      	push	{r4, lr}
 800c872:	4604      	mov	r4, r0
 800c874:	f7ff fe88 	bl	800c588 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvasD1Ev>
 800c878:	4620      	mov	r0, r4
 800c87a:	21b0      	movs	r1, #176	@ 0xb0
 800c87c:	f015 f8db 	bl	8021a36 <_ZdlPvj>
 800c880:	4620      	mov	r0, r4
 800c882:	bd10      	pop	{r4, pc}

0800c884 <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE>:
 800c884:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800c888:	ed2d 8b06 	vpush	{d8-d10}
 800c88c:	b0aa      	sub	sp, #168	@ 0xa8
 800c88e:	4698      	mov	r8, r3
 800c890:	23ff      	movs	r3, #255	@ 0xff
 800c892:	4607      	mov	r7, r0
 800c894:	9300      	str	r3, [sp, #0]
 800c896:	4689      	mov	r9, r1
 800c898:	4692      	mov	sl, r2
 800c89a:	6981      	ldr	r1, [r0, #24]
 800c89c:	9b39      	ldr	r3, [sp, #228]	@ 0xe4
 800c89e:	ed9f 8a82 	vldr	s16, [pc, #520]	@ 800caa8 <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0x224>
 800c8a2:	1d02      	adds	r2, r0, #4
 800c8a4:	a80d      	add	r0, sp, #52	@ 0x34
 800c8a6:	f014 fc63 	bl	8021170 <_ZN8touchgfx6CanvasC1EPKNS_15AbstractPainterERKNS_4RectES6_h>
 800c8aa:	7f3b      	ldrb	r3, [r7, #28]
 800c8ac:	eddf 0a7e 	vldr	s1, [pc, #504]	@ 800caa8 <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0x224>
 800c8b0:	1e5a      	subs	r2, r3, #1
 800c8b2:	4253      	negs	r3, r2
 800c8b4:	f107 0534 	add.w	r5, r7, #52	@ 0x34
 800c8b8:	4153      	adcs	r3, r2
 800c8ba:	eeb0 0a60 	vmov.f32	s0, s1
 800c8be:	4628      	mov	r0, r5
 800c8c0:	f88d 3078 	strb.w	r3, [sp, #120]	@ 0x78
 800c8c4:	f004 fc11 	bl	80110ea <_ZNK8touchgfx9Matrix3x315affineTransformEff>
 800c8c8:	44ca      	add	sl, r9
 800c8ca:	eeb0 9a40 	vmov.f32	s18, s0
 800c8ce:	eef0 9a60 	vmov.f32	s19, s1
 800c8d2:	eef0 8a48 	vmov.f32	s17, s16
 800c8d6:	2400      	movs	r4, #0
 800c8d8:	45ca      	cmp	sl, r9
 800c8da:	f000 80cd 	beq.w	800ca78 <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0x1f4>
 800c8de:	f819 3b01 	ldrb.w	r3, [r9], #1
 800c8e2:	2b06      	cmp	r3, #6
 800c8e4:	d8f8      	bhi.n	800c8d8 <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0x54>
 800c8e6:	e8df f003 	tbb	[pc, r3]
 800c8ea:	0804      	.short	0x0804
 800c8ec:	58533f2a 	.word	0x58533f2a
 800c8f0:	8a          	.byte	0x8a
 800c8f1:	00          	.byte	0x00
 800c8f2:	a80d      	add	r0, sp, #52	@ 0x34
 800c8f4:	f014 fcae 	bl	8021254 <_ZN8touchgfx6Canvas5closeEv>
 800c8f8:	e7ee      	b.n	800c8d8 <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0x54>
 800c8fa:	eb08 0384 	add.w	r3, r8, r4, lsl #2
 800c8fe:	edd3 8a00 	vldr	s17, [r3]
 800c902:	ed93 8a01 	vldr	s16, [r3, #4]
 800c906:	eeb0 0a68 	vmov.f32	s0, s17
 800c90a:	eef0 0a48 	vmov.f32	s1, s16
 800c90e:	4628      	mov	r0, r5
 800c910:	f004 fbeb 	bl	80110ea <_ZNK8touchgfx9Matrix3x315affineTransformEff>
 800c914:	eef0 7a60 	vmov.f32	s15, s1
 800c918:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
 800c91c:	a80d      	add	r0, sp, #52	@ 0x34
 800c91e:	ee17 2a90 	vmov	r2, s15
 800c922:	eef0 7a40 	vmov.f32	s15, s0
 800c926:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
 800c92a:	eeb0 9a40 	vmov.f32	s18, s0
 800c92e:	ee17 1a90 	vmov	r1, s15
 800c932:	eef0 9a60 	vmov.f32	s19, s1
 800c936:	f014 fd67 	bl	8021408 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>
 800c93a:	3402      	adds	r4, #2
 800c93c:	e7cc      	b.n	800c8d8 <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0x54>
 800c93e:	eb08 0384 	add.w	r3, r8, r4, lsl #2
 800c942:	edd3 8a00 	vldr	s17, [r3]
 800c946:	ed93 8a01 	vldr	s16, [r3, #4]
 800c94a:	eeb0 0a68 	vmov.f32	s0, s17
 800c94e:	eef0 0a48 	vmov.f32	s1, s16
 800c952:	4628      	mov	r0, r5
 800c954:	f004 fbc9 	bl	80110ea <_ZNK8touchgfx9Matrix3x315affineTransformEff>
 800c958:	a80d      	add	r0, sp, #52	@ 0x34
 800c95a:	eeb0 9a40 	vmov.f32	s18, s0
 800c95e:	eef0 9a60 	vmov.f32	s19, s1
 800c962:	f7ff fe01 	bl	800c568 <_ZN8touchgfx6Canvas6lineToIfEEvT_S2_>
 800c966:	e7e8      	b.n	800c93a <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0xb6>
 800c968:	eb08 0384 	add.w	r3, r8, r4, lsl #2
 800c96c:	edd3 8a00 	vldr	s17, [r3]
 800c970:	eef0 0a48 	vmov.f32	s1, s16
 800c974:	eeb0 0a68 	vmov.f32	s0, s17
 800c978:	4628      	mov	r0, r5
 800c97a:	f004 fbb6 	bl	80110ea <_ZNK8touchgfx9Matrix3x315affineTransformEff>
 800c97e:	a80d      	add	r0, sp, #52	@ 0x34
 800c980:	eeb0 9a40 	vmov.f32	s18, s0
 800c984:	eef0 9a60 	vmov.f32	s19, s1
 800c988:	3401      	adds	r4, #1
 800c98a:	f7ff fded 	bl	800c568 <_ZN8touchgfx6Canvas6lineToIfEEvT_S2_>
 800c98e:	e7a3      	b.n	800c8d8 <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0x54>
 800c990:	eb08 0384 	add.w	r3, r8, r4, lsl #2
 800c994:	ed93 8a00 	vldr	s16, [r3]
 800c998:	e7ea      	b.n	800c970 <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0xec>
 800c99a:	1ca3      	adds	r3, r4, #2
 800c99c:	eb08 0383 	add.w	r3, r8, r3, lsl #2
 800c9a0:	ed53 0a01 	vldr	s1, [r3, #-4]
 800c9a4:	ed13 0a02 	vldr	s0, [r3, #-8]
 800c9a8:	edd3 8a00 	vldr	s17, [r3]
 800c9ac:	ed93 8a01 	vldr	s16, [r3, #4]
 800c9b0:	4628      	mov	r0, r5
 800c9b2:	f004 fb9a 	bl	80110ea <_ZNK8touchgfx9Matrix3x315affineTransformEff>
 800c9b6:	4628      	mov	r0, r5
 800c9b8:	ed8d 0a09 	vstr	s0, [sp, #36]	@ 0x24
 800c9bc:	edcd 0a0a 	vstr	s1, [sp, #40]	@ 0x28
 800c9c0:	eeb0 0a68 	vmov.f32	s0, s17
 800c9c4:	eef0 0a48 	vmov.f32	s1, s16
 800c9c8:	f004 fb8f 	bl	80110ea <_ZNK8touchgfx9Matrix3x315affineTransformEff>
 800c9cc:	eddd 1a0a 	vldr	s3, [sp, #40]	@ 0x28
 800c9d0:	ed9d 1a09 	vldr	s2, [sp, #36]	@ 0x24
 800c9d4:	eef0 2a60 	vmov.f32	s5, s1
 800c9d8:	eeb0 2a40 	vmov.f32	s4, s0
 800c9dc:	eeb0 aa40 	vmov.f32	s20, s0
 800c9e0:	eef0 aa60 	vmov.f32	s21, s1
 800c9e4:	eeb0 0a49 	vmov.f32	s0, s18
 800c9e8:	eef0 0a69 	vmov.f32	s1, s19
 800c9ec:	a80d      	add	r0, sp, #52	@ 0x34
 800c9ee:	f7ff f9a7 	bl	800bd40 <_ZN8touchgfx6Canvas17quadraticBezierToEffffff>
 800c9f2:	3404      	adds	r4, #4
 800c9f4:	eef0 9a6a 	vmov.f32	s19, s21
 800c9f8:	eeb0 9a4a 	vmov.f32	s18, s20
 800c9fc:	e76c      	b.n	800c8d8 <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0x54>
 800c9fe:	1d26      	adds	r6, r4, #4
 800ca00:	eb08 0686 	add.w	r6, r8, r6, lsl #2
 800ca04:	ed56 0a03 	vldr	s1, [r6, #-12]
 800ca08:	ed16 0a04 	vldr	s0, [r6, #-16]
 800ca0c:	edd6 8a00 	vldr	s17, [r6]
 800ca10:	ed96 8a01 	vldr	s16, [r6, #4]
 800ca14:	4628      	mov	r0, r5
 800ca16:	f004 fb68 	bl	80110ea <_ZNK8touchgfx9Matrix3x315affineTransformEff>
 800ca1a:	4628      	mov	r0, r5
 800ca1c:	ed8d 0a07 	vstr	s0, [sp, #28]
 800ca20:	edcd 0a08 	vstr	s1, [sp, #32]
 800ca24:	ed16 0a02 	vldr	s0, [r6, #-8]
 800ca28:	ed56 0a01 	vldr	s1, [r6, #-4]
 800ca2c:	f004 fb5d 	bl	80110ea <_ZNK8touchgfx9Matrix3x315affineTransformEff>
 800ca30:	4628      	mov	r0, r5
 800ca32:	ed8d 0a09 	vstr	s0, [sp, #36]	@ 0x24
 800ca36:	edcd 0a0a 	vstr	s1, [sp, #40]	@ 0x28
 800ca3a:	eeb0 0a68 	vmov.f32	s0, s17
 800ca3e:	eef0 0a48 	vmov.f32	s1, s16
 800ca42:	f004 fb52 	bl	80110ea <_ZNK8touchgfx9Matrix3x315affineTransformEff>
 800ca46:	eddd 2a0a 	vldr	s5, [sp, #40]	@ 0x28
 800ca4a:	ed9d 2a09 	vldr	s4, [sp, #36]	@ 0x24
 800ca4e:	eddd 1a08 	vldr	s3, [sp, #32]
 800ca52:	ed9d 1a07 	vldr	s2, [sp, #28]
 800ca56:	eef0 3a60 	vmov.f32	s7, s1
 800ca5a:	eeb0 3a40 	vmov.f32	s6, s0
 800ca5e:	eeb0 aa40 	vmov.f32	s20, s0
 800ca62:	eef0 aa60 	vmov.f32	s21, s1
 800ca66:	eeb0 0a49 	vmov.f32	s0, s18
 800ca6a:	eef0 0a69 	vmov.f32	s1, s19
 800ca6e:	a80d      	add	r0, sp, #52	@ 0x34
 800ca70:	f7ff f985 	bl	800bd7e <_ZN8touchgfx6Canvas13cubicBezierToEffffffff>
 800ca74:	3406      	adds	r4, #6
 800ca76:	e7bd      	b.n	800c9f4 <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0x170>
 800ca78:	7f7b      	ldrb	r3, [r7, #29]
 800ca7a:	7fb9      	ldrb	r1, [r7, #30]
 800ca7c:	4359      	muls	r1, r3
 800ca7e:	1c4b      	adds	r3, r1, #1
 800ca80:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 800ca84:	f3c1 2107 	ubfx	r1, r1, #8, #8
 800ca88:	a80d      	add	r0, sp, #52	@ 0x34
 800ca8a:	f014 fc05 	bl	8021298 <_ZN8touchgfx6Canvas6renderEh>
 800ca8e:	4b07      	ldr	r3, [pc, #28]	@ (800caac <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0x228>)
 800ca90:	930d      	str	r3, [sp, #52]	@ 0x34
 800ca92:	4604      	mov	r4, r0
 800ca94:	a812      	add	r0, sp, #72	@ 0x48
 800ca96:	f000 fe51 	bl	800d73c <_ZN8touchgfx7OutlineD1Ev>
 800ca9a:	4620      	mov	r0, r4
 800ca9c:	b02a      	add	sp, #168	@ 0xa8
 800ca9e:	ecbd 8b06 	vpop	{d8-d10}
 800caa2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800caa6:	bf00      	nop
 800caa8:	00000000 	.word	0x00000000
 800caac:	08025188 	.word	0x08025188

0800cab0 <_ZNK8touchgfx17CWRVectorRenderer12drawPathAreaEPKhmPKfmRKNS_4RectE>:
 800cab0:	b410      	push	{r4}
 800cab2:	7f04      	ldrb	r4, [r0, #28]
 800cab4:	b11c      	cbz	r4, 800cabe <_ZNK8touchgfx17CWRVectorRenderer12drawPathAreaEPKhmPKfmRKNS_4RectE+0xe>
 800cab6:	f85d 4b04 	ldr.w	r4, [sp], #4
 800caba:	f7ff bee3 	b.w	800c884 <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE>
 800cabe:	f85d 4b04 	ldr.w	r4, [sp], #4
 800cac2:	f7ff bd6d 	b.w	800c5a0 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE>
	...

0800cac8 <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_>:
 800cac8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800cacc:	4691      	mov	r9, r2
 800cace:	4602      	mov	r2, r0
 800cad0:	4605      	mov	r5, r0
 800cad2:	f852 0f26 	ldr.w	r0, [r2, #38]!
 800cad6:	b085      	sub	sp, #20
 800cad8:	4688      	mov	r8, r1
 800cada:	6851      	ldr	r1, [r2, #4]
 800cadc:	f8dd b038 	ldr.w	fp, [sp, #56]	@ 0x38
 800cae0:	469a      	mov	sl, r3
 800cae2:	ab02      	add	r3, sp, #8
 800cae4:	c303      	stmia	r3!, {r0, r1}
 800cae6:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 800caea:	2b00      	cmp	r3, #0
 800caec:	af02      	add	r7, sp, #8
 800caee:	dd08      	ble.n	800cb02 <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0x3a>
 800caf0:	f9bd 400e 	ldrsh.w	r4, [sp, #14]
 800caf4:	2c00      	cmp	r4, #0
 800caf6:	dd04      	ble.n	800cb02 <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0x3a>
 800caf8:	4a2e      	ldr	r2, [pc, #184]	@ (800cbb4 <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0xec>)
 800cafa:	7812      	ldrb	r2, [r2, #0]
 800cafc:	b122      	cbz	r2, 800cb08 <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0x40>
 800cafe:	2a01      	cmp	r2, #1
 800cb00:	d02d      	beq.n	800cb5e <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0x96>
 800cb02:	b005      	add	sp, #20
 800cb04:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800cb08:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 800cb0c:	441c      	add	r4, r3
 800cb0e:	b2a4      	uxth	r4, r4
 800cb10:	b226      	sxth	r6, r4
 800cb12:	f9bd 300a 	ldrsh.w	r3, [sp, #10]
 800cb16:	42b3      	cmp	r3, r6
 800cb18:	daf3      	bge.n	800cb02 <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0x3a>
 800cb1a:	e9cd b700 	strd	fp, r7, [sp]
 800cb1e:	4653      	mov	r3, sl
 800cb20:	464a      	mov	r2, r9
 800cb22:	4641      	mov	r1, r8
 800cb24:	4628      	mov	r0, r5
 800cb26:	f7ff ffc3 	bl	800cab0 <_ZNK8touchgfx17CWRVectorRenderer12drawPathAreaEPKhmPKfmRKNS_4RectE>
 800cb2a:	b940      	cbnz	r0, 800cb3e <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0x76>
 800cb2c:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 800cb30:	2b01      	cmp	r3, #1
 800cb32:	d004      	beq.n	800cb3e <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0x76>
 800cb34:	3301      	adds	r3, #1
 800cb36:	105b      	asrs	r3, r3, #1
 800cb38:	f8ad 300e 	strh.w	r3, [sp, #14]
 800cb3c:	e7ed      	b.n	800cb1a <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0x52>
 800cb3e:	f8bd 200e 	ldrh.w	r2, [sp, #14]
 800cb42:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 800cb46:	4413      	add	r3, r2
 800cb48:	b29b      	uxth	r3, r3
 800cb4a:	441a      	add	r2, r3
 800cb4c:	b212      	sxth	r2, r2
 800cb4e:	4296      	cmp	r6, r2
 800cb50:	f8ad 300a 	strh.w	r3, [sp, #10]
 800cb54:	dadd      	bge.n	800cb12 <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0x4a>
 800cb56:	1ae3      	subs	r3, r4, r3
 800cb58:	f8ad 300e 	strh.w	r3, [sp, #14]
 800cb5c:	e7d9      	b.n	800cb12 <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0x4a>
 800cb5e:	f8bd 4008 	ldrh.w	r4, [sp, #8]
 800cb62:	441c      	add	r4, r3
 800cb64:	b2a4      	uxth	r4, r4
 800cb66:	b226      	sxth	r6, r4
 800cb68:	f9bd 3008 	ldrsh.w	r3, [sp, #8]
 800cb6c:	42b3      	cmp	r3, r6
 800cb6e:	dac8      	bge.n	800cb02 <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0x3a>
 800cb70:	e9cd b700 	strd	fp, r7, [sp]
 800cb74:	4653      	mov	r3, sl
 800cb76:	464a      	mov	r2, r9
 800cb78:	4641      	mov	r1, r8
 800cb7a:	4628      	mov	r0, r5
 800cb7c:	f7ff ff98 	bl	800cab0 <_ZNK8touchgfx17CWRVectorRenderer12drawPathAreaEPKhmPKfmRKNS_4RectE>
 800cb80:	b940      	cbnz	r0, 800cb94 <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0xcc>
 800cb82:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 800cb86:	2b01      	cmp	r3, #1
 800cb88:	d004      	beq.n	800cb94 <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0xcc>
 800cb8a:	3301      	adds	r3, #1
 800cb8c:	105b      	asrs	r3, r3, #1
 800cb8e:	f8ad 300c 	strh.w	r3, [sp, #12]
 800cb92:	e7ed      	b.n	800cb70 <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0xa8>
 800cb94:	f8bd 200c 	ldrh.w	r2, [sp, #12]
 800cb98:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 800cb9c:	4413      	add	r3, r2
 800cb9e:	b29b      	uxth	r3, r3
 800cba0:	441a      	add	r2, r3
 800cba2:	b212      	sxth	r2, r2
 800cba4:	4296      	cmp	r6, r2
 800cba6:	f8ad 3008 	strh.w	r3, [sp, #8]
 800cbaa:	dadd      	bge.n	800cb68 <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0xa0>
 800cbac:	1ae3      	subs	r3, r4, r3
 800cbae:	f8ad 300c 	strh.w	r3, [sp, #12]
 800cbb2:	e7d9      	b.n	800cb68 <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0xa0>
 800cbb4:	20013f22 	.word	0x20013f22

0800cbb8 <_ZN8touchgfx6CircleD1Ev>:
 800cbb8:	4770      	bx	lr

0800cbba <_ZN8touchgfx6CircleD0Ev>:
 800cbba:	b510      	push	{r4, lr}
 800cbbc:	2148      	movs	r1, #72	@ 0x48
 800cbbe:	4604      	mov	r4, r0
 800cbc0:	f014 ff39 	bl	8021a36 <_ZdlPvj>
 800cbc4:	4620      	mov	r0, r4
 800cbc6:	bd10      	pop	{r4, pc}

0800cbc8 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>:
 800cbc8:	b507      	push	{r0, r1, r2, lr}
 800cbca:	f44f 4200 	mov.w	r2, #32768	@ 0x8000
 800cbce:	ab01      	add	r3, sp, #4
 800cbd0:	6809      	ldr	r1, [r1, #0]
 800cbd2:	6800      	ldr	r0, [r0, #0]
 800cbd4:	f004 fba2 	bl	801131c <_ZN8touchgfx6muldivElllRl>
 800cbd8:	b003      	add	sp, #12
 800cbda:	f85d fb04 	ldr.w	pc, [sp], #4
	...

0800cbe0 <_ZN8touchgfx7CWRUtil4sineEi>:
 800cbe0:	f44f 73b4 	mov.w	r3, #360	@ 0x168
 800cbe4:	fb90 f2f3 	sdiv	r2, r0, r3
 800cbe8:	fb02 0013 	mls	r0, r2, r3, r0
 800cbec:	2800      	cmp	r0, #0
 800cbee:	bfb8      	it	lt
 800cbf0:	18c0      	addlt	r0, r0, r3
 800cbf2:	285a      	cmp	r0, #90	@ 0x5a
 800cbf4:	4b09      	ldr	r3, [pc, #36]	@ (800cc1c <_ZN8touchgfx7CWRUtil4sineEi+0x3c>)
 800cbf6:	dc02      	bgt.n	800cbfe <_ZN8touchgfx7CWRUtil4sineEi+0x1e>
 800cbf8:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
 800cbfc:	4770      	bx	lr
 800cbfe:	28b4      	cmp	r0, #180	@ 0xb4
 800cc00:	dc02      	bgt.n	800cc08 <_ZN8touchgfx7CWRUtil4sineEi+0x28>
 800cc02:	f1c0 00b4 	rsb	r0, r0, #180	@ 0xb4
 800cc06:	e7f7      	b.n	800cbf8 <_ZN8touchgfx7CWRUtil4sineEi+0x18>
 800cc08:	f5b0 7f87 	cmp.w	r0, #270	@ 0x10e
 800cc0c:	bfd4      	ite	le
 800cc0e:	38b4      	suble	r0, #180	@ 0xb4
 800cc10:	f5c0 70b4 	rsbgt	r0, r0, #360	@ 0x168
 800cc14:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
 800cc18:	4240      	negs	r0, r0
 800cc1a:	4770      	bx	lr
 800cc1c:	08024b2c 	.word	0x08024b2c

0800cc20 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>:
 800cc20:	f44f 5334 	mov.w	r3, #11520	@ 0x2d00
 800cc24:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800cc26:	fb90 f2f3 	sdiv	r2, r0, r3
 800cc2a:	fb02 0013 	mls	r0, r2, r3, r0
 800cc2e:	2800      	cmp	r0, #0
 800cc30:	bfb8      	it	lt
 800cc32:	18c0      	addlt	r0, r0, r3
 800cc34:	1144      	asrs	r4, r0, #5
 800cc36:	f000 061f 	and.w	r6, r0, #31
 800cc3a:	4620      	mov	r0, r4
 800cc3c:	f7ff ffd0 	bl	800cbe0 <_ZN8touchgfx7CWRUtil4sineEi>
 800cc40:	4605      	mov	r5, r0
 800cc42:	b90e      	cbnz	r6, 800cc48 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E+0x28>
 800cc44:	b002      	add	sp, #8
 800cc46:	bd70      	pop	{r4, r5, r6, pc}
 800cc48:	1c60      	adds	r0, r4, #1
 800cc4a:	f7ff ffc9 	bl	800cbe0 <_ZN8touchgfx7CWRUtil4sineEi>
 800cc4e:	ab01      	add	r3, sp, #4
 800cc50:	2220      	movs	r2, #32
 800cc52:	4631      	mov	r1, r6
 800cc54:	1b40      	subs	r0, r0, r5
 800cc56:	f004 fb61 	bl	801131c <_ZN8touchgfx6muldivElllRl>
 800cc5a:	4428      	add	r0, r5
 800cc5c:	e7f2      	b.n	800cc44 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E+0x24>

0800cc5e <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>:
 800cc5e:	b508      	push	{r3, lr}
 800cc60:	f5c0 6034 	rsb	r0, r0, #2880	@ 0xb40
 800cc64:	f7ff ffdc 	bl	800cc20 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 800cc68:	bd08      	pop	{r3, pc}
	...

0800cc6c <_ZN8touchgfx6CircleC1Ev>:
 800cc6c:	b510      	push	{r4, lr}
 800cc6e:	4604      	mov	r4, r0
 800cc70:	f000 fd0a 	bl	800d688 <_ZN8touchgfx12CanvasWidgetC1Ev>
 800cc74:	4b08      	ldr	r3, [pc, #32]	@ (800cc98 <_ZN8touchgfx6CircleC1Ev+0x2c>)
 800cc76:	6023      	str	r3, [r4, #0]
 800cc78:	f44f 5234 	mov.w	r2, #11520	@ 0x2d00
 800cc7c:	2300      	movs	r3, #0
 800cc7e:	e9c4 230f 	strd	r2, r3, [r4, #60]	@ 0x3c
 800cc82:	f24b 4205 	movw	r2, #46085	@ 0xb405
 800cc86:	e9c4 330b 	strd	r3, r3, [r4, #44]	@ 0x2c
 800cc8a:	e9c4 330d 	strd	r3, r3, [r4, #52]	@ 0x34
 800cc8e:	f8a4 2044 	strh.w	r2, [r4, #68]	@ 0x44
 800cc92:	60a3      	str	r3, [r4, #8]
 800cc94:	4620      	mov	r0, r4
 800cc96:	bd10      	pop	{r4, pc}
 800cc98:	08024bec 	.word	0x08024bec

0800cc9c <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_>:
 800cc9c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800cca0:	428a      	cmp	r2, r1
 800cca2:	4680      	mov	r8, r0
 800cca4:	4610      	mov	r0, r2
 800cca6:	4699      	mov	r9, r3
 800cca8:	bfa6      	itte	ge
 800ccaa:	460a      	movge	r2, r1
 800ccac:	4603      	movge	r3, r0
 800ccae:	460b      	movlt	r3, r1
 800ccb0:	1a99      	subs	r1, r3, r2
 800ccb2:	b085      	sub	sp, #20
 800ccb4:	f5b1 5f34 	cmp.w	r1, #11520	@ 0x2d00
 800ccb8:	f8d8 4040 	ldr.w	r4, [r8, #64]	@ 0x40
 800ccbc:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 800ccbe:	bfa4      	itt	ge
 800ccc0:	f44f 5334 	movge.w	r3, #11520	@ 0x2d00
 800ccc4:	2200      	movge	r2, #0
 800ccc6:	e9dd 760e 	ldrd	r7, r6, [sp, #56]	@ 0x38
 800ccca:	9300      	str	r3, [sp, #0]
 800cccc:	f108 0a34 	add.w	sl, r8, #52	@ 0x34
 800ccd0:	f102 0b01 	add.w	fp, r2, #1
 800ccd4:	2c00      	cmp	r4, #0
 800ccd6:	f040 80af 	bne.w	800ce38 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x19c>
 800ccda:	4610      	mov	r0, r2
 800ccdc:	9201      	str	r2, [sp, #4]
 800ccde:	f7ff ff9f 	bl	800cc20 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 800cce2:	a903      	add	r1, sp, #12
 800cce4:	9003      	str	r0, [sp, #12]
 800cce6:	4650      	mov	r0, sl
 800cce8:	f7ff ff6e 	bl	800cbc8 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800ccec:	f8d8 102c 	ldr.w	r1, [r8, #44]	@ 0x2c
 800ccf0:	9a01      	ldr	r2, [sp, #4]
 800ccf2:	4408      	add	r0, r1
 800ccf4:	f8d9 1000 	ldr.w	r1, [r9]
 800ccf8:	4281      	cmp	r1, r0
 800ccfa:	bfc8      	it	gt
 800ccfc:	f8c9 0000 	strgt.w	r0, [r9]
 800cd00:	6839      	ldr	r1, [r7, #0]
 800cd02:	4288      	cmp	r0, r1
 800cd04:	bfc8      	it	gt
 800cd06:	6038      	strgt	r0, [r7, #0]
 800cd08:	4610      	mov	r0, r2
 800cd0a:	f7ff ffa8 	bl	800cc5e <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 800cd0e:	a903      	add	r1, sp, #12
 800cd10:	9003      	str	r0, [sp, #12]
 800cd12:	4650      	mov	r0, sl
 800cd14:	f7ff ff58 	bl	800cbc8 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800cd18:	f8d8 2030 	ldr.w	r2, [r8, #48]	@ 0x30
 800cd1c:	1a10      	subs	r0, r2, r0
 800cd1e:	6832      	ldr	r2, [r6, #0]
 800cd20:	4282      	cmp	r2, r0
 800cd22:	bfc8      	it	gt
 800cd24:	6030      	strgt	r0, [r6, #0]
 800cd26:	682a      	ldr	r2, [r5, #0]
 800cd28:	f44f 6134 	mov.w	r1, #2880	@ 0xb40
 800cd2c:	4290      	cmp	r0, r2
 800cd2e:	fb9b f2f1 	sdiv	r2, fp, r1
 800cd32:	fb01 b212 	mls	r2, r1, r2, fp
 800cd36:	eba1 0202 	sub.w	r2, r1, r2
 800cd3a:	bfc8      	it	gt
 800cd3c:	6028      	strgt	r0, [r5, #0]
 800cd3e:	fb92 f0f1 	sdiv	r0, r2, r1
 800cd42:	fb01 2210 	mls	r2, r1, r0, r2
 800cd46:	4493      	add	fp, r2
 800cd48:	9b00      	ldr	r3, [sp, #0]
 800cd4a:	455b      	cmp	r3, fp
 800cd4c:	db2a      	blt.n	800cda4 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x108>
 800cd4e:	4658      	mov	r0, fp
 800cd50:	f7ff ff66 	bl	800cc20 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 800cd54:	a903      	add	r1, sp, #12
 800cd56:	9003      	str	r0, [sp, #12]
 800cd58:	4650      	mov	r0, sl
 800cd5a:	f7ff ff35 	bl	800cbc8 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800cd5e:	f8d8 202c 	ldr.w	r2, [r8, #44]	@ 0x2c
 800cd62:	4410      	add	r0, r2
 800cd64:	f8d9 2000 	ldr.w	r2, [r9]
 800cd68:	4282      	cmp	r2, r0
 800cd6a:	bfc8      	it	gt
 800cd6c:	f8c9 0000 	strgt.w	r0, [r9]
 800cd70:	683a      	ldr	r2, [r7, #0]
 800cd72:	4290      	cmp	r0, r2
 800cd74:	bfc8      	it	gt
 800cd76:	6038      	strgt	r0, [r7, #0]
 800cd78:	4658      	mov	r0, fp
 800cd7a:	f7ff ff70 	bl	800cc5e <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 800cd7e:	a903      	add	r1, sp, #12
 800cd80:	9003      	str	r0, [sp, #12]
 800cd82:	4650      	mov	r0, sl
 800cd84:	f7ff ff20 	bl	800cbc8 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800cd88:	f8d8 2030 	ldr.w	r2, [r8, #48]	@ 0x30
 800cd8c:	1a10      	subs	r0, r2, r0
 800cd8e:	6832      	ldr	r2, [r6, #0]
 800cd90:	4282      	cmp	r2, r0
 800cd92:	bfc8      	it	gt
 800cd94:	6030      	strgt	r0, [r6, #0]
 800cd96:	682a      	ldr	r2, [r5, #0]
 800cd98:	4290      	cmp	r0, r2
 800cd9a:	bfc8      	it	gt
 800cd9c:	6028      	strgt	r0, [r5, #0]
 800cd9e:	f50b 6b34 	add.w	fp, fp, #2880	@ 0xb40
 800cda2:	e7d1      	b.n	800cd48 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0xac>
 800cda4:	9b00      	ldr	r3, [sp, #0]
 800cda6:	f5ab 6b34 	sub.w	fp, fp, #2880	@ 0xb40
 800cdaa:	455b      	cmp	r3, fp
 800cdac:	dd27      	ble.n	800cdfe <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x162>
 800cdae:	4618      	mov	r0, r3
 800cdb0:	f7ff ff36 	bl	800cc20 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 800cdb4:	a903      	add	r1, sp, #12
 800cdb6:	9003      	str	r0, [sp, #12]
 800cdb8:	4650      	mov	r0, sl
 800cdba:	f7ff ff05 	bl	800cbc8 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800cdbe:	f8d8 202c 	ldr.w	r2, [r8, #44]	@ 0x2c
 800cdc2:	4410      	add	r0, r2
 800cdc4:	f8d9 2000 	ldr.w	r2, [r9]
 800cdc8:	4282      	cmp	r2, r0
 800cdca:	bfc8      	it	gt
 800cdcc:	f8c9 0000 	strgt.w	r0, [r9]
 800cdd0:	683a      	ldr	r2, [r7, #0]
 800cdd2:	4290      	cmp	r0, r2
 800cdd4:	bfc8      	it	gt
 800cdd6:	6038      	strgt	r0, [r7, #0]
 800cdd8:	9800      	ldr	r0, [sp, #0]
 800cdda:	f7ff ff40 	bl	800cc5e <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 800cdde:	a903      	add	r1, sp, #12
 800cde0:	9003      	str	r0, [sp, #12]
 800cde2:	4650      	mov	r0, sl
 800cde4:	f7ff fef0 	bl	800cbc8 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800cde8:	f8d8 2030 	ldr.w	r2, [r8, #48]	@ 0x30
 800cdec:	1a10      	subs	r0, r2, r0
 800cdee:	6832      	ldr	r2, [r6, #0]
 800cdf0:	4282      	cmp	r2, r0
 800cdf2:	bfc8      	it	gt
 800cdf4:	6030      	strgt	r0, [r6, #0]
 800cdf6:	682a      	ldr	r2, [r5, #0]
 800cdf8:	4290      	cmp	r0, r2
 800cdfa:	bfc8      	it	gt
 800cdfc:	6028      	strgt	r0, [r5, #0]
 800cdfe:	f8d8 202c 	ldr.w	r2, [r8, #44]	@ 0x2c
 800ce02:	f8d9 1000 	ldr.w	r1, [r9]
 800ce06:	4291      	cmp	r1, r2
 800ce08:	bfc8      	it	gt
 800ce0a:	f8c9 2000 	strgt.w	r2, [r9]
 800ce0e:	683a      	ldr	r2, [r7, #0]
 800ce10:	f8d8 302c 	ldr.w	r3, [r8, #44]	@ 0x2c
 800ce14:	429a      	cmp	r2, r3
 800ce16:	bfb8      	it	lt
 800ce18:	603b      	strlt	r3, [r7, #0]
 800ce1a:	6832      	ldr	r2, [r6, #0]
 800ce1c:	f8d8 3030 	ldr.w	r3, [r8, #48]	@ 0x30
 800ce20:	429a      	cmp	r2, r3
 800ce22:	bfc8      	it	gt
 800ce24:	6033      	strgt	r3, [r6, #0]
 800ce26:	682a      	ldr	r2, [r5, #0]
 800ce28:	f8d8 3030 	ldr.w	r3, [r8, #48]	@ 0x30
 800ce2c:	429a      	cmp	r2, r3
 800ce2e:	da00      	bge.n	800ce32 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x196>
 800ce30:	602b      	str	r3, [r5, #0]
 800ce32:	b005      	add	sp, #20
 800ce34:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800ce38:	2002      	movs	r0, #2
 800ce3a:	3401      	adds	r4, #1
 800ce3c:	fb94 f4f0 	sdiv	r4, r4, r0
 800ce40:	4610      	mov	r0, r2
 800ce42:	9201      	str	r2, [sp, #4]
 800ce44:	f7ff feec 	bl	800cc20 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 800ce48:	a903      	add	r1, sp, #12
 800ce4a:	9003      	str	r0, [sp, #12]
 800ce4c:	4650      	mov	r0, sl
 800ce4e:	f7ff febb 	bl	800cbc8 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800ce52:	f8d8 102c 	ldr.w	r1, [r8, #44]	@ 0x2c
 800ce56:	9a01      	ldr	r2, [sp, #4]
 800ce58:	4408      	add	r0, r1
 800ce5a:	f8d9 1000 	ldr.w	r1, [r9]
 800ce5e:	1b03      	subs	r3, r0, r4
 800ce60:	4299      	cmp	r1, r3
 800ce62:	bfc8      	it	gt
 800ce64:	f8c9 3000 	strgt.w	r3, [r9]
 800ce68:	6839      	ldr	r1, [r7, #0]
 800ce6a:	428b      	cmp	r3, r1
 800ce6c:	bfc8      	it	gt
 800ce6e:	603b      	strgt	r3, [r7, #0]
 800ce70:	f8d9 1000 	ldr.w	r1, [r9]
 800ce74:	4420      	add	r0, r4
 800ce76:	4281      	cmp	r1, r0
 800ce78:	bfc8      	it	gt
 800ce7a:	f8c9 0000 	strgt.w	r0, [r9]
 800ce7e:	6839      	ldr	r1, [r7, #0]
 800ce80:	4288      	cmp	r0, r1
 800ce82:	bfc8      	it	gt
 800ce84:	6038      	strgt	r0, [r7, #0]
 800ce86:	4610      	mov	r0, r2
 800ce88:	f7ff fee9 	bl	800cc5e <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 800ce8c:	a903      	add	r1, sp, #12
 800ce8e:	9003      	str	r0, [sp, #12]
 800ce90:	4650      	mov	r0, sl
 800ce92:	f7ff fe99 	bl	800cbc8 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800ce96:	f8d8 2030 	ldr.w	r2, [r8, #48]	@ 0x30
 800ce9a:	1a10      	subs	r0, r2, r0
 800ce9c:	6832      	ldr	r2, [r6, #0]
 800ce9e:	1b01      	subs	r1, r0, r4
 800cea0:	428a      	cmp	r2, r1
 800cea2:	bfc8      	it	gt
 800cea4:	6031      	strgt	r1, [r6, #0]
 800cea6:	682a      	ldr	r2, [r5, #0]
 800cea8:	4291      	cmp	r1, r2
 800ceaa:	bfc8      	it	gt
 800ceac:	6029      	strgt	r1, [r5, #0]
 800ceae:	6832      	ldr	r2, [r6, #0]
 800ceb0:	4420      	add	r0, r4
 800ceb2:	4282      	cmp	r2, r0
 800ceb4:	bfc8      	it	gt
 800ceb6:	6030      	strgt	r0, [r6, #0]
 800ceb8:	682a      	ldr	r2, [r5, #0]
 800ceba:	f44f 6134 	mov.w	r1, #2880	@ 0xb40
 800cebe:	4290      	cmp	r0, r2
 800cec0:	fb9b f2f1 	sdiv	r2, fp, r1
 800cec4:	fb01 b212 	mls	r2, r1, r2, fp
 800cec8:	eba1 0202 	sub.w	r2, r1, r2
 800cecc:	bfc8      	it	gt
 800cece:	6028      	strgt	r0, [r5, #0]
 800ced0:	fb92 f0f1 	sdiv	r0, r2, r1
 800ced4:	fb01 2210 	mls	r2, r1, r0, r2
 800ced8:	4493      	add	fp, r2
 800ceda:	9b00      	ldr	r3, [sp, #0]
 800cedc:	455b      	cmp	r3, fp
 800cede:	db40      	blt.n	800cf62 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x2c6>
 800cee0:	4658      	mov	r0, fp
 800cee2:	f7ff fe9d 	bl	800cc20 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 800cee6:	a903      	add	r1, sp, #12
 800cee8:	9003      	str	r0, [sp, #12]
 800ceea:	4650      	mov	r0, sl
 800ceec:	f7ff fe6c 	bl	800cbc8 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800cef0:	f8d8 202c 	ldr.w	r2, [r8, #44]	@ 0x2c
 800cef4:	4410      	add	r0, r2
 800cef6:	f8d9 2000 	ldr.w	r2, [r9]
 800cefa:	1b01      	subs	r1, r0, r4
 800cefc:	428a      	cmp	r2, r1
 800cefe:	bfc8      	it	gt
 800cf00:	f8c9 1000 	strgt.w	r1, [r9]
 800cf04:	683a      	ldr	r2, [r7, #0]
 800cf06:	4291      	cmp	r1, r2
 800cf08:	bfc8      	it	gt
 800cf0a:	6039      	strgt	r1, [r7, #0]
 800cf0c:	f8d9 2000 	ldr.w	r2, [r9]
 800cf10:	4420      	add	r0, r4
 800cf12:	4282      	cmp	r2, r0
 800cf14:	bfc8      	it	gt
 800cf16:	f8c9 0000 	strgt.w	r0, [r9]
 800cf1a:	683a      	ldr	r2, [r7, #0]
 800cf1c:	4290      	cmp	r0, r2
 800cf1e:	bfc8      	it	gt
 800cf20:	6038      	strgt	r0, [r7, #0]
 800cf22:	4658      	mov	r0, fp
 800cf24:	f7ff fe9b 	bl	800cc5e <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 800cf28:	a903      	add	r1, sp, #12
 800cf2a:	9003      	str	r0, [sp, #12]
 800cf2c:	4650      	mov	r0, sl
 800cf2e:	f7ff fe4b 	bl	800cbc8 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800cf32:	f8d8 2030 	ldr.w	r2, [r8, #48]	@ 0x30
 800cf36:	1a10      	subs	r0, r2, r0
 800cf38:	6832      	ldr	r2, [r6, #0]
 800cf3a:	1b01      	subs	r1, r0, r4
 800cf3c:	428a      	cmp	r2, r1
 800cf3e:	bfc8      	it	gt
 800cf40:	6031      	strgt	r1, [r6, #0]
 800cf42:	682a      	ldr	r2, [r5, #0]
 800cf44:	4291      	cmp	r1, r2
 800cf46:	bfc8      	it	gt
 800cf48:	6029      	strgt	r1, [r5, #0]
 800cf4a:	6832      	ldr	r2, [r6, #0]
 800cf4c:	4420      	add	r0, r4
 800cf4e:	4282      	cmp	r2, r0
 800cf50:	bfc8      	it	gt
 800cf52:	6030      	strgt	r0, [r6, #0]
 800cf54:	682a      	ldr	r2, [r5, #0]
 800cf56:	4290      	cmp	r0, r2
 800cf58:	bfc8      	it	gt
 800cf5a:	6028      	strgt	r0, [r5, #0]
 800cf5c:	f50b 6b34 	add.w	fp, fp, #2880	@ 0xb40
 800cf60:	e7bb      	b.n	800ceda <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x23e>
 800cf62:	9b00      	ldr	r3, [sp, #0]
 800cf64:	f5ab 6b34 	sub.w	fp, fp, #2880	@ 0xb40
 800cf68:	455b      	cmp	r3, fp
 800cf6a:	f77f af62 	ble.w	800ce32 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x196>
 800cf6e:	4618      	mov	r0, r3
 800cf70:	f7ff fe56 	bl	800cc20 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 800cf74:	a903      	add	r1, sp, #12
 800cf76:	9003      	str	r0, [sp, #12]
 800cf78:	4650      	mov	r0, sl
 800cf7a:	f7ff fe25 	bl	800cbc8 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800cf7e:	f8d8 202c 	ldr.w	r2, [r8, #44]	@ 0x2c
 800cf82:	4410      	add	r0, r2
 800cf84:	f8d9 2000 	ldr.w	r2, [r9]
 800cf88:	1b01      	subs	r1, r0, r4
 800cf8a:	428a      	cmp	r2, r1
 800cf8c:	bfc8      	it	gt
 800cf8e:	f8c9 1000 	strgt.w	r1, [r9]
 800cf92:	683a      	ldr	r2, [r7, #0]
 800cf94:	4291      	cmp	r1, r2
 800cf96:	bfc8      	it	gt
 800cf98:	6039      	strgt	r1, [r7, #0]
 800cf9a:	f8d9 2000 	ldr.w	r2, [r9]
 800cf9e:	4420      	add	r0, r4
 800cfa0:	4282      	cmp	r2, r0
 800cfa2:	bfc8      	it	gt
 800cfa4:	f8c9 0000 	strgt.w	r0, [r9]
 800cfa8:	683b      	ldr	r3, [r7, #0]
 800cfaa:	4298      	cmp	r0, r3
 800cfac:	bfc8      	it	gt
 800cfae:	6038      	strgt	r0, [r7, #0]
 800cfb0:	9800      	ldr	r0, [sp, #0]
 800cfb2:	f7ff fe54 	bl	800cc5e <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 800cfb6:	a903      	add	r1, sp, #12
 800cfb8:	9003      	str	r0, [sp, #12]
 800cfba:	4650      	mov	r0, sl
 800cfbc:	f7ff fe04 	bl	800cbc8 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800cfc0:	f8d8 3030 	ldr.w	r3, [r8, #48]	@ 0x30
 800cfc4:	6832      	ldr	r2, [r6, #0]
 800cfc6:	1a18      	subs	r0, r3, r0
 800cfc8:	1b03      	subs	r3, r0, r4
 800cfca:	429a      	cmp	r2, r3
 800cfcc:	bfc8      	it	gt
 800cfce:	6033      	strgt	r3, [r6, #0]
 800cfd0:	682a      	ldr	r2, [r5, #0]
 800cfd2:	4293      	cmp	r3, r2
 800cfd4:	bfc8      	it	gt
 800cfd6:	602b      	strgt	r3, [r5, #0]
 800cfd8:	6833      	ldr	r3, [r6, #0]
 800cfda:	4404      	add	r4, r0
 800cfdc:	42a3      	cmp	r3, r4
 800cfde:	bfc8      	it	gt
 800cfe0:	6034      	strgt	r4, [r6, #0]
 800cfe2:	682b      	ldr	r3, [r5, #0]
 800cfe4:	429c      	cmp	r4, r3
 800cfe6:	bfc8      	it	gt
 800cfe8:	602c      	strgt	r4, [r5, #0]
 800cfea:	e722      	b.n	800ce32 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x196>

0800cfec <_ZNK8touchgfx6Circle14getMinimalRectENS_7CWRUtil2Q5ES2_>:
 800cfec:	b530      	push	{r4, r5, lr}
 800cfee:	4604      	mov	r4, r0
 800cff0:	4608      	mov	r0, r1
 800cff2:	4611      	mov	r1, r2
 800cff4:	461a      	mov	r2, r3
 800cff6:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 800cffa:	b089      	sub	sp, #36	@ 0x24
 800cffc:	015b      	lsls	r3, r3, #5
 800cffe:	9304      	str	r3, [sp, #16]
 800d000:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 800d004:	2500      	movs	r5, #0
 800d006:	015b      	lsls	r3, r3, #5
 800d008:	e9cd 3506 	strd	r3, r5, [sp, #24]
 800d00c:	ab07      	add	r3, sp, #28
 800d00e:	9302      	str	r3, [sp, #8]
 800d010:	ab06      	add	r3, sp, #24
 800d012:	9301      	str	r3, [sp, #4]
 800d014:	ab05      	add	r3, sp, #20
 800d016:	9300      	str	r3, [sp, #0]
 800d018:	ab04      	add	r3, sp, #16
 800d01a:	9505      	str	r5, [sp, #20]
 800d01c:	f7ff fe3e 	bl	800cc9c <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_>
 800d020:	2520      	movs	r5, #32
 800d022:	9a04      	ldr	r2, [sp, #16]
 800d024:	9805      	ldr	r0, [sp, #20]
 800d026:	fb92 f2f5 	sdiv	r2, r2, r5
 800d02a:	fb90 f0f5 	sdiv	r0, r0, r5
 800d02e:	b292      	uxth	r2, r2
 800d030:	3002      	adds	r0, #2
 800d032:	1a80      	subs	r0, r0, r2
 800d034:	9b06      	ldr	r3, [sp, #24]
 800d036:	9907      	ldr	r1, [sp, #28]
 800d038:	fb93 f3f5 	sdiv	r3, r3, r5
 800d03c:	fb91 f1f5 	sdiv	r1, r1, r5
 800d040:	b29b      	uxth	r3, r3
 800d042:	3102      	adds	r1, #2
 800d044:	1ac9      	subs	r1, r1, r3
 800d046:	3a01      	subs	r2, #1
 800d048:	3b01      	subs	r3, #1
 800d04a:	80a0      	strh	r0, [r4, #4]
 800d04c:	4620      	mov	r0, r4
 800d04e:	8022      	strh	r2, [r4, #0]
 800d050:	8063      	strh	r3, [r4, #2]
 800d052:	80e1      	strh	r1, [r4, #6]
 800d054:	b009      	add	sp, #36	@ 0x24
 800d056:	bd30      	pop	{r4, r5, pc}

0800d058 <_ZNK8touchgfx6Circle14getMinimalRectEv>:
 800d058:	b510      	push	{r4, lr}
 800d05a:	e9d1 230e 	ldrd	r2, r3, [r1, #56]	@ 0x38
 800d05e:	4604      	mov	r4, r0
 800d060:	f7ff ffc4 	bl	800cfec <_ZNK8touchgfx6Circle14getMinimalRectENS_7CWRUtil2Q5ES2_>
 800d064:	4620      	mov	r0, r4
 800d066:	bd10      	pop	{r4, pc}

0800d068 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE>:
 800d068:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d06c:	e9d0 650e 	ldrd	r6, r5, [r0, #56]	@ 0x38
 800d070:	42b5      	cmp	r5, r6
 800d072:	bfa2      	ittt	ge
 800d074:	462b      	movge	r3, r5
 800d076:	4635      	movge	r5, r6
 800d078:	461e      	movge	r6, r3
 800d07a:	1b73      	subs	r3, r6, r5
 800d07c:	468a      	mov	sl, r1
 800d07e:	6c01      	ldr	r1, [r0, #64]	@ 0x40
 800d080:	f9b0 902c 	ldrsh.w	r9, [r0, #44]	@ 0x2c
 800d084:	f9b0 b030 	ldrsh.w	fp, [r0, #48]	@ 0x30
 800d088:	6b42      	ldr	r2, [r0, #52]	@ 0x34
 800d08a:	f5b3 5f34 	cmp.w	r3, #11520	@ 0x2d00
 800d08e:	b0af      	sub	sp, #188	@ 0xbc
 800d090:	f04f 0320 	mov.w	r3, #32
 800d094:	4604      	mov	r4, r0
 800d096:	bfa4      	itt	ge
 800d098:	f44f 5634 	movge.w	r6, #11520	@ 0x2d00
 800d09c:	2500      	movge	r5, #0
 800d09e:	fb99 f9f3 	sdiv	r9, r9, r3
 800d0a2:	fb9b fbf3 	sdiv	fp, fp, r3
 800d0a6:	2900      	cmp	r1, #0
 800d0a8:	f000 80ff 	beq.w	800d2aa <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x242>
 800d0ac:	f9ba 0000 	ldrsh.w	r0, [sl]
 800d0b0:	f9ba 3002 	ldrsh.w	r3, [sl, #2]
 800d0b4:	eba9 0700 	sub.w	r7, r9, r0
 800d0b8:	ea87 7ce7 	eor.w	ip, r7, r7, asr #31
 800d0bc:	ebac 7ce7 	sub.w	ip, ip, r7, asr #31
 800d0c0:	f8ba 7004 	ldrh.w	r7, [sl, #4]
 800d0c4:	ebab 0803 	sub.w	r8, fp, r3
 800d0c8:	4407      	add	r7, r0
 800d0ca:	ea88 70e8 	eor.w	r0, r8, r8, asr #31
 800d0ce:	eba0 70e8 	sub.w	r0, r0, r8, asr #31
 800d0d2:	f8ba 8006 	ldrh.w	r8, [sl, #6]
 800d0d6:	b23f      	sxth	r7, r7
 800d0d8:	4498      	add	r8, r3
 800d0da:	eba9 0707 	sub.w	r7, r9, r7
 800d0de:	fa0f f888 	sxth.w	r8, r8
 800d0e2:	ebab 0808 	sub.w	r8, fp, r8
 800d0e6:	2f00      	cmp	r7, #0
 800d0e8:	bfb8      	it	lt
 800d0ea:	427f      	neglt	r7, r7
 800d0ec:	f1b8 0f00 	cmp.w	r8, #0
 800d0f0:	bfb8      	it	lt
 800d0f2:	f1c8 0800 	rsblt	r8, r8, #0
 800d0f6:	45bc      	cmp	ip, r7
 800d0f8:	bfcc      	ite	gt
 800d0fa:	f10c 0701 	addgt.w	r7, ip, #1
 800d0fe:	3701      	addle	r7, #1
 800d100:	4540      	cmp	r0, r8
 800d102:	bfc8      	it	gt
 800d104:	f100 0801 	addgt.w	r8, r0, #1
 800d108:	f894 0044 	ldrb.w	r0, [r4, #68]	@ 0x44
 800d10c:	f100 0001 	add.w	r0, r0, #1
 800d110:	ea4f 0060 	mov.w	r0, r0, asr #1
 800d114:	f04f 0302 	mov.w	r3, #2
 800d118:	f1c0 005a 	rsb	r0, r0, #90	@ 0x5a
 800d11c:	fb91 f1f3 	sdiv	r1, r1, r3
 800d120:	eba2 0201 	sub.w	r2, r2, r1
 800d124:	bfd8      	it	le
 800d126:	f108 0801 	addle.w	r8, r8, #1
 800d12a:	9303      	str	r3, [sp, #12]
 800d12c:	920f      	str	r2, [sp, #60]	@ 0x3c
 800d12e:	f7ff fd57 	bl	800cbe0 <_ZN8touchgfx7CWRUtil4sineEi>
 800d132:	a92e      	add	r1, sp, #184	@ 0xb8
 800d134:	fb08 f808 	mul.w	r8, r8, r8
 800d138:	f841 0d74 	str.w	r0, [r1, #-116]!
 800d13c:	a80f      	add	r0, sp, #60	@ 0x3c
 800d13e:	f7ff fd43 	bl	800cbc8 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800d142:	fb07 8707 	mla	r7, r7, r7, r8
 800d146:	f04f 0c20 	mov.w	ip, #32
 800d14a:	fb90 f0fc 	sdiv	r0, r0, ip
 800d14e:	4340      	muls	r0, r0
 800d150:	4287      	cmp	r7, r0
 800d152:	9b03      	ldr	r3, [sp, #12]
 800d154:	da04      	bge.n	800d160 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0xf8>
 800d156:	2401      	movs	r4, #1
 800d158:	4620      	mov	r0, r4
 800d15a:	b02f      	add	sp, #188	@ 0xbc
 800d15c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800d160:	6b60      	ldr	r0, [r4, #52]	@ 0x34
 800d162:	6c21      	ldr	r1, [r4, #64]	@ 0x40
 800d164:	fb91 f2f3 	sdiv	r2, r1, r3
 800d168:	4402      	add	r2, r0
 800d16a:	fb92 f2fc 	sdiv	r2, r2, ip
 800d16e:	f9ba 1000 	ldrsh.w	r1, [sl]
 800d172:	f8ba 3004 	ldrh.w	r3, [sl, #4]
 800d176:	440b      	add	r3, r1
 800d178:	b21b      	sxth	r3, r3
 800d17a:	454b      	cmp	r3, r9
 800d17c:	bfa8      	it	ge
 800d17e:	464b      	movge	r3, r9
 800d180:	428b      	cmp	r3, r1
 800d182:	bfac      	ite	ge
 800d184:	eba9 0903 	subge.w	r9, r9, r3
 800d188:	eba9 0901 	sublt.w	r9, r9, r1
 800d18c:	f8ba 3006 	ldrh.w	r3, [sl, #6]
 800d190:	f9ba 1002 	ldrsh.w	r1, [sl, #2]
 800d194:	440b      	add	r3, r1
 800d196:	b21b      	sxth	r3, r3
 800d198:	455b      	cmp	r3, fp
 800d19a:	bfa8      	it	ge
 800d19c:	465b      	movge	r3, fp
 800d19e:	428b      	cmp	r3, r1
 800d1a0:	bfac      	ite	ge
 800d1a2:	ebab 0b03 	subge.w	fp, fp, r3
 800d1a6:	ebab 0b01 	sublt.w	fp, fp, r1
 800d1aa:	3201      	adds	r2, #1
 800d1ac:	fb0b fb0b 	mul.w	fp, fp, fp
 800d1b0:	fb09 b909 	mla	r9, r9, r9, fp
 800d1b4:	4352      	muls	r2, r2
 800d1b6:	4591      	cmp	r9, r2
 800d1b8:	dccd      	bgt.n	800d156 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0xee>
 800d1ba:	f10d 093c 	add.w	r9, sp, #60	@ 0x3c
 800d1be:	4621      	mov	r1, r4
 800d1c0:	4648      	mov	r0, r9
 800d1c2:	6aa7      	ldr	r7, [r4, #40]	@ 0x28
 800d1c4:	f003 fbf0 	bl	80109a8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800d1c8:	6823      	ldr	r3, [r4, #0]
 800d1ca:	4620      	mov	r0, r4
 800d1cc:	6e5b      	ldr	r3, [r3, #100]	@ 0x64
 800d1ce:	4798      	blx	r3
 800d1d0:	4653      	mov	r3, sl
 800d1d2:	9000      	str	r0, [sp, #0]
 800d1d4:	464a      	mov	r2, r9
 800d1d6:	4639      	mov	r1, r7
 800d1d8:	a811      	add	r0, sp, #68	@ 0x44
 800d1da:	f013 ffc9 	bl	8021170 <_ZN8touchgfx6CanvasC1EPKNS_15AbstractPainterERKNS_4RectES6_h>
 800d1de:	6b62      	ldr	r2, [r4, #52]	@ 0x34
 800d1e0:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 800d1e2:	920b      	str	r2, [sp, #44]	@ 0x2c
 800d1e4:	ebb3 0f42 	cmp.w	r3, r2, lsl #1
 800d1e8:	930c      	str	r3, [sp, #48]	@ 0x30
 800d1ea:	dd07      	ble.n	800d1fc <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x194>
 800d1ec:	2102      	movs	r1, #2
 800d1ee:	fb93 f3f1 	sdiv	r3, r3, r1
 800d1f2:	4413      	add	r3, r2
 800d1f4:	930c      	str	r3, [sp, #48]	@ 0x30
 800d1f6:	fb93 f3f1 	sdiv	r3, r3, r1
 800d1fa:	930b      	str	r3, [sp, #44]	@ 0x2c
 800d1fc:	e9dd 230b 	ldrd	r2, r3, [sp, #44]	@ 0x2c
 800d200:	4628      	mov	r0, r5
 800d202:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 800d206:	930d      	str	r3, [sp, #52]	@ 0x34
 800d208:	f894 7044 	ldrb.w	r7, [r4, #68]	@ 0x44
 800d20c:	f7ff fd08 	bl	800cc20 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 800d210:	4649      	mov	r1, r9
 800d212:	900f      	str	r0, [sp, #60]	@ 0x3c
 800d214:	a80d      	add	r0, sp, #52	@ 0x34
 800d216:	f7ff fcd7 	bl	800cbc8 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800d21a:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 800d21c:	f04f 0a02 	mov.w	sl, #2
 800d220:	fb90 f0fa 	sdiv	r0, r0, sl
 800d224:	eb00 0b03 	add.w	fp, r0, r3
 800d228:	4628      	mov	r0, r5
 800d22a:	f7ff fd18 	bl	800cc5e <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 800d22e:	f10d 08b8 	add.w	r8, sp, #184	@ 0xb8
 800d232:	017f      	lsls	r7, r7, #5
 800d234:	f848 0d80 	str.w	r0, [r8, #-128]!
 800d238:	a80d      	add	r0, sp, #52	@ 0x34
 800d23a:	4641      	mov	r1, r8
 800d23c:	f7ff fcc4 	bl	800cbc8 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800d240:	6b22      	ldr	r2, [r4, #48]	@ 0x30
 800d242:	fb90 f0fa 	sdiv	r0, r0, sl
 800d246:	4659      	mov	r1, fp
 800d248:	1a12      	subs	r2, r2, r0
 800d24a:	a811      	add	r0, sp, #68	@ 0x44
 800d24c:	f014 f8dc 	bl	8021408 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>
 800d250:	f105 0a20 	add.w	sl, r5, #32
 800d254:	bb67      	cbnz	r7, 800d2b0 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x248>
 800d256:	46ab      	mov	fp, r5
 800d258:	45b2      	cmp	sl, r6
 800d25a:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 800d25c:	dc33      	bgt.n	800d2c6 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x25e>
 800d25e:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 800d260:	4650      	mov	r0, sl
 800d262:	eb02 0241 	add.w	r2, r2, r1, lsl #1
 800d266:	920d      	str	r2, [sp, #52]	@ 0x34
 800d268:	f7ff fcda 	bl	800cc20 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 800d26c:	4641      	mov	r1, r8
 800d26e:	900e      	str	r0, [sp, #56]	@ 0x38
 800d270:	a80d      	add	r0, sp, #52	@ 0x34
 800d272:	f7ff fca9 	bl	800cbc8 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800d276:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
 800d278:	2302      	movs	r3, #2
 800d27a:	fb90 f0f3 	sdiv	r0, r0, r3
 800d27e:	eb00 0b02 	add.w	fp, r0, r2
 800d282:	4650      	mov	r0, sl
 800d284:	f7ff fceb 	bl	800cc5e <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 800d288:	4649      	mov	r1, r9
 800d28a:	900f      	str	r0, [sp, #60]	@ 0x3c
 800d28c:	a80d      	add	r0, sp, #52	@ 0x34
 800d28e:	f7ff fc9b 	bl	800cbc8 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800d292:	6b22      	ldr	r2, [r4, #48]	@ 0x30
 800d294:	2302      	movs	r3, #2
 800d296:	4659      	mov	r1, fp
 800d298:	fb90 f0f3 	sdiv	r0, r0, r3
 800d29c:	1a12      	subs	r2, r2, r0
 800d29e:	a811      	add	r0, sp, #68	@ 0x44
 800d2a0:	46d3      	mov	fp, sl
 800d2a2:	f014 f8fe 	bl	80214a2 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 800d2a6:	44ba      	add	sl, r7
 800d2a8:	e7d6      	b.n	800d258 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x1f0>
 800d2aa:	fb92 f2f3 	sdiv	r2, r2, r3
 800d2ae:	e75e      	b.n	800d16e <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x106>
 800d2b0:	fb9a f2f7 	sdiv	r2, sl, r7
 800d2b4:	fb07 a212 	mls	r2, r7, r2, sl
 800d2b8:	1aba      	subs	r2, r7, r2
 800d2ba:	fb92 f1f7 	sdiv	r1, r2, r7
 800d2be:	fb07 2211 	mls	r2, r7, r1, r2
 800d2c2:	4492      	add	sl, r2
 800d2c4:	e7c7      	b.n	800d256 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x1ee>
 800d2c6:	455e      	cmp	r6, fp
 800d2c8:	dd23      	ble.n	800d312 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2aa>
 800d2ca:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 800d2cc:	4630      	mov	r0, r6
 800d2ce:	eb02 0243 	add.w	r2, r2, r3, lsl #1
 800d2d2:	920d      	str	r2, [sp, #52]	@ 0x34
 800d2d4:	f7ff fca4 	bl	800cc20 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 800d2d8:	4641      	mov	r1, r8
 800d2da:	900e      	str	r0, [sp, #56]	@ 0x38
 800d2dc:	a80d      	add	r0, sp, #52	@ 0x34
 800d2de:	f7ff fc73 	bl	800cbc8 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800d2e2:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 800d2e4:	f04f 0a02 	mov.w	sl, #2
 800d2e8:	fb90 f0fa 	sdiv	r0, r0, sl
 800d2ec:	4403      	add	r3, r0
 800d2ee:	4630      	mov	r0, r6
 800d2f0:	9303      	str	r3, [sp, #12]
 800d2f2:	f7ff fcb4 	bl	800cc5e <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 800d2f6:	4649      	mov	r1, r9
 800d2f8:	900f      	str	r0, [sp, #60]	@ 0x3c
 800d2fa:	a80d      	add	r0, sp, #52	@ 0x34
 800d2fc:	f7ff fc64 	bl	800cbc8 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800d300:	6b22      	ldr	r2, [r4, #48]	@ 0x30
 800d302:	9b03      	ldr	r3, [sp, #12]
 800d304:	fb90 f0fa 	sdiv	r0, r0, sl
 800d308:	4619      	mov	r1, r3
 800d30a:	1a12      	subs	r2, r2, r0
 800d30c:	a811      	add	r0, sp, #68	@ 0x44
 800d30e:	f014 f8c8 	bl	80214a2 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 800d312:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 800d314:	b99b      	cbnz	r3, 800d33e <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2d6>
 800d316:	1b75      	subs	r5, r6, r5
 800d318:	f5b5 5f34 	cmp.w	r5, #11520	@ 0x2d00
 800d31c:	da04      	bge.n	800d328 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2c0>
 800d31e:	e9d4 120b 	ldrd	r1, r2, [r4, #44]	@ 0x2c
 800d322:	a811      	add	r0, sp, #68	@ 0x44
 800d324:	f014 f8bd 	bl	80214a2 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 800d328:	21ff      	movs	r1, #255	@ 0xff
 800d32a:	a811      	add	r0, sp, #68	@ 0x44
 800d32c:	f013 ffb4 	bl	8021298 <_ZN8touchgfx6Canvas6renderEh>
 800d330:	4604      	mov	r4, r0
 800d332:	4b8a      	ldr	r3, [pc, #552]	@ (800d55c <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x4f4>)
 800d334:	9311      	str	r3, [sp, #68]	@ 0x44
 800d336:	a816      	add	r0, sp, #88	@ 0x58
 800d338:	f000 fa00 	bl	800d73c <_ZN8touchgfx7OutlineD1Ev>
 800d33c:	e70c      	b.n	800d158 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0xf0>
 800d33e:	e9dd 2317 	ldrd	r2, r3, [sp, #92]	@ 0x5c
 800d342:	429a      	cmp	r2, r3
 800d344:	f0c0 8107 	bcc.w	800d556 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x4ee>
 800d348:	1b73      	subs	r3, r6, r5
 800d34a:	f894 a045 	ldrb.w	sl, [r4, #69]	@ 0x45
 800d34e:	9303      	str	r3, [sp, #12]
 800d350:	f5b3 5f34 	cmp.w	r3, #11520	@ 0x2d00
 800d354:	ea4f 1a4a 	mov.w	sl, sl, lsl #5
 800d358:	da43      	bge.n	800d3e2 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x37a>
 800d35a:	4630      	mov	r0, r6
 800d35c:	f7ff fc60 	bl	800cc20 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 800d360:	4649      	mov	r1, r9
 800d362:	900f      	str	r0, [sp, #60]	@ 0x3c
 800d364:	a80b      	add	r0, sp, #44	@ 0x2c
 800d366:	f7ff fc2f 	bl	800cbc8 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800d36a:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 800d36c:	18c3      	adds	r3, r0, r3
 800d36e:	4630      	mov	r0, r6
 800d370:	9305      	str	r3, [sp, #20]
 800d372:	f7ff fc74 	bl	800cc5e <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 800d376:	4649      	mov	r1, r9
 800d378:	900f      	str	r0, [sp, #60]	@ 0x3c
 800d37a:	a80b      	add	r0, sp, #44	@ 0x2c
 800d37c:	f7ff fc24 	bl	800cbc8 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800d380:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 800d382:	f506 52b4 	add.w	r2, r6, #5760	@ 0x1680
 800d386:	1a1b      	subs	r3, r3, r0
 800d388:	9304      	str	r3, [sp, #16]
 800d38a:	9206      	str	r2, [sp, #24]
 800d38c:	eb06 030a 	add.w	r3, r6, sl
 800d390:	9a06      	ldr	r2, [sp, #24]
 800d392:	4293      	cmp	r3, r2
 800d394:	da25      	bge.n	800d3e2 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x37a>
 800d396:	4618      	mov	r0, r3
 800d398:	9308      	str	r3, [sp, #32]
 800d39a:	f7ff fc41 	bl	800cc20 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 800d39e:	4649      	mov	r1, r9
 800d3a0:	900f      	str	r0, [sp, #60]	@ 0x3c
 800d3a2:	a80c      	add	r0, sp, #48	@ 0x30
 800d3a4:	f7ff fc10 	bl	800cbc8 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800d3a8:	9b05      	ldr	r3, [sp, #20]
 800d3aa:	2202      	movs	r2, #2
 800d3ac:	fb90 f0f2 	sdiv	r0, r0, r2
 800d3b0:	18c3      	adds	r3, r0, r3
 800d3b2:	9307      	str	r3, [sp, #28]
 800d3b4:	9b08      	ldr	r3, [sp, #32]
 800d3b6:	9209      	str	r2, [sp, #36]	@ 0x24
 800d3b8:	4618      	mov	r0, r3
 800d3ba:	f7ff fc50 	bl	800cc5e <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 800d3be:	a92e      	add	r1, sp, #184	@ 0xb8
 800d3c0:	f841 0d80 	str.w	r0, [r1, #-128]!
 800d3c4:	a80c      	add	r0, sp, #48	@ 0x30
 800d3c6:	f7ff fbff 	bl	800cbc8 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800d3ca:	9b04      	ldr	r3, [sp, #16]
 800d3cc:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 800d3ce:	9907      	ldr	r1, [sp, #28]
 800d3d0:	fb90 f2f2 	sdiv	r2, r0, r2
 800d3d4:	a811      	add	r0, sp, #68	@ 0x44
 800d3d6:	1a9a      	subs	r2, r3, r2
 800d3d8:	f014 f863 	bl	80214a2 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 800d3dc:	9b08      	ldr	r3, [sp, #32]
 800d3de:	4453      	add	r3, sl
 800d3e0:	e7d6      	b.n	800d390 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x328>
 800d3e2:	455e      	cmp	r6, fp
 800d3e4:	dd25      	ble.n	800d432 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x3ca>
 800d3e6:	e9dd 230b 	ldrd	r2, r3, [sp, #44]	@ 0x2c
 800d3ea:	4630      	mov	r0, r6
 800d3ec:	ebc3 0342 	rsb	r3, r3, r2, lsl #1
 800d3f0:	930d      	str	r3, [sp, #52]	@ 0x34
 800d3f2:	f7ff fc15 	bl	800cc20 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 800d3f6:	4641      	mov	r1, r8
 800d3f8:	900e      	str	r0, [sp, #56]	@ 0x38
 800d3fa:	a80d      	add	r0, sp, #52	@ 0x34
 800d3fc:	f7ff fbe4 	bl	800cbc8 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800d400:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 800d402:	2202      	movs	r2, #2
 800d404:	fb90 f0f2 	sdiv	r0, r0, r2
 800d408:	eb00 0903 	add.w	r9, r0, r3
 800d40c:	4630      	mov	r0, r6
 800d40e:	9204      	str	r2, [sp, #16]
 800d410:	f7ff fc25 	bl	800cc5e <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 800d414:	a92e      	add	r1, sp, #184	@ 0xb8
 800d416:	f841 0d7c 	str.w	r0, [r1, #-124]!
 800d41a:	a80d      	add	r0, sp, #52	@ 0x34
 800d41c:	f7ff fbd4 	bl	800cbc8 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800d420:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 800d422:	9a04      	ldr	r2, [sp, #16]
 800d424:	fb90 f2f2 	sdiv	r2, r0, r2
 800d428:	4649      	mov	r1, r9
 800d42a:	1a9a      	subs	r2, r3, r2
 800d42c:	a811      	add	r0, sp, #68	@ 0x44
 800d42e:	f014 f838 	bl	80214a2 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 800d432:	46d9      	mov	r9, fp
 800d434:	2602      	movs	r6, #2
 800d436:	45a9      	cmp	r9, r5
 800d438:	db25      	blt.n	800d486 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x41e>
 800d43a:	e9dd 230b 	ldrd	r2, r3, [sp, #44]	@ 0x2c
 800d43e:	4648      	mov	r0, r9
 800d440:	ebc3 0342 	rsb	r3, r3, r2, lsl #1
 800d444:	930d      	str	r3, [sp, #52]	@ 0x34
 800d446:	f7ff fbeb 	bl	800cc20 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 800d44a:	4641      	mov	r1, r8
 800d44c:	900e      	str	r0, [sp, #56]	@ 0x38
 800d44e:	a80d      	add	r0, sp, #52	@ 0x34
 800d450:	f7ff fbba 	bl	800cbc8 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800d454:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 800d456:	fb90 f0f6 	sdiv	r0, r0, r6
 800d45a:	eb00 0b03 	add.w	fp, r0, r3
 800d45e:	4648      	mov	r0, r9
 800d460:	f7ff fbfd 	bl	800cc5e <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 800d464:	a90f      	add	r1, sp, #60	@ 0x3c
 800d466:	900f      	str	r0, [sp, #60]	@ 0x3c
 800d468:	a80d      	add	r0, sp, #52	@ 0x34
 800d46a:	f7ff fbad 	bl	800cbc8 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800d46e:	6b22      	ldr	r2, [r4, #48]	@ 0x30
 800d470:	fb90 f0f6 	sdiv	r0, r0, r6
 800d474:	4659      	mov	r1, fp
 800d476:	1a12      	subs	r2, r2, r0
 800d478:	a811      	add	r0, sp, #68	@ 0x44
 800d47a:	46cb      	mov	fp, r9
 800d47c:	f014 f811 	bl	80214a2 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 800d480:	eba9 0907 	sub.w	r9, r9, r7
 800d484:	e7d7      	b.n	800d436 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x3ce>
 800d486:	455d      	cmp	r5, fp
 800d488:	da22      	bge.n	800d4d0 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x468>
 800d48a:	e9dd 230b 	ldrd	r2, r3, [sp, #44]	@ 0x2c
 800d48e:	4628      	mov	r0, r5
 800d490:	ebc3 0342 	rsb	r3, r3, r2, lsl #1
 800d494:	930d      	str	r3, [sp, #52]	@ 0x34
 800d496:	f7ff fbc3 	bl	800cc20 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 800d49a:	4641      	mov	r1, r8
 800d49c:	900e      	str	r0, [sp, #56]	@ 0x38
 800d49e:	a80d      	add	r0, sp, #52	@ 0x34
 800d4a0:	f7ff fb92 	bl	800cbc8 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800d4a4:	6ae7      	ldr	r7, [r4, #44]	@ 0x2c
 800d4a6:	2602      	movs	r6, #2
 800d4a8:	fb90 f0f6 	sdiv	r0, r0, r6
 800d4ac:	4407      	add	r7, r0
 800d4ae:	4628      	mov	r0, r5
 800d4b0:	f7ff fbd5 	bl	800cc5e <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 800d4b4:	a92e      	add	r1, sp, #184	@ 0xb8
 800d4b6:	f841 0d7c 	str.w	r0, [r1, #-124]!
 800d4ba:	a80d      	add	r0, sp, #52	@ 0x34
 800d4bc:	f7ff fb84 	bl	800cbc8 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800d4c0:	6b22      	ldr	r2, [r4, #48]	@ 0x30
 800d4c2:	fb90 f0f6 	sdiv	r0, r0, r6
 800d4c6:	4639      	mov	r1, r7
 800d4c8:	1a12      	subs	r2, r2, r0
 800d4ca:	a811      	add	r0, sp, #68	@ 0x44
 800d4cc:	f013 ffe9 	bl	80214a2 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 800d4d0:	9b03      	ldr	r3, [sp, #12]
 800d4d2:	f5b3 5f34 	cmp.w	r3, #11520	@ 0x2d00
 800d4d6:	f6bf af27 	bge.w	800d328 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2c0>
 800d4da:	4628      	mov	r0, r5
 800d4dc:	f7ff fba0 	bl	800cc20 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 800d4e0:	ae2e      	add	r6, sp, #184	@ 0xb8
 800d4e2:	f04f 0b02 	mov.w	fp, #2
 800d4e6:	f846 0d7c 	str.w	r0, [r6, #-124]!
 800d4ea:	a80b      	add	r0, sp, #44	@ 0x2c
 800d4ec:	4631      	mov	r1, r6
 800d4ee:	f7ff fb6b 	bl	800cbc8 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800d4f2:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 800d4f4:	eb00 0903 	add.w	r9, r0, r3
 800d4f8:	4628      	mov	r0, r5
 800d4fa:	f7ff fbb0 	bl	800cc5e <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 800d4fe:	4631      	mov	r1, r6
 800d500:	900f      	str	r0, [sp, #60]	@ 0x3c
 800d502:	a80b      	add	r0, sp, #44	@ 0x2c
 800d504:	f7ff fb60 	bl	800cbc8 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800d508:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 800d50a:	f5a5 54b4 	sub.w	r4, r5, #5760	@ 0x1680
 800d50e:	eba3 0800 	sub.w	r8, r3, r0
 800d512:	4454      	add	r4, sl
 800d514:	42a5      	cmp	r5, r4
 800d516:	f77f af07 	ble.w	800d328 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2c0>
 800d51a:	4620      	mov	r0, r4
 800d51c:	f7ff fb80 	bl	800cc20 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 800d520:	4631      	mov	r1, r6
 800d522:	900f      	str	r0, [sp, #60]	@ 0x3c
 800d524:	a80c      	add	r0, sp, #48	@ 0x30
 800d526:	f7ff fb4f 	bl	800cbc8 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800d52a:	fb90 f0fb 	sdiv	r0, r0, fp
 800d52e:	eb00 0709 	add.w	r7, r0, r9
 800d532:	4620      	mov	r0, r4
 800d534:	f7ff fb93 	bl	800cc5e <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 800d538:	a90e      	add	r1, sp, #56	@ 0x38
 800d53a:	900e      	str	r0, [sp, #56]	@ 0x38
 800d53c:	a80c      	add	r0, sp, #48	@ 0x30
 800d53e:	f7ff fb43 	bl	800cbc8 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800d542:	4639      	mov	r1, r7
 800d544:	fb90 f2fb 	sdiv	r2, r0, fp
 800d548:	a811      	add	r0, sp, #68	@ 0x44
 800d54a:	eba8 0202 	sub.w	r2, r8, r2
 800d54e:	f013 ffa8 	bl	80214a2 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 800d552:	4454      	add	r4, sl
 800d554:	e7de      	b.n	800d514 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x4ac>
 800d556:	2400      	movs	r4, #0
 800d558:	e6eb      	b.n	800d332 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2ca>
 800d55a:	bf00      	nop
 800d55c:	08025188 	.word	0x08025188

0800d560 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE>:
 800d560:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800d562:	6803      	ldr	r3, [r0, #0]
 800d564:	460d      	mov	r5, r1
 800d566:	4604      	mov	r4, r0
 800d568:	4601      	mov	r1, r0
 800d56a:	6e9b      	ldr	r3, [r3, #104]	@ 0x68
 800d56c:	a802      	add	r0, sp, #8
 800d56e:	4798      	blx	r3
 800d570:	6828      	ldr	r0, [r5, #0]
 800d572:	6869      	ldr	r1, [r5, #4]
 800d574:	466b      	mov	r3, sp
 800d576:	c303      	stmia	r3!, {r0, r1}
 800d578:	4668      	mov	r0, sp
 800d57a:	4619      	mov	r1, r3
 800d57c:	f7fc feb6 	bl	800a2ec <_ZN8touchgfx4RectaNERKS0_>
 800d580:	6aa0      	ldr	r0, [r4, #40]	@ 0x28
 800d582:	b188      	cbz	r0, 800d5a8 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 800d584:	6803      	ldr	r3, [r0, #0]
 800d586:	1d21      	adds	r1, r4, #4
 800d588:	68db      	ldr	r3, [r3, #12]
 800d58a:	4798      	blx	r3
 800d58c:	b160      	cbz	r0, 800d5a8 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 800d58e:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 800d592:	2b00      	cmp	r3, #0
 800d594:	dd08      	ble.n	800d5a8 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 800d596:	f9bd 5006 	ldrsh.w	r5, [sp, #6]
 800d59a:	2d00      	cmp	r5, #0
 800d59c:	dd04      	ble.n	800d5a8 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 800d59e:	4a2b      	ldr	r2, [pc, #172]	@ (800d64c <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xec>)
 800d5a0:	7812      	ldrb	r2, [r2, #0]
 800d5a2:	b11a      	cbz	r2, 800d5ac <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x4c>
 800d5a4:	2a01      	cmp	r2, #1
 800d5a6:	d029      	beq.n	800d5fc <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x9c>
 800d5a8:	b004      	add	sp, #16
 800d5aa:	bd70      	pop	{r4, r5, r6, pc}
 800d5ac:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800d5b0:	441d      	add	r5, r3
 800d5b2:	b2ad      	uxth	r5, r5
 800d5b4:	b22e      	sxth	r6, r5
 800d5b6:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
 800d5ba:	42b3      	cmp	r3, r6
 800d5bc:	daf4      	bge.n	800d5a8 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 800d5be:	6823      	ldr	r3, [r4, #0]
 800d5c0:	4669      	mov	r1, sp
 800d5c2:	6edb      	ldr	r3, [r3, #108]	@ 0x6c
 800d5c4:	4620      	mov	r0, r4
 800d5c6:	4798      	blx	r3
 800d5c8:	b940      	cbnz	r0, 800d5dc <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x7c>
 800d5ca:	f9bd 3006 	ldrsh.w	r3, [sp, #6]
 800d5ce:	2b01      	cmp	r3, #1
 800d5d0:	d004      	beq.n	800d5dc <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x7c>
 800d5d2:	3301      	adds	r3, #1
 800d5d4:	105b      	asrs	r3, r3, #1
 800d5d6:	f8ad 3006 	strh.w	r3, [sp, #6]
 800d5da:	e7f0      	b.n	800d5be <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x5e>
 800d5dc:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 800d5e0:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800d5e4:	4413      	add	r3, r2
 800d5e6:	b29b      	uxth	r3, r3
 800d5e8:	441a      	add	r2, r3
 800d5ea:	b212      	sxth	r2, r2
 800d5ec:	4296      	cmp	r6, r2
 800d5ee:	f8ad 3002 	strh.w	r3, [sp, #2]
 800d5f2:	dae0      	bge.n	800d5b6 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x56>
 800d5f4:	1aeb      	subs	r3, r5, r3
 800d5f6:	f8ad 3006 	strh.w	r3, [sp, #6]
 800d5fa:	e7dc      	b.n	800d5b6 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x56>
 800d5fc:	f8bd 5000 	ldrh.w	r5, [sp]
 800d600:	441d      	add	r5, r3
 800d602:	b2ad      	uxth	r5, r5
 800d604:	b22e      	sxth	r6, r5
 800d606:	f9bd 3000 	ldrsh.w	r3, [sp]
 800d60a:	42b3      	cmp	r3, r6
 800d60c:	dacc      	bge.n	800d5a8 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 800d60e:	6823      	ldr	r3, [r4, #0]
 800d610:	4669      	mov	r1, sp
 800d612:	6edb      	ldr	r3, [r3, #108]	@ 0x6c
 800d614:	4620      	mov	r0, r4
 800d616:	4798      	blx	r3
 800d618:	b940      	cbnz	r0, 800d62c <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xcc>
 800d61a:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 800d61e:	2b01      	cmp	r3, #1
 800d620:	d004      	beq.n	800d62c <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xcc>
 800d622:	3301      	adds	r3, #1
 800d624:	105b      	asrs	r3, r3, #1
 800d626:	f8ad 3004 	strh.w	r3, [sp, #4]
 800d62a:	e7f0      	b.n	800d60e <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xae>
 800d62c:	f8bd 2004 	ldrh.w	r2, [sp, #4]
 800d630:	f8bd 3000 	ldrh.w	r3, [sp]
 800d634:	4413      	add	r3, r2
 800d636:	b29b      	uxth	r3, r3
 800d638:	441a      	add	r2, r3
 800d63a:	b212      	sxth	r2, r2
 800d63c:	4296      	cmp	r6, r2
 800d63e:	f8ad 3000 	strh.w	r3, [sp]
 800d642:	dae0      	bge.n	800d606 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xa6>
 800d644:	1aeb      	subs	r3, r5, r3
 800d646:	f8ad 3004 	strh.w	r3, [sp, #4]
 800d64a:	e7dc      	b.n	800d606 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xa6>
 800d64c:	20013f22 	.word	0x20013f22

0800d650 <_ZNK8touchgfx12CanvasWidget10invalidateEv>:
 800d650:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800d652:	6803      	ldr	r3, [r0, #0]
 800d654:	4604      	mov	r4, r0
 800d656:	4601      	mov	r1, r0
 800d658:	6e9b      	ldr	r3, [r3, #104]	@ 0x68
 800d65a:	4668      	mov	r0, sp
 800d65c:	4798      	blx	r3
 800d65e:	2100      	movs	r1, #0
 800d660:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
 800d664:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 800d668:	9102      	str	r1, [sp, #8]
 800d66a:	4668      	mov	r0, sp
 800d66c:	a902      	add	r1, sp, #8
 800d66e:	f8ad 200c 	strh.w	r2, [sp, #12]
 800d672:	f8ad 300e 	strh.w	r3, [sp, #14]
 800d676:	f7fc fe39 	bl	800a2ec <_ZN8touchgfx4RectaNERKS0_>
 800d67a:	6823      	ldr	r3, [r4, #0]
 800d67c:	4669      	mov	r1, sp
 800d67e:	691b      	ldr	r3, [r3, #16]
 800d680:	4620      	mov	r0, r4
 800d682:	4798      	blx	r3
 800d684:	b004      	add	sp, #16
 800d686:	bd10      	pop	{r4, pc}

0800d688 <_ZN8touchgfx12CanvasWidgetC1Ev>:
 800d688:	2101      	movs	r1, #1
 800d68a:	f880 1025 	strb.w	r1, [r0, #37]	@ 0x25
 800d68e:	490b      	ldr	r1, [pc, #44]	@ (800d6bc <_ZN8touchgfx12CanvasWidgetC1Ev+0x34>)
 800d690:	6001      	str	r1, [r0, #0]
 800d692:	2200      	movs	r2, #0
 800d694:	21ff      	movs	r1, #255	@ 0xff
 800d696:	8082      	strh	r2, [r0, #4]
 800d698:	80c2      	strh	r2, [r0, #6]
 800d69a:	8102      	strh	r2, [r0, #8]
 800d69c:	8142      	strh	r2, [r0, #10]
 800d69e:	8182      	strh	r2, [r0, #12]
 800d6a0:	81c2      	strh	r2, [r0, #14]
 800d6a2:	8202      	strh	r2, [r0, #16]
 800d6a4:	8242      	strh	r2, [r0, #18]
 800d6a6:	e9c0 2205 	strd	r2, r2, [r0, #20]
 800d6aa:	61c2      	str	r2, [r0, #28]
 800d6ac:	8402      	strh	r2, [r0, #32]
 800d6ae:	8442      	strh	r2, [r0, #34]	@ 0x22
 800d6b0:	f880 2024 	strb.w	r2, [r0, #36]	@ 0x24
 800d6b4:	f880 1026 	strb.w	r1, [r0, #38]	@ 0x26
 800d6b8:	6282      	str	r2, [r0, #40]	@ 0x28
 800d6ba:	4770      	bx	lr
 800d6bc:	08024c64 	.word	0x08024c64

0800d6c0 <_ZNK8touchgfx3Box12getSolidRectEv>:
 800d6c0:	2300      	movs	r3, #0
 800d6c2:	8083      	strh	r3, [r0, #4]
 800d6c4:	80c3      	strh	r3, [r0, #6]
 800d6c6:	8003      	strh	r3, [r0, #0]
 800d6c8:	8043      	strh	r3, [r0, #2]
 800d6ca:	f891 3026 	ldrb.w	r3, [r1, #38]	@ 0x26
 800d6ce:	2bff      	cmp	r3, #255	@ 0xff
 800d6d0:	bf01      	itttt	eq
 800d6d2:	890b      	ldrheq	r3, [r1, #8]
 800d6d4:	8083      	strheq	r3, [r0, #4]
 800d6d6:	894b      	ldrheq	r3, [r1, #10]
 800d6d8:	80c3      	strheq	r3, [r0, #6]
 800d6da:	4770      	bx	lr

0800d6dc <_ZNK8touchgfx3Box4drawERKNS_4RectE>:
 800d6dc:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800d6de:	4604      	mov	r4, r0
 800d6e0:	6808      	ldr	r0, [r1, #0]
 800d6e2:	6849      	ldr	r1, [r1, #4]
 800d6e4:	466b      	mov	r3, sp
 800d6e6:	c303      	stmia	r3!, {r0, r1}
 800d6e8:	6823      	ldr	r3, [r4, #0]
 800d6ea:	4669      	mov	r1, sp
 800d6ec:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800d6ee:	4620      	mov	r0, r4
 800d6f0:	4798      	blx	r3
 800d6f2:	4b08      	ldr	r3, [pc, #32]	@ (800d714 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x38>)
 800d6f4:	681b      	ldr	r3, [r3, #0]
 800d6f6:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
 800d6fa:	b10a      	cbz	r2, 800d700 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x24>
 800d6fc:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
 800d6fe:	b900      	cbnz	r0, 800d702 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x26>
 800d700:	6898      	ldr	r0, [r3, #8]
 800d702:	6803      	ldr	r3, [r0, #0]
 800d704:	6aa2      	ldr	r2, [r4, #40]	@ 0x28
 800d706:	6a1d      	ldr	r5, [r3, #32]
 800d708:	f894 3026 	ldrb.w	r3, [r4, #38]	@ 0x26
 800d70c:	4669      	mov	r1, sp
 800d70e:	47a8      	blx	r5
 800d710:	b003      	add	sp, #12
 800d712:	bd30      	pop	{r4, r5, pc}
 800d714:	20013f2c 	.word	0x20013f2c

0800d718 <_ZN8touchgfx3BoxD1Ev>:
 800d718:	4770      	bx	lr

0800d71a <_ZN8touchgfx3BoxD0Ev>:
 800d71a:	b510      	push	{r4, lr}
 800d71c:	212c      	movs	r1, #44	@ 0x2c
 800d71e:	4604      	mov	r4, r0
 800d720:	f014 f989 	bl	8021a36 <_ZdlPvj>
 800d724:	4620      	mov	r0, r4
 800d726:	bd10      	pop	{r4, pc}

0800d728 <_ZNK8touchgfx3Box17invalidateContentEv>:
 800d728:	f890 2026 	ldrb.w	r2, [r0, #38]	@ 0x26
 800d72c:	b12a      	cbz	r2, 800d73a <_ZNK8touchgfx3Box17invalidateContentEv+0x12>
 800d72e:	f890 2025 	ldrb.w	r2, [r0, #37]	@ 0x25
 800d732:	b112      	cbz	r2, 800d73a <_ZNK8touchgfx3Box17invalidateContentEv+0x12>
 800d734:	6803      	ldr	r3, [r0, #0]
 800d736:	695b      	ldr	r3, [r3, #20]
 800d738:	4718      	bx	r3
 800d73a:	4770      	bx	lr

0800d73c <_ZN8touchgfx7OutlineD1Ev>:
 800d73c:	4770      	bx	lr

0800d73e <_ZN8touchgfx7OutlineD0Ev>:
 800d73e:	b510      	push	{r4, lr}
 800d740:	2130      	movs	r1, #48	@ 0x30
 800d742:	4604      	mov	r4, r0
 800d744:	f014 f977 	bl	8021a36 <_ZdlPvj>
 800d748:	4620      	mov	r0, r4
 800d74a:	bd10      	pop	{r4, pc}

0800d74c <_ZN8touchgfx7Outline5resetEv>:
 800d74c:	b510      	push	{r4, lr}
 800d74e:	4604      	mov	r4, r0
 800d750:	f000 fe96 	bl	800e480 <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv>
 800d754:	60e0      	str	r0, [r4, #12]
 800d756:	f000 fe99 	bl	800e48c <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv>
 800d75a:	68e3      	ldr	r3, [r4, #12]
 800d75c:	6123      	str	r3, [r4, #16]
 800d75e:	08c0      	lsrs	r0, r0, #3
 800d760:	2200      	movs	r2, #0
 800d762:	f647 71ff 	movw	r1, #32767	@ 0x7fff
 800d766:	3801      	subs	r0, #1
 800d768:	6060      	str	r0, [r4, #4]
 800d76a:	60a2      	str	r2, [r4, #8]
 800d76c:	8019      	strh	r1, [r3, #0]
 800d76e:	8059      	strh	r1, [r3, #2]
 800d770:	809a      	strh	r2, [r3, #4]
 800d772:	80da      	strh	r2, [r3, #6]
 800d774:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 800d776:	f023 0301 	bic.w	r3, r3, #1
 800d77a:	f043 0302 	orr.w	r3, r3, #2
 800d77e:	6263      	str	r3, [r4, #36]	@ 0x24
 800d780:	bd10      	pop	{r4, pc}
	...

0800d784 <_ZN8touchgfx7OutlineC1Ev>:
 800d784:	b510      	push	{r4, lr}
 800d786:	4b0a      	ldr	r3, [pc, #40]	@ (800d7b0 <_ZN8touchgfx7OutlineC1Ev+0x2c>)
 800d788:	6003      	str	r3, [r0, #0]
 800d78a:	2300      	movs	r3, #0
 800d78c:	e9c0 3301 	strd	r3, r3, [r0, #4]
 800d790:	e9c0 3303 	strd	r3, r3, [r0, #12]
 800d794:	e9c0 3305 	strd	r3, r3, [r0, #20]
 800d798:	e9c0 3307 	strd	r3, r3, [r0, #28]
 800d79c:	6243      	str	r3, [r0, #36]	@ 0x24
 800d79e:	f06f 4300 	mvn.w	r3, #2147483648	@ 0x80000000
 800d7a2:	4604      	mov	r4, r0
 800d7a4:	e9c0 330a 	strd	r3, r3, [r0, #40]	@ 0x28
 800d7a8:	f7ff ffd0 	bl	800d74c <_ZN8touchgfx7Outline5resetEv>
 800d7ac:	4620      	mov	r0, r4
 800d7ae:	bd10      	pop	{r4, pc}
 800d7b0:	08024d44 	.word	0x08024d44

0800d7b4 <_ZN8touchgfx7Outline10renderLineEiiii>:
 800d7b4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d7b8:	b093      	sub	sp, #76	@ 0x4c
 800d7ba:	1156      	asrs	r6, r2, #5
 800d7bc:	9c1c      	ldr	r4, [sp, #112]	@ 0x70
 800d7be:	9305      	str	r3, [sp, #20]
 800d7c0:	f004 051f 	and.w	r5, r4, #31
 800d7c4:	1153      	asrs	r3, r2, #5
 800d7c6:	9504      	str	r5, [sp, #16]
 800d7c8:	1165      	asrs	r5, r4, #5
 800d7ca:	9303      	str	r3, [sp, #12]
 800d7cc:	42ae      	cmp	r6, r5
 800d7ce:	ea4f 1364 	mov.w	r3, r4, asr #5
 800d7d2:	9306      	str	r3, [sp, #24]
 800d7d4:	f002 031f 	and.w	r3, r2, #31
 800d7d8:	f040 80f8 	bne.w	800d9cc <_ZN8touchgfx7Outline10renderLineEiiii+0x218>
 800d7dc:	9c04      	ldr	r4, [sp, #16]
 800d7de:	9a05      	ldr	r2, [sp, #20]
 800d7e0:	42a3      	cmp	r3, r4
 800d7e2:	ea4f 1e62 	mov.w	lr, r2, asr #5
 800d7e6:	6902      	ldr	r2, [r0, #16]
 800d7e8:	d125      	bne.n	800d836 <_ZN8touchgfx7Outline10renderLineEiiii+0x82>
 800d7ea:	f9b2 3000 	ldrsh.w	r3, [r2]
 800d7ee:	459e      	cmp	lr, r3
 800d7f0:	d103      	bne.n	800d7fa <_ZN8touchgfx7Outline10renderLineEiiii+0x46>
 800d7f2:	f9b2 3002 	ldrsh.w	r3, [r2, #2]
 800d7f6:	429e      	cmp	r6, r3
 800d7f8:	d035      	beq.n	800d866 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 800d7fa:	88d1      	ldrh	r1, [r2, #6]
 800d7fc:	8893      	ldrh	r3, [r2, #4]
 800d7fe:	430b      	orrs	r3, r1
 800d800:	d010      	beq.n	800d824 <_ZN8touchgfx7Outline10renderLineEiiii+0x70>
 800d802:	f9b2 3002 	ldrsh.w	r3, [r2, #2]
 800d806:	2b00      	cmp	r3, #0
 800d808:	db0c      	blt.n	800d824 <_ZN8touchgfx7Outline10renderLineEiiii+0x70>
 800d80a:	6ac1      	ldr	r1, [r0, #44]	@ 0x2c
 800d80c:	428b      	cmp	r3, r1
 800d80e:	da09      	bge.n	800d824 <_ZN8touchgfx7Outline10renderLineEiiii+0x70>
 800d810:	e9d0 1301 	ldrd	r1, r3, [r0, #4]
 800d814:	428b      	cmp	r3, r1
 800d816:	bf38      	it	cc
 800d818:	3208      	addcc	r2, #8
 800d81a:	f103 0301 	add.w	r3, r3, #1
 800d81e:	bf38      	it	cc
 800d820:	6102      	strcc	r2, [r0, #16]
 800d822:	6083      	str	r3, [r0, #8]
 800d824:	6903      	ldr	r3, [r0, #16]
 800d826:	9a03      	ldr	r2, [sp, #12]
 800d828:	f8a3 e000 	strh.w	lr, [r3]
 800d82c:	805a      	strh	r2, [r3, #2]
 800d82e:	2200      	movs	r2, #0
 800d830:	809a      	strh	r2, [r3, #4]
 800d832:	80da      	strh	r2, [r3, #6]
 800d834:	e017      	b.n	800d866 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 800d836:	9c05      	ldr	r4, [sp, #20]
 800d838:	f8b2 8004 	ldrh.w	r8, [r2, #4]
 800d83c:	f8b2 a006 	ldrh.w	sl, [r2, #6]
 800d840:	f004 041f 	and.w	r4, r4, #31
 800d844:	114e      	asrs	r6, r1, #5
 800d846:	9402      	str	r4, [sp, #8]
 800d848:	9c04      	ldr	r4, [sp, #16]
 800d84a:	4576      	cmp	r6, lr
 800d84c:	f001 0c1f 	and.w	ip, r1, #31
 800d850:	eba4 0403 	sub.w	r4, r4, r3
 800d854:	d10a      	bne.n	800d86c <_ZN8touchgfx7Outline10renderLineEiiii+0xb8>
 800d856:	9b02      	ldr	r3, [sp, #8]
 800d858:	449c      	add	ip, r3
 800d85a:	44a0      	add	r8, r4
 800d85c:	fb04 a40c 	mla	r4, r4, ip, sl
 800d860:	f8a2 8004 	strh.w	r8, [r2, #4]
 800d864:	80d4      	strh	r4, [r2, #6]
 800d866:	b013      	add	sp, #76	@ 0x4c
 800d868:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800d86c:	9d05      	ldr	r5, [sp, #20]
 800d86e:	1a69      	subs	r1, r5, r1
 800d870:	bf5b      	ittet	pl
 800d872:	f1cc 0520 	rsbpl	r5, ip, #32
 800d876:	436c      	mulpl	r4, r5
 800d878:	2500      	movmi	r5, #0
 800d87a:	2520      	movpl	r5, #32
 800d87c:	bf44      	itt	mi
 800d87e:	fb04 f40c 	mulmi.w	r4, r4, ip
 800d882:	4249      	negmi	r1, r1
 800d884:	9501      	str	r5, [sp, #4]
 800d886:	9f01      	ldr	r7, [sp, #4]
 800d888:	fb94 f5f1 	sdiv	r5, r4, r1
 800d88c:	fb01 4415 	mls	r4, r1, r5, r4
 800d890:	bf54      	ite	pl
 800d892:	f04f 0901 	movpl.w	r9, #1
 800d896:	f04f 39ff 	movmi.w	r9, #4294967295
 800d89a:	2c00      	cmp	r4, #0
 800d89c:	bfb8      	it	lt
 800d89e:	f105 35ff 	addlt.w	r5, r5, #4294967295
 800d8a2:	44bc      	add	ip, r7
 800d8a4:	44a8      	add	r8, r5
 800d8a6:	fb05 ac0c 	mla	ip, r5, ip, sl
 800d8aa:	f8a2 8004 	strh.w	r8, [r2, #4]
 800d8ae:	f8a2 c006 	strh.w	ip, [r2, #6]
 800d8b2:	f8d0 c010 	ldr.w	ip, [r0, #16]
 800d8b6:	f8bc 8006 	ldrh.w	r8, [ip, #6]
 800d8ba:	f8bc 2004 	ldrh.w	r2, [ip, #4]
 800d8be:	bfb8      	it	lt
 800d8c0:	1864      	addlt	r4, r4, r1
 800d8c2:	ea58 0202 	orrs.w	r2, r8, r2
 800d8c6:	444e      	add	r6, r9
 800d8c8:	d011      	beq.n	800d8ee <_ZN8touchgfx7Outline10renderLineEiiii+0x13a>
 800d8ca:	f9bc 8002 	ldrsh.w	r8, [ip, #2]
 800d8ce:	f1b8 0f00 	cmp.w	r8, #0
 800d8d2:	db0c      	blt.n	800d8ee <_ZN8touchgfx7Outline10renderLineEiiii+0x13a>
 800d8d4:	6ac2      	ldr	r2, [r0, #44]	@ 0x2c
 800d8d6:	4590      	cmp	r8, r2
 800d8d8:	da09      	bge.n	800d8ee <_ZN8touchgfx7Outline10renderLineEiiii+0x13a>
 800d8da:	e9d0 2801 	ldrd	r2, r8, [r0, #4]
 800d8de:	4590      	cmp	r8, r2
 800d8e0:	bf3c      	itt	cc
 800d8e2:	f10c 0208 	addcc.w	r2, ip, #8
 800d8e6:	6102      	strcc	r2, [r0, #16]
 800d8e8:	f108 0201 	add.w	r2, r8, #1
 800d8ec:	6082      	str	r2, [r0, #8]
 800d8ee:	f8d0 c010 	ldr.w	ip, [r0, #16]
 800d8f2:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
 800d8f6:	f8ac 6000 	strh.w	r6, [ip]
 800d8fa:	2700      	movs	r7, #0
 800d8fc:	45b6      	cmp	lr, r6
 800d8fe:	f8ac 2002 	strh.w	r2, [ip, #2]
 800d902:	f8ac 7004 	strh.w	r7, [ip, #4]
 800d906:	f8ac 7006 	strh.w	r7, [ip, #6]
 800d90a:	442b      	add	r3, r5
 800d90c:	d04d      	beq.n	800d9aa <_ZN8touchgfx7Outline10renderLineEiiii+0x1f6>
 800d90e:	9f04      	ldr	r7, [sp, #16]
 800d910:	1aff      	subs	r7, r7, r3
 800d912:	443d      	add	r5, r7
 800d914:	016d      	lsls	r5, r5, #5
 800d916:	fb95 f8f1 	sdiv	r8, r5, r1
 800d91a:	fb01 5518 	mls	r5, r1, r8, r5
 800d91e:	2d00      	cmp	r5, #0
 800d920:	bfb8      	it	lt
 800d922:	f108 38ff 	addlt.w	r8, r8, #4294967295
 800d926:	f108 0701 	add.w	r7, r8, #1
 800d92a:	bfb8      	it	lt
 800d92c:	186d      	addlt	r5, r5, r1
 800d92e:	1a64      	subs	r4, r4, r1
 800d930:	9703      	str	r7, [sp, #12]
 800d932:	f04f 0a00 	mov.w	sl, #0
 800d936:	f8d0 c010 	ldr.w	ip, [r0, #16]
 800d93a:	1964      	adds	r4, r4, r5
 800d93c:	bf58      	it	pl
 800d93e:	9f03      	ldrpl	r7, [sp, #12]
 800d940:	f8bc b004 	ldrh.w	fp, [ip, #4]
 800d944:	bf48      	it	mi
 800d946:	4647      	movmi	r7, r8
 800d948:	44bb      	add	fp, r7
 800d94a:	f8ac b004 	strh.w	fp, [ip, #4]
 800d94e:	f8bc b006 	ldrh.w	fp, [ip, #6]
 800d952:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
 800d956:	f8ac b006 	strh.w	fp, [ip, #6]
 800d95a:	f8d0 c010 	ldr.w	ip, [r0, #16]
 800d95e:	443b      	add	r3, r7
 800d960:	f8bc b006 	ldrh.w	fp, [ip, #6]
 800d964:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 800d968:	bf58      	it	pl
 800d96a:	1a64      	subpl	r4, r4, r1
 800d96c:	ea5b 0707 	orrs.w	r7, fp, r7
 800d970:	444e      	add	r6, r9
 800d972:	d011      	beq.n	800d998 <_ZN8touchgfx7Outline10renderLineEiiii+0x1e4>
 800d974:	f9bc b002 	ldrsh.w	fp, [ip, #2]
 800d978:	f1bb 0f00 	cmp.w	fp, #0
 800d97c:	db0c      	blt.n	800d998 <_ZN8touchgfx7Outline10renderLineEiiii+0x1e4>
 800d97e:	6ac7      	ldr	r7, [r0, #44]	@ 0x2c
 800d980:	45bb      	cmp	fp, r7
 800d982:	da09      	bge.n	800d998 <_ZN8touchgfx7Outline10renderLineEiiii+0x1e4>
 800d984:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
 800d988:	45bb      	cmp	fp, r7
 800d98a:	bf3c      	itt	cc
 800d98c:	f10c 0708 	addcc.w	r7, ip, #8
 800d990:	6107      	strcc	r7, [r0, #16]
 800d992:	f10b 0701 	add.w	r7, fp, #1
 800d996:	6087      	str	r7, [r0, #8]
 800d998:	6907      	ldr	r7, [r0, #16]
 800d99a:	45b6      	cmp	lr, r6
 800d99c:	803e      	strh	r6, [r7, #0]
 800d99e:	807a      	strh	r2, [r7, #2]
 800d9a0:	f8a7 a004 	strh.w	sl, [r7, #4]
 800d9a4:	f8a7 a006 	strh.w	sl, [r7, #6]
 800d9a8:	d1c5      	bne.n	800d936 <_ZN8touchgfx7Outline10renderLineEiiii+0x182>
 800d9aa:	9a04      	ldr	r2, [sp, #16]
 800d9ac:	1ad3      	subs	r3, r2, r3
 800d9ae:	6902      	ldr	r2, [r0, #16]
 800d9b0:	8891      	ldrh	r1, [r2, #4]
 800d9b2:	88d6      	ldrh	r6, [r2, #6]
 800d9b4:	4419      	add	r1, r3
 800d9b6:	8091      	strh	r1, [r2, #4]
 800d9b8:	9902      	ldr	r1, [sp, #8]
 800d9ba:	f101 0c20 	add.w	ip, r1, #32
 800d9be:	9901      	ldr	r1, [sp, #4]
 800d9c0:	ebac 0c01 	sub.w	ip, ip, r1
 800d9c4:	fb03 630c 	mla	r3, r3, ip, r6
 800d9c8:	80d3      	strh	r3, [r2, #6]
 800d9ca:	e74c      	b.n	800d866 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 800d9cc:	9d05      	ldr	r5, [sp, #20]
 800d9ce:	1aa2      	subs	r2, r4, r2
 800d9d0:	eba5 0501 	sub.w	r5, r5, r1
 800d9d4:	9508      	str	r5, [sp, #32]
 800d9d6:	9202      	str	r2, [sp, #8]
 800d9d8:	f140 8128 	bpl.w	800dc2c <_ZN8touchgfx7Outline10renderLineEiiii+0x478>
 800d9dc:	9a03      	ldr	r2, [sp, #12]
 800d9de:	2a00      	cmp	r2, #0
 800d9e0:	f6ff af41 	blt.w	800d866 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 800d9e4:	9a02      	ldr	r2, [sp, #8]
 800d9e6:	4252      	negs	r2, r2
 800d9e8:	9202      	str	r2, [sp, #8]
 800d9ea:	9a06      	ldr	r2, [sp, #24]
 800d9ec:	ea42 72e2 	orr.w	r2, r2, r2, asr #31
 800d9f0:	f04f 34ff 	mov.w	r4, #4294967295
 800d9f4:	9206      	str	r2, [sp, #24]
 800d9f6:	462a      	mov	r2, r5
 800d9f8:	940b      	str	r4, [sp, #44]	@ 0x2c
 800d9fa:	435a      	muls	r2, r3
 800d9fc:	2400      	movs	r4, #0
 800d9fe:	9d02      	ldr	r5, [sp, #8]
 800da00:	9401      	str	r4, [sp, #4]
 800da02:	9c02      	ldr	r4, [sp, #8]
 800da04:	fb92 f4f4 	sdiv	r4, r2, r4
 800da08:	fb05 2214 	mls	r2, r5, r4, r2
 800da0c:	2a00      	cmp	r2, #0
 800da0e:	9207      	str	r2, [sp, #28]
 800da10:	bfbc      	itt	lt
 800da12:	1952      	addlt	r2, r2, r5
 800da14:	9207      	strlt	r2, [sp, #28]
 800da16:	9a01      	ldr	r2, [sp, #4]
 800da18:	6905      	ldr	r5, [r0, #16]
 800da1a:	bfb8      	it	lt
 800da1c:	f104 34ff 	addlt.w	r4, r4, #4294967295
 800da20:	eb04 0901 	add.w	r9, r4, r1
 800da24:	429a      	cmp	r2, r3
 800da26:	ea4f 1669 	mov.w	r6, r9, asr #5
 800da2a:	f040 8112 	bne.w	800dc52 <_ZN8touchgfx7Outline10renderLineEiiii+0x49e>
 800da2e:	f9b5 3000 	ldrsh.w	r3, [r5]
 800da32:	429e      	cmp	r6, r3
 800da34:	d104      	bne.n	800da40 <_ZN8touchgfx7Outline10renderLineEiiii+0x28c>
 800da36:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 800da3a:	9a03      	ldr	r2, [sp, #12]
 800da3c:	429a      	cmp	r2, r3
 800da3e:	d01b      	beq.n	800da78 <_ZN8touchgfx7Outline10renderLineEiiii+0x2c4>
 800da40:	88ea      	ldrh	r2, [r5, #6]
 800da42:	88ab      	ldrh	r3, [r5, #4]
 800da44:	4313      	orrs	r3, r2
 800da46:	d010      	beq.n	800da6a <_ZN8touchgfx7Outline10renderLineEiiii+0x2b6>
 800da48:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 800da4c:	2a00      	cmp	r2, #0
 800da4e:	db0c      	blt.n	800da6a <_ZN8touchgfx7Outline10renderLineEiiii+0x2b6>
 800da50:	6ac3      	ldr	r3, [r0, #44]	@ 0x2c
 800da52:	429a      	cmp	r2, r3
 800da54:	da09      	bge.n	800da6a <_ZN8touchgfx7Outline10renderLineEiiii+0x2b6>
 800da56:	e9d0 3201 	ldrd	r3, r2, [r0, #4]
 800da5a:	429a      	cmp	r2, r3
 800da5c:	bf38      	it	cc
 800da5e:	3508      	addcc	r5, #8
 800da60:	f102 0201 	add.w	r2, r2, #1
 800da64:	bf38      	it	cc
 800da66:	6105      	strcc	r5, [r0, #16]
 800da68:	6082      	str	r2, [r0, #8]
 800da6a:	6903      	ldr	r3, [r0, #16]
 800da6c:	9a03      	ldr	r2, [sp, #12]
 800da6e:	805a      	strh	r2, [r3, #2]
 800da70:	2200      	movs	r2, #0
 800da72:	801e      	strh	r6, [r3, #0]
 800da74:	809a      	strh	r2, [r3, #4]
 800da76:	80da      	strh	r2, [r3, #6]
 800da78:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 800da7a:	9a03      	ldr	r2, [sp, #12]
 800da7c:	6901      	ldr	r1, [r0, #16]
 800da7e:	441a      	add	r2, r3
 800da80:	f9b1 3000 	ldrsh.w	r3, [r1]
 800da84:	42b3      	cmp	r3, r6
 800da86:	d103      	bne.n	800da90 <_ZN8touchgfx7Outline10renderLineEiiii+0x2dc>
 800da88:	f9b1 3002 	ldrsh.w	r3, [r1, #2]
 800da8c:	429a      	cmp	r2, r3
 800da8e:	d01a      	beq.n	800dac6 <_ZN8touchgfx7Outline10renderLineEiiii+0x312>
 800da90:	88cc      	ldrh	r4, [r1, #6]
 800da92:	888b      	ldrh	r3, [r1, #4]
 800da94:	4323      	orrs	r3, r4
 800da96:	d010      	beq.n	800daba <_ZN8touchgfx7Outline10renderLineEiiii+0x306>
 800da98:	f9b1 4002 	ldrsh.w	r4, [r1, #2]
 800da9c:	2c00      	cmp	r4, #0
 800da9e:	db0c      	blt.n	800daba <_ZN8touchgfx7Outline10renderLineEiiii+0x306>
 800daa0:	6ac3      	ldr	r3, [r0, #44]	@ 0x2c
 800daa2:	429c      	cmp	r4, r3
 800daa4:	da09      	bge.n	800daba <_ZN8touchgfx7Outline10renderLineEiiii+0x306>
 800daa6:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
 800daaa:	429c      	cmp	r4, r3
 800daac:	bf38      	it	cc
 800daae:	3108      	addcc	r1, #8
 800dab0:	f104 0401 	add.w	r4, r4, #1
 800dab4:	bf38      	it	cc
 800dab6:	6101      	strcc	r1, [r0, #16]
 800dab8:	6084      	str	r4, [r0, #8]
 800daba:	6903      	ldr	r3, [r0, #16]
 800dabc:	2100      	movs	r1, #0
 800dabe:	801e      	strh	r6, [r3, #0]
 800dac0:	805a      	strh	r2, [r3, #2]
 800dac2:	8099      	strh	r1, [r3, #4]
 800dac4:	80d9      	strh	r1, [r3, #6]
 800dac6:	9b06      	ldr	r3, [sp, #24]
 800dac8:	4293      	cmp	r3, r2
 800daca:	f000 8082 	beq.w	800dbd2 <_ZN8touchgfx7Outline10renderLineEiiii+0x41e>
 800dace:	9b08      	ldr	r3, [sp, #32]
 800dad0:	9c02      	ldr	r4, [sp, #8]
 800dad2:	9902      	ldr	r1, [sp, #8]
 800dad4:	015b      	lsls	r3, r3, #5
 800dad6:	fb93 f1f1 	sdiv	r1, r3, r1
 800dada:	fb04 3311 	mls	r3, r4, r1, r3
 800dade:	2b00      	cmp	r3, #0
 800dae0:	9103      	str	r1, [sp, #12]
 800dae2:	9308      	str	r3, [sp, #32]
 800dae4:	da04      	bge.n	800daf0 <_ZN8touchgfx7Outline10renderLineEiiii+0x33c>
 800dae6:	1e4b      	subs	r3, r1, #1
 800dae8:	9303      	str	r3, [sp, #12]
 800daea:	9b08      	ldr	r3, [sp, #32]
 800daec:	4423      	add	r3, r4
 800daee:	9308      	str	r3, [sp, #32]
 800daf0:	9b07      	ldr	r3, [sp, #28]
 800daf2:	9902      	ldr	r1, [sp, #8]
 800daf4:	1a5b      	subs	r3, r3, r1
 800daf6:	9307      	str	r3, [sp, #28]
 800daf8:	9b01      	ldr	r3, [sp, #4]
 800dafa:	f1c3 0320 	rsb	r3, r3, #32
 800dafe:	930e      	str	r3, [sp, #56]	@ 0x38
 800db00:	990e      	ldr	r1, [sp, #56]	@ 0x38
 800db02:	9b01      	ldr	r3, [sp, #4]
 800db04:	1a5b      	subs	r3, r3, r1
 800db06:	464f      	mov	r7, r9
 800db08:	930a      	str	r3, [sp, #40]	@ 0x28
 800db0a:	2600      	movs	r6, #0
 800db0c:	e9dd 3107 	ldrd	r3, r1, [sp, #28]
 800db10:	185b      	adds	r3, r3, r1
 800db12:	bf58      	it	pl
 800db14:	9902      	ldrpl	r1, [sp, #8]
 800db16:	9307      	str	r3, [sp, #28]
 800db18:	bf5d      	ittte	pl
 800db1a:	1a5b      	subpl	r3, r3, r1
 800db1c:	9307      	strpl	r3, [sp, #28]
 800db1e:	9b03      	ldrpl	r3, [sp, #12]
 800db20:	9903      	ldrmi	r1, [sp, #12]
 800db22:	bf58      	it	pl
 800db24:	1c59      	addpl	r1, r3, #1
 800db26:	4489      	add	r9, r1
 800db28:	2a00      	cmp	r2, #0
 800db2a:	ea4f 1a69 	mov.w	sl, r9, asr #5
 800db2e:	db2e      	blt.n	800db8e <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 800db30:	6ac3      	ldr	r3, [r0, #44]	@ 0x2c
 800db32:	4293      	cmp	r3, r2
 800db34:	dd2b      	ble.n	800db8e <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 800db36:	9c01      	ldr	r4, [sp, #4]
 800db38:	6905      	ldr	r5, [r0, #16]
 800db3a:	46a0      	mov	r8, r4
 800db3c:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 800db3e:	f9b5 c004 	ldrsh.w	ip, [r5, #4]
 800db42:	f9b5 e006 	ldrsh.w	lr, [r5, #6]
 800db46:	45a0      	cmp	r8, r4
 800db48:	f040 814f 	bne.w	800ddea <_ZN8touchgfx7Outline10renderLineEiiii+0x636>
 800db4c:	f9b5 1000 	ldrsh.w	r1, [r5]
 800db50:	4551      	cmp	r1, sl
 800db52:	d103      	bne.n	800db5c <_ZN8touchgfx7Outline10renderLineEiiii+0x3a8>
 800db54:	f9b5 1002 	ldrsh.w	r1, [r5, #2]
 800db58:	4291      	cmp	r1, r2
 800db5a:	d018      	beq.n	800db8e <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 800db5c:	ea5c 010e 	orrs.w	r1, ip, lr
 800db60:	d00f      	beq.n	800db82 <_ZN8touchgfx7Outline10renderLineEiiii+0x3ce>
 800db62:	f9b5 1002 	ldrsh.w	r1, [r5, #2]
 800db66:	2900      	cmp	r1, #0
 800db68:	db0b      	blt.n	800db82 <_ZN8touchgfx7Outline10renderLineEiiii+0x3ce>
 800db6a:	428b      	cmp	r3, r1
 800db6c:	dd09      	ble.n	800db82 <_ZN8touchgfx7Outline10renderLineEiiii+0x3ce>
 800db6e:	e9d0 3101 	ldrd	r3, r1, [r0, #4]
 800db72:	4299      	cmp	r1, r3
 800db74:	bf38      	it	cc
 800db76:	3508      	addcc	r5, #8
 800db78:	f101 0101 	add.w	r1, r1, #1
 800db7c:	bf38      	it	cc
 800db7e:	6105      	strcc	r5, [r0, #16]
 800db80:	6081      	str	r1, [r0, #8]
 800db82:	6903      	ldr	r3, [r0, #16]
 800db84:	f8a3 a000 	strh.w	sl, [r3]
 800db88:	805a      	strh	r2, [r3, #2]
 800db8a:	809e      	strh	r6, [r3, #4]
 800db8c:	80de      	strh	r6, [r3, #6]
 800db8e:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 800db90:	6901      	ldr	r1, [r0, #16]
 800db92:	441a      	add	r2, r3
 800db94:	88cc      	ldrh	r4, [r1, #6]
 800db96:	888b      	ldrh	r3, [r1, #4]
 800db98:	4323      	orrs	r3, r4
 800db9a:	d010      	beq.n	800dbbe <_ZN8touchgfx7Outline10renderLineEiiii+0x40a>
 800db9c:	f9b1 4002 	ldrsh.w	r4, [r1, #2]
 800dba0:	2c00      	cmp	r4, #0
 800dba2:	db0c      	blt.n	800dbbe <_ZN8touchgfx7Outline10renderLineEiiii+0x40a>
 800dba4:	6ac3      	ldr	r3, [r0, #44]	@ 0x2c
 800dba6:	429c      	cmp	r4, r3
 800dba8:	da09      	bge.n	800dbbe <_ZN8touchgfx7Outline10renderLineEiiii+0x40a>
 800dbaa:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
 800dbae:	429c      	cmp	r4, r3
 800dbb0:	bf38      	it	cc
 800dbb2:	3108      	addcc	r1, #8
 800dbb4:	f104 0401 	add.w	r4, r4, #1
 800dbb8:	bf38      	it	cc
 800dbba:	6101      	strcc	r1, [r0, #16]
 800dbbc:	6084      	str	r4, [r0, #8]
 800dbbe:	6903      	ldr	r3, [r0, #16]
 800dbc0:	f8a3 a000 	strh.w	sl, [r3]
 800dbc4:	805a      	strh	r2, [r3, #2]
 800dbc6:	809e      	strh	r6, [r3, #4]
 800dbc8:	80de      	strh	r6, [r3, #6]
 800dbca:	9b06      	ldr	r3, [sp, #24]
 800dbcc:	4293      	cmp	r3, r2
 800dbce:	464f      	mov	r7, r9
 800dbd0:	d19c      	bne.n	800db0c <_ZN8touchgfx7Outline10renderLineEiiii+0x358>
 800dbd2:	9b01      	ldr	r3, [sp, #4]
 800dbd4:	6907      	ldr	r7, [r0, #16]
 800dbd6:	f1c3 0620 	rsb	r6, r3, #32
 800dbda:	9b05      	ldr	r3, [sp, #20]
 800dbdc:	ea4f 1e63 	mov.w	lr, r3, asr #5
 800dbe0:	9b04      	ldr	r3, [sp, #16]
 800dbe2:	429e      	cmp	r6, r3
 800dbe4:	f040 81cc 	bne.w	800df80 <_ZN8touchgfx7Outline10renderLineEiiii+0x7cc>
 800dbe8:	f9b7 3000 	ldrsh.w	r3, [r7]
 800dbec:	459e      	cmp	lr, r3
 800dbee:	d104      	bne.n	800dbfa <_ZN8touchgfx7Outline10renderLineEiiii+0x446>
 800dbf0:	f9b7 3002 	ldrsh.w	r3, [r7, #2]
 800dbf4:	429a      	cmp	r2, r3
 800dbf6:	f43f ae36 	beq.w	800d866 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 800dbfa:	88f9      	ldrh	r1, [r7, #6]
 800dbfc:	88bb      	ldrh	r3, [r7, #4]
 800dbfe:	430b      	orrs	r3, r1
 800dc00:	d010      	beq.n	800dc24 <_ZN8touchgfx7Outline10renderLineEiiii+0x470>
 800dc02:	f9b7 3002 	ldrsh.w	r3, [r7, #2]
 800dc06:	2b00      	cmp	r3, #0
 800dc08:	db0c      	blt.n	800dc24 <_ZN8touchgfx7Outline10renderLineEiiii+0x470>
 800dc0a:	6ac1      	ldr	r1, [r0, #44]	@ 0x2c
 800dc0c:	428b      	cmp	r3, r1
 800dc0e:	da09      	bge.n	800dc24 <_ZN8touchgfx7Outline10renderLineEiiii+0x470>
 800dc10:	e9d0 1301 	ldrd	r1, r3, [r0, #4]
 800dc14:	428b      	cmp	r3, r1
 800dc16:	bf38      	it	cc
 800dc18:	3708      	addcc	r7, #8
 800dc1a:	f103 0301 	add.w	r3, r3, #1
 800dc1e:	bf38      	it	cc
 800dc20:	6107      	strcc	r7, [r0, #16]
 800dc22:	6083      	str	r3, [r0, #8]
 800dc24:	6903      	ldr	r3, [r0, #16]
 800dc26:	f8a3 e000 	strh.w	lr, [r3]
 800dc2a:	e5ff      	b.n	800d82c <_ZN8touchgfx7Outline10renderLineEiiii+0x78>
 800dc2c:	6ac2      	ldr	r2, [r0, #44]	@ 0x2c
 800dc2e:	9c03      	ldr	r4, [sp, #12]
 800dc30:	42a2      	cmp	r2, r4
 800dc32:	f6ff ae18 	blt.w	800d866 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 800dc36:	9c06      	ldr	r4, [sp, #24]
 800dc38:	42a2      	cmp	r2, r4
 800dc3a:	bfb8      	it	lt
 800dc3c:	3201      	addlt	r2, #1
 800dc3e:	9c08      	ldr	r4, [sp, #32]
 800dc40:	bfb8      	it	lt
 800dc42:	9206      	strlt	r2, [sp, #24]
 800dc44:	f1c3 0220 	rsb	r2, r3, #32
 800dc48:	4362      	muls	r2, r4
 800dc4a:	2401      	movs	r4, #1
 800dc4c:	940b      	str	r4, [sp, #44]	@ 0x2c
 800dc4e:	2420      	movs	r4, #32
 800dc50:	e6d5      	b.n	800d9fe <_ZN8touchgfx7Outline10renderLineEiiii+0x24a>
 800dc52:	f009 021f 	and.w	r2, r9, #31
 800dc56:	ea4f 1861 	mov.w	r8, r1, asr #5
 800dc5a:	920c      	str	r2, [sp, #48]	@ 0x30
 800dc5c:	9a01      	ldr	r2, [sp, #4]
 800dc5e:	f8b5 e004 	ldrh.w	lr, [r5, #4]
 800dc62:	f8b5 a006 	ldrh.w	sl, [r5, #6]
 800dc66:	45b0      	cmp	r8, r6
 800dc68:	f001 011f 	and.w	r1, r1, #31
 800dc6c:	eba2 0203 	sub.w	r2, r2, r3
 800dc70:	d108      	bne.n	800dc84 <_ZN8touchgfx7Outline10renderLineEiiii+0x4d0>
 800dc72:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 800dc74:	4419      	add	r1, r3
 800dc76:	4496      	add	lr, r2
 800dc78:	fb02 a101 	mla	r1, r2, r1, sl
 800dc7c:	f8a5 e004 	strh.w	lr, [r5, #4]
 800dc80:	80e9      	strh	r1, [r5, #6]
 800dc82:	e6f9      	b.n	800da78 <_ZN8touchgfx7Outline10renderLineEiiii+0x2c4>
 800dc84:	2c00      	cmp	r4, #0
 800dc86:	f2c0 80a9 	blt.w	800dddc <_ZN8touchgfx7Outline10renderLineEiiii+0x628>
 800dc8a:	2701      	movs	r7, #1
 800dc8c:	f1c1 0c20 	rsb	ip, r1, #32
 800dc90:	970a      	str	r7, [sp, #40]	@ 0x28
 800dc92:	fb02 f20c 	mul.w	r2, r2, ip
 800dc96:	2720      	movs	r7, #32
 800dc98:	9709      	str	r7, [sp, #36]	@ 0x24
 800dc9a:	fb92 fcf4 	sdiv	ip, r2, r4
 800dc9e:	9f09      	ldr	r7, [sp, #36]	@ 0x24
 800dca0:	fb04 221c 	mls	r2, r4, ip, r2
 800dca4:	2a00      	cmp	r2, #0
 800dca6:	bfb8      	it	lt
 800dca8:	f10c 3cff 	addlt.w	ip, ip, #4294967295
 800dcac:	4439      	add	r1, r7
 800dcae:	fb0c a101 	mla	r1, ip, r1, sl
 800dcb2:	80e9      	strh	r1, [r5, #6]
 800dcb4:	44e6      	add	lr, ip
 800dcb6:	990a      	ldr	r1, [sp, #40]	@ 0x28
 800dcb8:	f8a5 e004 	strh.w	lr, [r5, #4]
 800dcbc:	eb08 0501 	add.w	r5, r8, r1
 800dcc0:	6901      	ldr	r1, [r0, #16]
 800dcc2:	f8b1 8006 	ldrh.w	r8, [r1, #6]
 800dcc6:	f8b1 e004 	ldrh.w	lr, [r1, #4]
 800dcca:	bfb8      	it	lt
 800dccc:	1912      	addlt	r2, r2, r4
 800dcce:	ea58 070e 	orrs.w	r7, r8, lr
 800dcd2:	d010      	beq.n	800dcf6 <_ZN8touchgfx7Outline10renderLineEiiii+0x542>
 800dcd4:	f9b1 e002 	ldrsh.w	lr, [r1, #2]
 800dcd8:	f1be 0f00 	cmp.w	lr, #0
 800dcdc:	db0b      	blt.n	800dcf6 <_ZN8touchgfx7Outline10renderLineEiiii+0x542>
 800dcde:	6ac7      	ldr	r7, [r0, #44]	@ 0x2c
 800dce0:	45be      	cmp	lr, r7
 800dce2:	da08      	bge.n	800dcf6 <_ZN8touchgfx7Outline10renderLineEiiii+0x542>
 800dce4:	e9d0 7e01 	ldrd	r7, lr, [r0, #4]
 800dce8:	45be      	cmp	lr, r7
 800dcea:	bf3c      	itt	cc
 800dcec:	3108      	addcc	r1, #8
 800dcee:	6101      	strcc	r1, [r0, #16]
 800dcf0:	f10e 0101 	add.w	r1, lr, #1
 800dcf4:	6081      	str	r1, [r0, #8]
 800dcf6:	6901      	ldr	r1, [r0, #16]
 800dcf8:	f9bd 800c 	ldrsh.w	r8, [sp, #12]
 800dcfc:	800d      	strh	r5, [r1, #0]
 800dcfe:	f04f 0e00 	mov.w	lr, #0
 800dd02:	42ae      	cmp	r6, r5
 800dd04:	f8a1 8002 	strh.w	r8, [r1, #2]
 800dd08:	f8a1 e004 	strh.w	lr, [r1, #4]
 800dd0c:	f8a1 e006 	strh.w	lr, [r1, #6]
 800dd10:	4463      	add	r3, ip
 800dd12:	d054      	beq.n	800ddbe <_ZN8touchgfx7Outline10renderLineEiiii+0x60a>
 800dd14:	9901      	ldr	r1, [sp, #4]
 800dd16:	1ac9      	subs	r1, r1, r3
 800dd18:	4461      	add	r1, ip
 800dd1a:	0149      	lsls	r1, r1, #5
 800dd1c:	fb91 fef4 	sdiv	lr, r1, r4
 800dd20:	fb04 111e 	mls	r1, r4, lr, r1
 800dd24:	2900      	cmp	r1, #0
 800dd26:	bfb8      	it	lt
 800dd28:	f10e 3eff 	addlt.w	lr, lr, #4294967295
 800dd2c:	f10e 0701 	add.w	r7, lr, #1
 800dd30:	bfb8      	it	lt
 800dd32:	1909      	addlt	r1, r1, r4
 800dd34:	1b12      	subs	r2, r2, r4
 800dd36:	970d      	str	r7, [sp, #52]	@ 0x34
 800dd38:	f8d0 a010 	ldr.w	sl, [r0, #16]
 800dd3c:	9f0a      	ldr	r7, [sp, #40]	@ 0x28
 800dd3e:	f8ba b004 	ldrh.w	fp, [sl, #4]
 800dd42:	1852      	adds	r2, r2, r1
 800dd44:	bf54      	ite	pl
 800dd46:	f8dd c034 	ldrpl.w	ip, [sp, #52]	@ 0x34
 800dd4a:	46f4      	movmi	ip, lr
 800dd4c:	44e3      	add	fp, ip
 800dd4e:	f8aa b004 	strh.w	fp, [sl, #4]
 800dd52:	f8ba b006 	ldrh.w	fp, [sl, #6]
 800dd56:	eb0b 1b4c 	add.w	fp, fp, ip, lsl #5
 800dd5a:	f8aa b006 	strh.w	fp, [sl, #6]
 800dd5e:	4463      	add	r3, ip
 800dd60:	f8d0 c010 	ldr.w	ip, [r0, #16]
 800dd64:	f8bc b006 	ldrh.w	fp, [ip, #6]
 800dd68:	f8bc a004 	ldrh.w	sl, [ip, #4]
 800dd6c:	bf58      	it	pl
 800dd6e:	1b12      	subpl	r2, r2, r4
 800dd70:	443d      	add	r5, r7
 800dd72:	ea5b 070a 	orrs.w	r7, fp, sl
 800dd76:	d014      	beq.n	800dda2 <_ZN8touchgfx7Outline10renderLineEiiii+0x5ee>
 800dd78:	f9bc a002 	ldrsh.w	sl, [ip, #2]
 800dd7c:	f1ba 0f00 	cmp.w	sl, #0
 800dd80:	db0f      	blt.n	800dda2 <_ZN8touchgfx7Outline10renderLineEiiii+0x5ee>
 800dd82:	6ac7      	ldr	r7, [r0, #44]	@ 0x2c
 800dd84:	45ba      	cmp	sl, r7
 800dd86:	da0c      	bge.n	800dda2 <_ZN8touchgfx7Outline10renderLineEiiii+0x5ee>
 800dd88:	e9d0 7a01 	ldrd	r7, sl, [r0, #4]
 800dd8c:	45ba      	cmp	sl, r7
 800dd8e:	bf38      	it	cc
 800dd90:	f10c 0c08 	addcc.w	ip, ip, #8
 800dd94:	f10a 0a01 	add.w	sl, sl, #1
 800dd98:	bf38      	it	cc
 800dd9a:	f8c0 c010 	strcc.w	ip, [r0, #16]
 800dd9e:	f8c0 a008 	str.w	sl, [r0, #8]
 800dda2:	f8d0 c010 	ldr.w	ip, [r0, #16]
 800dda6:	f04f 0700 	mov.w	r7, #0
 800ddaa:	42ae      	cmp	r6, r5
 800ddac:	f8ac 5000 	strh.w	r5, [ip]
 800ddb0:	f8ac 8002 	strh.w	r8, [ip, #2]
 800ddb4:	f8ac 7004 	strh.w	r7, [ip, #4]
 800ddb8:	f8ac 7006 	strh.w	r7, [ip, #6]
 800ddbc:	d1bc      	bne.n	800dd38 <_ZN8touchgfx7Outline10renderLineEiiii+0x584>
 800ddbe:	6904      	ldr	r4, [r0, #16]
 800ddc0:	9a01      	ldr	r2, [sp, #4]
 800ddc2:	990c      	ldr	r1, [sp, #48]	@ 0x30
 800ddc4:	1ad3      	subs	r3, r2, r3
 800ddc6:	88a2      	ldrh	r2, [r4, #4]
 800ddc8:	441a      	add	r2, r3
 800ddca:	80a2      	strh	r2, [r4, #4]
 800ddcc:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 800ddce:	3120      	adds	r1, #32
 800ddd0:	1a89      	subs	r1, r1, r2
 800ddd2:	88e2      	ldrh	r2, [r4, #6]
 800ddd4:	fb03 2301 	mla	r3, r3, r1, r2
 800ddd8:	80e3      	strh	r3, [r4, #6]
 800ddda:	e64d      	b.n	800da78 <_ZN8touchgfx7Outline10renderLineEiiii+0x2c4>
 800dddc:	f04f 37ff 	mov.w	r7, #4294967295
 800dde0:	970a      	str	r7, [sp, #40]	@ 0x28
 800dde2:	434a      	muls	r2, r1
 800dde4:	4264      	negs	r4, r4
 800dde6:	2700      	movs	r7, #0
 800dde8:	e756      	b.n	800dc98 <_ZN8touchgfx7Outline10renderLineEiiii+0x4e4>
 800ddea:	ea4f 1867 	mov.w	r8, r7, asr #5
 800ddee:	f009 031f 	and.w	r3, r9, #31
 800ddf2:	45d0      	cmp	r8, sl
 800ddf4:	f007 071f 	and.w	r7, r7, #31
 800ddf8:	930f      	str	r3, [sp, #60]	@ 0x3c
 800ddfa:	fa1f fc8c 	uxth.w	ip, ip
 800ddfe:	fa1f fe8e 	uxth.w	lr, lr
 800de02:	d10a      	bne.n	800de1a <_ZN8touchgfx7Outline10renderLineEiiii+0x666>
 800de04:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 800de06:	449c      	add	ip, r3
 800de08:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 800de0a:	f8a5 c004 	strh.w	ip, [r5, #4]
 800de0e:	441f      	add	r7, r3
 800de10:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 800de12:	fb03 e707 	mla	r7, r3, r7, lr
 800de16:	80ef      	strh	r7, [r5, #6]
 800de18:	e6b9      	b.n	800db8e <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 800de1a:	2900      	cmp	r1, #0
 800de1c:	f2c0 80a8 	blt.w	800df70 <_ZN8touchgfx7Outline10renderLineEiiii+0x7bc>
 800de20:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 800de22:	f1c7 0320 	rsb	r3, r7, #32
 800de26:	4363      	muls	r3, r4
 800de28:	2401      	movs	r4, #1
 800de2a:	940d      	str	r4, [sp, #52]	@ 0x34
 800de2c:	2420      	movs	r4, #32
 800de2e:	940c      	str	r4, [sp, #48]	@ 0x30
 800de30:	fb93 f4f1 	sdiv	r4, r3, r1
 800de34:	fb01 3b14 	mls	fp, r1, r4, r3
 800de38:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 800de3a:	f1bb 0f00 	cmp.w	fp, #0
 800de3e:	bfb8      	it	lt
 800de40:	f104 34ff 	addlt.w	r4, r4, #4294967295
 800de44:	441f      	add	r7, r3
 800de46:	fb04 e707 	mla	r7, r4, r7, lr
 800de4a:	44a4      	add	ip, r4
 800de4c:	f8a5 c004 	strh.w	ip, [r5, #4]
 800de50:	80ef      	strh	r7, [r5, #6]
 800de52:	f8d0 c010 	ldr.w	ip, [r0, #16]
 800de56:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 800de58:	f8bc e006 	ldrh.w	lr, [ip, #6]
 800de5c:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 800de60:	bfb8      	it	lt
 800de62:	448b      	addlt	fp, r1
 800de64:	eb08 0503 	add.w	r5, r8, r3
 800de68:	ea5e 0307 	orrs.w	r3, lr, r7
 800de6c:	d011      	beq.n	800de92 <_ZN8touchgfx7Outline10renderLineEiiii+0x6de>
 800de6e:	f9bc e002 	ldrsh.w	lr, [ip, #2]
 800de72:	f1be 0f00 	cmp.w	lr, #0
 800de76:	db0c      	blt.n	800de92 <_ZN8touchgfx7Outline10renderLineEiiii+0x6de>
 800de78:	6ac7      	ldr	r7, [r0, #44]	@ 0x2c
 800de7a:	45be      	cmp	lr, r7
 800de7c:	da09      	bge.n	800de92 <_ZN8touchgfx7Outline10renderLineEiiii+0x6de>
 800de7e:	e9d0 7e01 	ldrd	r7, lr, [r0, #4]
 800de82:	45be      	cmp	lr, r7
 800de84:	bf3c      	itt	cc
 800de86:	f10c 0708 	addcc.w	r7, ip, #8
 800de8a:	6107      	strcc	r7, [r0, #16]
 800de8c:	f10e 0701 	add.w	r7, lr, #1
 800de90:	6087      	str	r7, [r0, #8]
 800de92:	6907      	ldr	r7, [r0, #16]
 800de94:	b213      	sxth	r3, r2
 800de96:	9310      	str	r3, [sp, #64]	@ 0x40
 800de98:	807b      	strh	r3, [r7, #2]
 800de9a:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 800de9c:	803d      	strh	r5, [r7, #0]
 800de9e:	4555      	cmp	r5, sl
 800dea0:	80be      	strh	r6, [r7, #4]
 800dea2:	80fe      	strh	r6, [r7, #6]
 800dea4:	eb04 0c03 	add.w	ip, r4, r3
 800dea8:	d051      	beq.n	800df4e <_ZN8touchgfx7Outline10renderLineEiiii+0x79a>
 800deaa:	9b01      	ldr	r3, [sp, #4]
 800deac:	eba3 070c 	sub.w	r7, r3, ip
 800deb0:	443c      	add	r4, r7
 800deb2:	0164      	lsls	r4, r4, #5
 800deb4:	fb94 f8f1 	sdiv	r8, r4, r1
 800deb8:	fb01 4418 	mls	r4, r1, r8, r4
 800debc:	2c00      	cmp	r4, #0
 800debe:	bfb8      	it	lt
 800dec0:	f108 38ff 	addlt.w	r8, r8, #4294967295
 800dec4:	ebab 0301 	sub.w	r3, fp, r1
 800dec8:	f108 0701 	add.w	r7, r8, #1
 800decc:	bfb8      	it	lt
 800dece:	1864      	addlt	r4, r4, r1
 800ded0:	9309      	str	r3, [sp, #36]	@ 0x24
 800ded2:	9711      	str	r7, [sp, #68]	@ 0x44
 800ded4:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800ded6:	f8d0 e010 	ldr.w	lr, [r0, #16]
 800deda:	191b      	adds	r3, r3, r4
 800dedc:	bf58      	it	pl
 800dede:	9f11      	ldrpl	r7, [sp, #68]	@ 0x44
 800dee0:	f8be b004 	ldrh.w	fp, [lr, #4]
 800dee4:	9309      	str	r3, [sp, #36]	@ 0x24
 800dee6:	bf48      	it	mi
 800dee8:	4647      	movmi	r7, r8
 800deea:	44bb      	add	fp, r7
 800deec:	f8ae b004 	strh.w	fp, [lr, #4]
 800def0:	f8be b006 	ldrh.w	fp, [lr, #6]
 800def4:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
 800def8:	f8ae b006 	strh.w	fp, [lr, #6]
 800defc:	f8d0 e010 	ldr.w	lr, [r0, #16]
 800df00:	44bc      	add	ip, r7
 800df02:	9f0d      	ldr	r7, [sp, #52]	@ 0x34
 800df04:	f8be b006 	ldrh.w	fp, [lr, #6]
 800df08:	443d      	add	r5, r7
 800df0a:	f8be 7004 	ldrh.w	r7, [lr, #4]
 800df0e:	bf5c      	itt	pl
 800df10:	1a5b      	subpl	r3, r3, r1
 800df12:	9309      	strpl	r3, [sp, #36]	@ 0x24
 800df14:	ea5b 0307 	orrs.w	r3, fp, r7
 800df18:	d011      	beq.n	800df3e <_ZN8touchgfx7Outline10renderLineEiiii+0x78a>
 800df1a:	f9be b002 	ldrsh.w	fp, [lr, #2]
 800df1e:	f1bb 0f00 	cmp.w	fp, #0
 800df22:	db0c      	blt.n	800df3e <_ZN8touchgfx7Outline10renderLineEiiii+0x78a>
 800df24:	6ac7      	ldr	r7, [r0, #44]	@ 0x2c
 800df26:	45bb      	cmp	fp, r7
 800df28:	da09      	bge.n	800df3e <_ZN8touchgfx7Outline10renderLineEiiii+0x78a>
 800df2a:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
 800df2e:	45bb      	cmp	fp, r7
 800df30:	bf3c      	itt	cc
 800df32:	f10e 0708 	addcc.w	r7, lr, #8
 800df36:	6107      	strcc	r7, [r0, #16]
 800df38:	f10b 0701 	add.w	r7, fp, #1
 800df3c:	6087      	str	r7, [r0, #8]
 800df3e:	6907      	ldr	r7, [r0, #16]
 800df40:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 800df42:	803d      	strh	r5, [r7, #0]
 800df44:	4555      	cmp	r5, sl
 800df46:	807b      	strh	r3, [r7, #2]
 800df48:	80be      	strh	r6, [r7, #4]
 800df4a:	80fe      	strh	r6, [r7, #6]
 800df4c:	d1c2      	bne.n	800ded4 <_ZN8touchgfx7Outline10renderLineEiiii+0x720>
 800df4e:	9b01      	ldr	r3, [sp, #4]
 800df50:	9f0f      	ldr	r7, [sp, #60]	@ 0x3c
 800df52:	eba3 0c0c 	sub.w	ip, r3, ip
 800df56:	6903      	ldr	r3, [r0, #16]
 800df58:	8899      	ldrh	r1, [r3, #4]
 800df5a:	4461      	add	r1, ip
 800df5c:	8099      	strh	r1, [r3, #4]
 800df5e:	990c      	ldr	r1, [sp, #48]	@ 0x30
 800df60:	3720      	adds	r7, #32
 800df62:	1a7f      	subs	r7, r7, r1
 800df64:	88d9      	ldrh	r1, [r3, #6]
 800df66:	fb0c 1c07 	mla	ip, ip, r7, r1
 800df6a:	f8a3 c006 	strh.w	ip, [r3, #6]
 800df6e:	e60e      	b.n	800db8e <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 800df70:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 800df72:	f04f 34ff 	mov.w	r4, #4294967295
 800df76:	940d      	str	r4, [sp, #52]	@ 0x34
 800df78:	437b      	muls	r3, r7
 800df7a:	4249      	negs	r1, r1
 800df7c:	2400      	movs	r4, #0
 800df7e:	e756      	b.n	800de2e <_ZN8touchgfx7Outline10renderLineEiiii+0x67a>
 800df80:	9905      	ldr	r1, [sp, #20]
 800df82:	f8b7 8004 	ldrh.w	r8, [r7, #4]
 800df86:	f8b7 a006 	ldrh.w	sl, [r7, #6]
 800df8a:	f001 011f 	and.w	r1, r1, #31
 800df8e:	ea4f 1b69 	mov.w	fp, r9, asr #5
 800df92:	9102      	str	r1, [sp, #8]
 800df94:	9904      	ldr	r1, [sp, #16]
 800df96:	45f3      	cmp	fp, lr
 800df98:	f009 0c1f 	and.w	ip, r9, #31
 800df9c:	eba1 0406 	sub.w	r4, r1, r6
 800dfa0:	d108      	bne.n	800dfb4 <_ZN8touchgfx7Outline10renderLineEiiii+0x800>
 800dfa2:	9b02      	ldr	r3, [sp, #8]
 800dfa4:	449c      	add	ip, r3
 800dfa6:	44a0      	add	r8, r4
 800dfa8:	fb04 a40c 	mla	r4, r4, ip, sl
 800dfac:	f8a7 8004 	strh.w	r8, [r7, #4]
 800dfb0:	80fc      	strh	r4, [r7, #6]
 800dfb2:	e458      	b.n	800d866 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 800dfb4:	9905      	ldr	r1, [sp, #20]
 800dfb6:	ebb1 0109 	subs.w	r1, r1, r9
 800dfba:	bf5b      	ittet	pl
 800dfbc:	f1cc 0520 	rsbpl	r5, ip, #32
 800dfc0:	436c      	mulpl	r4, r5
 800dfc2:	2500      	movmi	r5, #0
 800dfc4:	2520      	movpl	r5, #32
 800dfc6:	bf44      	itt	mi
 800dfc8:	fb04 f40c 	mulmi.w	r4, r4, ip
 800dfcc:	4249      	negmi	r1, r1
 800dfce:	9501      	str	r5, [sp, #4]
 800dfd0:	9b01      	ldr	r3, [sp, #4]
 800dfd2:	fb94 f5f1 	sdiv	r5, r4, r1
 800dfd6:	fb01 4415 	mls	r4, r1, r5, r4
 800dfda:	bf54      	ite	pl
 800dfdc:	f04f 0901 	movpl.w	r9, #1
 800dfe0:	f04f 39ff 	movmi.w	r9, #4294967295
 800dfe4:	2c00      	cmp	r4, #0
 800dfe6:	bfb8      	it	lt
 800dfe8:	f105 35ff 	addlt.w	r5, r5, #4294967295
 800dfec:	449c      	add	ip, r3
 800dfee:	44a8      	add	r8, r5
 800dff0:	fb05 ac0c 	mla	ip, r5, ip, sl
 800dff4:	f8a7 8004 	strh.w	r8, [r7, #4]
 800dff8:	f8a7 c006 	strh.w	ip, [r7, #6]
 800dffc:	f8d0 c010 	ldr.w	ip, [r0, #16]
 800e000:	f8bc 8006 	ldrh.w	r8, [ip, #6]
 800e004:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 800e008:	bfb8      	it	lt
 800e00a:	1864      	addlt	r4, r4, r1
 800e00c:	ea58 0707 	orrs.w	r7, r8, r7
 800e010:	eb0b 0309 	add.w	r3, fp, r9
 800e014:	d011      	beq.n	800e03a <_ZN8touchgfx7Outline10renderLineEiiii+0x886>
 800e016:	f9bc 8002 	ldrsh.w	r8, [ip, #2]
 800e01a:	f1b8 0f00 	cmp.w	r8, #0
 800e01e:	db0c      	blt.n	800e03a <_ZN8touchgfx7Outline10renderLineEiiii+0x886>
 800e020:	6ac7      	ldr	r7, [r0, #44]	@ 0x2c
 800e022:	45b8      	cmp	r8, r7
 800e024:	da09      	bge.n	800e03a <_ZN8touchgfx7Outline10renderLineEiiii+0x886>
 800e026:	e9d0 7801 	ldrd	r7, r8, [r0, #4]
 800e02a:	45b8      	cmp	r8, r7
 800e02c:	bf3c      	itt	cc
 800e02e:	f10c 0708 	addcc.w	r7, ip, #8
 800e032:	6107      	strcc	r7, [r0, #16]
 800e034:	f108 0701 	add.w	r7, r8, #1
 800e038:	6087      	str	r7, [r0, #8]
 800e03a:	6907      	ldr	r7, [r0, #16]
 800e03c:	f04f 0c00 	mov.w	ip, #0
 800e040:	b212      	sxth	r2, r2
 800e042:	459e      	cmp	lr, r3
 800e044:	803b      	strh	r3, [r7, #0]
 800e046:	807a      	strh	r2, [r7, #2]
 800e048:	f8a7 c004 	strh.w	ip, [r7, #4]
 800e04c:	f8a7 c006 	strh.w	ip, [r7, #6]
 800e050:	442e      	add	r6, r5
 800e052:	d04d      	beq.n	800e0f0 <_ZN8touchgfx7Outline10renderLineEiiii+0x93c>
 800e054:	9f04      	ldr	r7, [sp, #16]
 800e056:	1bbf      	subs	r7, r7, r6
 800e058:	443d      	add	r5, r7
 800e05a:	016d      	lsls	r5, r5, #5
 800e05c:	fb95 f8f1 	sdiv	r8, r5, r1
 800e060:	fb01 5518 	mls	r5, r1, r8, r5
 800e064:	4565      	cmp	r5, ip
 800e066:	bfb8      	it	lt
 800e068:	f108 38ff 	addlt.w	r8, r8, #4294967295
 800e06c:	f108 0701 	add.w	r7, r8, #1
 800e070:	bfb8      	it	lt
 800e072:	186d      	addlt	r5, r5, r1
 800e074:	1a64      	subs	r4, r4, r1
 800e076:	9703      	str	r7, [sp, #12]
 800e078:	f04f 0a00 	mov.w	sl, #0
 800e07c:	f8d0 c010 	ldr.w	ip, [r0, #16]
 800e080:	1964      	adds	r4, r4, r5
 800e082:	bf58      	it	pl
 800e084:	9f03      	ldrpl	r7, [sp, #12]
 800e086:	f8bc b004 	ldrh.w	fp, [ip, #4]
 800e08a:	bf48      	it	mi
 800e08c:	4647      	movmi	r7, r8
 800e08e:	44bb      	add	fp, r7
 800e090:	f8ac b004 	strh.w	fp, [ip, #4]
 800e094:	f8bc b006 	ldrh.w	fp, [ip, #6]
 800e098:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
 800e09c:	f8ac b006 	strh.w	fp, [ip, #6]
 800e0a0:	f8d0 c010 	ldr.w	ip, [r0, #16]
 800e0a4:	443e      	add	r6, r7
 800e0a6:	f8bc b006 	ldrh.w	fp, [ip, #6]
 800e0aa:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 800e0ae:	bf58      	it	pl
 800e0b0:	1a64      	subpl	r4, r4, r1
 800e0b2:	ea5b 0707 	orrs.w	r7, fp, r7
 800e0b6:	444b      	add	r3, r9
 800e0b8:	d011      	beq.n	800e0de <_ZN8touchgfx7Outline10renderLineEiiii+0x92a>
 800e0ba:	f9bc b002 	ldrsh.w	fp, [ip, #2]
 800e0be:	f1bb 0f00 	cmp.w	fp, #0
 800e0c2:	db0c      	blt.n	800e0de <_ZN8touchgfx7Outline10renderLineEiiii+0x92a>
 800e0c4:	6ac7      	ldr	r7, [r0, #44]	@ 0x2c
 800e0c6:	45bb      	cmp	fp, r7
 800e0c8:	da09      	bge.n	800e0de <_ZN8touchgfx7Outline10renderLineEiiii+0x92a>
 800e0ca:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
 800e0ce:	45bb      	cmp	fp, r7
 800e0d0:	bf3c      	itt	cc
 800e0d2:	f10c 0708 	addcc.w	r7, ip, #8
 800e0d6:	6107      	strcc	r7, [r0, #16]
 800e0d8:	f10b 0701 	add.w	r7, fp, #1
 800e0dc:	6087      	str	r7, [r0, #8]
 800e0de:	6907      	ldr	r7, [r0, #16]
 800e0e0:	459e      	cmp	lr, r3
 800e0e2:	803b      	strh	r3, [r7, #0]
 800e0e4:	807a      	strh	r2, [r7, #2]
 800e0e6:	f8a7 a004 	strh.w	sl, [r7, #4]
 800e0ea:	f8a7 a006 	strh.w	sl, [r7, #6]
 800e0ee:	d1c5      	bne.n	800e07c <_ZN8touchgfx7Outline10renderLineEiiii+0x8c8>
 800e0f0:	9b04      	ldr	r3, [sp, #16]
 800e0f2:	1b9e      	subs	r6, r3, r6
 800e0f4:	6903      	ldr	r3, [r0, #16]
 800e0f6:	889a      	ldrh	r2, [r3, #4]
 800e0f8:	4432      	add	r2, r6
 800e0fa:	809a      	strh	r2, [r3, #4]
 800e0fc:	9a02      	ldr	r2, [sp, #8]
 800e0fe:	f102 0c20 	add.w	ip, r2, #32
 800e102:	9a01      	ldr	r2, [sp, #4]
 800e104:	ebac 0c02 	sub.w	ip, ip, r2
 800e108:	88da      	ldrh	r2, [r3, #6]
 800e10a:	fb06 260c 	mla	r6, r6, ip, r2
 800e10e:	80de      	strh	r6, [r3, #6]
 800e110:	f7ff bba9 	b.w	800d866 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>

0800e114 <_ZN8touchgfx7Outline6lineToEii>:
 800e114:	6a43      	ldr	r3, [r0, #36]	@ 0x24
 800e116:	079b      	lsls	r3, r3, #30
 800e118:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800e11a:	460e      	mov	r6, r1
 800e11c:	4615      	mov	r5, r2
 800e11e:	d511      	bpl.n	800e144 <_ZN8touchgfx7Outline6lineToEii+0x30>
 800e120:	e9d0 1205 	ldrd	r1, r2, [r0, #20]
 800e124:	ea86 0701 	eor.w	r7, r6, r1
 800e128:	ea85 0302 	eor.w	r3, r5, r2
 800e12c:	433b      	orrs	r3, r7
 800e12e:	d009      	beq.n	800e144 <_ZN8touchgfx7Outline6lineToEii+0x30>
 800e130:	4633      	mov	r3, r6
 800e132:	9500      	str	r5, [sp, #0]
 800e134:	f7ff fb3e 	bl	800d7b4 <_ZN8touchgfx7Outline10renderLineEiiii>
 800e138:	6a43      	ldr	r3, [r0, #36]	@ 0x24
 800e13a:	e9c0 6505 	strd	r6, r5, [r0, #20]
 800e13e:	f043 0301 	orr.w	r3, r3, #1
 800e142:	6243      	str	r3, [r0, #36]	@ 0x24
 800e144:	b003      	add	sp, #12
 800e146:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800e148 <_ZN8touchgfx7Outline6moveToEii>:
 800e148:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800e14a:	6a43      	ldr	r3, [r0, #36]	@ 0x24
 800e14c:	4615      	mov	r5, r2
 800e14e:	079a      	lsls	r2, r3, #30
 800e150:	4604      	mov	r4, r0
 800e152:	460e      	mov	r6, r1
 800e154:	d401      	bmi.n	800e15a <_ZN8touchgfx7Outline6moveToEii+0x12>
 800e156:	f7ff faf9 	bl	800d74c <_ZN8touchgfx7Outline5resetEv>
 800e15a:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 800e15c:	07db      	lsls	r3, r3, #31
 800e15e:	d504      	bpl.n	800e16a <_ZN8touchgfx7Outline6moveToEii+0x22>
 800e160:	e9d4 1207 	ldrd	r1, r2, [r4, #28]
 800e164:	4620      	mov	r0, r4
 800e166:	f7ff ffd5 	bl	800e114 <_ZN8touchgfx7Outline6lineToEii>
 800e16a:	6923      	ldr	r3, [r4, #16]
 800e16c:	f9b3 2000 	ldrsh.w	r2, [r3]
 800e170:	1170      	asrs	r0, r6, #5
 800e172:	4290      	cmp	r0, r2
 800e174:	ea4f 1165 	mov.w	r1, r5, asr #5
 800e178:	d103      	bne.n	800e182 <_ZN8touchgfx7Outline6moveToEii+0x3a>
 800e17a:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 800e17e:	4291      	cmp	r1, r2
 800e180:	d01a      	beq.n	800e1b8 <_ZN8touchgfx7Outline6moveToEii+0x70>
 800e182:	88df      	ldrh	r7, [r3, #6]
 800e184:	889a      	ldrh	r2, [r3, #4]
 800e186:	433a      	orrs	r2, r7
 800e188:	d010      	beq.n	800e1ac <_ZN8touchgfx7Outline6moveToEii+0x64>
 800e18a:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 800e18e:	2a00      	cmp	r2, #0
 800e190:	db0c      	blt.n	800e1ac <_ZN8touchgfx7Outline6moveToEii+0x64>
 800e192:	6ae7      	ldr	r7, [r4, #44]	@ 0x2c
 800e194:	42ba      	cmp	r2, r7
 800e196:	da09      	bge.n	800e1ac <_ZN8touchgfx7Outline6moveToEii+0x64>
 800e198:	e9d4 7201 	ldrd	r7, r2, [r4, #4]
 800e19c:	42ba      	cmp	r2, r7
 800e19e:	bf38      	it	cc
 800e1a0:	3308      	addcc	r3, #8
 800e1a2:	f102 0201 	add.w	r2, r2, #1
 800e1a6:	bf38      	it	cc
 800e1a8:	6123      	strcc	r3, [r4, #16]
 800e1aa:	60a2      	str	r2, [r4, #8]
 800e1ac:	6923      	ldr	r3, [r4, #16]
 800e1ae:	2200      	movs	r2, #0
 800e1b0:	8018      	strh	r0, [r3, #0]
 800e1b2:	8059      	strh	r1, [r3, #2]
 800e1b4:	809a      	strh	r2, [r3, #4]
 800e1b6:	80da      	strh	r2, [r3, #6]
 800e1b8:	6166      	str	r6, [r4, #20]
 800e1ba:	e9c4 5606 	strd	r5, r6, [r4, #24]
 800e1be:	6225      	str	r5, [r4, #32]
 800e1c0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

0800e1c2 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj>:
 800e1c2:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800e1c6:	b0d0      	sub	sp, #320	@ 0x140
 800e1c8:	466c      	mov	r4, sp
 800e1ca:	eb00 01c1 	add.w	r1, r0, r1, lsl #3
 800e1ce:	4627      	mov	r7, r4
 800e1d0:	1a0d      	subs	r5, r1, r0
 800e1d2:	2d48      	cmp	r5, #72	@ 0x48
 800e1d4:	f100 0308 	add.w	r3, r0, #8
 800e1d8:	f340 80d5 	ble.w	800e386 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1c4>
 800e1dc:	112d      	asrs	r5, r5, #4
 800e1de:	eb00 02c5 	add.w	r2, r0, r5, lsl #3
 800e1e2:	f9b0 9000 	ldrsh.w	r9, [r0]
 800e1e6:	6816      	ldr	r6, [r2, #0]
 800e1e8:	f9b0 8002 	ldrsh.w	r8, [r0, #2]
 800e1ec:	6006      	str	r6, [r0, #0]
 800e1ee:	6856      	ldr	r6, [r2, #4]
 800e1f0:	f9b0 c006 	ldrsh.w	ip, [r0, #6]
 800e1f4:	f9b0 e004 	ldrsh.w	lr, [r0, #4]
 800e1f8:	6046      	str	r6, [r0, #4]
 800e1fa:	f820 9035 	strh.w	r9, [r0, r5, lsl #3]
 800e1fe:	f8a2 8002 	strh.w	r8, [r2, #2]
 800e202:	f8a2 e004 	strh.w	lr, [r2, #4]
 800e206:	f8a2 c006 	strh.w	ip, [r2, #6]
 800e20a:	f931 5c06 	ldrsh.w	r5, [r1, #-6]
 800e20e:	f9b0 c00a 	ldrsh.w	ip, [r0, #10]
 800e212:	4565      	cmp	r5, ip
 800e214:	f1a1 0208 	sub.w	r2, r1, #8
 800e218:	db06      	blt.n	800e228 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x66>
 800e21a:	d119      	bne.n	800e250 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x8e>
 800e21c:	f9b0 6008 	ldrsh.w	r6, [r0, #8]
 800e220:	f931 5c08 	ldrsh.w	r5, [r1, #-8]
 800e224:	42ae      	cmp	r6, r5
 800e226:	dd13      	ble.n	800e250 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x8e>
 800e228:	460e      	mov	r6, r1
 800e22a:	f9b0 9008 	ldrsh.w	r9, [r0, #8]
 800e22e:	f856 5d08 	ldr.w	r5, [r6, #-8]!
 800e232:	f9b0 800c 	ldrsh.w	r8, [r0, #12]
 800e236:	f9b0 e00e 	ldrsh.w	lr, [r0, #14]
 800e23a:	601d      	str	r5, [r3, #0]
 800e23c:	6875      	ldr	r5, [r6, #4]
 800e23e:	605d      	str	r5, [r3, #4]
 800e240:	f821 9c08 	strh.w	r9, [r1, #-8]
 800e244:	f821 cc06 	strh.w	ip, [r1, #-6]
 800e248:	f821 8c04 	strh.w	r8, [r1, #-4]
 800e24c:	f821 ec02 	strh.w	lr, [r1, #-2]
 800e250:	f9b0 6002 	ldrsh.w	r6, [r0, #2]
 800e254:	f9b0 500a 	ldrsh.w	r5, [r0, #10]
 800e258:	42ae      	cmp	r6, r5
 800e25a:	db06      	blt.n	800e26a <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xa8>
 800e25c:	d116      	bne.n	800e28c <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xca>
 800e25e:	f9b0 c000 	ldrsh.w	ip, [r0]
 800e262:	f9b0 5008 	ldrsh.w	r5, [r0, #8]
 800e266:	45ac      	cmp	ip, r5
 800e268:	da10      	bge.n	800e28c <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xca>
 800e26a:	681d      	ldr	r5, [r3, #0]
 800e26c:	f9b0 8000 	ldrsh.w	r8, [r0]
 800e270:	6005      	str	r5, [r0, #0]
 800e272:	685d      	ldr	r5, [r3, #4]
 800e274:	f9b0 e004 	ldrsh.w	lr, [r0, #4]
 800e278:	f9b0 c006 	ldrsh.w	ip, [r0, #6]
 800e27c:	f8a0 8008 	strh.w	r8, [r0, #8]
 800e280:	6045      	str	r5, [r0, #4]
 800e282:	8146      	strh	r6, [r0, #10]
 800e284:	f8a0 e00c 	strh.w	lr, [r0, #12]
 800e288:	f8a0 c00e 	strh.w	ip, [r0, #14]
 800e28c:	f931 5c06 	ldrsh.w	r5, [r1, #-6]
 800e290:	f9b0 c002 	ldrsh.w	ip, [r0, #2]
 800e294:	4565      	cmp	r5, ip
 800e296:	db06      	blt.n	800e2a6 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe4>
 800e298:	d119      	bne.n	800e2ce <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 800e29a:	f931 6c08 	ldrsh.w	r6, [r1, #-8]
 800e29e:	f9b0 5000 	ldrsh.w	r5, [r0]
 800e2a2:	42ae      	cmp	r6, r5
 800e2a4:	da13      	bge.n	800e2ce <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 800e2a6:	460e      	mov	r6, r1
 800e2a8:	f9b0 9000 	ldrsh.w	r9, [r0]
 800e2ac:	f856 5d08 	ldr.w	r5, [r6, #-8]!
 800e2b0:	6005      	str	r5, [r0, #0]
 800e2b2:	f9b0 8004 	ldrsh.w	r8, [r0, #4]
 800e2b6:	f9b0 e006 	ldrsh.w	lr, [r0, #6]
 800e2ba:	6875      	ldr	r5, [r6, #4]
 800e2bc:	6045      	str	r5, [r0, #4]
 800e2be:	f821 9c08 	strh.w	r9, [r1, #-8]
 800e2c2:	f821 cc06 	strh.w	ip, [r1, #-6]
 800e2c6:	f821 8c04 	strh.w	r8, [r1, #-4]
 800e2ca:	f821 ec02 	strh.w	lr, [r1, #-2]
 800e2ce:	3308      	adds	r3, #8
 800e2d0:	f9b0 c002 	ldrsh.w	ip, [r0, #2]
 800e2d4:	f9b3 e002 	ldrsh.w	lr, [r3, #2]
 800e2d8:	45e6      	cmp	lr, ip
 800e2da:	dbf8      	blt.n	800e2ce <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 800e2dc:	d105      	bne.n	800e2ea <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
 800e2de:	f9b3 6000 	ldrsh.w	r6, [r3]
 800e2e2:	f9b0 5000 	ldrsh.w	r5, [r0]
 800e2e6:	42ae      	cmp	r6, r5
 800e2e8:	dbf1      	blt.n	800e2ce <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 800e2ea:	4615      	mov	r5, r2
 800e2ec:	3a08      	subs	r2, #8
 800e2ee:	f9b2 6002 	ldrsh.w	r6, [r2, #2]
 800e2f2:	45b4      	cmp	ip, r6
 800e2f4:	dbf9      	blt.n	800e2ea <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
 800e2f6:	d105      	bne.n	800e304 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x142>
 800e2f8:	f9b0 8000 	ldrsh.w	r8, [r0]
 800e2fc:	f9b2 6000 	ldrsh.w	r6, [r2]
 800e300:	45b0      	cmp	r8, r6
 800e302:	dbf2      	blt.n	800e2ea <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
 800e304:	4293      	cmp	r3, r2
 800e306:	f1a5 0608 	sub.w	r6, r5, #8
 800e30a:	d816      	bhi.n	800e33a <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x178>
 800e30c:	f8d6 c000 	ldr.w	ip, [r6]
 800e310:	f9b3 a000 	ldrsh.w	sl, [r3]
 800e314:	f8c3 c000 	str.w	ip, [r3]
 800e318:	f9b3 9004 	ldrsh.w	r9, [r3, #4]
 800e31c:	f9b3 8006 	ldrsh.w	r8, [r3, #6]
 800e320:	f8d6 c004 	ldr.w	ip, [r6, #4]
 800e324:	f8c3 c004 	str.w	ip, [r3, #4]
 800e328:	f825 ac08 	strh.w	sl, [r5, #-8]
 800e32c:	f825 ec06 	strh.w	lr, [r5, #-6]
 800e330:	f825 9c04 	strh.w	r9, [r5, #-4]
 800e334:	f825 8c02 	strh.w	r8, [r5, #-2]
 800e338:	e7c9      	b.n	800e2ce <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 800e33a:	f8d6 e000 	ldr.w	lr, [r6]
 800e33e:	f9b0 a000 	ldrsh.w	sl, [r0]
 800e342:	f8c0 e000 	str.w	lr, [r0]
 800e346:	f9b0 9004 	ldrsh.w	r9, [r0, #4]
 800e34a:	f9b0 8006 	ldrsh.w	r8, [r0, #6]
 800e34e:	f8d6 e004 	ldr.w	lr, [r6, #4]
 800e352:	f8c0 e004 	str.w	lr, [r0, #4]
 800e356:	f825 ac08 	strh.w	sl, [r5, #-8]
 800e35a:	f825 cc06 	strh.w	ip, [r5, #-6]
 800e35e:	f825 9c04 	strh.w	r9, [r5, #-4]
 800e362:	f825 8c02 	strh.w	r8, [r5, #-2]
 800e366:	1acd      	subs	r5, r1, r3
 800e368:	1a16      	subs	r6, r2, r0
 800e36a:	10ed      	asrs	r5, r5, #3
 800e36c:	ebb5 0fe6 	cmp.w	r5, r6, asr #3
 800e370:	bfb5      	itete	lt
 800e372:	e9c4 0200 	strdlt	r0, r2, [r4]
 800e376:	e9c4 3100 	strdge	r3, r1, [r4]
 800e37a:	460a      	movlt	r2, r1
 800e37c:	4603      	movge	r3, r0
 800e37e:	3408      	adds	r4, #8
 800e380:	4618      	mov	r0, r3
 800e382:	4611      	mov	r1, r2
 800e384:	e724      	b.n	800e1d0 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe>
 800e386:	4299      	cmp	r1, r3
 800e388:	d928      	bls.n	800e3dc <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x21a>
 800e38a:	f1a3 0210 	sub.w	r2, r3, #16
 800e38e:	f9b2 c012 	ldrsh.w	ip, [r2, #18]
 800e392:	f9b2 500a 	ldrsh.w	r5, [r2, #10]
 800e396:	45ac      	cmp	ip, r5
 800e398:	db06      	blt.n	800e3a8 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1e6>
 800e39a:	d11d      	bne.n	800e3d8 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x216>
 800e39c:	f9b2 6010 	ldrsh.w	r6, [r2, #16]
 800e3a0:	f9b2 5008 	ldrsh.w	r5, [r2, #8]
 800e3a4:	42ae      	cmp	r6, r5
 800e3a6:	da17      	bge.n	800e3d8 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x216>
 800e3a8:	4615      	mov	r5, r2
 800e3aa:	f9b2 9010 	ldrsh.w	r9, [r2, #16]
 800e3ae:	f855 6f08 	ldr.w	r6, [r5, #8]!
 800e3b2:	6116      	str	r6, [r2, #16]
 800e3b4:	686e      	ldr	r6, [r5, #4]
 800e3b6:	f9b2 8014 	ldrsh.w	r8, [r2, #20]
 800e3ba:	f9b2 e016 	ldrsh.w	lr, [r2, #22]
 800e3be:	f8a2 9008 	strh.w	r9, [r2, #8]
 800e3c2:	42a8      	cmp	r0, r5
 800e3c4:	6156      	str	r6, [r2, #20]
 800e3c6:	f8a2 c00a 	strh.w	ip, [r2, #10]
 800e3ca:	f8a2 800c 	strh.w	r8, [r2, #12]
 800e3ce:	f8a2 e00e 	strh.w	lr, [r2, #14]
 800e3d2:	f1a2 0208 	sub.w	r2, r2, #8
 800e3d6:	d1da      	bne.n	800e38e <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1cc>
 800e3d8:	3308      	adds	r3, #8
 800e3da:	e7d4      	b.n	800e386 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1c4>
 800e3dc:	42bc      	cmp	r4, r7
 800e3de:	d903      	bls.n	800e3e8 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x226>
 800e3e0:	e954 0102 	ldrd	r0, r1, [r4, #-8]
 800e3e4:	3c08      	subs	r4, #8
 800e3e6:	e6f3      	b.n	800e1d0 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe>
 800e3e8:	b050      	add	sp, #320	@ 0x140
 800e3ea:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

0800e3ee <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv>:
 800e3ee:	b510      	push	{r4, lr}
 800e3f0:	6a43      	ldr	r3, [r0, #36]	@ 0x24
 800e3f2:	07da      	lsls	r2, r3, #31
 800e3f4:	4604      	mov	r4, r0
 800e3f6:	d507      	bpl.n	800e408 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x1a>
 800e3f8:	e9d0 1207 	ldrd	r1, r2, [r0, #28]
 800e3fc:	f7ff fe8a 	bl	800e114 <_ZN8touchgfx7Outline6lineToEii>
 800e400:	6a43      	ldr	r3, [r0, #36]	@ 0x24
 800e402:	f023 0301 	bic.w	r3, r3, #1
 800e406:	6243      	str	r3, [r0, #36]	@ 0x24
 800e408:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 800e40a:	079b      	lsls	r3, r3, #30
 800e40c:	d521      	bpl.n	800e452 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x64>
 800e40e:	6923      	ldr	r3, [r4, #16]
 800e410:	88d9      	ldrh	r1, [r3, #6]
 800e412:	889a      	ldrh	r2, [r3, #4]
 800e414:	430a      	orrs	r2, r1
 800e416:	d010      	beq.n	800e43a <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
 800e418:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 800e41c:	2a00      	cmp	r2, #0
 800e41e:	db0c      	blt.n	800e43a <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
 800e420:	6ae1      	ldr	r1, [r4, #44]	@ 0x2c
 800e422:	428a      	cmp	r2, r1
 800e424:	da09      	bge.n	800e43a <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
 800e426:	e9d4 1201 	ldrd	r1, r2, [r4, #4]
 800e42a:	4291      	cmp	r1, r2
 800e42c:	bf88      	it	hi
 800e42e:	3308      	addhi	r3, #8
 800e430:	f102 0201 	add.w	r2, r2, #1
 800e434:	bf88      	it	hi
 800e436:	6123      	strhi	r3, [r4, #16]
 800e438:	60a2      	str	r2, [r4, #8]
 800e43a:	68a1      	ldr	r1, [r4, #8]
 800e43c:	b129      	cbz	r1, 800e44a <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x5c>
 800e43e:	6863      	ldr	r3, [r4, #4]
 800e440:	4299      	cmp	r1, r3
 800e442:	d802      	bhi.n	800e44a <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x5c>
 800e444:	68e0      	ldr	r0, [r4, #12]
 800e446:	f7ff febc 	bl	800e1c2 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj>
 800e44a:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 800e44c:	f023 0302 	bic.w	r3, r3, #2
 800e450:	6263      	str	r3, [r4, #36]	@ 0x24
 800e452:	68e0      	ldr	r0, [r4, #12]
 800e454:	bd10      	pop	{r4, pc}
	...

0800e458 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>:
 800e458:	4b02      	ldr	r3, [pc, #8]	@ (800e464 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj+0xc>)
 800e45a:	6018      	str	r0, [r3, #0]
 800e45c:	4b02      	ldr	r3, [pc, #8]	@ (800e468 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj+0x10>)
 800e45e:	6019      	str	r1, [r3, #0]
 800e460:	4770      	bx	lr
 800e462:	bf00      	nop
 800e464:	20013f34 	.word	0x20013f34
 800e468:	20013f38 	.word	0x20013f38

0800e46c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>:
 800e46c:	4a02      	ldr	r2, [pc, #8]	@ (800e478 <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv+0xc>)
 800e46e:	2300      	movs	r3, #0
 800e470:	6013      	str	r3, [r2, #0]
 800e472:	4a02      	ldr	r2, [pc, #8]	@ (800e47c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv+0x10>)
 800e474:	6013      	str	r3, [r2, #0]
 800e476:	4770      	bx	lr
 800e478:	20013f34 	.word	0x20013f34
 800e47c:	20013f38 	.word	0x20013f38

0800e480 <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv>:
 800e480:	4b01      	ldr	r3, [pc, #4]	@ (800e488 <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv+0x8>)
 800e482:	6818      	ldr	r0, [r3, #0]
 800e484:	4770      	bx	lr
 800e486:	bf00      	nop
 800e488:	20013f34 	.word	0x20013f34

0800e48c <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv>:
 800e48c:	4b01      	ldr	r3, [pc, #4]	@ (800e494 <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv+0x8>)
 800e48e:	6818      	ldr	r0, [r3, #0]
 800e490:	4770      	bx	lr
 800e492:	bf00      	nop
 800e494:	20013f38 	.word	0x20013f38

0800e498 <_ZN8touchgfx3LCD27supportDynamicBitmapDrawingENS_6Bitmap12BitmapFormatE>:
 800e498:	b510      	push	{r4, lr}
 800e49a:	6803      	ldr	r3, [r0, #0]
 800e49c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800e49e:	460c      	mov	r4, r1
 800e4a0:	4798      	blx	r3
 800e4a2:	1b03      	subs	r3, r0, r4
 800e4a4:	4258      	negs	r0, r3
 800e4a6:	4158      	adcs	r0, r3
 800e4a8:	bd10      	pop	{r4, pc}
	...

0800e4ac <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE>:
 800e4ac:	4b01      	ldr	r3, [pc, #4]	@ (800e4b4 <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE+0x8>)
 800e4ae:	6019      	str	r1, [r3, #0]
 800e4b0:	4770      	bx	lr
 800e4b2:	bf00      	nop
 800e4b4:	20013f3c 	.word	0x20013f3c

0800e4b8 <_ZN8touchgfx3LCD18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
 800e4b8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e4bc:	4696      	mov	lr, r2
 800e4be:	4605      	mov	r5, r0
 800e4c0:	4614      	mov	r4, r2
 800e4c2:	460e      	mov	r6, r1
 800e4c4:	461f      	mov	r7, r3
 800e4c6:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800e4ca:	b097      	sub	sp, #92	@ 0x5c
 800e4cc:	f10d 0c1c 	add.w	ip, sp, #28
 800e4d0:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800e4d4:	f8de 3000 	ldr.w	r3, [lr]
 800e4d8:	f8cc 3000 	str.w	r3, [ip]
 800e4dc:	f104 0e14 	add.w	lr, r4, #20
 800e4e0:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800e4e4:	f10d 0c30 	add.w	ip, sp, #48	@ 0x30
 800e4e8:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800e4ec:	f8de 3000 	ldr.w	r3, [lr]
 800e4f0:	f8cc 3000 	str.w	r3, [ip]
 800e4f4:	f104 0e28 	add.w	lr, r4, #40	@ 0x28
 800e4f8:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800e4fc:	f10d 0c44 	add.w	ip, sp, #68	@ 0x44
 800e500:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800e504:	f89d 908c 	ldrb.w	r9, [sp, #140]	@ 0x8c
 800e508:	f8bd a090 	ldrh.w	sl, [sp, #144]	@ 0x90
 800e50c:	f8bd 8088 	ldrh.w	r8, [sp, #136]	@ 0x88
 800e510:	f8de 3000 	ldr.w	r3, [lr]
 800e514:	f8cc 3000 	str.w	r3, [ip]
 800e518:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 800e51a:	682b      	ldr	r3, [r5, #0]
 800e51c:	9201      	str	r2, [sp, #4]
 800e51e:	e9cd 9a03 	strd	r9, sl, [sp, #12]
 800e522:	9a20      	ldr	r2, [sp, #128]	@ 0x80
 800e524:	9200      	str	r2, [sp, #0]
 800e526:	f8cd 8008 	str.w	r8, [sp, #8]
 800e52a:	f8d3 b03c 	ldr.w	fp, [r3, #60]	@ 0x3c
 800e52e:	aa07      	add	r2, sp, #28
 800e530:	463b      	mov	r3, r7
 800e532:	4631      	mov	r1, r6
 800e534:	4628      	mov	r0, r5
 800e536:	47d8      	blx	fp
 800e538:	46a6      	mov	lr, r4
 800e53a:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800e53e:	f10d 0c1c 	add.w	ip, sp, #28
 800e542:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800e546:	f8de 3000 	ldr.w	r3, [lr]
 800e54a:	f8cc 3000 	str.w	r3, [ip]
 800e54e:	f104 0e28 	add.w	lr, r4, #40	@ 0x28
 800e552:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800e556:	f10d 0c30 	add.w	ip, sp, #48	@ 0x30
 800e55a:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800e55e:	343c      	adds	r4, #60	@ 0x3c
 800e560:	f8de 3000 	ldr.w	r3, [lr]
 800e564:	f8cc 3000 	str.w	r3, [ip]
 800e568:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800e56a:	f10d 0c44 	add.w	ip, sp, #68	@ 0x44
 800e56e:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800e572:	6823      	ldr	r3, [r4, #0]
 800e574:	f8cc 3000 	str.w	r3, [ip]
 800e578:	682b      	ldr	r3, [r5, #0]
 800e57a:	e9cd 9a03 	strd	r9, sl, [sp, #12]
 800e57e:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 800e580:	9201      	str	r2, [sp, #4]
 800e582:	9a20      	ldr	r2, [sp, #128]	@ 0x80
 800e584:	9200      	str	r2, [sp, #0]
 800e586:	f8cd 8008 	str.w	r8, [sp, #8]
 800e58a:	6bdc      	ldr	r4, [r3, #60]	@ 0x3c
 800e58c:	aa07      	add	r2, sp, #28
 800e58e:	463b      	mov	r3, r7
 800e590:	4631      	mov	r1, r6
 800e592:	4628      	mov	r0, r5
 800e594:	47a0      	blx	r4
 800e596:	b017      	add	sp, #92	@ 0x5c
 800e598:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800e59c <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht>:
 800e59c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e5a0:	b08d      	sub	sp, #52	@ 0x34
 800e5a2:	4688      	mov	r8, r1
 800e5a4:	9916      	ldr	r1, [sp, #88]	@ 0x58
 800e5a6:	f8d3 c000 	ldr.w	ip, [r3]
 800e5aa:	680f      	ldr	r7, [r1, #0]
 800e5ac:	f8bd 4070 	ldrh.w	r4, [sp, #112]	@ 0x70
 800e5b0:	ed92 4a09 	vldr	s8, [r2, #36]	@ 0x24
 800e5b4:	edd2 4a0b 	vldr	s9, [r2, #44]	@ 0x2c
 800e5b8:	edd3 6a07 	vldr	s13, [r3, #28]
 800e5bc:	9918      	ldr	r1, [sp, #96]	@ 0x60
 800e5be:	f8dd a064 	ldr.w	sl, [sp, #100]	@ 0x64
 800e5c2:	f9b1 9000 	ldrsh.w	r9, [r1]
 800e5c6:	f9ba 1000 	ldrsh.w	r1, [sl]
 800e5ca:	edd3 1a0a 	vldr	s3, [r3, #40]	@ 0x28
 800e5ce:	ed93 2a0d 	vldr	s4, [r3, #52]	@ 0x34
 800e5d2:	eba7 070c 	sub.w	r7, r7, ip
 800e5d6:	42bc      	cmp	r4, r7
 800e5d8:	bfa8      	it	ge
 800e5da:	463c      	movge	r4, r7
 800e5dc:	ee07 4a90 	vmov	s15, r4
 800e5e0:	eeb8 5ae7 	vcvt.f32.s32	s10, s15
 800e5e4:	edd2 7a0d 	vldr	s15, [r2, #52]	@ 0x34
 800e5e8:	ee25 4a04 	vmul.f32	s8, s10, s8
 800e5ec:	ee65 4a24 	vmul.f32	s9, s10, s9
 800e5f0:	ee25 5a27 	vmul.f32	s10, s10, s15
 800e5f4:	eef7 7a00 	vmov.f32	s15, #112	@ 0x3f800000  1.0
 800e5f8:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 800e5fc:	eb09 0e0c 	add.w	lr, r9, ip
 800e600:	4571      	cmp	r1, lr
 800e602:	ee71 0aa4 	vadd.f32	s1, s3, s9
 800e606:	ee32 1a05 	vadd.f32	s2, s4, s10
 800e60a:	ee36 0a84 	vadd.f32	s0, s13, s8
 800e60e:	ee61 1a87 	vmul.f32	s3, s3, s14
 800e612:	ee22 2a07 	vmul.f32	s4, s4, s14
 800e616:	f340 808d 	ble.w	800e734 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x198>
 800e61a:	eba1 060e 	sub.w	r6, r1, lr
 800e61e:	fb96 f5f4 	sdiv	r5, r6, r4
 800e622:	ee07 5a10 	vmov	s14, r5
 800e626:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800e62a:	2d00      	cmp	r5, #0
 800e62c:	fb04 6615 	mls	r6, r4, r5, r6
 800e630:	eea7 0a04 	vfma.f32	s0, s14, s8
 800e634:	eee7 0a24 	vfma.f32	s1, s14, s9
 800e638:	eea7 1a05 	vfma.f32	s2, s14, s10
 800e63c:	dd13      	ble.n	800e666 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xca>
 800e63e:	ee70 6a44 	vsub.f32	s13, s0, s8
 800e642:	ee70 1ae4 	vsub.f32	s3, s1, s9
 800e646:	eef5 6a40 	vcmp.f32	s13, #0.0
 800e64a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800e64e:	bf18      	it	ne
 800e650:	ee87 7aa6 	vdivne.f32	s14, s15, s13
 800e654:	ee31 2a45 	vsub.f32	s4, s2, s10
 800e658:	bf08      	it	eq
 800e65a:	eeb0 7a67 	vmoveq.f32	s14, s15
 800e65e:	ee61 1a87 	vmul.f32	s3, s3, s14
 800e662:	ee22 2a07 	vmul.f32	s4, s4, s14
 800e666:	fb05 f204 	mul.w	r2, r5, r4
 800e66a:	1abf      	subs	r7, r7, r2
 800e66c:	4494      	add	ip, r2
 800e66e:	f8ba 2004 	ldrh.w	r2, [sl, #4]
 800e672:	4411      	add	r1, r2
 800e674:	eb09 020c 	add.w	r2, r9, ip
 800e678:	443a      	add	r2, r7
 800e67a:	b209      	sxth	r1, r1
 800e67c:	428a      	cmp	r2, r1
 800e67e:	bfc4      	itt	gt
 800e680:	eba1 0209 	subgt.w	r2, r1, r9
 800e684:	eba2 070c 	subgt.w	r7, r2, ip
 800e688:	2f00      	cmp	r7, #0
 800e68a:	dd50      	ble.n	800e72e <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x192>
 800e68c:	fb97 f1f4 	sdiv	r1, r7, r4
 800e690:	fb04 7211 	mls	r2, r4, r1, r7
 800e694:	b90a      	cbnz	r2, 800e69a <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xfe>
 800e696:	3901      	subs	r1, #1
 800e698:	4622      	mov	r2, r4
 800e69a:	eec7 3a80 	vdiv.f32	s7, s15, s0
 800e69e:	6840      	ldr	r0, [r0, #4]
 800e6a0:	900b      	str	r0, [sp, #44]	@ 0x2c
 800e6a2:	f8d0 a000 	ldr.w	sl, [r0]
 800e6a6:	9817      	ldr	r0, [sp, #92]	@ 0x5c
 800e6a8:	9008      	str	r0, [sp, #32]
 800e6aa:	f89d b06c 	ldrb.w	fp, [sp, #108]	@ 0x6c
 800e6ae:	9818      	ldr	r0, [sp, #96]	@ 0x60
 800e6b0:	f8cd b024 	str.w	fp, [sp, #36]	@ 0x24
 800e6b4:	f9b0 b002 	ldrsh.w	fp, [r0, #2]
 800e6b8:	695b      	ldr	r3, [r3, #20]
 800e6ba:	980b      	ldr	r0, [sp, #44]	@ 0x2c
 800e6bc:	445b      	add	r3, fp
 800e6be:	eef0 6a42 	vmov.f32	s13, s4
 800e6c2:	ee60 2aa3 	vmul.f32	s5, s1, s7
 800e6c6:	ee21 3a23 	vmul.f32	s6, s2, s7
 800e6ca:	ee72 7ae1 	vsub.f32	s15, s5, s3
 800e6ce:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 800e6d2:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 800e6d6:	9307      	str	r3, [sp, #28]
 800e6d8:	ee17 7a90 	vmov	r7, s15
 800e6dc:	ee73 7a42 	vsub.f32	s15, s6, s4
 800e6e0:	eeb0 7a61 	vmov.f32	s14, s3
 800e6e4:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 800e6e8:	ee16 3a90 	vmov	r3, s13
 800e6ec:	fb97 f7f4 	sdiv	r7, r7, r4
 800e6f0:	ee17 ca90 	vmov	ip, s15
 800e6f4:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 800e6f8:	fb9c fcf4 	sdiv	ip, ip, r4
 800e6fc:	fb0c 3306 	mla	r3, ip, r6, r3
 800e700:	9302      	str	r3, [sp, #8]
 800e702:	ee17 3a10 	vmov	r3, s14
 800e706:	44b6      	add	lr, r6
 800e708:	fb04 e505 	mla	r5, r4, r5, lr
 800e70c:	e9cd 7c03 	strd	r7, ip, [sp, #12]
 800e710:	fb07 3706 	mla	r7, r7, r6, r3
 800e714:	e9cd 8505 	strd	r8, r5, [sp, #20]
 800e718:	e9cd 4700 	strd	r4, r7, [sp]
 800e71c:	2900      	cmp	r1, #0
 800e71e:	bfcc      	ite	gt
 800e720:	46a1      	movgt	r9, r4
 800e722:	4691      	movle	r9, r2
 800e724:	eba9 0306 	sub.w	r3, r9, r6
 800e728:	f8da 4008 	ldr.w	r4, [sl, #8]
 800e72c:	47a0      	blx	r4
 800e72e:	b00d      	add	sp, #52	@ 0x34
 800e730:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800e734:	2500      	movs	r5, #0
 800e736:	462e      	mov	r6, r5
 800e738:	e799      	b.n	800e66e <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xd2>
	...

0800e73c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
 800e73c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e740:	b0db      	sub	sp, #364	@ 0x16c
 800e742:	461d      	mov	r5, r3
 800e744:	f8bd 3198 	ldrh.w	r3, [sp, #408]	@ 0x198
 800e748:	930a      	str	r3, [sp, #40]	@ 0x28
 800e74a:	f89d 319c 	ldrb.w	r3, [sp, #412]	@ 0x19c
 800e74e:	930b      	str	r3, [sp, #44]	@ 0x2c
 800e750:	f8bd 31a0 	ldrh.w	r3, [sp, #416]	@ 0x1a0
 800e754:	9310      	str	r3, [sp, #64]	@ 0x40
 800e756:	6803      	ldr	r3, [r0, #0]
 800e758:	910f      	str	r1, [sp, #60]	@ 0x3c
 800e75a:	6c5f      	ldr	r7, [r3, #68]	@ 0x44
 800e75c:	9009      	str	r0, [sp, #36]	@ 0x24
 800e75e:	4614      	mov	r4, r2
 800e760:	4629      	mov	r1, r5
 800e762:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	@ 0x28
 800e766:	f8dd b194 	ldr.w	fp, [sp, #404]	@ 0x194
 800e76a:	47b8      	blx	r7
 800e76c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800e76e:	6058      	str	r0, [r3, #4]
 800e770:	2800      	cmp	r0, #0
 800e772:	f000 83a1 	beq.w	800eeb8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800e776:	682b      	ldr	r3, [r5, #0]
 800e778:	9314      	str	r3, [sp, #80]	@ 0x50
 800e77a:	686b      	ldr	r3, [r5, #4]
 800e77c:	9315      	str	r3, [sp, #84]	@ 0x54
 800e77e:	4bc4      	ldr	r3, [pc, #784]	@ (800ea90 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x354>)
 800e780:	ed94 7a02 	vldr	s14, [r4, #8]
 800e784:	7819      	ldrb	r1, [r3, #0]
 800e786:	e9d5 2302 	ldrd	r2, r3, [r5, #8]
 800e78a:	eef2 7a04 	vmov.f32	s15, #36	@ 0x41200000  10.0
 800e78e:	2900      	cmp	r1, #0
 800e790:	eeb4 7ae7 	vcmpe.f32	s14, s15
 800e794:	bf16      	itet	ne
 800e796:	4619      	movne	r1, r3
 800e798:	4611      	moveq	r1, r2
 800e79a:	4613      	movne	r3, r2
 800e79c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800e7a0:	9116      	str	r1, [sp, #88]	@ 0x58
 800e7a2:	e9cd 3217 	strd	r3, r2, [sp, #92]	@ 0x5c
 800e7a6:	f240 8387 	bls.w	800eeb8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800e7aa:	ed94 7a07 	vldr	s14, [r4, #28]
 800e7ae:	eeb4 7ae7 	vcmpe.f32	s14, s15
 800e7b2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800e7b6:	f240 837f 	bls.w	800eeb8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800e7ba:	ed94 7a0c 	vldr	s14, [r4, #48]	@ 0x30
 800e7be:	eeb4 7ae7 	vcmpe.f32	s14, s15
 800e7c2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800e7c6:	f240 8377 	bls.w	800eeb8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800e7ca:	6822      	ldr	r2, [r4, #0]
 800e7cc:	4bb1      	ldr	r3, [pc, #708]	@ (800ea94 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x358>)
 800e7ce:	429a      	cmp	r2, r3
 800e7d0:	f2c0 8372 	blt.w	800eeb8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800e7d4:	49b0      	ldr	r1, [pc, #704]	@ (800ea98 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x35c>)
 800e7d6:	6963      	ldr	r3, [r4, #20]
 800e7d8:	428a      	cmp	r2, r1
 800e7da:	f300 836d 	bgt.w	800eeb8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800e7de:	f503 331c 	add.w	r3, r3, #159744	@ 0x27000
 800e7e2:	48ae      	ldr	r0, [pc, #696]	@ (800ea9c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x360>)
 800e7e4:	33ff      	adds	r3, #255	@ 0xff
 800e7e6:	4283      	cmp	r3, r0
 800e7e8:	f200 8366 	bhi.w	800eeb8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800e7ec:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
 800e7ee:	4dac      	ldr	r5, [pc, #688]	@ (800eaa0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x364>)
 800e7f0:	f503 331c 	add.w	r3, r3, #159744	@ 0x27000
 800e7f4:	33ff      	adds	r3, #255	@ 0xff
 800e7f6:	42ab      	cmp	r3, r5
 800e7f8:	f200 835e 	bhi.w	800eeb8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800e7fc:	6862      	ldr	r2, [r4, #4]
 800e7fe:	f502 331c 	add.w	r3, r2, #159744	@ 0x27000
 800e802:	33ff      	adds	r3, #255	@ 0xff
 800e804:	4283      	cmp	r3, r0
 800e806:	f200 8357 	bhi.w	800eeb8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800e80a:	69a1      	ldr	r1, [r4, #24]
 800e80c:	f501 331c 	add.w	r3, r1, #159744	@ 0x27000
 800e810:	33ff      	adds	r3, #255	@ 0xff
 800e812:	4283      	cmp	r3, r0
 800e814:	f200 8350 	bhi.w	800eeb8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800e818:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 800e81a:	f503 301c 	add.w	r0, r3, #159744	@ 0x27000
 800e81e:	30ff      	adds	r0, #255	@ 0xff
 800e820:	42a8      	cmp	r0, r5
 800e822:	f200 8349 	bhi.w	800eeb8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800e826:	428a      	cmp	r2, r1
 800e828:	f280 8110 	bge.w	800ea4c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x310>
 800e82c:	429a      	cmp	r2, r3
 800e82e:	f300 8119 	bgt.w	800ea64 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x328>
 800e832:	4299      	cmp	r1, r3
 800e834:	f280 811d 	bge.w	800ea72 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x336>
 800e838:	2502      	movs	r5, #2
 800e83a:	2701      	movs	r7, #1
 800e83c:	46a9      	mov	r9, r5
 800e83e:	46b8      	mov	r8, r7
 800e840:	f04f 0a00 	mov.w	sl, #0
 800e844:	4621      	mov	r1, r4
 800e846:	a849      	add	r0, sp, #292	@ 0x124
 800e848:	f003 fdae 	bl	80123a8 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>
 800e84c:	4622      	mov	r2, r4
 800e84e:	4653      	mov	r3, sl
 800e850:	a949      	add	r1, sp, #292	@ 0x124
 800e852:	f8cd 9000 	str.w	r9, [sp]
 800e856:	a819      	add	r0, sp, #100	@ 0x64
 800e858:	f003 fed6 	bl	8012608 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 800e85c:	4622      	mov	r2, r4
 800e85e:	4653      	mov	r3, sl
 800e860:	a949      	add	r1, sp, #292	@ 0x124
 800e862:	f8cd 8000 	str.w	r8, [sp]
 800e866:	a829      	add	r0, sp, #164	@ 0xa4
 800e868:	f003 fece 	bl	8012608 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 800e86c:	4643      	mov	r3, r8
 800e86e:	4622      	mov	r2, r4
 800e870:	a949      	add	r1, sp, #292	@ 0x124
 800e872:	f8cd 9000 	str.w	r9, [sp]
 800e876:	a839      	add	r0, sp, #228	@ 0xe4
 800e878:	f003 fec6 	bl	8012608 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 800e87c:	42af      	cmp	r7, r5
 800e87e:	bfb5      	itete	lt
 800e880:	2300      	movlt	r3, #0
 800e882:	2301      	movge	r3, #1
 800e884:	930e      	strlt	r3, [sp, #56]	@ 0x38
 800e886:	930e      	strge	r3, [sp, #56]	@ 0x38
 800e888:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 800e88a:	e893 0003 	ldmia.w	r3, {r0, r1}
 800e88e:	af12      	add	r7, sp, #72	@ 0x48
 800e890:	bfb9      	ittee	lt
 800e892:	ad29      	addlt	r5, sp, #164	@ 0xa4
 800e894:	ac19      	addlt	r4, sp, #100	@ 0x64
 800e896:	ad19      	addge	r5, sp, #100	@ 0x64
 800e898:	ac29      	addge	r4, sp, #164	@ 0xa4
 800e89a:	e887 0003 	stmia.w	r7, {r0, r1}
 800e89e:	b928      	cbnz	r0, 800e8ac <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x170>
 800e8a0:	4b80      	ldr	r3, [pc, #512]	@ (800eaa4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x368>)
 800e8a2:	6818      	ldr	r0, [r3, #0]
 800e8a4:	6803      	ldr	r3, [r0, #0]
 800e8a6:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800e8a8:	4798      	blx	r3
 800e8aa:	6038      	str	r0, [r7, #0]
 800e8ac:	9b64      	ldr	r3, [sp, #400]	@ 0x190
 800e8ae:	f8bb 0006 	ldrh.w	r0, [fp, #6]
 800e8b2:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 800e8b6:	930c      	str	r3, [sp, #48]	@ 0x30
 800e8b8:	990c      	ldr	r1, [sp, #48]	@ 0x30
 800e8ba:	6963      	ldr	r3, [r4, #20]
 800e8bc:	9a2f      	ldr	r2, [sp, #188]	@ 0xbc
 800e8be:	440b      	add	r3, r1
 800e8c0:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 800e8c4:	4408      	add	r0, r1
 800e8c6:	b200      	sxth	r0, r0
 800e8c8:	4283      	cmp	r3, r0
 800e8ca:	900d      	str	r0, [sp, #52]	@ 0x34
 800e8cc:	f280 80dd 	bge.w	800ea8a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x34e>
 800e8d0:	428b      	cmp	r3, r1
 800e8d2:	da08      	bge.n	800e8e6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 800e8d4:	2a00      	cmp	r2, #0
 800e8d6:	dd06      	ble.n	800e8e6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 800e8d8:	1acb      	subs	r3, r1, r3
 800e8da:	429a      	cmp	r2, r3
 800e8dc:	f2c0 80e4 	blt.w	800eaa8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36c>
 800e8e0:	2b00      	cmp	r3, #0
 800e8e2:	f300 80e2 	bgt.w	800eaaa <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36e>
 800e8e6:	6967      	ldr	r7, [r4, #20]
 800e8e8:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 800e8ea:	443b      	add	r3, r7
 800e8ec:	461f      	mov	r7, r3
 800e8ee:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 800e8f0:	1bdf      	subs	r7, r3, r7
 800e8f2:	4297      	cmp	r7, r2
 800e8f4:	bfa8      	it	ge
 800e8f6:	4617      	movge	r7, r2
 800e8f8:	f10d 0850 	add.w	r8, sp, #80	@ 0x50
 800e8fc:	2f00      	cmp	r7, #0
 800e8fe:	f340 8166 	ble.w	800ebce <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x492>
 800e902:	9b64      	ldr	r3, [sp, #400]	@ 0x190
 800e904:	6829      	ldr	r1, [r5, #0]
 800e906:	f9b3 2000 	ldrsh.w	r2, [r3]
 800e90a:	f9bb 3000 	ldrsh.w	r3, [fp]
 800e90e:	6820      	ldr	r0, [r4, #0]
 800e910:	4411      	add	r1, r2
 800e912:	4299      	cmp	r1, r3
 800e914:	dd1a      	ble.n	800e94c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
 800e916:	f8bb 1004 	ldrh.w	r1, [fp, #4]
 800e91a:	440b      	add	r3, r1
 800e91c:	4402      	add	r2, r0
 800e91e:	b21b      	sxth	r3, r3
 800e920:	429a      	cmp	r2, r3
 800e922:	dc13      	bgt.n	800e94c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
 800e924:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800e926:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 800e928:	681b      	ldr	r3, [r3, #0]
 800e92a:	9206      	str	r2, [sp, #24]
 800e92c:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 800e92e:	9205      	str	r2, [sp, #20]
 800e930:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 800e932:	9500      	str	r5, [sp, #0]
 800e934:	e9cd b203 	strd	fp, r2, [sp, #12]
 800e938:	9a64      	ldr	r2, [sp, #400]	@ 0x190
 800e93a:	9809      	ldr	r0, [sp, #36]	@ 0x24
 800e93c:	e9cd 8201 	strd	r8, r2, [sp, #4]
 800e940:	a912      	add	r1, sp, #72	@ 0x48
 800e942:	f8d3 9048 	ldr.w	r9, [r3, #72]	@ 0x48
 800e946:	aa49      	add	r2, sp, #292	@ 0x124
 800e948:	4623      	mov	r3, r4
 800e94a:	47c8      	blx	r9
 800e94c:	e9d4 2300 	ldrd	r2, r3, [r4]
 800e950:	441a      	add	r2, r3
 800e952:	6963      	ldr	r3, [r4, #20]
 800e954:	ed94 7a0a 	vldr	s14, [r4, #40]	@ 0x28
 800e958:	edd4 7a0b 	vldr	s15, [r4, #44]	@ 0x2c
 800e95c:	edd4 6a0e 	vldr	s13, [r4, #56]	@ 0x38
 800e960:	68a1      	ldr	r1, [r4, #8]
 800e962:	ed94 6a08 	vldr	s12, [r4, #32]
 800e966:	6022      	str	r2, [r4, #0]
 800e968:	3301      	adds	r3, #1
 800e96a:	6163      	str	r3, [r4, #20]
 800e96c:	69a3      	ldr	r3, [r4, #24]
 800e96e:	ee37 7a27 	vadd.f32	s14, s14, s15
 800e972:	3b01      	subs	r3, #1
 800e974:	edd4 7a0d 	vldr	s15, [r4, #52]	@ 0x34
 800e978:	61a3      	str	r3, [r4, #24]
 800e97a:	6923      	ldr	r3, [r4, #16]
 800e97c:	ed84 7a0a 	vstr	s14, [r4, #40]	@ 0x28
 800e980:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800e984:	edd4 6a07 	vldr	s13, [r4, #28]
 800e988:	edc4 7a0d 	vstr	s15, [r4, #52]	@ 0x34
 800e98c:	440b      	add	r3, r1
 800e98e:	68e1      	ldr	r1, [r4, #12]
 800e990:	6123      	str	r3, [r4, #16]
 800e992:	ee76 6a86 	vadd.f32	s13, s13, s12
 800e996:	428b      	cmp	r3, r1
 800e998:	edc4 6a07 	vstr	s13, [r4, #28]
 800e99c:	db15      	blt.n	800e9ca <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x28e>
 800e99e:	ed94 6a09 	vldr	s12, [r4, #36]	@ 0x24
 800e9a2:	ee76 6a26 	vadd.f32	s13, s12, s13
 800e9a6:	3201      	adds	r2, #1
 800e9a8:	edc4 6a07 	vstr	s13, [r4, #28]
 800e9ac:	edd4 6a0c 	vldr	s13, [r4, #48]	@ 0x30
 800e9b0:	6022      	str	r2, [r4, #0]
 800e9b2:	ee36 7a87 	vadd.f32	s14, s13, s14
 800e9b6:	1a5b      	subs	r3, r3, r1
 800e9b8:	ed84 7a0a 	vstr	s14, [r4, #40]	@ 0x28
 800e9bc:	ed94 7a0f 	vldr	s14, [r4, #60]	@ 0x3c
 800e9c0:	6123      	str	r3, [r4, #16]
 800e9c2:	ee77 7a27 	vadd.f32	s15, s14, s15
 800e9c6:	edc4 7a0d 	vstr	s15, [r4, #52]	@ 0x34
 800e9ca:	e9d5 2300 	ldrd	r2, r3, [r5]
 800e9ce:	441a      	add	r2, r3
 800e9d0:	696b      	ldr	r3, [r5, #20]
 800e9d2:	ed95 7a0a 	vldr	s14, [r5, #40]	@ 0x28
 800e9d6:	edd5 7a0b 	vldr	s15, [r5, #44]	@ 0x2c
 800e9da:	edd5 6a0e 	vldr	s13, [r5, #56]	@ 0x38
 800e9de:	68a9      	ldr	r1, [r5, #8]
 800e9e0:	ed95 6a08 	vldr	s12, [r5, #32]
 800e9e4:	602a      	str	r2, [r5, #0]
 800e9e6:	3301      	adds	r3, #1
 800e9e8:	616b      	str	r3, [r5, #20]
 800e9ea:	69ab      	ldr	r3, [r5, #24]
 800e9ec:	ee37 7a27 	vadd.f32	s14, s14, s15
 800e9f0:	3b01      	subs	r3, #1
 800e9f2:	edd5 7a0d 	vldr	s15, [r5, #52]	@ 0x34
 800e9f6:	61ab      	str	r3, [r5, #24]
 800e9f8:	692b      	ldr	r3, [r5, #16]
 800e9fa:	ed85 7a0a 	vstr	s14, [r5, #40]	@ 0x28
 800e9fe:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800ea02:	edd5 6a07 	vldr	s13, [r5, #28]
 800ea06:	edc5 7a0d 	vstr	s15, [r5, #52]	@ 0x34
 800ea0a:	440b      	add	r3, r1
 800ea0c:	68e9      	ldr	r1, [r5, #12]
 800ea0e:	612b      	str	r3, [r5, #16]
 800ea10:	ee76 6a86 	vadd.f32	s13, s13, s12
 800ea14:	428b      	cmp	r3, r1
 800ea16:	edc5 6a07 	vstr	s13, [r5, #28]
 800ea1a:	db15      	blt.n	800ea48 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x30c>
 800ea1c:	ed95 6a09 	vldr	s12, [r5, #36]	@ 0x24
 800ea20:	ee76 6a26 	vadd.f32	s13, s12, s13
 800ea24:	3201      	adds	r2, #1
 800ea26:	edc5 6a07 	vstr	s13, [r5, #28]
 800ea2a:	edd5 6a0c 	vldr	s13, [r5, #48]	@ 0x30
 800ea2e:	602a      	str	r2, [r5, #0]
 800ea30:	ee36 7a87 	vadd.f32	s14, s13, s14
 800ea34:	1a5b      	subs	r3, r3, r1
 800ea36:	ed85 7a0a 	vstr	s14, [r5, #40]	@ 0x28
 800ea3a:	ed95 7a0f 	vldr	s14, [r5, #60]	@ 0x3c
 800ea3e:	612b      	str	r3, [r5, #16]
 800ea40:	ee77 7a27 	vadd.f32	s15, s14, s15
 800ea44:	edc5 7a0d 	vstr	s15, [r5, #52]	@ 0x34
 800ea48:	3f01      	subs	r7, #1
 800ea4a:	e757      	b.n	800e8fc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1c0>
 800ea4c:	4299      	cmp	r1, r3
 800ea4e:	dc13      	bgt.n	800ea78 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x33c>
 800ea50:	429a      	cmp	r2, r3
 800ea52:	da14      	bge.n	800ea7e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x342>
 800ea54:	2502      	movs	r5, #2
 800ea56:	2703      	movs	r7, #3
 800ea58:	46a9      	mov	r9, r5
 800ea5a:	f04f 0800 	mov.w	r8, #0
 800ea5e:	f04f 0a01 	mov.w	sl, #1
 800ea62:	e6ef      	b.n	800e844 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
 800ea64:	2501      	movs	r5, #1
 800ea66:	2700      	movs	r7, #0
 800ea68:	46a9      	mov	r9, r5
 800ea6a:	46b8      	mov	r8, r7
 800ea6c:	f04f 0a02 	mov.w	sl, #2
 800ea70:	e6e8      	b.n	800e844 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
 800ea72:	2501      	movs	r5, #1
 800ea74:	2702      	movs	r7, #2
 800ea76:	e6e1      	b.n	800e83c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x100>
 800ea78:	2500      	movs	r5, #0
 800ea7a:	2701      	movs	r7, #1
 800ea7c:	e7f4      	b.n	800ea68 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x32c>
 800ea7e:	2702      	movs	r7, #2
 800ea80:	2503      	movs	r5, #3
 800ea82:	f04f 0900 	mov.w	r9, #0
 800ea86:	46b8      	mov	r8, r7
 800ea88:	e7e9      	b.n	800ea5e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x322>
 800ea8a:	4613      	mov	r3, r2
 800ea8c:	e728      	b.n	800e8e0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1a4>
 800ea8e:	bf00      	nop
 800ea90:	20013f22 	.word	0x20013f22
 800ea94:	fffd8f01 	.word	0xfffd8f01
 800ea98:	00027100 	.word	0x00027100
 800ea9c:	0004e1ff 	.word	0x0004e1ff
 800eaa0:	0004e1fe 	.word	0x0004e1fe
 800eaa4:	20013f2c 	.word	0x20013f2c
 800eaa8:	4613      	mov	r3, r2
 800eaaa:	992b      	ldr	r1, [sp, #172]	@ 0xac
 800eaac:	9111      	str	r1, [sp, #68]	@ 0x44
 800eaae:	e9dd 0a29 	ldrd	r0, sl, [sp, #164]	@ 0xa4
 800eab2:	e9dd 812c 	ldrd	r8, r1, [sp, #176]	@ 0xb0
 800eab6:	9f2e      	ldr	r7, [sp, #184]	@ 0xb8
 800eab8:	eddd 4a34 	vldr	s9, [sp, #208]	@ 0xd0
 800eabc:	ed9d 7a33 	vldr	s14, [sp, #204]	@ 0xcc
 800eac0:	ed9d 4a37 	vldr	s8, [sp, #220]	@ 0xdc
 800eac4:	eddd 7a36 	vldr	s15, [sp, #216]	@ 0xd8
 800eac8:	eddd 3a31 	vldr	s7, [sp, #196]	@ 0xc4
 800eacc:	eddd 6a30 	vldr	s13, [sp, #192]	@ 0xc0
 800ead0:	ed9d 5a32 	vldr	s10, [sp, #200]	@ 0xc8
 800ead4:	eddd 5a35 	vldr	s11, [sp, #212]	@ 0xd4
 800ead8:	ed9d 6a38 	vldr	s12, [sp, #224]	@ 0xe0
 800eadc:	469e      	mov	lr, r3
 800eade:	469c      	mov	ip, r3
 800eae0:	f04f 0900 	mov.w	r9, #0
 800eae4:	f1bc 0f00 	cmp.w	ip, #0
 800eae8:	d147      	bne.n	800eb7a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x43e>
 800eaea:	eb03 0c07 	add.w	ip, r3, r7
 800eaee:	1ad7      	subs	r7, r2, r3
 800eaf0:	f1b9 0f00 	cmp.w	r9, #0
 800eaf4:	d009      	beq.n	800eb0a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3ce>
 800eaf6:	e9cd c72e 	strd	ip, r7, [sp, #184]	@ 0xb8
 800eafa:	9029      	str	r0, [sp, #164]	@ 0xa4
 800eafc:	ed8d 7a33 	vstr	s14, [sp, #204]	@ 0xcc
 800eb00:	edcd 7a36 	vstr	s15, [sp, #216]	@ 0xd8
 800eb04:	edcd 6a30 	vstr	s13, [sp, #192]	@ 0xc0
 800eb08:	912d      	str	r1, [sp, #180]	@ 0xb4
 800eb0a:	991b      	ldr	r1, [sp, #108]	@ 0x6c
 800eb0c:	9111      	str	r1, [sp, #68]	@ 0x44
 800eb0e:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	@ 0x64
 800eb12:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	@ 0x78
 800eb16:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	@ 0x70
 800eb1a:	eddd 4a24 	vldr	s9, [sp, #144]	@ 0x90
 800eb1e:	eddd 6a23 	vldr	s13, [sp, #140]	@ 0x8c
 800eb22:	ed9d 4a27 	vldr	s8, [sp, #156]	@ 0x9c
 800eb26:	ed9d 7a26 	vldr	s14, [sp, #152]	@ 0x98
 800eb2a:	eddd 3a21 	vldr	s7, [sp, #132]	@ 0x84
 800eb2e:	eddd 7a20 	vldr	s15, [sp, #128]	@ 0x80
 800eb32:	ed9d 5a22 	vldr	s10, [sp, #136]	@ 0x88
 800eb36:	eddd 5a25 	vldr	s11, [sp, #148]	@ 0x94
 800eb3a:	ed9d 6a28 	vldr	s12, [sp, #160]	@ 0xa0
 800eb3e:	f04f 0800 	mov.w	r8, #0
 800eb42:	f1be 0f00 	cmp.w	lr, #0
 800eb46:	d031      	beq.n	800ebac <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x470>
 800eb48:	9e11      	ldr	r6, [sp, #68]	@ 0x44
 800eb4a:	4431      	add	r1, r6
 800eb4c:	4549      	cmp	r1, r9
 800eb4e:	4450      	add	r0, sl
 800eb50:	ee76 6aa4 	vadd.f32	s13, s13, s9
 800eb54:	ee37 7a04 	vadd.f32	s14, s14, s8
 800eb58:	ee77 7aa3 	vadd.f32	s15, s15, s7
 800eb5c:	db08      	blt.n	800eb70 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x434>
 800eb5e:	ee77 7a85 	vadd.f32	s15, s15, s10
 800eb62:	ee76 6aa5 	vadd.f32	s13, s13, s11
 800eb66:	ee37 7a06 	vadd.f32	s14, s14, s12
 800eb6a:	3001      	adds	r0, #1
 800eb6c:	eba1 0109 	sub.w	r1, r1, r9
 800eb70:	f10e 3eff 	add.w	lr, lr, #4294967295
 800eb74:	f04f 0801 	mov.w	r8, #1
 800eb78:	e7e3      	b.n	800eb42 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x406>
 800eb7a:	9e11      	ldr	r6, [sp, #68]	@ 0x44
 800eb7c:	4431      	add	r1, r6
 800eb7e:	4541      	cmp	r1, r8
 800eb80:	4450      	add	r0, sl
 800eb82:	ee37 7a24 	vadd.f32	s14, s14, s9
 800eb86:	ee77 7a84 	vadd.f32	s15, s15, s8
 800eb8a:	ee76 6aa3 	vadd.f32	s13, s13, s7
 800eb8e:	db08      	blt.n	800eba2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x466>
 800eb90:	ee76 6a85 	vadd.f32	s13, s13, s10
 800eb94:	ee37 7a25 	vadd.f32	s14, s14, s11
 800eb98:	ee77 7a86 	vadd.f32	s15, s15, s12
 800eb9c:	3001      	adds	r0, #1
 800eb9e:	eba1 0108 	sub.w	r1, r1, r8
 800eba2:	f10c 3cff 	add.w	ip, ip, #4294967295
 800eba6:	f04f 0901 	mov.w	r9, #1
 800ebaa:	e79b      	b.n	800eae4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3a8>
 800ebac:	449c      	add	ip, r3
 800ebae:	1aff      	subs	r7, r7, r3
 800ebb0:	f1b8 0f00 	cmp.w	r8, #0
 800ebb4:	d009      	beq.n	800ebca <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x48e>
 800ebb6:	e9cd c71e 	strd	ip, r7, [sp, #120]	@ 0x78
 800ebba:	9019      	str	r0, [sp, #100]	@ 0x64
 800ebbc:	edcd 6a23 	vstr	s13, [sp, #140]	@ 0x8c
 800ebc0:	ed8d 7a26 	vstr	s14, [sp, #152]	@ 0x98
 800ebc4:	edcd 7a20 	vstr	s15, [sp, #128]	@ 0x80
 800ebc8:	911d      	str	r1, [sp, #116]	@ 0x74
 800ebca:	1ad2      	subs	r2, r2, r3
 800ebcc:	e68b      	b.n	800e8e6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 800ebce:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 800ebd0:	9a3f      	ldr	r2, [sp, #252]	@ 0xfc
 800ebd2:	2b00      	cmp	r3, #0
 800ebd4:	f000 80d1 	beq.w	800ed7a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63e>
 800ebd8:	ad19      	add	r5, sp, #100	@ 0x64
 800ebda:	ac39      	add	r4, sp, #228	@ 0xe4
 800ebdc:	9b64      	ldr	r3, [sp, #400]	@ 0x190
 800ebde:	f8bb 0006 	ldrh.w	r0, [fp, #6]
 800ebe2:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 800ebe6:	930c      	str	r3, [sp, #48]	@ 0x30
 800ebe8:	990c      	ldr	r1, [sp, #48]	@ 0x30
 800ebea:	6963      	ldr	r3, [r4, #20]
 800ebec:	440b      	add	r3, r1
 800ebee:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 800ebf2:	4408      	add	r0, r1
 800ebf4:	b200      	sxth	r0, r0
 800ebf6:	4283      	cmp	r3, r0
 800ebf8:	900d      	str	r0, [sp, #52]	@ 0x34
 800ebfa:	f280 80c1 	bge.w	800ed80 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x644>
 800ebfe:	428b      	cmp	r3, r1
 800ec00:	da08      	bge.n	800ec14 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 800ec02:	2a00      	cmp	r2, #0
 800ec04:	dd06      	ble.n	800ec14 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 800ec06:	1acb      	subs	r3, r1, r3
 800ec08:	429a      	cmp	r2, r3
 800ec0a:	f2c0 80bb 	blt.w	800ed84 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x648>
 800ec0e:	2b00      	cmp	r3, #0
 800ec10:	f300 80b9 	bgt.w	800ed86 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x64a>
 800ec14:	6967      	ldr	r7, [r4, #20]
 800ec16:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 800ec18:	443b      	add	r3, r7
 800ec1a:	461f      	mov	r7, r3
 800ec1c:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 800ec1e:	1bdf      	subs	r7, r3, r7
 800ec20:	4297      	cmp	r7, r2
 800ec22:	bfa8      	it	ge
 800ec24:	4617      	movge	r7, r2
 800ec26:	f10d 0850 	add.w	r8, sp, #80	@ 0x50
 800ec2a:	2f00      	cmp	r7, #0
 800ec2c:	f340 813c 	ble.w	800eea8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x76c>
 800ec30:	9b64      	ldr	r3, [sp, #400]	@ 0x190
 800ec32:	6829      	ldr	r1, [r5, #0]
 800ec34:	f9b3 2000 	ldrsh.w	r2, [r3]
 800ec38:	f9bb 3000 	ldrsh.w	r3, [fp]
 800ec3c:	6820      	ldr	r0, [r4, #0]
 800ec3e:	4411      	add	r1, r2
 800ec40:	4299      	cmp	r1, r3
 800ec42:	dd1a      	ble.n	800ec7a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
 800ec44:	f8bb 1004 	ldrh.w	r1, [fp, #4]
 800ec48:	440b      	add	r3, r1
 800ec4a:	4402      	add	r2, r0
 800ec4c:	b21b      	sxth	r3, r3
 800ec4e:	429a      	cmp	r2, r3
 800ec50:	dc13      	bgt.n	800ec7a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
 800ec52:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800ec54:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 800ec56:	681b      	ldr	r3, [r3, #0]
 800ec58:	9206      	str	r2, [sp, #24]
 800ec5a:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 800ec5c:	9205      	str	r2, [sp, #20]
 800ec5e:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 800ec60:	9500      	str	r5, [sp, #0]
 800ec62:	e9cd b203 	strd	fp, r2, [sp, #12]
 800ec66:	9a64      	ldr	r2, [sp, #400]	@ 0x190
 800ec68:	9809      	ldr	r0, [sp, #36]	@ 0x24
 800ec6a:	e9cd 8201 	strd	r8, r2, [sp, #4]
 800ec6e:	a912      	add	r1, sp, #72	@ 0x48
 800ec70:	f8d3 9048 	ldr.w	r9, [r3, #72]	@ 0x48
 800ec74:	aa49      	add	r2, sp, #292	@ 0x124
 800ec76:	4623      	mov	r3, r4
 800ec78:	47c8      	blx	r9
 800ec7a:	e9d4 2300 	ldrd	r2, r3, [r4]
 800ec7e:	441a      	add	r2, r3
 800ec80:	6963      	ldr	r3, [r4, #20]
 800ec82:	ed94 7a0a 	vldr	s14, [r4, #40]	@ 0x28
 800ec86:	edd4 7a0b 	vldr	s15, [r4, #44]	@ 0x2c
 800ec8a:	edd4 6a0e 	vldr	s13, [r4, #56]	@ 0x38
 800ec8e:	68a1      	ldr	r1, [r4, #8]
 800ec90:	ed94 6a08 	vldr	s12, [r4, #32]
 800ec94:	6022      	str	r2, [r4, #0]
 800ec96:	3301      	adds	r3, #1
 800ec98:	6163      	str	r3, [r4, #20]
 800ec9a:	69a3      	ldr	r3, [r4, #24]
 800ec9c:	ee37 7a27 	vadd.f32	s14, s14, s15
 800eca0:	3b01      	subs	r3, #1
 800eca2:	edd4 7a0d 	vldr	s15, [r4, #52]	@ 0x34
 800eca6:	61a3      	str	r3, [r4, #24]
 800eca8:	6923      	ldr	r3, [r4, #16]
 800ecaa:	ed84 7a0a 	vstr	s14, [r4, #40]	@ 0x28
 800ecae:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800ecb2:	edd4 6a07 	vldr	s13, [r4, #28]
 800ecb6:	edc4 7a0d 	vstr	s15, [r4, #52]	@ 0x34
 800ecba:	440b      	add	r3, r1
 800ecbc:	68e1      	ldr	r1, [r4, #12]
 800ecbe:	6123      	str	r3, [r4, #16]
 800ecc0:	ee76 6a86 	vadd.f32	s13, s13, s12
 800ecc4:	428b      	cmp	r3, r1
 800ecc6:	edc4 6a07 	vstr	s13, [r4, #28]
 800ecca:	db15      	blt.n	800ecf8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x5bc>
 800eccc:	ed94 6a09 	vldr	s12, [r4, #36]	@ 0x24
 800ecd0:	ee76 6a26 	vadd.f32	s13, s12, s13
 800ecd4:	3201      	adds	r2, #1
 800ecd6:	edc4 6a07 	vstr	s13, [r4, #28]
 800ecda:	edd4 6a0c 	vldr	s13, [r4, #48]	@ 0x30
 800ecde:	6022      	str	r2, [r4, #0]
 800ece0:	ee36 7a87 	vadd.f32	s14, s13, s14
 800ece4:	1a5b      	subs	r3, r3, r1
 800ece6:	ed84 7a0a 	vstr	s14, [r4, #40]	@ 0x28
 800ecea:	ed94 7a0f 	vldr	s14, [r4, #60]	@ 0x3c
 800ecee:	6123      	str	r3, [r4, #16]
 800ecf0:	ee77 7a27 	vadd.f32	s15, s14, s15
 800ecf4:	edc4 7a0d 	vstr	s15, [r4, #52]	@ 0x34
 800ecf8:	e9d5 2300 	ldrd	r2, r3, [r5]
 800ecfc:	441a      	add	r2, r3
 800ecfe:	696b      	ldr	r3, [r5, #20]
 800ed00:	ed95 7a0a 	vldr	s14, [r5, #40]	@ 0x28
 800ed04:	edd5 7a0b 	vldr	s15, [r5, #44]	@ 0x2c
 800ed08:	edd5 6a0e 	vldr	s13, [r5, #56]	@ 0x38
 800ed0c:	68a9      	ldr	r1, [r5, #8]
 800ed0e:	ed95 6a08 	vldr	s12, [r5, #32]
 800ed12:	602a      	str	r2, [r5, #0]
 800ed14:	3301      	adds	r3, #1
 800ed16:	616b      	str	r3, [r5, #20]
 800ed18:	69ab      	ldr	r3, [r5, #24]
 800ed1a:	ee37 7a27 	vadd.f32	s14, s14, s15
 800ed1e:	3b01      	subs	r3, #1
 800ed20:	edd5 7a0d 	vldr	s15, [r5, #52]	@ 0x34
 800ed24:	61ab      	str	r3, [r5, #24]
 800ed26:	692b      	ldr	r3, [r5, #16]
 800ed28:	ed85 7a0a 	vstr	s14, [r5, #40]	@ 0x28
 800ed2c:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800ed30:	edd5 6a07 	vldr	s13, [r5, #28]
 800ed34:	edc5 7a0d 	vstr	s15, [r5, #52]	@ 0x34
 800ed38:	440b      	add	r3, r1
 800ed3a:	68e9      	ldr	r1, [r5, #12]
 800ed3c:	612b      	str	r3, [r5, #16]
 800ed3e:	ee76 6a86 	vadd.f32	s13, s13, s12
 800ed42:	428b      	cmp	r3, r1
 800ed44:	edc5 6a07 	vstr	s13, [r5, #28]
 800ed48:	db15      	blt.n	800ed76 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63a>
 800ed4a:	ed95 6a09 	vldr	s12, [r5, #36]	@ 0x24
 800ed4e:	ee76 6a26 	vadd.f32	s13, s12, s13
 800ed52:	3201      	adds	r2, #1
 800ed54:	edc5 6a07 	vstr	s13, [r5, #28]
 800ed58:	edd5 6a0c 	vldr	s13, [r5, #48]	@ 0x30
 800ed5c:	602a      	str	r2, [r5, #0]
 800ed5e:	ee36 7a87 	vadd.f32	s14, s13, s14
 800ed62:	1a5b      	subs	r3, r3, r1
 800ed64:	ed85 7a0a 	vstr	s14, [r5, #40]	@ 0x28
 800ed68:	ed95 7a0f 	vldr	s14, [r5, #60]	@ 0x3c
 800ed6c:	612b      	str	r3, [r5, #16]
 800ed6e:	ee77 7a27 	vadd.f32	s15, s14, s15
 800ed72:	edc5 7a0d 	vstr	s15, [r5, #52]	@ 0x34
 800ed76:	3f01      	subs	r7, #1
 800ed78:	e757      	b.n	800ec2a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4ee>
 800ed7a:	ad39      	add	r5, sp, #228	@ 0xe4
 800ed7c:	ac19      	add	r4, sp, #100	@ 0x64
 800ed7e:	e72d      	b.n	800ebdc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4a0>
 800ed80:	4613      	mov	r3, r2
 800ed82:	e744      	b.n	800ec0e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d2>
 800ed84:	4613      	mov	r3, r2
 800ed86:	e9dd 0a39 	ldrd	r0, sl, [sp, #228]	@ 0xe4
 800ed8a:	9e3b      	ldr	r6, [sp, #236]	@ 0xec
 800ed8c:	f8dd c0f8 	ldr.w	ip, [sp, #248]	@ 0xf8
 800ed90:	ed9d 7a43 	vldr	s14, [sp, #268]	@ 0x10c
 800ed94:	eddd 4a44 	vldr	s9, [sp, #272]	@ 0x110
 800ed98:	eddd 7a46 	vldr	s15, [sp, #280]	@ 0x118
 800ed9c:	ed9d 4a47 	vldr	s8, [sp, #284]	@ 0x11c
 800eda0:	eddd 6a40 	vldr	s13, [sp, #256]	@ 0x100
 800eda4:	eddd 3a41 	vldr	s7, [sp, #260]	@ 0x104
 800eda8:	993d      	ldr	r1, [sp, #244]	@ 0xf4
 800edaa:	f8dd 80f0 	ldr.w	r8, [sp, #240]	@ 0xf0
 800edae:	ed9d 5a42 	vldr	s10, [sp, #264]	@ 0x108
 800edb2:	eddd 5a45 	vldr	s11, [sp, #276]	@ 0x114
 800edb6:	ed9d 6a48 	vldr	s12, [sp, #288]	@ 0x120
 800edba:	960e      	str	r6, [sp, #56]	@ 0x38
 800edbc:	469e      	mov	lr, r3
 800edbe:	461f      	mov	r7, r3
 800edc0:	f04f 0900 	mov.w	r9, #0
 800edc4:	2f00      	cmp	r7, #0
 800edc6:	d146      	bne.n	800ee56 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x71a>
 800edc8:	449c      	add	ip, r3
 800edca:	1ad7      	subs	r7, r2, r3
 800edcc:	f1b9 0f00 	cmp.w	r9, #0
 800edd0:	d009      	beq.n	800ede6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6aa>
 800edd2:	e9cd c73e 	strd	ip, r7, [sp, #248]	@ 0xf8
 800edd6:	9039      	str	r0, [sp, #228]	@ 0xe4
 800edd8:	913d      	str	r1, [sp, #244]	@ 0xf4
 800edda:	edcd 6a40 	vstr	s13, [sp, #256]	@ 0x100
 800edde:	ed8d 7a43 	vstr	s14, [sp, #268]	@ 0x10c
 800ede2:	edcd 7a46 	vstr	s15, [sp, #280]	@ 0x118
 800ede6:	991b      	ldr	r1, [sp, #108]	@ 0x6c
 800ede8:	910e      	str	r1, [sp, #56]	@ 0x38
 800edea:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	@ 0x64
 800edee:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	@ 0x78
 800edf2:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	@ 0x70
 800edf6:	eddd 4a24 	vldr	s9, [sp, #144]	@ 0x90
 800edfa:	eddd 6a23 	vldr	s13, [sp, #140]	@ 0x8c
 800edfe:	ed9d 4a27 	vldr	s8, [sp, #156]	@ 0x9c
 800ee02:	ed9d 7a26 	vldr	s14, [sp, #152]	@ 0x98
 800ee06:	eddd 3a21 	vldr	s7, [sp, #132]	@ 0x84
 800ee0a:	eddd 7a20 	vldr	s15, [sp, #128]	@ 0x80
 800ee0e:	ed9d 5a22 	vldr	s10, [sp, #136]	@ 0x88
 800ee12:	eddd 5a25 	vldr	s11, [sp, #148]	@ 0x94
 800ee16:	ed9d 6a28 	vldr	s12, [sp, #160]	@ 0xa0
 800ee1a:	f04f 0800 	mov.w	r8, #0
 800ee1e:	f1be 0f00 	cmp.w	lr, #0
 800ee22:	d030      	beq.n	800ee86 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x74a>
 800ee24:	9e0e      	ldr	r6, [sp, #56]	@ 0x38
 800ee26:	4431      	add	r1, r6
 800ee28:	4549      	cmp	r1, r9
 800ee2a:	4450      	add	r0, sl
 800ee2c:	ee76 6aa4 	vadd.f32	s13, s13, s9
 800ee30:	ee37 7a04 	vadd.f32	s14, s14, s8
 800ee34:	ee77 7aa3 	vadd.f32	s15, s15, s7
 800ee38:	db08      	blt.n	800ee4c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x710>
 800ee3a:	ee77 7a85 	vadd.f32	s15, s15, s10
 800ee3e:	ee76 6aa5 	vadd.f32	s13, s13, s11
 800ee42:	ee37 7a06 	vadd.f32	s14, s14, s12
 800ee46:	3001      	adds	r0, #1
 800ee48:	eba1 0109 	sub.w	r1, r1, r9
 800ee4c:	f10e 3eff 	add.w	lr, lr, #4294967295
 800ee50:	f04f 0801 	mov.w	r8, #1
 800ee54:	e7e3      	b.n	800ee1e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6e2>
 800ee56:	9e0e      	ldr	r6, [sp, #56]	@ 0x38
 800ee58:	4431      	add	r1, r6
 800ee5a:	4541      	cmp	r1, r8
 800ee5c:	4450      	add	r0, sl
 800ee5e:	ee37 7a24 	vadd.f32	s14, s14, s9
 800ee62:	ee77 7a84 	vadd.f32	s15, s15, s8
 800ee66:	ee76 6aa3 	vadd.f32	s13, s13, s7
 800ee6a:	db08      	blt.n	800ee7e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x742>
 800ee6c:	ee76 6a85 	vadd.f32	s13, s13, s10
 800ee70:	ee37 7a25 	vadd.f32	s14, s14, s11
 800ee74:	ee77 7a86 	vadd.f32	s15, s15, s12
 800ee78:	3001      	adds	r0, #1
 800ee7a:	eba1 0108 	sub.w	r1, r1, r8
 800ee7e:	3f01      	subs	r7, #1
 800ee80:	f04f 0901 	mov.w	r9, #1
 800ee84:	e79e      	b.n	800edc4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x688>
 800ee86:	449c      	add	ip, r3
 800ee88:	1aff      	subs	r7, r7, r3
 800ee8a:	f1b8 0f00 	cmp.w	r8, #0
 800ee8e:	d009      	beq.n	800eea4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x768>
 800ee90:	e9cd c71e 	strd	ip, r7, [sp, #120]	@ 0x78
 800ee94:	9019      	str	r0, [sp, #100]	@ 0x64
 800ee96:	edcd 6a23 	vstr	s13, [sp, #140]	@ 0x8c
 800ee9a:	ed8d 7a26 	vstr	s14, [sp, #152]	@ 0x98
 800ee9e:	edcd 7a20 	vstr	s15, [sp, #128]	@ 0x80
 800eea2:	911d      	str	r1, [sp, #116]	@ 0x74
 800eea4:	1ad2      	subs	r2, r2, r3
 800eea6:	e6b5      	b.n	800ec14 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 800eea8:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 800eeaa:	681b      	ldr	r3, [r3, #0]
 800eeac:	b923      	cbnz	r3, 800eeb8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800eeae:	4b04      	ldr	r3, [pc, #16]	@ (800eec0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x784>)
 800eeb0:	6818      	ldr	r0, [r3, #0]
 800eeb2:	6803      	ldr	r3, [r0, #0]
 800eeb4:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800eeb6:	4798      	blx	r3
 800eeb8:	b05b      	add	sp, #364	@ 0x16c
 800eeba:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800eebe:	bf00      	nop
 800eec0:	20013f2c 	.word	0x20013f2c

0800eec4 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>:
 800eec4:	2b03      	cmp	r3, #3
 800eec6:	d818      	bhi.n	800eefa <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x36>
 800eec8:	e8df f003 	tbb	[pc, r3]
 800eecc:	130d0602 	.word	0x130d0602
 800eed0:	f9b0 2000 	ldrsh.w	r2, [r0]
 800eed4:	1850      	adds	r0, r2, r1
 800eed6:	4770      	bx	lr
 800eed8:	8803      	ldrh	r3, [r0, #0]
 800eeda:	8880      	ldrh	r0, [r0, #4]
 800eedc:	4418      	add	r0, r3
 800eede:	b200      	sxth	r0, r0
 800eee0:	1a80      	subs	r0, r0, r2
 800eee2:	3801      	subs	r0, #1
 800eee4:	4770      	bx	lr
 800eee6:	8803      	ldrh	r3, [r0, #0]
 800eee8:	8880      	ldrh	r0, [r0, #4]
 800eeea:	4418      	add	r0, r3
 800eeec:	b200      	sxth	r0, r0
 800eeee:	1a40      	subs	r0, r0, r1
 800eef0:	e7f7      	b.n	800eee2 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x1e>
 800eef2:	f9b0 0000 	ldrsh.w	r0, [r0]
 800eef6:	4410      	add	r0, r2
 800eef8:	4770      	bx	lr
 800eefa:	2000      	movs	r0, #0
 800eefc:	4770      	bx	lr

0800eefe <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>:
 800eefe:	2b03      	cmp	r3, #3
 800ef00:	d817      	bhi.n	800ef32 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x34>
 800ef02:	e8df f003 	tbb	[pc, r3]
 800ef06:	0602      	.short	0x0602
 800ef08:	1009      	.short	0x1009
 800ef0a:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
 800ef0e:	1850      	adds	r0, r2, r1
 800ef10:	4770      	bx	lr
 800ef12:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 800ef16:	e7fa      	b.n	800ef0e <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x10>
 800ef18:	8843      	ldrh	r3, [r0, #2]
 800ef1a:	88c0      	ldrh	r0, [r0, #6]
 800ef1c:	4418      	add	r0, r3
 800ef1e:	b200      	sxth	r0, r0
 800ef20:	1a80      	subs	r0, r0, r2
 800ef22:	3801      	subs	r0, #1
 800ef24:	4770      	bx	lr
 800ef26:	8843      	ldrh	r3, [r0, #2]
 800ef28:	88c0      	ldrh	r0, [r0, #6]
 800ef2a:	4418      	add	r0, r3
 800ef2c:	b200      	sxth	r0, r0
 800ef2e:	1a40      	subs	r0, r0, r1
 800ef30:	e7f7      	b.n	800ef22 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x24>
 800ef32:	2000      	movs	r0, #0
 800ef34:	4770      	bx	lr
	...

0800ef38 <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE>:
 800ef38:	4b01      	ldr	r3, [pc, #4]	@ (800ef40 <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE+0x8>)
 800ef3a:	2200      	movs	r2, #0
 800ef3c:	601a      	str	r2, [r3, #0]
 800ef3e:	4770      	bx	lr
 800ef40:	20013f3c 	.word	0x20013f3c

0800ef44 <_ZN8touchgfx16TouchCalibration4clzuEm>:
 800ef44:	4603      	mov	r3, r0
 800ef46:	b1c8      	cbz	r0, 800ef7c <_ZN8touchgfx16TouchCalibration4clzuEm+0x38>
 800ef48:	0c02      	lsrs	r2, r0, #16
 800ef4a:	0412      	lsls	r2, r2, #16
 800ef4c:	b9a2      	cbnz	r2, 800ef78 <_ZN8touchgfx16TouchCalibration4clzuEm+0x34>
 800ef4e:	0403      	lsls	r3, r0, #16
 800ef50:	2010      	movs	r0, #16
 800ef52:	f013 4f7f 	tst.w	r3, #4278190080	@ 0xff000000
 800ef56:	bf04      	itt	eq
 800ef58:	021b      	lsleq	r3, r3, #8
 800ef5a:	3008      	addeq	r0, #8
 800ef5c:	f013 4f70 	tst.w	r3, #4026531840	@ 0xf0000000
 800ef60:	bf04      	itt	eq
 800ef62:	011b      	lsleq	r3, r3, #4
 800ef64:	3004      	addeq	r0, #4
 800ef66:	f013 4f40 	tst.w	r3, #3221225472	@ 0xc0000000
 800ef6a:	bf04      	itt	eq
 800ef6c:	009b      	lsleq	r3, r3, #2
 800ef6e:	3002      	addeq	r0, #2
 800ef70:	2b00      	cmp	r3, #0
 800ef72:	db04      	blt.n	800ef7e <_ZN8touchgfx16TouchCalibration4clzuEm+0x3a>
 800ef74:	3001      	adds	r0, #1
 800ef76:	4770      	bx	lr
 800ef78:	2000      	movs	r0, #0
 800ef7a:	e7ea      	b.n	800ef52 <_ZN8touchgfx16TouchCalibration4clzuEm+0xe>
 800ef7c:	2020      	movs	r0, #32
 800ef7e:	4770      	bx	lr

0800ef80 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>:
 800ef80:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ef84:	b087      	sub	sp, #28
 800ef86:	460d      	mov	r5, r1
 800ef88:	4616      	mov	r6, r2
 800ef8a:	4698      	mov	r8, r3
 800ef8c:	e9dd 4710 	ldrd	r4, r7, [sp, #64]	@ 0x40
 800ef90:	4601      	mov	r1, r0
 800ef92:	b120      	cbz	r0, 800ef9e <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
 800ef94:	b11a      	cbz	r2, 800ef9e <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
 800ef96:	2d1f      	cmp	r5, #31
 800ef98:	d801      	bhi.n	800ef9e <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
 800ef9a:	2b1f      	cmp	r3, #31
 800ef9c:	d904      	bls.n	800efa8 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x28>
 800ef9e:	2000      	movs	r0, #0
 800efa0:	6038      	str	r0, [r7, #0]
 800efa2:	b007      	add	sp, #28
 800efa4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800efa8:	b97d      	cbnz	r5, 800efca <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x4a>
 800efaa:	b143      	cbz	r3, 800efbe <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x3e>
 800efac:	4602      	mov	r2, r0
 800efae:	e9cd 4700 	strd	r4, r7, [sp]
 800efb2:	462b      	mov	r3, r5
 800efb4:	4641      	mov	r1, r8
 800efb6:	4630      	mov	r0, r6
 800efb8:	f7ff ffe2 	bl	800ef80 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 800efbc:	e7f1      	b.n	800efa2 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
 800efbe:	f04f 33ff 	mov.w	r3, #4294967295
 800efc2:	603b      	str	r3, [r7, #0]
 800efc4:	f06f 4000 	mvn.w	r0, #2147483648	@ 0x80000000
 800efc8:	e7eb      	b.n	800efa2 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
 800efca:	fa32 fa05 	lsrs.w	sl, r2, r5
 800efce:	d106      	bne.n	800efde <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x5e>
 800efd0:	4346      	muls	r6, r0
 800efd2:	fbb6 f0f4 	udiv	r0, r6, r4
 800efd6:	fb04 6610 	mls	r6, r4, r0, r6
 800efda:	603e      	str	r6, [r7, #0]
 800efdc:	e7e1      	b.n	800efa2 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
 800efde:	2201      	movs	r2, #1
 800efe0:	40aa      	lsls	r2, r5
 800efe2:	3a01      	subs	r2, #1
 800efe4:	4016      	ands	r6, r2
 800efe6:	fa00 fb05 	lsl.w	fp, r0, r5
 800efea:	4630      	mov	r0, r6
 800efec:	fbbb f9f4 	udiv	r9, fp, r4
 800eff0:	fb0a f309 	mul.w	r3, sl, r9
 800eff4:	9303      	str	r3, [sp, #12]
 800eff6:	f7ff ffa5 	bl	800ef44 <_ZN8touchgfx16TouchCalibration4clzuEm>
 800effa:	462b      	mov	r3, r5
 800effc:	460a      	mov	r2, r1
 800effe:	e9cd 4700 	strd	r4, r7, [sp]
 800f002:	4601      	mov	r1, r0
 800f004:	4630      	mov	r0, r6
 800f006:	f7ff ffbb 	bl	800ef80 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 800f00a:	fb04 b919 	mls	r9, r4, r9, fp
 800f00e:	4606      	mov	r6, r0
 800f010:	4648      	mov	r0, r9
 800f012:	eb05 0108 	add.w	r1, r5, r8
 800f016:	f7ff ff95 	bl	800ef44 <_ZN8touchgfx16TouchCalibration4clzuEm>
 800f01a:	ab05      	add	r3, sp, #20
 800f01c:	e9cd 4300 	strd	r4, r3, [sp]
 800f020:	464a      	mov	r2, r9
 800f022:	4603      	mov	r3, r0
 800f024:	4650      	mov	r0, sl
 800f026:	f7ff ffab 	bl	800ef80 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 800f02a:	6839      	ldr	r1, [r7, #0]
 800f02c:	9a05      	ldr	r2, [sp, #20]
 800f02e:	9b03      	ldr	r3, [sp, #12]
 800f030:	4411      	add	r1, r2
 800f032:	fbb1 f2f4 	udiv	r2, r1, r4
 800f036:	18d3      	adds	r3, r2, r3
 800f038:	441e      	add	r6, r3
 800f03a:	fb04 1412 	mls	r4, r4, r2, r1
 800f03e:	4430      	add	r0, r6
 800f040:	603c      	str	r4, [r7, #0]
 800f042:	e7ae      	b.n	800efa2 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>

0800f044 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>:
 800f044:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800f048:	b085      	sub	sp, #20
 800f04a:	f1b0 0900 	subs.w	r9, r0, #0
 800f04e:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
 800f050:	461d      	mov	r5, r3
 800f052:	bfbf      	itttt	lt
 800f054:	6823      	ldrlt	r3, [r4, #0]
 800f056:	425b      	neglt	r3, r3
 800f058:	f1c9 0900 	rsblt	r9, r9, #0
 800f05c:	6023      	strlt	r3, [r4, #0]
 800f05e:	bfb4      	ite	lt
 800f060:	f04f 36ff 	movlt.w	r6, #4294967295
 800f064:	2601      	movge	r6, #1
 800f066:	2a00      	cmp	r2, #0
 800f068:	4617      	mov	r7, r2
 800f06a:	da04      	bge.n	800f076 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x32>
 800f06c:	6823      	ldr	r3, [r4, #0]
 800f06e:	425b      	negs	r3, r3
 800f070:	4257      	negs	r7, r2
 800f072:	4276      	negs	r6, r6
 800f074:	6023      	str	r3, [r4, #0]
 800f076:	2d00      	cmp	r5, #0
 800f078:	4638      	mov	r0, r7
 800f07a:	bfba      	itte	lt
 800f07c:	426d      	neglt	r5, r5
 800f07e:	f04f 38ff 	movlt.w	r8, #4294967295
 800f082:	f04f 0801 	movge.w	r8, #1
 800f086:	f7ff ff5d 	bl	800ef44 <_ZN8touchgfx16TouchCalibration4clzuEm>
 800f08a:	ab03      	add	r3, sp, #12
 800f08c:	e9cd 5300 	strd	r5, r3, [sp]
 800f090:	463a      	mov	r2, r7
 800f092:	4603      	mov	r3, r0
 800f094:	4648      	mov	r0, r9
 800f096:	f7ff ff73 	bl	800ef80 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 800f09a:	6823      	ldr	r3, [r4, #0]
 800f09c:	9a03      	ldr	r2, [sp, #12]
 800f09e:	4546      	cmp	r6, r8
 800f0a0:	441a      	add	r2, r3
 800f0a2:	fb92 f3f5 	sdiv	r3, r2, r5
 800f0a6:	4418      	add	r0, r3
 800f0a8:	bf18      	it	ne
 800f0aa:	4240      	negne	r0, r0
 800f0ac:	fb05 2313 	mls	r3, r5, r3, r2
 800f0b0:	1c72      	adds	r2, r6, #1
 800f0b2:	6023      	str	r3, [r4, #0]
 800f0b4:	d105      	bne.n	800f0c2 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7e>
 800f0b6:	2b00      	cmp	r3, #0
 800f0b8:	f1c3 0200 	rsb	r2, r3, #0
 800f0bc:	db0b      	blt.n	800f0d6 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x92>
 800f0be:	6022      	str	r2, [r4, #0]
 800f0c0:	e006      	b.n	800f0d0 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 800f0c2:	2e01      	cmp	r6, #1
 800f0c4:	d104      	bne.n	800f0d0 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 800f0c6:	2b00      	cmp	r3, #0
 800f0c8:	da02      	bge.n	800f0d0 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 800f0ca:	442b      	add	r3, r5
 800f0cc:	3801      	subs	r0, #1
 800f0ce:	6023      	str	r3, [r4, #0]
 800f0d0:	b005      	add	sp, #20
 800f0d2:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800f0d6:	3801      	subs	r0, #1
 800f0d8:	1b52      	subs	r2, r2, r5
 800f0da:	e7f0      	b.n	800f0be <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7a>

0800f0dc <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>:
 800f0dc:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 800f0e0:	4c1c      	ldr	r4, [pc, #112]	@ (800f154 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x78>)
 800f0e2:	6807      	ldr	r7, [r0, #0]
 800f0e4:	69a3      	ldr	r3, [r4, #24]
 800f0e6:	4605      	mov	r5, r0
 800f0e8:	b92b      	cbnz	r3, 800f0f6 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x1a>
 800f0ea:	6840      	ldr	r0, [r0, #4]
 800f0ec:	e9c5 7000 	strd	r7, r0, [r5]
 800f0f0:	b004      	add	sp, #16
 800f0f2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800f0f6:	68a2      	ldr	r2, [r4, #8]
 800f0f8:	6820      	ldr	r0, [r4, #0]
 800f0fa:	ae04      	add	r6, sp, #16
 800f0fc:	f04f 0802 	mov.w	r8, #2
 800f100:	fb93 f1f8 	sdiv	r1, r3, r8
 800f104:	440a      	add	r2, r1
 800f106:	f846 2d04 	str.w	r2, [r6, #-4]!
 800f10a:	69e1      	ldr	r1, [r4, #28]
 800f10c:	9600      	str	r6, [sp, #0]
 800f10e:	463a      	mov	r2, r7
 800f110:	f7ff ff98 	bl	800f044 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 800f114:	69a3      	ldr	r3, [r4, #24]
 800f116:	686a      	ldr	r2, [r5, #4]
 800f118:	6a21      	ldr	r1, [r4, #32]
 800f11a:	9600      	str	r6, [sp, #0]
 800f11c:	4607      	mov	r7, r0
 800f11e:	6860      	ldr	r0, [r4, #4]
 800f120:	f7ff ff90 	bl	800f044 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 800f124:	6962      	ldr	r2, [r4, #20]
 800f126:	69a3      	ldr	r3, [r4, #24]
 800f128:	fb93 f8f8 	sdiv	r8, r3, r8
 800f12c:	4442      	add	r2, r8
 800f12e:	9203      	str	r2, [sp, #12]
 800f130:	6a61      	ldr	r1, [r4, #36]	@ 0x24
 800f132:	682a      	ldr	r2, [r5, #0]
 800f134:	9600      	str	r6, [sp, #0]
 800f136:	4407      	add	r7, r0
 800f138:	68e0      	ldr	r0, [r4, #12]
 800f13a:	f7ff ff83 	bl	800f044 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 800f13e:	9600      	str	r6, [sp, #0]
 800f140:	4680      	mov	r8, r0
 800f142:	69a3      	ldr	r3, [r4, #24]
 800f144:	686a      	ldr	r2, [r5, #4]
 800f146:	6aa1      	ldr	r1, [r4, #40]	@ 0x28
 800f148:	6920      	ldr	r0, [r4, #16]
 800f14a:	f7ff ff7b 	bl	800f044 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 800f14e:	4440      	add	r0, r8
 800f150:	e7cc      	b.n	800f0ec <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x10>
 800f152:	bf00      	nop
 800f154:	20013f40 	.word	0x20013f40

0800f158 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>:
 800f158:	4b07      	ldr	r3, [pc, #28]	@ (800f178 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x20>)
 800f15a:	781b      	ldrb	r3, [r3, #0]
 800f15c:	2b01      	cmp	r3, #1
 800f15e:	d109      	bne.n	800f174 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x1c>
 800f160:	f9b1 3000 	ldrsh.w	r3, [r1]
 800f164:	f9b0 2000 	ldrsh.w	r2, [r0]
 800f168:	8003      	strh	r3, [r0, #0]
 800f16a:	4b04      	ldr	r3, [pc, #16]	@ (800f17c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x24>)
 800f16c:	881b      	ldrh	r3, [r3, #0]
 800f16e:	3b01      	subs	r3, #1
 800f170:	1a9b      	subs	r3, r3, r2
 800f172:	800b      	strh	r3, [r1, #0]
 800f174:	4770      	bx	lr
 800f176:	bf00      	nop
 800f178:	20013f22 	.word	0x20013f22
 800f17c:	20013f1e 	.word	0x20013f1e

0800f180 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>:
 800f180:	b510      	push	{r4, lr}
 800f182:	4b07      	ldr	r3, [pc, #28]	@ (800f1a0 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x20>)
 800f184:	781b      	ldrb	r3, [r3, #0]
 800f186:	2b01      	cmp	r3, #1
 800f188:	d108      	bne.n	800f19c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x1c>
 800f18a:	4b06      	ldr	r3, [pc, #24]	@ (800f1a4 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x24>)
 800f18c:	880c      	ldrh	r4, [r1, #0]
 800f18e:	881b      	ldrh	r3, [r3, #0]
 800f190:	f9b0 2000 	ldrsh.w	r2, [r0]
 800f194:	3b01      	subs	r3, #1
 800f196:	1b1b      	subs	r3, r3, r4
 800f198:	8003      	strh	r3, [r0, #0]
 800f19a:	800a      	strh	r2, [r1, #0]
 800f19c:	bd10      	pop	{r4, pc}
 800f19e:	bf00      	nop
 800f1a0:	20013f22 	.word	0x20013f22
 800f1a4:	20013f1e 	.word	0x20013f1e

0800f1a8 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>:
 800f1a8:	b510      	push	{r4, lr}
 800f1aa:	4b0a      	ldr	r3, [pc, #40]	@ (800f1d4 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x2c>)
 800f1ac:	781b      	ldrb	r3, [r3, #0]
 800f1ae:	2b01      	cmp	r3, #1
 800f1b0:	d10e      	bne.n	800f1d0 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x28>
 800f1b2:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 800f1b6:	8843      	ldrh	r3, [r0, #2]
 800f1b8:	f9b0 4000 	ldrsh.w	r4, [r0]
 800f1bc:	8044      	strh	r4, [r0, #2]
 800f1be:	18ca      	adds	r2, r1, r3
 800f1c0:	4b05      	ldr	r3, [pc, #20]	@ (800f1d8 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x30>)
 800f1c2:	881b      	ldrh	r3, [r3, #0]
 800f1c4:	1a9b      	subs	r3, r3, r2
 800f1c6:	8003      	strh	r3, [r0, #0]
 800f1c8:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 800f1cc:	80c3      	strh	r3, [r0, #6]
 800f1ce:	8081      	strh	r1, [r0, #4]
 800f1d0:	bd10      	pop	{r4, pc}
 800f1d2:	bf00      	nop
 800f1d4:	20013f22 	.word	0x20013f22
 800f1d8:	20013f1e 	.word	0x20013f1e

0800f1dc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>:
 800f1dc:	4b08      	ldr	r3, [pc, #32]	@ (800f200 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x24>)
 800f1de:	781b      	ldrb	r3, [r3, #0]
 800f1e0:	2b01      	cmp	r3, #1
 800f1e2:	d10c      	bne.n	800f1fe <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x22>
 800f1e4:	8803      	ldrh	r3, [r0, #0]
 800f1e6:	f9b0 1004 	ldrsh.w	r1, [r0, #4]
 800f1ea:	8842      	ldrh	r2, [r0, #2]
 800f1ec:	8002      	strh	r2, [r0, #0]
 800f1ee:	185a      	adds	r2, r3, r1
 800f1f0:	4b04      	ldr	r3, [pc, #16]	@ (800f204 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x28>)
 800f1f2:	881b      	ldrh	r3, [r3, #0]
 800f1f4:	1a9b      	subs	r3, r3, r2
 800f1f6:	8043      	strh	r3, [r0, #2]
 800f1f8:	88c3      	ldrh	r3, [r0, #6]
 800f1fa:	8083      	strh	r3, [r0, #4]
 800f1fc:	80c1      	strh	r1, [r0, #6]
 800f1fe:	4770      	bx	lr
 800f200:	20013f22 	.word	0x20013f22
 800f204:	20013f1e 	.word	0x20013f1e

0800f208 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>:
 800f208:	b510      	push	{r4, lr}
 800f20a:	4b07      	ldr	r3, [pc, #28]	@ (800f228 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x20>)
 800f20c:	781b      	ldrb	r3, [r3, #0]
 800f20e:	2b01      	cmp	r3, #1
 800f210:	d108      	bne.n	800f224 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x1c>
 800f212:	f9b1 3000 	ldrsh.w	r3, [r1]
 800f216:	f9b0 4000 	ldrsh.w	r4, [r0]
 800f21a:	8003      	strh	r3, [r0, #0]
 800f21c:	8893      	ldrh	r3, [r2, #4]
 800f21e:	3b01      	subs	r3, #1
 800f220:	1b1b      	subs	r3, r3, r4
 800f222:	800b      	strh	r3, [r1, #0]
 800f224:	bd10      	pop	{r4, pc}
 800f226:	bf00      	nop
 800f228:	20013f22 	.word	0x20013f22

0800f22c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>:
 800f22c:	b510      	push	{r4, lr}
 800f22e:	4b0a      	ldr	r3, [pc, #40]	@ (800f258 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x2c>)
 800f230:	781b      	ldrb	r3, [r3, #0]
 800f232:	2b01      	cmp	r3, #1
 800f234:	460a      	mov	r2, r1
 800f236:	d10d      	bne.n	800f254 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x28>
 800f238:	8881      	ldrh	r1, [r0, #4]
 800f23a:	8803      	ldrh	r3, [r0, #0]
 800f23c:	440b      	add	r3, r1
 800f23e:	4601      	mov	r1, r0
 800f240:	3b01      	subs	r3, #1
 800f242:	f821 3b02 	strh.w	r3, [r1], #2
 800f246:	f7ff ffdf 	bl	800f208 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>
 800f24a:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 800f24e:	88c2      	ldrh	r2, [r0, #6]
 800f250:	8082      	strh	r2, [r0, #4]
 800f252:	80c3      	strh	r3, [r0, #6]
 800f254:	bd10      	pop	{r4, pc}
 800f256:	bf00      	nop
 800f258:	20013f22 	.word	0x20013f22

0800f25c <_ZN8touchgfx11Application13requestRedrawEv>:
 800f25c:	4b06      	ldr	r3, [pc, #24]	@ (800f278 <_ZN8touchgfx11Application13requestRedrawEv+0x1c>)
 800f25e:	f9b3 2000 	ldrsh.w	r2, [r3]
 800f262:	4b06      	ldr	r3, [pc, #24]	@ (800f27c <_ZN8touchgfx11Application13requestRedrawEv+0x20>)
 800f264:	f8a0 2134 	strh.w	r2, [r0, #308]	@ 0x134
 800f268:	f9b3 3000 	ldrsh.w	r3, [r3]
 800f26c:	f8a0 3136 	strh.w	r3, [r0, #310]	@ 0x136
 800f270:	2100      	movs	r1, #0
 800f272:	f8c0 1130 	str.w	r1, [r0, #304]	@ 0x130
 800f276:	4770      	bx	lr
 800f278:	20013f1e 	.word	0x20013f1e
 800f27c:	20013f20 	.word	0x20013f20

0800f280 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE>:
 800f280:	4b03      	ldr	r3, [pc, #12]	@ (800f290 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0x10>)
 800f282:	6818      	ldr	r0, [r3, #0]
 800f284:	b110      	cbz	r0, 800f28c <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0xc>
 800f286:	6803      	ldr	r3, [r0, #0]
 800f288:	699b      	ldr	r3, [r3, #24]
 800f28a:	4718      	bx	r3
 800f28c:	4770      	bx	lr
 800f28e:	bf00      	nop
 800f290:	20013f70 	.word	0x20013f70

0800f294 <_ZN8touchgfx11Application29handlePendingScreenTransitionEv>:
 800f294:	4770      	bx	lr
	...

0800f298 <_ZN8touchgfx11Application4drawEv>:
 800f298:	b507      	push	{r0, r1, r2, lr}
 800f29a:	4b09      	ldr	r3, [pc, #36]	@ (800f2c0 <_ZN8touchgfx11Application4drawEv+0x28>)
 800f29c:	f9b3 2000 	ldrsh.w	r2, [r3]
 800f2a0:	4b08      	ldr	r3, [pc, #32]	@ (800f2c4 <_ZN8touchgfx11Application4drawEv+0x2c>)
 800f2a2:	f8ad 2004 	strh.w	r2, [sp, #4]
 800f2a6:	f9b3 3000 	ldrsh.w	r3, [r3]
 800f2aa:	f8ad 3006 	strh.w	r3, [sp, #6]
 800f2ae:	6803      	ldr	r3, [r0, #0]
 800f2b0:	2100      	movs	r1, #0
 800f2b2:	9100      	str	r1, [sp, #0]
 800f2b4:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 800f2b6:	4669      	mov	r1, sp
 800f2b8:	4798      	blx	r3
 800f2ba:	b003      	add	sp, #12
 800f2bc:	f85d fb04 	ldr.w	pc, [sp], #4
 800f2c0:	20013f1e 	.word	0x20013f1e
 800f2c4:	20013f20 	.word	0x20013f20

0800f2c8 <_ZN8touchgfx11Application10invalidateEv>:
 800f2c8:	4b09      	ldr	r3, [pc, #36]	@ (800f2f0 <_ZN8touchgfx11Application10invalidateEv+0x28>)
 800f2ca:	f9b3 2000 	ldrsh.w	r2, [r3]
 800f2ce:	4b09      	ldr	r3, [pc, #36]	@ (800f2f4 <_ZN8touchgfx11Application10invalidateEv+0x2c>)
 800f2d0:	b082      	sub	sp, #8
 800f2d2:	f9b3 3000 	ldrsh.w	r3, [r3]
 800f2d6:	f8ad 2004 	strh.w	r2, [sp, #4]
 800f2da:	2100      	movs	r1, #0
 800f2dc:	f8ad 3006 	strh.w	r3, [sp, #6]
 800f2e0:	9100      	str	r1, [sp, #0]
 800f2e2:	6803      	ldr	r3, [r0, #0]
 800f2e4:	aa02      	add	r2, sp, #8
 800f2e6:	e912 0006 	ldmdb	r2, {r1, r2}
 800f2ea:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800f2ec:	b002      	add	sp, #8
 800f2ee:	4718      	bx	r3
 800f2f0:	20013f1e 	.word	0x20013f1e
 800f2f4:	20013f20 	.word	0x20013f20

0800f2f8 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE>:
 800f2f8:	4b03      	ldr	r3, [pc, #12]	@ (800f308 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0x10>)
 800f2fa:	6818      	ldr	r0, [r3, #0]
 800f2fc:	b110      	cbz	r0, 800f304 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0xc>
 800f2fe:	6803      	ldr	r3, [r0, #0]
 800f300:	69db      	ldr	r3, [r3, #28]
 800f302:	4718      	bx	r3
 800f304:	4770      	bx	lr
 800f306:	bf00      	nop
 800f308:	20013f70 	.word	0x20013f70

0800f30c <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE>:
 800f30c:	4b03      	ldr	r3, [pc, #12]	@ (800f31c <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0x10>)
 800f30e:	6818      	ldr	r0, [r3, #0]
 800f310:	b110      	cbz	r0, 800f318 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0xc>
 800f312:	6803      	ldr	r3, [r0, #0]
 800f314:	6a1b      	ldr	r3, [r3, #32]
 800f316:	4718      	bx	r3
 800f318:	4770      	bx	lr
 800f31a:	bf00      	nop
 800f31c:	20013f70 	.word	0x20013f70

0800f320 <_ZN8touchgfx11Application16clearCachedAreasEv>:
 800f320:	2300      	movs	r3, #0
 800f322:	f8a0 30ec 	strh.w	r3, [r0, #236]	@ 0xec
 800f326:	4770      	bx	lr

0800f328 <_ZN8touchgfx11Application14handleKeyEventEh>:
 800f328:	4b03      	ldr	r3, [pc, #12]	@ (800f338 <_ZN8touchgfx11Application14handleKeyEventEh+0x10>)
 800f32a:	6818      	ldr	r0, [r3, #0]
 800f32c:	b110      	cbz	r0, 800f334 <_ZN8touchgfx11Application14handleKeyEventEh+0xc>
 800f32e:	6803      	ldr	r3, [r0, #0]
 800f330:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800f332:	4718      	bx	r3
 800f334:	4770      	bx	lr
 800f336:	bf00      	nop
 800f338:	20013f70 	.word	0x20013f70

0800f33c <_ZN8touchgfx11ApplicationD1Ev>:
 800f33c:	4770      	bx	lr

0800f33e <_ZN8touchgfx11ApplicationD0Ev>:
 800f33e:	b510      	push	{r4, lr}
 800f340:	f44f 719e 	mov.w	r1, #316	@ 0x13c
 800f344:	4604      	mov	r4, r0
 800f346:	f012 fb76 	bl	8021a36 <_ZdlPvj>
 800f34a:	4620      	mov	r0, r4
 800f34c:	bd10      	pop	{r4, pc}

0800f34e <_ZNK8touchgfx4Rect9intersectERKS0_>:
 800f34e:	b510      	push	{r4, lr}
 800f350:	f9b1 4000 	ldrsh.w	r4, [r1]
 800f354:	888a      	ldrh	r2, [r1, #4]
 800f356:	f9b0 3000 	ldrsh.w	r3, [r0]
 800f35a:	4422      	add	r2, r4
 800f35c:	b212      	sxth	r2, r2
 800f35e:	4293      	cmp	r3, r2
 800f360:	da15      	bge.n	800f38e <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 800f362:	8882      	ldrh	r2, [r0, #4]
 800f364:	4413      	add	r3, r2
 800f366:	b21b      	sxth	r3, r3
 800f368:	429c      	cmp	r4, r3
 800f36a:	da10      	bge.n	800f38e <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 800f36c:	f9b1 3002 	ldrsh.w	r3, [r1, #2]
 800f370:	88c9      	ldrh	r1, [r1, #6]
 800f372:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 800f376:	4419      	add	r1, r3
 800f378:	b209      	sxth	r1, r1
 800f37a:	428a      	cmp	r2, r1
 800f37c:	da07      	bge.n	800f38e <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 800f37e:	88c0      	ldrh	r0, [r0, #6]
 800f380:	4410      	add	r0, r2
 800f382:	b200      	sxth	r0, r0
 800f384:	4283      	cmp	r3, r0
 800f386:	bfac      	ite	ge
 800f388:	2000      	movge	r0, #0
 800f38a:	2001      	movlt	r0, #1
 800f38c:	bd10      	pop	{r4, pc}
 800f38e:	2000      	movs	r0, #0
 800f390:	e7fc      	b.n	800f38c <_ZNK8touchgfx4Rect9intersectERKS0_+0x3e>

0800f392 <_ZN8touchgfx4Rect10restrictToEss>:
 800f392:	f9b0 3000 	ldrsh.w	r3, [r0]
 800f396:	2b00      	cmp	r3, #0
 800f398:	b510      	push	{r4, lr}
 800f39a:	da04      	bge.n	800f3a6 <_ZN8touchgfx4Rect10restrictToEss+0x14>
 800f39c:	8884      	ldrh	r4, [r0, #4]
 800f39e:	4423      	add	r3, r4
 800f3a0:	8083      	strh	r3, [r0, #4]
 800f3a2:	2300      	movs	r3, #0
 800f3a4:	8003      	strh	r3, [r0, #0]
 800f3a6:	f9b0 4000 	ldrsh.w	r4, [r0]
 800f3aa:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 800f3ae:	1b09      	subs	r1, r1, r4
 800f3b0:	428b      	cmp	r3, r1
 800f3b2:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 800f3b6:	bfc8      	it	gt
 800f3b8:	8081      	strhgt	r1, [r0, #4]
 800f3ba:	2b00      	cmp	r3, #0
 800f3bc:	da04      	bge.n	800f3c8 <_ZN8touchgfx4Rect10restrictToEss+0x36>
 800f3be:	88c1      	ldrh	r1, [r0, #6]
 800f3c0:	440b      	add	r3, r1
 800f3c2:	80c3      	strh	r3, [r0, #6]
 800f3c4:	2300      	movs	r3, #0
 800f3c6:	8043      	strh	r3, [r0, #2]
 800f3c8:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
 800f3cc:	f9b0 3006 	ldrsh.w	r3, [r0, #6]
 800f3d0:	1a52      	subs	r2, r2, r1
 800f3d2:	4293      	cmp	r3, r2
 800f3d4:	bfc8      	it	gt
 800f3d6:	80c2      	strhgt	r2, [r0, #6]
 800f3d8:	bd10      	pop	{r4, pc}
	...

0800f3dc <_ZN8touchgfx11Application4drawERNS_4RectE>:
 800f3dc:	b510      	push	{r4, lr}
 800f3de:	4b10      	ldr	r3, [pc, #64]	@ (800f420 <_ZN8touchgfx11Application4drawERNS_4RectE+0x44>)
 800f3e0:	f9b3 2000 	ldrsh.w	r2, [r3]
 800f3e4:	4b0f      	ldr	r3, [pc, #60]	@ (800f424 <_ZN8touchgfx11Application4drawERNS_4RectE+0x48>)
 800f3e6:	460c      	mov	r4, r1
 800f3e8:	4620      	mov	r0, r4
 800f3ea:	f9b3 1000 	ldrsh.w	r1, [r3]
 800f3ee:	f7ff ffd0 	bl	800f392 <_ZN8touchgfx4Rect10restrictToEss>
 800f3f2:	4b0d      	ldr	r3, [pc, #52]	@ (800f428 <_ZN8touchgfx11Application4drawERNS_4RectE+0x4c>)
 800f3f4:	6818      	ldr	r0, [r3, #0]
 800f3f6:	b190      	cbz	r0, 800f41e <_ZN8touchgfx11Application4drawERNS_4RectE+0x42>
 800f3f8:	6803      	ldr	r3, [r0, #0]
 800f3fa:	4621      	mov	r1, r4
 800f3fc:	689b      	ldr	r3, [r3, #8]
 800f3fe:	4798      	blx	r3
 800f400:	4b0a      	ldr	r3, [pc, #40]	@ (800f42c <_ZN8touchgfx11Application4drawERNS_4RectE+0x50>)
 800f402:	6818      	ldr	r0, [r3, #0]
 800f404:	b118      	cbz	r0, 800f40e <_ZN8touchgfx11Application4drawERNS_4RectE+0x32>
 800f406:	6803      	ldr	r3, [r0, #0]
 800f408:	4621      	mov	r1, r4
 800f40a:	689b      	ldr	r3, [r3, #8]
 800f40c:	4798      	blx	r3
 800f40e:	4b08      	ldr	r3, [pc, #32]	@ (800f430 <_ZN8touchgfx11Application4drawERNS_4RectE+0x54>)
 800f410:	6818      	ldr	r0, [r3, #0]
 800f412:	6803      	ldr	r3, [r0, #0]
 800f414:	4621      	mov	r1, r4
 800f416:	69db      	ldr	r3, [r3, #28]
 800f418:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800f41c:	4718      	bx	r3
 800f41e:	bd10      	pop	{r4, pc}
 800f420:	20013f20 	.word	0x20013f20
 800f424:	20013f1e 	.word	0x20013f1e
 800f428:	20013f70 	.word	0x20013f70
 800f42c:	20013f6c 	.word	0x20013f6c
 800f430:	20013f2c 	.word	0x20013f2c

0800f434 <_ZNK8touchgfx4Rect8includesERKS0_>:
 800f434:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800f436:	4606      	mov	r6, r0
 800f438:	4608      	mov	r0, r1
 800f43a:	460f      	mov	r7, r1
 800f43c:	f7fa ff99 	bl	800a372 <_ZNK8touchgfx4Rect7isEmptyEv>
 800f440:	b9e8      	cbnz	r0, 800f47e <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 800f442:	f9b7 5000 	ldrsh.w	r5, [r7]
 800f446:	f9b6 4000 	ldrsh.w	r4, [r6]
 800f44a:	42a5      	cmp	r5, r4
 800f44c:	db17      	blt.n	800f47e <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 800f44e:	f9b7 2002 	ldrsh.w	r2, [r7, #2]
 800f452:	f9b6 3002 	ldrsh.w	r3, [r6, #2]
 800f456:	429a      	cmp	r2, r3
 800f458:	db11      	blt.n	800f47e <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 800f45a:	88b9      	ldrh	r1, [r7, #4]
 800f45c:	440d      	add	r5, r1
 800f45e:	88b1      	ldrh	r1, [r6, #4]
 800f460:	440c      	add	r4, r1
 800f462:	b22d      	sxth	r5, r5
 800f464:	b224      	sxth	r4, r4
 800f466:	42a5      	cmp	r5, r4
 800f468:	dc09      	bgt.n	800f47e <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 800f46a:	88f8      	ldrh	r0, [r7, #6]
 800f46c:	4410      	add	r0, r2
 800f46e:	88f2      	ldrh	r2, [r6, #6]
 800f470:	4413      	add	r3, r2
 800f472:	b200      	sxth	r0, r0
 800f474:	b21b      	sxth	r3, r3
 800f476:	4298      	cmp	r0, r3
 800f478:	bfcc      	ite	gt
 800f47a:	2000      	movgt	r0, #0
 800f47c:	2001      	movle	r0, #1
 800f47e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

0800f480 <_ZN8touchgfx4Rect11expandToFitERKS0_>:
 800f480:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800f482:	4604      	mov	r4, r0
 800f484:	4608      	mov	r0, r1
 800f486:	460d      	mov	r5, r1
 800f488:	f7fa ff73 	bl	800a372 <_ZNK8touchgfx4Rect7isEmptyEv>
 800f48c:	b978      	cbnz	r0, 800f4ae <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
 800f48e:	4620      	mov	r0, r4
 800f490:	f7fa ff6f 	bl	800a372 <_ZNK8touchgfx4Rect7isEmptyEv>
 800f494:	f9b5 6000 	ldrsh.w	r6, [r5]
 800f498:	b150      	cbz	r0, 800f4b0 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x30>
 800f49a:	8026      	strh	r6, [r4, #0]
 800f49c:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 800f4a0:	8063      	strh	r3, [r4, #2]
 800f4a2:	f9b5 3004 	ldrsh.w	r3, [r5, #4]
 800f4a6:	80a3      	strh	r3, [r4, #4]
 800f4a8:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 800f4ac:	80e3      	strh	r3, [r4, #6]
 800f4ae:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800f4b0:	f9b4 1000 	ldrsh.w	r1, [r4]
 800f4b4:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 800f4b8:	f9b4 3002 	ldrsh.w	r3, [r4, #2]
 800f4bc:	f8b5 c004 	ldrh.w	ip, [r5, #4]
 800f4c0:	88ed      	ldrh	r5, [r5, #6]
 800f4c2:	42b1      	cmp	r1, r6
 800f4c4:	460f      	mov	r7, r1
 800f4c6:	bfa8      	it	ge
 800f4c8:	4637      	movge	r7, r6
 800f4ca:	4293      	cmp	r3, r2
 800f4cc:	4618      	mov	r0, r3
 800f4ce:	4466      	add	r6, ip
 800f4d0:	bfa8      	it	ge
 800f4d2:	4610      	movge	r0, r2
 800f4d4:	f8b4 c004 	ldrh.w	ip, [r4, #4]
 800f4d8:	8027      	strh	r7, [r4, #0]
 800f4da:	442a      	add	r2, r5
 800f4dc:	88e5      	ldrh	r5, [r4, #6]
 800f4de:	8060      	strh	r0, [r4, #2]
 800f4e0:	4461      	add	r1, ip
 800f4e2:	442b      	add	r3, r5
 800f4e4:	b236      	sxth	r6, r6
 800f4e6:	b209      	sxth	r1, r1
 800f4e8:	b212      	sxth	r2, r2
 800f4ea:	b21b      	sxth	r3, r3
 800f4ec:	428e      	cmp	r6, r1
 800f4ee:	bfac      	ite	ge
 800f4f0:	ebc7 0106 	rsbge	r1, r7, r6
 800f4f4:	ebc7 0101 	rsblt	r1, r7, r1
 800f4f8:	429a      	cmp	r2, r3
 800f4fa:	bfac      	ite	ge
 800f4fc:	ebc0 0202 	rsbge	r2, r0, r2
 800f500:	ebc0 0203 	rsblt	r2, r0, r3
 800f504:	80a1      	strh	r1, [r4, #4]
 800f506:	80e2      	strh	r2, [r4, #6]
 800f508:	e7d1      	b.n	800f4ae <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
	...

0800f50c <_ZN8touchgfx11Application11getInstanceEv>:
 800f50c:	4b01      	ldr	r3, [pc, #4]	@ (800f514 <_ZN8touchgfx11Application11getInstanceEv+0x8>)
 800f50e:	6818      	ldr	r0, [r3, #0]
 800f510:	4770      	bx	lr
 800f512:	bf00      	nop
 800f514:	20013f80 	.word	0x20013f80

0800f518 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv>:
 800f518:	b510      	push	{r4, lr}
 800f51a:	2300      	movs	r3, #0
 800f51c:	f8a0 30a4 	strh.w	r3, [r0, #164]	@ 0xa4
 800f520:	f8b0 3080 	ldrh.w	r3, [r0, #128]	@ 0x80
 800f524:	f8a0 30a6 	strh.w	r3, [r0, #166]	@ 0xa6
 800f528:	4604      	mov	r4, r0
 800f52a:	f8b4 30a4 	ldrh.w	r3, [r4, #164]	@ 0xa4
 800f52e:	f8b4 20a6 	ldrh.w	r2, [r4, #166]	@ 0xa6
 800f532:	429a      	cmp	r2, r3
 800f534:	d90e      	bls.n	800f554 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x3c>
 800f536:	18e2      	adds	r2, r4, r3
 800f538:	f892 2084 	ldrb.w	r2, [r2, #132]	@ 0x84
 800f53c:	b122      	cbz	r2, 800f548 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x30>
 800f53e:	f854 0023 	ldr.w	r0, [r4, r3, lsl #2]
 800f542:	6803      	ldr	r3, [r0, #0]
 800f544:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 800f546:	4798      	blx	r3
 800f548:	f8b4 30a4 	ldrh.w	r3, [r4, #164]	@ 0xa4
 800f54c:	3301      	adds	r3, #1
 800f54e:	f8a4 30a4 	strh.w	r3, [r4, #164]	@ 0xa4
 800f552:	e7ea      	b.n	800f52a <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x12>
 800f554:	bd10      	pop	{r4, pc}

0800f556 <_ZN8touchgfx11Application12TimerWidgets5clearEv>:
 800f556:	2300      	movs	r3, #0
 800f558:	f8a0 3080 	strh.w	r3, [r0, #128]	@ 0x80
 800f55c:	f100 0284 	add.w	r2, r0, #132	@ 0x84
 800f560:	30a4      	adds	r0, #164	@ 0xa4
 800f562:	f802 3b01 	strb.w	r3, [r2], #1
 800f566:	4282      	cmp	r2, r0
 800f568:	d1fb      	bne.n	800f562 <_ZN8touchgfx11Application12TimerWidgets5clearEv+0xc>
 800f56a:	4770      	bx	lr

0800f56c <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE>:
 800f56c:	b570      	push	{r4, r5, r6, lr}
 800f56e:	4c0b      	ldr	r4, [pc, #44]	@ (800f59c <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x30>)
 800f570:	4605      	mov	r5, r0
 800f572:	6820      	ldr	r0, [r4, #0]
 800f574:	460e      	mov	r6, r1
 800f576:	b110      	cbz	r0, 800f57e <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x12>
 800f578:	6803      	ldr	r3, [r0, #0]
 800f57a:	695b      	ldr	r3, [r3, #20]
 800f57c:	4798      	blx	r3
 800f57e:	1d28      	adds	r0, r5, #4
 800f580:	f7ff ffe9 	bl	800f556 <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 800f584:	6026      	str	r6, [r4, #0]
 800f586:	6833      	ldr	r3, [r6, #0]
 800f588:	4630      	mov	r0, r6
 800f58a:	68db      	ldr	r3, [r3, #12]
 800f58c:	4798      	blx	r3
 800f58e:	682b      	ldr	r3, [r5, #0]
 800f590:	4628      	mov	r0, r5
 800f592:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800f594:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800f598:	4718      	bx	r3
 800f59a:	bf00      	nop
 800f59c:	20013f70 	.word	0x20013f70

0800f5a0 <_ZN8touchgfx11Application12TimerWidgets7compactEv>:
 800f5a0:	2300      	movs	r3, #0
 800f5a2:	f8b0 c080 	ldrh.w	ip, [r0, #128]	@ 0x80
 800f5a6:	f8b0 10a4 	ldrh.w	r1, [r0, #164]	@ 0xa4
 800f5aa:	b5f0      	push	{r4, r5, r6, r7, lr}
 800f5ac:	461a      	mov	r2, r3
 800f5ae:	461c      	mov	r4, r3
 800f5b0:	461d      	mov	r5, r3
 800f5b2:	459c      	cmp	ip, r3
 800f5b4:	dd1a      	ble.n	800f5ec <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x4c>
 800f5b6:	18c6      	adds	r6, r0, r3
 800f5b8:	f896 6084 	ldrb.w	r6, [r6, #132]	@ 0x84
 800f5bc:	b16e      	cbz	r6, 800f5da <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x3a>
 800f5be:	429a      	cmp	r2, r3
 800f5c0:	d008      	beq.n	800f5d4 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x34>
 800f5c2:	fa1f fe82 	uxth.w	lr, r2
 800f5c6:	f850 7023 	ldr.w	r7, [r0, r3, lsl #2]
 800f5ca:	f840 702e 	str.w	r7, [r0, lr, lsl #2]
 800f5ce:	1887      	adds	r7, r0, r2
 800f5d0:	f887 6084 	strb.w	r6, [r7, #132]	@ 0x84
 800f5d4:	3201      	adds	r2, #1
 800f5d6:	3301      	adds	r3, #1
 800f5d8:	e7eb      	b.n	800f5b2 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x12>
 800f5da:	f8b0 60a6 	ldrh.w	r6, [r0, #166]	@ 0xa6
 800f5de:	4299      	cmp	r1, r3
 800f5e0:	bfa8      	it	ge
 800f5e2:	3501      	addge	r5, #1
 800f5e4:	429e      	cmp	r6, r3
 800f5e6:	bfc8      	it	gt
 800f5e8:	3401      	addgt	r4, #1
 800f5ea:	e7f4      	b.n	800f5d6 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x36>
 800f5ec:	f8b0 30a6 	ldrh.w	r3, [r0, #166]	@ 0xa6
 800f5f0:	1b49      	subs	r1, r1, r5
 800f5f2:	1b1b      	subs	r3, r3, r4
 800f5f4:	f8a0 10a4 	strh.w	r1, [r0, #164]	@ 0xa4
 800f5f8:	f8a0 30a6 	strh.w	r3, [r0, #166]	@ 0xa6
 800f5fc:	f8b0 3080 	ldrh.w	r3, [r0, #128]	@ 0x80
 800f600:	4293      	cmp	r3, r2
 800f602:	dd03      	ble.n	800f60c <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x6c>
 800f604:	3b01      	subs	r3, #1
 800f606:	f8a0 3080 	strh.w	r3, [r0, #128]	@ 0x80
 800f60a:	e7f7      	b.n	800f5fc <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x5c>
 800f60c:	bdf0      	pop	{r4, r5, r6, r7, pc}
	...

0800f610 <_ZN8touchgfx11Application15handleTickEventEv>:
 800f610:	b570      	push	{r4, r5, r6, lr}
 800f612:	4d16      	ldr	r5, [pc, #88]	@ (800f66c <_ZN8touchgfx11Application15handleTickEventEv+0x5c>)
 800f614:	4604      	mov	r4, r0
 800f616:	6828      	ldr	r0, [r5, #0]
 800f618:	b140      	cbz	r0, 800f62c <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
 800f61a:	7a03      	ldrb	r3, [r0, #8]
 800f61c:	b933      	cbnz	r3, 800f62c <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
 800f61e:	f884 3138 	strb.w	r3, [r4, #312]	@ 0x138
 800f622:	6803      	ldr	r3, [r0, #0]
 800f624:	689b      	ldr	r3, [r3, #8]
 800f626:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800f62a:	4718      	bx	r3
 800f62c:	f894 3138 	ldrb.w	r3, [r4, #312]	@ 0x138
 800f630:	4e0f      	ldr	r6, [pc, #60]	@ (800f670 <_ZN8touchgfx11Application15handleTickEventEv+0x60>)
 800f632:	b973      	cbnz	r3, 800f652 <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 800f634:	b168      	cbz	r0, 800f652 <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 800f636:	7a03      	ldrb	r3, [r0, #8]
 800f638:	b15b      	cbz	r3, 800f652 <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 800f63a:	6830      	ldr	r0, [r6, #0]
 800f63c:	b110      	cbz	r0, 800f644 <_ZN8touchgfx11Application15handleTickEventEv+0x34>
 800f63e:	6803      	ldr	r3, [r0, #0]
 800f640:	691b      	ldr	r3, [r3, #16]
 800f642:	4798      	blx	r3
 800f644:	6828      	ldr	r0, [r5, #0]
 800f646:	6803      	ldr	r3, [r0, #0]
 800f648:	68db      	ldr	r3, [r3, #12]
 800f64a:	4798      	blx	r3
 800f64c:	2301      	movs	r3, #1
 800f64e:	f884 3138 	strb.w	r3, [r4, #312]	@ 0x138
 800f652:	3404      	adds	r4, #4
 800f654:	4620      	mov	r0, r4
 800f656:	f7ff ff5f 	bl	800f518 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv>
 800f65a:	4620      	mov	r0, r4
 800f65c:	f7ff ffa0 	bl	800f5a0 <_ZN8touchgfx11Application12TimerWidgets7compactEv>
 800f660:	6830      	ldr	r0, [r6, #0]
 800f662:	b110      	cbz	r0, 800f66a <_ZN8touchgfx11Application15handleTickEventEv+0x5a>
 800f664:	6803      	ldr	r3, [r0, #0]
 800f666:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800f668:	e7dd      	b.n	800f626 <_ZN8touchgfx11Application15handleTickEventEv+0x16>
 800f66a:	bd70      	pop	{r4, r5, r6, pc}
 800f66c:	20013f74 	.word	0x20013f74
 800f670:	20013f70 	.word	0x20013f70

0800f674 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>:
 800f674:	4603      	mov	r3, r0
 800f676:	f100 0140 	add.w	r1, r0, #64	@ 0x40
 800f67a:	2200      	movs	r2, #0
 800f67c:	801a      	strh	r2, [r3, #0]
 800f67e:	805a      	strh	r2, [r3, #2]
 800f680:	809a      	strh	r2, [r3, #4]
 800f682:	80da      	strh	r2, [r3, #6]
 800f684:	3308      	adds	r3, #8
 800f686:	428b      	cmp	r3, r1
 800f688:	d1f8      	bne.n	800f67c <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev+0x8>
 800f68a:	f8a0 2040 	strh.w	r2, [r0, #64]	@ 0x40
 800f68e:	4770      	bx	lr

0800f690 <_ZN8touchgfx11ApplicationC1Ev>:
 800f690:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800f692:	4606      	mov	r6, r0
 800f694:	4b1c      	ldr	r3, [pc, #112]	@ (800f708 <_ZN8touchgfx11ApplicationC1Ev+0x78>)
 800f696:	f846 3b04 	str.w	r3, [r6], #4
 800f69a:	4604      	mov	r4, r0
 800f69c:	2500      	movs	r5, #0
 800f69e:	22a8      	movs	r2, #168	@ 0xa8
 800f6a0:	2100      	movs	r1, #0
 800f6a2:	4630      	mov	r0, r6
 800f6a4:	f013 fb0b 	bl	8022cbe <memset>
 800f6a8:	f8a4 5084 	strh.w	r5, [r4, #132]	@ 0x84
 800f6ac:	f104 00ac 	add.w	r0, r4, #172	@ 0xac
 800f6b0:	f7ff ffe0 	bl	800f674 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 800f6b4:	f104 00ee 	add.w	r0, r4, #238	@ 0xee
 800f6b8:	f7ff ffdc 	bl	800f674 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 800f6bc:	f8a4 5130 	strh.w	r5, [r4, #304]	@ 0x130
 800f6c0:	f8a4 5132 	strh.w	r5, [r4, #306]	@ 0x132
 800f6c4:	f8a4 5134 	strh.w	r5, [r4, #308]	@ 0x134
 800f6c8:	f8a4 5136 	strh.w	r5, [r4, #310]	@ 0x136
 800f6cc:	f884 5138 	strb.w	r5, [r4, #312]	@ 0x138
 800f6d0:	490e      	ldr	r1, [pc, #56]	@ (800f70c <_ZN8touchgfx11ApplicationC1Ev+0x7c>)
 800f6d2:	480f      	ldr	r0, [pc, #60]	@ (800f710 <_ZN8touchgfx11ApplicationC1Ev+0x80>)
 800f6d4:	4f0f      	ldr	r7, [pc, #60]	@ (800f714 <_ZN8touchgfx11ApplicationC1Ev+0x84>)
 800f6d6:	f011 fb39 	bl	8020d4c <CRC_Lock>
 800f6da:	4b0f      	ldr	r3, [pc, #60]	@ (800f718 <_ZN8touchgfx11ApplicationC1Ev+0x88>)
 800f6dc:	b158      	cbz	r0, 800f6f6 <_ZN8touchgfx11ApplicationC1Ev+0x66>
 800f6de:	801d      	strh	r5, [r3, #0]
 800f6e0:	4a0e      	ldr	r2, [pc, #56]	@ (800f71c <_ZN8touchgfx11ApplicationC1Ev+0x8c>)
 800f6e2:	2300      	movs	r3, #0
 800f6e4:	6013      	str	r3, [r2, #0]
 800f6e6:	4a0e      	ldr	r2, [pc, #56]	@ (800f720 <_ZN8touchgfx11ApplicationC1Ev+0x90>)
 800f6e8:	603b      	str	r3, [r7, #0]
 800f6ea:	4630      	mov	r0, r6
 800f6ec:	6013      	str	r3, [r2, #0]
 800f6ee:	f7ff ff32 	bl	800f556 <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 800f6f2:	4620      	mov	r0, r4
 800f6f4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800f6f6:	f44f 6280 	mov.w	r2, #1024	@ 0x400
 800f6fa:	2002      	movs	r0, #2
 800f6fc:	801a      	strh	r2, [r3, #0]
 800f6fe:	6038      	str	r0, [r7, #0]
 800f700:	f001 ffcc 	bl	801169c <_ZN8touchgfx6Screen4drawEv>
 800f704:	e7ec      	b.n	800f6e0 <_ZN8touchgfx11ApplicationC1Ev+0x50>
 800f706:	bf00      	nop
 800f708:	08024d54 	.word	0x08024d54
 800f70c:	b5e8b5cd 	.word	0xb5e8b5cd
 800f710:	f407a5c2 	.word	0xf407a5c2
 800f714:	20013f70 	.word	0x20013f70
 800f718:	20000194 	.word	0x20000194
 800f71c:	20013f80 	.word	0x20013f80
 800f720:	20013f74 	.word	0x20013f74

0800f724 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>:
 800f724:	f8b0 3040 	ldrh.w	r3, [r0, #64]	@ 0x40
 800f728:	3b01      	subs	r3, #1
 800f72a:	b29b      	uxth	r3, r3
 800f72c:	428b      	cmp	r3, r1
 800f72e:	b510      	push	{r4, lr}
 800f730:	f8a0 3040 	strh.w	r3, [r0, #64]	@ 0x40
 800f734:	d908      	bls.n	800f748 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt+0x24>
 800f736:	eb00 03c3 	add.w	r3, r0, r3, lsl #3
 800f73a:	eb00 04c1 	add.w	r4, r0, r1, lsl #3
 800f73e:	681a      	ldr	r2, [r3, #0]
 800f740:	f840 2031 	str.w	r2, [r0, r1, lsl #3]
 800f744:	685a      	ldr	r2, [r3, #4]
 800f746:	6062      	str	r2, [r4, #4]
 800f748:	bd10      	pop	{r4, pc}
	...

0800f74c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>:
 800f74c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f750:	4b92      	ldr	r3, [pc, #584]	@ (800f99c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x250>)
 800f752:	b08f      	sub	sp, #60	@ 0x3c
 800f754:	ac0a      	add	r4, sp, #40	@ 0x28
 800f756:	e884 0006 	stmia.w	r4, {r1, r2}
 800f75a:	f9b3 2000 	ldrsh.w	r2, [r3]
 800f75e:	4b90      	ldr	r3, [pc, #576]	@ (800f9a0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x254>)
 800f760:	4683      	mov	fp, r0
 800f762:	f9b3 1000 	ldrsh.w	r1, [r3]
 800f766:	4620      	mov	r0, r4
 800f768:	f7ff fe13 	bl	800f392 <_ZN8touchgfx4Rect10restrictToEss>
 800f76c:	4620      	mov	r0, r4
 800f76e:	f7fa fe00 	bl	800a372 <_ZNK8touchgfx4Rect7isEmptyEv>
 800f772:	2800      	cmp	r0, #0
 800f774:	d170      	bne.n	800f858 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x10c>
 800f776:	4b8b      	ldr	r3, [pc, #556]	@ (800f9a4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x258>)
 800f778:	681b      	ldr	r3, [r3, #0]
 800f77a:	f893 3048 	ldrb.w	r3, [r3, #72]	@ 0x48
 800f77e:	2b02      	cmp	r3, #2
 800f780:	d06a      	beq.n	800f858 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x10c>
 800f782:	9403      	str	r4, [sp, #12]
 800f784:	f8bb 40ec 	ldrh.w	r4, [fp, #236]	@ 0xec
 800f788:	f10b 03ac 	add.w	r3, fp, #172	@ 0xac
 800f78c:	eb0b 05c4 	add.w	r5, fp, r4, lsl #3
 800f790:	35a4      	adds	r5, #164	@ 0xa4
 800f792:	9301      	str	r3, [sp, #4]
 800f794:	b15c      	cbz	r4, 800f7ae <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x62>
 800f796:	4629      	mov	r1, r5
 800f798:	9803      	ldr	r0, [sp, #12]
 800f79a:	f7ff fe4b 	bl	800f434 <_ZNK8touchgfx4Rect8includesERKS0_>
 800f79e:	3c01      	subs	r4, #1
 800f7a0:	b118      	cbz	r0, 800f7aa <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5e>
 800f7a2:	b2a1      	uxth	r1, r4
 800f7a4:	9801      	ldr	r0, [sp, #4]
 800f7a6:	f7ff ffbd 	bl	800f724 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 800f7aa:	3d08      	subs	r5, #8
 800f7ac:	e7f2      	b.n	800f794 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x48>
 800f7ae:	f8bb a0ec 	ldrh.w	sl, [fp, #236]	@ 0xec
 800f7b2:	f8cd a010 	str.w	sl, [sp, #16]
 800f7b6:	f10a 33ff 	add.w	r3, sl, #4294967295
 800f7ba:	9302      	str	r3, [sp, #8]
 800f7bc:	ea4f 03ca 	mov.w	r3, sl, lsl #3
 800f7c0:	f103 04a4 	add.w	r4, r3, #164	@ 0xa4
 800f7c4:	9306      	str	r3, [sp, #24]
 800f7c6:	445c      	add	r4, fp
 800f7c8:	2500      	movs	r5, #0
 800f7ca:	4626      	mov	r6, r4
 800f7cc:	f8cd a014 	str.w	sl, [sp, #20]
 800f7d0:	462f      	mov	r7, r5
 800f7d2:	9b05      	ldr	r3, [sp, #20]
 800f7d4:	2b00      	cmp	r3, #0
 800f7d6:	d073      	beq.n	800f8c0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x174>
 800f7d8:	9903      	ldr	r1, [sp, #12]
 800f7da:	4630      	mov	r0, r6
 800f7dc:	f7ff fdb7 	bl	800f34e <_ZNK8touchgfx4Rect9intersectERKS0_>
 800f7e0:	b350      	cbz	r0, 800f838 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xec>
 800f7e2:	f9bd e028 	ldrsh.w	lr, [sp, #40]	@ 0x28
 800f7e6:	f9b6 c000 	ldrsh.w	ip, [r6]
 800f7ea:	f9bd 802a 	ldrsh.w	r8, [sp, #42]	@ 0x2a
 800f7ee:	f9b6 9002 	ldrsh.w	r9, [r6, #2]
 800f7f2:	45e6      	cmp	lr, ip
 800f7f4:	db33      	blt.n	800f85e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x112>
 800f7f6:	f8bd 202c 	ldrh.w	r2, [sp, #44]	@ 0x2c
 800f7fa:	88b3      	ldrh	r3, [r6, #4]
 800f7fc:	4472      	add	r2, lr
 800f7fe:	4463      	add	r3, ip
 800f800:	b212      	sxth	r2, r2
 800f802:	b21b      	sxth	r3, r3
 800f804:	429a      	cmp	r2, r3
 800f806:	dc2a      	bgt.n	800f85e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x112>
 800f808:	88f3      	ldrh	r3, [r6, #6]
 800f80a:	f8bd 102e 	ldrh.w	r1, [sp, #46]	@ 0x2e
 800f80e:	fa1f f289 	uxth.w	r2, r9
 800f812:	4413      	add	r3, r2
 800f814:	b29b      	uxth	r3, r3
 800f816:	45c8      	cmp	r8, r9
 800f818:	fa1f fc88 	uxth.w	ip, r8
 800f81c:	fa0f fe83 	sxth.w	lr, r3
 800f820:	db0f      	blt.n	800f842 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xf6>
 800f822:	eba3 030c 	sub.w	r3, r3, ip
 800f826:	1ac9      	subs	r1, r1, r3
 800f828:	b209      	sxth	r1, r1
 800f82a:	2900      	cmp	r1, #0
 800f82c:	f8ad 102e 	strh.w	r1, [sp, #46]	@ 0x2e
 800f830:	dd12      	ble.n	800f858 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x10c>
 800f832:	f8ad e02a 	strh.w	lr, [sp, #42]	@ 0x2a
 800f836:	4605      	mov	r5, r0
 800f838:	9b05      	ldr	r3, [sp, #20]
 800f83a:	3b01      	subs	r3, #1
 800f83c:	9305      	str	r3, [sp, #20]
 800f83e:	3e08      	subs	r6, #8
 800f840:	e7c7      	b.n	800f7d2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x86>
 800f842:	4461      	add	r1, ip
 800f844:	b209      	sxth	r1, r1
 800f846:	4571      	cmp	r1, lr
 800f848:	dc38      	bgt.n	800f8bc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x170>
 800f84a:	eba2 020c 	sub.w	r2, r2, ip
 800f84e:	b212      	sxth	r2, r2
 800f850:	f8ad 202e 	strh.w	r2, [sp, #46]	@ 0x2e
 800f854:	2a00      	cmp	r2, #0
 800f856:	dcee      	bgt.n	800f836 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xea>
 800f858:	b00f      	add	sp, #60	@ 0x3c
 800f85a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800f85e:	45c8      	cmp	r8, r9
 800f860:	db2c      	blt.n	800f8bc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x170>
 800f862:	88f3      	ldrh	r3, [r6, #6]
 800f864:	4499      	add	r9, r3
 800f866:	f8bd 302e 	ldrh.w	r3, [sp, #46]	@ 0x2e
 800f86a:	4498      	add	r8, r3
 800f86c:	fa0f f989 	sxth.w	r9, r9
 800f870:	fa0f f888 	sxth.w	r8, r8
 800f874:	45c1      	cmp	r9, r8
 800f876:	db21      	blt.n	800f8bc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x170>
 800f878:	88b3      	ldrh	r3, [r6, #4]
 800f87a:	f8bd 102c 	ldrh.w	r1, [sp, #44]	@ 0x2c
 800f87e:	fa1f f28c 	uxth.w	r2, ip
 800f882:	4413      	add	r3, r2
 800f884:	b29b      	uxth	r3, r3
 800f886:	45e6      	cmp	lr, ip
 800f888:	fa1f f88e 	uxth.w	r8, lr
 800f88c:	fa0f f983 	sxth.w	r9, r3
 800f890:	db0a      	blt.n	800f8a8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x15c>
 800f892:	eba3 0308 	sub.w	r3, r3, r8
 800f896:	1ac9      	subs	r1, r1, r3
 800f898:	b209      	sxth	r1, r1
 800f89a:	2900      	cmp	r1, #0
 800f89c:	f8ad 102c 	strh.w	r1, [sp, #44]	@ 0x2c
 800f8a0:	ddda      	ble.n	800f858 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x10c>
 800f8a2:	f8ad 9028 	strh.w	r9, [sp, #40]	@ 0x28
 800f8a6:	e7c6      	b.n	800f836 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xea>
 800f8a8:	4441      	add	r1, r8
 800f8aa:	b209      	sxth	r1, r1
 800f8ac:	4549      	cmp	r1, r9
 800f8ae:	dc05      	bgt.n	800f8bc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x170>
 800f8b0:	eba2 0208 	sub.w	r2, r2, r8
 800f8b4:	b212      	sxth	r2, r2
 800f8b6:	f8ad 202c 	strh.w	r2, [sp, #44]	@ 0x2c
 800f8ba:	e7cb      	b.n	800f854 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x108>
 800f8bc:	4607      	mov	r7, r0
 800f8be:	e7bb      	b.n	800f838 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xec>
 800f8c0:	2d00      	cmp	r5, #0
 800f8c2:	d181      	bne.n	800f7c8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x7c>
 800f8c4:	2f00      	cmp	r7, #0
 800f8c6:	f000 81df 	beq.w	800fc88 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x53c>
 800f8ca:	f9bd 6028 	ldrsh.w	r6, [sp, #40]	@ 0x28
 800f8ce:	f9bd 702a 	ldrsh.w	r7, [sp, #42]	@ 0x2a
 800f8d2:	f8bd a02e 	ldrh.w	sl, [sp, #46]	@ 0x2e
 800f8d6:	b2b3      	uxth	r3, r6
 800f8d8:	9305      	str	r3, [sp, #20]
 800f8da:	9a05      	ldr	r2, [sp, #20]
 800f8dc:	f8bd 302c 	ldrh.w	r3, [sp, #44]	@ 0x2c
 800f8e0:	4413      	add	r3, r2
 800f8e2:	b2ba      	uxth	r2, r7
 800f8e4:	4492      	add	sl, r2
 800f8e6:	b29b      	uxth	r3, r3
 800f8e8:	fa1f fa8a 	uxth.w	sl, sl
 800f8ec:	fa0f f883 	sxth.w	r8, r3
 800f8f0:	fa0f f98a 	sxth.w	r9, sl
 800f8f4:	e9cd 2307 	strd	r2, r3, [sp, #28]
 800f8f8:	9b04      	ldr	r3, [sp, #16]
 800f8fa:	2b00      	cmp	r3, #0
 800f8fc:	d054      	beq.n	800f9a8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x25c>
 800f8fe:	9903      	ldr	r1, [sp, #12]
 800f900:	4620      	mov	r0, r4
 800f902:	f7ff fd24 	bl	800f34e <_ZNK8touchgfx4Rect9intersectERKS0_>
 800f906:	e9dd 2307 	ldrd	r2, r3, [sp, #28]
 800f90a:	b1c0      	cbz	r0, 800f93e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f2>
 800f90c:	f9b4 e000 	ldrsh.w	lr, [r4]
 800f910:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 800f914:	4576      	cmp	r6, lr
 800f916:	dc22      	bgt.n	800f95e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x212>
 800f918:	f8b4 c004 	ldrh.w	ip, [r4, #4]
 800f91c:	44f4      	add	ip, lr
 800f91e:	fa0f fc8c 	sxth.w	ip, ip
 800f922:	45e0      	cmp	r8, ip
 800f924:	db1b      	blt.n	800f95e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x212>
 800f926:	428f      	cmp	r7, r1
 800f928:	fa1f fc81 	uxth.w	ip, r1
 800f92c:	88e1      	ldrh	r1, [r4, #6]
 800f92e:	dc0d      	bgt.n	800f94c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x200>
 800f930:	ebaa 0c0c 	sub.w	ip, sl, ip
 800f934:	eba1 010c 	sub.w	r1, r1, ip
 800f938:	f8a4 9002 	strh.w	r9, [r4, #2]
 800f93c:	80e1      	strh	r1, [r4, #6]
 800f93e:	4628      	mov	r0, r5
 800f940:	9904      	ldr	r1, [sp, #16]
 800f942:	3901      	subs	r1, #1
 800f944:	9104      	str	r1, [sp, #16]
 800f946:	3c08      	subs	r4, #8
 800f948:	4605      	mov	r5, r0
 800f94a:	e7d3      	b.n	800f8f4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1a8>
 800f94c:	4461      	add	r1, ip
 800f94e:	b209      	sxth	r1, r1
 800f950:	4549      	cmp	r1, r9
 800f952:	dcf5      	bgt.n	800f940 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f4>
 800f954:	eba2 0c0c 	sub.w	ip, r2, ip
 800f958:	f8a4 c006 	strh.w	ip, [r4, #6]
 800f95c:	e7ef      	b.n	800f93e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f2>
 800f95e:	428f      	cmp	r7, r1
 800f960:	dcee      	bgt.n	800f940 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f4>
 800f962:	f8b4 c006 	ldrh.w	ip, [r4, #6]
 800f966:	4461      	add	r1, ip
 800f968:	b209      	sxth	r1, r1
 800f96a:	4589      	cmp	r9, r1
 800f96c:	dbe8      	blt.n	800f940 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f4>
 800f96e:	4576      	cmp	r6, lr
 800f970:	fa1f fc8e 	uxth.w	ip, lr
 800f974:	88a1      	ldrh	r1, [r4, #4]
 800f976:	dc07      	bgt.n	800f988 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x23c>
 800f978:	eba3 0c0c 	sub.w	ip, r3, ip
 800f97c:	eba1 010c 	sub.w	r1, r1, ip
 800f980:	f8a4 8000 	strh.w	r8, [r4]
 800f984:	80a1      	strh	r1, [r4, #4]
 800f986:	e7da      	b.n	800f93e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f2>
 800f988:	4461      	add	r1, ip
 800f98a:	b209      	sxth	r1, r1
 800f98c:	4588      	cmp	r8, r1
 800f98e:	dbd7      	blt.n	800f940 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f4>
 800f990:	9905      	ldr	r1, [sp, #20]
 800f992:	eba1 0c0c 	sub.w	ip, r1, ip
 800f996:	f8a4 c004 	strh.w	ip, [r4, #4]
 800f99a:	e7d0      	b.n	800f93e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f2>
 800f99c:	20013f20 	.word	0x20013f20
 800f9a0:	20013f1e 	.word	0x20013f1e
 800f9a4:	20013f2c 	.word	0x20013f2c
 800f9a8:	2d00      	cmp	r5, #0
 800f9aa:	f000 816d 	beq.w	800fc88 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x53c>
 800f9ae:	9b06      	ldr	r3, [sp, #24]
 800f9b0:	445b      	add	r3, fp
 800f9b2:	461c      	mov	r4, r3
 800f9b4:	9b02      	ldr	r3, [sp, #8]
 800f9b6:	3301      	adds	r3, #1
 800f9b8:	f000 8166 	beq.w	800fc88 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x53c>
 800f9bc:	f104 05a4 	add.w	r5, r4, #164	@ 0xa4
 800f9c0:	4629      	mov	r1, r5
 800f9c2:	9803      	ldr	r0, [sp, #12]
 800f9c4:	f7ff fd36 	bl	800f434 <_ZNK8touchgfx4Rect8includesERKS0_>
 800f9c8:	b120      	cbz	r0, 800f9d4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x288>
 800f9ca:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 800f9ce:	9801      	ldr	r0, [sp, #4]
 800f9d0:	f7ff fea8 	bl	800f724 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 800f9d4:	9903      	ldr	r1, [sp, #12]
 800f9d6:	4628      	mov	r0, r5
 800f9d8:	f7ff fcb9 	bl	800f34e <_ZNK8touchgfx4Rect9intersectERKS0_>
 800f9dc:	2800      	cmp	r0, #0
 800f9de:	f000 809c 	beq.w	800fb1a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3ce>
 800f9e2:	f9b4 90a4 	ldrsh.w	r9, [r4, #164]	@ 0xa4
 800f9e6:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	@ 0xa8
 800f9ea:	f9bd 0028 	ldrsh.w	r0, [sp, #40]	@ 0x28
 800f9ee:	9309      	str	r3, [sp, #36]	@ 0x24
 800f9f0:	fa1f f189 	uxth.w	r1, r9
 800f9f4:	eb01 0c03 	add.w	ip, r1, r3
 800f9f8:	fa1f fa8c 	uxth.w	sl, ip
 800f9fc:	f8bd c02c 	ldrh.w	ip, [sp, #44]	@ 0x2c
 800fa00:	f9bd e02a 	ldrsh.w	lr, [sp, #42]	@ 0x2a
 800fa04:	f9b4 20a6 	ldrsh.w	r2, [r4, #166]	@ 0xa6
 800fa08:	b283      	uxth	r3, r0
 800fa0a:	eb03 050c 	add.w	r5, r3, ip
 800fa0e:	b2ad      	uxth	r5, r5
 800fa10:	9505      	str	r5, [sp, #20]
 800fa12:	f9bd 5014 	ldrsh.w	r5, [sp, #20]
 800fa16:	9504      	str	r5, [sp, #16]
 800fa18:	4548      	cmp	r0, r9
 800fa1a:	f8bb 50ec 	ldrh.w	r5, [fp, #236]	@ 0xec
 800fa1e:	f340 8099 	ble.w	800fb54 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x408>
 800fa22:	1a5b      	subs	r3, r3, r1
 800fa24:	b29b      	uxth	r3, r3
 800fa26:	4596      	cmp	lr, r2
 800fa28:	fa0f f08a 	sxth.w	r0, sl
 800fa2c:	b21e      	sxth	r6, r3
 800fa2e:	dd2e      	ble.n	800fa8e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x342>
 800fa30:	9f02      	ldr	r7, [sp, #8]
 800fa32:	f8bd 402e 	ldrh.w	r4, [sp, #46]	@ 0x2e
 800fa36:	eb0b 08c7 	add.w	r8, fp, r7, lsl #3
 800fa3a:	9f04      	ldr	r7, [sp, #16]
 800fa3c:	1a3f      	subs	r7, r7, r0
 800fa3e:	f8b8 00b2 	ldrh.w	r0, [r8, #178]	@ 0xb2
 800fa42:	fa1f fe8e 	uxth.w	lr, lr
 800fa46:	b292      	uxth	r2, r2
 800fa48:	ebae 0102 	sub.w	r1, lr, r2
 800fa4c:	44a6      	add	lr, r4
 800fa4e:	4402      	add	r2, r0
 800fa50:	b289      	uxth	r1, r1
 800fa52:	fa0f fe8e 	sxth.w	lr, lr
 800fa56:	b212      	sxth	r2, r2
 800fa58:	b20d      	sxth	r5, r1
 800fa5a:	ebae 0202 	sub.w	r2, lr, r2
 800fa5e:	436f      	muls	r7, r5
 800fa60:	4372      	muls	r2, r6
 800fa62:	4297      	cmp	r7, r2
 800fa64:	db09      	blt.n	800fa7a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x32e>
 800fa66:	f8b8 20ac 	ldrh.w	r2, [r8, #172]	@ 0xac
 800fa6a:	f8a8 50b2 	strh.w	r5, [r8, #178]	@ 0xb2
 800fa6e:	f8ad 2028 	strh.w	r2, [sp, #40]	@ 0x28
 800fa72:	449c      	add	ip, r3
 800fa74:	f8ad c02c 	strh.w	ip, [sp, #44]	@ 0x2c
 800fa78:	e684      	b.n	800f784 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x38>
 800fa7a:	4421      	add	r1, r4
 800fa7c:	f8b8 30ae 	ldrh.w	r3, [r8, #174]	@ 0xae
 800fa80:	f8a8 60b0 	strh.w	r6, [r8, #176]	@ 0xb0
 800fa84:	f8ad 102e 	strh.w	r1, [sp, #46]	@ 0x2e
 800fa88:	f8ad 302a 	strh.w	r3, [sp, #42]	@ 0x2a
 800fa8c:	e67a      	b.n	800f784 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x38>
 800fa8e:	9f04      	ldr	r7, [sp, #16]
 800fa90:	42b8      	cmp	r0, r7
 800fa92:	da27      	bge.n	800fae4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x398>
 800fa94:	9902      	ldr	r1, [sp, #8]
 800fa96:	f8bd 502e 	ldrh.w	r5, [sp, #46]	@ 0x2e
 800fa9a:	eb0b 04c1 	add.w	r4, fp, r1, lsl #3
 800fa9e:	eb05 010e 	add.w	r1, r5, lr
 800faa2:	fa1f f881 	uxth.w	r8, r1
 800faa6:	f8b4 10b2 	ldrh.w	r1, [r4, #178]	@ 0xb2
 800faaa:	4411      	add	r1, r2
 800faac:	eba1 0108 	sub.w	r1, r1, r8
 800fab0:	b289      	uxth	r1, r1
 800fab2:	fa0f f988 	sxth.w	r9, r8
 800fab6:	eba2 020e 	sub.w	r2, r2, lr
 800faba:	fa0f f881 	sxth.w	r8, r1
 800fabe:	1a3f      	subs	r7, r7, r0
 800fac0:	4372      	muls	r2, r6
 800fac2:	fb08 f707 	mul.w	r7, r8, r7
 800fac6:	42ba      	cmp	r2, r7
 800fac8:	dc06      	bgt.n	800fad8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x38c>
 800faca:	f8a4 90ae 	strh.w	r9, [r4, #174]	@ 0xae
 800face:	f8a4 80b2 	strh.w	r8, [r4, #178]	@ 0xb2
 800fad2:	f8b4 20ac 	ldrh.w	r2, [r4, #172]	@ 0xac
 800fad6:	e7ca      	b.n	800fa6e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x322>
 800fad8:	f8a4 60b0 	strh.w	r6, [r4, #176]	@ 0xb0
 800fadc:	4429      	add	r1, r5
 800fade:	f8ad 102e 	strh.w	r1, [sp, #46]	@ 0x2e
 800fae2:	e64f      	b.n	800f784 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x38>
 800fae4:	9805      	ldr	r0, [sp, #20]
 800fae6:	ebaa 0000 	sub.w	r0, sl, r0
 800faea:	b280      	uxth	r0, r0
 800faec:	2d06      	cmp	r5, #6
 800faee:	fa0f fe80 	sxth.w	lr, r0
 800faf2:	d817      	bhi.n	800fb24 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3d8>
 800faf4:	9b04      	ldr	r3, [sp, #16]
 800faf6:	f8a4 30a4 	strh.w	r3, [r4, #164]	@ 0xa4
 800fafa:	1c6b      	adds	r3, r5, #1
 800fafc:	f9b4 10aa 	ldrsh.w	r1, [r4, #170]	@ 0xaa
 800fb00:	f8a4 e0a8 	strh.w	lr, [r4, #168]	@ 0xa8
 800fb04:	f8ab 30ec 	strh.w	r3, [fp, #236]	@ 0xec
 800fb08:	9b01      	ldr	r3, [sp, #4]
 800fb0a:	9801      	ldr	r0, [sp, #4]
 800fb0c:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 800fb10:	f820 9035 	strh.w	r9, [r0, r5, lsl #3]
 800fb14:	805a      	strh	r2, [r3, #2]
 800fb16:	809e      	strh	r6, [r3, #4]
 800fb18:	80d9      	strh	r1, [r3, #6]
 800fb1a:	9b02      	ldr	r3, [sp, #8]
 800fb1c:	3b01      	subs	r3, #1
 800fb1e:	9302      	str	r3, [sp, #8]
 800fb20:	3c08      	subs	r4, #8
 800fb22:	e747      	b.n	800f9b4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x268>
 800fb24:	9a02      	ldr	r2, [sp, #8]
 800fb26:	45b6      	cmp	lr, r6
 800fb28:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 800fb2c:	db0d      	blt.n	800fb4a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3fe>
 800fb2e:	449c      	add	ip, r3
 800fb30:	fa1f fc8c 	uxth.w	ip, ip
 800fb34:	445a      	add	r2, fp
 800fb36:	f8ad c02c 	strh.w	ip, [sp, #44]	@ 0x2c
 800fb3a:	448c      	add	ip, r1
 800fb3c:	f8ad 9028 	strh.w	r9, [sp, #40]	@ 0x28
 800fb40:	f8a2 c0ac 	strh.w	ip, [r2, #172]	@ 0xac
 800fb44:	f8a2 e0b0 	strh.w	lr, [r2, #176]	@ 0xb0
 800fb48:	e61c      	b.n	800f784 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x38>
 800fb4a:	445a      	add	r2, fp
 800fb4c:	4484      	add	ip, r0
 800fb4e:	f8a2 60b0 	strh.w	r6, [r2, #176]	@ 0xb0
 800fb52:	e78f      	b.n	800fa74 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x328>
 800fb54:	f8bd 602e 	ldrh.w	r6, [sp, #46]	@ 0x2e
 800fb58:	fa1f f18e 	uxth.w	r1, lr
 800fb5c:	eb01 0806 	add.w	r8, r1, r6
 800fb60:	b293      	uxth	r3, r2
 800fb62:	fa1f f888 	uxth.w	r8, r8
 800fb66:	9306      	str	r3, [sp, #24]
 800fb68:	fa0f f388 	sxth.w	r3, r8
 800fb6c:	9307      	str	r3, [sp, #28]
 800fb6e:	9f06      	ldr	r7, [sp, #24]
 800fb70:	f8b4 30aa 	ldrh.w	r3, [r4, #170]	@ 0xaa
 800fb74:	443b      	add	r3, r7
 800fb76:	b29b      	uxth	r3, r3
 800fb78:	4596      	cmp	lr, r2
 800fb7a:	9308      	str	r3, [sp, #32]
 800fb7c:	da24      	bge.n	800fbc8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x47c>
 800fb7e:	9905      	ldr	r1, [sp, #20]
 800fb80:	eba3 0308 	sub.w	r3, r3, r8
 800fb84:	ebaa 0401 	sub.w	r4, sl, r1
 800fb88:	b2a4      	uxth	r4, r4
 800fb8a:	b29b      	uxth	r3, r3
 800fb8c:	b225      	sxth	r5, r4
 800fb8e:	b219      	sxth	r1, r3
 800fb90:	eba2 020e 	sub.w	r2, r2, lr
 800fb94:	eba9 0000 	sub.w	r0, r9, r0
 800fb98:	436a      	muls	r2, r5
 800fb9a:	4348      	muls	r0, r1
 800fb9c:	4282      	cmp	r2, r0
 800fb9e:	9a02      	ldr	r2, [sp, #8]
 800fba0:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 800fba4:	445a      	add	r2, fp
 800fba6:	dc06      	bgt.n	800fbb6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x46a>
 800fba8:	9b07      	ldr	r3, [sp, #28]
 800fbaa:	f8a2 10b2 	strh.w	r1, [r2, #178]	@ 0xb2
 800fbae:	f8a2 30ae 	strh.w	r3, [r2, #174]	@ 0xae
 800fbb2:	44a4      	add	ip, r4
 800fbb4:	e75e      	b.n	800fa74 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x328>
 800fbb6:	9904      	ldr	r1, [sp, #16]
 800fbb8:	f8a2 50b0 	strh.w	r5, [r2, #176]	@ 0xb0
 800fbbc:	f8a2 10ac 	strh.w	r1, [r2, #172]	@ 0xac
 800fbc0:	4433      	add	r3, r6
 800fbc2:	f8ad 302e 	strh.w	r3, [sp, #46]	@ 0x2e
 800fbc6:	e5dd      	b.n	800f784 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x38>
 800fbc8:	9f06      	ldr	r7, [sp, #24]
 800fbca:	9b04      	ldr	r3, [sp, #16]
 800fbcc:	1bc9      	subs	r1, r1, r7
 800fbce:	fa0f f78a 	sxth.w	r7, sl
 800fbd2:	b289      	uxth	r1, r1
 800fbd4:	429f      	cmp	r7, r3
 800fbd6:	fa0f fe81 	sxth.w	lr, r1
 800fbda:	dd23      	ble.n	800fc24 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4d8>
 800fbdc:	9a05      	ldr	r2, [sp, #20]
 800fbde:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
 800fbe2:	9d07      	ldr	r5, [sp, #28]
 800fbe4:	ebaa 0202 	sub.w	r2, sl, r2
 800fbe8:	b292      	uxth	r2, r2
 800fbea:	eba5 0a03 	sub.w	sl, r5, r3
 800fbee:	b214      	sxth	r4, r2
 800fbf0:	eba9 0000 	sub.w	r0, r9, r0
 800fbf4:	9b02      	ldr	r3, [sp, #8]
 800fbf6:	fb0e f000 	mul.w	r0, lr, r0
 800fbfa:	fb04 fa0a 	mul.w	sl, r4, sl
 800fbfe:	00db      	lsls	r3, r3, #3
 800fc00:	4550      	cmp	r0, sl
 800fc02:	445b      	add	r3, fp
 800fc04:	db03      	blt.n	800fc0e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4c2>
 800fc06:	f8a3 e0b2 	strh.w	lr, [r3, #178]	@ 0xb2
 800fc0a:	4494      	add	ip, r2
 800fc0c:	e732      	b.n	800fa74 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x328>
 800fc0e:	9a04      	ldr	r2, [sp, #16]
 800fc10:	f8a3 20ac 	strh.w	r2, [r3, #172]	@ 0xac
 800fc14:	f8a3 40b0 	strh.w	r4, [r3, #176]	@ 0xb0
 800fc18:	f8b3 30ae 	ldrh.w	r3, [r3, #174]	@ 0xae
 800fc1c:	f8ad 302a 	strh.w	r3, [sp, #42]	@ 0x2a
 800fc20:	4431      	add	r1, r6
 800fc22:	e75c      	b.n	800fade <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x392>
 800fc24:	9b08      	ldr	r3, [sp, #32]
 800fc26:	eba3 0308 	sub.w	r3, r3, r8
 800fc2a:	b29b      	uxth	r3, r3
 800fc2c:	2d06      	cmp	r5, #6
 800fc2e:	b218      	sxth	r0, r3
 800fc30:	d813      	bhi.n	800fc5a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x50e>
 800fc32:	9b07      	ldr	r3, [sp, #28]
 800fc34:	f8a4 30a6 	strh.w	r3, [r4, #166]	@ 0xa6
 800fc38:	1c6b      	adds	r3, r5, #1
 800fc3a:	f8a4 00aa 	strh.w	r0, [r4, #170]	@ 0xaa
 800fc3e:	f8ab 30ec 	strh.w	r3, [fp, #236]	@ 0xec
 800fc42:	9b01      	ldr	r3, [sp, #4]
 800fc44:	9901      	ldr	r1, [sp, #4]
 800fc46:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 800fc4a:	f821 9035 	strh.w	r9, [r1, r5, lsl #3]
 800fc4e:	805a      	strh	r2, [r3, #2]
 800fc50:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 800fc52:	809a      	strh	r2, [r3, #4]
 800fc54:	f8a3 e006 	strh.w	lr, [r3, #6]
 800fc58:	e75f      	b.n	800fb1a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3ce>
 800fc5a:	9c02      	ldr	r4, [sp, #8]
 800fc5c:	4570      	cmp	r0, lr
 800fc5e:	ea4f 04c4 	mov.w	r4, r4, lsl #3
 800fc62:	db0d      	blt.n	800fc80 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x534>
 800fc64:	4431      	add	r1, r6
 800fc66:	9b06      	ldr	r3, [sp, #24]
 800fc68:	f8ad 202a 	strh.w	r2, [sp, #42]	@ 0x2a
 800fc6c:	b289      	uxth	r1, r1
 800fc6e:	445c      	add	r4, fp
 800fc70:	f8ad 102e 	strh.w	r1, [sp, #46]	@ 0x2e
 800fc74:	4419      	add	r1, r3
 800fc76:	f8a4 10ae 	strh.w	r1, [r4, #174]	@ 0xae
 800fc7a:	f8a4 00b2 	strh.w	r0, [r4, #178]	@ 0xb2
 800fc7e:	e581      	b.n	800f784 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x38>
 800fc80:	445c      	add	r4, fp
 800fc82:	f8a4 e0b2 	strh.w	lr, [r4, #178]	@ 0xb2
 800fc86:	e79b      	b.n	800fbc0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x474>
 800fc88:	f8bb 40ec 	ldrh.w	r4, [fp, #236]	@ 0xec
 800fc8c:	1e65      	subs	r5, r4, #1
 800fc8e:	b2ad      	uxth	r5, r5
 800fc90:	eb0b 04c4 	add.w	r4, fp, r4, lsl #3
 800fc94:	f64f 76ff 	movw	r6, #65535	@ 0xffff
 800fc98:	42b5      	cmp	r5, r6
 800fc9a:	d044      	beq.n	800fd26 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5da>
 800fc9c:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	@ 0x2a
 800fca0:	f9b4 00a6 	ldrsh.w	r0, [r4, #166]	@ 0xa6
 800fca4:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	@ 0x28
 800fca8:	f9b4 70a4 	ldrsh.w	r7, [r4, #164]	@ 0xa4
 800fcac:	4282      	cmp	r2, r0
 800fcae:	d11f      	bne.n	800fcf0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5a4>
 800fcb0:	f9bd c02e 	ldrsh.w	ip, [sp, #46]	@ 0x2e
 800fcb4:	f9b4 30aa 	ldrsh.w	r3, [r4, #170]	@ 0xaa
 800fcb8:	459c      	cmp	ip, r3
 800fcba:	d119      	bne.n	800fcf0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5a4>
 800fcbc:	f8b4 30a8 	ldrh.w	r3, [r4, #168]	@ 0xa8
 800fcc0:	f8bd 202c 	ldrh.w	r2, [sp, #44]	@ 0x2c
 800fcc4:	19d8      	adds	r0, r3, r7
 800fcc6:	b200      	sxth	r0, r0
 800fcc8:	4288      	cmp	r0, r1
 800fcca:	d109      	bne.n	800fce0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x594>
 800fccc:	f8ad 7028 	strh.w	r7, [sp, #40]	@ 0x28
 800fcd0:	4413      	add	r3, r2
 800fcd2:	f8ad 302c 	strh.w	r3, [sp, #44]	@ 0x2c
 800fcd6:	4629      	mov	r1, r5
 800fcd8:	9801      	ldr	r0, [sp, #4]
 800fcda:	f7ff fd23 	bl	800f724 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 800fcde:	e003      	b.n	800fce8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x59c>
 800fce0:	4411      	add	r1, r2
 800fce2:	b209      	sxth	r1, r1
 800fce4:	42b9      	cmp	r1, r7
 800fce6:	d0f3      	beq.n	800fcd0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x584>
 800fce8:	3d01      	subs	r5, #1
 800fcea:	b2ad      	uxth	r5, r5
 800fcec:	3c08      	subs	r4, #8
 800fcee:	e7d3      	b.n	800fc98 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x54c>
 800fcf0:	42b9      	cmp	r1, r7
 800fcf2:	d1f9      	bne.n	800fce8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x59c>
 800fcf4:	f9bd 102c 	ldrsh.w	r1, [sp, #44]	@ 0x2c
 800fcf8:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	@ 0xa8
 800fcfc:	4299      	cmp	r1, r3
 800fcfe:	d1f3      	bne.n	800fce8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x59c>
 800fd00:	f8b4 30aa 	ldrh.w	r3, [r4, #170]	@ 0xaa
 800fd04:	f8bd 102e 	ldrh.w	r1, [sp, #46]	@ 0x2e
 800fd08:	181f      	adds	r7, r3, r0
 800fd0a:	b23f      	sxth	r7, r7
 800fd0c:	42ba      	cmp	r2, r7
 800fd0e:	d105      	bne.n	800fd1c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5d0>
 800fd10:	f8ad 002a 	strh.w	r0, [sp, #42]	@ 0x2a
 800fd14:	440b      	add	r3, r1
 800fd16:	f8ad 302e 	strh.w	r3, [sp, #46]	@ 0x2e
 800fd1a:	e7dc      	b.n	800fcd6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58a>
 800fd1c:	440a      	add	r2, r1
 800fd1e:	b212      	sxth	r2, r2
 800fd20:	4290      	cmp	r0, r2
 800fd22:	d1e1      	bne.n	800fce8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x59c>
 800fd24:	e7f6      	b.n	800fd14 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5c8>
 800fd26:	f8bb 60ec 	ldrh.w	r6, [fp, #236]	@ 0xec
 800fd2a:	2e07      	cmp	r6, #7
 800fd2c:	ea4f 04c6 	mov.w	r4, r6, lsl #3
 800fd30:	d812      	bhi.n	800fd58 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x60c>
 800fd32:	1c75      	adds	r5, r6, #1
 800fd34:	f8ab 50ec 	strh.w	r5, [fp, #236]	@ 0xec
 800fd38:	9d01      	ldr	r5, [sp, #4]
 800fd3a:	f9bd 0028 	ldrsh.w	r0, [sp, #40]	@ 0x28
 800fd3e:	f9bd 102a 	ldrsh.w	r1, [sp, #42]	@ 0x2a
 800fd42:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	@ 0x2c
 800fd46:	f9bd 302e 	ldrsh.w	r3, [sp, #46]	@ 0x2e
 800fd4a:	f825 0036 	strh.w	r0, [r5, r6, lsl #3]
 800fd4e:	442c      	add	r4, r5
 800fd50:	8061      	strh	r1, [r4, #2]
 800fd52:	80a2      	strh	r2, [r4, #4]
 800fd54:	80e3      	strh	r3, [r4, #6]
 800fd56:	e57f      	b.n	800f858 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x10c>
 800fd58:	f10b 03ac 	add.w	r3, fp, #172	@ 0xac
 800fd5c:	3e01      	subs	r6, #1
 800fd5e:	445c      	add	r4, fp
 800fd60:	f06f 4a00 	mvn.w	sl, #2147483648	@ 0x80000000
 800fd64:	f04f 37ff 	mov.w	r7, #4294967295
 800fd68:	2500      	movs	r5, #0
 800fd6a:	9305      	str	r3, [sp, #20]
 800fd6c:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	@ 0xa8
 800fd70:	9302      	str	r3, [sp, #8]
 800fd72:	1e72      	subs	r2, r6, #1
 800fd74:	f9b4 30aa 	ldrsh.w	r3, [r4, #170]	@ 0xaa
 800fd78:	9304      	str	r3, [sp, #16]
 800fd7a:	4691      	mov	r9, r2
 800fd7c:	f104 03a4 	add.w	r3, r4, #164	@ 0xa4
 800fd80:	f1b9 3fff 	cmp.w	r9, #4294967295
 800fd84:	bf14      	ite	ne
 800fd86:	9905      	ldrne	r1, [sp, #20]
 800fd88:	f8dd e00c 	ldreq.w	lr, [sp, #12]
 800fd8c:	6818      	ldr	r0, [r3, #0]
 800fd8e:	9207      	str	r2, [sp, #28]
 800fd90:	bf18      	it	ne
 800fd92:	eb01 0ec9 	addne.w	lr, r1, r9, lsl #3
 800fd96:	f10d 0c30 	add.w	ip, sp, #48	@ 0x30
 800fd9a:	f8be 1006 	ldrh.w	r1, [lr, #6]
 800fd9e:	f8be 8004 	ldrh.w	r8, [lr, #4]
 800fda2:	9306      	str	r3, [sp, #24]
 800fda4:	fb18 f801 	smulbb	r8, r8, r1
 800fda8:	6859      	ldr	r1, [r3, #4]
 800fdaa:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 800fdae:	4671      	mov	r1, lr
 800fdb0:	a80c      	add	r0, sp, #48	@ 0x30
 800fdb2:	f7ff fb65 	bl	800f480 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 800fdb6:	f8bd 1036 	ldrh.w	r1, [sp, #54]	@ 0x36
 800fdba:	f8bd 0034 	ldrh.w	r0, [sp, #52]	@ 0x34
 800fdbe:	9b04      	ldr	r3, [sp, #16]
 800fdc0:	9a02      	ldr	r2, [sp, #8]
 800fdc2:	fb10 f001 	smulbb	r0, r0, r1
 800fdc6:	fb02 8803 	mla	r8, r2, r3, r8
 800fdca:	eba0 0108 	sub.w	r1, r0, r8
 800fdce:	f04f 0c08 	mov.w	ip, #8
 800fdd2:	fb90 f0fc 	sdiv	r0, r0, ip
 800fdd6:	4288      	cmp	r0, r1
 800fdd8:	dc20      	bgt.n	800fe1c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6d0>
 800fdda:	4551      	cmp	r1, sl
 800fddc:	e9dd 3206 	ldrd	r3, r2, [sp, #24]
 800fde0:	da03      	bge.n	800fdea <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x69e>
 800fde2:	b1d9      	cbz	r1, 800fe1c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6d0>
 800fde4:	468a      	mov	sl, r1
 800fde6:	464f      	mov	r7, r9
 800fde8:	4635      	mov	r5, r6
 800fdea:	f109 39ff 	add.w	r9, r9, #4294967295
 800fdee:	f119 0f02 	cmn.w	r9, #2
 800fdf2:	d1c5      	bne.n	800fd80 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x634>
 800fdf4:	4616      	mov	r6, r2
 800fdf6:	3201      	adds	r2, #1
 800fdf8:	f1a4 0408 	sub.w	r4, r4, #8
 800fdfc:	d1b6      	bne.n	800fd6c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x620>
 800fdfe:	9b01      	ldr	r3, [sp, #4]
 800fe00:	b2ac      	uxth	r4, r5
 800fe02:	00ed      	lsls	r5, r5, #3
 800fe04:	1958      	adds	r0, r3, r5
 800fe06:	1c7b      	adds	r3, r7, #1
 800fe08:	d10b      	bne.n	800fe22 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6d6>
 800fe0a:	4601      	mov	r1, r0
 800fe0c:	9803      	ldr	r0, [sp, #12]
 800fe0e:	f7ff fb37 	bl	800f480 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 800fe12:	4621      	mov	r1, r4
 800fe14:	9801      	ldr	r0, [sp, #4]
 800fe16:	f7ff fc85 	bl	800f724 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 800fe1a:	e4b3      	b.n	800f784 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x38>
 800fe1c:	464f      	mov	r7, r9
 800fe1e:	4635      	mov	r5, r6
 800fe20:	e7ed      	b.n	800fdfe <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6b2>
 800fe22:	9b01      	ldr	r3, [sp, #4]
 800fe24:	00ff      	lsls	r7, r7, #3
 800fe26:	19d9      	adds	r1, r3, r7
 800fe28:	f7ff fb2a 	bl	800f480 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 800fe2c:	9b03      	ldr	r3, [sp, #12]
 800fe2e:	cb03      	ldmia	r3!, {r0, r1}
 800fe30:	445f      	add	r7, fp
 800fe32:	445d      	add	r5, fp
 800fe34:	f8c7 00ac 	str.w	r0, [r7, #172]	@ 0xac
 800fe38:	f8c7 10b0 	str.w	r1, [r7, #176]	@ 0xb0
 800fe3c:	f855 0fac 	ldr.w	r0, [r5, #172]!
 800fe40:	9b03      	ldr	r3, [sp, #12]
 800fe42:	6869      	ldr	r1, [r5, #4]
 800fe44:	c303      	stmia	r3!, {r0, r1}
 800fe46:	e7e4      	b.n	800fe12 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6c6>

0800fe48 <_ZN8touchgfx11Application15drawCachedAreasEv>:
 800fe48:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800fe4c:	f500 7698 	add.w	r6, r0, #304	@ 0x130
 800fe50:	b0a1      	sub	sp, #132	@ 0x84
 800fe52:	4604      	mov	r4, r0
 800fe54:	4630      	mov	r0, r6
 800fe56:	f7fa fa8c 	bl	800a372 <_ZNK8touchgfx4Rect7isEmptyEv>
 800fe5a:	4605      	mov	r5, r0
 800fe5c:	b948      	cbnz	r0, 800fe72 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2a>
 800fe5e:	6823      	ldr	r3, [r4, #0]
 800fe60:	e896 0006 	ldmia.w	r6, {r1, r2}
 800fe64:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800fe66:	4620      	mov	r0, r4
 800fe68:	4798      	blx	r3
 800fe6a:	f8c4 5130 	str.w	r5, [r4, #304]	@ 0x130
 800fe6e:	f8c4 5134 	str.w	r5, [r4, #308]	@ 0x134
 800fe72:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	@ 0xec
 800fe76:	2b00      	cmp	r3, #0
 800fe78:	d149      	bne.n	800ff0e <_ZN8touchgfx11Application15drawCachedAreasEv+0xc6>
 800fe7a:	4bb1      	ldr	r3, [pc, #708]	@ (8010140 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2f8>)
 800fe7c:	681b      	ldr	r3, [r3, #0]
 800fe7e:	f893 7048 	ldrb.w	r7, [r3, #72]	@ 0x48
 800fe82:	1ebb      	subs	r3, r7, #2
 800fe84:	425f      	negs	r7, r3
 800fe86:	415f      	adcs	r7, r3
 800fe88:	4bae      	ldr	r3, [pc, #696]	@ (8010144 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2fc>)
 800fe8a:	681b      	ldr	r3, [r3, #0]
 800fe8c:	2b00      	cmp	r3, #0
 800fe8e:	d040      	beq.n	800ff12 <_ZN8touchgfx11Application15drawCachedAreasEv+0xca>
 800fe90:	4dad      	ldr	r5, [pc, #692]	@ (8010148 <_ZN8touchgfx11Application15drawCachedAreasEv+0x300>)
 800fe92:	4628      	mov	r0, r5
 800fe94:	f7fa fa6d 	bl	800a372 <_ZNK8touchgfx4Rect7isEmptyEv>
 800fe98:	4606      	mov	r6, r0
 800fe9a:	2800      	cmp	r0, #0
 800fe9c:	d139      	bne.n	800ff12 <_ZN8touchgfx11Application15drawCachedAreasEv+0xca>
 800fe9e:	4628      	mov	r0, r5
 800fea0:	f7ff f982 	bl	800f1a8 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 800fea4:	6823      	ldr	r3, [r4, #0]
 800fea6:	6829      	ldr	r1, [r5, #0]
 800fea8:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800feaa:	686a      	ldr	r2, [r5, #4]
 800feac:	4620      	mov	r0, r4
 800feae:	4798      	blx	r3
 800feb0:	802e      	strh	r6, [r5, #0]
 800feb2:	806e      	strh	r6, [r5, #2]
 800feb4:	80ae      	strh	r6, [r5, #4]
 800feb6:	80ee      	strh	r6, [r5, #6]
 800feb8:	af0f      	add	r7, sp, #60	@ 0x3c
 800feba:	4ea4      	ldr	r6, [pc, #656]	@ (801014c <_ZN8touchgfx11Application15drawCachedAreasEv+0x304>)
 800febc:	4638      	mov	r0, r7
 800febe:	f7ff fbd9 	bl	800f674 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 800fec2:	8835      	ldrh	r5, [r6, #0]
 800fec4:	f8b4 c0ec 	ldrh.w	ip, [r4, #236]	@ 0xec
 800fec8:	462b      	mov	r3, r5
 800feca:	f104 00ac 	add.w	r0, r4, #172	@ 0xac
 800fece:	4563      	cmp	r3, ip
 800fed0:	d224      	bcs.n	800ff1c <_ZN8touchgfx11Application15drawCachedAreasEv+0xd4>
 800fed2:	f8bd 107c 	ldrh.w	r1, [sp, #124]	@ 0x7c
 800fed6:	2907      	cmp	r1, #7
 800fed8:	d816      	bhi.n	800ff08 <_ZN8touchgfx11Application15drawCachedAreasEv+0xc0>
 800feda:	eb00 02c3 	add.w	r2, r0, r3, lsl #3
 800fede:	f930 9033 	ldrsh.w	r9, [r0, r3, lsl #3]
 800fee2:	f9b2 a002 	ldrsh.w	sl, [r2, #2]
 800fee6:	f9b2 8004 	ldrsh.w	r8, [r2, #4]
 800feea:	f9b2 e006 	ldrsh.w	lr, [r2, #6]
 800feee:	1c4a      	adds	r2, r1, #1
 800fef0:	f8ad 207c 	strh.w	r2, [sp, #124]	@ 0x7c
 800fef4:	eb07 02c1 	add.w	r2, r7, r1, lsl #3
 800fef8:	f827 9031 	strh.w	r9, [r7, r1, lsl #3]
 800fefc:	f8a2 a002 	strh.w	sl, [r2, #2]
 800ff00:	f8a2 8004 	strh.w	r8, [r2, #4]
 800ff04:	f8a2 e006 	strh.w	lr, [r2, #6]
 800ff08:	3301      	adds	r3, #1
 800ff0a:	b29b      	uxth	r3, r3
 800ff0c:	e7df      	b.n	800fece <_ZN8touchgfx11Application15drawCachedAreasEv+0x86>
 800ff0e:	2701      	movs	r7, #1
 800ff10:	e7ba      	b.n	800fe88 <_ZN8touchgfx11Application15drawCachedAreasEv+0x40>
 800ff12:	2f00      	cmp	r7, #0
 800ff14:	d1d0      	bne.n	800feb8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x70>
 800ff16:	b021      	add	sp, #132	@ 0x84
 800ff18:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800ff1c:	f8b4 312e 	ldrh.w	r3, [r4, #302]	@ 0x12e
 800ff20:	42ab      	cmp	r3, r5
 800ff22:	d90c      	bls.n	800ff3e <_ZN8touchgfx11Application15drawCachedAreasEv+0xf6>
 800ff24:	eb04 03c5 	add.w	r3, r4, r5, lsl #3
 800ff28:	6822      	ldr	r2, [r4, #0]
 800ff2a:	f8d3 10ee 	ldr.w	r1, [r3, #238]	@ 0xee
 800ff2e:	6c17      	ldr	r7, [r2, #64]	@ 0x40
 800ff30:	f8d3 20f2 	ldr.w	r2, [r3, #242]	@ 0xf2
 800ff34:	4620      	mov	r0, r4
 800ff36:	3501      	adds	r5, #1
 800ff38:	47b8      	blx	r7
 800ff3a:	b2ad      	uxth	r5, r5
 800ff3c:	e7ee      	b.n	800ff1c <_ZN8touchgfx11Application15drawCachedAreasEv+0xd4>
 800ff3e:	4d80      	ldr	r5, [pc, #512]	@ (8010140 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2f8>)
 800ff40:	6828      	ldr	r0, [r5, #0]
 800ff42:	f890 3048 	ldrb.w	r3, [r0, #72]	@ 0x48
 800ff46:	2b01      	cmp	r3, #1
 800ff48:	f040 813b 	bne.w	80101c2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x37a>
 800ff4c:	4a80      	ldr	r2, [pc, #512]	@ (8010150 <_ZN8touchgfx11Application15drawCachedAreasEv+0x308>)
 800ff4e:	8833      	ldrh	r3, [r6, #0]
 800ff50:	7812      	ldrb	r2, [r2, #0]
 800ff52:	f8b4 00ec 	ldrh.w	r0, [r4, #236]	@ 0xec
 800ff56:	2a01      	cmp	r2, #1
 800ff58:	d014      	beq.n	800ff84 <_ZN8touchgfx11Application15drawCachedAreasEv+0x13c>
 800ff5a:	eb04 02c3 	add.w	r2, r4, r3, lsl #3
 800ff5e:	32ae      	adds	r2, #174	@ 0xae
 800ff60:	f04f 0900 	mov.w	r9, #0
 800ff64:	4283      	cmp	r3, r0
 800ff66:	f102 0208 	add.w	r2, r2, #8
 800ff6a:	f280 8082 	bge.w	8010072 <_ZN8touchgfx11Application15drawCachedAreasEv+0x22a>
 800ff6e:	f832 1c04 	ldrh.w	r1, [r2, #-4]
 800ff72:	f832 7c08 	ldrh.w	r7, [r2, #-8]
 800ff76:	4439      	add	r1, r7
 800ff78:	b209      	sxth	r1, r1
 800ff7a:	4589      	cmp	r9, r1
 800ff7c:	bfb8      	it	lt
 800ff7e:	4689      	movlt	r9, r1
 800ff80:	3301      	adds	r3, #1
 800ff82:	e7ef      	b.n	800ff64 <_ZN8touchgfx11Application15drawCachedAreasEv+0x11c>
 800ff84:	4f73      	ldr	r7, [pc, #460]	@ (8010154 <_ZN8touchgfx11Application15drawCachedAreasEv+0x30c>)
 800ff86:	883a      	ldrh	r2, [r7, #0]
 800ff88:	4693      	mov	fp, r2
 800ff8a:	4283      	cmp	r3, r0
 800ff8c:	da08      	bge.n	800ffa0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x158>
 800ff8e:	eb04 01c3 	add.w	r1, r4, r3, lsl #3
 800ff92:	3301      	adds	r3, #1
 800ff94:	f9b1 10ac 	ldrsh.w	r1, [r1, #172]	@ 0xac
 800ff98:	458b      	cmp	fp, r1
 800ff9a:	bfa8      	it	ge
 800ff9c:	468b      	movge	fp, r1
 800ff9e:	e7f4      	b.n	800ff8a <_ZN8touchgfx11Application15drawCachedAreasEv+0x142>
 800ffa0:	2300      	movs	r3, #0
 800ffa2:	2a0f      	cmp	r2, #15
 800ffa4:	f8df 91b0 	ldr.w	r9, [pc, #432]	@ 8010158 <_ZN8touchgfx11Application15drawCachedAreasEv+0x310>
 800ffa8:	f8ad 202c 	strh.w	r2, [sp, #44]	@ 0x2c
 800ffac:	bf8c      	ite	hi
 800ffae:	ea4f 08d2 	movhi.w	r8, r2, lsr #3
 800ffb2:	f04f 0801 	movls.w	r8, #1
 800ffb6:	f8ad 302e 	strh.w	r3, [sp, #46]	@ 0x2e
 800ffba:	f8ad 3030 	strh.w	r3, [sp, #48]	@ 0x30
 800ffbe:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
 800ffc2:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
 800ffc6:	6828      	ldr	r0, [r5, #0]
 800ffc8:	455b      	cmp	r3, fp
 800ffca:	f340 80c7 	ble.w	801015c <_ZN8touchgfx11Application15drawCachedAreasEv+0x314>
 800ffce:	6803      	ldr	r3, [r0, #0]
 800ffd0:	f8b7 a000 	ldrh.w	sl, [r7]
 800ffd4:	f8d3 30a8 	ldr.w	r3, [r3, #168]	@ 0xa8
 800ffd8:	4798      	blx	r3
 800ffda:	f9bd c02c 	ldrsh.w	ip, [sp, #44]	@ 0x2c
 800ffde:	682b      	ldr	r3, [r5, #0]
 800ffe0:	ebaa 0000 	sub.w	r0, sl, r0
 800ffe4:	b280      	uxth	r0, r0
 800ffe6:	ebac 0e08 	sub.w	lr, ip, r8
 800ffea:	4570      	cmp	r0, lr
 800ffec:	f893 107c 	ldrb.w	r1, [r3, #124]	@ 0x7c
 800fff0:	f893 206a 	ldrb.w	r2, [r3, #106]	@ 0x6a
 800fff4:	dd05      	ble.n	8010002 <_ZN8touchgfx11Application15drawCachedAreasEv+0x1ba>
 800fff6:	4558      	cmp	r0, fp
 800fff8:	dd03      	ble.n	8010002 <_ZN8touchgfx11Application15drawCachedAreasEv+0x1ba>
 800fffa:	b901      	cbnz	r1, 800fffe <_ZN8touchgfx11Application15drawCachedAreasEv+0x1b6>
 800fffc:	b392      	cbz	r2, 8010064 <_ZN8touchgfx11Application15drawCachedAreasEv+0x21c>
 800fffe:	4658      	mov	r0, fp
 8010000:	e006      	b.n	8010010 <_ZN8touchgfx11Application15drawCachedAreasEv+0x1c8>
 8010002:	2900      	cmp	r1, #0
 8010004:	d1fb      	bne.n	800fffe <_ZN8touchgfx11Application15drawCachedAreasEv+0x1b6>
 8010006:	2a00      	cmp	r2, #0
 8010008:	d1f9      	bne.n	800fffe <_ZN8touchgfx11Application15drawCachedAreasEv+0x1b6>
 801000a:	4558      	cmp	r0, fp
 801000c:	bfb8      	it	lt
 801000e:	4658      	movlt	r0, fp
 8010010:	f9b9 3000 	ldrsh.w	r3, [r9]
 8010014:	f8ad 002c 	strh.w	r0, [sp, #44]	@ 0x2c
 8010018:	2200      	movs	r2, #0
 801001a:	ebac 0000 	sub.w	r0, ip, r0
 801001e:	f8b6 a000 	ldrh.w	sl, [r6]
 8010022:	f8ad 202e 	strh.w	r2, [sp, #46]	@ 0x2e
 8010026:	f8ad 0030 	strh.w	r0, [sp, #48]	@ 0x30
 801002a:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
 801002e:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	@ 0xec
 8010032:	4553      	cmp	r3, sl
 8010034:	ddc5      	ble.n	800ffc2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x17a>
 8010036:	eb04 02ca 	add.w	r2, r4, sl, lsl #3
 801003a:	ab0d      	add	r3, sp, #52	@ 0x34
 801003c:	f852 0fac 	ldr.w	r0, [r2, #172]!
 8010040:	6851      	ldr	r1, [r2, #4]
 8010042:	c303      	stmia	r3!, {r0, r1}
 8010044:	a80d      	add	r0, sp, #52	@ 0x34
 8010046:	a90b      	add	r1, sp, #44	@ 0x2c
 8010048:	f7fa f950 	bl	800a2ec <_ZN8touchgfx4RectaNERKS0_>
 801004c:	a80d      	add	r0, sp, #52	@ 0x34
 801004e:	f7fa f990 	bl	800a372 <_ZNK8touchgfx4Rect7isEmptyEv>
 8010052:	b920      	cbnz	r0, 801005e <_ZN8touchgfx11Application15drawCachedAreasEv+0x216>
 8010054:	6823      	ldr	r3, [r4, #0]
 8010056:	a90d      	add	r1, sp, #52	@ 0x34
 8010058:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 801005a:	4620      	mov	r0, r4
 801005c:	4798      	blx	r3
 801005e:	f10a 0a01 	add.w	sl, sl, #1
 8010062:	e7e4      	b.n	801002e <_ZN8touchgfx11Application15drawCachedAreasEv+0x1e6>
 8010064:	681a      	ldr	r2, [r3, #0]
 8010066:	2101      	movs	r1, #1
 8010068:	f8d2 20a4 	ldr.w	r2, [r2, #164]	@ 0xa4
 801006c:	4618      	mov	r0, r3
 801006e:	4790      	blx	r2
 8010070:	e7a7      	b.n	800ffc2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x17a>
 8010072:	4b39      	ldr	r3, [pc, #228]	@ (8010158 <_ZN8touchgfx11Application15drawCachedAreasEv+0x310>)
 8010074:	f8df 80dc 	ldr.w	r8, [pc, #220]	@ 8010154 <_ZN8touchgfx11Application15drawCachedAreasEv+0x30c>
 8010078:	881f      	ldrh	r7, [r3, #0]
 801007a:	2300      	movs	r3, #0
 801007c:	e9cd 330b 	strd	r3, r3, [sp, #44]	@ 0x2c
 8010080:	2f0f      	cmp	r7, #15
 8010082:	bf8c      	ite	hi
 8010084:	08ff      	lsrhi	r7, r7, #3
 8010086:	2701      	movls	r7, #1
 8010088:	f8bd 3032 	ldrh.w	r3, [sp, #50]	@ 0x32
 801008c:	f8bd 202e 	ldrh.w	r2, [sp, #46]	@ 0x2e
 8010090:	6828      	ldr	r0, [r5, #0]
 8010092:	4413      	add	r3, r2
 8010094:	b21b      	sxth	r3, r3
 8010096:	454b      	cmp	r3, r9
 8010098:	da60      	bge.n	801015c <_ZN8touchgfx11Application15drawCachedAreasEv+0x314>
 801009a:	6803      	ldr	r3, [r0, #0]
 801009c:	f8d3 30a8 	ldr.w	r3, [r3, #168]	@ 0xa8
 80100a0:	4798      	blx	r3
 80100a2:	f8bd e02e 	ldrh.w	lr, [sp, #46]	@ 0x2e
 80100a6:	f8bd 3032 	ldrh.w	r3, [sp, #50]	@ 0x32
 80100aa:	682a      	ldr	r2, [r5, #0]
 80100ac:	4473      	add	r3, lr
 80100ae:	b21b      	sxth	r3, r3
 80100b0:	eb03 0e07 	add.w	lr, r3, r7
 80100b4:	4570      	cmp	r0, lr
 80100b6:	f892 c07c 	ldrb.w	ip, [r2, #124]	@ 0x7c
 80100ba:	f892 106a 	ldrb.w	r1, [r2, #106]	@ 0x6a
 80100be:	da0d      	bge.n	80100dc <_ZN8touchgfx11Application15drawCachedAreasEv+0x294>
 80100c0:	4548      	cmp	r0, r9
 80100c2:	da0b      	bge.n	80100dc <_ZN8touchgfx11Application15drawCachedAreasEv+0x294>
 80100c4:	f1bc 0f00 	cmp.w	ip, #0
 80100c8:	d138      	bne.n	801013c <_ZN8touchgfx11Application15drawCachedAreasEv+0x2f4>
 80100ca:	2900      	cmp	r1, #0
 80100cc:	d136      	bne.n	801013c <_ZN8touchgfx11Application15drawCachedAreasEv+0x2f4>
 80100ce:	6813      	ldr	r3, [r2, #0]
 80100d0:	2101      	movs	r1, #1
 80100d2:	f8d3 30a4 	ldr.w	r3, [r3, #164]	@ 0xa4
 80100d6:	4610      	mov	r0, r2
 80100d8:	4798      	blx	r3
 80100da:	e7d5      	b.n	8010088 <_ZN8touchgfx11Application15drawCachedAreasEv+0x240>
 80100dc:	f1bc 0f00 	cmp.w	ip, #0
 80100e0:	d12c      	bne.n	801013c <_ZN8touchgfx11Application15drawCachedAreasEv+0x2f4>
 80100e2:	bb59      	cbnz	r1, 801013c <_ZN8touchgfx11Application15drawCachedAreasEv+0x2f4>
 80100e4:	4548      	cmp	r0, r9
 80100e6:	bfa8      	it	ge
 80100e8:	4648      	movge	r0, r9
 80100ea:	f9b8 2000 	ldrsh.w	r2, [r8]
 80100ee:	f8b6 a000 	ldrh.w	sl, [r6]
 80100f2:	f8ad 302e 	strh.w	r3, [sp, #46]	@ 0x2e
 80100f6:	2100      	movs	r1, #0
 80100f8:	1ac0      	subs	r0, r0, r3
 80100fa:	f8ad 102c 	strh.w	r1, [sp, #44]	@ 0x2c
 80100fe:	f8ad 2030 	strh.w	r2, [sp, #48]	@ 0x30
 8010102:	f8ad 0032 	strh.w	r0, [sp, #50]	@ 0x32
 8010106:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	@ 0xec
 801010a:	4553      	cmp	r3, sl
 801010c:	ddbc      	ble.n	8010088 <_ZN8touchgfx11Application15drawCachedAreasEv+0x240>
 801010e:	eb04 02ca 	add.w	r2, r4, sl, lsl #3
 8010112:	ab0d      	add	r3, sp, #52	@ 0x34
 8010114:	f852 0fac 	ldr.w	r0, [r2, #172]!
 8010118:	6851      	ldr	r1, [r2, #4]
 801011a:	c303      	stmia	r3!, {r0, r1}
 801011c:	a80d      	add	r0, sp, #52	@ 0x34
 801011e:	a90b      	add	r1, sp, #44	@ 0x2c
 8010120:	f7fa f8e4 	bl	800a2ec <_ZN8touchgfx4RectaNERKS0_>
 8010124:	a80d      	add	r0, sp, #52	@ 0x34
 8010126:	f7fa f924 	bl	800a372 <_ZNK8touchgfx4Rect7isEmptyEv>
 801012a:	b920      	cbnz	r0, 8010136 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ee>
 801012c:	6823      	ldr	r3, [r4, #0]
 801012e:	a90d      	add	r1, sp, #52	@ 0x34
 8010130:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8010132:	4620      	mov	r0, r4
 8010134:	4798      	blx	r3
 8010136:	f10a 0a01 	add.w	sl, sl, #1
 801013a:	e7e4      	b.n	8010106 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2be>
 801013c:	4648      	mov	r0, r9
 801013e:	e7d4      	b.n	80100ea <_ZN8touchgfx11Application15drawCachedAreasEv+0x2a2>
 8010140:	20013f2c 	.word	0x20013f2c
 8010144:	20013f6c 	.word	0x20013f6c
 8010148:	20013f78 	.word	0x20013f78
 801014c:	20000194 	.word	0x20000194
 8010150:	20013f22 	.word	0x20013f22
 8010154:	20013f1e 	.word	0x20013f1e
 8010158:	20013f20 	.word	0x20013f20
 801015c:	6828      	ldr	r0, [r5, #0]
 801015e:	6803      	ldr	r3, [r0, #0]
 8010160:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8010162:	4798      	blx	r3
 8010164:	4ba5      	ldr	r3, [pc, #660]	@ (80103fc <_ZN8touchgfx11Application15drawCachedAreasEv+0x5b4>)
 8010166:	781b      	ldrb	r3, [r3, #0]
 8010168:	2b00      	cmp	r3, #0
 801016a:	f43f aed4 	beq.w	800ff16 <_ZN8touchgfx11Application15drawCachedAreasEv+0xce>
 801016e:	2300      	movs	r3, #0
 8010170:	f8a4 312e 	strh.w	r3, [r4, #302]	@ 0x12e
 8010174:	4ba2      	ldr	r3, [pc, #648]	@ (8010400 <_ZN8touchgfx11Application15drawCachedAreasEv+0x5b8>)
 8010176:	f8bd 607c 	ldrh.w	r6, [sp, #124]	@ 0x7c
 801017a:	881b      	ldrh	r3, [r3, #0]
 801017c:	a80f      	add	r0, sp, #60	@ 0x3c
 801017e:	f104 05ee 	add.w	r5, r4, #238	@ 0xee
 8010182:	42b3      	cmp	r3, r6
 8010184:	f4bf aec7 	bcs.w	800ff16 <_ZN8touchgfx11Application15drawCachedAreasEv+0xce>
 8010188:	f8b4 112e 	ldrh.w	r1, [r4, #302]	@ 0x12e
 801018c:	2907      	cmp	r1, #7
 801018e:	d815      	bhi.n	80101bc <_ZN8touchgfx11Application15drawCachedAreasEv+0x374>
 8010190:	eb00 02c3 	add.w	r2, r0, r3, lsl #3
 8010194:	f930 8033 	ldrsh.w	r8, [r0, r3, lsl #3]
 8010198:	f9b2 e002 	ldrsh.w	lr, [r2, #2]
 801019c:	f9b2 c004 	ldrsh.w	ip, [r2, #4]
 80101a0:	f9b2 7006 	ldrsh.w	r7, [r2, #6]
 80101a4:	1c4a      	adds	r2, r1, #1
 80101a6:	f8a4 212e 	strh.w	r2, [r4, #302]	@ 0x12e
 80101aa:	eb05 02c1 	add.w	r2, r5, r1, lsl #3
 80101ae:	f825 8031 	strh.w	r8, [r5, r1, lsl #3]
 80101b2:	f8a2 e002 	strh.w	lr, [r2, #2]
 80101b6:	f8a2 c004 	strh.w	ip, [r2, #4]
 80101ba:	80d7      	strh	r7, [r2, #6]
 80101bc:	3301      	adds	r3, #1
 80101be:	b29b      	uxth	r3, r3
 80101c0:	e7df      	b.n	8010182 <_ZN8touchgfx11Application15drawCachedAreasEv+0x33a>
 80101c2:	2b02      	cmp	r3, #2
 80101c4:	f040 80d1 	bne.w	801036a <_ZN8touchgfx11Application15drawCachedAreasEv+0x522>
 80101c8:	f8b0 3080 	ldrh.w	r3, [r0, #128]	@ 0x80
 80101cc:	9308      	str	r3, [sp, #32]
 80101ce:	f8b0 307e 	ldrh.w	r3, [r0, #126]	@ 0x7e
 80101d2:	9307      	str	r3, [sp, #28]
 80101d4:	6803      	ldr	r3, [r0, #0]
 80101d6:	f890 b07d 	ldrb.w	fp, [r0, #125]	@ 0x7d
 80101da:	f8d3 30a8 	ldr.w	r3, [r3, #168]	@ 0xa8
 80101de:	4798      	blx	r3
 80101e0:	4b88      	ldr	r3, [pc, #544]	@ (8010404 <_ZN8touchgfx11Application15drawCachedAreasEv+0x5bc>)
 80101e2:	881b      	ldrh	r3, [r3, #0]
 80101e4:	9302      	str	r3, [sp, #8]
 80101e6:	4b88      	ldr	r3, [pc, #544]	@ (8010408 <_ZN8touchgfx11Application15drawCachedAreasEv+0x5c0>)
 80101e8:	881e      	ldrh	r6, [r3, #0]
 80101ea:	4b88      	ldr	r3, [pc, #544]	@ (801040c <_ZN8touchgfx11Application15drawCachedAreasEv+0x5c4>)
 80101ec:	781b      	ldrb	r3, [r3, #0]
 80101ee:	f10b 37ff 	add.w	r7, fp, #4294967295
 80101f2:	2b01      	cmp	r3, #1
 80101f4:	bf1c      	itt	ne
 80101f6:	9b02      	ldrne	r3, [sp, #8]
 80101f8:	9602      	strne	r6, [sp, #8]
 80101fa:	b2bf      	uxth	r7, r7
 80101fc:	fa0f f887 	sxth.w	r8, r7
 8010200:	4682      	mov	sl, r0
 8010202:	f04f 0000 	mov.w	r0, #0
 8010206:	bf18      	it	ne
 8010208:	461e      	movne	r6, r3
 801020a:	f7f0 fb25 	bl	8000858 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
 801020e:	fb96 fbfb 	sdiv	fp, r6, fp
 8010212:	fb0b f808 	mul.w	r8, fp, r8
 8010216:	45c2      	cmp	sl, r8
 8010218:	da0c      	bge.n	8010234 <_ZN8touchgfx11Application15drawCachedAreasEv+0x3ec>
 801021a:	6828      	ldr	r0, [r5, #0]
 801021c:	6803      	ldr	r3, [r0, #0]
 801021e:	210a      	movs	r1, #10
 8010220:	f8d3 309c 	ldr.w	r3, [r3, #156]	@ 0x9c
 8010224:	4798      	blx	r3
 8010226:	6828      	ldr	r0, [r5, #0]
 8010228:	6803      	ldr	r3, [r0, #0]
 801022a:	f8d3 30a8 	ldr.w	r3, [r3, #168]	@ 0xa8
 801022e:	4798      	blx	r3
 8010230:	4682      	mov	sl, r0
 8010232:	e7f0      	b.n	8010216 <_ZN8touchgfx11Application15drawCachedAreasEv+0x3ce>
 8010234:	2000      	movs	r0, #0
 8010236:	f7f0 fb39 	bl	80008ac <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
 801023a:	fa1f f38b 	uxth.w	r3, fp
 801023e:	fb17 f703 	smulbb	r7, r7, r3
 8010242:	9304      	str	r3, [sp, #16]
 8010244:	b2bb      	uxth	r3, r7
 8010246:	9305      	str	r3, [sp, #20]
 8010248:	f04f 0800 	mov.w	r8, #0
 801024c:	0973      	lsrs	r3, r6, #5
 801024e:	4f70      	ldr	r7, [pc, #448]	@ (8010410 <_ZN8touchgfx11Application15drawCachedAreasEv+0x5c8>)
 8010250:	9306      	str	r3, [sp, #24]
 8010252:	4645      	mov	r5, r8
 8010254:	42b5      	cmp	r5, r6
 8010256:	d085      	beq.n	8010164 <_ZN8touchgfx11Application15drawCachedAreasEv+0x31c>
 8010258:	6838      	ldr	r0, [r7, #0]
 801025a:	6803      	ldr	r3, [r0, #0]
 801025c:	f8d3 30a8 	ldr.w	r3, [r3, #168]	@ 0xa8
 8010260:	4798      	blx	r3
 8010262:	4582      	cmp	sl, r0
 8010264:	4681      	mov	r9, r0
 8010266:	d907      	bls.n	8010278 <_ZN8touchgfx11Application15drawCachedAreasEv+0x430>
 8010268:	f1b8 0f00 	cmp.w	r8, #0
 801026c:	d007      	beq.n	801027e <_ZN8touchgfx11Application15drawCachedAreasEv+0x436>
 801026e:	6838      	ldr	r0, [r7, #0]
 8010270:	6803      	ldr	r3, [r0, #0]
 8010272:	f8d3 30b8 	ldr.w	r3, [r3, #184]	@ 0xb8
 8010276:	e774      	b.n	8010162 <_ZN8touchgfx11Application15drawCachedAreasEv+0x31a>
 8010278:	f1b8 0f00 	cmp.w	r8, #0
 801027c:	d003      	beq.n	8010286 <_ZN8touchgfx11Application15drawCachedAreasEv+0x43e>
 801027e:	454d      	cmp	r5, r9
 8010280:	d3f5      	bcc.n	801026e <_ZN8touchgfx11Application15drawCachedAreasEv+0x426>
 8010282:	f04f 0801 	mov.w	r8, #1
 8010286:	9a04      	ldr	r2, [sp, #16]
 8010288:	fb95 f3fb 	sdiv	r3, r5, fp
 801028c:	9303      	str	r3, [sp, #12]
 801028e:	3301      	adds	r3, #1
 8010290:	fb13 f302 	smulbb	r3, r3, r2
 8010294:	b299      	uxth	r1, r3
 8010296:	f1b8 0f00 	cmp.w	r8, #0
 801029a:	d04e      	beq.n	801033a <_ZN8touchgfx11Application15drawCachedAreasEv+0x4f2>
 801029c:	eb09 030b 	add.w	r3, r9, fp
 80102a0:	42b3      	cmp	r3, r6
 80102a2:	bfa8      	it	ge
 80102a4:	4633      	movge	r3, r6
 80102a6:	9807      	ldr	r0, [sp, #28]
 80102a8:	b29b      	uxth	r3, r3
 80102aa:	428b      	cmp	r3, r1
 80102ac:	bf94      	ite	ls
 80102ae:	ebc5 0203 	rsbls	r2, r5, r3
 80102b2:	ebc5 0201 	rsbhi	r2, r5, r1
 80102b6:	4282      	cmp	r2, r0
 80102b8:	bfa8      	it	ge
 80102ba:	4602      	movge	r2, r0
 80102bc:	9808      	ldr	r0, [sp, #32]
 80102be:	fa1f fa82 	uxth.w	sl, r2
 80102c2:	4582      	cmp	sl, r0
 80102c4:	d205      	bcs.n	80102d2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x48a>
 80102c6:	fa15 f082 	uxtah	r0, r5, r2
 80102ca:	4286      	cmp	r6, r0
 80102cc:	d001      	beq.n	80102d2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x48a>
 80102ce:	4299      	cmp	r1, r3
 80102d0:	d240      	bcs.n	8010354 <_ZN8touchgfx11Application15drawCachedAreasEv+0x50c>
 80102d2:	2001      	movs	r0, #1
 80102d4:	9209      	str	r2, [sp, #36]	@ 0x24
 80102d6:	f7f0 fabf 	bl	8000858 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
 80102da:	6838      	ldr	r0, [r7, #0]
 80102dc:	f9bd 100c 	ldrsh.w	r1, [sp, #12]
 80102e0:	6803      	ldr	r3, [r0, #0]
 80102e2:	f8d3 3098 	ldr.w	r3, [r3, #152]	@ 0x98
 80102e6:	4798      	blx	r3
 80102e8:	4b48      	ldr	r3, [pc, #288]	@ (801040c <_ZN8touchgfx11Application15drawCachedAreasEv+0x5c4>)
 80102ea:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 80102ec:	781b      	ldrb	r3, [r3, #0]
 80102ee:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
 80102f2:	2b01      	cmp	r3, #1
 80102f4:	b212      	sxth	r2, r2
 80102f6:	f04f 0000 	mov.w	r0, #0
 80102fa:	d122      	bne.n	8010342 <_ZN8touchgfx11Application15drawCachedAreasEv+0x4fa>
 80102fc:	1b73      	subs	r3, r6, r5
 80102fe:	eba3 030a 	sub.w	r3, r3, sl
 8010302:	f8ad 3034 	strh.w	r3, [sp, #52]	@ 0x34
 8010306:	f8ad 0036 	strh.w	r0, [sp, #54]	@ 0x36
 801030a:	f8ad 2038 	strh.w	r2, [sp, #56]	@ 0x38
 801030e:	f8ad 103a 	strh.w	r1, [sp, #58]	@ 0x3a
 8010312:	6823      	ldr	r3, [r4, #0]
 8010314:	a90d      	add	r1, sp, #52	@ 0x34
 8010316:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8010318:	4620      	mov	r0, r4
 801031a:	4798      	blx	r3
 801031c:	6838      	ldr	r0, [r7, #0]
 801031e:	9b03      	ldr	r3, [sp, #12]
 8010320:	4259      	negs	r1, r3
 8010322:	6803      	ldr	r3, [r0, #0]
 8010324:	b209      	sxth	r1, r1
 8010326:	f8d3 3098 	ldr.w	r3, [r3, #152]	@ 0x98
 801032a:	4798      	blx	r3
 801032c:	4455      	add	r5, sl
 801032e:	2001      	movs	r0, #1
 8010330:	b2ad      	uxth	r5, r5
 8010332:	f7f0 fabb 	bl	80008ac <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
 8010336:	46ca      	mov	sl, r9
 8010338:	e78c      	b.n	8010254 <_ZN8touchgfx11Application15drawCachedAreasEv+0x40c>
 801033a:	9b05      	ldr	r3, [sp, #20]
 801033c:	eba9 0303 	sub.w	r3, r9, r3
 8010340:	e7b1      	b.n	80102a6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x45e>
 8010342:	f8ad 0034 	strh.w	r0, [sp, #52]	@ 0x34
 8010346:	f8ad 5036 	strh.w	r5, [sp, #54]	@ 0x36
 801034a:	f8ad 1038 	strh.w	r1, [sp, #56]	@ 0x38
 801034e:	f8ad 203a 	strh.w	r2, [sp, #58]	@ 0x3a
 8010352:	e7de      	b.n	8010312 <_ZN8touchgfx11Application15drawCachedAreasEv+0x4ca>
 8010354:	6838      	ldr	r0, [r7, #0]
 8010356:	6803      	ldr	r3, [r0, #0]
 8010358:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 801035a:	4798      	blx	r3
 801035c:	6838      	ldr	r0, [r7, #0]
 801035e:	9906      	ldr	r1, [sp, #24]
 8010360:	6803      	ldr	r3, [r0, #0]
 8010362:	f8d3 309c 	ldr.w	r3, [r3, #156]	@ 0x9c
 8010366:	4798      	blx	r3
 8010368:	e7e5      	b.n	8010336 <_ZN8touchgfx11Application15drawCachedAreasEv+0x4ee>
 801036a:	2b03      	cmp	r3, #3
 801036c:	f040 8130 	bne.w	80105d0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x788>
 8010370:	4b26      	ldr	r3, [pc, #152]	@ (801040c <_ZN8touchgfx11Application15drawCachedAreasEv+0x5c4>)
 8010372:	f9b0 9082 	ldrsh.w	r9, [r0, #130]	@ 0x82
 8010376:	781b      	ldrb	r3, [r3, #0]
 8010378:	2b01      	cmp	r3, #1
 801037a:	f104 0aac 	add.w	sl, r4, #172	@ 0xac
 801037e:	f000 8093 	beq.w	80104a8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x660>
 8010382:	8832      	ldrh	r2, [r6, #0]
 8010384:	f8b4 10ec 	ldrh.w	r1, [r4, #236]	@ 0xec
 8010388:	3201      	adds	r2, #1
 801038a:	b292      	uxth	r2, r2
 801038c:	2900      	cmp	r1, #0
 801038e:	f43f aee9 	beq.w	8010164 <_ZN8touchgfx11Application15drawCachedAreasEv+0x31c>
 8010392:	f8b4 50b2 	ldrh.w	r5, [r4, #178]	@ 0xb2
 8010396:	f8b4 30ae 	ldrh.w	r3, [r4, #174]	@ 0xae
 801039a:	441d      	add	r5, r3
 801039c:	b22d      	sxth	r5, r5
 801039e:	4694      	mov	ip, r2
 80103a0:	f04f 0800 	mov.w	r8, #0
 80103a4:	fa1f f38c 	uxth.w	r3, ip
 80103a8:	4299      	cmp	r1, r3
 80103aa:	ea4f 07c8 	mov.w	r7, r8, lsl #3
 80103ae:	f240 80ba 	bls.w	8010526 <_ZN8touchgfx11Application15drawCachedAreasEv+0x6de>
 80103b2:	4427      	add	r7, r4
 80103b4:	eb04 0ecc 	add.w	lr, r4, ip, lsl #3
 80103b8:	f9b7 30ae 	ldrsh.w	r3, [r7, #174]	@ 0xae
 80103bc:	f9be 00ae 	ldrsh.w	r0, [lr, #174]	@ 0xae
 80103c0:	4283      	cmp	r3, r0
 80103c2:	f340 809c 	ble.w	80104fe <_ZN8touchgfx11Application15drawCachedAreasEv+0x6b6>
 80103c6:	f8be 50b2 	ldrh.w	r5, [lr, #178]	@ 0xb2
 80103ca:	4405      	add	r5, r0
 80103cc:	b22d      	sxth	r5, r5
 80103ce:	429d      	cmp	r5, r3
 80103d0:	bfa8      	it	ge
 80103d2:	461d      	movge	r5, r3
 80103d4:	46e0      	mov	r8, ip
 80103d6:	f10c 0c01 	add.w	ip, ip, #1
 80103da:	e7e3      	b.n	80103a4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x55c>
 80103dc:	d10a      	bne.n	80103f4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x5ac>
 80103de:	f9b7 00b2 	ldrsh.w	r0, [r7, #178]	@ 0xb2
 80103e2:	f9be 10b2 	ldrsh.w	r1, [lr, #178]	@ 0xb2
 80103e6:	4562      	cmp	r2, ip
 80103e8:	bfb8      	it	lt
 80103ea:	4662      	movlt	r2, ip
 80103ec:	4288      	cmp	r0, r1
 80103ee:	bfb8      	it	lt
 80103f0:	4698      	movlt	r8, r3
 80103f2:	e082      	b.n	80104fa <_ZN8touchgfx11Application15drawCachedAreasEv+0x6b2>
 80103f4:	428a      	cmp	r2, r1
 80103f6:	bfb8      	it	lt
 80103f8:	460a      	movlt	r2, r1
 80103fa:	e07e      	b.n	80104fa <_ZN8touchgfx11Application15drawCachedAreasEv+0x6b2>
 80103fc:	20013f28 	.word	0x20013f28
 8010400:	20000194 	.word	0x20000194
 8010404:	20013f20 	.word	0x20013f20
 8010408:	20013f1e 	.word	0x20013f1e
 801040c:	20013f22 	.word	0x20013f22
 8010410:	20013f2c 	.word	0x20013f2c
 8010414:	19e1      	adds	r1, r4, r7
 8010416:	ab0d      	add	r3, sp, #52	@ 0x34
 8010418:	f851 0fac 	ldr.w	r0, [r1, #172]!
 801041c:	6849      	ldr	r1, [r1, #4]
 801041e:	c303      	stmia	r3!, {r0, r1}
 8010420:	f9bd 3038 	ldrsh.w	r3, [sp, #56]	@ 0x38
 8010424:	f8bd 1034 	ldrh.w	r1, [sp, #52]	@ 0x34
 8010428:	454b      	cmp	r3, r9
 801042a:	bfb8      	it	lt
 801042c:	f9bd 2034 	ldrshlt.w	r2, [sp, #52]	@ 0x34
 8010430:	f8ad 2034 	strh.w	r2, [sp, #52]	@ 0x34
 8010434:	440b      	add	r3, r1
 8010436:	1a9b      	subs	r3, r3, r2
 8010438:	a80d      	add	r0, sp, #52	@ 0x34
 801043a:	f8ad 3038 	strh.w	r3, [sp, #56]	@ 0x38
 801043e:	f7fe fecd 	bl	800f1dc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8010442:	a80d      	add	r0, sp, #52	@ 0x34
 8010444:	f7f9 ff95 	bl	800a372 <_ZNK8touchgfx4Rect7isEmptyEv>
 8010448:	bb70      	cbnz	r0, 80104a8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x660>
 801044a:	f9bd c03a 	ldrsh.w	ip, [sp, #58]	@ 0x3a
 801044e:	6828      	ldr	r0, [r5, #0]
 8010450:	f8bd 3038 	ldrh.w	r3, [sp, #56]	@ 0x38
 8010454:	f8d0 e000 	ldr.w	lr, [r0]
 8010458:	f8bd 2036 	ldrh.w	r2, [sp, #54]	@ 0x36
 801045c:	f8bd 1034 	ldrh.w	r1, [sp, #52]	@ 0x34
 8010460:	45cc      	cmp	ip, r9
 8010462:	bfd4      	ite	le
 8010464:	fa1f fc8c 	uxthle.w	ip, ip
 8010468:	fa1f fc89 	uxthgt.w	ip, r9
 801046c:	f8cd c000 	str.w	ip, [sp]
 8010470:	f8de b094 	ldr.w	fp, [lr, #148]	@ 0x94
 8010474:	47d8      	blx	fp
 8010476:	4683      	mov	fp, r0
 8010478:	f8ad 003a 	strh.w	r0, [sp, #58]	@ 0x3a
 801047c:	a80d      	add	r0, sp, #52	@ 0x34
 801047e:	f7fe fe93 	bl	800f1a8 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 8010482:	6823      	ldr	r3, [r4, #0]
 8010484:	4427      	add	r7, r4
 8010486:	4620      	mov	r0, r4
 8010488:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 801048a:	a90d      	add	r1, sp, #52	@ 0x34
 801048c:	4798      	blx	r3
 801048e:	f8b7 00b0 	ldrh.w	r0, [r7, #176]	@ 0xb0
 8010492:	eba0 000b 	sub.w	r0, r0, fp
 8010496:	b200      	sxth	r0, r0
 8010498:	f8a7 00b0 	strh.w	r0, [r7, #176]	@ 0xb0
 801049c:	b920      	cbnz	r0, 80104a8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x660>
 801049e:	fa1f f188 	uxth.w	r1, r8
 80104a2:	4650      	mov	r0, sl
 80104a4:	f7ff f93e 	bl	800f724 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 80104a8:	f8b4 b0ec 	ldrh.w	fp, [r4, #236]	@ 0xec
 80104ac:	f1bb 0f00 	cmp.w	fp, #0
 80104b0:	f43f ae58 	beq.w	8010164 <_ZN8touchgfx11Application15drawCachedAreasEv+0x31c>
 80104b4:	8833      	ldrh	r3, [r6, #0]
 80104b6:	f9b4 20ac 	ldrsh.w	r2, [r4, #172]	@ 0xac
 80104ba:	3301      	adds	r3, #1
 80104bc:	b29b      	uxth	r3, r3
 80104be:	f04f 0800 	mov.w	r8, #0
 80104c2:	b299      	uxth	r1, r3
 80104c4:	458b      	cmp	fp, r1
 80104c6:	ea4f 07c8 	mov.w	r7, r8, lsl #3
 80104ca:	d9a3      	bls.n	8010414 <_ZN8touchgfx11Application15drawCachedAreasEv+0x5cc>
 80104cc:	4427      	add	r7, r4
 80104ce:	eb04 0ec3 	add.w	lr, r4, r3, lsl #3
 80104d2:	f8b7 10b0 	ldrh.w	r1, [r7, #176]	@ 0xb0
 80104d6:	f8b7 00ac 	ldrh.w	r0, [r7, #172]	@ 0xac
 80104da:	f9be c0ac 	ldrsh.w	ip, [lr, #172]	@ 0xac
 80104de:	4408      	add	r0, r1
 80104e0:	f8be 10b0 	ldrh.w	r1, [lr, #176]	@ 0xb0
 80104e4:	4461      	add	r1, ip
 80104e6:	b200      	sxth	r0, r0
 80104e8:	b209      	sxth	r1, r1
 80104ea:	4288      	cmp	r0, r1
 80104ec:	f6bf af76 	bge.w	80103dc <_ZN8touchgfx11Application15drawCachedAreasEv+0x594>
 80104f0:	4584      	cmp	ip, r0
 80104f2:	4662      	mov	r2, ip
 80104f4:	4698      	mov	r8, r3
 80104f6:	bfb8      	it	lt
 80104f8:	4602      	movlt	r2, r0
 80104fa:	3301      	adds	r3, #1
 80104fc:	e7e1      	b.n	80104c2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x67a>
 80104fe:	d10e      	bne.n	801051e <_ZN8touchgfx11Application15drawCachedAreasEv+0x6d6>
 8010500:	f9be 00b0 	ldrsh.w	r0, [lr, #176]	@ 0xb0
 8010504:	f8be e0b2 	ldrh.w	lr, [lr, #178]	@ 0xb2
 8010508:	f9b7 70b0 	ldrsh.w	r7, [r7, #176]	@ 0xb0
 801050c:	4473      	add	r3, lr
 801050e:	b21b      	sxth	r3, r3
 8010510:	429d      	cmp	r5, r3
 8010512:	bfa8      	it	ge
 8010514:	461d      	movge	r5, r3
 8010516:	4287      	cmp	r7, r0
 8010518:	bfb8      	it	lt
 801051a:	46e0      	movlt	r8, ip
 801051c:	e75b      	b.n	80103d6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x58e>
 801051e:	4285      	cmp	r5, r0
 8010520:	bfa8      	it	ge
 8010522:	4605      	movge	r5, r0
 8010524:	e757      	b.n	80103d6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x58e>
 8010526:	eb0a 0007 	add.w	r0, sl, r7
 801052a:	4427      	add	r7, r4
 801052c:	e9cd 2102 	strd	r2, r1, [sp, #8]
 8010530:	f9b7 b0b2 	ldrsh.w	fp, [r7, #178]	@ 0xb2
 8010534:	45cb      	cmp	fp, r9
 8010536:	bfbe      	ittt	lt
 8010538:	f8b7 50ae 	ldrhlt.w	r5, [r7, #174]	@ 0xae
 801053c:	445d      	addlt	r5, fp
 801053e:	b22d      	sxthlt	r5, r5
 8010540:	f7f9 ff17 	bl	800a372 <_ZNK8touchgfx4Rect7isEmptyEv>
 8010544:	e9dd 2102 	ldrd	r2, r1, [sp, #8]
 8010548:	2800      	cmp	r0, #0
 801054a:	f47f af1f 	bne.w	801038c <_ZN8touchgfx11Application15drawCachedAreasEv+0x544>
 801054e:	f9b7 20ae 	ldrsh.w	r2, [r7, #174]	@ 0xae
 8010552:	f8ad 003a 	strh.w	r0, [sp, #58]	@ 0x3a
 8010556:	482b      	ldr	r0, [pc, #172]	@ (8010604 <_ZN8touchgfx11Application15drawCachedAreasEv+0x7bc>)
 8010558:	f9b7 10ac 	ldrsh.w	r1, [r7, #172]	@ 0xac
 801055c:	f9b7 30b0 	ldrsh.w	r3, [r7, #176]	@ 0xb0
 8010560:	6800      	ldr	r0, [r0, #0]
 8010562:	f8ad 1034 	strh.w	r1, [sp, #52]	@ 0x34
 8010566:	1aad      	subs	r5, r5, r2
 8010568:	454d      	cmp	r5, r9
 801056a:	f8ad 2036 	strh.w	r2, [sp, #54]	@ 0x36
 801056e:	f8ad 3038 	strh.w	r3, [sp, #56]	@ 0x38
 8010572:	bfa8      	it	ge
 8010574:	464d      	movge	r5, r9
 8010576:	f8d0 c000 	ldr.w	ip, [r0]
 801057a:	b2ad      	uxth	r5, r5
 801057c:	fa1f fb8b 	uxth.w	fp, fp
 8010580:	455d      	cmp	r5, fp
 8010582:	bf94      	ite	ls
 8010584:	9500      	strls	r5, [sp, #0]
 8010586:	f8cd b000 	strhi.w	fp, [sp]
 801058a:	b292      	uxth	r2, r2
 801058c:	f8dc 5094 	ldr.w	r5, [ip, #148]	@ 0x94
 8010590:	b29b      	uxth	r3, r3
 8010592:	b289      	uxth	r1, r1
 8010594:	47a8      	blx	r5
 8010596:	6823      	ldr	r3, [r4, #0]
 8010598:	f8ad 003a 	strh.w	r0, [sp, #58]	@ 0x3a
 801059c:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 801059e:	a90d      	add	r1, sp, #52	@ 0x34
 80105a0:	4620      	mov	r0, r4
 80105a2:	4798      	blx	r3
 80105a4:	f8bd 103a 	ldrh.w	r1, [sp, #58]	@ 0x3a
 80105a8:	f8b7 30b2 	ldrh.w	r3, [r7, #178]	@ 0xb2
 80105ac:	f8b7 20ae 	ldrh.w	r2, [r7, #174]	@ 0xae
 80105b0:	1a5b      	subs	r3, r3, r1
 80105b2:	440a      	add	r2, r1
 80105b4:	b21b      	sxth	r3, r3
 80105b6:	f8a7 20ae 	strh.w	r2, [r7, #174]	@ 0xae
 80105ba:	f8a7 30b2 	strh.w	r3, [r7, #178]	@ 0xb2
 80105be:	2b00      	cmp	r3, #0
 80105c0:	f47f aedf 	bne.w	8010382 <_ZN8touchgfx11Application15drawCachedAreasEv+0x53a>
 80105c4:	fa1f f188 	uxth.w	r1, r8
 80105c8:	4650      	mov	r0, sl
 80105ca:	f7ff f8ab 	bl	800f724 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 80105ce:	e6d8      	b.n	8010382 <_ZN8touchgfx11Application15drawCachedAreasEv+0x53a>
 80105d0:	8835      	ldrh	r5, [r6, #0]
 80105d2:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	@ 0xec
 80105d6:	42ab      	cmp	r3, r5
 80105d8:	f67f adc4 	bls.w	8010164 <_ZN8touchgfx11Application15drawCachedAreasEv+0x31c>
 80105dc:	eb04 02c5 	add.w	r2, r4, r5, lsl #3
 80105e0:	ab0d      	add	r3, sp, #52	@ 0x34
 80105e2:	f852 0fac 	ldr.w	r0, [r2, #172]!
 80105e6:	6851      	ldr	r1, [r2, #4]
 80105e8:	c303      	stmia	r3!, {r0, r1}
 80105ea:	a80d      	add	r0, sp, #52	@ 0x34
 80105ec:	f7f9 fec1 	bl	800a372 <_ZNK8touchgfx4Rect7isEmptyEv>
 80105f0:	b920      	cbnz	r0, 80105fc <_ZN8touchgfx11Application15drawCachedAreasEv+0x7b4>
 80105f2:	6823      	ldr	r3, [r4, #0]
 80105f4:	a90d      	add	r1, sp, #52	@ 0x34
 80105f6:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 80105f8:	4620      	mov	r0, r4
 80105fa:	4798      	blx	r3
 80105fc:	3501      	adds	r5, #1
 80105fe:	b2ad      	uxth	r5, r5
 8010600:	e7e7      	b.n	80105d2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x78a>
 8010602:	bf00      	nop
 8010604:	20013f2c 	.word	0x20013f2c

08010608 <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE>:
 8010608:	4b03      	ldr	r3, [pc, #12]	@ (8010618 <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE+0x10>)
 801060a:	2200      	movs	r2, #0
 801060c:	801a      	strh	r2, [r3, #0]
 801060e:	805a      	strh	r2, [r3, #2]
 8010610:	809a      	strh	r2, [r3, #4]
 8010612:	80da      	strh	r2, [r3, #6]
 8010614:	4770      	bx	lr
 8010616:	bf00      	nop
 8010618:	20013f78 	.word	0x20013f78

0801061c <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>:
 801061c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010620:	4606      	mov	r6, r0
 8010622:	b09d      	sub	sp, #116	@ 0x74
 8010624:	a803      	add	r0, sp, #12
 8010626:	4614      	mov	r4, r2
 8010628:	468a      	mov	sl, r1
 801062a:	461d      	mov	r5, r3
 801062c:	f001 f9b0 	bl	8011990 <_ZN8touchgfx12TextProviderC1Ev>
 8010630:	6833      	ldr	r3, [r6, #0]
 8010632:	4630      	mov	r0, r6
 8010634:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8010636:	4798      	blx	r3
 8010638:	6833      	ldr	r3, [r6, #0]
 801063a:	4607      	mov	r7, r0
 801063c:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 801063e:	4630      	mov	r0, r6
 8010640:	4798      	blx	r3
 8010642:	462a      	mov	r2, r5
 8010644:	9000      	str	r0, [sp, #0]
 8010646:	4621      	mov	r1, r4
 8010648:	463b      	mov	r3, r7
 801064a:	a803      	add	r0, sp, #12
 801064c:	f001 f9f3 	bl	8011a36 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8010650:	2500      	movs	r5, #0
 8010652:	462c      	mov	r4, r5
 8010654:	46a9      	mov	r9, r5
 8010656:	46a8      	mov	r8, r5
 8010658:	f242 0b0b 	movw	fp, #8203	@ 0x200b
 801065c:	2300      	movs	r3, #0
 801065e:	9302      	str	r3, [sp, #8]
 8010660:	f64f 63ff 	movw	r3, #65279	@ 0xfeff
 8010664:	429c      	cmp	r4, r3
 8010666:	d002      	beq.n	801066e <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x52>
 8010668:	455c      	cmp	r4, fp
 801066a:	bf18      	it	ne
 801066c:	4625      	movne	r5, r4
 801066e:	ab02      	add	r3, sp, #8
 8010670:	4632      	mov	r2, r6
 8010672:	4651      	mov	r1, sl
 8010674:	a803      	add	r0, sp, #12
 8010676:	f001 fcf9 	bl	801206c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 801067a:	4604      	mov	r4, r0
 801067c:	b108      	cbz	r0, 8010682 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x66>
 801067e:	280a      	cmp	r0, #10
 8010680:	d10a      	bne.n	8010698 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x7c>
 8010682:	45c1      	cmp	r9, r8
 8010684:	bf38      	it	cc
 8010686:	46c1      	movcc	r9, r8
 8010688:	f04f 0800 	mov.w	r8, #0
 801068c:	2c00      	cmp	r4, #0
 801068e:	d1e5      	bne.n	801065c <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
 8010690:	4648      	mov	r0, r9
 8010692:	b01d      	add	sp, #116	@ 0x74
 8010694:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8010698:	9a02      	ldr	r2, [sp, #8]
 801069a:	2a00      	cmp	r2, #0
 801069c:	d0de      	beq.n	801065c <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
 801069e:	7b57      	ldrb	r7, [r2, #13]
 80106a0:	6833      	ldr	r3, [r6, #0]
 80106a2:	8894      	ldrh	r4, [r2, #4]
 80106a4:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80106a6:	007f      	lsls	r7, r7, #1
 80106a8:	f407 7080 	and.w	r0, r7, #256	@ 0x100
 80106ac:	7a97      	ldrb	r7, [r2, #10]
 80106ae:	4629      	mov	r1, r5
 80106b0:	4307      	orrs	r7, r0
 80106b2:	4630      	mov	r0, r6
 80106b4:	4798      	blx	r3
 80106b6:	4438      	add	r0, r7
 80106b8:	4480      	add	r8, r0
 80106ba:	fa1f f888 	uxth.w	r8, r8
 80106be:	e7e5      	b.n	801068c <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x70>

080106c0 <_ZNK8touchgfx4Font12getCharWidthEt>:
 80106c0:	b508      	push	{r3, lr}
 80106c2:	6803      	ldr	r3, [r0, #0]
 80106c4:	68db      	ldr	r3, [r3, #12]
 80106c6:	4798      	blx	r3
 80106c8:	b128      	cbz	r0, 80106d6 <_ZNK8touchgfx4Font12getCharWidthEt+0x16>
 80106ca:	7b43      	ldrb	r3, [r0, #13]
 80106cc:	7a80      	ldrb	r0, [r0, #10]
 80106ce:	005b      	lsls	r3, r3, #1
 80106d0:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 80106d4:	4318      	orrs	r0, r3
 80106d6:	bd08      	pop	{r3, pc}

080106d8 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz>:
 80106d8:	b40e      	push	{r1, r2, r3}
 80106da:	b5f0      	push	{r4, r5, r6, r7, lr}
 80106dc:	b09e      	sub	sp, #120	@ 0x78
 80106de:	ab23      	add	r3, sp, #140	@ 0x8c
 80106e0:	4605      	mov	r5, r0
 80106e2:	f853 4b04 	ldr.w	r4, [r3], #4
 80106e6:	9303      	str	r3, [sp, #12]
 80106e8:	a805      	add	r0, sp, #20
 80106ea:	f001 f951 	bl	8011990 <_ZN8touchgfx12TextProviderC1Ev>
 80106ee:	682b      	ldr	r3, [r5, #0]
 80106f0:	4628      	mov	r0, r5
 80106f2:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 80106f4:	4798      	blx	r3
 80106f6:	682b      	ldr	r3, [r5, #0]
 80106f8:	4606      	mov	r6, r0
 80106fa:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 80106fc:	4628      	mov	r0, r5
 80106fe:	4798      	blx	r3
 8010700:	4633      	mov	r3, r6
 8010702:	ae1e      	add	r6, sp, #120	@ 0x78
 8010704:	4621      	mov	r1, r4
 8010706:	9000      	str	r0, [sp, #0]
 8010708:	9a03      	ldr	r2, [sp, #12]
 801070a:	2400      	movs	r4, #0
 801070c:	a805      	add	r0, sp, #20
 801070e:	f001 f992 	bl	8011a36 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8010712:	f846 4d68 	str.w	r4, [r6, #-104]!
 8010716:	462a      	mov	r2, r5
 8010718:	4633      	mov	r3, r6
 801071a:	4621      	mov	r1, r4
 801071c:	a805      	add	r0, sp, #20
 801071e:	f001 fca5 	bl	801206c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8010722:	b1f0      	cbz	r0, 8010762 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x8a>
 8010724:	280a      	cmp	r0, #10
 8010726:	d018      	beq.n	801075a <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x82>
 8010728:	9f04      	ldr	r7, [sp, #16]
 801072a:	b1b7      	cbz	r7, 801075a <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x82>
 801072c:	7b78      	ldrb	r0, [r7, #13]
 801072e:	7a3b      	ldrb	r3, [r7, #8]
 8010730:	88ea      	ldrh	r2, [r5, #6]
 8010732:	00c1      	lsls	r1, r0, #3
 8010734:	f401 7180 	and.w	r1, r1, #256	@ 0x100
 8010738:	4319      	orrs	r1, r3
 801073a:	0643      	lsls	r3, r0, #25
 801073c:	bf44      	itt	mi
 801073e:	f5a1 7300 	submi.w	r3, r1, #512	@ 0x200
 8010742:	b219      	sxthmi	r1, r3
 8010744:	0100      	lsls	r0, r0, #4
 8010746:	79fb      	ldrb	r3, [r7, #7]
 8010748:	f400 7080 	and.w	r0, r0, #256	@ 0x100
 801074c:	4303      	orrs	r3, r0
 801074e:	4413      	add	r3, r2
 8010750:	1a5b      	subs	r3, r3, r1
 8010752:	b21b      	sxth	r3, r3
 8010754:	429c      	cmp	r4, r3
 8010756:	bfb8      	it	lt
 8010758:	461c      	movlt	r4, r3
 801075a:	4633      	mov	r3, r6
 801075c:	462a      	mov	r2, r5
 801075e:	2100      	movs	r1, #0
 8010760:	e7dc      	b.n	801071c <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x44>
 8010762:	b2a0      	uxth	r0, r4
 8010764:	b01e      	add	sp, #120	@ 0x78
 8010766:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 801076a:	b003      	add	sp, #12
 801076c:	4770      	bx	lr

0801076e <_ZNK8touchgfx4Font20getMinimumTextHeightEv>:
 801076e:	7a43      	ldrb	r3, [r0, #9]
 8010770:	8880      	ldrh	r0, [r0, #4]
 8010772:	4418      	add	r0, r3
 8010774:	b280      	uxth	r0, r0
 8010776:	4770      	bx	lr

08010778 <_ZNK8touchgfx4Font13getFontHeightEv>:
 8010778:	6803      	ldr	r3, [r0, #0]
 801077a:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 801077c:	4718      	bx	r3

0801077e <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz>:
 801077e:	b40e      	push	{r1, r2, r3}
 8010780:	b570      	push	{r4, r5, r6, lr}
 8010782:	b09d      	sub	sp, #116	@ 0x74
 8010784:	ab21      	add	r3, sp, #132	@ 0x84
 8010786:	4604      	mov	r4, r0
 8010788:	f853 5b04 	ldr.w	r5, [r3], #4
 801078c:	9302      	str	r3, [sp, #8]
 801078e:	a803      	add	r0, sp, #12
 8010790:	f001 f8fe 	bl	8011990 <_ZN8touchgfx12TextProviderC1Ev>
 8010794:	6823      	ldr	r3, [r4, #0]
 8010796:	4620      	mov	r0, r4
 8010798:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 801079a:	4798      	blx	r3
 801079c:	6823      	ldr	r3, [r4, #0]
 801079e:	4606      	mov	r6, r0
 80107a0:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 80107a2:	4620      	mov	r0, r4
 80107a4:	4798      	blx	r3
 80107a6:	4633      	mov	r3, r6
 80107a8:	9000      	str	r0, [sp, #0]
 80107aa:	9a02      	ldr	r2, [sp, #8]
 80107ac:	4629      	mov	r1, r5
 80107ae:	a803      	add	r0, sp, #12
 80107b0:	f001 f941 	bl	8011a36 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 80107b4:	a803      	add	r0, sp, #12
 80107b6:	f001 fcdb 	bl	8012170 <_ZN8touchgfx12TextProvider11getNextCharEv>
 80107ba:	2401      	movs	r4, #1
 80107bc:	b2a3      	uxth	r3, r4
 80107be:	b140      	cbz	r0, 80107d2 <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x54>
 80107c0:	280a      	cmp	r0, #10
 80107c2:	bf08      	it	eq
 80107c4:	3301      	addeq	r3, #1
 80107c6:	a803      	add	r0, sp, #12
 80107c8:	bf08      	it	eq
 80107ca:	b21c      	sxtheq	r4, r3
 80107cc:	f001 fcd0 	bl	8012170 <_ZN8touchgfx12TextProvider11getNextCharEv>
 80107d0:	e7f4      	b.n	80107bc <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x3e>
 80107d2:	4618      	mov	r0, r3
 80107d4:	b01d      	add	sp, #116	@ 0x74
 80107d6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80107da:	b003      	add	sp, #12
 80107dc:	4770      	bx	lr

080107de <_ZNK8touchgfx4Font15getSpacingAboveEPKtz>:
 80107de:	b40e      	push	{r1, r2, r3}
 80107e0:	b5f0      	push	{r4, r5, r6, r7, lr}
 80107e2:	b09e      	sub	sp, #120	@ 0x78
 80107e4:	ab23      	add	r3, sp, #140	@ 0x8c
 80107e6:	4604      	mov	r4, r0
 80107e8:	f853 5b04 	ldr.w	r5, [r3], #4
 80107ec:	9303      	str	r3, [sp, #12]
 80107ee:	a805      	add	r0, sp, #20
 80107f0:	f001 f8ce 	bl	8011990 <_ZN8touchgfx12TextProviderC1Ev>
 80107f4:	6823      	ldr	r3, [r4, #0]
 80107f6:	4620      	mov	r0, r4
 80107f8:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 80107fa:	4798      	blx	r3
 80107fc:	6823      	ldr	r3, [r4, #0]
 80107fe:	4606      	mov	r6, r0
 8010800:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 8010802:	4620      	mov	r0, r4
 8010804:	4798      	blx	r3
 8010806:	4633      	mov	r3, r6
 8010808:	4629      	mov	r1, r5
 801080a:	9000      	str	r0, [sp, #0]
 801080c:	9a03      	ldr	r2, [sp, #12]
 801080e:	a805      	add	r0, sp, #20
 8010810:	ad1e      	add	r5, sp, #120	@ 0x78
 8010812:	f001 f910 	bl	8011a36 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8010816:	2100      	movs	r1, #0
 8010818:	f845 1d68 	str.w	r1, [r5, #-104]!
 801081c:	4622      	mov	r2, r4
 801081e:	462b      	mov	r3, r5
 8010820:	a805      	add	r0, sp, #20
 8010822:	f001 fc23 	bl	801206c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8010826:	f647 76ff 	movw	r6, #32767	@ 0x7fff
 801082a:	b1d8      	cbz	r0, 8010864 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x86>
 801082c:	280a      	cmp	r0, #10
 801082e:	d012      	beq.n	8010856 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x78>
 8010830:	9804      	ldr	r0, [sp, #16]
 8010832:	b180      	cbz	r0, 8010856 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x78>
 8010834:	7b47      	ldrb	r7, [r0, #13]
 8010836:	88e2      	ldrh	r2, [r4, #6]
 8010838:	00fb      	lsls	r3, r7, #3
 801083a:	f403 7180 	and.w	r1, r3, #256	@ 0x100
 801083e:	7a03      	ldrb	r3, [r0, #8]
 8010840:	430b      	orrs	r3, r1
 8010842:	0679      	lsls	r1, r7, #25
 8010844:	bf44      	itt	mi
 8010846:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 801084a:	b21b      	sxthmi	r3, r3
 801084c:	1ad3      	subs	r3, r2, r3
 801084e:	b21b      	sxth	r3, r3
 8010850:	429e      	cmp	r6, r3
 8010852:	bfa8      	it	ge
 8010854:	461e      	movge	r6, r3
 8010856:	462b      	mov	r3, r5
 8010858:	4622      	mov	r2, r4
 801085a:	2100      	movs	r1, #0
 801085c:	a805      	add	r0, sp, #20
 801085e:	f001 fc05 	bl	801206c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8010862:	e7e2      	b.n	801082a <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x4c>
 8010864:	4630      	mov	r0, r6
 8010866:	b01e      	add	sp, #120	@ 0x78
 8010868:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 801086c:	b003      	add	sp, #12
 801086e:	4770      	bx	lr

08010870 <_ZNK8touchgfx8Drawable10invalidateEv>:
 8010870:	b513      	push	{r0, r1, r4, lr}
 8010872:	6803      	ldr	r3, [r0, #0]
 8010874:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 8010878:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 801087c:	f8ad 1004 	strh.w	r1, [sp, #4]
 8010880:	2400      	movs	r4, #0
 8010882:	9400      	str	r4, [sp, #0]
 8010884:	f8ad 2006 	strh.w	r2, [sp, #6]
 8010888:	691b      	ldr	r3, [r3, #16]
 801088a:	4669      	mov	r1, sp
 801088c:	4798      	blx	r3
 801088e:	b002      	add	sp, #8
 8010890:	bd10      	pop	{r4, pc}

08010892 <_ZN8touchgfx8Drawable20getSolidRectAbsoluteEv>:
 8010892:	b538      	push	{r3, r4, r5, lr}
 8010894:	680b      	ldr	r3, [r1, #0]
 8010896:	460c      	mov	r4, r1
 8010898:	68db      	ldr	r3, [r3, #12]
 801089a:	4605      	mov	r5, r0
 801089c:	4798      	blx	r3
 801089e:	6823      	ldr	r3, [r4, #0]
 80108a0:	4620      	mov	r0, r4
 80108a2:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80108a4:	4629      	mov	r1, r5
 80108a6:	4798      	blx	r3
 80108a8:	4628      	mov	r0, r5
 80108aa:	bd38      	pop	{r3, r4, r5, pc}

080108ac <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE>:
 80108ac:	b410      	push	{r4}
 80108ae:	880a      	ldrh	r2, [r1, #0]
 80108b0:	8884      	ldrh	r4, [r0, #4]
 80108b2:	4422      	add	r2, r4
 80108b4:	800a      	strh	r2, [r1, #0]
 80108b6:	88c4      	ldrh	r4, [r0, #6]
 80108b8:	884a      	ldrh	r2, [r1, #2]
 80108ba:	4422      	add	r2, r4
 80108bc:	804a      	strh	r2, [r1, #2]
 80108be:	6940      	ldr	r0, [r0, #20]
 80108c0:	b120      	cbz	r0, 80108cc <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE+0x20>
 80108c2:	6803      	ldr	r3, [r0, #0]
 80108c4:	f85d 4b04 	ldr.w	r4, [sp], #4
 80108c8:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80108ca:	4718      	bx	r3
 80108cc:	f85d 4b04 	ldr.w	r4, [sp], #4
 80108d0:	4770      	bx	lr

080108d2 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE>:
 80108d2:	b570      	push	{r4, r5, r6, lr}
 80108d4:	8882      	ldrh	r2, [r0, #4]
 80108d6:	880b      	ldrh	r3, [r1, #0]
 80108d8:	4413      	add	r3, r2
 80108da:	800b      	strh	r3, [r1, #0]
 80108dc:	88c2      	ldrh	r2, [r0, #6]
 80108de:	884b      	ldrh	r3, [r1, #2]
 80108e0:	460c      	mov	r4, r1
 80108e2:	4413      	add	r3, r2
 80108e4:	804b      	strh	r3, [r1, #2]
 80108e6:	4605      	mov	r5, r0
 80108e8:	1d01      	adds	r1, r0, #4
 80108ea:	4620      	mov	r0, r4
 80108ec:	f7f9 fcfe 	bl	800a2ec <_ZN8touchgfx4RectaNERKS0_>
 80108f0:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 80108f4:	2b00      	cmp	r3, #0
 80108f6:	dd0b      	ble.n	8010910 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 80108f8:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 80108fc:	2b00      	cmp	r3, #0
 80108fe:	dd07      	ble.n	8010910 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 8010900:	6968      	ldr	r0, [r5, #20]
 8010902:	b128      	cbz	r0, 8010910 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 8010904:	6803      	ldr	r3, [r0, #0]
 8010906:	4621      	mov	r1, r4
 8010908:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 801090a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801090e:	4718      	bx	r3
 8010910:	bd70      	pop	{r4, r5, r6, pc}
	...

08010914 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE>:
 8010914:	b570      	push	{r4, r5, r6, lr}
 8010916:	8882      	ldrh	r2, [r0, #4]
 8010918:	880b      	ldrh	r3, [r1, #0]
 801091a:	4413      	add	r3, r2
 801091c:	800b      	strh	r3, [r1, #0]
 801091e:	88c2      	ldrh	r2, [r0, #6]
 8010920:	884b      	ldrh	r3, [r1, #2]
 8010922:	460c      	mov	r4, r1
 8010924:	4413      	add	r3, r2
 8010926:	804b      	strh	r3, [r1, #2]
 8010928:	4605      	mov	r5, r0
 801092a:	1d01      	adds	r1, r0, #4
 801092c:	4620      	mov	r0, r4
 801092e:	f7f9 fcdd 	bl	800a2ec <_ZN8touchgfx4RectaNERKS0_>
 8010932:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 8010936:	2b00      	cmp	r3, #0
 8010938:	dd19      	ble.n	801096e <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
 801093a:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 801093e:	2b00      	cmp	r3, #0
 8010940:	dd15      	ble.n	801096e <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
 8010942:	6968      	ldr	r0, [r5, #20]
 8010944:	b128      	cbz	r0, 8010952 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x3e>
 8010946:	6803      	ldr	r3, [r0, #0]
 8010948:	4621      	mov	r1, r4
 801094a:	691b      	ldr	r3, [r3, #16]
 801094c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8010950:	4718      	bx	r3
 8010952:	4b07      	ldr	r3, [pc, #28]	@ (8010970 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5c>)
 8010954:	681b      	ldr	r3, [r3, #0]
 8010956:	3304      	adds	r3, #4
 8010958:	429d      	cmp	r5, r3
 801095a:	d108      	bne.n	801096e <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
 801095c:	f7fe fdd6 	bl	800f50c <_ZN8touchgfx11Application11getInstanceEv>
 8010960:	6803      	ldr	r3, [r0, #0]
 8010962:	6821      	ldr	r1, [r4, #0]
 8010964:	6862      	ldr	r2, [r4, #4]
 8010966:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8010968:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801096c:	4718      	bx	r3
 801096e:	bd70      	pop	{r4, r5, r6, pc}
 8010970:	20013f70 	.word	0x20013f70

08010974 <_ZN8touchgfx8Drawable12moveRelativeEss>:
 8010974:	b570      	push	{r4, r5, r6, lr}
 8010976:	4604      	mov	r4, r0
 8010978:	4616      	mov	r6, r2
 801097a:	460d      	mov	r5, r1
 801097c:	b901      	cbnz	r1, 8010980 <_ZN8touchgfx8Drawable12moveRelativeEss+0xc>
 801097e:	b192      	cbz	r2, 80109a6 <_ZN8touchgfx8Drawable12moveRelativeEss+0x32>
 8010980:	6823      	ldr	r3, [r4, #0]
 8010982:	4620      	mov	r0, r4
 8010984:	699b      	ldr	r3, [r3, #24]
 8010986:	4798      	blx	r3
 8010988:	88e2      	ldrh	r2, [r4, #6]
 801098a:	88a1      	ldrh	r1, [r4, #4]
 801098c:	4432      	add	r2, r6
 801098e:	4429      	add	r1, r5
 8010990:	4620      	mov	r0, r4
 8010992:	b212      	sxth	r2, r2
 8010994:	b209      	sxth	r1, r1
 8010996:	f7f9 ff8d 	bl	800a8b4 <_ZN8touchgfx8Drawable5setXYEss>
 801099a:	6823      	ldr	r3, [r4, #0]
 801099c:	4620      	mov	r0, r4
 801099e:	699b      	ldr	r3, [r3, #24]
 80109a0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80109a4:	4718      	bx	r3
 80109a6:	bd70      	pop	{r4, r5, r6, pc}

080109a8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>:
 80109a8:	b510      	push	{r4, lr}
 80109aa:	4604      	mov	r4, r0
 80109ac:	4608      	mov	r0, r1
 80109ae:	2300      	movs	r3, #0
 80109b0:	8023      	strh	r3, [r4, #0]
 80109b2:	8063      	strh	r3, [r4, #2]
 80109b4:	6803      	ldr	r3, [r0, #0]
 80109b6:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 80109ba:	f9b1 1008 	ldrsh.w	r1, [r1, #8]
 80109be:	80a1      	strh	r1, [r4, #4]
 80109c0:	80e2      	strh	r2, [r4, #6]
 80109c2:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80109c4:	4621      	mov	r1, r4
 80109c6:	4798      	blx	r3
 80109c8:	4620      	mov	r0, r4
 80109ca:	bd10      	pop	{r4, pc}

080109cc <_ZN8touchgfx22VectorFontRendererImplD1Ev>:
 80109cc:	4770      	bx	lr

080109ce <_ZN8touchgfx22VectorFontRendererImplD0Ev>:
 80109ce:	b510      	push	{r4, lr}
 80109d0:	211c      	movs	r1, #28
 80109d2:	4604      	mov	r4, r0
 80109d4:	f011 f82f 	bl	8021a36 <_ZdlPvj>
 80109d8:	4620      	mov	r0, r4
 80109da:	bd10      	pop	{r4, pc}

080109dc <_ZN8touchgfx22VectorFontRendererImplC1Ev>:
 80109dc:	4a04      	ldr	r2, [pc, #16]	@ (80109f0 <_ZN8touchgfx22VectorFontRendererImplC1Ev+0x14>)
 80109de:	6002      	str	r2, [r0, #0]
 80109e0:	2200      	movs	r2, #0
 80109e2:	e9c0 2201 	strd	r2, r2, [r0, #4]
 80109e6:	e9c0 2203 	strd	r2, r2, [r0, #12]
 80109ea:	e9c0 2205 	strd	r2, r2, [r0, #20]
 80109ee:	4770      	bx	lr
 80109f0:	08024da8 	.word	0x08024da8

080109f4 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs>:
 80109f4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80109f8:	4604      	mov	r4, r0
 80109fa:	b087      	sub	sp, #28
 80109fc:	8b45      	ldrh	r5, [r0, #26]
 80109fe:	f8b2 c000 	ldrh.w	ip, [r2]
 8010a02:	9105      	str	r1, [sp, #20]
 8010a04:	68e1      	ldr	r1, [r4, #12]
 8010a06:	9203      	str	r2, [sp, #12]
 8010a08:	1c68      	adds	r0, r5, #1
 8010a0a:	eb01 0185 	add.w	r1, r1, r5, lsl #2
 8010a0e:	f01c 0501 	ands.w	r5, ip, #1
 8010a12:	f9b3 2000 	ldrsh.w	r2, [r3]
 8010a16:	9502      	str	r5, [sp, #8]
 8010a18:	b280      	uxth	r0, r0
 8010a1a:	d07d      	beq.n	8010b18 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x124>
 8010a1c:	ee07 2a90 	vmov	s15, r2
 8010a20:	eef8 6ae7 	vcvt.f32.s32	s13, s15
 8010a24:	8360      	strh	r0, [r4, #26]
 8010a26:	edc1 6a00 	vstr	s13, [r1]
 8010a2a:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 8010a2e:	8b61      	ldrh	r1, [r4, #26]
 8010a30:	ee07 2a10 	vmov	s14, r2
 8010a34:	68e2      	ldr	r2, [r4, #12]
 8010a36:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8010a3a:	f04f 0e00 	mov.w	lr, #0
 8010a3e:	1c48      	adds	r0, r1, #1
 8010a40:	eb02 0281 	add.w	r2, r2, r1, lsl #2
 8010a44:	ee06 ea10 	vmov	s12, lr
 8010a48:	8360      	strh	r0, [r4, #26]
 8010a4a:	ed82 7a00 	vstr	s14, [r2]
 8010a4e:	8b21      	ldrh	r1, [r4, #24]
 8010a50:	68a2      	ldr	r2, [r4, #8]
 8010a52:	2501      	movs	r5, #1
 8010a54:	1c48      	adds	r0, r1, #1
 8010a56:	8320      	strh	r0, [r4, #24]
 8010a58:	5455      	strb	r5, [r2, r1]
 8010a5a:	2200      	movs	r2, #0
 8010a5c:	3304      	adds	r3, #4
 8010a5e:	ee07 2a90 	vmov	s15, r2
 8010a62:	9300      	str	r3, [sp, #0]
 8010a64:	46aa      	mov	sl, r5
 8010a66:	4613      	mov	r3, r2
 8010a68:	4611      	mov	r1, r2
 8010a6a:	462e      	mov	r6, r5
 8010a6c:	9201      	str	r2, [sp, #4]
 8010a6e:	eef6 5a00 	vmov.f32	s11, #96	@ 0x3f000000  0.5
 8010a72:	f8b4 8018 	ldrh.w	r8, [r4, #24]
 8010a76:	9805      	ldr	r0, [sp, #20]
 8010a78:	f8d4 b008 	ldr.w	fp, [r4, #8]
 8010a7c:	f108 0701 	add.w	r7, r8, #1
 8010a80:	42a8      	cmp	r0, r5
 8010a82:	b2bf      	uxth	r7, r7
 8010a84:	eb0b 0908 	add.w	r9, fp, r8
 8010a88:	f340 80db 	ble.w	8010c42 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x24e>
 8010a8c:	fa4c f906 	asr.w	r9, ip, r6
 8010a90:	f009 0901 	and.w	r9, r9, #1
 8010a94:	fa5f f389 	uxtb.w	r3, r9
 8010a98:	9304      	str	r3, [sp, #16]
 8010a9a:	9b00      	ldr	r3, [sp, #0]
 8010a9c:	f9b3 1000 	ldrsh.w	r1, [r3]
 8010aa0:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 8010aa4:	f1b9 0f00 	cmp.w	r9, #0
 8010aa8:	d07d      	beq.n	8010ba6 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x1b2>
 8010aaa:	ee05 1a10 	vmov	s10, r1
 8010aae:	eef8 4ac5 	vcvt.f32.s32	s9, s10
 8010ab2:	ee05 3a10 	vmov	s10, r3
 8010ab6:	8327      	strh	r7, [r4, #24]
 8010ab8:	eeb8 5ac5 	vcvt.f32.s32	s10, s10
 8010abc:	f1ba 0f00 	cmp.w	sl, #0
 8010ac0:	d050      	beq.n	8010b64 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x170>
 8010ac2:	f04f 0002 	mov.w	r0, #2
 8010ac6:	f80b 0008 	strb.w	r0, [fp, r8]
 8010aca:	f8b4 801a 	ldrh.w	r8, [r4, #26]
 8010ace:	68e7      	ldr	r7, [r4, #12]
 8010ad0:	f108 0901 	add.w	r9, r8, #1
 8010ad4:	eb07 0788 	add.w	r7, r7, r8, lsl #2
 8010ad8:	f8a4 901a 	strh.w	r9, [r4, #26]
 8010adc:	edc7 4a00 	vstr	s9, [r7]
 8010ae0:	f8b4 801a 	ldrh.w	r8, [r4, #26]
 8010ae4:	68e7      	ldr	r7, [r4, #12]
 8010ae6:	f108 0901 	add.w	r9, r8, #1
 8010aea:	eb07 0788 	add.w	r7, r7, r8, lsl #2
 8010aee:	f8a4 901a 	strh.w	r9, [r4, #26]
 8010af2:	ed87 5a00 	vstr	s10, [r7]
 8010af6:	3601      	adds	r6, #1
 8010af8:	2e10      	cmp	r6, #16
 8010afa:	d106      	bne.n	8010b0a <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x116>
 8010afc:	9e01      	ldr	r6, [sp, #4]
 8010afe:	9803      	ldr	r0, [sp, #12]
 8010b00:	3601      	adds	r6, #1
 8010b02:	9601      	str	r6, [sp, #4]
 8010b04:	f830 c016 	ldrh.w	ip, [r0, r6, lsl #1]
 8010b08:	2600      	movs	r6, #0
 8010b0a:	9800      	ldr	r0, [sp, #0]
 8010b0c:	f8dd a010 	ldr.w	sl, [sp, #16]
 8010b10:	3004      	adds	r0, #4
 8010b12:	3501      	adds	r5, #1
 8010b14:	9000      	str	r0, [sp, #0]
 8010b16:	e7ac      	b.n	8010a72 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x7e>
 8010b18:	ee06 2a10 	vmov	s12, r2
 8010b1c:	f9b3 2004 	ldrsh.w	r2, [r3, #4]
 8010b20:	f9b3 e002 	ldrsh.w	lr, [r3, #2]
 8010b24:	ee16 5a10 	vmov	r5, s12
 8010b28:	442a      	add	r2, r5
 8010b2a:	ee06 2a90 	vmov	s13, r2
 8010b2e:	f9b3 2006 	ldrsh.w	r2, [r3, #6]
 8010b32:	8360      	strh	r0, [r4, #26]
 8010b34:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 8010b38:	eef6 7a00 	vmov.f32	s15, #96	@ 0x3f000000  0.5
 8010b3c:	4472      	add	r2, lr
 8010b3e:	ee07 2a10 	vmov	s14, r2
 8010b42:	ee66 6aa7 	vmul.f32	s13, s13, s15
 8010b46:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8010b4a:	edc1 6a00 	vstr	s13, [r1]
 8010b4e:	8b61      	ldrh	r1, [r4, #26]
 8010b50:	68e2      	ldr	r2, [r4, #12]
 8010b52:	ee27 7a27 	vmul.f32	s14, s14, s15
 8010b56:	1c48      	adds	r0, r1, #1
 8010b58:	eb02 0281 	add.w	r2, r2, r1, lsl #2
 8010b5c:	8360      	strh	r0, [r4, #26]
 8010b5e:	ed82 7a00 	vstr	s14, [r2]
 8010b62:	e774      	b.n	8010a4e <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x5a>
 8010b64:	f04f 0005 	mov.w	r0, #5
 8010b68:	f80b 0008 	strb.w	r0, [fp, r8]
 8010b6c:	f8b4 801a 	ldrh.w	r8, [r4, #26]
 8010b70:	68e7      	ldr	r7, [r4, #12]
 8010b72:	eeb8 4ae7 	vcvt.f32.s32	s8, s15
 8010b76:	f108 0901 	add.w	r9, r8, #1
 8010b7a:	eb07 0788 	add.w	r7, r7, r8, lsl #2
 8010b7e:	f8a4 901a 	strh.w	r9, [r4, #26]
 8010b82:	ed87 4a00 	vstr	s8, [r7]
 8010b86:	ee04 2a10 	vmov	s8, r2
 8010b8a:	f8b4 801a 	ldrh.w	r8, [r4, #26]
 8010b8e:	68e7      	ldr	r7, [r4, #12]
 8010b90:	eeb8 4ac4 	vcvt.f32.s32	s8, s8
 8010b94:	f108 0901 	add.w	r9, r8, #1
 8010b98:	eb07 0788 	add.w	r7, r7, r8, lsl #2
 8010b9c:	f8a4 901a 	strh.w	r9, [r4, #26]
 8010ba0:	ed87 4a00 	vstr	s8, [r7]
 8010ba4:	e791      	b.n	8010aca <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0xd6>
 8010ba6:	f1ba 0f00 	cmp.w	sl, #0
 8010baa:	d146      	bne.n	8010c3a <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x246>
 8010bac:	f04f 0005 	mov.w	r0, #5
 8010bb0:	8327      	strh	r7, [r4, #24]
 8010bb2:	f80b 0008 	strb.w	r0, [fp, r8]
 8010bb6:	f8b4 801a 	ldrh.w	r8, [r4, #26]
 8010bba:	68e7      	ldr	r7, [r4, #12]
 8010bbc:	eeb8 5ae7 	vcvt.f32.s32	s10, s15
 8010bc0:	f108 0901 	add.w	r9, r8, #1
 8010bc4:	eb07 0788 	add.w	r7, r7, r8, lsl #2
 8010bc8:	ee17 0a90 	vmov	r0, s15
 8010bcc:	f8a4 901a 	strh.w	r9, [r4, #26]
 8010bd0:	ed87 5a00 	vstr	s10, [r7]
 8010bd4:	ee05 2a10 	vmov	s10, r2
 8010bd8:	f8b4 801a 	ldrh.w	r8, [r4, #26]
 8010bdc:	68e7      	ldr	r7, [r4, #12]
 8010bde:	4408      	add	r0, r1
 8010be0:	eeb8 5ac5 	vcvt.f32.s32	s10, s10
 8010be4:	ee07 0a90 	vmov	s15, r0
 8010be8:	f108 0901 	add.w	r9, r8, #1
 8010bec:	eb07 0788 	add.w	r7, r7, r8, lsl #2
 8010bf0:	f8a4 901a 	strh.w	r9, [r4, #26]
 8010bf4:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8010bf8:	ed87 5a00 	vstr	s10, [r7]
 8010bfc:	f8b4 801a 	ldrh.w	r8, [r4, #26]
 8010c00:	68e7      	ldr	r7, [r4, #12]
 8010c02:	ee67 7aa5 	vmul.f32	s15, s15, s11
 8010c06:	f108 0901 	add.w	r9, r8, #1
 8010c0a:	eb07 0788 	add.w	r7, r7, r8, lsl #2
 8010c0e:	441a      	add	r2, r3
 8010c10:	f8a4 901a 	strh.w	r9, [r4, #26]
 8010c14:	edc7 7a00 	vstr	s15, [r7]
 8010c18:	ee07 2a90 	vmov	s15, r2
 8010c1c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8010c20:	f8b4 801a 	ldrh.w	r8, [r4, #26]
 8010c24:	68e7      	ldr	r7, [r4, #12]
 8010c26:	ee67 7aa5 	vmul.f32	s15, s15, s11
 8010c2a:	f108 0901 	add.w	r9, r8, #1
 8010c2e:	eb07 0788 	add.w	r7, r7, r8, lsl #2
 8010c32:	f8a4 901a 	strh.w	r9, [r4, #26]
 8010c36:	edc7 7a00 	vstr	s15, [r7]
 8010c3a:	461a      	mov	r2, r3
 8010c3c:	ee07 1a90 	vmov	s15, r1
 8010c40:	e759      	b.n	8010af6 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x102>
 8010c42:	f1ba 0f00 	cmp.w	sl, #0
 8010c46:	d045      	beq.n	8010cd4 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x2e0>
 8010c48:	ee05 1a90 	vmov	s11, r1
 8010c4c:	eef8 5ae5 	vcvt.f32.s32	s11, s11
 8010c50:	eef4 5a66 	vcmp.f32	s11, s13
 8010c54:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8010c58:	d108      	bne.n	8010c6c <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x278>
 8010c5a:	ee05 3a90 	vmov	s11, r3
 8010c5e:	eef8 5ae5 	vcvt.f32.s32	s11, s11
 8010c62:	eef4 5a47 	vcmp.f32	s11, s14
 8010c66:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8010c6a:	d033      	beq.n	8010cd4 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x2e0>
 8010c6c:	9b02      	ldr	r3, [sp, #8]
 8010c6e:	8327      	strh	r7, [r4, #24]
 8010c70:	b1b3      	cbz	r3, 8010ca0 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x2ac>
 8010c72:	2302      	movs	r3, #2
 8010c74:	f889 3000 	strb.w	r3, [r9]
 8010c78:	8b62      	ldrh	r2, [r4, #26]
 8010c7a:	68e3      	ldr	r3, [r4, #12]
 8010c7c:	1c51      	adds	r1, r2, #1
 8010c7e:	eb03 0382 	add.w	r3, r3, r2, lsl #2
 8010c82:	8361      	strh	r1, [r4, #26]
 8010c84:	edc3 6a00 	vstr	s13, [r3]
 8010c88:	8b62      	ldrh	r2, [r4, #26]
 8010c8a:	68e3      	ldr	r3, [r4, #12]
 8010c8c:	1c51      	adds	r1, r2, #1
 8010c8e:	eb03 0382 	add.w	r3, r3, r2, lsl #2
 8010c92:	8361      	strh	r1, [r4, #26]
 8010c94:	ed83 7a00 	vstr	s14, [r3]
 8010c98:	9800      	ldr	r0, [sp, #0]
 8010c9a:	b007      	add	sp, #28
 8010c9c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8010ca0:	2305      	movs	r3, #5
 8010ca2:	f889 3000 	strb.w	r3, [r9]
 8010ca6:	8b62      	ldrh	r2, [r4, #26]
 8010ca8:	68e3      	ldr	r3, [r4, #12]
 8010caa:	eeb8 6ac6 	vcvt.f32.s32	s12, s12
 8010cae:	1c51      	adds	r1, r2, #1
 8010cb0:	eb03 0382 	add.w	r3, r3, r2, lsl #2
 8010cb4:	8361      	strh	r1, [r4, #26]
 8010cb6:	ee07 ea90 	vmov	s15, lr
 8010cba:	ed83 6a00 	vstr	s12, [r3]
 8010cbe:	8b62      	ldrh	r2, [r4, #26]
 8010cc0:	68e3      	ldr	r3, [r4, #12]
 8010cc2:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8010cc6:	1c51      	adds	r1, r2, #1
 8010cc8:	eb03 0382 	add.w	r3, r3, r2, lsl #2
 8010ccc:	8361      	strh	r1, [r4, #26]
 8010cce:	edc3 7a00 	vstr	s15, [r3]
 8010cd2:	e7d1      	b.n	8010c78 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x284>
 8010cd4:	ee05 2a90 	vmov	s11, r2
 8010cd8:	9902      	ldr	r1, [sp, #8]
 8010cda:	8327      	strh	r7, [r4, #24]
 8010cdc:	2305      	movs	r3, #5
 8010cde:	eeb8 5ae7 	vcvt.f32.s32	s10, s15
 8010ce2:	eef8 5ae5 	vcvt.f32.s32	s11, s11
 8010ce6:	f889 3000 	strb.w	r3, [r9]
 8010cea:	b181      	cbz	r1, 8010d0e <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x31a>
 8010cec:	8b62      	ldrh	r2, [r4, #26]
 8010cee:	68e3      	ldr	r3, [r4, #12]
 8010cf0:	1c51      	adds	r1, r2, #1
 8010cf2:	eb03 0382 	add.w	r3, r3, r2, lsl #2
 8010cf6:	8361      	strh	r1, [r4, #26]
 8010cf8:	ed83 5a00 	vstr	s10, [r3]
 8010cfc:	8b62      	ldrh	r2, [r4, #26]
 8010cfe:	68e3      	ldr	r3, [r4, #12]
 8010d00:	1c51      	adds	r1, r2, #1
 8010d02:	eb03 0382 	add.w	r3, r3, r2, lsl #2
 8010d06:	8361      	strh	r1, [r4, #26]
 8010d08:	edc3 5a00 	vstr	s11, [r3]
 8010d0c:	e7b4      	b.n	8010c78 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x284>
 8010d0e:	8b65      	ldrh	r5, [r4, #26]
 8010d10:	68e1      	ldr	r1, [r4, #12]
 8010d12:	1c6e      	adds	r6, r5, #1
 8010d14:	eb01 0185 	add.w	r1, r1, r5, lsl #2
 8010d18:	8366      	strh	r6, [r4, #26]
 8010d1a:	ed81 5a00 	vstr	s10, [r1]
 8010d1e:	8b65      	ldrh	r5, [r4, #26]
 8010d20:	68e1      	ldr	r1, [r4, #12]
 8010d22:	1c6e      	adds	r6, r5, #1
 8010d24:	eb01 0185 	add.w	r1, r1, r5, lsl #2
 8010d28:	8366      	strh	r6, [r4, #26]
 8010d2a:	edc1 5a00 	vstr	s11, [r1]
 8010d2e:	8b65      	ldrh	r5, [r4, #26]
 8010d30:	68e1      	ldr	r1, [r4, #12]
 8010d32:	1c6e      	adds	r6, r5, #1
 8010d34:	eb01 0185 	add.w	r1, r1, r5, lsl #2
 8010d38:	ee17 0a90 	vmov	r0, s15
 8010d3c:	ee16 5a10 	vmov	r5, s12
 8010d40:	4428      	add	r0, r5
 8010d42:	ee07 0a90 	vmov	s15, r0
 8010d46:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8010d4a:	eef6 5a00 	vmov.f32	s11, #96	@ 0x3f000000  0.5
 8010d4e:	ee67 7aa5 	vmul.f32	s15, s15, s11
 8010d52:	4472      	add	r2, lr
 8010d54:	8366      	strh	r6, [r4, #26]
 8010d56:	edc1 7a00 	vstr	s15, [r1]
 8010d5a:	ee07 2a90 	vmov	s15, r2
 8010d5e:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8010d62:	8b61      	ldrh	r1, [r4, #26]
 8010d64:	68e5      	ldr	r5, [r4, #12]
 8010d66:	ee67 7aa5 	vmul.f32	s15, s15, s11
 8010d6a:	1c4e      	adds	r6, r1, #1
 8010d6c:	eb05 0181 	add.w	r1, r5, r1, lsl #2
 8010d70:	8366      	strh	r6, [r4, #26]
 8010d72:	edc1 7a00 	vstr	s15, [r1]
 8010d76:	8b22      	ldrh	r2, [r4, #24]
 8010d78:	68a1      	ldr	r1, [r4, #8]
 8010d7a:	1c55      	adds	r5, r2, #1
 8010d7c:	8325      	strh	r5, [r4, #24]
 8010d7e:	548b      	strb	r3, [r1, r2]
 8010d80:	e791      	b.n	8010ca6 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x2b2>
	...

08010d84 <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii>:
 8010d84:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8010d88:	b08e      	sub	sp, #56	@ 0x38
 8010d8a:	4604      	mov	r4, r0
 8010d8c:	4688      	mov	r8, r1
 8010d8e:	4615      	mov	r5, r2
 8010d90:	4699      	mov	r9, r3
 8010d92:	9e16      	ldr	r6, [sp, #88]	@ 0x58
 8010d94:	f89d a064 	ldrb.w	sl, [sp, #100]	@ 0x64
 8010d98:	9f1a      	ldr	r7, [sp, #104]	@ 0x68
 8010d9a:	f7f0 fbe9 	bl	8001570 <_ZN8touchgfx14VectorRenderer11getInstanceEv>
 8010d9e:	6060      	str	r0, [r4, #4]
 8010da0:	f1b9 0f00 	cmp.w	r9, #0
 8010da4:	f000 80e8 	beq.w	8010f78 <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0x1f4>
 8010da8:	2800      	cmp	r0, #0
 8010daa:	f000 80e5 	beq.w	8010f78 <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0x1f4>
 8010dae:	a805      	add	r0, sp, #20
 8010db0:	f000 f8f9 	bl	8010fa6 <_ZN8touchgfx9Matrix3x3C1Ev>
 8010db4:	6833      	ldr	r3, [r6, #0]
 8010db6:	4630      	mov	r0, r6
 8010db8:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8010dba:	4798      	blx	r3
 8010dbc:	a805      	add	r0, sp, #20
 8010dbe:	eef0 0a40 	vmov.f32	s1, s0
 8010dc2:	f000 f8f4 	bl	8010fae <_ZN8touchgfx9Matrix3x35scaleEff>
 8010dc6:	6860      	ldr	r0, [r4, #4]
 8010dc8:	f1ba 0f03 	cmp.w	sl, #3
 8010dcc:	d83b      	bhi.n	8010e46 <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0xc2>
 8010dce:	e8df f00a 	tbb	[pc, sl]
 8010dd2:	1002      	.short	0x1002
 8010dd4:	9f71      	.short	0x9f71
 8010dd6:	6803      	ldr	r3, [r0, #0]
 8010dd8:	462a      	mov	r2, r5
 8010dda:	689b      	ldr	r3, [r3, #8]
 8010ddc:	4641      	mov	r1, r8
 8010dde:	4798      	blx	r3
 8010de0:	eddd 7a1b 	vldr	s15, [sp, #108]	@ 0x6c
 8010de4:	eef8 0ae7 	vcvt.f32.s32	s1, s15
 8010de8:	ee07 7a90 	vmov	s15, r7
 8010dec:	eeb8 0ae7 	vcvt.f32.s32	s0, s15
 8010df0:	e026      	b.n	8010e40 <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0xbc>
 8010df2:	f9b5 2006 	ldrsh.w	r2, [r5, #6]
 8010df6:	f8b8 3004 	ldrh.w	r3, [r8, #4]
 8010dfa:	8869      	ldrh	r1, [r5, #2]
 8010dfc:	f8ad 2010 	strh.w	r2, [sp, #16]
 8010e00:	1a9b      	subs	r3, r3, r2
 8010e02:	1a5b      	subs	r3, r3, r1
 8010e04:	f8ad 300c 	strh.w	r3, [sp, #12]
 8010e08:	882b      	ldrh	r3, [r5, #0]
 8010e0a:	f8ad 300e 	strh.w	r3, [sp, #14]
 8010e0e:	88ab      	ldrh	r3, [r5, #4]
 8010e10:	f8ad 3012 	strh.w	r3, [sp, #18]
 8010e14:	6803      	ldr	r3, [r0, #0]
 8010e16:	aa03      	add	r2, sp, #12
 8010e18:	689b      	ldr	r3, [r3, #8]
 8010e1a:	4641      	mov	r1, r8
 8010e1c:	4798      	blx	r3
 8010e1e:	ed9f 0a58 	vldr	s0, [pc, #352]	@ 8010f80 <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0x1fc>
 8010e22:	a805      	add	r0, sp, #20
 8010e24:	f000 f8e8 	bl	8010ff8 <_ZN8touchgfx9Matrix3x36rotateEf>
 8010e28:	f9b8 3004 	ldrsh.w	r3, [r8, #4]
 8010e2c:	9a1b      	ldr	r2, [sp, #108]	@ 0x6c
 8010e2e:	ee07 7a90 	vmov	s15, r7
 8010e32:	1a9b      	subs	r3, r3, r2
 8010e34:	ee00 3a10 	vmov	s0, r3
 8010e38:	eef8 0ae7 	vcvt.f32.s32	s1, s15
 8010e3c:	eeb8 0ac0 	vcvt.f32.s32	s0, s0
 8010e40:	a805      	add	r0, sp, #20
 8010e42:	f000 f927 	bl	8011094 <_ZN8touchgfx9Matrix3x39translateEff>
 8010e46:	6860      	ldr	r0, [r4, #4]
 8010e48:	6803      	ldr	r3, [r0, #0]
 8010e4a:	a905      	add	r1, sp, #20
 8010e4c:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8010e4e:	4798      	blx	r3
 8010e50:	6860      	ldr	r0, [r4, #4]
 8010e52:	9917      	ldr	r1, [sp, #92]	@ 0x5c
 8010e54:	6803      	ldr	r3, [r0, #0]
 8010e56:	f041 417f 	orr.w	r1, r1, #4278190080	@ 0xff000000
 8010e5a:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8010e5c:	4798      	blx	r3
 8010e5e:	6860      	ldr	r0, [r4, #4]
 8010e60:	f89d 1060 	ldrb.w	r1, [sp, #96]	@ 0x60
 8010e64:	6803      	ldr	r3, [r0, #0]
 8010e66:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8010e68:	4798      	blx	r3
 8010e6a:	6860      	ldr	r0, [r4, #4]
 8010e6c:	6803      	ldr	r3, [r0, #0]
 8010e6e:	2101      	movs	r1, #1
 8010e70:	68db      	ldr	r3, [r3, #12]
 8010e72:	2500      	movs	r5, #0
 8010e74:	4798      	blx	r3
 8010e76:	f8b9 7000 	ldrh.w	r7, [r9]
 8010e7a:	61a5      	str	r5, [r4, #24]
 8010e7c:	f104 0310 	add.w	r3, r4, #16
 8010e80:	f104 0208 	add.w	r2, r4, #8
 8010e84:	f104 0114 	add.w	r1, r4, #20
 8010e88:	f104 000c 	add.w	r0, r4, #12
 8010e8c:	f109 0602 	add.w	r6, r9, #2
 8010e90:	f7f2 f9ee 	bl	8003270 <_ZN8touchgfx22VectorFontRendererImpl20getVectorFontBuffersERPfRiRPhS3_>
 8010e94:	42af      	cmp	r7, r5
 8010e96:	dd60      	ble.n	8010f5a <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0x1d6>
 8010e98:	8831      	ldrh	r1, [r6, #0]
 8010e9a:	f101 030f 	add.w	r3, r1, #15
 8010e9e:	1cb2      	adds	r2, r6, #2
 8010ea0:	f3c3 1307 	ubfx	r3, r3, #4, #8
 8010ea4:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8010ea8:	4620      	mov	r0, r4
 8010eaa:	f7ff fda3 	bl	80109f4 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs>
 8010eae:	3501      	adds	r5, #1
 8010eb0:	4606      	mov	r6, r0
 8010eb2:	e7ef      	b.n	8010e94 <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0x110>
 8010eb4:	f9b5 2004 	ldrsh.w	r2, [r5, #4]
 8010eb8:	f8b8 3004 	ldrh.w	r3, [r8, #4]
 8010ebc:	8829      	ldrh	r1, [r5, #0]
 8010ebe:	f8ad 2010 	strh.w	r2, [sp, #16]
 8010ec2:	1a9b      	subs	r3, r3, r2
 8010ec4:	1a5b      	subs	r3, r3, r1
 8010ec6:	f8ad 300c 	strh.w	r3, [sp, #12]
 8010eca:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
 8010ece:	f8b8 3006 	ldrh.w	r3, [r8, #6]
 8010ed2:	886d      	ldrh	r5, [r5, #2]
 8010ed4:	f8ad 1012 	strh.w	r1, [sp, #18]
 8010ed8:	1a5b      	subs	r3, r3, r1
 8010eda:	1b5b      	subs	r3, r3, r5
 8010edc:	f8ad 300e 	strh.w	r3, [sp, #14]
 8010ee0:	6803      	ldr	r3, [r0, #0]
 8010ee2:	aa03      	add	r2, sp, #12
 8010ee4:	689b      	ldr	r3, [r3, #8]
 8010ee6:	4641      	mov	r1, r8
 8010ee8:	4798      	blx	r3
 8010eea:	ed9f 0a26 	vldr	s0, [pc, #152]	@ 8010f84 <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0x200>
 8010eee:	a805      	add	r0, sp, #20
 8010ef0:	f000 f882 	bl	8010ff8 <_ZN8touchgfx9Matrix3x36rotateEf>
 8010ef4:	f9b8 3006 	ldrsh.w	r3, [r8, #6]
 8010ef8:	9a1b      	ldr	r2, [sp, #108]	@ 0x6c
 8010efa:	1a9b      	subs	r3, r3, r2
 8010efc:	ee00 3a90 	vmov	s1, r3
 8010f00:	f9b8 3004 	ldrsh.w	r3, [r8, #4]
 8010f04:	1bdb      	subs	r3, r3, r7
 8010f06:	ee00 3a10 	vmov	s0, r3
 8010f0a:	eef8 0ae0 	vcvt.f32.s32	s1, s1
 8010f0e:	e795      	b.n	8010e3c <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0xb8>
 8010f10:	886b      	ldrh	r3, [r5, #2]
 8010f12:	f8ad 300c 	strh.w	r3, [sp, #12]
 8010f16:	f9b5 2004 	ldrsh.w	r2, [r5, #4]
 8010f1a:	f8b8 3006 	ldrh.w	r3, [r8, #6]
 8010f1e:	8829      	ldrh	r1, [r5, #0]
 8010f20:	f8ad 2012 	strh.w	r2, [sp, #18]
 8010f24:	1a9b      	subs	r3, r3, r2
 8010f26:	1a5b      	subs	r3, r3, r1
 8010f28:	f8ad 300e 	strh.w	r3, [sp, #14]
 8010f2c:	88eb      	ldrh	r3, [r5, #6]
 8010f2e:	f8ad 3010 	strh.w	r3, [sp, #16]
 8010f32:	6803      	ldr	r3, [r0, #0]
 8010f34:	aa03      	add	r2, sp, #12
 8010f36:	689b      	ldr	r3, [r3, #8]
 8010f38:	4641      	mov	r1, r8
 8010f3a:	4798      	blx	r3
 8010f3c:	ed9f 0a12 	vldr	s0, [pc, #72]	@ 8010f88 <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0x204>
 8010f40:	a805      	add	r0, sp, #20
 8010f42:	f000 f859 	bl	8010ff8 <_ZN8touchgfx9Matrix3x36rotateEf>
 8010f46:	f9b8 3006 	ldrsh.w	r3, [r8, #6]
 8010f4a:	eddd 7a1b 	vldr	s15, [sp, #108]	@ 0x6c
 8010f4e:	1bdb      	subs	r3, r3, r7
 8010f50:	ee00 3a90 	vmov	s1, r3
 8010f54:	eef8 0ae0 	vcvt.f32.s32	s1, s1
 8010f58:	e748      	b.n	8010dec <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0x68>
 8010f5a:	6860      	ldr	r0, [r4, #4]
 8010f5c:	8b22      	ldrh	r2, [r4, #24]
 8010f5e:	6803      	ldr	r3, [r0, #0]
 8010f60:	2100      	movs	r1, #0
 8010f62:	9101      	str	r1, [sp, #4]
 8010f64:	8b61      	ldrh	r1, [r4, #26]
 8010f66:	9100      	str	r1, [sp, #0]
 8010f68:	6a1d      	ldr	r5, [r3, #32]
 8010f6a:	e9d4 1302 	ldrd	r1, r3, [r4, #8]
 8010f6e:	47a8      	blx	r5
 8010f70:	6860      	ldr	r0, [r4, #4]
 8010f72:	6803      	ldr	r3, [r0, #0]
 8010f74:	69db      	ldr	r3, [r3, #28]
 8010f76:	4798      	blx	r3
 8010f78:	b00e      	add	sp, #56	@ 0x38
 8010f7a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8010f7e:	bf00      	nop
 8010f80:	42b40000 	.word	0x42b40000
 8010f84:	43340000 	.word	0x43340000
 8010f88:	43870000 	.word	0x43870000

08010f8c <_ZN8touchgfx9Matrix3x35resetEv>:
 8010f8c:	2300      	movs	r3, #0
 8010f8e:	f04f 527e 	mov.w	r2, #1065353216	@ 0x3f800000
 8010f92:	6002      	str	r2, [r0, #0]
 8010f94:	6043      	str	r3, [r0, #4]
 8010f96:	6083      	str	r3, [r0, #8]
 8010f98:	60c3      	str	r3, [r0, #12]
 8010f9a:	6102      	str	r2, [r0, #16]
 8010f9c:	6143      	str	r3, [r0, #20]
 8010f9e:	6183      	str	r3, [r0, #24]
 8010fa0:	61c3      	str	r3, [r0, #28]
 8010fa2:	6202      	str	r2, [r0, #32]
 8010fa4:	4770      	bx	lr

08010fa6 <_ZN8touchgfx9Matrix3x3C1Ev>:
 8010fa6:	b508      	push	{r3, lr}
 8010fa8:	f7ff fff0 	bl	8010f8c <_ZN8touchgfx9Matrix3x35resetEv>
 8010fac:	bd08      	pop	{r3, pc}

08010fae <_ZN8touchgfx9Matrix3x35scaleEff>:
 8010fae:	edd0 7a00 	vldr	s15, [r0]
 8010fb2:	ee67 7a80 	vmul.f32	s15, s15, s0
 8010fb6:	edc0 7a00 	vstr	s15, [r0]
 8010fba:	edd0 7a01 	vldr	s15, [r0, #4]
 8010fbe:	ee67 7a80 	vmul.f32	s15, s15, s0
 8010fc2:	edc0 7a01 	vstr	s15, [r0, #4]
 8010fc6:	edd0 7a02 	vldr	s15, [r0, #8]
 8010fca:	ee27 0a80 	vmul.f32	s0, s15, s0
 8010fce:	edd0 7a03 	vldr	s15, [r0, #12]
 8010fd2:	ed80 0a02 	vstr	s0, [r0, #8]
 8010fd6:	ee67 7aa0 	vmul.f32	s15, s15, s1
 8010fda:	edc0 7a03 	vstr	s15, [r0, #12]
 8010fde:	edd0 7a04 	vldr	s15, [r0, #16]
 8010fe2:	ee67 7aa0 	vmul.f32	s15, s15, s1
 8010fe6:	edc0 7a04 	vstr	s15, [r0, #16]
 8010fea:	edd0 7a05 	vldr	s15, [r0, #20]
 8010fee:	ee67 0aa0 	vmul.f32	s1, s15, s1
 8010ff2:	edc0 0a05 	vstr	s1, [r0, #20]
 8010ff6:	4770      	bx	lr

08010ff8 <_ZN8touchgfx9Matrix3x36rotateEf>:
 8010ff8:	b510      	push	{r4, lr}
 8010ffa:	eddf 7a24 	vldr	s15, [pc, #144]	@ 801108c <_ZN8touchgfx9Matrix3x36rotateEf+0x94>
 8010ffe:	ee20 0a27 	vmul.f32	s0, s0, s15
 8011002:	eddf 7a23 	vldr	s15, [pc, #140]	@ 8011090 <_ZN8touchgfx9Matrix3x36rotateEf+0x98>
 8011006:	ed2d 8b02 	vpush	{d8}
 801100a:	eec0 8a27 	vdiv.f32	s17, s0, s15
 801100e:	4604      	mov	r4, r0
 8011010:	eeb0 0a68 	vmov.f32	s0, s17
 8011014:	f010 fd58 	bl	8021ac8 <cosf>
 8011018:	eeb0 8a40 	vmov.f32	s16, s0
 801101c:	eeb0 0a68 	vmov.f32	s0, s17
 8011020:	f010 fd96 	bl	8021b50 <sinf>
 8011024:	edd4 6a03 	vldr	s13, [r4, #12]
 8011028:	edd4 4a00 	vldr	s9, [r4]
 801102c:	ed94 7a04 	vldr	s14, [r4, #16]
 8011030:	ed94 5a01 	vldr	s10, [r4, #4]
 8011034:	edd4 5a02 	vldr	s11, [r4, #8]
 8011038:	ee60 7a66 	vnmul.f32	s15, s0, s13
 801103c:	ee66 6a88 	vmul.f32	s13, s13, s16
 8011040:	eee8 7a24 	vfma.f32	s15, s16, s9
 8011044:	eee0 6a24 	vfma.f32	s13, s0, s9
 8011048:	edc4 7a00 	vstr	s15, [r4]
 801104c:	ee60 7a47 	vnmul.f32	s15, s0, s14
 8011050:	ee27 7a08 	vmul.f32	s14, s14, s16
 8011054:	eee8 7a05 	vfma.f32	s15, s16, s10
 8011058:	eea0 7a05 	vfma.f32	s14, s0, s10
 801105c:	edc4 7a01 	vstr	s15, [r4, #4]
 8011060:	edd4 7a05 	vldr	s15, [r4, #20]
 8011064:	edc4 6a03 	vstr	s13, [r4, #12]
 8011068:	ee20 6a67 	vnmul.f32	s12, s0, s15
 801106c:	ee67 7a88 	vmul.f32	s15, s15, s16
 8011070:	eea8 6a25 	vfma.f32	s12, s16, s11
 8011074:	ecbd 8b02 	vpop	{d8}
 8011078:	eee0 7a25 	vfma.f32	s15, s0, s11
 801107c:	ed84 6a02 	vstr	s12, [r4, #8]
 8011080:	ed84 7a04 	vstr	s14, [r4, #16]
 8011084:	edc4 7a05 	vstr	s15, [r4, #20]
 8011088:	bd10      	pop	{r4, pc}
 801108a:	bf00      	nop
 801108c:	40490fdb 	.word	0x40490fdb
 8011090:	43340000 	.word	0x43340000

08011094 <_ZN8touchgfx9Matrix3x39translateEff>:
 8011094:	ed90 6a06 	vldr	s12, [r0, #24]
 8011098:	edd0 7a00 	vldr	s15, [r0]
 801109c:	edd0 6a07 	vldr	s13, [r0, #28]
 80110a0:	ed90 7a08 	vldr	s14, [r0, #32]
 80110a4:	eee6 7a00 	vfma.f32	s15, s12, s0
 80110a8:	edc0 7a00 	vstr	s15, [r0]
 80110ac:	edd0 7a01 	vldr	s15, [r0, #4]
 80110b0:	eee6 7a80 	vfma.f32	s15, s13, s0
 80110b4:	edc0 7a01 	vstr	s15, [r0, #4]
 80110b8:	edd0 7a02 	vldr	s15, [r0, #8]
 80110bc:	eee7 7a00 	vfma.f32	s15, s14, s0
 80110c0:	edc0 7a02 	vstr	s15, [r0, #8]
 80110c4:	edd0 7a03 	vldr	s15, [r0, #12]
 80110c8:	eee6 7a20 	vfma.f32	s15, s12, s1
 80110cc:	edc0 7a03 	vstr	s15, [r0, #12]
 80110d0:	edd0 7a04 	vldr	s15, [r0, #16]
 80110d4:	eee6 7aa0 	vfma.f32	s15, s13, s1
 80110d8:	edc0 7a04 	vstr	s15, [r0, #16]
 80110dc:	edd0 7a05 	vldr	s15, [r0, #20]
 80110e0:	eee7 7a20 	vfma.f32	s15, s14, s1
 80110e4:	edc0 7a05 	vstr	s15, [r0, #20]
 80110e8:	4770      	bx	lr

080110ea <_ZNK8touchgfx9Matrix3x315affineTransformEff>:
 80110ea:	edd0 6a01 	vldr	s13, [r0, #4]
 80110ee:	edd0 7a04 	vldr	s15, [r0, #16]
 80110f2:	ed90 7a03 	vldr	s14, [r0, #12]
 80110f6:	ee60 7aa7 	vmul.f32	s15, s1, s15
 80110fa:	ee60 0aa6 	vmul.f32	s1, s1, s13
 80110fe:	edd0 6a00 	vldr	s13, [r0]
 8011102:	eee7 7a00 	vfma.f32	s15, s14, s0
 8011106:	b084      	sub	sp, #16
 8011108:	eee6 0a80 	vfma.f32	s1, s13, s0
 801110c:	ed90 7a05 	vldr	s14, [r0, #20]
 8011110:	ed90 0a02 	vldr	s0, [r0, #8]
 8011114:	ee30 0a80 	vadd.f32	s0, s1, s0
 8011118:	ee77 0a87 	vadd.f32	s1, s15, s14
 801111c:	b004      	add	sp, #16
 801111e:	4770      	bx	lr

08011120 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt>:
 8011120:	b530      	push	{r4, r5, lr}
 8011122:	8083      	strh	r3, [r0, #4]
 8011124:	f8bd 300c 	ldrh.w	r3, [sp, #12]
 8011128:	80c3      	strh	r3, [r0, #6]
 801112a:	f89d 3010 	ldrb.w	r3, [sp, #16]
 801112e:	7203      	strb	r3, [r0, #8]
 8011130:	f89d 3014 	ldrb.w	r3, [sp, #20]
 8011134:	f89d 5018 	ldrb.w	r5, [sp, #24]
 8011138:	7243      	strb	r3, [r0, #9]
 801113a:	7a83      	ldrb	r3, [r0, #10]
 801113c:	6141      	str	r1, [r0, #20]
 801113e:	f365 0306 	bfi	r3, r5, #0, #7
 8011142:	f89d 501c 	ldrb.w	r5, [sp, #28]
 8011146:	8302      	strh	r2, [r0, #24]
 8011148:	f365 13c7 	bfi	r3, r5, #7, #1
 801114c:	7283      	strb	r3, [r0, #10]
 801114e:	f89d 3020 	ldrb.w	r3, [sp, #32]
 8011152:	72c3      	strb	r3, [r0, #11]
 8011154:	f89d 3024 	ldrb.w	r3, [sp, #36]	@ 0x24
 8011158:	7303      	strb	r3, [r0, #12]
 801115a:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
 801115e:	81c3      	strh	r3, [r0, #14]
 8011160:	f8bd 302c 	ldrh.w	r3, [sp, #44]	@ 0x2c
 8011164:	8203      	strh	r3, [r0, #16]
 8011166:	4b01      	ldr	r3, [pc, #4]	@ (801116c <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt+0x4c>)
 8011168:	6003      	str	r3, [r0, #0]
 801116a:	bd30      	pop	{r4, r5, pc}
 801116c:	08024dbc 	.word	0x08024dbc

08011170 <_ZNK8touchgfx9ConstFont4findEt>:
 8011170:	b5f0      	push	{r4, r5, r6, r7, lr}
 8011172:	6944      	ldr	r4, [r0, #20]
 8011174:	b3bc      	cbz	r4, 80111e6 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8011176:	88a3      	ldrh	r3, [r4, #4]
 8011178:	8b02      	ldrh	r2, [r0, #24]
 801117a:	1acb      	subs	r3, r1, r3
 801117c:	f102 32ff 	add.w	r2, r2, #4294967295
 8011180:	d431      	bmi.n	80111e6 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8011182:	4293      	cmp	r3, r2
 8011184:	dd0c      	ble.n	80111a0 <_ZNK8touchgfx9ConstFont4findEt+0x30>
 8011186:	230e      	movs	r3, #14
 8011188:	fb03 4302 	mla	r3, r3, r2, r4
 801118c:	889b      	ldrh	r3, [r3, #4]
 801118e:	1a5b      	subs	r3, r3, r1
 8011190:	1ad3      	subs	r3, r2, r3
 8011192:	429a      	cmp	r2, r3
 8011194:	db27      	blt.n	80111e6 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8011196:	2b00      	cmp	r3, #0
 8011198:	bfbc      	itt	lt
 801119a:	2302      	movlt	r3, #2
 801119c:	fb92 f3f3 	sdivlt	r3, r2, r3
 80111a0:	2500      	movs	r5, #0
 80111a2:	260e      	movs	r6, #14
 80111a4:	4295      	cmp	r5, r2
 80111a6:	dc1e      	bgt.n	80111e6 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 80111a8:	fb06 4003 	mla	r0, r6, r3, r4
 80111ac:	8887      	ldrh	r7, [r0, #4]
 80111ae:	42b9      	cmp	r1, r7
 80111b0:	d01a      	beq.n	80111e8 <_ZNK8touchgfx9ConstFont4findEt+0x78>
 80111b2:	d20d      	bcs.n	80111d0 <_ZNK8touchgfx9ConstFont4findEt+0x60>
 80111b4:	1e5a      	subs	r2, r3, #1
 80111b6:	4295      	cmp	r5, r2
 80111b8:	dc15      	bgt.n	80111e6 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 80111ba:	f830 3c0a 	ldrh.w	r3, [r0, #-10]
 80111be:	1a5b      	subs	r3, r3, r1
 80111c0:	1ad3      	subs	r3, r2, r3
 80111c2:	429a      	cmp	r2, r3
 80111c4:	db0f      	blt.n	80111e6 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 80111c6:	429d      	cmp	r5, r3
 80111c8:	ddec      	ble.n	80111a4 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 80111ca:	1953      	adds	r3, r2, r5
 80111cc:	105b      	asrs	r3, r3, #1
 80111ce:	e7e9      	b.n	80111a4 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 80111d0:	1c5d      	adds	r5, r3, #1
 80111d2:	42aa      	cmp	r2, r5
 80111d4:	db07      	blt.n	80111e6 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 80111d6:	8a43      	ldrh	r3, [r0, #18]
 80111d8:	1acb      	subs	r3, r1, r3
 80111da:	442b      	add	r3, r5
 80111dc:	429d      	cmp	r5, r3
 80111de:	dc02      	bgt.n	80111e6 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 80111e0:	429a      	cmp	r2, r3
 80111e2:	dadf      	bge.n	80111a4 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 80111e4:	e7f1      	b.n	80111ca <_ZNK8touchgfx9ConstFont4findEt+0x5a>
 80111e6:	2000      	movs	r0, #0
 80111e8:	bdf0      	pop	{r4, r5, r6, r7, pc}

080111ea <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh>:
 80111ea:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80111ec:	4604      	mov	r4, r0
 80111ee:	4617      	mov	r7, r2
 80111f0:	461e      	mov	r6, r3
 80111f2:	b911      	cbnz	r1, 80111fa <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x10>
 80111f4:	2500      	movs	r5, #0
 80111f6:	4628      	mov	r0, r5
 80111f8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80111fa:	290a      	cmp	r1, #10
 80111fc:	d0fa      	beq.n	80111f4 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 80111fe:	f64f 62ff 	movw	r2, #65279	@ 0xfeff
 8011202:	4291      	cmp	r1, r2
 8011204:	d0f6      	beq.n	80111f4 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 8011206:	f242 020b 	movw	r2, #8203	@ 0x200b
 801120a:	4291      	cmp	r1, r2
 801120c:	d0f2      	beq.n	80111f4 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 801120e:	f7ff ffaf 	bl	8011170 <_ZNK8touchgfx9ConstFont4findEt>
 8011212:	4605      	mov	r5, r0
 8011214:	b950      	cbnz	r0, 801122c <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x42>
 8011216:	6823      	ldr	r3, [r4, #0]
 8011218:	4620      	mov	r0, r4
 801121a:	691b      	ldr	r3, [r3, #16]
 801121c:	4798      	blx	r3
 801121e:	4601      	mov	r1, r0
 8011220:	4620      	mov	r0, r4
 8011222:	f7ff ffa5 	bl	8011170 <_ZNK8touchgfx9ConstFont4findEt>
 8011226:	4605      	mov	r5, r0
 8011228:	2800      	cmp	r0, #0
 801122a:	d0e3      	beq.n	80111f4 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 801122c:	6823      	ldr	r3, [r4, #0]
 801122e:	4629      	mov	r1, r5
 8011230:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8011232:	4620      	mov	r0, r4
 8011234:	4798      	blx	r3
 8011236:	6038      	str	r0, [r7, #0]
 8011238:	6823      	ldr	r3, [r4, #0]
 801123a:	4620      	mov	r0, r4
 801123c:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 801123e:	4798      	blx	r3
 8011240:	7030      	strb	r0, [r6, #0]
 8011242:	e7d8      	b.n	80111f6 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xc>

08011244 <_ZN8touchgfx4clzuEm>:
 8011244:	4603      	mov	r3, r0
 8011246:	b1c8      	cbz	r0, 801127c <_ZN8touchgfx4clzuEm+0x38>
 8011248:	0c02      	lsrs	r2, r0, #16
 801124a:	0412      	lsls	r2, r2, #16
 801124c:	b9a2      	cbnz	r2, 8011278 <_ZN8touchgfx4clzuEm+0x34>
 801124e:	0403      	lsls	r3, r0, #16
 8011250:	2010      	movs	r0, #16
 8011252:	f013 4f7f 	tst.w	r3, #4278190080	@ 0xff000000
 8011256:	bf04      	itt	eq
 8011258:	021b      	lsleq	r3, r3, #8
 801125a:	3008      	addeq	r0, #8
 801125c:	f013 4f70 	tst.w	r3, #4026531840	@ 0xf0000000
 8011260:	bf04      	itt	eq
 8011262:	011b      	lsleq	r3, r3, #4
 8011264:	3004      	addeq	r0, #4
 8011266:	f013 4f40 	tst.w	r3, #3221225472	@ 0xc0000000
 801126a:	bf04      	itt	eq
 801126c:	009b      	lsleq	r3, r3, #2
 801126e:	3002      	addeq	r0, #2
 8011270:	2b00      	cmp	r3, #0
 8011272:	db04      	blt.n	801127e <_ZN8touchgfx4clzuEm+0x3a>
 8011274:	3001      	adds	r0, #1
 8011276:	4770      	bx	lr
 8011278:	2000      	movs	r0, #0
 801127a:	e7ea      	b.n	8011252 <_ZN8touchgfx4clzuEm+0xe>
 801127c:	2020      	movs	r0, #32
 801127e:	4770      	bx	lr

08011280 <_ZN8touchgfx7muldivuEmmmRm>:
 8011280:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 8011284:	460f      	mov	r7, r1
 8011286:	4615      	mov	r5, r2
 8011288:	461e      	mov	r6, r3
 801128a:	4601      	mov	r1, r0
 801128c:	b100      	cbz	r0, 8011290 <_ZN8touchgfx7muldivuEmmmRm+0x10>
 801128e:	b927      	cbnz	r7, 801129a <_ZN8touchgfx7muldivuEmmmRm+0x1a>
 8011290:	2000      	movs	r0, #0
 8011292:	6030      	str	r0, [r6, #0]
 8011294:	b002      	add	sp, #8
 8011296:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801129a:	f7ff ffd3 	bl	8011244 <_ZN8touchgfx4clzuEm>
 801129e:	b980      	cbnz	r0, 80112c2 <_ZN8touchgfx7muldivuEmmmRm+0x42>
 80112a0:	4638      	mov	r0, r7
 80112a2:	f7ff ffcf 	bl	8011244 <_ZN8touchgfx4clzuEm>
 80112a6:	2800      	cmp	r0, #0
 80112a8:	dd05      	ble.n	80112b6 <_ZN8touchgfx7muldivuEmmmRm+0x36>
 80112aa:	4633      	mov	r3, r6
 80112ac:	462a      	mov	r2, r5
 80112ae:	4638      	mov	r0, r7
 80112b0:	f7ff ffe6 	bl	8011280 <_ZN8touchgfx7muldivuEmmmRm>
 80112b4:	e7ee      	b.n	8011294 <_ZN8touchgfx7muldivuEmmmRm+0x14>
 80112b6:	f04f 33ff 	mov.w	r3, #4294967295
 80112ba:	6033      	str	r3, [r6, #0]
 80112bc:	f06f 4000 	mvn.w	r0, #2147483648	@ 0x80000000
 80112c0:	e7e8      	b.n	8011294 <_ZN8touchgfx7muldivuEmmmRm+0x14>
 80112c2:	fa37 f800 	lsrs.w	r8, r7, r0
 80112c6:	fb07 f301 	mul.w	r3, r7, r1
 80112ca:	d105      	bne.n	80112d8 <_ZN8touchgfx7muldivuEmmmRm+0x58>
 80112cc:	fbb3 f0f5 	udiv	r0, r3, r5
 80112d0:	fb05 3510 	mls	r5, r5, r0, r3
 80112d4:	6035      	str	r5, [r6, #0]
 80112d6:	e7dd      	b.n	8011294 <_ZN8touchgfx7muldivuEmmmRm+0x14>
 80112d8:	2301      	movs	r3, #1
 80112da:	fa01 fa00 	lsl.w	sl, r1, r0
 80112de:	fa03 f000 	lsl.w	r0, r3, r0
 80112e2:	3801      	subs	r0, #1
 80112e4:	462a      	mov	r2, r5
 80112e6:	4633      	mov	r3, r6
 80112e8:	4038      	ands	r0, r7
 80112ea:	f7ff ffc9 	bl	8011280 <_ZN8touchgfx7muldivuEmmmRm>
 80112ee:	fbba f9f5 	udiv	r9, sl, r5
 80112f2:	462a      	mov	r2, r5
 80112f4:	4607      	mov	r7, r0
 80112f6:	ab01      	add	r3, sp, #4
 80112f8:	fb05 a119 	mls	r1, r5, r9, sl
 80112fc:	4640      	mov	r0, r8
 80112fe:	f7ff ffbf 	bl	8011280 <_ZN8touchgfx7muldivuEmmmRm>
 8011302:	9b01      	ldr	r3, [sp, #4]
 8011304:	6832      	ldr	r2, [r6, #0]
 8011306:	fb08 f409 	mul.w	r4, r8, r9
 801130a:	441a      	add	r2, r3
 801130c:	fbb2 f3f5 	udiv	r3, r2, r5
 8011310:	441c      	add	r4, r3
 8011312:	443c      	add	r4, r7
 8011314:	4420      	add	r0, r4
 8011316:	fb05 2513 	mls	r5, r5, r3, r2
 801131a:	e7db      	b.n	80112d4 <_ZN8touchgfx7muldivuEmmmRm+0x54>

0801131c <_ZN8touchgfx6muldivElllRl>:
 801131c:	b573      	push	{r0, r1, r4, r5, r6, lr}
 801131e:	2800      	cmp	r0, #0
 8011320:	bfba      	itte	lt
 8011322:	4240      	neglt	r0, r0
 8011324:	f04f 34ff 	movlt.w	r4, #4294967295
 8011328:	2401      	movge	r4, #1
 801132a:	2900      	cmp	r1, #0
 801132c:	bfbc      	itt	lt
 801132e:	4249      	neglt	r1, r1
 8011330:	4264      	neglt	r4, r4
 8011332:	2a00      	cmp	r2, #0
 8011334:	bfb6      	itet	lt
 8011336:	4265      	neglt	r5, r4
 8011338:	4625      	movge	r5, r4
 801133a:	4252      	neglt	r2, r2
 801133c:	4288      	cmp	r0, r1
 801133e:	461e      	mov	r6, r3
 8011340:	bfc2      	ittt	gt
 8011342:	4603      	movgt	r3, r0
 8011344:	4608      	movgt	r0, r1
 8011346:	4619      	movgt	r1, r3
 8011348:	ab01      	add	r3, sp, #4
 801134a:	f7ff ff99 	bl	8011280 <_ZN8touchgfx7muldivuEmmmRm>
 801134e:	9b01      	ldr	r3, [sp, #4]
 8011350:	4368      	muls	r0, r5
 8011352:	435c      	muls	r4, r3
 8011354:	6034      	str	r4, [r6, #0]
 8011356:	b002      	add	sp, #8
 8011358:	bd70      	pop	{r4, r5, r6, pc}

0801135a <_ZNK8touchgfx10ClickEvent12getEventTypeEv>:
 801135a:	2000      	movs	r0, #0
 801135c:	4770      	bx	lr

0801135e <_ZNK8touchgfx9DragEvent12getEventTypeEv>:
 801135e:	2001      	movs	r0, #1
 8011360:	4770      	bx	lr

08011362 <_ZNK8touchgfx12GestureEvent12getEventTypeEv>:
 8011362:	2002      	movs	r0, #2
 8011364:	4770      	bx	lr

08011366 <_ZN8touchgfx6ScreenD1Ev>:
 8011366:	4770      	bx	lr

08011368 <_ZN8touchgfx12GestureEventD1Ev>:
 8011368:	4770      	bx	lr

0801136a <_ZN8touchgfx9DragEventD1Ev>:
 801136a:	4770      	bx	lr

0801136c <_ZN8touchgfx10ClickEventD1Ev>:
 801136c:	4770      	bx	lr

0801136e <_ZN8touchgfx10ClickEventD0Ev>:
 801136e:	b510      	push	{r4, lr}
 8011370:	210c      	movs	r1, #12
 8011372:	4604      	mov	r4, r0
 8011374:	f010 fb5f 	bl	8021a36 <_ZdlPvj>
 8011378:	4620      	mov	r0, r4
 801137a:	bd10      	pop	{r4, pc}

0801137c <_ZN8touchgfx9DragEventD0Ev>:
 801137c:	b510      	push	{r4, lr}
 801137e:	2110      	movs	r1, #16
 8011380:	4604      	mov	r4, r0
 8011382:	f010 fb58 	bl	8021a36 <_ZdlPvj>
 8011386:	4620      	mov	r0, r4
 8011388:	bd10      	pop	{r4, pc}

0801138a <_ZN8touchgfx12GestureEventD0Ev>:
 801138a:	b510      	push	{r4, lr}
 801138c:	210c      	movs	r1, #12
 801138e:	4604      	mov	r4, r0
 8011390:	f010 fb51 	bl	8021a36 <_ZdlPvj>
 8011394:	4620      	mov	r0, r4
 8011396:	bd10      	pop	{r4, pc}

08011398 <_ZN8touchgfx6ScreenD0Ev>:
 8011398:	b510      	push	{r4, lr}
 801139a:	213c      	movs	r1, #60	@ 0x3c
 801139c:	4604      	mov	r4, r0
 801139e:	f010 fb4a 	bl	8021a36 <_ZdlPvj>
 80113a2:	4620      	mov	r0, r4
 80113a4:	bd10      	pop	{r4, pc}
	...

080113a8 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE>:
 80113a8:	b530      	push	{r4, r5, lr}
 80113aa:	460d      	mov	r5, r1
 80113ac:	6b01      	ldr	r1, [r0, #48]	@ 0x30
 80113ae:	b087      	sub	sp, #28
 80113b0:	4604      	mov	r4, r0
 80113b2:	b301      	cbz	r1, 80113f6 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x4e>
 80113b4:	a801      	add	r0, sp, #4
 80113b6:	f7ff faf7 	bl	80109a8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 80113ba:	892a      	ldrh	r2, [r5, #8]
 80113bc:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 80113c0:	7928      	ldrb	r0, [r5, #4]
 80113c2:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
 80113c6:	f88d 0010 	strb.w	r0, [sp, #16]
 80113ca:	1ad2      	subs	r2, r2, r3
 80113cc:	8ea3      	ldrh	r3, [r4, #52]	@ 0x34
 80113ce:	6b20      	ldr	r0, [r4, #48]	@ 0x30
 80113d0:	f8ad 1012 	strh.w	r1, [sp, #18]
 80113d4:	441a      	add	r2, r3
 80113d6:	896b      	ldrh	r3, [r5, #10]
 80113d8:	f8bd 5006 	ldrh.w	r5, [sp, #6]
 80113dc:	f8ad 2014 	strh.w	r2, [sp, #20]
 80113e0:	1b5b      	subs	r3, r3, r5
 80113e2:	8ee5      	ldrh	r5, [r4, #54]	@ 0x36
 80113e4:	442b      	add	r3, r5
 80113e6:	4d05      	ldr	r5, [pc, #20]	@ (80113fc <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x54>)
 80113e8:	9503      	str	r5, [sp, #12]
 80113ea:	f8ad 3016 	strh.w	r3, [sp, #22]
 80113ee:	6803      	ldr	r3, [r0, #0]
 80113f0:	a903      	add	r1, sp, #12
 80113f2:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 80113f4:	4798      	blx	r3
 80113f6:	b007      	add	sp, #28
 80113f8:	bd30      	pop	{r4, r5, pc}
 80113fa:	bf00      	nop
 80113fc:	08024e4c 	.word	0x08024e4c

08011400 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE>:
 8011400:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8011404:	6b03      	ldr	r3, [r0, #48]	@ 0x30
 8011406:	b08a      	sub	sp, #40	@ 0x28
 8011408:	4604      	mov	r4, r0
 801140a:	460d      	mov	r5, r1
 801140c:	b113      	cbz	r3, 8011414 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x14>
 801140e:	790b      	ldrb	r3, [r1, #4]
 8011410:	2b00      	cmp	r3, #0
 8011412:	d044      	beq.n	801149e <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 8011414:	f104 0804 	add.w	r8, r4, #4
 8011418:	4641      	mov	r1, r8
 801141a:	a803      	add	r0, sp, #12
 801141c:	f7ff fac4 	bl	80109a8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8011420:	792b      	ldrb	r3, [r5, #4]
 8011422:	f9bd 700c 	ldrsh.w	r7, [sp, #12]
 8011426:	f9bd 600e 	ldrsh.w	r6, [sp, #14]
 801142a:	b983      	cbnz	r3, 801144e <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x4e>
 801142c:	892a      	ldrh	r2, [r5, #8]
 801142e:	88e9      	ldrh	r1, [r5, #6]
 8011430:	f104 0336 	add.w	r3, r4, #54	@ 0x36
 8011434:	1b92      	subs	r2, r2, r6
 8011436:	1bc9      	subs	r1, r1, r7
 8011438:	9301      	str	r3, [sp, #4]
 801143a:	f104 0334 	add.w	r3, r4, #52	@ 0x34
 801143e:	9300      	str	r3, [sp, #0]
 8011440:	b212      	sxth	r2, r2
 8011442:	f104 0330 	add.w	r3, r4, #48	@ 0x30
 8011446:	b209      	sxth	r1, r1
 8011448:	4640      	mov	r0, r8
 801144a:	f7f8 fe6b 	bl	800a124 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>
 801144e:	6b21      	ldr	r1, [r4, #48]	@ 0x30
 8011450:	b329      	cbz	r1, 801149e <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 8011452:	a805      	add	r0, sp, #20
 8011454:	f7ff faa8 	bl	80109a8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8011458:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 801145c:	792b      	ldrb	r3, [r5, #4]
 801145e:	6b20      	ldr	r0, [r4, #48]	@ 0x30
 8011460:	f88d 3020 	strb.w	r3, [sp, #32]
 8011464:	1abf      	subs	r7, r7, r2
 8011466:	88ea      	ldrh	r2, [r5, #6]
 8011468:	4417      	add	r7, r2
 801146a:	8ea2      	ldrh	r2, [r4, #52]	@ 0x34
 801146c:	4417      	add	r7, r2
 801146e:	f8bd 2016 	ldrh.w	r2, [sp, #22]
 8011472:	f8ad 7022 	strh.w	r7, [sp, #34]	@ 0x22
 8011476:	1ab6      	subs	r6, r6, r2
 8011478:	892a      	ldrh	r2, [r5, #8]
 801147a:	4416      	add	r6, r2
 801147c:	8ee2      	ldrh	r2, [r4, #54]	@ 0x36
 801147e:	4416      	add	r6, r2
 8011480:	f8ad 6024 	strh.w	r6, [sp, #36]	@ 0x24
 8011484:	4a07      	ldr	r2, [pc, #28]	@ (80114a4 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0xa4>)
 8011486:	9207      	str	r2, [sp, #28]
 8011488:	2600      	movs	r6, #0
 801148a:	f8ad 6026 	strh.w	r6, [sp, #38]	@ 0x26
 801148e:	6803      	ldr	r3, [r0, #0]
 8011490:	a907      	add	r1, sp, #28
 8011492:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8011494:	4798      	blx	r3
 8011496:	792b      	ldrb	r3, [r5, #4]
 8011498:	b10b      	cbz	r3, 801149e <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 801149a:	e9c4 660c 	strd	r6, r6, [r4, #48]	@ 0x30
 801149e:	b00a      	add	sp, #40	@ 0x28
 80114a0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80114a4:	08024e24 	.word	0x08024e24

080114a8 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE>:
 80114a8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80114ac:	460c      	mov	r4, r1
 80114ae:	6b01      	ldr	r1, [r0, #48]	@ 0x30
 80114b0:	b088      	sub	sp, #32
 80114b2:	4605      	mov	r5, r0
 80114b4:	2900      	cmp	r1, #0
 80114b6:	d06d      	beq.n	8011594 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xec>
 80114b8:	4668      	mov	r0, sp
 80114ba:	f7ff fa75 	bl	80109a8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 80114be:	8ea9      	ldrh	r1, [r5, #52]	@ 0x34
 80114c0:	88e3      	ldrh	r3, [r4, #6]
 80114c2:	f9bd 8000 	ldrsh.w	r8, [sp]
 80114c6:	f9bd 7002 	ldrsh.w	r7, [sp, #2]
 80114ca:	440b      	add	r3, r1
 80114cc:	b21b      	sxth	r3, r3
 80114ce:	4543      	cmp	r3, r8
 80114d0:	db31      	blt.n	8011536 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 80114d2:	f8bd c004 	ldrh.w	ip, [sp, #4]
 80114d6:	44c4      	add	ip, r8
 80114d8:	fa0f fc8c 	sxth.w	ip, ip
 80114dc:	4563      	cmp	r3, ip
 80114de:	da2a      	bge.n	8011536 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 80114e0:	8eea      	ldrh	r2, [r5, #54]	@ 0x36
 80114e2:	8926      	ldrh	r6, [r4, #8]
 80114e4:	4416      	add	r6, r2
 80114e6:	b236      	sxth	r6, r6
 80114e8:	42be      	cmp	r6, r7
 80114ea:	db24      	blt.n	8011536 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 80114ec:	f8bd 0006 	ldrh.w	r0, [sp, #6]
 80114f0:	4438      	add	r0, r7
 80114f2:	b200      	sxth	r0, r0
 80114f4:	4286      	cmp	r6, r0
 80114f6:	da1e      	bge.n	8011536 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 80114f8:	8963      	ldrh	r3, [r4, #10]
 80114fa:	4419      	add	r1, r3
 80114fc:	b209      	sxth	r1, r1
 80114fe:	4541      	cmp	r1, r8
 8011500:	db08      	blt.n	8011514 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 8011502:	4561      	cmp	r1, ip
 8011504:	da06      	bge.n	8011514 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 8011506:	89a3      	ldrh	r3, [r4, #12]
 8011508:	441a      	add	r2, r3
 801150a:	b212      	sxth	r2, r2
 801150c:	42ba      	cmp	r2, r7
 801150e:	db01      	blt.n	8011514 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 8011510:	4282      	cmp	r2, r0
 8011512:	db10      	blt.n	8011536 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8011514:	4b21      	ldr	r3, [pc, #132]	@ (801159c <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf4>)
 8011516:	9304      	str	r3, [sp, #16]
 8011518:	2302      	movs	r3, #2
 801151a:	f88d 3014 	strb.w	r3, [sp, #20]
 801151e:	6b28      	ldr	r0, [r5, #48]	@ 0x30
 8011520:	2300      	movs	r3, #0
 8011522:	f8ad 3016 	strh.w	r3, [sp, #22]
 8011526:	f8ad 3018 	strh.w	r3, [sp, #24]
 801152a:	f8ad 301a 	strh.w	r3, [sp, #26]
 801152e:	6803      	ldr	r3, [r0, #0]
 8011530:	a904      	add	r1, sp, #16
 8011532:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8011534:	4798      	blx	r3
 8011536:	1d29      	adds	r1, r5, #4
 8011538:	a802      	add	r0, sp, #8
 801153a:	f7ff fa35 	bl	80109a8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801153e:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 8011542:	88e0      	ldrh	r0, [r4, #6]
 8011544:	7921      	ldrb	r1, [r4, #4]
 8011546:	f8b5 c034 	ldrh.w	ip, [r5, #52]	@ 0x34
 801154a:	8922      	ldrh	r2, [r4, #8]
 801154c:	8eee      	ldrh	r6, [r5, #54]	@ 0x36
 801154e:	f88d 1014 	strb.w	r1, [sp, #20]
 8011552:	eba3 0808 	sub.w	r8, r3, r8
 8011556:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 801155a:	1bdf      	subs	r7, r3, r7
 801155c:	b2bb      	uxth	r3, r7
 801155e:	fa1f f888 	uxth.w	r8, r8
 8011562:	8967      	ldrh	r7, [r4, #10]
 8011564:	89a4      	ldrh	r4, [r4, #12]
 8011566:	4440      	add	r0, r8
 8011568:	4460      	add	r0, ip
 801156a:	441a      	add	r2, r3
 801156c:	44b8      	add	r8, r7
 801156e:	4423      	add	r3, r4
 8011570:	f8ad 0016 	strh.w	r0, [sp, #22]
 8011574:	4433      	add	r3, r6
 8011576:	4432      	add	r2, r6
 8011578:	44e0      	add	r8, ip
 801157a:	4c09      	ldr	r4, [pc, #36]	@ (80115a0 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf8>)
 801157c:	6b28      	ldr	r0, [r5, #48]	@ 0x30
 801157e:	9404      	str	r4, [sp, #16]
 8011580:	f8ad 2018 	strh.w	r2, [sp, #24]
 8011584:	f8ad 801a 	strh.w	r8, [sp, #26]
 8011588:	f8ad 301c 	strh.w	r3, [sp, #28]
 801158c:	6803      	ldr	r3, [r0, #0]
 801158e:	a904      	add	r1, sp, #16
 8011590:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8011592:	4798      	blx	r3
 8011594:	b008      	add	sp, #32
 8011596:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801159a:	bf00      	nop
 801159c:	08024e24 	.word	0x08024e24
 80115a0:	08024e38 	.word	0x08024e38

080115a4 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>:
 80115a4:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80115a6:	4604      	mov	r4, r0
 80115a8:	f934 2f0c 	ldrsh.w	r2, [r4, #12]!
 80115ac:	3201      	adds	r2, #1
 80115ae:	d112      	bne.n	80115d6 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv+0x32>
 80115b0:	6803      	ldr	r3, [r0, #0]
 80115b2:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 80115b6:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 80115ba:	f8ad 1004 	strh.w	r1, [sp, #4]
 80115be:	2500      	movs	r5, #0
 80115c0:	9500      	str	r5, [sp, #0]
 80115c2:	466d      	mov	r5, sp
 80115c4:	4629      	mov	r1, r5
 80115c6:	f8ad 2006 	strh.w	r2, [sp, #6]
 80115ca:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80115cc:	4798      	blx	r3
 80115ce:	e895 0003 	ldmia.w	r5, {r0, r1}
 80115d2:	e884 0003 	stmia.w	r4, {r0, r1}
 80115d6:	4620      	mov	r0, r4
 80115d8:	b003      	add	sp, #12
 80115da:	bd30      	pop	{r4, r5, pc}

080115dc <_ZN8touchgfx8Drawable13getCachedAbsXEv>:
 80115dc:	b513      	push	{r0, r1, r4, lr}
 80115de:	f9b0 3020 	ldrsh.w	r3, [r0, #32]
 80115e2:	3301      	adds	r3, #1
 80115e4:	4604      	mov	r4, r0
 80115e6:	d109      	bne.n	80115fc <_ZN8touchgfx8Drawable13getCachedAbsXEv+0x20>
 80115e8:	4601      	mov	r1, r0
 80115ea:	4668      	mov	r0, sp
 80115ec:	f7ff f9dc 	bl	80109a8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 80115f0:	f8bd 3000 	ldrh.w	r3, [sp]
 80115f4:	8423      	strh	r3, [r4, #32]
 80115f6:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 80115fa:	8463      	strh	r3, [r4, #34]	@ 0x22
 80115fc:	f9b4 0020 	ldrsh.w	r0, [r4, #32]
 8011600:	b002      	add	sp, #8
 8011602:	bd10      	pop	{r4, pc}

08011604 <_ZN8touchgfx8Drawable13getCachedAbsYEv>:
 8011604:	b513      	push	{r0, r1, r4, lr}
 8011606:	f9b0 3022 	ldrsh.w	r3, [r0, #34]	@ 0x22
 801160a:	3301      	adds	r3, #1
 801160c:	4604      	mov	r4, r0
 801160e:	d109      	bne.n	8011624 <_ZN8touchgfx8Drawable13getCachedAbsYEv+0x20>
 8011610:	4601      	mov	r1, r0
 8011612:	4668      	mov	r0, sp
 8011614:	f7ff f9c8 	bl	80109a8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8011618:	f8bd 3000 	ldrh.w	r3, [sp]
 801161c:	8423      	strh	r3, [r4, #32]
 801161e:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8011622:	8463      	strh	r3, [r4, #34]	@ 0x22
 8011624:	f9b4 0022 	ldrsh.w	r0, [r4, #34]	@ 0x22
 8011628:	b002      	add	sp, #8
 801162a:	bd10      	pop	{r4, pc}

0801162c <_ZN8touchgfx6ScreenC1Ev>:
 801162c:	b570      	push	{r4, r5, r6, lr}
 801162e:	4605      	mov	r5, r0
 8011630:	4b16      	ldr	r3, [pc, #88]	@ (801168c <_ZN8touchgfx6ScreenC1Ev+0x60>)
 8011632:	f845 3b04 	str.w	r3, [r5], #4
 8011636:	2300      	movs	r3, #0
 8011638:	8103      	strh	r3, [r0, #8]
 801163a:	8143      	strh	r3, [r0, #10]
 801163c:	8183      	strh	r3, [r0, #12]
 801163e:	81c3      	strh	r3, [r0, #14]
 8011640:	8203      	strh	r3, [r0, #16]
 8011642:	8243      	strh	r3, [r0, #18]
 8011644:	8283      	strh	r3, [r0, #20]
 8011646:	82c3      	strh	r3, [r0, #22]
 8011648:	e9c0 3306 	strd	r3, r3, [r0, #24]
 801164c:	6203      	str	r3, [r0, #32]
 801164e:	8483      	strh	r3, [r0, #36]	@ 0x24
 8011650:	84c3      	strh	r3, [r0, #38]	@ 0x26
 8011652:	f880 3028 	strb.w	r3, [r0, #40]	@ 0x28
 8011656:	4a0e      	ldr	r2, [pc, #56]	@ (8011690 <_ZN8touchgfx6ScreenC1Ev+0x64>)
 8011658:	6343      	str	r3, [r0, #52]	@ 0x34
 801165a:	e9c0 330b 	strd	r3, r3, [r0, #44]	@ 0x2c
 801165e:	4b0d      	ldr	r3, [pc, #52]	@ (8011694 <_ZN8touchgfx6ScreenC1Ev+0x68>)
 8011660:	6042      	str	r2, [r0, #4]
 8011662:	f9b3 6000 	ldrsh.w	r6, [r3]
 8011666:	6b93      	ldr	r3, [r2, #56]	@ 0x38
 8011668:	4a0b      	ldr	r2, [pc, #44]	@ (8011698 <_ZN8touchgfx6ScreenC1Ev+0x6c>)
 801166a:	4604      	mov	r4, r0
 801166c:	2101      	movs	r1, #1
 801166e:	f880 1029 	strb.w	r1, [r0, #41]	@ 0x29
 8011672:	f880 1038 	strb.w	r1, [r0, #56]	@ 0x38
 8011676:	f9b2 1000 	ldrsh.w	r1, [r2]
 801167a:	4628      	mov	r0, r5
 801167c:	4798      	blx	r3
 801167e:	6863      	ldr	r3, [r4, #4]
 8011680:	4628      	mov	r0, r5
 8011682:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8011684:	4631      	mov	r1, r6
 8011686:	4798      	blx	r3
 8011688:	4620      	mov	r0, r4
 801168a:	bd70      	pop	{r4, r5, r6, pc}
 801168c:	08024e60 	.word	0x08024e60
 8011690:	080249bc 	.word	0x080249bc
 8011694:	20013f20 	.word	0x20013f20
 8011698:	20013f1e 	.word	0x20013f1e

0801169c <_ZN8touchgfx6Screen4drawEv>:
 801169c:	b507      	push	{r0, r1, r2, lr}
 801169e:	4b09      	ldr	r3, [pc, #36]	@ (80116c4 <_ZN8touchgfx6Screen4drawEv+0x28>)
 80116a0:	f9b3 2000 	ldrsh.w	r2, [r3]
 80116a4:	4b08      	ldr	r3, [pc, #32]	@ (80116c8 <_ZN8touchgfx6Screen4drawEv+0x2c>)
 80116a6:	f8ad 2004 	strh.w	r2, [sp, #4]
 80116aa:	f9b3 3000 	ldrsh.w	r3, [r3]
 80116ae:	f8ad 3006 	strh.w	r3, [sp, #6]
 80116b2:	6803      	ldr	r3, [r0, #0]
 80116b4:	2100      	movs	r1, #0
 80116b6:	9100      	str	r1, [sp, #0]
 80116b8:	689b      	ldr	r3, [r3, #8]
 80116ba:	4669      	mov	r1, sp
 80116bc:	4798      	blx	r3
 80116be:	b003      	add	sp, #12
 80116c0:	f85d fb04 	ldr.w	pc, [sp], #4
 80116c4:	20013f1e 	.word	0x20013f1e
 80116c8:	20013f20 	.word	0x20013f20

080116cc <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>:
 80116cc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80116d0:	f9b1 3004 	ldrsh.w	r3, [r1, #4]
 80116d4:	2b00      	cmp	r3, #0
 80116d6:	b089      	sub	sp, #36	@ 0x24
 80116d8:	4680      	mov	r8, r0
 80116da:	460c      	mov	r4, r1
 80116dc:	4615      	mov	r5, r2
 80116de:	dd0e      	ble.n	80116fe <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 80116e0:	f9b1 3006 	ldrsh.w	r3, [r1, #6]
 80116e4:	2b00      	cmp	r3, #0
 80116e6:	dd0a      	ble.n	80116fe <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 80116e8:	4628      	mov	r0, r5
 80116ea:	f7ff ff5b 	bl	80115a4 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 80116ee:	4621      	mov	r1, r4
 80116f0:	f7fd fe2d 	bl	800f34e <_ZNK8touchgfx4Rect9intersectERKS0_>
 80116f4:	69eb      	ldr	r3, [r5, #28]
 80116f6:	b928      	cbnz	r0, 8011704 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x38>
 80116f8:	461d      	mov	r5, r3
 80116fa:	2b00      	cmp	r3, #0
 80116fc:	d1f4      	bne.n	80116e8 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1c>
 80116fe:	b009      	add	sp, #36	@ 0x24
 8011700:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8011704:	ae04      	add	r6, sp, #16
 8011706:	2b00      	cmp	r3, #0
 8011708:	f000 80b5 	beq.w	8011876 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 801170c:	682b      	ldr	r3, [r5, #0]
 801170e:	4629      	mov	r1, r5
 8011710:	68db      	ldr	r3, [r3, #12]
 8011712:	a802      	add	r0, sp, #8
 8011714:	4798      	blx	r3
 8011716:	4628      	mov	r0, r5
 8011718:	f7ff ff60 	bl	80115dc <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 801171c:	f8bd 7008 	ldrh.w	r7, [sp, #8]
 8011720:	4407      	add	r7, r0
 8011722:	4628      	mov	r0, r5
 8011724:	f7ff ff6e 	bl	8011604 <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 8011728:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 801172c:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
 8011730:	f8ad 2014 	strh.w	r2, [sp, #20]
 8011734:	4418      	add	r0, r3
 8011736:	4621      	mov	r1, r4
 8011738:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 801173c:	f8ad 0012 	strh.w	r0, [sp, #18]
 8011740:	b23f      	sxth	r7, r7
 8011742:	4630      	mov	r0, r6
 8011744:	f8ad 3016 	strh.w	r3, [sp, #22]
 8011748:	f8ad 7010 	strh.w	r7, [sp, #16]
 801174c:	f7f8 fdce 	bl	800a2ec <_ZN8touchgfx4RectaNERKS0_>
 8011750:	4628      	mov	r0, r5
 8011752:	f7ff ff27 	bl	80115a4 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 8011756:	4602      	mov	r2, r0
 8011758:	e896 0003 	ldmia.w	r6, {r0, r1}
 801175c:	ab06      	add	r3, sp, #24
 801175e:	e883 0003 	stmia.w	r3, {r0, r1}
 8011762:	4611      	mov	r1, r2
 8011764:	4618      	mov	r0, r3
 8011766:	f7f8 fdc1 	bl	800a2ec <_ZN8touchgfx4RectaNERKS0_>
 801176a:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 801176e:	f9b4 1000 	ldrsh.w	r1, [r4]
 8011772:	f9bd a01a 	ldrsh.w	sl, [sp, #26]
 8011776:	f9bd b01c 	ldrsh.w	fp, [sp, #28]
 801177a:	f9bd 901e 	ldrsh.w	r9, [sp, #30]
 801177e:	4299      	cmp	r1, r3
 8011780:	d10b      	bne.n	801179a <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 8011782:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 8011786:	4552      	cmp	r2, sl
 8011788:	d107      	bne.n	801179a <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 801178a:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
 801178e:	455a      	cmp	r2, fp
 8011790:	d103      	bne.n	801179a <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 8011792:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 8011796:	454a      	cmp	r2, r9
 8011798:	d06d      	beq.n	8011876 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 801179a:	f1bb 0f00 	cmp.w	fp, #0
 801179e:	dd65      	ble.n	801186c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
 80117a0:	f1b9 0f00 	cmp.w	r9, #0
 80117a4:	dd62      	ble.n	801186c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
 80117a6:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 80117aa:	fa1f f08a 	uxth.w	r0, sl
 80117ae:	4552      	cmp	r2, sl
 80117b0:	9000      	str	r0, [sp, #0]
 80117b2:	da12      	bge.n	80117da <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x10e>
 80117b4:	9301      	str	r3, [sp, #4]
 80117b6:	9b00      	ldr	r3, [sp, #0]
 80117b8:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 80117bc:	f8ad 2012 	strh.w	r2, [sp, #18]
 80117c0:	1a9a      	subs	r2, r3, r2
 80117c2:	f8ad 1010 	strh.w	r1, [sp, #16]
 80117c6:	f8ad 0014 	strh.w	r0, [sp, #20]
 80117ca:	f8ad 2016 	strh.w	r2, [sp, #22]
 80117ce:	69ea      	ldr	r2, [r5, #28]
 80117d0:	4631      	mov	r1, r6
 80117d2:	4640      	mov	r0, r8
 80117d4:	f7ff ff7a 	bl	80116cc <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 80117d8:	9b01      	ldr	r3, [sp, #4]
 80117da:	f9b4 2000 	ldrsh.w	r2, [r4]
 80117de:	429a      	cmp	r2, r3
 80117e0:	b29f      	uxth	r7, r3
 80117e2:	da0d      	bge.n	8011800 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x134>
 80117e4:	f8ad 2010 	strh.w	r2, [sp, #16]
 80117e8:	1aba      	subs	r2, r7, r2
 80117ea:	f8ad a012 	strh.w	sl, [sp, #18]
 80117ee:	f8ad 2014 	strh.w	r2, [sp, #20]
 80117f2:	f8ad 9016 	strh.w	r9, [sp, #22]
 80117f6:	69ea      	ldr	r2, [r5, #28]
 80117f8:	4631      	mov	r1, r6
 80117fa:	4640      	mov	r0, r8
 80117fc:	f7ff ff66 	bl	80116cc <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8011800:	8822      	ldrh	r2, [r4, #0]
 8011802:	88a3      	ldrh	r3, [r4, #4]
 8011804:	445f      	add	r7, fp
 8011806:	4413      	add	r3, r2
 8011808:	b29b      	uxth	r3, r3
 801180a:	b2bf      	uxth	r7, r7
 801180c:	b23a      	sxth	r2, r7
 801180e:	b219      	sxth	r1, r3
 8011810:	4291      	cmp	r1, r2
 8011812:	dd0d      	ble.n	8011830 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x164>
 8011814:	1bdb      	subs	r3, r3, r7
 8011816:	f8ad 2010 	strh.w	r2, [sp, #16]
 801181a:	f8ad a012 	strh.w	sl, [sp, #18]
 801181e:	f8ad 3014 	strh.w	r3, [sp, #20]
 8011822:	f8ad 9016 	strh.w	r9, [sp, #22]
 8011826:	69ea      	ldr	r2, [r5, #28]
 8011828:	4631      	mov	r1, r6
 801182a:	4640      	mov	r0, r8
 801182c:	f7ff ff4e 	bl	80116cc <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8011830:	88e2      	ldrh	r2, [r4, #6]
 8011832:	8863      	ldrh	r3, [r4, #2]
 8011834:	4413      	add	r3, r2
 8011836:	9a00      	ldr	r2, [sp, #0]
 8011838:	444a      	add	r2, r9
 801183a:	b29b      	uxth	r3, r3
 801183c:	fa1f f982 	uxth.w	r9, r2
 8011840:	fa0f f289 	sxth.w	r2, r9
 8011844:	b219      	sxth	r1, r3
 8011846:	428a      	cmp	r2, r1
 8011848:	da15      	bge.n	8011876 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 801184a:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 801184e:	f9b4 0000 	ldrsh.w	r0, [r4]
 8011852:	f8ad 1014 	strh.w	r1, [sp, #20]
 8011856:	eba3 0309 	sub.w	r3, r3, r9
 801185a:	f8ad 0010 	strh.w	r0, [sp, #16]
 801185e:	f8ad 2012 	strh.w	r2, [sp, #18]
 8011862:	f8ad 3016 	strh.w	r3, [sp, #22]
 8011866:	69ea      	ldr	r2, [r5, #28]
 8011868:	4631      	mov	r1, r6
 801186a:	e001      	b.n	8011870 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a4>
 801186c:	69ea      	ldr	r2, [r5, #28]
 801186e:	4621      	mov	r1, r4
 8011870:	4640      	mov	r0, r8
 8011872:	f7ff ff2b 	bl	80116cc <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8011876:	4628      	mov	r0, r5
 8011878:	f7ff fe94 	bl	80115a4 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 801187c:	6861      	ldr	r1, [r4, #4]
 801187e:	4602      	mov	r2, r0
 8011880:	6820      	ldr	r0, [r4, #0]
 8011882:	4633      	mov	r3, r6
 8011884:	c303      	stmia	r3!, {r0, r1}
 8011886:	4611      	mov	r1, r2
 8011888:	4630      	mov	r0, r6
 801188a:	f7f8 fd2f 	bl	800a2ec <_ZN8touchgfx4RectaNERKS0_>
 801188e:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
 8011892:	2b00      	cmp	r3, #0
 8011894:	f77f af33 	ble.w	80116fe <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 8011898:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 801189c:	2b00      	cmp	r3, #0
 801189e:	f77f af2e 	ble.w	80116fe <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 80118a2:	4628      	mov	r0, r5
 80118a4:	f7ff fe9a 	bl	80115dc <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 80118a8:	f8bd 3010 	ldrh.w	r3, [sp, #16]
 80118ac:	1a18      	subs	r0, r3, r0
 80118ae:	f8ad 0010 	strh.w	r0, [sp, #16]
 80118b2:	4628      	mov	r0, r5
 80118b4:	f7ff fea6 	bl	8011604 <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 80118b8:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 80118bc:	1a18      	subs	r0, r3, r0
 80118be:	f8ad 0012 	strh.w	r0, [sp, #18]
 80118c2:	682b      	ldr	r3, [r5, #0]
 80118c4:	4631      	mov	r1, r6
 80118c6:	689b      	ldr	r3, [r3, #8]
 80118c8:	4628      	mov	r0, r5
 80118ca:	4798      	blx	r3
 80118cc:	e717      	b.n	80116fe <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>

080118ce <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>:
 80118ce:	b570      	push	{r4, r5, r6, lr}
 80118d0:	460c      	mov	r4, r1
 80118d2:	b086      	sub	sp, #24
 80118d4:	1d06      	adds	r6, r0, #4
 80118d6:	2300      	movs	r3, #0
 80118d8:	4631      	mov	r1, r6
 80118da:	4605      	mov	r5, r0
 80118dc:	a802      	add	r0, sp, #8
 80118de:	9301      	str	r3, [sp, #4]
 80118e0:	f7ff f862 	bl	80109a8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 80118e4:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 80118e8:	8822      	ldrh	r2, [r4, #0]
 80118ea:	f8bd 100a 	ldrh.w	r1, [sp, #10]
 80118ee:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 80118f2:	f8ad 0014 	strh.w	r0, [sp, #20]
 80118f6:	1ad2      	subs	r2, r2, r3
 80118f8:	8863      	ldrh	r3, [r4, #2]
 80118fa:	f8ad 2010 	strh.w	r2, [sp, #16]
 80118fe:	1a5b      	subs	r3, r3, r1
 8011900:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
 8011904:	f8ad 1016 	strh.w	r1, [sp, #22]
 8011908:	aa01      	add	r2, sp, #4
 801190a:	a904      	add	r1, sp, #16
 801190c:	4630      	mov	r0, r6
 801190e:	f8ad 3012 	strh.w	r3, [sp, #18]
 8011912:	f7f8 fdc3 	bl	800a49c <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>
 8011916:	9a01      	ldr	r2, [sp, #4]
 8011918:	b11a      	cbz	r2, 8011922 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE+0x54>
 801191a:	4621      	mov	r1, r4
 801191c:	4628      	mov	r0, r5
 801191e:	f7ff fed5 	bl	80116cc <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8011922:	b006      	add	sp, #24
 8011924:	bd70      	pop	{r4, r5, r6, pc}

08011926 <_ZN8touchgfx6Screen4drawERNS_4RectE>:
 8011926:	b530      	push	{r4, r5, lr}
 8011928:	4602      	mov	r2, r0
 801192a:	4604      	mov	r4, r0
 801192c:	f852 0f08 	ldr.w	r0, [r2, #8]!
 8011930:	b085      	sub	sp, #20
 8011932:	460d      	mov	r5, r1
 8011934:	6851      	ldr	r1, [r2, #4]
 8011936:	466b      	mov	r3, sp
 8011938:	c303      	stmia	r3!, {r0, r1}
 801193a:	4629      	mov	r1, r5
 801193c:	4668      	mov	r0, sp
 801193e:	f7f8 fcd5 	bl	800a2ec <_ZN8touchgfx4RectaNERKS0_>
 8011942:	f894 3038 	ldrb.w	r3, [r4, #56]	@ 0x38
 8011946:	b12b      	cbz	r3, 8011954 <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2e>
 8011948:	4669      	mov	r1, sp
 801194a:	4620      	mov	r0, r4
 801194c:	f7ff ffbf 	bl	80118ce <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>
 8011950:	b005      	add	sp, #20
 8011952:	bd30      	pop	{r4, r5, pc}
 8011954:	3404      	adds	r4, #4
 8011956:	4621      	mov	r1, r4
 8011958:	a802      	add	r0, sp, #8
 801195a:	f7ff f825 	bl	80109a8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801195e:	f8bd 3000 	ldrh.w	r3, [sp]
 8011962:	f8bd 2008 	ldrh.w	r2, [sp, #8]
 8011966:	1a9b      	subs	r3, r3, r2
 8011968:	f8ad 3000 	strh.w	r3, [sp]
 801196c:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 8011970:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8011974:	4669      	mov	r1, sp
 8011976:	1a9b      	subs	r3, r3, r2
 8011978:	4620      	mov	r0, r4
 801197a:	f8ad 3002 	strh.w	r3, [sp, #2]
 801197e:	f7f8 fd54 	bl	800a42a <_ZNK8touchgfx9Container4drawERKNS_4RectE>
 8011982:	e7e5      	b.n	8011950 <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2a>

08011984 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>:
 8011984:	680a      	ldr	r2, [r1, #0]
 8011986:	460b      	mov	r3, r1
 8011988:	6992      	ldr	r2, [r2, #24]
 801198a:	1d01      	adds	r1, r0, #4
 801198c:	4618      	mov	r0, r3
 801198e:	4710      	bx	r2

08011990 <_ZN8touchgfx12TextProviderC1Ev>:
 8011990:	b538      	push	{r3, r4, r5, lr}
 8011992:	2500      	movs	r5, #0
 8011994:	2302      	movs	r3, #2
 8011996:	4604      	mov	r4, r0
 8011998:	e9c0 5500 	strd	r5, r5, [r0]
 801199c:	7403      	strb	r3, [r0, #16]
 801199e:	6145      	str	r5, [r0, #20]
 80119a0:	7605      	strb	r5, [r0, #24]
 80119a2:	83c5      	strh	r5, [r0, #30]
 80119a4:	8405      	strh	r5, [r0, #32]
 80119a6:	86c5      	strh	r5, [r0, #54]	@ 0x36
 80119a8:	8705      	strh	r5, [r0, #56]	@ 0x38
 80119aa:	87c5      	strh	r5, [r0, #62]	@ 0x3e
 80119ac:	f8a0 5040 	strh.w	r5, [r0, #64]	@ 0x40
 80119b0:	e9c0 5511 	strd	r5, r5, [r0, #68]	@ 0x44
 80119b4:	220e      	movs	r2, #14
 80119b6:	4629      	mov	r1, r5
 80119b8:	304c      	adds	r0, #76	@ 0x4c
 80119ba:	f011 f980 	bl	8022cbe <memset>
 80119be:	2301      	movs	r3, #1
 80119c0:	4620      	mov	r0, r4
 80119c2:	f8a4 505a 	strh.w	r5, [r4, #90]	@ 0x5a
 80119c6:	f8a4 505c 	strh.w	r5, [r4, #92]	@ 0x5c
 80119ca:	f8a4 505e 	strh.w	r5, [r4, #94]	@ 0x5e
 80119ce:	f884 3060 	strb.w	r3, [r4, #96]	@ 0x60
 80119d2:	f884 5061 	strb.w	r5, [r4, #97]	@ 0x61
 80119d6:	f7f1 fbf9 	bl	80031cc <_ZN8touchgfx12TextProvider18initializeInternalEv>
 80119da:	4620      	mov	r0, r4
 80119dc:	bd38      	pop	{r3, r4, r5, pc}

080119de <_ZN8touchgfx12TextProvider19getNextCharInternalEv>:
 80119de:	b530      	push	{r4, r5, lr}
 80119e0:	2500      	movs	r5, #0
 80119e2:	2401      	movs	r4, #1
 80119e4:	6843      	ldr	r3, [r0, #4]
 80119e6:	b913      	cbnz	r3, 80119ee <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x10>
 80119e8:	6803      	ldr	r3, [r0, #0]
 80119ea:	b313      	cbz	r3, 8011a32 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
 80119ec:	6043      	str	r3, [r0, #4]
 80119ee:	7e03      	ldrb	r3, [r0, #24]
 80119f0:	b143      	cbz	r3, 8011a04 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x26>
 80119f2:	6943      	ldr	r3, [r0, #20]
 80119f4:	b12b      	cbz	r3, 8011a02 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 80119f6:	881a      	ldrh	r2, [r3, #0]
 80119f8:	b11a      	cbz	r2, 8011a02 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 80119fa:	1c9a      	adds	r2, r3, #2
 80119fc:	6142      	str	r2, [r0, #20]
 80119fe:	8818      	ldrh	r0, [r3, #0]
 8011a00:	bd30      	pop	{r4, r5, pc}
 8011a02:	7605      	strb	r5, [r0, #24]
 8011a04:	6843      	ldr	r3, [r0, #4]
 8011a06:	8819      	ldrh	r1, [r3, #0]
 8011a08:	b199      	cbz	r1, 8011a32 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
 8011a0a:	1c9a      	adds	r2, r3, #2
 8011a0c:	2902      	cmp	r1, #2
 8011a0e:	6042      	str	r2, [r0, #4]
 8011a10:	d1f5      	bne.n	80119fe <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x20>
 8011a12:	7c03      	ldrb	r3, [r0, #16]
 8011a14:	2b01      	cmp	r3, #1
 8011a16:	d8e5      	bhi.n	80119e4 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 8011a18:	1c5a      	adds	r2, r3, #1
 8011a1a:	3302      	adds	r3, #2
 8011a1c:	7402      	strb	r2, [r0, #16]
 8011a1e:	f850 3023 	ldr.w	r3, [r0, r3, lsl #2]
 8011a22:	6143      	str	r3, [r0, #20]
 8011a24:	2b00      	cmp	r3, #0
 8011a26:	d0dd      	beq.n	80119e4 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 8011a28:	881b      	ldrh	r3, [r3, #0]
 8011a2a:	2b00      	cmp	r3, #0
 8011a2c:	d0da      	beq.n	80119e4 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 8011a2e:	7604      	strb	r4, [r0, #24]
 8011a30:	e7d8      	b.n	80119e4 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 8011a32:	2000      	movs	r0, #0
 8011a34:	e7e4      	b.n	8011a00 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x22>

08011a36 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>:
 8011a36:	b430      	push	{r4, r5}
 8011a38:	6001      	str	r1, [r0, #0]
 8011a3a:	2100      	movs	r1, #0
 8011a3c:	6041      	str	r1, [r0, #4]
 8011a3e:	6815      	ldr	r5, [r2, #0]
 8011a40:	6085      	str	r5, [r0, #8]
 8011a42:	6852      	ldr	r2, [r2, #4]
 8011a44:	6443      	str	r3, [r0, #68]	@ 0x44
 8011a46:	9b02      	ldr	r3, [sp, #8]
 8011a48:	60c2      	str	r2, [r0, #12]
 8011a4a:	7401      	strb	r1, [r0, #16]
 8011a4c:	6141      	str	r1, [r0, #20]
 8011a4e:	7601      	strb	r1, [r0, #24]
 8011a50:	8701      	strh	r1, [r0, #56]	@ 0x38
 8011a52:	8401      	strh	r1, [r0, #32]
 8011a54:	f8a0 1040 	strh.w	r1, [r0, #64]	@ 0x40
 8011a58:	6483      	str	r3, [r0, #72]	@ 0x48
 8011a5a:	bc30      	pop	{r4, r5}
 8011a5c:	f7f1 bbb6 	b.w	80031cc <_ZN8touchgfx12TextProvider18initializeInternalEv>

08011a60 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>:
 8011a60:	b5f0      	push	{r4, r5, r6, r7, lr}
 8011a62:	4605      	mov	r5, r0
 8011a64:	4608      	mov	r0, r1
 8011a66:	b1e9      	cbz	r1, 8011aa4 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x44>
 8011a68:	f105 044c 	add.w	r4, r5, #76	@ 0x4c
 8011a6c:	460b      	mov	r3, r1
 8011a6e:	f101 0708 	add.w	r7, r1, #8
 8011a72:	4622      	mov	r2, r4
 8011a74:	6818      	ldr	r0, [r3, #0]
 8011a76:	6859      	ldr	r1, [r3, #4]
 8011a78:	4626      	mov	r6, r4
 8011a7a:	c603      	stmia	r6!, {r0, r1}
 8011a7c:	3308      	adds	r3, #8
 8011a7e:	42bb      	cmp	r3, r7
 8011a80:	4634      	mov	r4, r6
 8011a82:	d1f7      	bne.n	8011a74 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x14>
 8011a84:	6818      	ldr	r0, [r3, #0]
 8011a86:	6030      	str	r0, [r6, #0]
 8011a88:	889b      	ldrh	r3, [r3, #4]
 8011a8a:	80b3      	strh	r3, [r6, #4]
 8011a8c:	f895 3059 	ldrb.w	r3, [r5, #89]	@ 0x59
 8011a90:	015b      	lsls	r3, r3, #5
 8011a92:	f403 7180 	and.w	r1, r3, #256	@ 0x100
 8011a96:	f895 3052 	ldrb.w	r3, [r5, #82]	@ 0x52
 8011a9a:	430b      	orrs	r3, r1
 8011a9c:	425b      	negs	r3, r3
 8011a9e:	f885 3055 	strb.w	r3, [r5, #85]	@ 0x55
 8011aa2:	4610      	mov	r0, r2
 8011aa4:	bdf0      	pop	{r4, r5, r6, r7, pc}

08011aa6 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>:
 8011aa6:	b538      	push	{r3, r4, r5, lr}
 8011aa8:	460c      	mov	r4, r1
 8011aaa:	6811      	ldr	r1, [r2, #0]
 8011aac:	4610      	mov	r0, r2
 8011aae:	68cd      	ldr	r5, [r1, #12]
 8011ab0:	4619      	mov	r1, r3
 8011ab2:	47a8      	blx	r5
 8011ab4:	2800      	cmp	r0, #0
 8011ab6:	bf08      	it	eq
 8011ab8:	4620      	moveq	r0, r4
 8011aba:	bd38      	pop	{r3, r4, r5, pc}

08011abc <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>:
 8011abc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8011ac0:	468c      	mov	ip, r1
 8011ac2:	4605      	mov	r5, r0
 8011ac4:	4614      	mov	r4, r2
 8011ac6:	b942      	cbnz	r2, 8011ada <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1e>
 8011ac8:	f8a5 205a 	strh.w	r2, [r5, #90]	@ 0x5a
 8011acc:	f8a5 205c 	strh.w	r2, [r5, #92]	@ 0x5c
 8011ad0:	f8a5 205e 	strh.w	r2, [r5, #94]	@ 0x5e
 8011ad4:	4620      	mov	r0, r4
 8011ad6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8011ada:	7b50      	ldrb	r0, [r2, #13]
 8011adc:	8893      	ldrh	r3, [r2, #4]
 8011ade:	0106      	lsls	r6, r0, #4
 8011ae0:	f406 7280 	and.w	r2, r6, #256	@ 0x100
 8011ae4:	79e6      	ldrb	r6, [r4, #7]
 8011ae6:	f46f 6163 	mvn.w	r1, #3632	@ 0xe30
 8011aea:	4316      	orrs	r6, r2
 8011aec:	185a      	adds	r2, r3, r1
 8011aee:	b291      	uxth	r1, r2
 8011af0:	291d      	cmp	r1, #29
 8011af2:	b2b7      	uxth	r7, r6
 8011af4:	d87e      	bhi.n	8011bf4 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x138>
 8011af6:	2201      	movs	r2, #1
 8011af8:	408a      	lsls	r2, r1
 8011afa:	498a      	ldr	r1, [pc, #552]	@ (8011d24 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x268>)
 8011afc:	420a      	tst	r2, r1
 8011afe:	ea4f 06e6 	mov.w	r6, r6, asr #3
 8011b02:	d12d      	bne.n	8011b60 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xa4>
 8011b04:	f412 7f60 	tst.w	r2, #896	@ 0x380
 8011b08:	d074      	beq.n	8011bf4 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x138>
 8011b0a:	f105 024c 	add.w	r2, r5, #76	@ 0x4c
 8011b0e:	4623      	mov	r3, r4
 8011b10:	f104 0e08 	add.w	lr, r4, #8
 8011b14:	4614      	mov	r4, r2
 8011b16:	6818      	ldr	r0, [r3, #0]
 8011b18:	6859      	ldr	r1, [r3, #4]
 8011b1a:	4694      	mov	ip, r2
 8011b1c:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 8011b20:	3308      	adds	r3, #8
 8011b22:	4573      	cmp	r3, lr
 8011b24:	4662      	mov	r2, ip
 8011b26:	d1f6      	bne.n	8011b16 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x5a>
 8011b28:	6818      	ldr	r0, [r3, #0]
 8011b2a:	f8cc 0000 	str.w	r0, [ip]
 8011b2e:	889b      	ldrh	r3, [r3, #4]
 8011b30:	f8ac 3004 	strh.w	r3, [ip, #4]
 8011b34:	f8b5 105c 	ldrh.w	r1, [r5, #92]	@ 0x5c
 8011b38:	f895 0059 	ldrb.w	r0, [r5, #89]	@ 0x59
 8011b3c:	b2b3      	uxth	r3, r6
 8011b3e:	1aca      	subs	r2, r1, r3
 8011b40:	b292      	uxth	r2, r2
 8011b42:	f885 2054 	strb.w	r2, [r5, #84]	@ 0x54
 8011b46:	10d2      	asrs	r2, r2, #3
 8011b48:	f020 0060 	bic.w	r0, r0, #96	@ 0x60
 8011b4c:	f002 0260 	and.w	r2, r2, #96	@ 0x60
 8011b50:	4302      	orrs	r2, r0
 8011b52:	1bcf      	subs	r7, r1, r7
 8011b54:	f885 2059 	strb.w	r2, [r5, #89]	@ 0x59
 8011b58:	1afb      	subs	r3, r7, r3
 8011b5a:	f8a5 305c 	strh.w	r3, [r5, #92]	@ 0x5c
 8011b5e:	e7b9      	b.n	8011ad4 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x18>
 8011b60:	f105 024c 	add.w	r2, r5, #76	@ 0x4c
 8011b64:	4623      	mov	r3, r4
 8011b66:	f104 0808 	add.w	r8, r4, #8
 8011b6a:	4614      	mov	r4, r2
 8011b6c:	6818      	ldr	r0, [r3, #0]
 8011b6e:	6859      	ldr	r1, [r3, #4]
 8011b70:	4696      	mov	lr, r2
 8011b72:	e8ae 0003 	stmia.w	lr!, {r0, r1}
 8011b76:	3308      	adds	r3, #8
 8011b78:	4543      	cmp	r3, r8
 8011b7a:	4672      	mov	r2, lr
 8011b7c:	d1f6      	bne.n	8011b6c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xb0>
 8011b7e:	6818      	ldr	r0, [r3, #0]
 8011b80:	f8ce 0000 	str.w	r0, [lr]
 8011b84:	889b      	ldrh	r3, [r3, #4]
 8011b86:	f8ae 3004 	strh.w	r3, [lr, #4]
 8011b8a:	8eeb      	ldrh	r3, [r5, #54]	@ 0x36
 8011b8c:	eb05 0343 	add.w	r3, r5, r3, lsl #1
 8011b90:	8c59      	ldrh	r1, [r3, #34]	@ 0x22
 8011b92:	f640 6333 	movw	r3, #3635	@ 0xe33
 8011b96:	4299      	cmp	r1, r3
 8011b98:	d111      	bne.n	8011bbe <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x102>
 8011b9a:	f8dc 3000 	ldr.w	r3, [ip]
 8011b9e:	4660      	mov	r0, ip
 8011ba0:	68db      	ldr	r3, [r3, #12]
 8011ba2:	4798      	blx	r3
 8011ba4:	7b41      	ldrb	r1, [r0, #13]
 8011ba6:	00cb      	lsls	r3, r1, #3
 8011ba8:	f403 7280 	and.w	r2, r3, #256	@ 0x100
 8011bac:	7a03      	ldrb	r3, [r0, #8]
 8011bae:	4313      	orrs	r3, r2
 8011bb0:	064a      	lsls	r2, r1, #25
 8011bb2:	bf44      	itt	mi
 8011bb4:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 8011bb8:	b21b      	sxthmi	r3, r3
 8011bba:	f8a5 305a 	strh.w	r3, [r5, #90]	@ 0x5a
 8011bbe:	f8b5 305a 	ldrh.w	r3, [r5, #90]	@ 0x5a
 8011bc2:	f895 2059 	ldrb.w	r2, [r5, #89]	@ 0x59
 8011bc6:	443b      	add	r3, r7
 8011bc8:	4433      	add	r3, r6
 8011bca:	b29b      	uxth	r3, r3
 8011bcc:	f8a5 305a 	strh.w	r3, [r5, #90]	@ 0x5a
 8011bd0:	f885 3054 	strb.w	r3, [r5, #84]	@ 0x54
 8011bd4:	10db      	asrs	r3, r3, #3
 8011bd6:	f022 0260 	bic.w	r2, r2, #96	@ 0x60
 8011bda:	f003 0360 	and.w	r3, r3, #96	@ 0x60
 8011bde:	4313      	orrs	r3, r2
 8011be0:	f885 3059 	strb.w	r3, [r5, #89]	@ 0x59
 8011be4:	f895 205e 	ldrb.w	r2, [r5, #94]	@ 0x5e
 8011be8:	f895 3055 	ldrb.w	r3, [r5, #85]	@ 0x55
 8011bec:	1a9b      	subs	r3, r3, r2
 8011bee:	f885 3055 	strb.w	r3, [r5, #85]	@ 0x55
 8011bf2:	e76f      	b.n	8011ad4 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x18>
 8011bf4:	f023 0204 	bic.w	r2, r3, #4
 8011bf8:	f640 611b 	movw	r1, #3611	@ 0xe1b
 8011bfc:	428a      	cmp	r2, r1
 8011bfe:	d003      	beq.n	8011c08 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x14c>
 8011c00:	f640 621d 	movw	r2, #3613	@ 0xe1d
 8011c04:	4293      	cmp	r3, r2
 8011c06:	d137      	bne.n	8011c78 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1bc>
 8011c08:	f105 064c 	add.w	r6, r5, #76	@ 0x4c
 8011c0c:	4622      	mov	r2, r4
 8011c0e:	f104 0808 	add.w	r8, r4, #8
 8011c12:	4634      	mov	r4, r6
 8011c14:	6810      	ldr	r0, [r2, #0]
 8011c16:	6851      	ldr	r1, [r2, #4]
 8011c18:	46b6      	mov	lr, r6
 8011c1a:	e8ae 0003 	stmia.w	lr!, {r0, r1}
 8011c1e:	3208      	adds	r2, #8
 8011c20:	4542      	cmp	r2, r8
 8011c22:	4676      	mov	r6, lr
 8011c24:	d1f6      	bne.n	8011c14 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x158>
 8011c26:	6810      	ldr	r0, [r2, #0]
 8011c28:	f8ce 0000 	str.w	r0, [lr]
 8011c2c:	8892      	ldrh	r2, [r2, #4]
 8011c2e:	f8ae 2004 	strh.w	r2, [lr, #4]
 8011c32:	3b01      	subs	r3, #1
 8011c34:	b29b      	uxth	r3, r3
 8011c36:	4662      	mov	r2, ip
 8011c38:	4621      	mov	r1, r4
 8011c3a:	4628      	mov	r0, r5
 8011c3c:	f7ff ff33 	bl	8011aa6 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 8011c40:	7b41      	ldrb	r1, [r0, #13]
 8011c42:	00cb      	lsls	r3, r1, #3
 8011c44:	f403 7280 	and.w	r2, r3, #256	@ 0x100
 8011c48:	7a03      	ldrb	r3, [r0, #8]
 8011c4a:	0648      	lsls	r0, r1, #25
 8011c4c:	ea43 0302 	orr.w	r3, r3, r2
 8011c50:	bf44      	itt	mi
 8011c52:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 8011c56:	b21b      	sxthmi	r3, r3
 8011c58:	f8a5 305a 	strh.w	r3, [r5, #90]	@ 0x5a
 8011c5c:	f895 3059 	ldrb.w	r3, [r5, #89]	@ 0x59
 8011c60:	f895 2056 	ldrb.w	r2, [r5, #86]	@ 0x56
 8011c64:	005b      	lsls	r3, r3, #1
 8011c66:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8011c6a:	4313      	orrs	r3, r2
 8011c6c:	115a      	asrs	r2, r3, #5
 8011c6e:	eb02 0393 	add.w	r3, r2, r3, lsr #2
 8011c72:	f8a5 305e 	strh.w	r3, [r5, #94]	@ 0x5e
 8011c76:	e046      	b.n	8011d06 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x24a>
 8011c78:	00c2      	lsls	r2, r0, #3
 8011c7a:	f402 7180 	and.w	r1, r2, #256	@ 0x100
 8011c7e:	7a22      	ldrb	r2, [r4, #8]
 8011c80:	430a      	orrs	r2, r1
 8011c82:	0641      	lsls	r1, r0, #25
 8011c84:	bf44      	itt	mi
 8011c86:	f5a2 7200 	submi.w	r2, r2, #512	@ 0x200
 8011c8a:	b212      	sxthmi	r2, r2
 8011c8c:	f8a5 205a 	strh.w	r2, [r5, #90]	@ 0x5a
 8011c90:	f640 6109 	movw	r1, #3593	@ 0xe09
 8011c94:	f023 0210 	bic.w	r2, r3, #16
 8011c98:	428a      	cmp	r2, r1
 8011c9a:	d003      	beq.n	8011ca4 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1e8>
 8011c9c:	f640 6213 	movw	r2, #3603	@ 0xe13
 8011ca0:	4293      	cmp	r3, r2
 8011ca2:	d13d      	bne.n	8011d20 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x264>
 8011ca4:	f105 024c 	add.w	r2, r5, #76	@ 0x4c
 8011ca8:	f104 0808 	add.w	r8, r4, #8
 8011cac:	4696      	mov	lr, r2
 8011cae:	6820      	ldr	r0, [r4, #0]
 8011cb0:	6861      	ldr	r1, [r4, #4]
 8011cb2:	4616      	mov	r6, r2
 8011cb4:	c603      	stmia	r6!, {r0, r1}
 8011cb6:	3408      	adds	r4, #8
 8011cb8:	4544      	cmp	r4, r8
 8011cba:	4632      	mov	r2, r6
 8011cbc:	d1f7      	bne.n	8011cae <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1f2>
 8011cbe:	6820      	ldr	r0, [r4, #0]
 8011cc0:	6030      	str	r0, [r6, #0]
 8011cc2:	88a1      	ldrh	r1, [r4, #4]
 8011cc4:	80b1      	strh	r1, [r6, #4]
 8011cc6:	f895 6059 	ldrb.w	r6, [r5, #89]	@ 0x59
 8011cca:	0076      	lsls	r6, r6, #1
 8011ccc:	f406 7280 	and.w	r2, r6, #256	@ 0x100
 8011cd0:	f895 6056 	ldrb.w	r6, [r5, #86]	@ 0x56
 8011cd4:	4316      	orrs	r6, r2
 8011cd6:	f640 6213 	movw	r2, #3603	@ 0xe13
 8011cda:	4293      	cmp	r3, r2
 8011cdc:	bf1a      	itte	ne
 8011cde:	f103 33ff 	addne.w	r3, r3, #4294967295
 8011ce2:	b29b      	uxthne	r3, r3
 8011ce4:	f640 630c 	movweq	r3, #3596	@ 0xe0c
 8011ce8:	4662      	mov	r2, ip
 8011cea:	4671      	mov	r1, lr
 8011cec:	4628      	mov	r0, r5
 8011cee:	4674      	mov	r4, lr
 8011cf0:	f7ff fed9 	bl	8011aa6 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 8011cf4:	7b43      	ldrb	r3, [r0, #13]
 8011cf6:	7a82      	ldrb	r2, [r0, #10]
 8011cf8:	005b      	lsls	r3, r3, #1
 8011cfa:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8011cfe:	4313      	orrs	r3, r2
 8011d00:	1af6      	subs	r6, r6, r3
 8011d02:	f8a5 605e 	strh.w	r6, [r5, #94]	@ 0x5e
 8011d06:	7b61      	ldrb	r1, [r4, #13]
 8011d08:	00cb      	lsls	r3, r1, #3
 8011d0a:	f403 7280 	and.w	r2, r3, #256	@ 0x100
 8011d0e:	7a23      	ldrb	r3, [r4, #8]
 8011d10:	4313      	orrs	r3, r2
 8011d12:	064a      	lsls	r2, r1, #25
 8011d14:	bf44      	itt	mi
 8011d16:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 8011d1a:	b21b      	sxthmi	r3, r3
 8011d1c:	1bdb      	subs	r3, r3, r7
 8011d1e:	e71c      	b.n	8011b5a <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x9e>
 8011d20:	2300      	movs	r3, #0
 8011d22:	e7a6      	b.n	8011c72 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1b6>
 8011d24:	3fc00079 	.word	0x3fc00079

08011d28 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>:
 8011d28:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8011d2c:	4604      	mov	r4, r0
 8011d2e:	b942      	cbnz	r2, 8011d42 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1a>
 8011d30:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
 8011d34:	f8a0 305a 	strh.w	r3, [r0, #90]	@ 0x5a
 8011d38:	f8a0 305c 	strh.w	r3, [r0, #92]	@ 0x5c
 8011d3c:	f8a4 305e 	strh.w	r3, [r4, #94]	@ 0x5e
 8011d40:	e047      	b.n	8011dd2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xaa>
 8011d42:	7b51      	ldrb	r1, [r2, #13]
 8011d44:	8893      	ldrh	r3, [r2, #4]
 8011d46:	010d      	lsls	r5, r1, #4
 8011d48:	f405 7080 	and.w	r0, r5, #256	@ 0x100
 8011d4c:	79d5      	ldrb	r5, [r2, #7]
 8011d4e:	4305      	orrs	r5, r0
 8011d50:	2d04      	cmp	r5, #4
 8011d52:	bfcc      	ite	gt
 8011d54:	ea4f 0e95 	movgt.w	lr, r5, lsr #2
 8011d58:	f04f 0e01 	movle.w	lr, #1
 8011d5c:	f5b3 6fdd 	cmp.w	r3, #1768	@ 0x6e8
 8011d60:	f200 80ab 	bhi.w	8011eba <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x192>
 8011d64:	f240 60e7 	movw	r0, #1767	@ 0x6e7
 8011d68:	4283      	cmp	r3, r0
 8011d6a:	d216      	bcs.n	8011d9a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8011d6c:	f240 605b 	movw	r0, #1627	@ 0x65b
 8011d70:	4283      	cmp	r3, r0
 8011d72:	d859      	bhi.n	8011e28 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x100>
 8011d74:	f240 6057 	movw	r0, #1623	@ 0x657
 8011d78:	4283      	cmp	r3, r0
 8011d7a:	d20e      	bcs.n	8011d9a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8011d7c:	f5b3 6fca 	cmp.w	r3, #1616	@ 0x650
 8011d80:	d24a      	bcs.n	8011e18 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xf0>
 8011d82:	f240 604e 	movw	r0, #1614	@ 0x64e
 8011d86:	4283      	cmp	r3, r0
 8011d88:	d207      	bcs.n	8011d9a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8011d8a:	f240 601a 	movw	r0, #1562	@ 0x61a
 8011d8e:	4283      	cmp	r3, r0
 8011d90:	d02a      	beq.n	8011de8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8011d92:	d821      	bhi.n	8011dd8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xb0>
 8011d94:	f5b3 6fc2 	cmp.w	r3, #1552	@ 0x610
 8011d98:	d35b      	bcc.n	8011e52 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 8011d9a:	f9b4 305a 	ldrsh.w	r3, [r4, #90]	@ 0x5a
 8011d9e:	f513 4f00 	cmn.w	r3, #32768	@ 0x8000
 8011da2:	f040 80d0 	bne.w	8011f46 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21e>
 8011da6:	f9b4 005c 	ldrsh.w	r0, [r4, #92]	@ 0x5c
 8011daa:	f510 4f00 	cmn.w	r0, #32768	@ 0x8000
 8011dae:	f040 80ca 	bne.w	8011f46 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21e>
 8011db2:	00cb      	lsls	r3, r1, #3
 8011db4:	f403 7080 	and.w	r0, r3, #256	@ 0x100
 8011db8:	7a13      	ldrb	r3, [r2, #8]
 8011dba:	0649      	lsls	r1, r1, #25
 8011dbc:	ea43 0300 	orr.w	r3, r3, r0
 8011dc0:	bf44      	itt	mi
 8011dc2:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 8011dc6:	b21b      	sxthmi	r3, r3
 8011dc8:	f8a4 305a 	strh.w	r3, [r4, #90]	@ 0x5a
 8011dcc:	1b5d      	subs	r5, r3, r5
 8011dce:	f8a4 505c 	strh.w	r5, [r4, #92]	@ 0x5c
 8011dd2:	4610      	mov	r0, r2
 8011dd4:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8011dd8:	f240 604b 	movw	r0, #1611	@ 0x64b
 8011ddc:	4283      	cmp	r3, r0
 8011dde:	d338      	bcc.n	8011e52 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 8011de0:	f240 604c 	movw	r0, #1612	@ 0x64c
 8011de4:	4283      	cmp	r3, r0
 8011de6:	d9d8      	bls.n	8011d9a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8011de8:	f9b4 005a 	ldrsh.w	r0, [r4, #90]	@ 0x5a
 8011dec:	f9b4 305c 	ldrsh.w	r3, [r4, #92]	@ 0x5c
 8011df0:	f510 4f00 	cmn.w	r0, #32768	@ 0x8000
 8011df4:	f040 80f2 	bne.w	8011fdc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b4>
 8011df8:	f513 4f00 	cmn.w	r3, #32768	@ 0x8000
 8011dfc:	f040 80ee 	bne.w	8011fdc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b4>
 8011e00:	00cb      	lsls	r3, r1, #3
 8011e02:	f403 7080 	and.w	r0, r3, #256	@ 0x100
 8011e06:	7a13      	ldrb	r3, [r2, #8]
 8011e08:	064e      	lsls	r6, r1, #25
 8011e0a:	ea43 0300 	orr.w	r3, r3, r0
 8011e0e:	bf44      	itt	mi
 8011e10:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 8011e14:	b21b      	sxthmi	r3, r3
 8011e16:	e7d9      	b.n	8011dcc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xa4>
 8011e18:	f240 6054 	movw	r0, #1620	@ 0x654
 8011e1c:	4283      	cmp	r3, r0
 8011e1e:	d8e3      	bhi.n	8011de8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8011e20:	f5b3 6fca 	cmp.w	r3, #1616	@ 0x650
 8011e24:	d9e0      	bls.n	8011de8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8011e26:	e7b8      	b.n	8011d9a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8011e28:	f240 6074 	movw	r0, #1652	@ 0x674
 8011e2c:	4283      	cmp	r3, r0
 8011e2e:	d0b4      	beq.n	8011d9a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8011e30:	d82d      	bhi.n	8011e8e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x166>
 8011e32:	f240 605e 	movw	r0, #1630	@ 0x65e
 8011e36:	4283      	cmp	r3, r0
 8011e38:	d804      	bhi.n	8011e44 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x11c>
 8011e3a:	f240 605d 	movw	r0, #1629	@ 0x65d
 8011e3e:	4283      	cmp	r3, r0
 8011e40:	d3d2      	bcc.n	8011de8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8011e42:	e7aa      	b.n	8011d9a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8011e44:	f240 605f 	movw	r0, #1631	@ 0x65f
 8011e48:	4283      	cmp	r3, r0
 8011e4a:	d0cd      	beq.n	8011de8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8011e4c:	f5b3 6fce 	cmp.w	r3, #1648	@ 0x670
 8011e50:	d0a3      	beq.n	8011d9a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8011e52:	00cb      	lsls	r3, r1, #3
 8011e54:	f403 7080 	and.w	r0, r3, #256	@ 0x100
 8011e58:	7a13      	ldrb	r3, [r2, #8]
 8011e5a:	0649      	lsls	r1, r1, #25
 8011e5c:	ea43 0300 	orr.w	r3, r3, r0
 8011e60:	bf44      	itt	mi
 8011e62:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 8011e66:	b21b      	sxthmi	r3, r3
 8011e68:	1b5d      	subs	r5, r3, r5
 8011e6a:	f8a4 305a 	strh.w	r3, [r4, #90]	@ 0x5a
 8011e6e:	f8a4 505c 	strh.w	r5, [r4, #92]	@ 0x5c
 8011e72:	7b53      	ldrb	r3, [r2, #13]
 8011e74:	015b      	lsls	r3, r3, #5
 8011e76:	f403 7180 	and.w	r1, r3, #256	@ 0x100
 8011e7a:	7993      	ldrb	r3, [r2, #6]
 8011e7c:	430b      	orrs	r3, r1
 8011e7e:	005b      	lsls	r3, r3, #1
 8011e80:	2105      	movs	r1, #5
 8011e82:	fb93 f3f1 	sdiv	r3, r3, r1
 8011e86:	f992 1009 	ldrsb.w	r1, [r2, #9]
 8011e8a:	440b      	add	r3, r1
 8011e8c:	e756      	b.n	8011d3c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x14>
 8011e8e:	f240 60e2 	movw	r0, #1762	@ 0x6e2
 8011e92:	4283      	cmp	r3, r0
 8011e94:	d809      	bhi.n	8011eaa <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x182>
 8011e96:	f240 60df 	movw	r0, #1759	@ 0x6df
 8011e9a:	4283      	cmp	r3, r0
 8011e9c:	f4bf af7d 	bcs.w	8011d9a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8011ea0:	f2a3 63d6 	subw	r3, r3, #1750	@ 0x6d6
 8011ea4:	2b05      	cmp	r3, #5
 8011ea6:	d8d4      	bhi.n	8011e52 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 8011ea8:	e777      	b.n	8011d9a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8011eaa:	f240 60e3 	movw	r0, #1763	@ 0x6e3
 8011eae:	4283      	cmp	r3, r0
 8011eb0:	d09a      	beq.n	8011de8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8011eb2:	f240 60e4 	movw	r0, #1764	@ 0x6e4
 8011eb6:	4283      	cmp	r3, r0
 8011eb8:	e7ca      	b.n	8011e50 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x128>
 8011eba:	f5b3 6f0f 	cmp.w	r3, #2288	@ 0x8f0
 8011ebe:	d22b      	bcs.n	8011f18 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1f0>
 8011ec0:	f640 00ed 	movw	r0, #2285	@ 0x8ed
 8011ec4:	4283      	cmp	r3, r0
 8011ec6:	d28f      	bcs.n	8011de8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8011ec8:	f640 00e5 	movw	r0, #2277	@ 0x8e5
 8011ecc:	4283      	cmp	r3, r0
 8011ece:	d816      	bhi.n	8011efe <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d6>
 8011ed0:	f640 00e4 	movw	r0, #2276	@ 0x8e4
 8011ed4:	4283      	cmp	r3, r0
 8011ed6:	f4bf af60 	bcs.w	8011d9a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8011eda:	f240 60ec 	movw	r0, #1772	@ 0x6ec
 8011ede:	4283      	cmp	r3, r0
 8011ee0:	d80a      	bhi.n	8011ef8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d0>
 8011ee2:	f240 60eb 	movw	r0, #1771	@ 0x6eb
 8011ee6:	4283      	cmp	r3, r0
 8011ee8:	f4bf af57 	bcs.w	8011d9a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8011eec:	f240 60ea 	movw	r0, #1770	@ 0x6ea
 8011ef0:	4283      	cmp	r3, r0
 8011ef2:	f43f af79 	beq.w	8011de8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8011ef6:	e7ac      	b.n	8011e52 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 8011ef8:	f240 60ed 	movw	r0, #1773	@ 0x6ed
 8011efc:	e7f8      	b.n	8011ef0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1c8>
 8011efe:	f640 00e8 	movw	r0, #2280	@ 0x8e8
 8011f02:	4283      	cmp	r3, r0
 8011f04:	d802      	bhi.n	8011f0c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e4>
 8011f06:	f640 00e7 	movw	r0, #2279	@ 0x8e7
 8011f0a:	e798      	b.n	8011e3e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x116>
 8011f0c:	f640 00e9 	movw	r0, #2281	@ 0x8e9
 8011f10:	4283      	cmp	r3, r0
 8011f12:	f47f af42 	bne.w	8011d9a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8011f16:	e767      	b.n	8011de8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8011f18:	f640 00f6 	movw	r0, #2294	@ 0x8f6
 8011f1c:	4283      	cmp	r3, r0
 8011f1e:	f43f af63 	beq.w	8011de8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8011f22:	d802      	bhi.n	8011f2a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x202>
 8011f24:	f640 00f2 	movw	r0, #2290	@ 0x8f2
 8011f28:	e7f2      	b.n	8011f10 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e8>
 8011f2a:	f640 00fa 	movw	r0, #2298	@ 0x8fa
 8011f2e:	4283      	cmp	r3, r0
 8011f30:	d805      	bhi.n	8011f3e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x216>
 8011f32:	f640 00f9 	movw	r0, #2297	@ 0x8f9
 8011f36:	4283      	cmp	r3, r0
 8011f38:	f4ff af2f 	bcc.w	8011d9a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8011f3c:	e754      	b.n	8011de8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8011f3e:	f640 00fe 	movw	r0, #2302	@ 0x8fe
 8011f42:	4283      	cmp	r3, r0
 8011f44:	e7af      	b.n	8011ea6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x17e>
 8011f46:	f104 0c4c 	add.w	ip, r4, #76	@ 0x4c
 8011f4a:	4617      	mov	r7, r2
 8011f4c:	f102 0808 	add.w	r8, r2, #8
 8011f50:	4666      	mov	r6, ip
 8011f52:	6838      	ldr	r0, [r7, #0]
 8011f54:	6879      	ldr	r1, [r7, #4]
 8011f56:	46e6      	mov	lr, ip
 8011f58:	e8ae 0003 	stmia.w	lr!, {r0, r1}
 8011f5c:	3708      	adds	r7, #8
 8011f5e:	4547      	cmp	r7, r8
 8011f60:	46f4      	mov	ip, lr
 8011f62:	d1f6      	bne.n	8011f52 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x22a>
 8011f64:	6838      	ldr	r0, [r7, #0]
 8011f66:	f8ce 0000 	str.w	r0, [lr]
 8011f6a:	88b9      	ldrh	r1, [r7, #4]
 8011f6c:	f8ae 1004 	strh.w	r1, [lr, #4]
 8011f70:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	@ 0x5e
 8011f74:	f510 4f00 	cmn.w	r0, #32768	@ 0x8000
 8011f78:	d009      	beq.n	8011f8e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x266>
 8011f7a:	7b51      	ldrb	r1, [r2, #13]
 8011f7c:	7992      	ldrb	r2, [r2, #6]
 8011f7e:	0149      	lsls	r1, r1, #5
 8011f80:	f401 7180 	and.w	r1, r1, #256	@ 0x100
 8011f84:	4311      	orrs	r1, r2
 8011f86:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
 8011f8a:	f884 0055 	strb.w	r0, [r4, #85]	@ 0x55
 8011f8e:	f513 4f00 	cmn.w	r3, #32768	@ 0x8000
 8011f92:	b2ad      	uxth	r5, r5
 8011f94:	d00d      	beq.n	8011fb2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x28a>
 8011f96:	442b      	add	r3, r5
 8011f98:	b29b      	uxth	r3, r3
 8011f9a:	f894 2059 	ldrb.w	r2, [r4, #89]	@ 0x59
 8011f9e:	f884 3054 	strb.w	r3, [r4, #84]	@ 0x54
 8011fa2:	10db      	asrs	r3, r3, #3
 8011fa4:	f022 0260 	bic.w	r2, r2, #96	@ 0x60
 8011fa8:	f003 0360 	and.w	r3, r3, #96	@ 0x60
 8011fac:	4313      	orrs	r3, r2
 8011fae:	f884 3059 	strb.w	r3, [r4, #89]	@ 0x59
 8011fb2:	f894 1059 	ldrb.w	r1, [r4, #89]	@ 0x59
 8011fb6:	00cb      	lsls	r3, r1, #3
 8011fb8:	f403 7280 	and.w	r2, r3, #256	@ 0x100
 8011fbc:	f894 3054 	ldrb.w	r3, [r4, #84]	@ 0x54
 8011fc0:	064f      	lsls	r7, r1, #25
 8011fc2:	ea43 0302 	orr.w	r3, r3, r2
 8011fc6:	bf44      	itt	mi
 8011fc8:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 8011fcc:	b21b      	sxthmi	r3, r3
 8011fce:	f8a4 305a 	strh.w	r3, [r4, #90]	@ 0x5a
 8011fd2:	1b5b      	subs	r3, r3, r5
 8011fd4:	f8a4 305c 	strh.w	r3, [r4, #92]	@ 0x5c
 8011fd8:	4632      	mov	r2, r6
 8011fda:	e6fa      	b.n	8011dd2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xaa>
 8011fdc:	f104 0c4c 	add.w	ip, r4, #76	@ 0x4c
 8011fe0:	4617      	mov	r7, r2
 8011fe2:	f102 0908 	add.w	r9, r2, #8
 8011fe6:	4666      	mov	r6, ip
 8011fe8:	6838      	ldr	r0, [r7, #0]
 8011fea:	6879      	ldr	r1, [r7, #4]
 8011fec:	46e0      	mov	r8, ip
 8011fee:	e8a8 0003 	stmia.w	r8!, {r0, r1}
 8011ff2:	3708      	adds	r7, #8
 8011ff4:	454f      	cmp	r7, r9
 8011ff6:	46c4      	mov	ip, r8
 8011ff8:	d1f6      	bne.n	8011fe8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2c0>
 8011ffa:	6838      	ldr	r0, [r7, #0]
 8011ffc:	f8c8 0000 	str.w	r0, [r8]
 8012000:	88b9      	ldrh	r1, [r7, #4]
 8012002:	f8a8 1004 	strh.w	r1, [r8, #4]
 8012006:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	@ 0x5e
 801200a:	f510 4f00 	cmn.w	r0, #32768	@ 0x8000
 801200e:	d009      	beq.n	8012024 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2fc>
 8012010:	7b51      	ldrb	r1, [r2, #13]
 8012012:	7992      	ldrb	r2, [r2, #6]
 8012014:	0149      	lsls	r1, r1, #5
 8012016:	f401 7180 	and.w	r1, r1, #256	@ 0x100
 801201a:	4311      	orrs	r1, r2
 801201c:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
 8012020:	f884 0055 	strb.w	r0, [r4, #85]	@ 0x55
 8012024:	f513 4f00 	cmn.w	r3, #32768	@ 0x8000
 8012028:	d00e      	beq.n	8012048 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x320>
 801202a:	eba3 030e 	sub.w	r3, r3, lr
 801202e:	f894 2059 	ldrb.w	r2, [r4, #89]	@ 0x59
 8012032:	b29b      	uxth	r3, r3
 8012034:	f884 3054 	strb.w	r3, [r4, #84]	@ 0x54
 8012038:	10db      	asrs	r3, r3, #3
 801203a:	f003 0360 	and.w	r3, r3, #96	@ 0x60
 801203e:	f022 0260 	bic.w	r2, r2, #96	@ 0x60
 8012042:	4313      	orrs	r3, r2
 8012044:	f884 3059 	strb.w	r3, [r4, #89]	@ 0x59
 8012048:	f894 1059 	ldrb.w	r1, [r4, #89]	@ 0x59
 801204c:	00cb      	lsls	r3, r1, #3
 801204e:	f403 7280 	and.w	r2, r3, #256	@ 0x100
 8012052:	f894 3054 	ldrb.w	r3, [r4, #84]	@ 0x54
 8012056:	0648      	lsls	r0, r1, #25
 8012058:	ea43 0302 	orr.w	r3, r3, r2
 801205c:	bf44      	itt	mi
 801205e:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 8012062:	b21b      	sxthmi	r3, r3
 8012064:	1b5d      	subs	r5, r3, r5
 8012066:	f8a4 505c 	strh.w	r5, [r4, #92]	@ 0x5c
 801206a:	e7b5      	b.n	8011fd8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b0>

0801206c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>:
 801206c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8012070:	461e      	mov	r6, r3
 8012072:	8ec3      	ldrh	r3, [r0, #54]	@ 0x36
 8012074:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8012078:	4604      	mov	r4, r0
 801207a:	4617      	mov	r7, r2
 801207c:	f8b3 8022 	ldrh.w	r8, [r3, #34]	@ 0x22
 8012080:	f7f1 f862 	bl	8003148 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 8012084:	4605      	mov	r5, r0
 8012086:	b918      	cbnz	r0, 8012090 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x24>
 8012088:	6030      	str	r0, [r6, #0]
 801208a:	4628      	mov	r0, r5
 801208c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8012090:	683b      	ldr	r3, [r7, #0]
 8012092:	4601      	mov	r1, r0
 8012094:	68db      	ldr	r3, [r3, #12]
 8012096:	4638      	mov	r0, r7
 8012098:	4798      	blx	r3
 801209a:	f5a8 63c0 	sub.w	r3, r8, #1536	@ 0x600
 801209e:	f5b3 7f40 	cmp.w	r3, #768	@ 0x300
 80120a2:	4602      	mov	r2, r0
 80120a4:	6030      	str	r0, [r6, #0]
 80120a6:	d213      	bcs.n	80120d0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x64>
 80120a8:	4643      	mov	r3, r8
 80120aa:	4639      	mov	r1, r7
 80120ac:	4620      	mov	r0, r4
 80120ae:	f7ff fe3b 	bl	8011d28 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
 80120b2:	6030      	str	r0, [r6, #0]
 80120b4:	6833      	ldr	r3, [r6, #0]
 80120b6:	b143      	cbz	r3, 80120ca <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x5e>
 80120b8:	7b5a      	ldrb	r2, [r3, #13]
 80120ba:	7a9b      	ldrb	r3, [r3, #10]
 80120bc:	0052      	lsls	r2, r2, #1
 80120be:	f402 7280 	and.w	r2, r2, #256	@ 0x100
 80120c2:	4313      	orrs	r3, r2
 80120c4:	bf0c      	ite	eq
 80120c6:	2301      	moveq	r3, #1
 80120c8:	2300      	movne	r3, #0
 80120ca:	f884 3061 	strb.w	r3, [r4, #97]	@ 0x61
 80120ce:	e7dc      	b.n	801208a <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x1e>
 80120d0:	f5a5 6360 	sub.w	r3, r5, #3584	@ 0xe00
 80120d4:	b29b      	uxth	r3, r3
 80120d6:	2b7f      	cmp	r3, #127	@ 0x7f
 80120d8:	d804      	bhi.n	80120e4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x78>
 80120da:	4639      	mov	r1, r7
 80120dc:	4620      	mov	r0, r4
 80120de:	f7ff fced 	bl	8011abc <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
 80120e2:	e7e6      	b.n	80120b2 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x46>
 80120e4:	f894 3061 	ldrb.w	r3, [r4, #97]	@ 0x61
 80120e8:	2b00      	cmp	r3, #0
 80120ea:	d0e3      	beq.n	80120b4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x48>
 80120ec:	f640 1302 	movw	r3, #2306	@ 0x902
 80120f0:	429d      	cmp	r5, r3
 80120f2:	d1df      	bne.n	80120b4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x48>
 80120f4:	4601      	mov	r1, r0
 80120f6:	4620      	mov	r0, r4
 80120f8:	f7ff fcb2 	bl	8011a60 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
 80120fc:	e7d9      	b.n	80120b2 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x46>

080120fe <_ZN8touchgfx12TextProvider15fillInputBufferEv>:
 80120fe:	b510      	push	{r4, lr}
 8012100:	4604      	mov	r4, r0
 8012102:	f8b4 1040 	ldrh.w	r1, [r4, #64]	@ 0x40
 8012106:	8f23      	ldrh	r3, [r4, #56]	@ 0x38
 8012108:	b1f1      	cbz	r1, 8012148 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4a>
 801210a:	2b0a      	cmp	r3, #10
 801210c:	d02f      	beq.n	801216e <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x70>
 801210e:	8fe2      	ldrh	r2, [r4, #62]	@ 0x3e
 8012110:	eb04 0042 	add.w	r0, r4, r2, lsl #1
 8012114:	3901      	subs	r1, #1
 8012116:	8f40      	ldrh	r0, [r0, #58]	@ 0x3a
 8012118:	f8a4 1040 	strh.w	r1, [r4, #64]	@ 0x40
 801211c:	1c51      	adds	r1, r2, #1
 801211e:	b289      	uxth	r1, r1
 8012120:	2901      	cmp	r1, #1
 8012122:	bf84      	itt	hi
 8012124:	f102 32ff 	addhi.w	r2, r2, #4294967295
 8012128:	87e2      	strhhi	r2, [r4, #62]	@ 0x3e
 801212a:	f103 0201 	add.w	r2, r3, #1
 801212e:	8722      	strh	r2, [r4, #56]	@ 0x38
 8012130:	8ee2      	ldrh	r2, [r4, #54]	@ 0x36
 8012132:	bf98      	it	ls
 8012134:	87e1      	strhls	r1, [r4, #62]	@ 0x3e
 8012136:	4413      	add	r3, r2
 8012138:	b29b      	uxth	r3, r3
 801213a:	2b09      	cmp	r3, #9
 801213c:	bf88      	it	hi
 801213e:	3b0a      	subhi	r3, #10
 8012140:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8012144:	8458      	strh	r0, [r3, #34]	@ 0x22
 8012146:	e7dc      	b.n	8012102 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4>
 8012148:	8f23      	ldrh	r3, [r4, #56]	@ 0x38
 801214a:	2b0a      	cmp	r3, #10
 801214c:	d00f      	beq.n	801216e <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x70>
 801214e:	4620      	mov	r0, r4
 8012150:	f7ff fc45 	bl	80119de <_ZN8touchgfx12TextProvider19getNextCharInternalEv>
 8012154:	8f23      	ldrh	r3, [r4, #56]	@ 0x38
 8012156:	1c5a      	adds	r2, r3, #1
 8012158:	8722      	strh	r2, [r4, #56]	@ 0x38
 801215a:	8ee2      	ldrh	r2, [r4, #54]	@ 0x36
 801215c:	4413      	add	r3, r2
 801215e:	b29b      	uxth	r3, r3
 8012160:	2b09      	cmp	r3, #9
 8012162:	bf88      	it	hi
 8012164:	3b0a      	subhi	r3, #10
 8012166:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 801216a:	8458      	strh	r0, [r3, #34]	@ 0x22
 801216c:	e7ec      	b.n	8012148 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4a>
 801216e:	bd10      	pop	{r4, pc}

08012170 <_ZN8touchgfx12TextProvider11getNextCharEv>:
 8012170:	b538      	push	{r3, r4, r5, lr}
 8012172:	8ec3      	ldrh	r3, [r0, #54]	@ 0x36
 8012174:	eb00 0243 	add.w	r2, r0, r3, lsl #1
 8012178:	4604      	mov	r4, r0
 801217a:	8c55      	ldrh	r5, [r2, #34]	@ 0x22
 801217c:	8f02      	ldrh	r2, [r0, #56]	@ 0x38
 801217e:	3a01      	subs	r2, #1
 8012180:	8702      	strh	r2, [r0, #56]	@ 0x38
 8012182:	1c5a      	adds	r2, r3, #1
 8012184:	b292      	uxth	r2, r2
 8012186:	2a09      	cmp	r2, #9
 8012188:	bf86      	itte	hi
 801218a:	3b09      	subhi	r3, #9
 801218c:	86c3      	strhhi	r3, [r0, #54]	@ 0x36
 801218e:	86c2      	strhls	r2, [r0, #54]	@ 0x36
 8012190:	f7ff ffb5 	bl	80120fe <_ZN8touchgfx12TextProvider15fillInputBufferEv>
 8012194:	8c23      	ldrh	r3, [r4, #32]
 8012196:	2b01      	cmp	r3, #1
 8012198:	bf9c      	itt	ls
 801219a:	3301      	addls	r3, #1
 801219c:	8423      	strhls	r3, [r4, #32]
 801219e:	8be3      	ldrh	r3, [r4, #30]
 80121a0:	b90b      	cbnz	r3, 80121a6 <_ZN8touchgfx12TextProvider11getNextCharEv+0x36>
 80121a2:	2302      	movs	r3, #2
 80121a4:	83e3      	strh	r3, [r4, #30]
 80121a6:	8be3      	ldrh	r3, [r4, #30]
 80121a8:	3b01      	subs	r3, #1
 80121aa:	b29b      	uxth	r3, r3
 80121ac:	83e3      	strh	r3, [r4, #30]
 80121ae:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80121b2:	4628      	mov	r0, r5
 80121b4:	8365      	strh	r5, [r4, #26]
 80121b6:	bd38      	pop	{r3, r4, r5, pc}

080121b8 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>:
 80121b8:	428a      	cmp	r2, r1
 80121ba:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80121be:	8ec7      	ldrh	r7, [r0, #54]	@ 0x36
 80121c0:	d931      	bls.n	8012226 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x6e>
 80121c2:	8f05      	ldrh	r5, [r0, #56]	@ 0x38
 80121c4:	f8b0 8040 	ldrh.w	r8, [r0, #64]	@ 0x40
 80121c8:	f8b0 c03e 	ldrh.w	ip, [r0, #62]	@ 0x3e
 80121cc:	19ee      	adds	r6, r5, r7
 80121ce:	1a54      	subs	r4, r2, r1
 80121d0:	3e01      	subs	r6, #1
 80121d2:	fa1f fe84 	uxth.w	lr, r4
 80121d6:	b2b4      	uxth	r4, r6
 80121d8:	eba4 090e 	sub.w	r9, r4, lr
 80121dc:	fa1f f989 	uxth.w	r9, r9
 80121e0:	2c09      	cmp	r4, #9
 80121e2:	4626      	mov	r6, r4
 80121e4:	bf88      	it	hi
 80121e6:	f1a4 060a 	subhi.w	r6, r4, #10
 80121ea:	f1bc 0f00 	cmp.w	ip, #0
 80121ee:	bf08      	it	eq
 80121f0:	f04f 0c02 	moveq.w	ip, #2
 80121f4:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 80121f8:	f10c 3cff 	add.w	ip, ip, #4294967295
 80121fc:	fa1f fc8c 	uxth.w	ip, ip
 8012200:	3c01      	subs	r4, #1
 8012202:	f8b6 a022 	ldrh.w	sl, [r6, #34]	@ 0x22
 8012206:	b2a4      	uxth	r4, r4
 8012208:	eb00 064c 	add.w	r6, r0, ip, lsl #1
 801220c:	454c      	cmp	r4, r9
 801220e:	f8a6 a03a 	strh.w	sl, [r6, #58]	@ 0x3a
 8012212:	d1e5      	bne.n	80121e0 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x28>
 8012214:	eba5 050e 	sub.w	r5, r5, lr
 8012218:	eb0e 0408 	add.w	r4, lr, r8
 801221c:	8705      	strh	r5, [r0, #56]	@ 0x38
 801221e:	f8a0 4040 	strh.w	r4, [r0, #64]	@ 0x40
 8012222:	f8a0 c03e 	strh.w	ip, [r0, #62]	@ 0x3e
 8012226:	8f04      	ldrh	r4, [r0, #56]	@ 0x38
 8012228:	1a64      	subs	r4, r4, r1
 801222a:	4439      	add	r1, r7
 801222c:	b289      	uxth	r1, r1
 801222e:	2909      	cmp	r1, #9
 8012230:	bf88      	it	hi
 8012232:	390a      	subhi	r1, #10
 8012234:	8704      	strh	r4, [r0, #56]	@ 0x38
 8012236:	86c1      	strh	r1, [r0, #54]	@ 0x36
 8012238:	250a      	movs	r5, #10
 801223a:	b18a      	cbz	r2, 8012260 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0xa8>
 801223c:	8f01      	ldrh	r1, [r0, #56]	@ 0x38
 801223e:	3a01      	subs	r2, #1
 8012240:	b292      	uxth	r2, r2
 8012242:	3101      	adds	r1, #1
 8012244:	f833 4012 	ldrh.w	r4, [r3, r2, lsl #1]
 8012248:	8701      	strh	r1, [r0, #56]	@ 0x38
 801224a:	8ec1      	ldrh	r1, [r0, #54]	@ 0x36
 801224c:	b901      	cbnz	r1, 8012250 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x98>
 801224e:	86c5      	strh	r5, [r0, #54]	@ 0x36
 8012250:	8ec1      	ldrh	r1, [r0, #54]	@ 0x36
 8012252:	3901      	subs	r1, #1
 8012254:	b289      	uxth	r1, r1
 8012256:	86c1      	strh	r1, [r0, #54]	@ 0x36
 8012258:	eb00 0141 	add.w	r1, r0, r1, lsl #1
 801225c:	844c      	strh	r4, [r1, #34]	@ 0x22
 801225e:	e7ec      	b.n	801223a <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x82>
 8012260:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8012264:	f7ff bf4b 	b.w	80120fe <_ZN8touchgfx12TextProvider15fillInputBufferEv>

08012268 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>:
 8012268:	b570      	push	{r4, r5, r6, lr}
 801226a:	2500      	movs	r5, #0
 801226c:	4295      	cmp	r5, r2
 801226e:	d011      	beq.n	8012294 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x2c>
 8012270:	8bc4      	ldrh	r4, [r0, #30]
 8012272:	f831 6b02 	ldrh.w	r6, [r1], #2
 8012276:	4414      	add	r4, r2
 8012278:	3c01      	subs	r4, #1
 801227a:	1b64      	subs	r4, r4, r5
 801227c:	b2a4      	uxth	r4, r4
 801227e:	2c01      	cmp	r4, #1
 8012280:	bf88      	it	hi
 8012282:	3c02      	subhi	r4, #2
 8012284:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8012288:	8b64      	ldrh	r4, [r4, #26]
 801228a:	42b4      	cmp	r4, r6
 801228c:	d117      	bne.n	80122be <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x56>
 801228e:	3501      	adds	r5, #1
 8012290:	b2ad      	uxth	r5, r5
 8012292:	e7eb      	b.n	801226c <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x4>
 8012294:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 8012298:	2400      	movs	r4, #0
 801229a:	4413      	add	r3, r2
 801229c:	b2a2      	uxth	r2, r4
 801229e:	429a      	cmp	r2, r3
 80122a0:	da0f      	bge.n	80122c2 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x5a>
 80122a2:	8ec6      	ldrh	r6, [r0, #54]	@ 0x36
 80122a4:	f831 5014 	ldrh.w	r5, [r1, r4, lsl #1]
 80122a8:	4432      	add	r2, r6
 80122aa:	b292      	uxth	r2, r2
 80122ac:	2a09      	cmp	r2, #9
 80122ae:	bf88      	it	hi
 80122b0:	3a0a      	subhi	r2, #10
 80122b2:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 80122b6:	3401      	adds	r4, #1
 80122b8:	8c52      	ldrh	r2, [r2, #34]	@ 0x22
 80122ba:	42aa      	cmp	r2, r5
 80122bc:	d0ee      	beq.n	801229c <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x34>
 80122be:	2000      	movs	r0, #0
 80122c0:	bd70      	pop	{r4, r5, r6, pc}
 80122c2:	2001      	movs	r0, #1
 80122c4:	e7fc      	b.n	80122c0 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x58>

080122c6 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>:
 80122c6:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80122ca:	4605      	mov	r5, r0
 80122cc:	4616      	mov	r6, r2
 80122ce:	1c8c      	adds	r4, r1, #2
 80122d0:	8809      	ldrh	r1, [r1, #0]
 80122d2:	ea4f 3a11 	mov.w	sl, r1, lsr #12
 80122d6:	f834 301a 	ldrh.w	r3, [r4, sl, lsl #1]
 80122da:	42b3      	cmp	r3, r6
 80122dc:	d124      	bne.n	8012328 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x62>
 80122de:	f3c1 2903 	ubfx	r9, r1, #8, #4
 80122e2:	f3c1 1803 	ubfx	r8, r1, #4, #4
 80122e6:	f001 070f 	and.w	r7, r1, #15
 80122ea:	f8cd 8000 	str.w	r8, [sp]
 80122ee:	464b      	mov	r3, r9
 80122f0:	4652      	mov	r2, sl
 80122f2:	4621      	mov	r1, r4
 80122f4:	4628      	mov	r0, r5
 80122f6:	f7ff ffb7 	bl	8012268 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>
 80122fa:	4683      	mov	fp, r0
 80122fc:	b168      	cbz	r0, 801231a <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x54>
 80122fe:	eb0a 0109 	add.w	r1, sl, r9
 8012302:	4441      	add	r1, r8
 8012304:	eb04 0341 	add.w	r3, r4, r1, lsl #1
 8012308:	463a      	mov	r2, r7
 801230a:	4649      	mov	r1, r9
 801230c:	4628      	mov	r0, r5
 801230e:	f7ff ff53 	bl	80121b8 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>
 8012312:	4658      	mov	r0, fp
 8012314:	b003      	add	sp, #12
 8012316:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801231a:	eb07 010a 	add.w	r1, r7, sl
 801231e:	4449      	add	r1, r9
 8012320:	4441      	add	r1, r8
 8012322:	eb04 0141 	add.w	r1, r4, r1, lsl #1
 8012326:	e7d2      	b.n	80122ce <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x8>
 8012328:	f04f 0b00 	mov.w	fp, #0
 801232c:	e7f1      	b.n	8012312 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x4c>

0801232e <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>:
 801232e:	b570      	push	{r4, r5, r6, lr}
 8012330:	8810      	ldrh	r0, [r2, #0]
 8012332:	4298      	cmp	r0, r3
 8012334:	d817      	bhi.n	8012366 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 8012336:	1e48      	subs	r0, r1, #1
 8012338:	f832 0020 	ldrh.w	r0, [r2, r0, lsl #2]
 801233c:	4298      	cmp	r0, r3
 801233e:	d312      	bcc.n	8012366 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 8012340:	2400      	movs	r4, #0
 8012342:	428c      	cmp	r4, r1
 8012344:	d20f      	bcs.n	8012366 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 8012346:	1860      	adds	r0, r4, r1
 8012348:	1040      	asrs	r0, r0, #1
 801234a:	0085      	lsls	r5, r0, #2
 801234c:	f832 6020 	ldrh.w	r6, [r2, r0, lsl #2]
 8012350:	42b3      	cmp	r3, r6
 8012352:	d902      	bls.n	801235a <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x2c>
 8012354:	3001      	adds	r0, #1
 8012356:	b284      	uxth	r4, r0
 8012358:	e7f3      	b.n	8012342 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 801235a:	d201      	bcs.n	8012360 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x32>
 801235c:	b281      	uxth	r1, r0
 801235e:	e7f0      	b.n	8012342 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 8012360:	442a      	add	r2, r5
 8012362:	8850      	ldrh	r0, [r2, #2]
 8012364:	bd70      	pop	{r4, r5, r6, pc}
 8012366:	2000      	movs	r0, #0
 8012368:	e7fc      	b.n	8012364 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x36>

0801236a <_ZN8touchgfx12TextProvider16substituteGlyphsEv>:
 801236a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801236e:	6c45      	ldr	r5, [r0, #68]	@ 0x44
 8012370:	886f      	ldrh	r7, [r5, #2]
 8012372:	4604      	mov	r4, r0
 8012374:	087f      	lsrs	r7, r7, #1
 8012376:	260b      	movs	r6, #11
 8012378:	3e01      	subs	r6, #1
 801237a:	d013      	beq.n	80123a4 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x3a>
 801237c:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
 801237e:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8012382:	462a      	mov	r2, r5
 8012384:	f8b3 8022 	ldrh.w	r8, [r3, #34]	@ 0x22
 8012388:	4639      	mov	r1, r7
 801238a:	4643      	mov	r3, r8
 801238c:	4620      	mov	r0, r4
 801238e:	f7ff ffce 	bl	801232e <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>
 8012392:	b138      	cbz	r0, 80123a4 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x3a>
 8012394:	eb05 0140 	add.w	r1, r5, r0, lsl #1
 8012398:	4642      	mov	r2, r8
 801239a:	4620      	mov	r0, r4
 801239c:	f7ff ff93 	bl	80122c6 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>
 80123a0:	2800      	cmp	r0, #0
 80123a2:	d1e9      	bne.n	8012378 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0xe>
 80123a4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

080123a8 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>:
 80123a8:	b570      	push	{r4, r5, r6, lr}
 80123aa:	694a      	ldr	r2, [r1, #20]
 80123ac:	6a8d      	ldr	r5, [r1, #40]	@ 0x28
 80123ae:	684b      	ldr	r3, [r1, #4]
 80123b0:	6ace      	ldr	r6, [r1, #44]	@ 0x2c
 80123b2:	1b54      	subs	r4, r2, r5
 80123b4:	f000 8106 	beq.w	80125c4 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x21c>
 80123b8:	1b9b      	subs	r3, r3, r6
 80123ba:	d003      	beq.n	80123c4 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
 80123bc:	4363      	muls	r3, r4
 80123be:	2210      	movs	r2, #16
 80123c0:	fb93 f3f2 	sdiv	r3, r3, r2
 80123c4:	680c      	ldr	r4, [r1, #0]
 80123c6:	698a      	ldr	r2, [r1, #24]
 80123c8:	1b65      	subs	r5, r4, r5
 80123ca:	f000 80fd 	beq.w	80125c8 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x220>
 80123ce:	1b92      	subs	r2, r2, r6
 80123d0:	d003      	beq.n	80123da <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
 80123d2:	436a      	muls	r2, r5
 80123d4:	2410      	movs	r4, #16
 80123d6:	fb92 f2f4 	sdiv	r2, r2, r4
 80123da:	1a9b      	subs	r3, r3, r2
 80123dc:	ee07 3a90 	vmov	s15, r3
 80123e0:	ed9f 4a88 	vldr	s8, [pc, #544]	@ 8012604 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x25c>
 80123e4:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80123e8:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 80123ec:	ee67 7a84 	vmul.f32	s15, s15, s8
 80123f0:	460a      	mov	r2, r1
 80123f2:	ee87 3a27 	vdiv.f32	s6, s14, s15
 80123f6:	4603      	mov	r3, r0
 80123f8:	f100 040c 	add.w	r4, r0, #12
 80123fc:	eeb1 6a43 	vneg.f32	s12, s6
 8012400:	edd2 7a02 	vldr	s15, [r2, #8]
 8012404:	eec7 6a27 	vdiv.f32	s13, s14, s15
 8012408:	3214      	adds	r2, #20
 801240a:	ece3 6a01 	vstmia	r3!, {s13}
 801240e:	ed52 7a02 	vldr	s15, [r2, #-8]
 8012412:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8012416:	429c      	cmp	r4, r3
 8012418:	edc3 7a02 	vstr	s15, [r3, #8]
 801241c:	ed52 7a01 	vldr	s15, [r2, #-4]
 8012420:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8012424:	edc3 7a05 	vstr	s15, [r3, #20]
 8012428:	d1ea      	bne.n	8012400 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x58>
 801242a:	6aca      	ldr	r2, [r1, #44]	@ 0x2c
 801242c:	698b      	ldr	r3, [r1, #24]
 801242e:	edd0 4a02 	vldr	s9, [r0, #8]
 8012432:	edd0 3a00 	vldr	s7, [r0]
 8012436:	edd0 6a01 	vldr	s13, [r0, #4]
 801243a:	ed90 5a05 	vldr	s10, [r0, #20]
 801243e:	ed90 2a03 	vldr	s4, [r0, #12]
 8012442:	edd0 5a04 	vldr	s11, [r0, #16]
 8012446:	ed90 1a07 	vldr	s2, [r0, #28]
 801244a:	edd0 2a06 	vldr	s5, [r0, #24]
 801244e:	1a9b      	subs	r3, r3, r2
 8012450:	ee07 3a90 	vmov	s15, r3
 8012454:	684b      	ldr	r3, [r1, #4]
 8012456:	1a9b      	subs	r3, r3, r2
 8012458:	ee07 3a10 	vmov	s14, r3
 801245c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8012460:	ee76 6ae4 	vsub.f32	s13, s13, s9
 8012464:	ee67 7a84 	vmul.f32	s15, s15, s8
 8012468:	ee73 4ae4 	vsub.f32	s9, s7, s9
 801246c:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8012470:	ee64 7ae7 	vnmul.f32	s15, s9, s15
 8012474:	ee27 7a04 	vmul.f32	s14, s14, s8
 8012478:	ee75 5ac5 	vsub.f32	s11, s11, s10
 801247c:	eee6 7a87 	vfma.f32	s15, s13, s14
 8012480:	ee32 5a45 	vsub.f32	s10, s4, s10
 8012484:	ee67 7a83 	vmul.f32	s15, s15, s6
 8012488:	edc0 7a09 	vstr	s15, [r0, #36]	@ 0x24
 801248c:	6a8c      	ldr	r4, [r1, #40]	@ 0x28
 801248e:	694a      	ldr	r2, [r1, #20]
 8012490:	1b13      	subs	r3, r2, r4
 8012492:	ee07 3a10 	vmov	s14, r3
 8012496:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801249a:	680b      	ldr	r3, [r1, #0]
 801249c:	ee27 7a04 	vmul.f32	s14, s14, s8
 80124a0:	1b1b      	subs	r3, r3, r4
 80124a2:	ee64 4ac7 	vnmul.f32	s9, s9, s14
 80124a6:	ee07 3a10 	vmov	s14, r3
 80124aa:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80124ae:	ee27 7a04 	vmul.f32	s14, s14, s8
 80124b2:	eee6 4a87 	vfma.f32	s9, s13, s14
 80124b6:	ee64 4a86 	vmul.f32	s9, s9, s12
 80124ba:	edc0 4a0a 	vstr	s9, [r0, #40]	@ 0x28
 80124be:	6aca      	ldr	r2, [r1, #44]	@ 0x2c
 80124c0:	698b      	ldr	r3, [r1, #24]
 80124c2:	1a9b      	subs	r3, r3, r2
 80124c4:	ee06 3a90 	vmov	s13, r3
 80124c8:	684b      	ldr	r3, [r1, #4]
 80124ca:	1a9b      	subs	r3, r3, r2
 80124cc:	ee07 3a10 	vmov	s14, r3
 80124d0:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 80124d4:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80124d8:	ee66 6a84 	vmul.f32	s13, s13, s8
 80124dc:	ee27 7a04 	vmul.f32	s14, s14, s8
 80124e0:	ee65 6a66 	vnmul.f32	s13, s10, s13
 80124e4:	eee5 6a87 	vfma.f32	s13, s11, s14
 80124e8:	ee66 6a83 	vmul.f32	s13, s13, s6
 80124ec:	edc0 6a0b 	vstr	s13, [r0, #44]	@ 0x2c
 80124f0:	6a8c      	ldr	r4, [r1, #40]	@ 0x28
 80124f2:	694a      	ldr	r2, [r1, #20]
 80124f4:	1b13      	subs	r3, r2, r4
 80124f6:	ee07 3a10 	vmov	s14, r3
 80124fa:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80124fe:	680b      	ldr	r3, [r1, #0]
 8012500:	ee27 7a04 	vmul.f32	s14, s14, s8
 8012504:	1b1b      	subs	r3, r3, r4
 8012506:	ee25 5a47 	vnmul.f32	s10, s10, s14
 801250a:	ee07 3a10 	vmov	s14, r3
 801250e:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8012512:	ee27 7a04 	vmul.f32	s14, s14, s8
 8012516:	eea5 5a87 	vfma.f32	s10, s11, s14
 801251a:	edd0 5a08 	vldr	s11, [r0, #32]
 801251e:	ee25 5a06 	vmul.f32	s10, s10, s12
 8012522:	ee31 1a65 	vsub.f32	s2, s2, s11
 8012526:	ed80 5a0c 	vstr	s10, [r0, #48]	@ 0x30
 801252a:	6aca      	ldr	r2, [r1, #44]	@ 0x2c
 801252c:	698b      	ldr	r3, [r1, #24]
 801252e:	1a9b      	subs	r3, r3, r2
 8012530:	ee07 3a10 	vmov	s14, r3
 8012534:	684b      	ldr	r3, [r1, #4]
 8012536:	1a9b      	subs	r3, r3, r2
 8012538:	ee01 3a90 	vmov	s3, r3
 801253c:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8012540:	ee72 5ae5 	vsub.f32	s11, s5, s11
 8012544:	ee27 7a04 	vmul.f32	s14, s14, s8
 8012548:	eef8 1ae1 	vcvt.f32.s32	s3, s3
 801254c:	ee25 7ac7 	vnmul.f32	s14, s11, s14
 8012550:	ee61 1a84 	vmul.f32	s3, s3, s8
 8012554:	eea1 7a21 	vfma.f32	s14, s2, s3
 8012558:	ee27 7a03 	vmul.f32	s14, s14, s6
 801255c:	ed80 7a0d 	vstr	s14, [r0, #52]	@ 0x34
 8012560:	6a8c      	ldr	r4, [r1, #40]	@ 0x28
 8012562:	694a      	ldr	r2, [r1, #20]
 8012564:	1b13      	subs	r3, r2, r4
 8012566:	ee03 3a10 	vmov	s6, r3
 801256a:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
 801256e:	680b      	ldr	r3, [r1, #0]
 8012570:	ee23 3a04 	vmul.f32	s6, s6, s8
 8012574:	1b1b      	subs	r3, r3, r4
 8012576:	ee65 5ac3 	vnmul.f32	s11, s11, s6
 801257a:	ee03 3a10 	vmov	s6, r3
 801257e:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
 8012582:	ee23 4a04 	vmul.f32	s8, s6, s8
 8012586:	eee1 5a04 	vfma.f32	s11, s2, s8
 801258a:	ee25 6a86 	vmul.f32	s12, s11, s12
 801258e:	ee62 5a67 	vnmul.f32	s11, s4, s15
 8012592:	ed80 6a0e 	vstr	s12, [r0, #56]	@ 0x38
 8012596:	eee3 5aa6 	vfma.f32	s11, s7, s13
 801259a:	eef5 5ac0 	vcmpe.f32	s11, #0.0
 801259e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80125a2:	dd13      	ble.n	80125cc <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x224>
 80125a4:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
 80125a8:	ee62 7ae7 	vnmul.f32	s15, s5, s15
 80125ac:	63c3      	str	r3, [r0, #60]	@ 0x3c
 80125ae:	eee3 7a87 	vfma.f32	s15, s7, s14
 80125b2:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80125b6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80125ba:	dd15      	ble.n	80125e8 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x240>
 80125bc:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
 80125c0:	6403      	str	r3, [r0, #64]	@ 0x40
 80125c2:	bd70      	pop	{r4, r5, r6, pc}
 80125c4:	4623      	mov	r3, r4
 80125c6:	e6fd      	b.n	80123c4 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
 80125c8:	462a      	mov	r2, r5
 80125ca:	e706      	b.n	80123da <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
 80125cc:	d502      	bpl.n	80125d4 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x22c>
 80125ce:	f647 73ff 	movw	r3, #32767	@ 0x7fff
 80125d2:	e7e9      	b.n	80125a8 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x200>
 80125d4:	ee22 2a64 	vnmul.f32	s4, s4, s9
 80125d8:	eea3 2a85 	vfma.f32	s4, s7, s10
 80125dc:	eeb5 2ac0 	vcmpe.f32	s4, #0.0
 80125e0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80125e4:	dade      	bge.n	80125a4 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1fc>
 80125e6:	e7f2      	b.n	80125ce <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x226>
 80125e8:	d502      	bpl.n	80125f0 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x248>
 80125ea:	f647 73ff 	movw	r3, #32767	@ 0x7fff
 80125ee:	e7e7      	b.n	80125c0 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x218>
 80125f0:	ee62 4ae4 	vnmul.f32	s9, s5, s9
 80125f4:	eee3 4a86 	vfma.f32	s9, s7, s12
 80125f8:	eef5 4ac0 	vcmpe.f32	s9, #0.0
 80125fc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8012600:	dadc      	bge.n	80125bc <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x214>
 8012602:	e7f2      	b.n	80125ea <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x242>
 8012604:	3d800000 	.word	0x3d800000

08012608 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>:
 8012608:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801260c:	2714      	movs	r7, #20
 801260e:	435f      	muls	r7, r3
 8012610:	eb02 0c07 	add.w	ip, r2, r7
 8012614:	f8dc 5004 	ldr.w	r5, [ip, #4]
 8012618:	f115 0e0f 	adds.w	lr, r5, #15
 801261c:	f100 80a2 	bmi.w	8012764 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x15c>
 8012620:	ea4f 1e2e 	mov.w	lr, lr, asr #4
 8012624:	9c08      	ldr	r4, [sp, #32]
 8012626:	f8c0 e014 	str.w	lr, [r0, #20]
 801262a:	2614      	movs	r6, #20
 801262c:	4366      	muls	r6, r4
 801262e:	eb02 0806 	add.w	r8, r2, r6
 8012632:	f8d8 5004 	ldr.w	r5, [r8, #4]
 8012636:	f115 040f 	adds.w	r4, r5, #15
 801263a:	f100 809f 	bmi.w	801277c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x174>
 801263e:	1124      	asrs	r4, r4, #4
 8012640:	eba4 040e 	sub.w	r4, r4, lr
 8012644:	6184      	str	r4, [r0, #24]
 8012646:	2c00      	cmp	r4, #0
 8012648:	f000 808a 	beq.w	8012760 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x158>
 801264c:	f8dc 9004 	ldr.w	r9, [ip, #4]
 8012650:	f8d8 4004 	ldr.w	r4, [r8, #4]
 8012654:	5995      	ldr	r5, [r2, r6]
 8012656:	eba4 0809 	sub.w	r8, r4, r9
 801265a:	59d4      	ldr	r4, [r2, r7]
 801265c:	eba5 0a04 	sub.w	sl, r5, r4
 8012660:	ea4f 150a 	mov.w	r5, sl, lsl #4
 8012664:	fb0e fe05 	mul.w	lr, lr, r5
 8012668:	fb0a ee19 	mls	lr, sl, r9, lr
 801266c:	fb08 e404 	mla	r4, r8, r4, lr
 8012670:	ea4f 1608 	mov.w	r6, r8, lsl #4
 8012674:	3c01      	subs	r4, #1
 8012676:	19a4      	adds	r4, r4, r6
 8012678:	f100 808c 	bmi.w	8012794 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x18c>
 801267c:	fb94 fef6 	sdiv	lr, r4, r6
 8012680:	f8c0 e000 	str.w	lr, [r0]
 8012684:	fb06 441e 	mls	r4, r6, lr, r4
 8012688:	6104      	str	r4, [r0, #16]
 801268a:	2d00      	cmp	r5, #0
 801268c:	f2c0 8095 	blt.w	80127ba <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1b2>
 8012690:	fb95 f4f6 	sdiv	r4, r5, r6
 8012694:	6044      	str	r4, [r0, #4]
 8012696:	fb06 5514 	mls	r5, r6, r4, r5
 801269a:	6085      	str	r5, [r0, #8]
 801269c:	60c6      	str	r6, [r0, #12]
 801269e:	f8dc 4004 	ldr.w	r4, [ip, #4]
 80126a2:	6945      	ldr	r5, [r0, #20]
 80126a4:	59d2      	ldr	r2, [r2, r7]
 80126a6:	eddf 6a4d 	vldr	s13, [pc, #308]	@ 80127dc <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1d4>
 80126aa:	ed91 6a0a 	vldr	s12, [r1, #40]	@ 0x28
 80126ae:	ebc4 1405 	rsb	r4, r4, r5, lsl #4
 80126b2:	ee07 4a10 	vmov	s14, r4
 80126b6:	6804      	ldr	r4, [r0, #0]
 80126b8:	ebc2 1204 	rsb	r2, r2, r4, lsl #4
 80126bc:	ee07 2a90 	vmov	s15, r2
 80126c0:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80126c4:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80126c8:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 80126cc:	ee27 7a26 	vmul.f32	s14, s14, s13
 80126d0:	ee67 7aa6 	vmul.f32	s15, s15, s13
 80126d4:	edd3 6a00 	vldr	s13, [r3]
 80126d8:	eee6 6a07 	vfma.f32	s13, s12, s14
 80126dc:	ed91 6a09 	vldr	s12, [r1, #36]	@ 0x24
 80126e0:	eee6 6a27 	vfma.f32	s13, s12, s15
 80126e4:	edc0 6a07 	vstr	s13, [r0, #28]
 80126e8:	edd0 6a01 	vldr	s13, [r0, #4]
 80126ec:	edd1 5a09 	vldr	s11, [r1, #36]	@ 0x24
 80126f0:	ed91 6a0a 	vldr	s12, [r1, #40]	@ 0x28
 80126f4:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 80126f8:	eea6 6aa5 	vfma.f32	s12, s13, s11
 80126fc:	ed80 6a08 	vstr	s12, [r0, #32]
 8012700:	6a4a      	ldr	r2, [r1, #36]	@ 0x24
 8012702:	6242      	str	r2, [r0, #36]	@ 0x24
 8012704:	edd1 5a0c 	vldr	s11, [r1, #48]	@ 0x30
 8012708:	ed93 6a03 	vldr	s12, [r3, #12]
 801270c:	eea5 6a87 	vfma.f32	s12, s11, s14
 8012710:	edd1 5a0b 	vldr	s11, [r1, #44]	@ 0x2c
 8012714:	eea5 6aa7 	vfma.f32	s12, s11, s15
 8012718:	ed80 6a0a 	vstr	s12, [r0, #40]	@ 0x28
 801271c:	edd1 5a0b 	vldr	s11, [r1, #44]	@ 0x2c
 8012720:	ed91 6a0c 	vldr	s12, [r1, #48]	@ 0x30
 8012724:	eea6 6aa5 	vfma.f32	s12, s13, s11
 8012728:	ed80 6a0b 	vstr	s12, [r0, #44]	@ 0x2c
 801272c:	6aca      	ldr	r2, [r1, #44]	@ 0x2c
 801272e:	6302      	str	r2, [r0, #48]	@ 0x30
 8012730:	ed93 6a06 	vldr	s12, [r3, #24]
 8012734:	edd1 5a0e 	vldr	s11, [r1, #56]	@ 0x38
 8012738:	eea5 6a87 	vfma.f32	s12, s11, s14
 801273c:	eeb0 7a46 	vmov.f32	s14, s12
 8012740:	ed91 6a0d 	vldr	s12, [r1, #52]	@ 0x34
 8012744:	eea6 7a27 	vfma.f32	s14, s12, s15
 8012748:	ed80 7a0d 	vstr	s14, [r0, #52]	@ 0x34
 801274c:	ed91 7a0d 	vldr	s14, [r1, #52]	@ 0x34
 8012750:	edd1 7a0e 	vldr	s15, [r1, #56]	@ 0x38
 8012754:	eee6 7a87 	vfma.f32	s15, s13, s14
 8012758:	edc0 7a0e 	vstr	s15, [r0, #56]	@ 0x38
 801275c:	6b4b      	ldr	r3, [r1, #52]	@ 0x34
 801275e:	63c3      	str	r3, [r0, #60]	@ 0x3c
 8012760:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8012764:	f1c5 0501 	rsb	r5, r5, #1
 8012768:	f015 050f 	ands.w	r5, r5, #15
 801276c:	bf18      	it	ne
 801276e:	2501      	movne	r5, #1
 8012770:	2410      	movs	r4, #16
 8012772:	fb9e fef4 	sdiv	lr, lr, r4
 8012776:	ebae 0e05 	sub.w	lr, lr, r5
 801277a:	e753      	b.n	8012624 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1c>
 801277c:	f1c5 0501 	rsb	r5, r5, #1
 8012780:	f015 050f 	ands.w	r5, r5, #15
 8012784:	bf18      	it	ne
 8012786:	2501      	movne	r5, #1
 8012788:	f04f 0910 	mov.w	r9, #16
 801278c:	fb94 f4f9 	sdiv	r4, r4, r9
 8012790:	1b64      	subs	r4, r4, r5
 8012792:	e755      	b.n	8012640 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x38>
 8012794:	4264      	negs	r4, r4
 8012796:	fb94 fef6 	sdiv	lr, r4, r6
 801279a:	f1ce 0800 	rsb	r8, lr, #0
 801279e:	fb06 441e 	mls	r4, r6, lr, r4
 80127a2:	f8c0 8000 	str.w	r8, [r0]
 80127a6:	6104      	str	r4, [r0, #16]
 80127a8:	2c00      	cmp	r4, #0
 80127aa:	f43f af6e 	beq.w	801268a <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x82>
 80127ae:	ea6f 0e0e 	mvn.w	lr, lr
 80127b2:	f8c0 e000 	str.w	lr, [r0]
 80127b6:	1b34      	subs	r4, r6, r4
 80127b8:	e766      	b.n	8012688 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x80>
 80127ba:	426d      	negs	r5, r5
 80127bc:	fb95 f4f6 	sdiv	r4, r5, r6
 80127c0:	f1c4 0e00 	rsb	lr, r4, #0
 80127c4:	fb06 5514 	mls	r5, r6, r4, r5
 80127c8:	f8c0 e004 	str.w	lr, [r0, #4]
 80127cc:	6085      	str	r5, [r0, #8]
 80127ce:	2d00      	cmp	r5, #0
 80127d0:	f43f af64 	beq.w	801269c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x94>
 80127d4:	43e4      	mvns	r4, r4
 80127d6:	6044      	str	r4, [r0, #4]
 80127d8:	1b75      	subs	r5, r6, r5
 80127da:	e75e      	b.n	801269a <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x92>
 80127dc:	3d800000 	.word	0x3d800000

080127e0 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>:
 80127e0:	4b01      	ldr	r3, [pc, #4]	@ (80127e8 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE+0x8>)
 80127e2:	6018      	str	r0, [r3, #0]
 80127e4:	4770      	bx	lr
 80127e6:	bf00      	nop
 80127e8:	20013f94 	.word	0x20013f94

080127ec <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>:
 80127ec:	4b06      	ldr	r3, [pc, #24]	@ (8012808 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x1c>)
 80127ee:	881a      	ldrh	r2, [r3, #0]
 80127f0:	4282      	cmp	r2, r0
 80127f2:	d807      	bhi.n	8012804 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x18>
 80127f4:	4b05      	ldr	r3, [pc, #20]	@ (801280c <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x20>)
 80127f6:	881b      	ldrh	r3, [r3, #0]
 80127f8:	4413      	add	r3, r2
 80127fa:	4298      	cmp	r0, r3
 80127fc:	bfac      	ite	ge
 80127fe:	2000      	movge	r0, #0
 8012800:	2001      	movlt	r0, #1
 8012802:	4770      	bx	lr
 8012804:	2000      	movs	r0, #0
 8012806:	4770      	bx	lr
 8012808:	20013fb4 	.word	0x20013fb4
 801280c:	20013fb8 	.word	0x20013fb8

08012810 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>:
 8012810:	b508      	push	{r3, lr}
 8012812:	4601      	mov	r1, r0
 8012814:	f7ff ffea 	bl	80127ec <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>
 8012818:	b118      	cbz	r0, 8012822 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x12>
 801281a:	4b02      	ldr	r3, [pc, #8]	@ (8012824 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x14>)
 801281c:	681b      	ldr	r3, [r3, #0]
 801281e:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
 8012822:	bd08      	pop	{r3, pc}
 8012824:	20013f98 	.word	0x20013f98

08012828 <_ZN8touchgfx6Bitmap10clearCacheEv>:
 8012828:	b5f0      	push	{r4, r5, r6, r7, lr}
 801282a:	4c24      	ldr	r4, [pc, #144]	@ (80128bc <_ZN8touchgfx6Bitmap10clearCacheEv+0x94>)
 801282c:	6823      	ldr	r3, [r4, #0]
 801282e:	2b00      	cmp	r3, #0
 8012830:	d042      	beq.n	80128b8 <_ZN8touchgfx6Bitmap10clearCacheEv+0x90>
 8012832:	4a23      	ldr	r2, [pc, #140]	@ (80128c0 <_ZN8touchgfx6Bitmap10clearCacheEv+0x98>)
 8012834:	4d23      	ldr	r5, [pc, #140]	@ (80128c4 <_ZN8touchgfx6Bitmap10clearCacheEv+0x9c>)
 8012836:	8811      	ldrh	r1, [r2, #0]
 8012838:	f8b5 c000 	ldrh.w	ip, [r5]
 801283c:	4822      	ldr	r0, [pc, #136]	@ (80128c8 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa0>)
 801283e:	4461      	add	r1, ip
 8012840:	1c4a      	adds	r2, r1, #1
 8012842:	f022 0201 	bic.w	r2, r2, #1
 8012846:	008f      	lsls	r7, r1, #2
 8012848:	0412      	lsls	r2, r2, #16
 801284a:	19de      	adds	r6, r3, r7
 801284c:	0c12      	lsrs	r2, r2, #16
 801284e:	eb07 0742 	add.w	r7, r7, r2, lsl #1
 8012852:	6006      	str	r6, [r0, #0]
 8012854:	4e1d      	ldr	r6, [pc, #116]	@ (80128cc <_ZN8touchgfx6Bitmap10clearCacheEv+0xa4>)
 8012856:	19da      	adds	r2, r3, r7
 8012858:	6032      	str	r2, [r6, #0]
 801285a:	220e      	movs	r2, #14
 801285c:	fb02 f20c 	mul.w	r2, r2, ip
 8012860:	3203      	adds	r2, #3
 8012862:	f022 0203 	bic.w	r2, r2, #3
 8012866:	443a      	add	r2, r7
 8012868:	4f19      	ldr	r7, [pc, #100]	@ (80128d0 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa8>)
 801286a:	4413      	add	r3, r2
 801286c:	603b      	str	r3, [r7, #0]
 801286e:	4f19      	ldr	r7, [pc, #100]	@ (80128d4 <_ZN8touchgfx6Bitmap10clearCacheEv+0xac>)
 8012870:	2300      	movs	r3, #0
 8012872:	803b      	strh	r3, [r7, #0]
 8012874:	4f18      	ldr	r7, [pc, #96]	@ (80128d8 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb0>)
 8012876:	683f      	ldr	r7, [r7, #0]
 8012878:	1aba      	subs	r2, r7, r2
 801287a:	4f18      	ldr	r7, [pc, #96]	@ (80128dc <_ZN8touchgfx6Bitmap10clearCacheEv+0xb4>)
 801287c:	603a      	str	r2, [r7, #0]
 801287e:	4a18      	ldr	r2, [pc, #96]	@ (80128e0 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb8>)
 8012880:	469c      	mov	ip, r3
 8012882:	8013      	strh	r3, [r2, #0]
 8012884:	f64f 77ff 	movw	r7, #65535	@ 0xffff
 8012888:	428b      	cmp	r3, r1
 801288a:	d10d      	bne.n	80128a8 <_ZN8touchgfx6Bitmap10clearCacheEv+0x80>
 801288c:	882d      	ldrh	r5, [r5, #0]
 801288e:	6830      	ldr	r0, [r6, #0]
 8012890:	2300      	movs	r3, #0
 8012892:	240e      	movs	r4, #14
 8012894:	429d      	cmp	r5, r3
 8012896:	d90f      	bls.n	80128b8 <_ZN8touchgfx6Bitmap10clearCacheEv+0x90>
 8012898:	fb04 0203 	mla	r2, r4, r3, r0
 801289c:	3301      	adds	r3, #1
 801289e:	7b11      	ldrb	r1, [r2, #12]
 80128a0:	f36f 1145 	bfc	r1, #5, #1
 80128a4:	7311      	strb	r1, [r2, #12]
 80128a6:	e7f5      	b.n	8012894 <_ZN8touchgfx6Bitmap10clearCacheEv+0x6c>
 80128a8:	6822      	ldr	r2, [r4, #0]
 80128aa:	f842 c023 	str.w	ip, [r2, r3, lsl #2]
 80128ae:	6802      	ldr	r2, [r0, #0]
 80128b0:	f822 7013 	strh.w	r7, [r2, r3, lsl #1]
 80128b4:	3301      	adds	r3, #1
 80128b6:	e7e7      	b.n	8012888 <_ZN8touchgfx6Bitmap10clearCacheEv+0x60>
 80128b8:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80128ba:	bf00      	nop
 80128bc:	20013f98 	.word	0x20013f98
 80128c0:	20013fb4 	.word	0x20013fb4
 80128c4:	20013fb8 	.word	0x20013fb8
 80128c8:	20013fac 	.word	0x20013fac
 80128cc:	20013f9c 	.word	0x20013f9c
 80128d0:	20013fa4 	.word	0x20013fa4
 80128d4:	20013fb6 	.word	0x20013fb6
 80128d8:	20013fa0 	.word	0x20013fa0
 80128dc:	20013fb0 	.word	0x20013fb0
 80128e0:	20013fa8 	.word	0x20013fa8

080128e4 <_ZN8touchgfx6Bitmap8setCacheEPtmm>:
 80128e4:	4b06      	ldr	r3, [pc, #24]	@ (8012900 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x1c>)
 80128e6:	681b      	ldr	r3, [r3, #0]
 80128e8:	b943      	cbnz	r3, 80128fc <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x18>
 80128ea:	b139      	cbz	r1, 80128fc <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x18>
 80128ec:	4b05      	ldr	r3, [pc, #20]	@ (8012904 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x20>)
 80128ee:	801a      	strh	r2, [r3, #0]
 80128f0:	4b05      	ldr	r3, [pc, #20]	@ (8012908 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x24>)
 80128f2:	6019      	str	r1, [r3, #0]
 80128f4:	4b05      	ldr	r3, [pc, #20]	@ (801290c <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x28>)
 80128f6:	6018      	str	r0, [r3, #0]
 80128f8:	f7ff bf96 	b.w	8012828 <_ZN8touchgfx6Bitmap10clearCacheEv>
 80128fc:	4770      	bx	lr
 80128fe:	bf00      	nop
 8012900:	20013fa4 	.word	0x20013fa4
 8012904:	20013fb8 	.word	0x20013fb8
 8012908:	20013fa0 	.word	0x20013fa0
 801290c:	20013f98 	.word	0x20013f98

08012910 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>:
 8012910:	b470      	push	{r4, r5, r6}
 8012912:	4c07      	ldr	r4, [pc, #28]	@ (8012930 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x20>)
 8012914:	6826      	ldr	r6, [r4, #0]
 8012916:	4605      	mov	r5, r0
 8012918:	4610      	mov	r0, r2
 801291a:	9a03      	ldr	r2, [sp, #12]
 801291c:	b936      	cbnz	r6, 801292c <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x1c>
 801291e:	6025      	str	r5, [r4, #0]
 8012920:	4c04      	ldr	r4, [pc, #16]	@ (8012934 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x24>)
 8012922:	8021      	strh	r1, [r4, #0]
 8012924:	bc70      	pop	{r4, r5, r6}
 8012926:	4619      	mov	r1, r3
 8012928:	f7ff bfdc 	b.w	80128e4 <_ZN8touchgfx6Bitmap8setCacheEPtmm>
 801292c:	bc70      	pop	{r4, r5, r6}
 801292e:	4770      	bx	lr
 8012930:	20013fbc 	.word	0x20013fbc
 8012934:	20013fb4 	.word	0x20013fb4

08012938 <_ZNK8touchgfx6Bitmap8getWidthEv>:
 8012938:	4a12      	ldr	r2, [pc, #72]	@ (8012984 <_ZNK8touchgfx6Bitmap8getWidthEv+0x4c>)
 801293a:	8803      	ldrh	r3, [r0, #0]
 801293c:	8812      	ldrh	r2, [r2, #0]
 801293e:	4293      	cmp	r3, r2
 8012940:	d207      	bcs.n	8012952 <_ZNK8touchgfx6Bitmap8getWidthEv+0x1a>
 8012942:	4a11      	ldr	r2, [pc, #68]	@ (8012988 <_ZNK8touchgfx6Bitmap8getWidthEv+0x50>)
 8012944:	6812      	ldr	r2, [r2, #0]
 8012946:	2114      	movs	r1, #20
 8012948:	fb01 2303 	mla	r3, r1, r3, r2
 801294c:	f9b3 0008 	ldrsh.w	r0, [r3, #8]
 8012950:	4770      	bx	lr
 8012952:	490e      	ldr	r1, [pc, #56]	@ (801298c <_ZNK8touchgfx6Bitmap8getWidthEv+0x54>)
 8012954:	8809      	ldrh	r1, [r1, #0]
 8012956:	4411      	add	r1, r2
 8012958:	428b      	cmp	r3, r1
 801295a:	da04      	bge.n	8012966 <_ZNK8touchgfx6Bitmap8getWidthEv+0x2e>
 801295c:	1a9b      	subs	r3, r3, r2
 801295e:	4a0c      	ldr	r2, [pc, #48]	@ (8012990 <_ZNK8touchgfx6Bitmap8getWidthEv+0x58>)
 8012960:	210e      	movs	r1, #14
 8012962:	6812      	ldr	r2, [r2, #0]
 8012964:	e7f0      	b.n	8012948 <_ZNK8touchgfx6Bitmap8getWidthEv+0x10>
 8012966:	f64f 72fe 	movw	r2, #65534	@ 0xfffe
 801296a:	4293      	cmp	r3, r2
 801296c:	d108      	bne.n	8012980 <_ZNK8touchgfx6Bitmap8getWidthEv+0x48>
 801296e:	4b09      	ldr	r3, [pc, #36]	@ (8012994 <_ZNK8touchgfx6Bitmap8getWidthEv+0x5c>)
 8012970:	781b      	ldrb	r3, [r3, #0]
 8012972:	b91b      	cbnz	r3, 801297c <_ZNK8touchgfx6Bitmap8getWidthEv+0x44>
 8012974:	4b08      	ldr	r3, [pc, #32]	@ (8012998 <_ZNK8touchgfx6Bitmap8getWidthEv+0x60>)
 8012976:	f9b3 0000 	ldrsh.w	r0, [r3]
 801297a:	4770      	bx	lr
 801297c:	4b07      	ldr	r3, [pc, #28]	@ (801299c <_ZNK8touchgfx6Bitmap8getWidthEv+0x64>)
 801297e:	e7fa      	b.n	8012976 <_ZNK8touchgfx6Bitmap8getWidthEv+0x3e>
 8012980:	2000      	movs	r0, #0
 8012982:	4770      	bx	lr
 8012984:	20013fb4 	.word	0x20013fb4
 8012988:	20013fbc 	.word	0x20013fbc
 801298c:	20013fb8 	.word	0x20013fb8
 8012990:	20013f9c 	.word	0x20013f9c
 8012994:	20013f22 	.word	0x20013f22
 8012998:	20013f24 	.word	0x20013f24
 801299c:	20013f26 	.word	0x20013f26

080129a0 <_ZNK8touchgfx6Bitmap9getHeightEv>:
 80129a0:	4a12      	ldr	r2, [pc, #72]	@ (80129ec <_ZNK8touchgfx6Bitmap9getHeightEv+0x4c>)
 80129a2:	8803      	ldrh	r3, [r0, #0]
 80129a4:	8812      	ldrh	r2, [r2, #0]
 80129a6:	4293      	cmp	r3, r2
 80129a8:	d207      	bcs.n	80129ba <_ZNK8touchgfx6Bitmap9getHeightEv+0x1a>
 80129aa:	4a11      	ldr	r2, [pc, #68]	@ (80129f0 <_ZNK8touchgfx6Bitmap9getHeightEv+0x50>)
 80129ac:	6812      	ldr	r2, [r2, #0]
 80129ae:	2114      	movs	r1, #20
 80129b0:	fb01 2303 	mla	r3, r1, r3, r2
 80129b4:	f9b3 000a 	ldrsh.w	r0, [r3, #10]
 80129b8:	4770      	bx	lr
 80129ba:	490e      	ldr	r1, [pc, #56]	@ (80129f4 <_ZNK8touchgfx6Bitmap9getHeightEv+0x54>)
 80129bc:	8809      	ldrh	r1, [r1, #0]
 80129be:	4411      	add	r1, r2
 80129c0:	428b      	cmp	r3, r1
 80129c2:	da04      	bge.n	80129ce <_ZNK8touchgfx6Bitmap9getHeightEv+0x2e>
 80129c4:	1a9b      	subs	r3, r3, r2
 80129c6:	4a0c      	ldr	r2, [pc, #48]	@ (80129f8 <_ZNK8touchgfx6Bitmap9getHeightEv+0x58>)
 80129c8:	210e      	movs	r1, #14
 80129ca:	6812      	ldr	r2, [r2, #0]
 80129cc:	e7f0      	b.n	80129b0 <_ZNK8touchgfx6Bitmap9getHeightEv+0x10>
 80129ce:	f64f 72fe 	movw	r2, #65534	@ 0xfffe
 80129d2:	4293      	cmp	r3, r2
 80129d4:	d108      	bne.n	80129e8 <_ZNK8touchgfx6Bitmap9getHeightEv+0x48>
 80129d6:	4b09      	ldr	r3, [pc, #36]	@ (80129fc <_ZNK8touchgfx6Bitmap9getHeightEv+0x5c>)
 80129d8:	781b      	ldrb	r3, [r3, #0]
 80129da:	b91b      	cbnz	r3, 80129e4 <_ZNK8touchgfx6Bitmap9getHeightEv+0x44>
 80129dc:	4b08      	ldr	r3, [pc, #32]	@ (8012a00 <_ZNK8touchgfx6Bitmap9getHeightEv+0x60>)
 80129de:	f9b3 0000 	ldrsh.w	r0, [r3]
 80129e2:	4770      	bx	lr
 80129e4:	4b07      	ldr	r3, [pc, #28]	@ (8012a04 <_ZNK8touchgfx6Bitmap9getHeightEv+0x64>)
 80129e6:	e7fa      	b.n	80129de <_ZNK8touchgfx6Bitmap9getHeightEv+0x3e>
 80129e8:	2000      	movs	r0, #0
 80129ea:	4770      	bx	lr
 80129ec:	20013fb4 	.word	0x20013fb4
 80129f0:	20013fbc 	.word	0x20013fbc
 80129f4:	20013fb8 	.word	0x20013fb8
 80129f8:	20013f9c 	.word	0x20013f9c
 80129fc:	20013f22 	.word	0x20013f22
 8012a00:	20013f26 	.word	0x20013f26
 8012a04:	20013f24 	.word	0x20013f24

08012a08 <_ZNK8touchgfx6Bitmap12getSolidRectEv>:
 8012a08:	b530      	push	{r4, r5, lr}
 8012a0a:	4a22      	ldr	r2, [pc, #136]	@ (8012a94 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x8c>)
 8012a0c:	880b      	ldrh	r3, [r1, #0]
 8012a0e:	8812      	ldrh	r2, [r2, #0]
 8012a10:	4293      	cmp	r3, r2
 8012a12:	d213      	bcs.n	8012a3c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x34>
 8012a14:	4a20      	ldr	r2, [pc, #128]	@ (8012a98 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x90>)
 8012a16:	6812      	ldr	r2, [r2, #0]
 8012a18:	2114      	movs	r1, #20
 8012a1a:	fb01 2303 	mla	r3, r1, r3, r2
 8012a1e:	8a1a      	ldrh	r2, [r3, #16]
 8012a20:	f9b3 400c 	ldrsh.w	r4, [r3, #12]
 8012a24:	f9b3 100e 	ldrsh.w	r1, [r3, #14]
 8012a28:	8a5b      	ldrh	r3, [r3, #18]
 8012a2a:	8004      	strh	r4, [r0, #0]
 8012a2c:	f3c2 020c 	ubfx	r2, r2, #0, #13
 8012a30:	f3c3 030c 	ubfx	r3, r3, #0, #13
 8012a34:	8041      	strh	r1, [r0, #2]
 8012a36:	8082      	strh	r2, [r0, #4]
 8012a38:	80c3      	strh	r3, [r0, #6]
 8012a3a:	e024      	b.n	8012a86 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x7e>
 8012a3c:	4917      	ldr	r1, [pc, #92]	@ (8012a9c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x94>)
 8012a3e:	8809      	ldrh	r1, [r1, #0]
 8012a40:	4411      	add	r1, r2
 8012a42:	428b      	cmp	r3, r1
 8012a44:	da10      	bge.n	8012a68 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x60>
 8012a46:	1a9b      	subs	r3, r3, r2
 8012a48:	220e      	movs	r2, #14
 8012a4a:	4353      	muls	r3, r2
 8012a4c:	4a14      	ldr	r2, [pc, #80]	@ (8012aa0 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x98>)
 8012a4e:	6811      	ldr	r1, [r2, #0]
 8012a50:	18ca      	adds	r2, r1, r3
 8012a52:	5ecd      	ldrsh	r5, [r1, r3]
 8012a54:	f9b2 4002 	ldrsh.w	r4, [r2, #2]
 8012a58:	f9b2 1004 	ldrsh.w	r1, [r2, #4]
 8012a5c:	f9b2 3006 	ldrsh.w	r3, [r2, #6]
 8012a60:	8005      	strh	r5, [r0, #0]
 8012a62:	8044      	strh	r4, [r0, #2]
 8012a64:	8081      	strh	r1, [r0, #4]
 8012a66:	e7e7      	b.n	8012a38 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x30>
 8012a68:	f64f 72fe 	movw	r2, #65534	@ 0xfffe
 8012a6c:	4293      	cmp	r3, r2
 8012a6e:	d10b      	bne.n	8012a88 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x80>
 8012a70:	4b0c      	ldr	r3, [pc, #48]	@ (8012aa4 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x9c>)
 8012a72:	f9b3 1000 	ldrsh.w	r1, [r3]
 8012a76:	4b0c      	ldr	r3, [pc, #48]	@ (8012aa8 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0xa0>)
 8012a78:	8081      	strh	r1, [r0, #4]
 8012a7a:	f9b3 2000 	ldrsh.w	r2, [r3]
 8012a7e:	80c2      	strh	r2, [r0, #6]
 8012a80:	2300      	movs	r3, #0
 8012a82:	8003      	strh	r3, [r0, #0]
 8012a84:	8043      	strh	r3, [r0, #2]
 8012a86:	bd30      	pop	{r4, r5, pc}
 8012a88:	2300      	movs	r3, #0
 8012a8a:	8003      	strh	r3, [r0, #0]
 8012a8c:	8043      	strh	r3, [r0, #2]
 8012a8e:	8083      	strh	r3, [r0, #4]
 8012a90:	e7d2      	b.n	8012a38 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x30>
 8012a92:	bf00      	nop
 8012a94:	20013fb4 	.word	0x20013fb4
 8012a98:	20013fbc 	.word	0x20013fbc
 8012a9c:	20013fb8 	.word	0x20013fb8
 8012aa0:	20013f9c 	.word	0x20013f9c
 8012aa4:	20013f1e 	.word	0x20013f1e
 8012aa8:	20013f20 	.word	0x20013f20

08012aac <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>:
 8012aac:	4a17      	ldr	r2, [pc, #92]	@ (8012b0c <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x60>)
 8012aae:	8803      	ldrh	r3, [r0, #0]
 8012ab0:	8812      	ldrh	r2, [r2, #0]
 8012ab2:	4293      	cmp	r3, r2
 8012ab4:	d213      	bcs.n	8012ade <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x32>
 8012ab6:	4a16      	ldr	r2, [pc, #88]	@ (8012b10 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x64>)
 8012ab8:	6812      	ldr	r2, [r2, #0]
 8012aba:	2114      	movs	r1, #20
 8012abc:	fb01 2303 	mla	r3, r1, r3, r2
 8012ac0:	8a1a      	ldrh	r2, [r3, #16]
 8012ac2:	8919      	ldrh	r1, [r3, #8]
 8012ac4:	f3c2 020c 	ubfx	r2, r2, #0, #13
 8012ac8:	428a      	cmp	r2, r1
 8012aca:	db1d      	blt.n	8012b08 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5c>
 8012acc:	8a58      	ldrh	r0, [r3, #18]
 8012ace:	f3c0 000c 	ubfx	r0, r0, #0, #13
 8012ad2:	895b      	ldrh	r3, [r3, #10]
 8012ad4:	4298      	cmp	r0, r3
 8012ad6:	bfac      	ite	ge
 8012ad8:	2000      	movge	r0, #0
 8012ada:	2001      	movlt	r0, #1
 8012adc:	4770      	bx	lr
 8012ade:	490d      	ldr	r1, [pc, #52]	@ (8012b14 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x68>)
 8012ae0:	8809      	ldrh	r1, [r1, #0]
 8012ae2:	4411      	add	r1, r2
 8012ae4:	428b      	cmp	r3, r1
 8012ae6:	da0d      	bge.n	8012b04 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x58>
 8012ae8:	1a9b      	subs	r3, r3, r2
 8012aea:	4a0b      	ldr	r2, [pc, #44]	@ (8012b18 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x6c>)
 8012aec:	6812      	ldr	r2, [r2, #0]
 8012aee:	210e      	movs	r1, #14
 8012af0:	fb01 2303 	mla	r3, r1, r3, r2
 8012af4:	f9b3 1004 	ldrsh.w	r1, [r3, #4]
 8012af8:	891a      	ldrh	r2, [r3, #8]
 8012afa:	4291      	cmp	r1, r2
 8012afc:	db04      	blt.n	8012b08 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5c>
 8012afe:	f9b3 0006 	ldrsh.w	r0, [r3, #6]
 8012b02:	e7e6      	b.n	8012ad2 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x26>
 8012b04:	2000      	movs	r0, #0
 8012b06:	4770      	bx	lr
 8012b08:	2001      	movs	r0, #1
 8012b0a:	4770      	bx	lr
 8012b0c:	20013fb4 	.word	0x20013fb4
 8012b10:	20013fbc 	.word	0x20013fbc
 8012b14:	20013fb8 	.word	0x20013fb8
 8012b18:	20013f9c 	.word	0x20013f9c

08012b1c <_ZNK8touchgfx6Bitmap7getDataEv>:
 8012b1c:	4a12      	ldr	r2, [pc, #72]	@ (8012b68 <_ZNK8touchgfx6Bitmap7getDataEv+0x4c>)
 8012b1e:	8803      	ldrh	r3, [r0, #0]
 8012b20:	8811      	ldrh	r1, [r2, #0]
 8012b22:	428b      	cmp	r3, r1
 8012b24:	d20b      	bcs.n	8012b3e <_ZNK8touchgfx6Bitmap7getDataEv+0x22>
 8012b26:	4a11      	ldr	r2, [pc, #68]	@ (8012b6c <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
 8012b28:	6812      	ldr	r2, [r2, #0]
 8012b2a:	b112      	cbz	r2, 8012b32 <_ZNK8touchgfx6Bitmap7getDataEv+0x16>
 8012b2c:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 8012b30:	b9c0      	cbnz	r0, 8012b64 <_ZNK8touchgfx6Bitmap7getDataEv+0x48>
 8012b32:	4a0f      	ldr	r2, [pc, #60]	@ (8012b70 <_ZNK8touchgfx6Bitmap7getDataEv+0x54>)
 8012b34:	6811      	ldr	r1, [r2, #0]
 8012b36:	2214      	movs	r2, #20
 8012b38:	4353      	muls	r3, r2
 8012b3a:	58c8      	ldr	r0, [r1, r3]
 8012b3c:	4770      	bx	lr
 8012b3e:	4a0d      	ldr	r2, [pc, #52]	@ (8012b74 <_ZNK8touchgfx6Bitmap7getDataEv+0x58>)
 8012b40:	8812      	ldrh	r2, [r2, #0]
 8012b42:	440a      	add	r2, r1
 8012b44:	4293      	cmp	r3, r2
 8012b46:	da04      	bge.n	8012b52 <_ZNK8touchgfx6Bitmap7getDataEv+0x36>
 8012b48:	4a08      	ldr	r2, [pc, #32]	@ (8012b6c <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
 8012b4a:	6812      	ldr	r2, [r2, #0]
 8012b4c:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 8012b50:	4770      	bx	lr
 8012b52:	f64f 72fe 	movw	r2, #65534	@ 0xfffe
 8012b56:	4293      	cmp	r3, r2
 8012b58:	d103      	bne.n	8012b62 <_ZNK8touchgfx6Bitmap7getDataEv+0x46>
 8012b5a:	4b07      	ldr	r3, [pc, #28]	@ (8012b78 <_ZNK8touchgfx6Bitmap7getDataEv+0x5c>)
 8012b5c:	681b      	ldr	r3, [r3, #0]
 8012b5e:	6c58      	ldr	r0, [r3, #68]	@ 0x44
 8012b60:	4770      	bx	lr
 8012b62:	2000      	movs	r0, #0
 8012b64:	4770      	bx	lr
 8012b66:	bf00      	nop
 8012b68:	20013fb4 	.word	0x20013fb4
 8012b6c:	20013f98 	.word	0x20013f98
 8012b70:	20013fbc 	.word	0x20013fbc
 8012b74:	20013fb8 	.word	0x20013fb8
 8012b78:	20013f2c 	.word	0x20013f2c

08012b7c <_ZNK8touchgfx6Bitmap12getExtraDataEv>:
 8012b7c:	4b24      	ldr	r3, [pc, #144]	@ (8012c10 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x94>)
 8012b7e:	8802      	ldrh	r2, [r0, #0]
 8012b80:	8818      	ldrh	r0, [r3, #0]
 8012b82:	4282      	cmp	r2, r0
 8012b84:	d221      	bcs.n	8012bca <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x4e>
 8012b86:	4b23      	ldr	r3, [pc, #140]	@ (8012c14 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x98>)
 8012b88:	6819      	ldr	r1, [r3, #0]
 8012b8a:	2314      	movs	r3, #20
 8012b8c:	fb03 1302 	mla	r3, r3, r2, r1
 8012b90:	6858      	ldr	r0, [r3, #4]
 8012b92:	2800      	cmp	r0, #0
 8012b94:	d03a      	beq.n	8012c0c <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 8012b96:	4920      	ldr	r1, [pc, #128]	@ (8012c18 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
 8012b98:	6809      	ldr	r1, [r1, #0]
 8012b9a:	2900      	cmp	r1, #0
 8012b9c:	d036      	beq.n	8012c0c <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 8012b9e:	f851 1022 	ldr.w	r1, [r1, r2, lsl #2]
 8012ba2:	2900      	cmp	r1, #0
 8012ba4:	d032      	beq.n	8012c0c <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 8012ba6:	891a      	ldrh	r2, [r3, #8]
 8012ba8:	8958      	ldrh	r0, [r3, #10]
 8012baa:	4350      	muls	r0, r2
 8012bac:	7c5a      	ldrb	r2, [r3, #17]
 8012bae:	7cdb      	ldrb	r3, [r3, #19]
 8012bb0:	0952      	lsrs	r2, r2, #5
 8012bb2:	f3c3 1342 	ubfx	r3, r3, #5, #3
 8012bb6:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 8012bba:	2b0b      	cmp	r3, #11
 8012bbc:	bf18      	it	ne
 8012bbe:	0040      	lslne	r0, r0, #1
 8012bc0:	3003      	adds	r0, #3
 8012bc2:	f020 0003 	bic.w	r0, r0, #3
 8012bc6:	4408      	add	r0, r1
 8012bc8:	4770      	bx	lr
 8012bca:	4b14      	ldr	r3, [pc, #80]	@ (8012c1c <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa0>)
 8012bcc:	881b      	ldrh	r3, [r3, #0]
 8012bce:	4403      	add	r3, r0
 8012bd0:	429a      	cmp	r2, r3
 8012bd2:	da1a      	bge.n	8012c0a <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
 8012bd4:	4b12      	ldr	r3, [pc, #72]	@ (8012c20 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa4>)
 8012bd6:	681b      	ldr	r3, [r3, #0]
 8012bd8:	1a10      	subs	r0, r2, r0
 8012bda:	210e      	movs	r1, #14
 8012bdc:	fb01 3000 	mla	r0, r1, r0, r3
 8012be0:	7b03      	ldrb	r3, [r0, #12]
 8012be2:	f003 031f 	and.w	r3, r3, #31
 8012be6:	2b0b      	cmp	r3, #11
 8012be8:	d10b      	bne.n	8012c02 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x86>
 8012bea:	8903      	ldrh	r3, [r0, #8]
 8012bec:	8940      	ldrh	r0, [r0, #10]
 8012bee:	4358      	muls	r0, r3
 8012bf0:	4b09      	ldr	r3, [pc, #36]	@ (8012c18 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
 8012bf2:	6819      	ldr	r1, [r3, #0]
 8012bf4:	3003      	adds	r0, #3
 8012bf6:	f020 0303 	bic.w	r3, r0, #3
 8012bfa:	f851 0022 	ldr.w	r0, [r1, r2, lsl #2]
 8012bfe:	4418      	add	r0, r3
 8012c00:	4770      	bx	lr
 8012c02:	2b0d      	cmp	r3, #13
 8012c04:	d101      	bne.n	8012c0a <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
 8012c06:	300d      	adds	r0, #13
 8012c08:	4770      	bx	lr
 8012c0a:	2000      	movs	r0, #0
 8012c0c:	4770      	bx	lr
 8012c0e:	bf00      	nop
 8012c10:	20013fb4 	.word	0x20013fb4
 8012c14:	20013fbc 	.word	0x20013fbc
 8012c18:	20013f98 	.word	0x20013f98
 8012c1c:	20013fb8 	.word	0x20013fb8
 8012c20:	20013f9c 	.word	0x20013f9c

08012c24 <_ZNK8touchgfx6Bitmap9getFormatEv>:
 8012c24:	b510      	push	{r4, lr}
 8012c26:	4b1f      	ldr	r3, [pc, #124]	@ (8012ca4 <_ZNK8touchgfx6Bitmap9getFormatEv+0x80>)
 8012c28:	8802      	ldrh	r2, [r0, #0]
 8012c2a:	881b      	ldrh	r3, [r3, #0]
 8012c2c:	429a      	cmp	r2, r3
 8012c2e:	d21a      	bcs.n	8012c66 <_ZNK8touchgfx6Bitmap9getFormatEv+0x42>
 8012c30:	4b1d      	ldr	r3, [pc, #116]	@ (8012ca8 <_ZNK8touchgfx6Bitmap9getFormatEv+0x84>)
 8012c32:	681b      	ldr	r3, [r3, #0]
 8012c34:	2114      	movs	r1, #20
 8012c36:	fb01 3102 	mla	r1, r1, r2, r3
 8012c3a:	7c4b      	ldrb	r3, [r1, #17]
 8012c3c:	0958      	lsrs	r0, r3, #5
 8012c3e:	7ccb      	ldrb	r3, [r1, #19]
 8012c40:	491a      	ldr	r1, [pc, #104]	@ (8012cac <_ZNK8touchgfx6Bitmap9getFormatEv+0x88>)
 8012c42:	f3c3 1342 	ubfx	r3, r3, #5, #3
 8012c46:	6809      	ldr	r1, [r1, #0]
 8012c48:	ea43 03c0 	orr.w	r3, r3, r0, lsl #3
 8012c4c:	b2d8      	uxtb	r0, r3
 8012c4e:	b149      	cbz	r1, 8012c64 <_ZNK8touchgfx6Bitmap9getFormatEv+0x40>
 8012c50:	f851 2022 	ldr.w	r2, [r1, r2, lsl #2]
 8012c54:	b132      	cbz	r2, 8012c64 <_ZNK8touchgfx6Bitmap9getFormatEv+0x40>
 8012c56:	2b0e      	cmp	r3, #14
 8012c58:	d021      	beq.n	8012c9e <_ZNK8touchgfx6Bitmap9getFormatEv+0x7a>
 8012c5a:	280f      	cmp	r0, #15
 8012c5c:	d01d      	beq.n	8012c9a <_ZNK8touchgfx6Bitmap9getFormatEv+0x76>
 8012c5e:	2810      	cmp	r0, #16
 8012c60:	bf08      	it	eq
 8012c62:	2002      	moveq	r0, #2
 8012c64:	bd10      	pop	{r4, pc}
 8012c66:	4912      	ldr	r1, [pc, #72]	@ (8012cb0 <_ZNK8touchgfx6Bitmap9getFormatEv+0x8c>)
 8012c68:	8809      	ldrh	r1, [r1, #0]
 8012c6a:	4419      	add	r1, r3
 8012c6c:	428a      	cmp	r2, r1
 8012c6e:	da09      	bge.n	8012c84 <_ZNK8touchgfx6Bitmap9getFormatEv+0x60>
 8012c70:	1ad3      	subs	r3, r2, r3
 8012c72:	4a10      	ldr	r2, [pc, #64]	@ (8012cb4 <_ZNK8touchgfx6Bitmap9getFormatEv+0x90>)
 8012c74:	6812      	ldr	r2, [r2, #0]
 8012c76:	210e      	movs	r1, #14
 8012c78:	fb01 2303 	mla	r3, r1, r3, r2
 8012c7c:	7b18      	ldrb	r0, [r3, #12]
 8012c7e:	f000 001f 	and.w	r0, r0, #31
 8012c82:	e7ef      	b.n	8012c64 <_ZNK8touchgfx6Bitmap9getFormatEv+0x40>
 8012c84:	f64f 73fe 	movw	r3, #65534	@ 0xfffe
 8012c88:	429a      	cmp	r2, r3
 8012c8a:	d108      	bne.n	8012c9e <_ZNK8touchgfx6Bitmap9getFormatEv+0x7a>
 8012c8c:	f7f0 f822 	bl	8002cd4 <_ZN8touchgfx3HAL3lcdEv>
 8012c90:	6803      	ldr	r3, [r0, #0]
 8012c92:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8012c96:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8012c98:	4718      	bx	r3
 8012c9a:	2001      	movs	r0, #1
 8012c9c:	e7e2      	b.n	8012c64 <_ZNK8touchgfx6Bitmap9getFormatEv+0x40>
 8012c9e:	2000      	movs	r0, #0
 8012ca0:	e7e0      	b.n	8012c64 <_ZNK8touchgfx6Bitmap9getFormatEv+0x40>
 8012ca2:	bf00      	nop
 8012ca4:	20013fb4 	.word	0x20013fb4
 8012ca8:	20013fbc 	.word	0x20013fbc
 8012cac:	20013f98 	.word	0x20013f98
 8012cb0:	20013fb8 	.word	0x20013fb8
 8012cb4:	20013f9c 	.word	0x20013f9c

08012cb8 <_ZNK8touchgfx8LCD16bpp8bitDepthEv>:
 8012cb8:	2010      	movs	r0, #16
 8012cba:	4770      	bx	lr

08012cbc <_ZNK8touchgfx8LCD16bpp17framebufferFormatEv>:
 8012cbc:	2000      	movs	r0, #0
 8012cbe:	4770      	bx	lr

08012cc0 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv>:
 8012cc0:	4b02      	ldr	r3, [pc, #8]	@ (8012ccc <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0xc>)
 8012cc2:	8818      	ldrh	r0, [r3, #0]
 8012cc4:	0040      	lsls	r0, r0, #1
 8012cc6:	b280      	uxth	r0, r0
 8012cc8:	4770      	bx	lr
 8012cca:	bf00      	nop
 8012ccc:	20013f24 	.word	0x20013f24

08012cd0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth>:
 8012cd0:	2bff      	cmp	r3, #255	@ 0xff
 8012cd2:	d05e      	beq.n	8012d92 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xc2>
 8012cd4:	2a0b      	cmp	r2, #11
 8012cd6:	d058      	beq.n	8012d8a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xba>
 8012cd8:	d80e      	bhi.n	8012cf8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x28>
 8012cda:	2a03      	cmp	r2, #3
 8012cdc:	d04d      	beq.n	8012d7a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xaa>
 8012cde:	d804      	bhi.n	8012cea <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x1a>
 8012ce0:	2a01      	cmp	r2, #1
 8012ce2:	d04c      	beq.n	8012d7e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xae>
 8012ce4:	d94d      	bls.n	8012d82 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xb2>
 8012ce6:	6bc3      	ldr	r3, [r0, #60]	@ 0x3c
 8012ce8:	e031      	b.n	8012d4e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8012cea:	2a09      	cmp	r2, #9
 8012cec:	d04d      	beq.n	8012d8a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xba>
 8012cee:	d84a      	bhi.n	8012d86 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xb6>
 8012cf0:	2a08      	cmp	r2, #8
 8012cf2:	d048      	beq.n	8012d86 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xb6>
 8012cf4:	2300      	movs	r3, #0
 8012cf6:	e02a      	b.n	8012d4e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8012cf8:	2a2f      	cmp	r2, #47	@ 0x2f
 8012cfa:	d02c      	beq.n	8012d56 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x86>
 8012cfc:	d811      	bhi.n	8012d22 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x52>
 8012cfe:	2a2d      	cmp	r2, #45	@ 0x2d
 8012d00:	d018      	beq.n	8012d34 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x64>
 8012d02:	d831      	bhi.n	8012d68 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x98>
 8012d04:	2a2c      	cmp	r2, #44	@ 0x2c
 8012d06:	d1f5      	bne.n	8012cf4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8012d08:	684a      	ldr	r2, [r1, #4]
 8012d0a:	7813      	ldrb	r3, [r2, #0]
 8012d0c:	7852      	ldrb	r2, [r2, #1]
 8012d0e:	2a00      	cmp	r2, #0
 8012d10:	d1f0      	bne.n	8012cf4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8012d12:	2b01      	cmp	r3, #1
 8012d14:	d01d      	beq.n	8012d52 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x82>
 8012d16:	2b00      	cmp	r3, #0
 8012d18:	d02d      	beq.n	8012d76 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa6>
 8012d1a:	2b02      	cmp	r3, #2
 8012d1c:	d1ea      	bne.n	8012cf4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8012d1e:	68c3      	ldr	r3, [r0, #12]
 8012d20:	e015      	b.n	8012d4e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8012d22:	2a31      	cmp	r2, #49	@ 0x31
 8012d24:	d004      	beq.n	8012d30 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x60>
 8012d26:	d332      	bcc.n	8012d8e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xbe>
 8012d28:	2a32      	cmp	r2, #50	@ 0x32
 8012d2a:	d030      	beq.n	8012d8e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xbe>
 8012d2c:	2a33      	cmp	r2, #51	@ 0x33
 8012d2e:	d1e1      	bne.n	8012cf4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8012d30:	6f43      	ldr	r3, [r0, #116]	@ 0x74
 8012d32:	e00c      	b.n	8012d4e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8012d34:	684a      	ldr	r2, [r1, #4]
 8012d36:	7813      	ldrb	r3, [r2, #0]
 8012d38:	7852      	ldrb	r2, [r2, #1]
 8012d3a:	2a00      	cmp	r2, #0
 8012d3c:	d1da      	bne.n	8012cf4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8012d3e:	2b01      	cmp	r3, #1
 8012d40:	d004      	beq.n	8012d4c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7c>
 8012d42:	d30f      	bcc.n	8012d64 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x94>
 8012d44:	2b02      	cmp	r3, #2
 8012d46:	d1d5      	bne.n	8012cf4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8012d48:	6943      	ldr	r3, [r0, #20]
 8012d4a:	e000      	b.n	8012d4e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8012d4c:	6a43      	ldr	r3, [r0, #36]	@ 0x24
 8012d4e:	4618      	mov	r0, r3
 8012d50:	4770      	bx	lr
 8012d52:	69c3      	ldr	r3, [r0, #28]
 8012d54:	e7fb      	b.n	8012d4e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8012d56:	684b      	ldr	r3, [r1, #4]
 8012d58:	781a      	ldrb	r2, [r3, #0]
 8012d5a:	785b      	ldrb	r3, [r3, #1]
 8012d5c:	2b00      	cmp	r3, #0
 8012d5e:	d1c9      	bne.n	8012cf4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8012d60:	2a00      	cmp	r2, #0
 8012d62:	d1f4      	bne.n	8012d4e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8012d64:	6b43      	ldr	r3, [r0, #52]	@ 0x34
 8012d66:	e7f2      	b.n	8012d4e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8012d68:	684b      	ldr	r3, [r1, #4]
 8012d6a:	781a      	ldrb	r2, [r3, #0]
 8012d6c:	785b      	ldrb	r3, [r3, #1]
 8012d6e:	2b00      	cmp	r3, #0
 8012d70:	d1c0      	bne.n	8012cf4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8012d72:	2a00      	cmp	r2, #0
 8012d74:	d1eb      	bne.n	8012d4e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8012d76:	6ac3      	ldr	r3, [r0, #44]	@ 0x2c
 8012d78:	e7e9      	b.n	8012d4e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8012d7a:	6cc3      	ldr	r3, [r0, #76]	@ 0x4c
 8012d7c:	e7e7      	b.n	8012d4e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8012d7e:	6d43      	ldr	r3, [r0, #84]	@ 0x54
 8012d80:	e7e5      	b.n	8012d4e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8012d82:	6c43      	ldr	r3, [r0, #68]	@ 0x44
 8012d84:	e7e3      	b.n	8012d4e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8012d86:	6dc3      	ldr	r3, [r0, #92]	@ 0x5c
 8012d88:	e7e1      	b.n	8012d4e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8012d8a:	6e43      	ldr	r3, [r0, #100]	@ 0x64
 8012d8c:	e7df      	b.n	8012d4e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8012d8e:	6ec3      	ldr	r3, [r0, #108]	@ 0x6c
 8012d90:	e7dd      	b.n	8012d4e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8012d92:	2a0b      	cmp	r2, #11
 8012d94:	d059      	beq.n	8012e4a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x17a>
 8012d96:	d80e      	bhi.n	8012db6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xe6>
 8012d98:	2a03      	cmp	r2, #3
 8012d9a:	d050      	beq.n	8012e3e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x16e>
 8012d9c:	d804      	bhi.n	8012da8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xd8>
 8012d9e:	2a01      	cmp	r2, #1
 8012da0:	d04f      	beq.n	8012e42 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x172>
 8012da2:	d950      	bls.n	8012e46 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x176>
 8012da4:	6c03      	ldr	r3, [r0, #64]	@ 0x40
 8012da6:	e7d2      	b.n	8012d4e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8012da8:	2a09      	cmp	r2, #9
 8012daa:	d04e      	beq.n	8012e4a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x17a>
 8012dac:	d801      	bhi.n	8012db2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xe2>
 8012dae:	2a08      	cmp	r2, #8
 8012db0:	d1a0      	bne.n	8012cf4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8012db2:	6e03      	ldr	r3, [r0, #96]	@ 0x60
 8012db4:	e7cb      	b.n	8012d4e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8012db6:	2a2f      	cmp	r2, #47	@ 0x2f
 8012db8:	d02d      	beq.n	8012e16 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x146>
 8012dba:	d811      	bhi.n	8012de0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x110>
 8012dbc:	2a2d      	cmp	r2, #45	@ 0x2d
 8012dbe:	d018      	beq.n	8012df2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x122>
 8012dc0:	d833      	bhi.n	8012e2a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x15a>
 8012dc2:	2a2c      	cmp	r2, #44	@ 0x2c
 8012dc4:	d196      	bne.n	8012cf4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8012dc6:	684a      	ldr	r2, [r1, #4]
 8012dc8:	7813      	ldrb	r3, [r2, #0]
 8012dca:	7852      	ldrb	r2, [r2, #1]
 8012dcc:	2a00      	cmp	r2, #0
 8012dce:	d191      	bne.n	8012cf4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8012dd0:	2b01      	cmp	r3, #1
 8012dd2:	d01e      	beq.n	8012e12 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
 8012dd4:	2b00      	cmp	r3, #0
 8012dd6:	d030      	beq.n	8012e3a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x16a>
 8012dd8:	2b02      	cmp	r3, #2
 8012dda:	d18b      	bne.n	8012cf4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8012ddc:	6903      	ldr	r3, [r0, #16]
 8012dde:	e7b6      	b.n	8012d4e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8012de0:	2a31      	cmp	r2, #49	@ 0x31
 8012de2:	d004      	beq.n	8012dee <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x11e>
 8012de4:	d333      	bcc.n	8012e4e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x17e>
 8012de6:	2a32      	cmp	r2, #50	@ 0x32
 8012de8:	d031      	beq.n	8012e4e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x17e>
 8012dea:	2a33      	cmp	r2, #51	@ 0x33
 8012dec:	d182      	bne.n	8012cf4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8012dee:	6f83      	ldr	r3, [r0, #120]	@ 0x78
 8012df0:	e7ad      	b.n	8012d4e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8012df2:	684a      	ldr	r2, [r1, #4]
 8012df4:	7813      	ldrb	r3, [r2, #0]
 8012df6:	7852      	ldrb	r2, [r2, #1]
 8012df8:	2a00      	cmp	r2, #0
 8012dfa:	f47f af7b 	bne.w	8012cf4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8012dfe:	2b01      	cmp	r3, #1
 8012e00:	d005      	beq.n	8012e0e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
 8012e02:	d310      	bcc.n	8012e26 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x156>
 8012e04:	2b02      	cmp	r3, #2
 8012e06:	f47f af75 	bne.w	8012cf4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8012e0a:	6983      	ldr	r3, [r0, #24]
 8012e0c:	e79f      	b.n	8012d4e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8012e0e:	6a83      	ldr	r3, [r0, #40]	@ 0x28
 8012e10:	e79d      	b.n	8012d4e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8012e12:	6a03      	ldr	r3, [r0, #32]
 8012e14:	e79b      	b.n	8012d4e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8012e16:	684b      	ldr	r3, [r1, #4]
 8012e18:	781a      	ldrb	r2, [r3, #0]
 8012e1a:	785b      	ldrb	r3, [r3, #1]
 8012e1c:	2b00      	cmp	r3, #0
 8012e1e:	f47f af69 	bne.w	8012cf4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8012e22:	2a00      	cmp	r2, #0
 8012e24:	d193      	bne.n	8012d4e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8012e26:	6b83      	ldr	r3, [r0, #56]	@ 0x38
 8012e28:	e791      	b.n	8012d4e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8012e2a:	684b      	ldr	r3, [r1, #4]
 8012e2c:	781a      	ldrb	r2, [r3, #0]
 8012e2e:	785b      	ldrb	r3, [r3, #1]
 8012e30:	2b00      	cmp	r3, #0
 8012e32:	f47f af5f 	bne.w	8012cf4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8012e36:	2a00      	cmp	r2, #0
 8012e38:	d189      	bne.n	8012d4e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8012e3a:	6b03      	ldr	r3, [r0, #48]	@ 0x30
 8012e3c:	e787      	b.n	8012d4e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8012e3e:	6d03      	ldr	r3, [r0, #80]	@ 0x50
 8012e40:	e785      	b.n	8012d4e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8012e42:	6d83      	ldr	r3, [r0, #88]	@ 0x58
 8012e44:	e783      	b.n	8012d4e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8012e46:	6c83      	ldr	r3, [r0, #72]	@ 0x48
 8012e48:	e781      	b.n	8012d4e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8012e4a:	6e83      	ldr	r3, [r0, #104]	@ 0x68
 8012e4c:	e77f      	b.n	8012d4e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8012e4e:	6f03      	ldr	r3, [r0, #112]	@ 0x70
 8012e50:	e77d      	b.n	8012d4e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>

08012e52 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8012e52:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012e56:	b087      	sub	sp, #28
 8012e58:	9815      	ldr	r0, [sp, #84]	@ 0x54
 8012e5a:	9205      	str	r2, [sp, #20]
 8012e5c:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 8012e60:	9202      	str	r2, [sp, #8]
 8012e62:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	@ 0x58
 8012e66:	9101      	str	r1, [sp, #4]
 8012e68:	6841      	ldr	r1, [r0, #4]
 8012e6a:	f8dd e060 	ldr.w	lr, [sp, #96]	@ 0x60
 8012e6e:	fb01 2404 	mla	r4, r1, r4, r2
 8012e72:	6802      	ldr	r2, [r0, #0]
 8012e74:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8012e78:	f8de 2000 	ldr.w	r2, [lr]
 8012e7c:	9203      	str	r2, [sp, #12]
 8012e7e:	f8de 2004 	ldr.w	r2, [lr, #4]
 8012e82:	3204      	adds	r2, #4
 8012e84:	9204      	str	r2, [sp, #16]
 8012e86:	9a02      	ldr	r2, [sp, #8]
 8012e88:	43d6      	mvns	r6, r2
 8012e8a:	b2f6      	uxtb	r6, r6
 8012e8c:	9a01      	ldr	r2, [sp, #4]
 8012e8e:	2a00      	cmp	r2, #0
 8012e90:	dc03      	bgt.n	8012e9a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8012e92:	9a05      	ldr	r2, [sp, #20]
 8012e94:	2a00      	cmp	r2, #0
 8012e96:	f340 8129 	ble.w	80130ec <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 8012e9a:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 8012e9c:	f9be c008 	ldrsh.w	ip, [lr, #8]
 8012ea0:	f9be 700c 	ldrsh.w	r7, [lr, #12]
 8012ea4:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 8012ea8:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 8012eaa:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 8012eae:	2b00      	cmp	r3, #0
 8012eb0:	dd0e      	ble.n	8012ed0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8012eb2:	1408      	asrs	r0, r1, #16
 8012eb4:	d405      	bmi.n	8012ec2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8012eb6:	4560      	cmp	r0, ip
 8012eb8:	da03      	bge.n	8012ec2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8012eba:	1410      	asrs	r0, r2, #16
 8012ebc:	d401      	bmi.n	8012ec2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8012ebe:	42b8      	cmp	r0, r7
 8012ec0:	db07      	blt.n	8012ed2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 8012ec2:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 8012ec4:	4401      	add	r1, r0
 8012ec6:	9814      	ldr	r0, [sp, #80]	@ 0x50
 8012ec8:	3b01      	subs	r3, #1
 8012eca:	4402      	add	r2, r0
 8012ecc:	3402      	adds	r4, #2
 8012ece:	e7ee      	b.n	8012eae <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 8012ed0:	d071      	beq.n	8012fb6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8012ed2:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 8012ed4:	1e58      	subs	r0, r3, #1
 8012ed6:	fb05 1500 	mla	r5, r5, r0, r1
 8012eda:	142d      	asrs	r5, r5, #16
 8012edc:	d45f      	bmi.n	8012f9e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 8012ede:	4565      	cmp	r5, ip
 8012ee0:	da5d      	bge.n	8012f9e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 8012ee2:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 8012ee4:	fb05 2000 	mla	r0, r5, r0, r2
 8012ee8:	1400      	asrs	r0, r0, #16
 8012eea:	d458      	bmi.n	8012f9e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 8012eec:	42b8      	cmp	r0, r7
 8012eee:	da56      	bge.n	8012f9e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 8012ef0:	f8bd b008 	ldrh.w	fp, [sp, #8]
 8012ef4:	4699      	mov	r9, r3
 8012ef6:	46a2      	mov	sl, r4
 8012ef8:	f1b9 0f00 	cmp.w	r9, #0
 8012efc:	dd57      	ble.n	8012fae <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15c>
 8012efe:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 8012f02:	9803      	ldr	r0, [sp, #12]
 8012f04:	ea4f 4c22 	mov.w	ip, r2, asr #16
 8012f08:	140d      	asrs	r5, r1, #16
 8012f0a:	fb07 000c 	mla	r0, r7, ip, r0
 8012f0e:	f109 39ff 	add.w	r9, r9, #4294967295
 8012f12:	5d40      	ldrb	r0, [r0, r5]
 8012f14:	9d04      	ldr	r5, [sp, #16]
 8012f16:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 8012f1a:	f8ba 5000 	ldrh.w	r5, [sl]
 8012f1e:	122f      	asrs	r7, r5, #8
 8012f20:	ea4f 2c20 	mov.w	ip, r0, asr #8
 8012f24:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 8012f28:	fb17 f706 	smulbb	r7, r7, r6
 8012f2c:	ea4f 08e5 	mov.w	r8, r5, asr #3
 8012f30:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 8012f34:	00ed      	lsls	r5, r5, #3
 8012f36:	fb0c 7c0b 	mla	ip, ip, fp, r7
 8012f3a:	f008 08fc 	and.w	r8, r8, #252	@ 0xfc
 8012f3e:	10c7      	asrs	r7, r0, #3
 8012f40:	b2ed      	uxtb	r5, r5
 8012f42:	00c0      	lsls	r0, r0, #3
 8012f44:	fb18 f806 	smulbb	r8, r8, r6
 8012f48:	fb15 f506 	smulbb	r5, r5, r6
 8012f4c:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 8012f50:	b2c0      	uxtb	r0, r0
 8012f52:	fa1f fc8c 	uxth.w	ip, ip
 8012f56:	fb07 870b 	mla	r7, r7, fp, r8
 8012f5a:	fb00 500b 	mla	r0, r0, fp, r5
 8012f5e:	b280      	uxth	r0, r0
 8012f60:	b2bf      	uxth	r7, r7
 8012f62:	f10c 0501 	add.w	r5, ip, #1
 8012f66:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8012f6a:	f107 0801 	add.w	r8, r7, #1
 8012f6e:	1c45      	adds	r5, r0, #1
 8012f70:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 8012f74:	eb08 2817 	add.w	r8, r8, r7, lsr #8
 8012f78:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 8012f7a:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 8012f7e:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8012f82:	ea4f 1858 	mov.w	r8, r8, lsr #5
 8012f86:	ea45 0c0c 	orr.w	ip, r5, ip
 8012f8a:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
 8012f8e:	4401      	add	r1, r0
 8012f90:	9814      	ldr	r0, [sp, #80]	@ 0x50
 8012f92:	ea4c 0c08 	orr.w	ip, ip, r8
 8012f96:	f82a cb02 	strh.w	ip, [sl], #2
 8012f9a:	4402      	add	r2, r0
 8012f9c:	e7ac      	b.n	8012ef8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 8012f9e:	f8bd a008 	ldrh.w	sl, [sp, #8]
 8012fa2:	f04f 0800 	mov.w	r8, #0
 8012fa6:	eb03 0008 	add.w	r0, r3, r8
 8012faa:	2800      	cmp	r0, #0
 8012fac:	dc41      	bgt.n	8013032 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 8012fae:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8012fb2:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8012fb6:	9b01      	ldr	r3, [sp, #4]
 8012fb8:	2b00      	cmp	r3, #0
 8012fba:	f340 8097 	ble.w	80130ec <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 8012fbe:	ee30 0a04 	vadd.f32	s0, s0, s8
 8012fc2:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8012fc6:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8012fca:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8012fcc:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8012fd0:	ee31 1a05 	vadd.f32	s2, s2, s10
 8012fd4:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8012fd8:	eef0 6a62 	vmov.f32	s13, s5
 8012fdc:	ee61 7a27 	vmul.f32	s15, s2, s15
 8012fe0:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8012fe4:	ee77 2a62 	vsub.f32	s5, s14, s5
 8012fe8:	edcd 6a11 	vstr	s13, [sp, #68]	@ 0x44
 8012fec:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8012ff0:	eef0 6a43 	vmov.f32	s13, s6
 8012ff4:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8012ff8:	ee12 2a90 	vmov	r2, s5
 8012ffc:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8013000:	fb92 f3f3 	sdiv	r3, r2, r3
 8013004:	ee13 2a10 	vmov	r2, s6
 8013008:	9313      	str	r3, [sp, #76]	@ 0x4c
 801300a:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801300c:	fb92 f3f3 	sdiv	r3, r2, r3
 8013010:	9314      	str	r3, [sp, #80]	@ 0x50
 8013012:	9b01      	ldr	r3, [sp, #4]
 8013014:	9a05      	ldr	r2, [sp, #20]
 8013016:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801301a:	3b01      	subs	r3, #1
 801301c:	9301      	str	r3, [sp, #4]
 801301e:	edcd 6a12 	vstr	s13, [sp, #72]	@ 0x48
 8013022:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8013024:	eeb0 3a67 	vmov.f32	s6, s15
 8013028:	bf08      	it	eq
 801302a:	4613      	moveq	r3, r2
 801302c:	eef0 2a47 	vmov.f32	s5, s14
 8013030:	e72c      	b.n	8012e8c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 8013032:	140f      	asrs	r7, r1, #16
 8013034:	d453      	bmi.n	80130de <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8013036:	f8de 5008 	ldr.w	r5, [lr, #8]
 801303a:	42bd      	cmp	r5, r7
 801303c:	dd4f      	ble.n	80130de <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 801303e:	ea5f 4c22 	movs.w	ip, r2, asr #16
 8013042:	d44c      	bmi.n	80130de <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8013044:	f8de 000c 	ldr.w	r0, [lr, #12]
 8013048:	4560      	cmp	r0, ip
 801304a:	dd48      	ble.n	80130de <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 801304c:	9803      	ldr	r0, [sp, #12]
 801304e:	b22d      	sxth	r5, r5
 8013050:	fb0c 0505 	mla	r5, ip, r5, r0
 8013054:	5de8      	ldrb	r0, [r5, r7]
 8013056:	9d04      	ldr	r5, [sp, #16]
 8013058:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 801305c:	f06f 0501 	mvn.w	r5, #1
 8013060:	fb05 fb08 	mul.w	fp, r5, r8
 8013064:	ea4f 2c20 	mov.w	ip, r0, asr #8
 8013068:	f834 500b 	ldrh.w	r5, [r4, fp]
 801306c:	122f      	asrs	r7, r5, #8
 801306e:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 8013072:	fb17 f706 	smulbb	r7, r7, r6
 8013076:	ea4f 09e5 	mov.w	r9, r5, asr #3
 801307a:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 801307e:	00ed      	lsls	r5, r5, #3
 8013080:	fb0c 7c0a 	mla	ip, ip, sl, r7
 8013084:	f009 09fc 	and.w	r9, r9, #252	@ 0xfc
 8013088:	10c7      	asrs	r7, r0, #3
 801308a:	b2ed      	uxtb	r5, r5
 801308c:	00c0      	lsls	r0, r0, #3
 801308e:	fb19 f906 	smulbb	r9, r9, r6
 8013092:	fb15 f506 	smulbb	r5, r5, r6
 8013096:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 801309a:	b2c0      	uxtb	r0, r0
 801309c:	fa1f fc8c 	uxth.w	ip, ip
 80130a0:	fb07 970a 	mla	r7, r7, sl, r9
 80130a4:	fb00 500a 	mla	r0, r0, sl, r5
 80130a8:	b2bf      	uxth	r7, r7
 80130aa:	b280      	uxth	r0, r0
 80130ac:	f10c 0501 	add.w	r5, ip, #1
 80130b0:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 80130b4:	f107 0901 	add.w	r9, r7, #1
 80130b8:	1c45      	adds	r5, r0, #1
 80130ba:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 80130be:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 80130c2:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 80130c6:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 80130ca:	ea4f 1959 	mov.w	r9, r9, lsr #5
 80130ce:	ea45 0c0c 	orr.w	ip, r5, ip
 80130d2:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 80130d6:	ea4c 0c09 	orr.w	ip, ip, r9
 80130da:	f824 c00b 	strh.w	ip, [r4, fp]
 80130de:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 80130e0:	4401      	add	r1, r0
 80130e2:	9814      	ldr	r0, [sp, #80]	@ 0x50
 80130e4:	f108 38ff 	add.w	r8, r8, #4294967295
 80130e8:	4402      	add	r2, r0
 80130ea:	e75c      	b.n	8012fa6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
 80130ec:	b007      	add	sp, #28
 80130ee:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080130f2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80130f2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80130f6:	b085      	sub	sp, #20
 80130f8:	4693      	mov	fp, r2
 80130fa:	9e13      	ldr	r6, [sp, #76]	@ 0x4c
 80130fc:	9d16      	ldr	r5, [sp, #88]	@ 0x58
 80130fe:	6870      	ldr	r0, [r6, #4]
 8013100:	9100      	str	r1, [sp, #0]
 8013102:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	@ 0x50
 8013106:	fb00 2404 	mla	r4, r0, r4, r2
 801310a:	6832      	ldr	r2, [r6, #0]
 801310c:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8013110:	682a      	ldr	r2, [r5, #0]
 8013112:	9201      	str	r2, [sp, #4]
 8013114:	686a      	ldr	r2, [r5, #4]
 8013116:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	@ 0x44
 801311a:	3204      	adds	r2, #4
 801311c:	9202      	str	r2, [sp, #8]
 801311e:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8013122:	9a00      	ldr	r2, [sp, #0]
 8013124:	2a00      	cmp	r2, #0
 8013126:	dc03      	bgt.n	8013130 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 8013128:	f1bb 0f00 	cmp.w	fp, #0
 801312c:	f340 80a0 	ble.w	8013270 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
 8013130:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 8013132:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 8013136:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 801313a:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
 801313e:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 8013140:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 8013144:	2b00      	cmp	r3, #0
 8013146:	dd0c      	ble.n	8013162 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8013148:	1406      	asrs	r6, r0, #16
 801314a:	d405      	bmi.n	8013158 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801314c:	454e      	cmp	r6, r9
 801314e:	da03      	bge.n	8013158 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8013150:	1416      	asrs	r6, r2, #16
 8013152:	d401      	bmi.n	8013158 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8013154:	4546      	cmp	r6, r8
 8013156:	db05      	blt.n	8013164 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8013158:	4470      	add	r0, lr
 801315a:	4462      	add	r2, ip
 801315c:	3b01      	subs	r3, #1
 801315e:	3402      	adds	r4, #2
 8013160:	e7f0      	b.n	8013144 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 8013162:	d00f      	beq.n	8013184 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8013164:	1e5e      	subs	r6, r3, #1
 8013166:	fb0e 0706 	mla	r7, lr, r6, r0
 801316a:	143f      	asrs	r7, r7, #16
 801316c:	d541      	bpl.n	80131f2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x100>
 801316e:	eb04 0643 	add.w	r6, r4, r3, lsl #1
 8013172:	4698      	mov	r8, r3
 8013174:	9603      	str	r6, [sp, #12]
 8013176:	f1b8 0f00 	cmp.w	r8, #0
 801317a:	dc59      	bgt.n	8013230 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 801317c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8013180:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8013184:	9b00      	ldr	r3, [sp, #0]
 8013186:	2b00      	cmp	r3, #0
 8013188:	dd72      	ble.n	8013270 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
 801318a:	ee30 0a04 	vadd.f32	s0, s0, s8
 801318e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8013192:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8013196:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8013198:	ee31 1a05 	vadd.f32	s2, s2, s10
 801319c:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80131a0:	eeb0 6a62 	vmov.f32	s12, s5
 80131a4:	ee61 7a27 	vmul.f32	s15, s2, s15
 80131a8:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80131ac:	ee77 2a62 	vsub.f32	s5, s14, s5
 80131b0:	ed8d 6a0f 	vstr	s12, [sp, #60]	@ 0x3c
 80131b4:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80131b8:	eeb0 6a43 	vmov.f32	s12, s6
 80131bc:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80131c0:	ee12 2a90 	vmov	r2, s5
 80131c4:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80131c8:	fb92 fef3 	sdiv	lr, r2, r3
 80131cc:	ee13 2a10 	vmov	r2, s6
 80131d0:	fb92 fcf3 	sdiv	ip, r2, r3
 80131d4:	9b00      	ldr	r3, [sp, #0]
 80131d6:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80131da:	3b01      	subs	r3, #1
 80131dc:	9300      	str	r3, [sp, #0]
 80131de:	ed8d 6a10 	vstr	s12, [sp, #64]	@ 0x40
 80131e2:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 80131e4:	eeb0 3a67 	vmov.f32	s6, s15
 80131e8:	bf08      	it	eq
 80131ea:	465b      	moveq	r3, fp
 80131ec:	eef0 2a47 	vmov.f32	s5, s14
 80131f0:	e797      	b.n	8013122 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 80131f2:	454f      	cmp	r7, r9
 80131f4:	dabb      	bge.n	801316e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 80131f6:	fb0c 2606 	mla	r6, ip, r6, r2
 80131fa:	1436      	asrs	r6, r6, #16
 80131fc:	d4b7      	bmi.n	801316e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 80131fe:	4546      	cmp	r6, r8
 8013200:	dab5      	bge.n	801316e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8013202:	461e      	mov	r6, r3
 8013204:	46a0      	mov	r8, r4
 8013206:	2e00      	cmp	r6, #0
 8013208:	ddb8      	ble.n	801317c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 801320a:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
 801320e:	9901      	ldr	r1, [sp, #4]
 8013210:	1417      	asrs	r7, r2, #16
 8013212:	ea4f 4920 	mov.w	r9, r0, asr #16
 8013216:	fb0a 1707 	mla	r7, sl, r7, r1
 801321a:	9902      	ldr	r1, [sp, #8]
 801321c:	f817 7009 	ldrb.w	r7, [r7, r9]
 8013220:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
 8013224:	f828 7b02 	strh.w	r7, [r8], #2
 8013228:	4470      	add	r0, lr
 801322a:	4462      	add	r2, ip
 801322c:	3e01      	subs	r6, #1
 801322e:	e7ea      	b.n	8013206 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x114>
 8013230:	ea5f 4920 	movs.w	r9, r0, asr #16
 8013234:	d417      	bmi.n	8013266 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 8013236:	68ae      	ldr	r6, [r5, #8]
 8013238:	454e      	cmp	r6, r9
 801323a:	dd14      	ble.n	8013266 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 801323c:	ea5f 4a22 	movs.w	sl, r2, asr #16
 8013240:	d411      	bmi.n	8013266 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 8013242:	68ef      	ldr	r7, [r5, #12]
 8013244:	4557      	cmp	r7, sl
 8013246:	dd0e      	ble.n	8013266 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 8013248:	9f01      	ldr	r7, [sp, #4]
 801324a:	b236      	sxth	r6, r6
 801324c:	fb0a 7606 	mla	r6, sl, r6, r7
 8013250:	9f02      	ldr	r7, [sp, #8]
 8013252:	f816 6009 	ldrb.w	r6, [r6, r9]
 8013256:	f06f 0101 	mvn.w	r1, #1
 801325a:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
 801325e:	fb01 f608 	mul.w	r6, r1, r8
 8013262:	9903      	ldr	r1, [sp, #12]
 8013264:	538f      	strh	r7, [r1, r6]
 8013266:	4470      	add	r0, lr
 8013268:	4462      	add	r2, ip
 801326a:	f108 38ff 	add.w	r8, r8, #4294967295
 801326e:	e782      	b.n	8013176 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8013270:	b005      	add	sp, #20
 8013272:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08013276 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8013276:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801327a:	b087      	sub	sp, #28
 801327c:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 801327e:	9205      	str	r2, [sp, #20]
 8013280:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 8013284:	9203      	str	r2, [sp, #12]
 8013286:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	@ 0x58
 801328a:	9102      	str	r1, [sp, #8]
 801328c:	6861      	ldr	r1, [r4, #4]
 801328e:	f8dd c060 	ldr.w	ip, [sp, #96]	@ 0x60
 8013292:	fb01 2000 	mla	r0, r1, r0, r2
 8013296:	6822      	ldr	r2, [r4, #0]
 8013298:	eb02 0240 	add.w	r2, r2, r0, lsl #1
 801329c:	9200      	str	r2, [sp, #0]
 801329e:	f8dc 2000 	ldr.w	r2, [ip]
 80132a2:	9204      	str	r2, [sp, #16]
 80132a4:	f8dc 2004 	ldr.w	r2, [ip, #4]
 80132a8:	3204      	adds	r2, #4
 80132aa:	9201      	str	r2, [sp, #4]
 80132ac:	9a03      	ldr	r2, [sp, #12]
 80132ae:	43d5      	mvns	r5, r2
 80132b0:	b2ed      	uxtb	r5, r5
 80132b2:	9a02      	ldr	r2, [sp, #8]
 80132b4:	2a00      	cmp	r2, #0
 80132b6:	dc03      	bgt.n	80132c0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 80132b8:	9a05      	ldr	r2, [sp, #20]
 80132ba:	2a00      	cmp	r2, #0
 80132bc:	f340 812c 	ble.w	8013518 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 80132c0:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 80132c2:	f9bc e008 	ldrsh.w	lr, [ip, #8]
 80132c6:	f9bc 700c 	ldrsh.w	r7, [ip, #12]
 80132ca:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 80132ce:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 80132d0:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 80132d4:	2b00      	cmp	r3, #0
 80132d6:	dd10      	ble.n	80132fa <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 80132d8:	140c      	asrs	r4, r1, #16
 80132da:	d405      	bmi.n	80132e8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 80132dc:	4574      	cmp	r4, lr
 80132de:	da03      	bge.n	80132e8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 80132e0:	1414      	asrs	r4, r2, #16
 80132e2:	d401      	bmi.n	80132e8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 80132e4:	42bc      	cmp	r4, r7
 80132e6:	db09      	blt.n	80132fc <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 80132e8:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 80132ea:	9800      	ldr	r0, [sp, #0]
 80132ec:	4421      	add	r1, r4
 80132ee:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 80132f0:	3002      	adds	r0, #2
 80132f2:	4422      	add	r2, r4
 80132f4:	3b01      	subs	r3, #1
 80132f6:	9000      	str	r0, [sp, #0]
 80132f8:	e7ec      	b.n	80132d4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 80132fa:	d071      	beq.n	80133e0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16a>
 80132fc:	9e13      	ldr	r6, [sp, #76]	@ 0x4c
 80132fe:	1e5c      	subs	r4, r3, #1
 8013300:	fb06 1604 	mla	r6, r6, r4, r1
 8013304:	1436      	asrs	r6, r6, #16
 8013306:	d45d      	bmi.n	80133c4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8013308:	4576      	cmp	r6, lr
 801330a:	da5b      	bge.n	80133c4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 801330c:	9e14      	ldr	r6, [sp, #80]	@ 0x50
 801330e:	fb06 2404 	mla	r4, r6, r4, r2
 8013312:	1424      	asrs	r4, r4, #16
 8013314:	d456      	bmi.n	80133c4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8013316:	42bc      	cmp	r4, r7
 8013318:	da54      	bge.n	80133c4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 801331a:	f8dd 9000 	ldr.w	r9, [sp]
 801331e:	f8bd a00c 	ldrh.w	sl, [sp, #12]
 8013322:	4698      	mov	r8, r3
 8013324:	f1b8 0f00 	cmp.w	r8, #0
 8013328:	dd54      	ble.n	80133d4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
 801332a:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
 801332e:	9804      	ldr	r0, [sp, #16]
 8013330:	1414      	asrs	r4, r2, #16
 8013332:	fb07 0404 	mla	r4, r7, r4, r0
 8013336:	140e      	asrs	r6, r1, #16
 8013338:	9801      	ldr	r0, [sp, #4]
 801333a:	f814 e006 	ldrb.w	lr, [r4, r6]
 801333e:	f8b9 4000 	ldrh.w	r4, [r9]
 8013342:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 8013346:	eb00 0b0e 	add.w	fp, r0, lr
 801334a:	1227      	asrs	r7, r4, #8
 801334c:	f89b 6002 	ldrb.w	r6, [fp, #2]
 8013350:	f89b b001 	ldrb.w	fp, [fp, #1]
 8013354:	f810 e00e 	ldrb.w	lr, [r0, lr]
 8013358:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 801335a:	fb16 f60a 	smulbb	r6, r6, sl
 801335e:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 8013362:	fb07 6705 	mla	r7, r7, r5, r6
 8013366:	10e6      	asrs	r6, r4, #3
 8013368:	00e4      	lsls	r4, r4, #3
 801336a:	b2e4      	uxtb	r4, r4
 801336c:	fb1b fb0a 	smulbb	fp, fp, sl
 8013370:	fb14 f405 	smulbb	r4, r4, r5
 8013374:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 8013378:	b2bf      	uxth	r7, r7
 801337a:	fb06 b605 	mla	r6, r6, r5, fp
 801337e:	fb0e 4e0a 	mla	lr, lr, sl, r4
 8013382:	b2b6      	uxth	r6, r6
 8013384:	fa1f fe8e 	uxth.w	lr, lr
 8013388:	1c7c      	adds	r4, r7, #1
 801338a:	eb04 2717 	add.w	r7, r4, r7, lsr #8
 801338e:	f106 0b01 	add.w	fp, r6, #1
 8013392:	f10e 0401 	add.w	r4, lr, #1
 8013396:	eb04 241e 	add.w	r4, r4, lr, lsr #8
 801339a:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
 801339e:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 80133a2:	f3c4 24c4 	ubfx	r4, r4, #11, #5
 80133a6:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 80133aa:	4327      	orrs	r7, r4
 80133ac:	f40b 6bfc 	and.w	fp, fp, #2016	@ 0x7e0
 80133b0:	4401      	add	r1, r0
 80133b2:	9814      	ldr	r0, [sp, #80]	@ 0x50
 80133b4:	ea47 070b 	orr.w	r7, r7, fp
 80133b8:	f829 7b02 	strh.w	r7, [r9], #2
 80133bc:	4402      	add	r2, r0
 80133be:	f108 38ff 	add.w	r8, r8, #4294967295
 80133c2:	e7af      	b.n	8013324 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
 80133c4:	f8bd 900c 	ldrh.w	r9, [sp, #12]
 80133c8:	f04f 0e00 	mov.w	lr, #0
 80133cc:	eb03 040e 	add.w	r4, r3, lr
 80133d0:	2c00      	cmp	r4, #0
 80133d2:	dc43      	bgt.n	801345c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
 80133d4:	9a00      	ldr	r2, [sp, #0]
 80133d6:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80133da:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 80133de:	9300      	str	r3, [sp, #0]
 80133e0:	9b02      	ldr	r3, [sp, #8]
 80133e2:	2b00      	cmp	r3, #0
 80133e4:	f340 8098 	ble.w	8013518 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 80133e8:	ee30 0a04 	vadd.f32	s0, s0, s8
 80133ec:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 80133f0:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80133f4:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 80133f6:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80133fa:	ee31 1a05 	vadd.f32	s2, s2, s10
 80133fe:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8013402:	eef0 6a62 	vmov.f32	s13, s5
 8013406:	ee61 7a27 	vmul.f32	s15, s2, s15
 801340a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801340e:	ee77 2a62 	vsub.f32	s5, s14, s5
 8013412:	edcd 6a11 	vstr	s13, [sp, #68]	@ 0x44
 8013416:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801341a:	eef0 6a43 	vmov.f32	s13, s6
 801341e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8013422:	ee12 2a90 	vmov	r2, s5
 8013426:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801342a:	fb92 f3f3 	sdiv	r3, r2, r3
 801342e:	ee13 2a10 	vmov	r2, s6
 8013432:	9313      	str	r3, [sp, #76]	@ 0x4c
 8013434:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8013436:	fb92 f3f3 	sdiv	r3, r2, r3
 801343a:	9314      	str	r3, [sp, #80]	@ 0x50
 801343c:	9b02      	ldr	r3, [sp, #8]
 801343e:	9a05      	ldr	r2, [sp, #20]
 8013440:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8013444:	3b01      	subs	r3, #1
 8013446:	9302      	str	r3, [sp, #8]
 8013448:	edcd 6a12 	vstr	s13, [sp, #72]	@ 0x48
 801344c:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801344e:	eeb0 3a67 	vmov.f32	s6, s15
 8013452:	bf08      	it	eq
 8013454:	4613      	moveq	r3, r2
 8013456:	eef0 2a47 	vmov.f32	s5, s14
 801345a:	e72a      	b.n	80132b2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 801345c:	140f      	asrs	r7, r1, #16
 801345e:	d454      	bmi.n	801350a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 8013460:	f8dc 6008 	ldr.w	r6, [ip, #8]
 8013464:	42be      	cmp	r6, r7
 8013466:	dd50      	ble.n	801350a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 8013468:	ea5f 4822 	movs.w	r8, r2, asr #16
 801346c:	d44d      	bmi.n	801350a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 801346e:	f8dc 400c 	ldr.w	r4, [ip, #12]
 8013472:	4544      	cmp	r4, r8
 8013474:	dd49      	ble.n	801350a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 8013476:	9c04      	ldr	r4, [sp, #16]
 8013478:	b236      	sxth	r6, r6
 801347a:	fb08 4606 	mla	r6, r8, r6, r4
 801347e:	f06f 0001 	mvn.w	r0, #1
 8013482:	f816 8007 	ldrb.w	r8, [r6, r7]
 8013486:	9c01      	ldr	r4, [sp, #4]
 8013488:	fb00 fa0e 	mul.w	sl, r0, lr
 801348c:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 8013490:	9800      	ldr	r0, [sp, #0]
 8013492:	eb04 0b08 	add.w	fp, r4, r8
 8013496:	f830 400a 	ldrh.w	r4, [r0, sl]
 801349a:	f89b 6002 	ldrb.w	r6, [fp, #2]
 801349e:	9801      	ldr	r0, [sp, #4]
 80134a0:	f89b b001 	ldrb.w	fp, [fp, #1]
 80134a4:	f810 8008 	ldrb.w	r8, [r0, r8]
 80134a8:	9800      	ldr	r0, [sp, #0]
 80134aa:	1227      	asrs	r7, r4, #8
 80134ac:	fb16 f609 	smulbb	r6, r6, r9
 80134b0:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 80134b4:	fb07 6705 	mla	r7, r7, r5, r6
 80134b8:	10e6      	asrs	r6, r4, #3
 80134ba:	00e4      	lsls	r4, r4, #3
 80134bc:	b2e4      	uxtb	r4, r4
 80134be:	fb1b fb09 	smulbb	fp, fp, r9
 80134c2:	fb14 f405 	smulbb	r4, r4, r5
 80134c6:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 80134ca:	b2bf      	uxth	r7, r7
 80134cc:	fb06 b605 	mla	r6, r6, r5, fp
 80134d0:	fb08 4809 	mla	r8, r8, r9, r4
 80134d4:	b2b6      	uxth	r6, r6
 80134d6:	fa1f f888 	uxth.w	r8, r8
 80134da:	1c7c      	adds	r4, r7, #1
 80134dc:	eb04 2717 	add.w	r7, r4, r7, lsr #8
 80134e0:	f106 0b01 	add.w	fp, r6, #1
 80134e4:	f108 0401 	add.w	r4, r8, #1
 80134e8:	eb04 2418 	add.w	r4, r4, r8, lsr #8
 80134ec:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
 80134f0:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 80134f4:	f3c4 24c4 	ubfx	r4, r4, #11, #5
 80134f8:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 80134fc:	4327      	orrs	r7, r4
 80134fe:	f40b 6bfc 	and.w	fp, fp, #2016	@ 0x7e0
 8013502:	ea47 070b 	orr.w	r7, r7, fp
 8013506:	f820 700a 	strh.w	r7, [r0, sl]
 801350a:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 801350c:	4401      	add	r1, r0
 801350e:	9814      	ldr	r0, [sp, #80]	@ 0x50
 8013510:	f10e 3eff 	add.w	lr, lr, #4294967295
 8013514:	4402      	add	r2, r0
 8013516:	e759      	b.n	80133cc <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
 8013518:	b007      	add	sp, #28
 801351a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

08013520 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8013520:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013524:	b085      	sub	sp, #20
 8013526:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 801352a:	9e13      	ldr	r6, [sp, #76]	@ 0x4c
 801352c:	9203      	str	r2, [sp, #12]
 801352e:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	@ 0x50
 8013532:	6870      	ldr	r0, [r6, #4]
 8013534:	9d16      	ldr	r5, [sp, #88]	@ 0x58
 8013536:	f8dd c044 	ldr.w	ip, [sp, #68]	@ 0x44
 801353a:	686f      	ldr	r7, [r5, #4]
 801353c:	9101      	str	r1, [sp, #4]
 801353e:	fb00 2404 	mla	r4, r0, r4, r2
 8013542:	6832      	ldr	r2, [r6, #0]
 8013544:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8013548:	682a      	ldr	r2, [r5, #0]
 801354a:	9202      	str	r2, [sp, #8]
 801354c:	3704      	adds	r7, #4
 801354e:	9a01      	ldr	r2, [sp, #4]
 8013550:	2a00      	cmp	r2, #0
 8013552:	dc03      	bgt.n	801355c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8013554:	9a03      	ldr	r2, [sp, #12]
 8013556:	2a00      	cmp	r2, #0
 8013558:	f340 80cc 	ble.w	80136f4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 801355c:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 801355e:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 8013562:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 8013566:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
 801356a:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 801356c:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 8013570:	2b00      	cmp	r3, #0
 8013572:	dd0d      	ble.n	8013590 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8013574:	1406      	asrs	r6, r0, #16
 8013576:	d405      	bmi.n	8013584 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 8013578:	454e      	cmp	r6, r9
 801357a:	da03      	bge.n	8013584 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 801357c:	1416      	asrs	r6, r2, #16
 801357e:	d401      	bmi.n	8013584 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 8013580:	4546      	cmp	r6, r8
 8013582:	db06      	blt.n	8013592 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8013584:	9e12      	ldr	r6, [sp, #72]	@ 0x48
 8013586:	4460      	add	r0, ip
 8013588:	4432      	add	r2, r6
 801358a:	3b01      	subs	r3, #1
 801358c:	3402      	adds	r4, #2
 801358e:	e7ef      	b.n	8013570 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x50>
 8013590:	d00f      	beq.n	80135b2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8013592:	1e5e      	subs	r6, r3, #1
 8013594:	fb0c 0e06 	mla	lr, ip, r6, r0
 8013598:	ea5f 4e2e 	movs.w	lr, lr, asr #16
 801359c:	d543      	bpl.n	8013626 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 801359e:	4698      	mov	r8, r3
 80135a0:	eb04 0a43 	add.w	sl, r4, r3, lsl #1
 80135a4:	f1b8 0f00 	cmp.w	r8, #0
 80135a8:	dc71      	bgt.n	801368e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16e>
 80135aa:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80135ae:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80135b2:	9b01      	ldr	r3, [sp, #4]
 80135b4:	2b00      	cmp	r3, #0
 80135b6:	f340 809d 	ble.w	80136f4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 80135ba:	ee30 0a04 	vadd.f32	s0, s0, s8
 80135be:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80135c2:	eec6 7a80 	vdiv.f32	s15, s13, s0
 80135c6:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 80135c8:	ee31 1a05 	vadd.f32	s2, s2, s10
 80135cc:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80135d0:	eeb0 6a62 	vmov.f32	s12, s5
 80135d4:	ee61 7a27 	vmul.f32	s15, s2, s15
 80135d8:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80135dc:	ee77 2a62 	vsub.f32	s5, s14, s5
 80135e0:	ed8d 6a0f 	vstr	s12, [sp, #60]	@ 0x3c
 80135e4:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80135e8:	eeb0 6a43 	vmov.f32	s12, s6
 80135ec:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80135f0:	ee12 2a90 	vmov	r2, s5
 80135f4:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80135f8:	fb92 fcf3 	sdiv	ip, r2, r3
 80135fc:	ee13 2a10 	vmov	r2, s6
 8013600:	fb92 f3f3 	sdiv	r3, r2, r3
 8013604:	9312      	str	r3, [sp, #72]	@ 0x48
 8013606:	9b01      	ldr	r3, [sp, #4]
 8013608:	9a03      	ldr	r2, [sp, #12]
 801360a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801360e:	3b01      	subs	r3, #1
 8013610:	9301      	str	r3, [sp, #4]
 8013612:	ed8d 6a10 	vstr	s12, [sp, #64]	@ 0x40
 8013616:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8013618:	eeb0 3a67 	vmov.f32	s6, s15
 801361c:	bf08      	it	eq
 801361e:	4613      	moveq	r3, r2
 8013620:	eef0 2a47 	vmov.f32	s5, s14
 8013624:	e793      	b.n	801354e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e>
 8013626:	45ce      	cmp	lr, r9
 8013628:	dab9      	bge.n	801359e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801362a:	9912      	ldr	r1, [sp, #72]	@ 0x48
 801362c:	fb01 2606 	mla	r6, r1, r6, r2
 8013630:	1436      	asrs	r6, r6, #16
 8013632:	d4b4      	bmi.n	801359e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8013634:	4546      	cmp	r6, r8
 8013636:	dab2      	bge.n	801359e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8013638:	4698      	mov	r8, r3
 801363a:	46a2      	mov	sl, r4
 801363c:	f1b8 0f00 	cmp.w	r8, #0
 8013640:	ddb3      	ble.n	80135aa <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8013642:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 8013646:	9902      	ldr	r1, [sp, #8]
 8013648:	1416      	asrs	r6, r2, #16
 801364a:	fb09 1606 	mla	r6, r9, r6, r1
 801364e:	ea4f 4e20 	mov.w	lr, r0, asr #16
 8013652:	492a      	ldr	r1, [pc, #168]	@ (80136fc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>)
 8013654:	f816 e00e 	ldrb.w	lr, [r6, lr]
 8013658:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 801365c:	eb07 0b0e 	add.w	fp, r7, lr
 8013660:	4460      	add	r0, ip
 8013662:	f89b 6001 	ldrb.w	r6, [fp, #1]
 8013666:	f89b 9002 	ldrb.w	r9, [fp, #2]
 801366a:	00f6      	lsls	r6, r6, #3
 801366c:	ea01 2909 	and.w	r9, r1, r9, lsl #8
 8013670:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
 8013674:	ea49 0606 	orr.w	r6, r9, r6
 8013678:	f817 900e 	ldrb.w	r9, [r7, lr]
 801367c:	9912      	ldr	r1, [sp, #72]	@ 0x48
 801367e:	ea46 06d9 	orr.w	r6, r6, r9, lsr #3
 8013682:	f82a 6b02 	strh.w	r6, [sl], #2
 8013686:	440a      	add	r2, r1
 8013688:	f108 38ff 	add.w	r8, r8, #4294967295
 801368c:	e7d6      	b.n	801363c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 801368e:	ea5f 4920 	movs.w	r9, r0, asr #16
 8013692:	d429      	bmi.n	80136e8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8013694:	68ae      	ldr	r6, [r5, #8]
 8013696:	454e      	cmp	r6, r9
 8013698:	dd26      	ble.n	80136e8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 801369a:	ea5f 4b22 	movs.w	fp, r2, asr #16
 801369e:	d423      	bmi.n	80136e8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 80136a0:	68e9      	ldr	r1, [r5, #12]
 80136a2:	4559      	cmp	r1, fp
 80136a4:	dd20      	ble.n	80136e8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 80136a6:	9902      	ldr	r1, [sp, #8]
 80136a8:	fa0f fe86 	sxth.w	lr, r6
 80136ac:	fb0b 1e0e 	mla	lr, fp, lr, r1
 80136b0:	f06f 0101 	mvn.w	r1, #1
 80136b4:	f81e e009 	ldrb.w	lr, [lr, r9]
 80136b8:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 80136bc:	eb07 060e 	add.w	r6, r7, lr
 80136c0:	fb01 f908 	mul.w	r9, r1, r8
 80136c4:	f896 b002 	ldrb.w	fp, [r6, #2]
 80136c8:	7876      	ldrb	r6, [r6, #1]
 80136ca:	f2a1 71fe 	subw	r1, r1, #2046	@ 0x7fe
 80136ce:	00f6      	lsls	r6, r6, #3
 80136d0:	ea01 2b0b 	and.w	fp, r1, fp, lsl #8
 80136d4:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
 80136d8:	ea4b 0606 	orr.w	r6, fp, r6
 80136dc:	f817 b00e 	ldrb.w	fp, [r7, lr]
 80136e0:	ea46 06db 	orr.w	r6, r6, fp, lsr #3
 80136e4:	f82a 6009 	strh.w	r6, [sl, r9]
 80136e8:	9912      	ldr	r1, [sp, #72]	@ 0x48
 80136ea:	4460      	add	r0, ip
 80136ec:	440a      	add	r2, r1
 80136ee:	f108 38ff 	add.w	r8, r8, #4294967295
 80136f2:	e757      	b.n	80135a4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 80136f4:	b005      	add	sp, #20
 80136f6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80136fa:	bf00      	nop
 80136fc:	fffff800 	.word	0xfffff800

08013700 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8013700:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013704:	b087      	sub	sp, #28
 8013706:	468b      	mov	fp, r1
 8013708:	9815      	ldr	r0, [sp, #84]	@ 0x54
 801370a:	9204      	str	r2, [sp, #16]
 801370c:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 8013710:	9205      	str	r2, [sp, #20]
 8013712:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	@ 0x58
 8013716:	6841      	ldr	r1, [r0, #4]
 8013718:	f8dd c060 	ldr.w	ip, [sp, #96]	@ 0x60
 801371c:	fb01 2404 	mla	r4, r1, r4, r2
 8013720:	6802      	ldr	r2, [r0, #0]
 8013722:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8013726:	f8dc 2000 	ldr.w	r2, [ip]
 801372a:	9201      	str	r2, [sp, #4]
 801372c:	f8dc 2004 	ldr.w	r2, [ip, #4]
 8013730:	3204      	adds	r2, #4
 8013732:	9202      	str	r2, [sp, #8]
 8013734:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8013738:	f1bb 0f00 	cmp.w	fp, #0
 801373c:	dc03      	bgt.n	8013746 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46>
 801373e:	9a04      	ldr	r2, [sp, #16]
 8013740:	2a00      	cmp	r2, #0
 8013742:	f340 8138 	ble.w	80139b6 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 8013746:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 8013748:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
 801374c:	f9bc 600c 	ldrsh.w	r6, [ip, #12]
 8013750:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
 8013754:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 8013756:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 801375a:	2b00      	cmp	r3, #0
 801375c:	dd0e      	ble.n	801377c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801375e:	1402      	asrs	r2, r0, #16
 8013760:	d405      	bmi.n	801376e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8013762:	42ba      	cmp	r2, r7
 8013764:	da03      	bge.n	801376e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8013766:	140a      	asrs	r2, r1, #16
 8013768:	d401      	bmi.n	801376e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801376a:	42b2      	cmp	r2, r6
 801376c:	db07      	blt.n	801377e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801376e:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 8013770:	4410      	add	r0, r2
 8013772:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8013774:	3b01      	subs	r3, #1
 8013776:	4411      	add	r1, r2
 8013778:	3402      	adds	r4, #2
 801377a:	e7ee      	b.n	801375a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
 801377c:	d019      	beq.n	80137b2 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 801377e:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 8013780:	1e5a      	subs	r2, r3, #1
 8013782:	fb05 0502 	mla	r5, r5, r2, r0
 8013786:	142d      	asrs	r5, r5, #16
 8013788:	d409      	bmi.n	801379e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801378a:	42bd      	cmp	r5, r7
 801378c:	da07      	bge.n	801379e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801378e:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 8013790:	fb05 1202 	mla	r2, r5, r2, r1
 8013794:	1412      	asrs	r2, r2, #16
 8013796:	d402      	bmi.n	801379e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8013798:	42b2      	cmp	r2, r6
 801379a:	f2c0 80ac 	blt.w	80138f6 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f6>
 801379e:	f04f 0e00 	mov.w	lr, #0
 80137a2:	eb03 020e 	add.w	r2, r3, lr
 80137a6:	2a00      	cmp	r2, #0
 80137a8:	dc3e      	bgt.n	8013828 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 80137aa:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80137ae:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80137b2:	f1bb 0f00 	cmp.w	fp, #0
 80137b6:	f340 80fe 	ble.w	80139b6 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 80137ba:	ee30 0a04 	vadd.f32	s0, s0, s8
 80137be:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80137c2:	eec6 7a80 	vdiv.f32	s15, s13, s0
 80137c6:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 80137c8:	f1bb 0b01 	subs.w	fp, fp, #1
 80137cc:	ee31 1a05 	vadd.f32	s2, s2, s10
 80137d0:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80137d4:	eeb0 6a62 	vmov.f32	s12, s5
 80137d8:	ee61 7a27 	vmul.f32	s15, s2, s15
 80137dc:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80137e0:	ee77 2a62 	vsub.f32	s5, s14, s5
 80137e4:	ed8d 6a11 	vstr	s12, [sp, #68]	@ 0x44
 80137e8:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80137ec:	eeb0 6a43 	vmov.f32	s12, s6
 80137f0:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80137f4:	ee12 2a90 	vmov	r2, s5
 80137f8:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80137fc:	fb92 f3f3 	sdiv	r3, r2, r3
 8013800:	ee13 2a10 	vmov	r2, s6
 8013804:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8013808:	9313      	str	r3, [sp, #76]	@ 0x4c
 801380a:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801380c:	fb92 f3f3 	sdiv	r3, r2, r3
 8013810:	9a04      	ldr	r2, [sp, #16]
 8013812:	9314      	str	r3, [sp, #80]	@ 0x50
 8013814:	ed8d 6a12 	vstr	s12, [sp, #72]	@ 0x48
 8013818:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801381a:	eeb0 3a67 	vmov.f32	s6, s15
 801381e:	bf08      	it	eq
 8013820:	4613      	moveq	r3, r2
 8013822:	eef0 2a47 	vmov.f32	s5, s14
 8013826:	e787      	b.n	8013738 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 8013828:	1406      	asrs	r6, r0, #16
 801382a:	d45d      	bmi.n	80138e8 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 801382c:	f8dc 5008 	ldr.w	r5, [ip, #8]
 8013830:	42b5      	cmp	r5, r6
 8013832:	dd59      	ble.n	80138e8 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8013834:	140f      	asrs	r7, r1, #16
 8013836:	d457      	bmi.n	80138e8 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8013838:	f8dc 200c 	ldr.w	r2, [ip, #12]
 801383c:	42ba      	cmp	r2, r7
 801383e:	dd53      	ble.n	80138e8 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8013840:	9a01      	ldr	r2, [sp, #4]
 8013842:	b22d      	sxth	r5, r5
 8013844:	fb07 2505 	mla	r5, r7, r5, r2
 8013848:	5daa      	ldrb	r2, [r5, r6]
 801384a:	9d02      	ldr	r5, [sp, #8]
 801384c:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 8013850:	0e2e      	lsrs	r6, r5, #24
 8013852:	d049      	beq.n	80138e8 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8013854:	f06f 0201 	mvn.w	r2, #1
 8013858:	fb02 f20e 	mul.w	r2, r2, lr
 801385c:	9203      	str	r2, [sp, #12]
 801385e:	f834 8002 	ldrh.w	r8, [r4, r2]
 8013862:	9a05      	ldr	r2, [sp, #20]
 8013864:	4356      	muls	r6, r2
 8013866:	1c72      	adds	r2, r6, #1
 8013868:	eb02 2226 	add.w	r2, r2, r6, asr #8
 801386c:	1212      	asrs	r2, r2, #8
 801386e:	fa1f f982 	uxth.w	r9, r2
 8013872:	ea4f 2728 	mov.w	r7, r8, asr #8
 8013876:	f3c5 4607 	ubfx	r6, r5, #16, #8
 801387a:	43d2      	mvns	r2, r2
 801387c:	b2d2      	uxtb	r2, r2
 801387e:	fb16 f609 	smulbb	r6, r6, r9
 8013882:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 8013886:	fb07 6702 	mla	r7, r7, r2, r6
 801388a:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 801388e:	ea4f 06e8 	mov.w	r6, r8, asr #3
 8013892:	b2ed      	uxtb	r5, r5
 8013894:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 8013898:	fa5f f888 	uxtb.w	r8, r8
 801389c:	fb15 f509 	smulbb	r5, r5, r9
 80138a0:	fb08 5502 	mla	r5, r8, r2, r5
 80138a4:	b2bf      	uxth	r7, r7
 80138a6:	fb1a fa09 	smulbb	sl, sl, r9
 80138aa:	b2ad      	uxth	r5, r5
 80138ac:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 80138b0:	fb06 a602 	mla	r6, r6, r2, sl
 80138b4:	1c7a      	adds	r2, r7, #1
 80138b6:	f105 0a01 	add.w	sl, r5, #1
 80138ba:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 80138be:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 80138c2:	b2b6      	uxth	r6, r6
 80138c4:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 80138c8:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 80138cc:	ea4a 0707 	orr.w	r7, sl, r7
 80138d0:	f106 0a01 	add.w	sl, r6, #1
 80138d4:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 80138d8:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80138dc:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 80138e0:	9a03      	ldr	r2, [sp, #12]
 80138e2:	ea47 070a 	orr.w	r7, r7, sl
 80138e6:	52a7      	strh	r7, [r4, r2]
 80138e8:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 80138ea:	4410      	add	r0, r2
 80138ec:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 80138ee:	f10e 3eff 	add.w	lr, lr, #4294967295
 80138f2:	4411      	add	r1, r2
 80138f4:	e755      	b.n	80137a2 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 80138f6:	f04f 0800 	mov.w	r8, #0
 80138fa:	eba3 0208 	sub.w	r2, r3, r8
 80138fe:	2a00      	cmp	r2, #0
 8013900:	f77f af53 	ble.w	80137aa <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 8013904:	f9bc 6008 	ldrsh.w	r6, [ip, #8]
 8013908:	9f01      	ldr	r7, [sp, #4]
 801390a:	140a      	asrs	r2, r1, #16
 801390c:	1405      	asrs	r5, r0, #16
 801390e:	fb06 7202 	mla	r2, r6, r2, r7
 8013912:	5d52      	ldrb	r2, [r2, r5]
 8013914:	9d02      	ldr	r5, [sp, #8]
 8013916:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 801391a:	0e2e      	lsrs	r6, r5, #24
 801391c:	d044      	beq.n	80139a8 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 801391e:	9a05      	ldr	r2, [sp, #20]
 8013920:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
 8013924:	4356      	muls	r6, r2
 8013926:	1c72      	adds	r2, r6, #1
 8013928:	eb02 2226 	add.w	r2, r2, r6, asr #8
 801392c:	1212      	asrs	r2, r2, #8
 801392e:	fa1f f982 	uxth.w	r9, r2
 8013932:	ea4f 272e 	mov.w	r7, lr, asr #8
 8013936:	f3c5 4607 	ubfx	r6, r5, #16, #8
 801393a:	43d2      	mvns	r2, r2
 801393c:	b2d2      	uxtb	r2, r2
 801393e:	fb16 f609 	smulbb	r6, r6, r9
 8013942:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 8013946:	fb07 6702 	mla	r7, r7, r2, r6
 801394a:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 801394e:	ea4f 06ee 	mov.w	r6, lr, asr #3
 8013952:	b2ed      	uxtb	r5, r5
 8013954:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8013958:	fa5f fe8e 	uxtb.w	lr, lr
 801395c:	fb15 f509 	smulbb	r5, r5, r9
 8013960:	fb0e 5502 	mla	r5, lr, r2, r5
 8013964:	b2bf      	uxth	r7, r7
 8013966:	fb1a fa09 	smulbb	sl, sl, r9
 801396a:	b2ad      	uxth	r5, r5
 801396c:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 8013970:	fb06 a602 	mla	r6, r6, r2, sl
 8013974:	1c7a      	adds	r2, r7, #1
 8013976:	f105 0a01 	add.w	sl, r5, #1
 801397a:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 801397e:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8013982:	b2b6      	uxth	r6, r6
 8013984:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8013988:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 801398c:	ea4a 0707 	orr.w	r7, sl, r7
 8013990:	f106 0a01 	add.w	sl, r6, #1
 8013994:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8013998:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801399c:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 80139a0:	ea47 070a 	orr.w	r7, r7, sl
 80139a4:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
 80139a8:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 80139aa:	4410      	add	r0, r2
 80139ac:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 80139ae:	f108 0801 	add.w	r8, r8, #1
 80139b2:	4411      	add	r1, r2
 80139b4:	e7a1      	b.n	80138fa <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fa>
 80139b6:	b007      	add	sp, #28
 80139b8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080139bc <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80139bc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80139c0:	b085      	sub	sp, #20
 80139c2:	468b      	mov	fp, r1
 80139c4:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 80139c6:	9203      	str	r2, [sp, #12]
 80139c8:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	@ 0x50
 80139cc:	6841      	ldr	r1, [r0, #4]
 80139ce:	f8dd e058 	ldr.w	lr, [sp, #88]	@ 0x58
 80139d2:	fb01 2404 	mla	r4, r1, r4, r2
 80139d6:	6802      	ldr	r2, [r0, #0]
 80139d8:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 80139dc:	f8de 2000 	ldr.w	r2, [lr]
 80139e0:	9200      	str	r2, [sp, #0]
 80139e2:	f8de 2004 	ldr.w	r2, [lr, #4]
 80139e6:	3204      	adds	r2, #4
 80139e8:	9201      	str	r2, [sp, #4]
 80139ea:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 80139ee:	f1bb 0f00 	cmp.w	fp, #0
 80139f2:	dc03      	bgt.n	80139fc <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 80139f4:	9a03      	ldr	r2, [sp, #12]
 80139f6:	2a00      	cmp	r2, #0
 80139f8:	f340 8153 	ble.w	8013ca2 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
 80139fc:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 80139fe:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 8013a02:	f9be 600c 	ldrsh.w	r6, [lr, #12]
 8013a06:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 8013a0a:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 8013a0c:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 8013a10:	2b00      	cmp	r3, #0
 8013a12:	dd0e      	ble.n	8013a32 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8013a14:	1408      	asrs	r0, r1, #16
 8013a16:	d405      	bmi.n	8013a24 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8013a18:	42b8      	cmp	r0, r7
 8013a1a:	da03      	bge.n	8013a24 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8013a1c:	1410      	asrs	r0, r2, #16
 8013a1e:	d401      	bmi.n	8013a24 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8013a20:	42b0      	cmp	r0, r6
 8013a22:	db07      	blt.n	8013a34 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8013a24:	9811      	ldr	r0, [sp, #68]	@ 0x44
 8013a26:	4401      	add	r1, r0
 8013a28:	9812      	ldr	r0, [sp, #72]	@ 0x48
 8013a2a:	3b01      	subs	r3, #1
 8013a2c:	4402      	add	r2, r0
 8013a2e:	3402      	adds	r4, #2
 8013a30:	e7ee      	b.n	8013a10 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 8013a32:	d017      	beq.n	8013a64 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 8013a34:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 8013a36:	1e58      	subs	r0, r3, #1
 8013a38:	fb05 1500 	mla	r5, r5, r0, r1
 8013a3c:	142d      	asrs	r5, r5, #16
 8013a3e:	d409      	bmi.n	8013a54 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8013a40:	42bd      	cmp	r5, r7
 8013a42:	da07      	bge.n	8013a54 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8013a44:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 8013a46:	fb05 2000 	mla	r0, r5, r0, r2
 8013a4a:	1400      	asrs	r0, r0, #16
 8013a4c:	d402      	bmi.n	8013a54 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8013a4e:	42b0      	cmp	r0, r6
 8013a50:	f2c0 80bc 	blt.w	8013bcc <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x210>
 8013a54:	2600      	movs	r6, #0
 8013a56:	1998      	adds	r0, r3, r6
 8013a58:	2800      	cmp	r0, #0
 8013a5a:	dc3e      	bgt.n	8013ada <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11e>
 8013a5c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8013a60:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8013a64:	f1bb 0f00 	cmp.w	fp, #0
 8013a68:	f340 811b 	ble.w	8013ca2 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
 8013a6c:	ee30 0a04 	vadd.f32	s0, s0, s8
 8013a70:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8013a74:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8013a78:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8013a7a:	f1bb 0b01 	subs.w	fp, fp, #1
 8013a7e:	ee31 1a05 	vadd.f32	s2, s2, s10
 8013a82:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8013a86:	eeb0 6a62 	vmov.f32	s12, s5
 8013a8a:	ee61 7a27 	vmul.f32	s15, s2, s15
 8013a8e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8013a92:	ee77 2a62 	vsub.f32	s5, s14, s5
 8013a96:	ed8d 6a0f 	vstr	s12, [sp, #60]	@ 0x3c
 8013a9a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8013a9e:	eeb0 6a43 	vmov.f32	s12, s6
 8013aa2:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8013aa6:	ee12 2a90 	vmov	r2, s5
 8013aaa:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8013aae:	fb92 f3f3 	sdiv	r3, r2, r3
 8013ab2:	ee13 2a10 	vmov	r2, s6
 8013ab6:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8013aba:	9311      	str	r3, [sp, #68]	@ 0x44
 8013abc:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8013abe:	fb92 f3f3 	sdiv	r3, r2, r3
 8013ac2:	9a03      	ldr	r2, [sp, #12]
 8013ac4:	9312      	str	r3, [sp, #72]	@ 0x48
 8013ac6:	ed8d 6a10 	vstr	s12, [sp, #64]	@ 0x40
 8013aca:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8013acc:	eeb0 3a67 	vmov.f32	s6, s15
 8013ad0:	bf08      	it	eq
 8013ad2:	4613      	moveq	r3, r2
 8013ad4:	eef0 2a47 	vmov.f32	s5, s14
 8013ad8:	e789      	b.n	80139ee <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 8013ada:	140f      	asrs	r7, r1, #16
 8013adc:	d426      	bmi.n	8013b2c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8013ade:	f8de 5008 	ldr.w	r5, [lr, #8]
 8013ae2:	42bd      	cmp	r5, r7
 8013ae4:	dd22      	ble.n	8013b2c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8013ae6:	ea5f 4c22 	movs.w	ip, r2, asr #16
 8013aea:	d41f      	bmi.n	8013b2c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8013aec:	f8de 000c 	ldr.w	r0, [lr, #12]
 8013af0:	4560      	cmp	r0, ip
 8013af2:	dd1b      	ble.n	8013b2c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8013af4:	9800      	ldr	r0, [sp, #0]
 8013af6:	b22d      	sxth	r5, r5
 8013af8:	fb0c 0505 	mla	r5, ip, r5, r0
 8013afc:	5de8      	ldrb	r0, [r5, r7]
 8013afe:	9d01      	ldr	r5, [sp, #4]
 8013b00:	f855 0020 	ldr.w	r0, [r5, r0, lsl #2]
 8013b04:	0e07      	lsrs	r7, r0, #24
 8013b06:	2fff      	cmp	r7, #255	@ 0xff
 8013b08:	d116      	bne.n	8013b38 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8013b0a:	f06f 0501 	mvn.w	r5, #1
 8013b0e:	fb05 f706 	mul.w	r7, r5, r6
 8013b12:	f2a5 75fe 	subw	r5, r5, #2046	@ 0x7fe
 8013b16:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
 8013b1a:	0945      	lsrs	r5, r0, #5
 8013b1c:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 8013b20:	ea4c 0505 	orr.w	r5, ip, r5
 8013b24:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 8013b28:	4305      	orrs	r5, r0
 8013b2a:	53e5      	strh	r5, [r4, r7]
 8013b2c:	9811      	ldr	r0, [sp, #68]	@ 0x44
 8013b2e:	4401      	add	r1, r0
 8013b30:	9812      	ldr	r0, [sp, #72]	@ 0x48
 8013b32:	3e01      	subs	r6, #1
 8013b34:	4402      	add	r2, r0
 8013b36:	e78e      	b.n	8013a56 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 8013b38:	b2fd      	uxtb	r5, r7
 8013b3a:	2f00      	cmp	r7, #0
 8013b3c:	d0f6      	beq.n	8013b2c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8013b3e:	f06f 0701 	mvn.w	r7, #1
 8013b42:	4377      	muls	r7, r6
 8013b44:	fa1f f985 	uxth.w	r9, r5
 8013b48:	f834 8007 	ldrh.w	r8, [r4, r7]
 8013b4c:	9702      	str	r7, [sp, #8]
 8013b4e:	ea4f 2c28 	mov.w	ip, r8, asr #8
 8013b52:	f3c0 4707 	ubfx	r7, r0, #16, #8
 8013b56:	43ed      	mvns	r5, r5
 8013b58:	b2ed      	uxtb	r5, r5
 8013b5a:	fb17 f709 	smulbb	r7, r7, r9
 8013b5e:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 8013b62:	fb0c 7c05 	mla	ip, ip, r5, r7
 8013b66:	f3c0 2a07 	ubfx	sl, r0, #8, #8
 8013b6a:	ea4f 07e8 	mov.w	r7, r8, asr #3
 8013b6e:	b2c0      	uxtb	r0, r0
 8013b70:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 8013b74:	fa5f f888 	uxtb.w	r8, r8
 8013b78:	fb10 f009 	smulbb	r0, r0, r9
 8013b7c:	fb08 0005 	mla	r0, r8, r5, r0
 8013b80:	b280      	uxth	r0, r0
 8013b82:	fa1f fc8c 	uxth.w	ip, ip
 8013b86:	fb1a fa09 	smulbb	sl, sl, r9
 8013b8a:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 8013b8e:	fb07 a705 	mla	r7, r7, r5, sl
 8013b92:	f100 0a01 	add.w	sl, r0, #1
 8013b96:	f10c 0501 	add.w	r5, ip, #1
 8013b9a:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
 8013b9e:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8013ba2:	b2bf      	uxth	r7, r7
 8013ba4:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8013ba8:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 8013bac:	ea4a 0c0c 	orr.w	ip, sl, ip
 8013bb0:	f107 0a01 	add.w	sl, r7, #1
 8013bb4:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 8013bb8:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8013bbc:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 8013bc0:	9802      	ldr	r0, [sp, #8]
 8013bc2:	ea4c 0c0a 	orr.w	ip, ip, sl
 8013bc6:	f824 c000 	strh.w	ip, [r4, r0]
 8013bca:	e7af      	b.n	8013b2c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8013bcc:	f04f 0800 	mov.w	r8, #0
 8013bd0:	eba3 0008 	sub.w	r0, r3, r8
 8013bd4:	2800      	cmp	r0, #0
 8013bd6:	f77f af41 	ble.w	8013a5c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8013bda:	f9be 6008 	ldrsh.w	r6, [lr, #8]
 8013bde:	9f00      	ldr	r7, [sp, #0]
 8013be0:	1410      	asrs	r0, r2, #16
 8013be2:	140d      	asrs	r5, r1, #16
 8013be4:	fb06 7000 	mla	r0, r6, r0, r7
 8013be8:	5d40      	ldrb	r0, [r0, r5]
 8013bea:	9d01      	ldr	r5, [sp, #4]
 8013bec:	f855 5020 	ldr.w	r5, [r5, r0, lsl #2]
 8013bf0:	0e2e      	lsrs	r6, r5, #24
 8013bf2:	2eff      	cmp	r6, #255	@ 0xff
 8013bf4:	d112      	bne.n	8013c1c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x260>
 8013bf6:	482c      	ldr	r0, [pc, #176]	@ (8013ca8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ec>)
 8013bf8:	ea00 2615 	and.w	r6, r0, r5, lsr #8
 8013bfc:	0968      	lsrs	r0, r5, #5
 8013bfe:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8013c02:	4330      	orrs	r0, r6
 8013c04:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 8013c08:	4328      	orrs	r0, r5
 8013c0a:	f824 0018 	strh.w	r0, [r4, r8, lsl #1]
 8013c0e:	9811      	ldr	r0, [sp, #68]	@ 0x44
 8013c10:	4401      	add	r1, r0
 8013c12:	9812      	ldr	r0, [sp, #72]	@ 0x48
 8013c14:	f108 0801 	add.w	r8, r8, #1
 8013c18:	4402      	add	r2, r0
 8013c1a:	e7d9      	b.n	8013bd0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8013c1c:	b2f0      	uxtb	r0, r6
 8013c1e:	2e00      	cmp	r6, #0
 8013c20:	d0f5      	beq.n	8013c0e <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 8013c22:	f834 c018 	ldrh.w	ip, [r4, r8, lsl #1]
 8013c26:	fa1f f980 	uxth.w	r9, r0
 8013c2a:	ea4f 272c 	mov.w	r7, ip, asr #8
 8013c2e:	f3c5 4607 	ubfx	r6, r5, #16, #8
 8013c32:	43c0      	mvns	r0, r0
 8013c34:	b2c0      	uxtb	r0, r0
 8013c36:	fb16 f609 	smulbb	r6, r6, r9
 8013c3a:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 8013c3e:	fb07 6700 	mla	r7, r7, r0, r6
 8013c42:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 8013c46:	ea4f 06ec 	mov.w	r6, ip, asr #3
 8013c4a:	b2ed      	uxtb	r5, r5
 8013c4c:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8013c50:	fa5f fc8c 	uxtb.w	ip, ip
 8013c54:	fb15 f509 	smulbb	r5, r5, r9
 8013c58:	fb0c 5500 	mla	r5, ip, r0, r5
 8013c5c:	b2bf      	uxth	r7, r7
 8013c5e:	fb1a fa09 	smulbb	sl, sl, r9
 8013c62:	b2ad      	uxth	r5, r5
 8013c64:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 8013c68:	fb06 a600 	mla	r6, r6, r0, sl
 8013c6c:	1c78      	adds	r0, r7, #1
 8013c6e:	f105 0a01 	add.w	sl, r5, #1
 8013c72:	eb00 2717 	add.w	r7, r0, r7, lsr #8
 8013c76:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8013c7a:	b2b6      	uxth	r6, r6
 8013c7c:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8013c80:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 8013c84:	ea4a 0707 	orr.w	r7, sl, r7
 8013c88:	f106 0a01 	add.w	sl, r6, #1
 8013c8c:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8013c90:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8013c94:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 8013c98:	ea47 070a 	orr.w	r7, r7, sl
 8013c9c:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
 8013ca0:	e7b5      	b.n	8013c0e <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 8013ca2:	b005      	add	sp, #20
 8013ca4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8013ca8:	fffff800 	.word	0xfffff800

08013cac <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8013cac:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013cb0:	b087      	sub	sp, #28
 8013cb2:	468b      	mov	fp, r1
 8013cb4:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 8013cb6:	9204      	str	r2, [sp, #16]
 8013cb8:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 8013cbc:	9205      	str	r2, [sp, #20]
 8013cbe:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	@ 0x58
 8013cc2:	6861      	ldr	r1, [r4, #4]
 8013cc4:	f8dd e060 	ldr.w	lr, [sp, #96]	@ 0x60
 8013cc8:	fb01 2000 	mla	r0, r1, r0, r2
 8013ccc:	6822      	ldr	r2, [r4, #0]
 8013cce:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 8013cd2:	f8de 2000 	ldr.w	r2, [lr]
 8013cd6:	9201      	str	r2, [sp, #4]
 8013cd8:	f8de 2004 	ldr.w	r2, [lr, #4]
 8013cdc:	9202      	str	r2, [sp, #8]
 8013cde:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8013ce2:	f1bb 0f00 	cmp.w	fp, #0
 8013ce6:	dc03      	bgt.n	8013cf0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44>
 8013ce8:	9a04      	ldr	r2, [sp, #16]
 8013cea:	2a00      	cmp	r2, #0
 8013cec:	f340 8142 	ble.w	8013f74 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
 8013cf0:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 8013cf2:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 8013cf6:	f9be 600c 	ldrsh.w	r6, [lr, #12]
 8013cfa:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 8013cfe:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 8013d00:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 8013d04:	2b00      	cmp	r3, #0
 8013d06:	dd0e      	ble.n	8013d26 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8013d08:	140c      	asrs	r4, r1, #16
 8013d0a:	d405      	bmi.n	8013d18 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8013d0c:	42bc      	cmp	r4, r7
 8013d0e:	da03      	bge.n	8013d18 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8013d10:	1414      	asrs	r4, r2, #16
 8013d12:	d401      	bmi.n	8013d18 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8013d14:	42b4      	cmp	r4, r6
 8013d16:	db07      	blt.n	8013d28 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8013d18:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 8013d1a:	4421      	add	r1, r4
 8013d1c:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 8013d1e:	3b01      	subs	r3, #1
 8013d20:	4422      	add	r2, r4
 8013d22:	3002      	adds	r0, #2
 8013d24:	e7ee      	b.n	8013d04 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 8013d26:	d019      	beq.n	8013d5c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 8013d28:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 8013d2a:	1e5c      	subs	r4, r3, #1
 8013d2c:	fb05 1504 	mla	r5, r5, r4, r1
 8013d30:	142d      	asrs	r5, r5, #16
 8013d32:	d409      	bmi.n	8013d48 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8013d34:	42bd      	cmp	r5, r7
 8013d36:	da07      	bge.n	8013d48 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8013d38:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 8013d3a:	fb05 2404 	mla	r4, r5, r4, r2
 8013d3e:	1424      	asrs	r4, r4, #16
 8013d40:	d402      	bmi.n	8013d48 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8013d42:	42b4      	cmp	r4, r6
 8013d44:	f2c0 80b1 	blt.w	8013eaa <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fe>
 8013d48:	f04f 0800 	mov.w	r8, #0
 8013d4c:	eb03 0408 	add.w	r4, r3, r8
 8013d50:	2c00      	cmp	r4, #0
 8013d52:	dc3e      	bgt.n	8013dd2 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 8013d54:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8013d58:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8013d5c:	f1bb 0f00 	cmp.w	fp, #0
 8013d60:	f340 8108 	ble.w	8013f74 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
 8013d64:	ee30 0a04 	vadd.f32	s0, s0, s8
 8013d68:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8013d6c:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8013d70:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8013d72:	f1bb 0b01 	subs.w	fp, fp, #1
 8013d76:	ee31 1a05 	vadd.f32	s2, s2, s10
 8013d7a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8013d7e:	eeb0 6a62 	vmov.f32	s12, s5
 8013d82:	ee61 7a27 	vmul.f32	s15, s2, s15
 8013d86:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8013d8a:	ee77 2a62 	vsub.f32	s5, s14, s5
 8013d8e:	ed8d 6a11 	vstr	s12, [sp, #68]	@ 0x44
 8013d92:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8013d96:	eeb0 6a43 	vmov.f32	s12, s6
 8013d9a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8013d9e:	ee12 2a90 	vmov	r2, s5
 8013da2:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8013da6:	fb92 f3f3 	sdiv	r3, r2, r3
 8013daa:	ee13 2a10 	vmov	r2, s6
 8013dae:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8013db2:	9313      	str	r3, [sp, #76]	@ 0x4c
 8013db4:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8013db6:	fb92 f3f3 	sdiv	r3, r2, r3
 8013dba:	9a04      	ldr	r2, [sp, #16]
 8013dbc:	9314      	str	r3, [sp, #80]	@ 0x50
 8013dbe:	ed8d 6a12 	vstr	s12, [sp, #72]	@ 0x48
 8013dc2:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8013dc4:	eeb0 3a67 	vmov.f32	s6, s15
 8013dc8:	bf08      	it	eq
 8013dca:	4613      	moveq	r3, r2
 8013dcc:	eef0 2a47 	vmov.f32	s5, s14
 8013dd0:	e787      	b.n	8013ce2 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36>
 8013dd2:	140e      	asrs	r6, r1, #16
 8013dd4:	d462      	bmi.n	8013e9c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8013dd6:	f8de 5008 	ldr.w	r5, [lr, #8]
 8013dda:	42b5      	cmp	r5, r6
 8013ddc:	dd5e      	ble.n	8013e9c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8013dde:	1417      	asrs	r7, r2, #16
 8013de0:	d45c      	bmi.n	8013e9c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8013de2:	f8de 400c 	ldr.w	r4, [lr, #12]
 8013de6:	42bc      	cmp	r4, r7
 8013de8:	dd58      	ble.n	8013e9c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8013dea:	b22d      	sxth	r5, r5
 8013dec:	fb07 6505 	mla	r5, r7, r5, r6
 8013df0:	9c02      	ldr	r4, [sp, #8]
 8013df2:	5d66      	ldrb	r6, [r4, r5]
 8013df4:	2e00      	cmp	r6, #0
 8013df6:	d051      	beq.n	8013e9c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8013df8:	9c01      	ldr	r4, [sp, #4]
 8013dfa:	f834 9015 	ldrh.w	r9, [r4, r5, lsl #1]
 8013dfe:	f06f 0401 	mvn.w	r4, #1
 8013e02:	fb04 f408 	mul.w	r4, r4, r8
 8013e06:	9403      	str	r4, [sp, #12]
 8013e08:	5b05      	ldrh	r5, [r0, r4]
 8013e0a:	9c05      	ldr	r4, [sp, #20]
 8013e0c:	4366      	muls	r6, r4
 8013e0e:	1c74      	adds	r4, r6, #1
 8013e10:	eb04 2416 	add.w	r4, r4, r6, lsr #8
 8013e14:	1224      	asrs	r4, r4, #8
 8013e16:	b2a7      	uxth	r7, r4
 8013e18:	122e      	asrs	r6, r5, #8
 8013e1a:	43e4      	mvns	r4, r4
 8013e1c:	b2e4      	uxtb	r4, r4
 8013e1e:	ea4f 2c29 	mov.w	ip, r9, asr #8
 8013e22:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 8013e26:	fb16 f604 	smulbb	r6, r6, r4
 8013e2a:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8013e2e:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 8013e32:	00ed      	lsls	r5, r5, #3
 8013e34:	fb0c 6c07 	mla	ip, ip, r7, r6
 8013e38:	b2ed      	uxtb	r5, r5
 8013e3a:	ea4f 06e9 	mov.w	r6, r9, asr #3
 8013e3e:	ea4f 09c9 	mov.w	r9, r9, lsl #3
 8013e42:	fb15 f504 	smulbb	r5, r5, r4
 8013e46:	fa5f f989 	uxtb.w	r9, r9
 8013e4a:	f00a 0afc 	and.w	sl, sl, #252	@ 0xfc
 8013e4e:	fb09 5507 	mla	r5, r9, r7, r5
 8013e52:	fb1a fa04 	smulbb	sl, sl, r4
 8013e56:	fa1f fc8c 	uxth.w	ip, ip
 8013e5a:	b2ad      	uxth	r5, r5
 8013e5c:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 8013e60:	fb06 a607 	mla	r6, r6, r7, sl
 8013e64:	f10c 0401 	add.w	r4, ip, #1
 8013e68:	f105 0a01 	add.w	sl, r5, #1
 8013e6c:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 8013e70:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8013e74:	b2b6      	uxth	r6, r6
 8013e76:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8013e7a:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 8013e7e:	ea4a 0c0c 	orr.w	ip, sl, ip
 8013e82:	f106 0a01 	add.w	sl, r6, #1
 8013e86:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8013e8a:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8013e8e:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 8013e92:	9c03      	ldr	r4, [sp, #12]
 8013e94:	ea4c 0c0a 	orr.w	ip, ip, sl
 8013e98:	f820 c004 	strh.w	ip, [r0, r4]
 8013e9c:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 8013e9e:	4421      	add	r1, r4
 8013ea0:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 8013ea2:	f108 38ff 	add.w	r8, r8, #4294967295
 8013ea6:	4422      	add	r2, r4
 8013ea8:	e750      	b.n	8013d4c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8013eaa:	f04f 0900 	mov.w	r9, #0
 8013eae:	eba3 0409 	sub.w	r4, r3, r9
 8013eb2:	2c00      	cmp	r4, #0
 8013eb4:	f77f af4e 	ble.w	8013d54 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 8013eb8:	f9be 6008 	ldrsh.w	r6, [lr, #8]
 8013ebc:	140d      	asrs	r5, r1, #16
 8013ebe:	1414      	asrs	r4, r2, #16
 8013ec0:	fb06 5404 	mla	r4, r6, r4, r5
 8013ec4:	9d02      	ldr	r5, [sp, #8]
 8013ec6:	5d2e      	ldrb	r6, [r5, r4]
 8013ec8:	2e00      	cmp	r6, #0
 8013eca:	d04c      	beq.n	8013f66 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ba>
 8013ecc:	9d01      	ldr	r5, [sp, #4]
 8013ece:	f835 8014 	ldrh.w	r8, [r5, r4, lsl #1]
 8013ed2:	9c05      	ldr	r4, [sp, #20]
 8013ed4:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
 8013ed8:	4366      	muls	r6, r4
 8013eda:	1c74      	adds	r4, r6, #1
 8013edc:	eb04 2416 	add.w	r4, r4, r6, lsr #8
 8013ee0:	1224      	asrs	r4, r4, #8
 8013ee2:	b2a7      	uxth	r7, r4
 8013ee4:	122e      	asrs	r6, r5, #8
 8013ee6:	43e4      	mvns	r4, r4
 8013ee8:	b2e4      	uxtb	r4, r4
 8013eea:	ea4f 2c28 	mov.w	ip, r8, asr #8
 8013eee:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 8013ef2:	fb16 f604 	smulbb	r6, r6, r4
 8013ef6:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8013efa:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 8013efe:	00ed      	lsls	r5, r5, #3
 8013f00:	fb0c 6c07 	mla	ip, ip, r7, r6
 8013f04:	b2ed      	uxtb	r5, r5
 8013f06:	ea4f 06e8 	mov.w	r6, r8, asr #3
 8013f0a:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 8013f0e:	fb15 f504 	smulbb	r5, r5, r4
 8013f12:	fa5f f888 	uxtb.w	r8, r8
 8013f16:	f00a 0afc 	and.w	sl, sl, #252	@ 0xfc
 8013f1a:	fb08 5507 	mla	r5, r8, r7, r5
 8013f1e:	fb1a fa04 	smulbb	sl, sl, r4
 8013f22:	fa1f fc8c 	uxth.w	ip, ip
 8013f26:	b2ad      	uxth	r5, r5
 8013f28:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 8013f2c:	fb06 a607 	mla	r6, r6, r7, sl
 8013f30:	f10c 0401 	add.w	r4, ip, #1
 8013f34:	f105 0a01 	add.w	sl, r5, #1
 8013f38:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 8013f3c:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8013f40:	b2b6      	uxth	r6, r6
 8013f42:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8013f46:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 8013f4a:	ea4a 0c0c 	orr.w	ip, sl, ip
 8013f4e:	f106 0a01 	add.w	sl, r6, #1
 8013f52:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8013f56:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8013f5a:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 8013f5e:	ea4c 0c0a 	orr.w	ip, ip, sl
 8013f62:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
 8013f66:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 8013f68:	4421      	add	r1, r4
 8013f6a:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 8013f6c:	f109 0901 	add.w	r9, r9, #1
 8013f70:	4422      	add	r2, r4
 8013f72:	e79c      	b.n	8013eae <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x202>
 8013f74:	b007      	add	sp, #28
 8013f76:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08013f7a <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8013f7a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013f7e:	b085      	sub	sp, #20
 8013f80:	468b      	mov	fp, r1
 8013f82:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 8013f84:	9203      	str	r2, [sp, #12]
 8013f86:	e9dd 2014 	ldrd	r2, r0, [sp, #80]	@ 0x50
 8013f8a:	6861      	ldr	r1, [r4, #4]
 8013f8c:	f8dd 8058 	ldr.w	r8, [sp, #88]	@ 0x58
 8013f90:	fb01 2000 	mla	r0, r1, r0, r2
 8013f94:	6822      	ldr	r2, [r4, #0]
 8013f96:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 8013f9a:	f8d8 2000 	ldr.w	r2, [r8]
 8013f9e:	9200      	str	r2, [sp, #0]
 8013fa0:	f8d8 2004 	ldr.w	r2, [r8, #4]
 8013fa4:	9201      	str	r2, [sp, #4]
 8013fa6:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8013faa:	f1bb 0f00 	cmp.w	fp, #0
 8013fae:	dc03      	bgt.n	8013fb8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 8013fb0:	9a03      	ldr	r2, [sp, #12]
 8013fb2:	2a00      	cmp	r2, #0
 8013fb4:	f340 8146 	ble.w	8014244 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
 8013fb8:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 8013fba:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
 8013fbe:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
 8013fc2:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 8013fc6:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 8013fc8:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 8013fcc:	2b00      	cmp	r3, #0
 8013fce:	dd0e      	ble.n	8013fee <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 8013fd0:	140c      	asrs	r4, r1, #16
 8013fd2:	d405      	bmi.n	8013fe0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8013fd4:	42bc      	cmp	r4, r7
 8013fd6:	da03      	bge.n	8013fe0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8013fd8:	1414      	asrs	r4, r2, #16
 8013fda:	d401      	bmi.n	8013fe0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8013fdc:	42b4      	cmp	r4, r6
 8013fde:	db07      	blt.n	8013ff0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8013fe0:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 8013fe2:	4421      	add	r1, r4
 8013fe4:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 8013fe6:	3b01      	subs	r3, #1
 8013fe8:	4422      	add	r2, r4
 8013fea:	3002      	adds	r0, #2
 8013fec:	e7ee      	b.n	8013fcc <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 8013fee:	d017      	beq.n	8014020 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 8013ff0:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 8013ff2:	1e5c      	subs	r4, r3, #1
 8013ff4:	fb05 1504 	mla	r5, r5, r4, r1
 8013ff8:	142d      	asrs	r5, r5, #16
 8013ffa:	d409      	bmi.n	8014010 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8013ffc:	42bd      	cmp	r5, r7
 8013ffe:	da07      	bge.n	8014010 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8014000:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 8014002:	fb05 2404 	mla	r4, r5, r4, r2
 8014006:	1424      	asrs	r4, r4, #16
 8014008:	d402      	bmi.n	8014010 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801400a:	42b4      	cmp	r4, r6
 801400c:	f2c0 80b3 	blt.w	8014176 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fc>
 8014010:	2600      	movs	r6, #0
 8014012:	199c      	adds	r4, r3, r6
 8014014:	2c00      	cmp	r4, #0
 8014016:	dc3e      	bgt.n	8014096 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 8014018:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801401c:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8014020:	f1bb 0f00 	cmp.w	fp, #0
 8014024:	f340 810e 	ble.w	8014244 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
 8014028:	ee30 0a04 	vadd.f32	s0, s0, s8
 801402c:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8014030:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8014034:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8014036:	f1bb 0b01 	subs.w	fp, fp, #1
 801403a:	ee31 1a05 	vadd.f32	s2, s2, s10
 801403e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8014042:	eeb0 6a62 	vmov.f32	s12, s5
 8014046:	ee61 7a27 	vmul.f32	s15, s2, s15
 801404a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801404e:	ee77 2a62 	vsub.f32	s5, s14, s5
 8014052:	ed8d 6a0f 	vstr	s12, [sp, #60]	@ 0x3c
 8014056:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801405a:	eeb0 6a43 	vmov.f32	s12, s6
 801405e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8014062:	ee12 2a90 	vmov	r2, s5
 8014066:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801406a:	fb92 f3f3 	sdiv	r3, r2, r3
 801406e:	ee13 2a10 	vmov	r2, s6
 8014072:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8014076:	9311      	str	r3, [sp, #68]	@ 0x44
 8014078:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801407a:	fb92 f3f3 	sdiv	r3, r2, r3
 801407e:	9a03      	ldr	r2, [sp, #12]
 8014080:	9312      	str	r3, [sp, #72]	@ 0x48
 8014082:	ed8d 6a10 	vstr	s12, [sp, #64]	@ 0x40
 8014086:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8014088:	eeb0 3a67 	vmov.f32	s6, s15
 801408c:	bf08      	it	eq
 801408e:	4613      	moveq	r3, r2
 8014090:	eef0 2a47 	vmov.f32	s5, s14
 8014094:	e789      	b.n	8013faa <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 8014096:	140f      	asrs	r7, r1, #16
 8014098:	d418      	bmi.n	80140cc <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801409a:	f8d8 5008 	ldr.w	r5, [r8, #8]
 801409e:	42bd      	cmp	r5, r7
 80140a0:	dd14      	ble.n	80140cc <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 80140a2:	ea5f 4c22 	movs.w	ip, r2, asr #16
 80140a6:	d411      	bmi.n	80140cc <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 80140a8:	f8d8 400c 	ldr.w	r4, [r8, #12]
 80140ac:	4564      	cmp	r4, ip
 80140ae:	dd0d      	ble.n	80140cc <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 80140b0:	b22d      	sxth	r5, r5
 80140b2:	fb0c 7505 	mla	r5, ip, r5, r7
 80140b6:	9c01      	ldr	r4, [sp, #4]
 80140b8:	5d64      	ldrb	r4, [r4, r5]
 80140ba:	2cff      	cmp	r4, #255	@ 0xff
 80140bc:	d10c      	bne.n	80140d8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
 80140be:	9c00      	ldr	r4, [sp, #0]
 80140c0:	f834 5015 	ldrh.w	r5, [r4, r5, lsl #1]
 80140c4:	f06f 0401 	mvn.w	r4, #1
 80140c8:	4374      	muls	r4, r6
 80140ca:	5305      	strh	r5, [r0, r4]
 80140cc:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 80140ce:	4421      	add	r1, r4
 80140d0:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 80140d2:	3e01      	subs	r6, #1
 80140d4:	4422      	add	r2, r4
 80140d6:	e79c      	b.n	8014012 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 80140d8:	2c00      	cmp	r4, #0
 80140da:	d0f7      	beq.n	80140cc <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 80140dc:	9f00      	ldr	r7, [sp, #0]
 80140de:	f837 9015 	ldrh.w	r9, [r7, r5, lsl #1]
 80140e2:	f06f 0501 	mvn.w	r5, #1
 80140e6:	4375      	muls	r5, r6
 80140e8:	9502      	str	r5, [sp, #8]
 80140ea:	5b45      	ldrh	r5, [r0, r5]
 80140ec:	fa1f fc84 	uxth.w	ip, r4
 80140f0:	122f      	asrs	r7, r5, #8
 80140f2:	43e4      	mvns	r4, r4
 80140f4:	b2e4      	uxtb	r4, r4
 80140f6:	ea4f 2e29 	mov.w	lr, r9, asr #8
 80140fa:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 80140fe:	fb17 f704 	smulbb	r7, r7, r4
 8014102:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8014106:	f00e 0ef8 	and.w	lr, lr, #248	@ 0xf8
 801410a:	00ed      	lsls	r5, r5, #3
 801410c:	fb0e 7e0c 	mla	lr, lr, ip, r7
 8014110:	b2ed      	uxtb	r5, r5
 8014112:	ea4f 07e9 	mov.w	r7, r9, asr #3
 8014116:	ea4f 09c9 	mov.w	r9, r9, lsl #3
 801411a:	fb15 f504 	smulbb	r5, r5, r4
 801411e:	fa5f f989 	uxtb.w	r9, r9
 8014122:	f00a 0afc 	and.w	sl, sl, #252	@ 0xfc
 8014126:	fb09 550c 	mla	r5, r9, ip, r5
 801412a:	fb1a fa04 	smulbb	sl, sl, r4
 801412e:	fa1f fe8e 	uxth.w	lr, lr
 8014132:	b2ad      	uxth	r5, r5
 8014134:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 8014138:	fb07 a70c 	mla	r7, r7, ip, sl
 801413c:	f10e 0401 	add.w	r4, lr, #1
 8014140:	f105 0a01 	add.w	sl, r5, #1
 8014144:	eb04 2e1e 	add.w	lr, r4, lr, lsr #8
 8014148:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801414c:	b2bf      	uxth	r7, r7
 801414e:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8014152:	f40e 4e78 	and.w	lr, lr, #63488	@ 0xf800
 8014156:	ea4a 0e0e 	orr.w	lr, sl, lr
 801415a:	f107 0a01 	add.w	sl, r7, #1
 801415e:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 8014162:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8014166:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 801416a:	9c02      	ldr	r4, [sp, #8]
 801416c:	ea4e 0e0a 	orr.w	lr, lr, sl
 8014170:	f820 e004 	strh.w	lr, [r0, r4]
 8014174:	e7aa      	b.n	80140cc <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8014176:	f04f 0900 	mov.w	r9, #0
 801417a:	eba3 0409 	sub.w	r4, r3, r9
 801417e:	2c00      	cmp	r4, #0
 8014180:	f77f af4a 	ble.w	8014018 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8014184:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
 8014188:	1414      	asrs	r4, r2, #16
 801418a:	140d      	asrs	r5, r1, #16
 801418c:	fb06 5504 	mla	r5, r6, r4, r5
 8014190:	9c01      	ldr	r4, [sp, #4]
 8014192:	5d64      	ldrb	r4, [r4, r5]
 8014194:	2cff      	cmp	r4, #255	@ 0xff
 8014196:	d10b      	bne.n	80141b0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 8014198:	9c00      	ldr	r4, [sp, #0]
 801419a:	f834 4015 	ldrh.w	r4, [r4, r5, lsl #1]
 801419e:	f820 4019 	strh.w	r4, [r0, r9, lsl #1]
 80141a2:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 80141a4:	4421      	add	r1, r4
 80141a6:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 80141a8:	f109 0901 	add.w	r9, r9, #1
 80141ac:	4422      	add	r2, r4
 80141ae:	e7e4      	b.n	801417a <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 80141b0:	2c00      	cmp	r4, #0
 80141b2:	d0f6      	beq.n	80141a2 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 80141b4:	9e00      	ldr	r6, [sp, #0]
 80141b6:	f836 e015 	ldrh.w	lr, [r6, r5, lsl #1]
 80141ba:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
 80141be:	b2a7      	uxth	r7, r4
 80141c0:	122e      	asrs	r6, r5, #8
 80141c2:	43e4      	mvns	r4, r4
 80141c4:	b2e4      	uxtb	r4, r4
 80141c6:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 80141ca:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 80141ce:	fb16 f604 	smulbb	r6, r6, r4
 80141d2:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 80141d6:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 80141da:	00ed      	lsls	r5, r5, #3
 80141dc:	fb0c 6c07 	mla	ip, ip, r7, r6
 80141e0:	b2ed      	uxtb	r5, r5
 80141e2:	ea4f 06ee 	mov.w	r6, lr, asr #3
 80141e6:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 80141ea:	fb15 f504 	smulbb	r5, r5, r4
 80141ee:	fa5f fe8e 	uxtb.w	lr, lr
 80141f2:	f00a 0afc 	and.w	sl, sl, #252	@ 0xfc
 80141f6:	fb0e 5507 	mla	r5, lr, r7, r5
 80141fa:	fb1a fa04 	smulbb	sl, sl, r4
 80141fe:	fa1f fc8c 	uxth.w	ip, ip
 8014202:	b2ad      	uxth	r5, r5
 8014204:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 8014208:	fb06 a607 	mla	r6, r6, r7, sl
 801420c:	f10c 0401 	add.w	r4, ip, #1
 8014210:	f105 0a01 	add.w	sl, r5, #1
 8014214:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 8014218:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801421c:	b2b6      	uxth	r6, r6
 801421e:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8014222:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 8014226:	ea4a 0c0c 	orr.w	ip, sl, ip
 801422a:	f106 0a01 	add.w	sl, r6, #1
 801422e:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8014232:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8014236:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 801423a:	ea4c 0c0a 	orr.w	ip, ip, sl
 801423e:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
 8014242:	e7ae      	b.n	80141a2 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 8014244:	b005      	add	sp, #20
 8014246:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801424a <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801424a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801424e:	b085      	sub	sp, #20
 8014250:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 8014252:	9203      	str	r2, [sp, #12]
 8014254:	f89d 205c 	ldrb.w	r2, [sp, #92]	@ 0x5c
 8014258:	9201      	str	r2, [sp, #4]
 801425a:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	@ 0x50
 801425e:	9100      	str	r1, [sp, #0]
 8014260:	6841      	ldr	r1, [r0, #4]
 8014262:	f8dd e058 	ldr.w	lr, [sp, #88]	@ 0x58
 8014266:	fb01 2404 	mla	r4, r1, r4, r2
 801426a:	6802      	ldr	r2, [r0, #0]
 801426c:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8014270:	f8de 2000 	ldr.w	r2, [lr]
 8014274:	9202      	str	r2, [sp, #8]
 8014276:	9a01      	ldr	r2, [sp, #4]
 8014278:	43d6      	mvns	r6, r2
 801427a:	b2f6      	uxtb	r6, r6
 801427c:	9a00      	ldr	r2, [sp, #0]
 801427e:	2a00      	cmp	r2, #0
 8014280:	dc03      	bgt.n	801428a <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 8014282:	9a03      	ldr	r2, [sp, #12]
 8014284:	2a00      	cmp	r2, #0
 8014286:	f340 8124 	ble.w	80144d2 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 801428a:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 801428c:	f9be c008 	ldrsh.w	ip, [lr, #8]
 8014290:	f9be 700c 	ldrsh.w	r7, [lr, #12]
 8014294:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 8014298:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 801429a:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 801429e:	2b00      	cmp	r3, #0
 80142a0:	dd0e      	ble.n	80142c0 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 80142a2:	1408      	asrs	r0, r1, #16
 80142a4:	d405      	bmi.n	80142b2 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 80142a6:	4560      	cmp	r0, ip
 80142a8:	da03      	bge.n	80142b2 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 80142aa:	1410      	asrs	r0, r2, #16
 80142ac:	d401      	bmi.n	80142b2 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 80142ae:	42b8      	cmp	r0, r7
 80142b0:	db07      	blt.n	80142c2 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 80142b2:	9811      	ldr	r0, [sp, #68]	@ 0x44
 80142b4:	4401      	add	r1, r0
 80142b6:	9812      	ldr	r0, [sp, #72]	@ 0x48
 80142b8:	3b01      	subs	r3, #1
 80142ba:	4402      	add	r2, r0
 80142bc:	3402      	adds	r4, #2
 80142be:	e7ee      	b.n	801429e <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 80142c0:	d06e      	beq.n	80143a0 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
 80142c2:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 80142c4:	1e58      	subs	r0, r3, #1
 80142c6:	fb05 1500 	mla	r5, r5, r0, r1
 80142ca:	142d      	asrs	r5, r5, #16
 80142cc:	d45c      	bmi.n	8014388 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 80142ce:	4565      	cmp	r5, ip
 80142d0:	da5a      	bge.n	8014388 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 80142d2:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 80142d4:	fb05 2000 	mla	r0, r5, r0, r2
 80142d8:	1400      	asrs	r0, r0, #16
 80142da:	d455      	bmi.n	8014388 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 80142dc:	42b8      	cmp	r0, r7
 80142de:	da53      	bge.n	8014388 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 80142e0:	f8bd b004 	ldrh.w	fp, [sp, #4]
 80142e4:	4699      	mov	r9, r3
 80142e6:	46a2      	mov	sl, r4
 80142e8:	f1b9 0f00 	cmp.w	r9, #0
 80142ec:	dd54      	ble.n	8014398 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 80142ee:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 80142f2:	140d      	asrs	r5, r1, #16
 80142f4:	1410      	asrs	r0, r2, #16
 80142f6:	fb07 5000 	mla	r0, r7, r0, r5
 80142fa:	9d02      	ldr	r5, [sp, #8]
 80142fc:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 8014300:	f8ba 5000 	ldrh.w	r5, [sl]
 8014304:	122f      	asrs	r7, r5, #8
 8014306:	ea4f 2c20 	mov.w	ip, r0, asr #8
 801430a:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 801430e:	fb17 f706 	smulbb	r7, r7, r6
 8014312:	ea4f 08e5 	mov.w	r8, r5, asr #3
 8014316:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 801431a:	00ed      	lsls	r5, r5, #3
 801431c:	fb0c 7c0b 	mla	ip, ip, fp, r7
 8014320:	f008 08fc 	and.w	r8, r8, #252	@ 0xfc
 8014324:	10c7      	asrs	r7, r0, #3
 8014326:	b2ed      	uxtb	r5, r5
 8014328:	00c0      	lsls	r0, r0, #3
 801432a:	fb18 f806 	smulbb	r8, r8, r6
 801432e:	fb15 f506 	smulbb	r5, r5, r6
 8014332:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 8014336:	b2c0      	uxtb	r0, r0
 8014338:	fa1f fc8c 	uxth.w	ip, ip
 801433c:	fb07 870b 	mla	r7, r7, fp, r8
 8014340:	fb00 500b 	mla	r0, r0, fp, r5
 8014344:	b280      	uxth	r0, r0
 8014346:	b2bf      	uxth	r7, r7
 8014348:	f10c 0501 	add.w	r5, ip, #1
 801434c:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8014350:	f107 0801 	add.w	r8, r7, #1
 8014354:	1c45      	adds	r5, r0, #1
 8014356:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 801435a:	eb08 2817 	add.w	r8, r8, r7, lsr #8
 801435e:	9811      	ldr	r0, [sp, #68]	@ 0x44
 8014360:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 8014364:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8014368:	ea4f 1858 	mov.w	r8, r8, lsr #5
 801436c:	ea45 0c0c 	orr.w	ip, r5, ip
 8014370:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
 8014374:	4401      	add	r1, r0
 8014376:	9812      	ldr	r0, [sp, #72]	@ 0x48
 8014378:	ea4c 0c08 	orr.w	ip, ip, r8
 801437c:	f82a cb02 	strh.w	ip, [sl], #2
 8014380:	4402      	add	r2, r0
 8014382:	f109 39ff 	add.w	r9, r9, #4294967295
 8014386:	e7af      	b.n	80142e8 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8014388:	f8bd a004 	ldrh.w	sl, [sp, #4]
 801438c:	f04f 0800 	mov.w	r8, #0
 8014390:	eb03 0008 	add.w	r0, r3, r8
 8014394:	2800      	cmp	r0, #0
 8014396:	dc41      	bgt.n	801441c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 8014398:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801439c:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80143a0:	9b00      	ldr	r3, [sp, #0]
 80143a2:	2b00      	cmp	r3, #0
 80143a4:	f340 8095 	ble.w	80144d2 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 80143a8:	ee30 0a04 	vadd.f32	s0, s0, s8
 80143ac:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 80143b0:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80143b4:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 80143b6:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80143ba:	ee31 1a05 	vadd.f32	s2, s2, s10
 80143be:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80143c2:	eef0 6a62 	vmov.f32	s13, s5
 80143c6:	ee61 7a27 	vmul.f32	s15, s2, s15
 80143ca:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80143ce:	ee77 2a62 	vsub.f32	s5, s14, s5
 80143d2:	edcd 6a0f 	vstr	s13, [sp, #60]	@ 0x3c
 80143d6:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80143da:	eef0 6a43 	vmov.f32	s13, s6
 80143de:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80143e2:	ee12 2a90 	vmov	r2, s5
 80143e6:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80143ea:	fb92 f3f3 	sdiv	r3, r2, r3
 80143ee:	ee13 2a10 	vmov	r2, s6
 80143f2:	9311      	str	r3, [sp, #68]	@ 0x44
 80143f4:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 80143f6:	fb92 f3f3 	sdiv	r3, r2, r3
 80143fa:	9312      	str	r3, [sp, #72]	@ 0x48
 80143fc:	9b00      	ldr	r3, [sp, #0]
 80143fe:	9a03      	ldr	r2, [sp, #12]
 8014400:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8014404:	3b01      	subs	r3, #1
 8014406:	9300      	str	r3, [sp, #0]
 8014408:	edcd 6a10 	vstr	s13, [sp, #64]	@ 0x40
 801440c:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801440e:	eeb0 3a67 	vmov.f32	s6, s15
 8014412:	bf08      	it	eq
 8014414:	4613      	moveq	r3, r2
 8014416:	eef0 2a47 	vmov.f32	s5, s14
 801441a:	e72f      	b.n	801427c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 801441c:	140f      	asrs	r7, r1, #16
 801441e:	d451      	bmi.n	80144c4 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 8014420:	f8de 5008 	ldr.w	r5, [lr, #8]
 8014424:	42bd      	cmp	r5, r7
 8014426:	dd4d      	ble.n	80144c4 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 8014428:	ea5f 4c22 	movs.w	ip, r2, asr #16
 801442c:	d44a      	bmi.n	80144c4 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 801442e:	f8de 000c 	ldr.w	r0, [lr, #12]
 8014432:	4560      	cmp	r0, ip
 8014434:	dd46      	ble.n	80144c4 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 8014436:	b22d      	sxth	r5, r5
 8014438:	fb0c 7505 	mla	r5, ip, r5, r7
 801443c:	9802      	ldr	r0, [sp, #8]
 801443e:	f830 0015 	ldrh.w	r0, [r0, r5, lsl #1]
 8014442:	f06f 0501 	mvn.w	r5, #1
 8014446:	fb05 fb08 	mul.w	fp, r5, r8
 801444a:	ea4f 2c20 	mov.w	ip, r0, asr #8
 801444e:	f834 500b 	ldrh.w	r5, [r4, fp]
 8014452:	122f      	asrs	r7, r5, #8
 8014454:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 8014458:	fb17 f706 	smulbb	r7, r7, r6
 801445c:	ea4f 09e5 	mov.w	r9, r5, asr #3
 8014460:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 8014464:	00ed      	lsls	r5, r5, #3
 8014466:	fb0c 7c0a 	mla	ip, ip, sl, r7
 801446a:	f009 09fc 	and.w	r9, r9, #252	@ 0xfc
 801446e:	10c7      	asrs	r7, r0, #3
 8014470:	b2ed      	uxtb	r5, r5
 8014472:	00c0      	lsls	r0, r0, #3
 8014474:	fb19 f906 	smulbb	r9, r9, r6
 8014478:	fb15 f506 	smulbb	r5, r5, r6
 801447c:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 8014480:	b2c0      	uxtb	r0, r0
 8014482:	fa1f fc8c 	uxth.w	ip, ip
 8014486:	fb07 970a 	mla	r7, r7, sl, r9
 801448a:	fb00 500a 	mla	r0, r0, sl, r5
 801448e:	b2bf      	uxth	r7, r7
 8014490:	b280      	uxth	r0, r0
 8014492:	f10c 0501 	add.w	r5, ip, #1
 8014496:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801449a:	f107 0901 	add.w	r9, r7, #1
 801449e:	1c45      	adds	r5, r0, #1
 80144a0:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 80144a4:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 80144a8:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 80144ac:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 80144b0:	ea4f 1959 	mov.w	r9, r9, lsr #5
 80144b4:	ea45 0c0c 	orr.w	ip, r5, ip
 80144b8:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 80144bc:	ea4c 0c09 	orr.w	ip, ip, r9
 80144c0:	f824 c00b 	strh.w	ip, [r4, fp]
 80144c4:	9811      	ldr	r0, [sp, #68]	@ 0x44
 80144c6:	4401      	add	r1, r0
 80144c8:	9812      	ldr	r0, [sp, #72]	@ 0x48
 80144ca:	f108 38ff 	add.w	r8, r8, #4294967295
 80144ce:	4402      	add	r2, r0
 80144d0:	e75e      	b.n	8014390 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x146>
 80144d2:	b005      	add	sp, #20
 80144d4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080144d8 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80144d8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80144dc:	b085      	sub	sp, #20
 80144de:	4693      	mov	fp, r2
 80144e0:	9e13      	ldr	r6, [sp, #76]	@ 0x4c
 80144e2:	9d16      	ldr	r5, [sp, #88]	@ 0x58
 80144e4:	6870      	ldr	r0, [r6, #4]
 80144e6:	9101      	str	r1, [sp, #4]
 80144e8:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	@ 0x50
 80144ec:	fb00 2404 	mla	r4, r0, r4, r2
 80144f0:	6832      	ldr	r2, [r6, #0]
 80144f2:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	@ 0x44
 80144f6:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 80144fa:	682a      	ldr	r2, [r5, #0]
 80144fc:	9202      	str	r2, [sp, #8]
 80144fe:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8014502:	9a01      	ldr	r2, [sp, #4]
 8014504:	2a00      	cmp	r2, #0
 8014506:	dc03      	bgt.n	8014510 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 8014508:	f1bb 0f00 	cmp.w	fp, #0
 801450c:	f340 809a 	ble.w	8014644 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
 8014510:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 8014512:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 8014516:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 801451a:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
 801451e:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 8014520:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 8014524:	2b00      	cmp	r3, #0
 8014526:	dd0c      	ble.n	8014542 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6a>
 8014528:	1406      	asrs	r6, r0, #16
 801452a:	d405      	bmi.n	8014538 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801452c:	454e      	cmp	r6, r9
 801452e:	da03      	bge.n	8014538 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8014530:	1416      	asrs	r6, r2, #16
 8014532:	d401      	bmi.n	8014538 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8014534:	4546      	cmp	r6, r8
 8014536:	db05      	blt.n	8014544 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8014538:	4470      	add	r0, lr
 801453a:	4462      	add	r2, ip
 801453c:	3b01      	subs	r3, #1
 801453e:	3402      	adds	r4, #2
 8014540:	e7f0      	b.n	8014524 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 8014542:	d00f      	beq.n	8014564 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 8014544:	1e5e      	subs	r6, r3, #1
 8014546:	fb0e 0706 	mla	r7, lr, r6, r0
 801454a:	143f      	asrs	r7, r7, #16
 801454c:	d541      	bpl.n	80145d2 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfa>
 801454e:	eb04 0643 	add.w	r6, r4, r3, lsl #1
 8014552:	4698      	mov	r8, r3
 8014554:	9603      	str	r6, [sp, #12]
 8014556:	f1b8 0f00 	cmp.w	r8, #0
 801455a:	dc56      	bgt.n	801460a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x132>
 801455c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8014560:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8014564:	9b01      	ldr	r3, [sp, #4]
 8014566:	2b00      	cmp	r3, #0
 8014568:	dd6c      	ble.n	8014644 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
 801456a:	ee30 0a04 	vadd.f32	s0, s0, s8
 801456e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8014572:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8014576:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8014578:	ee31 1a05 	vadd.f32	s2, s2, s10
 801457c:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8014580:	eeb0 6a62 	vmov.f32	s12, s5
 8014584:	ee61 7a27 	vmul.f32	s15, s2, s15
 8014588:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801458c:	ee77 2a62 	vsub.f32	s5, s14, s5
 8014590:	ed8d 6a0f 	vstr	s12, [sp, #60]	@ 0x3c
 8014594:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8014598:	eeb0 6a43 	vmov.f32	s12, s6
 801459c:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80145a0:	ee12 2a90 	vmov	r2, s5
 80145a4:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80145a8:	fb92 fef3 	sdiv	lr, r2, r3
 80145ac:	ee13 2a10 	vmov	r2, s6
 80145b0:	fb92 fcf3 	sdiv	ip, r2, r3
 80145b4:	9b01      	ldr	r3, [sp, #4]
 80145b6:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80145ba:	3b01      	subs	r3, #1
 80145bc:	9301      	str	r3, [sp, #4]
 80145be:	ed8d 6a10 	vstr	s12, [sp, #64]	@ 0x40
 80145c2:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 80145c4:	eeb0 3a67 	vmov.f32	s6, s15
 80145c8:	bf08      	it	eq
 80145ca:	465b      	moveq	r3, fp
 80145cc:	eef0 2a47 	vmov.f32	s5, s14
 80145d0:	e797      	b.n	8014502 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 80145d2:	454f      	cmp	r7, r9
 80145d4:	dabb      	bge.n	801454e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 80145d6:	fb0c 2606 	mla	r6, ip, r6, r2
 80145da:	1436      	asrs	r6, r6, #16
 80145dc:	d4b7      	bmi.n	801454e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 80145de:	4546      	cmp	r6, r8
 80145e0:	dab5      	bge.n	801454e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 80145e2:	461e      	mov	r6, r3
 80145e4:	46a0      	mov	r8, r4
 80145e6:	2e00      	cmp	r6, #0
 80145e8:	ddb8      	ble.n	801455c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 80145ea:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
 80145ee:	9902      	ldr	r1, [sp, #8]
 80145f0:	1417      	asrs	r7, r2, #16
 80145f2:	ea4f 4920 	mov.w	r9, r0, asr #16
 80145f6:	fb0a 9707 	mla	r7, sl, r7, r9
 80145fa:	4470      	add	r0, lr
 80145fc:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
 8014600:	f828 7b02 	strh.w	r7, [r8], #2
 8014604:	4462      	add	r2, ip
 8014606:	3e01      	subs	r6, #1
 8014608:	e7ed      	b.n	80145e6 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10e>
 801460a:	ea5f 4920 	movs.w	r9, r0, asr #16
 801460e:	d414      	bmi.n	801463a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 8014610:	68ae      	ldr	r6, [r5, #8]
 8014612:	454e      	cmp	r6, r9
 8014614:	dd11      	ble.n	801463a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 8014616:	ea5f 4a22 	movs.w	sl, r2, asr #16
 801461a:	d40e      	bmi.n	801463a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 801461c:	68ef      	ldr	r7, [r5, #12]
 801461e:	4557      	cmp	r7, sl
 8014620:	dd0b      	ble.n	801463a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 8014622:	b236      	sxth	r6, r6
 8014624:	fb0a 9606 	mla	r6, sl, r6, r9
 8014628:	9f02      	ldr	r7, [sp, #8]
 801462a:	f06f 0101 	mvn.w	r1, #1
 801462e:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
 8014632:	fb01 f608 	mul.w	r6, r1, r8
 8014636:	9903      	ldr	r1, [sp, #12]
 8014638:	538f      	strh	r7, [r1, r6]
 801463a:	4470      	add	r0, lr
 801463c:	4462      	add	r2, ip
 801463e:	f108 38ff 	add.w	r8, r8, #4294967295
 8014642:	e788      	b.n	8014556 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8014644:	b005      	add	sp, #20
 8014646:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801464a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801464a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801464e:	b087      	sub	sp, #28
 8014650:	468b      	mov	fp, r1
 8014652:	9815      	ldr	r0, [sp, #84]	@ 0x54
 8014654:	9203      	str	r2, [sp, #12]
 8014656:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 801465a:	9204      	str	r2, [sp, #16]
 801465c:	e9dd 2516 	ldrd	r2, r5, [sp, #88]	@ 0x58
 8014660:	6841      	ldr	r1, [r0, #4]
 8014662:	f8dd 9060 	ldr.w	r9, [sp, #96]	@ 0x60
 8014666:	fb01 2505 	mla	r5, r1, r5, r2
 801466a:	6802      	ldr	r2, [r0, #0]
 801466c:	eb02 0545 	add.w	r5, r2, r5, lsl #1
 8014670:	f8d9 2000 	ldr.w	r2, [r9]
 8014674:	9201      	str	r2, [sp, #4]
 8014676:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 801467a:	f1bb 0f00 	cmp.w	fp, #0
 801467e:	dc03      	bgt.n	8014688 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 8014680:	9a03      	ldr	r2, [sp, #12]
 8014682:	2a00      	cmp	r2, #0
 8014684:	f340 8159 	ble.w	801493a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 8014688:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 801468a:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
 801468e:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
 8014692:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
 8014696:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 8014698:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 801469c:	2b00      	cmp	r3, #0
 801469e:	dd0e      	ble.n	80146be <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 80146a0:	1402      	asrs	r2, r0, #16
 80146a2:	d405      	bmi.n	80146b0 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 80146a4:	42ba      	cmp	r2, r7
 80146a6:	da03      	bge.n	80146b0 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 80146a8:	140a      	asrs	r2, r1, #16
 80146aa:	d401      	bmi.n	80146b0 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 80146ac:	42b2      	cmp	r2, r6
 80146ae:	db07      	blt.n	80146c0 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 80146b0:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 80146b2:	4410      	add	r0, r2
 80146b4:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 80146b6:	3b01      	subs	r3, #1
 80146b8:	4411      	add	r1, r2
 80146ba:	3502      	adds	r5, #2
 80146bc:	e7ee      	b.n	801469c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 80146be:	d017      	beq.n	80146f0 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 80146c0:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 80146c2:	1e5a      	subs	r2, r3, #1
 80146c4:	fb04 0402 	mla	r4, r4, r2, r0
 80146c8:	1424      	asrs	r4, r4, #16
 80146ca:	d409      	bmi.n	80146e0 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 80146cc:	42bc      	cmp	r4, r7
 80146ce:	da07      	bge.n	80146e0 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 80146d0:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 80146d2:	fb04 1202 	mla	r2, r4, r2, r1
 80146d6:	1412      	asrs	r2, r2, #16
 80146d8:	d402      	bmi.n	80146e0 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 80146da:	42b2      	cmp	r2, r6
 80146dc:	f2c0 80bf 	blt.w	801485e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 80146e0:	2700      	movs	r7, #0
 80146e2:	19da      	adds	r2, r3, r7
 80146e4:	2a00      	cmp	r2, #0
 80146e6:	dc3e      	bgt.n	8014766 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 80146e8:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80146ec:	eb05 0543 	add.w	r5, r5, r3, lsl #1
 80146f0:	f1bb 0f00 	cmp.w	fp, #0
 80146f4:	f340 8121 	ble.w	801493a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 80146f8:	ee30 0a04 	vadd.f32	s0, s0, s8
 80146fc:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8014700:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8014704:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8014706:	f1bb 0b01 	subs.w	fp, fp, #1
 801470a:	ee31 1a05 	vadd.f32	s2, s2, s10
 801470e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8014712:	eeb0 6a62 	vmov.f32	s12, s5
 8014716:	ee61 7a27 	vmul.f32	s15, s2, s15
 801471a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801471e:	ee77 2a62 	vsub.f32	s5, s14, s5
 8014722:	ed8d 6a11 	vstr	s12, [sp, #68]	@ 0x44
 8014726:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801472a:	eeb0 6a43 	vmov.f32	s12, s6
 801472e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8014732:	ee12 2a90 	vmov	r2, s5
 8014736:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801473a:	fb92 f3f3 	sdiv	r3, r2, r3
 801473e:	ee13 2a10 	vmov	r2, s6
 8014742:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8014746:	9313      	str	r3, [sp, #76]	@ 0x4c
 8014748:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801474a:	fb92 f3f3 	sdiv	r3, r2, r3
 801474e:	9a03      	ldr	r2, [sp, #12]
 8014750:	9314      	str	r3, [sp, #80]	@ 0x50
 8014752:	ed8d 6a12 	vstr	s12, [sp, #72]	@ 0x48
 8014756:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8014758:	eeb0 3a67 	vmov.f32	s6, s15
 801475c:	bf08      	it	eq
 801475e:	4613      	moveq	r3, r2
 8014760:	eef0 2a47 	vmov.f32	s5, s14
 8014764:	e789      	b.n	801467a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 8014766:	1406      	asrs	r6, r0, #16
 8014768:	d42d      	bmi.n	80147c6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801476a:	f8d9 4008 	ldr.w	r4, [r9, #8]
 801476e:	42b4      	cmp	r4, r6
 8014770:	dd29      	ble.n	80147c6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8014772:	ea5f 4c21 	movs.w	ip, r1, asr #16
 8014776:	d426      	bmi.n	80147c6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8014778:	f8d9 200c 	ldr.w	r2, [r9, #12]
 801477c:	4562      	cmp	r2, ip
 801477e:	dd22      	ble.n	80147c6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8014780:	b224      	sxth	r4, r4
 8014782:	9a01      	ldr	r2, [sp, #4]
 8014784:	fb0c 6404 	mla	r4, ip, r4, r6
 8014788:	f852 4024 	ldr.w	r4, [r2, r4, lsl #2]
 801478c:	0e22      	lsrs	r2, r4, #24
 801478e:	d01a      	beq.n	80147c6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8014790:	9e04      	ldr	r6, [sp, #16]
 8014792:	4372      	muls	r2, r6
 8014794:	1c56      	adds	r6, r2, #1
 8014796:	eb06 2222 	add.w	r2, r6, r2, asr #8
 801479a:	1212      	asrs	r2, r2, #8
 801479c:	0a26      	lsrs	r6, r4, #8
 801479e:	2aff      	cmp	r2, #255	@ 0xff
 80147a0:	9605      	str	r6, [sp, #20]
 80147a2:	d116      	bne.n	80147d2 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x188>
 80147a4:	f06f 0201 	mvn.w	r2, #1
 80147a8:	fb02 fc07 	mul.w	ip, r2, r7
 80147ac:	f426 66ff 	bic.w	r6, r6, #2040	@ 0x7f8
 80147b0:	0962      	lsrs	r2, r4, #5
 80147b2:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 80147b6:	f026 0607 	bic.w	r6, r6, #7
 80147ba:	4316      	orrs	r6, r2
 80147bc:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 80147c0:	4326      	orrs	r6, r4
 80147c2:	f825 600c 	strh.w	r6, [r5, ip]
 80147c6:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 80147c8:	4410      	add	r0, r2
 80147ca:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 80147cc:	3f01      	subs	r7, #1
 80147ce:	4411      	add	r1, r2
 80147d0:	e787      	b.n	80146e2 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 80147d2:	f06f 0601 	mvn.w	r6, #1
 80147d6:	437e      	muls	r6, r7
 80147d8:	fa1f fa82 	uxth.w	sl, r2
 80147dc:	f835 8006 	ldrh.w	r8, [r5, r6]
 80147e0:	9602      	str	r6, [sp, #8]
 80147e2:	ea4f 2e28 	mov.w	lr, r8, asr #8
 80147e6:	f3c4 4c07 	ubfx	ip, r4, #16, #8
 80147ea:	43d2      	mvns	r2, r2
 80147ec:	b2d2      	uxtb	r2, r2
 80147ee:	fb1c fc0a 	smulbb	ip, ip, sl
 80147f2:	f00e 0ef8 	and.w	lr, lr, #248	@ 0xf8
 80147f6:	fb0e ce02 	mla	lr, lr, r2, ip
 80147fa:	b2e4      	uxtb	r4, r4
 80147fc:	ea4f 0ce8 	mov.w	ip, r8, asr #3
 8014800:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 8014804:	f89d 6014 	ldrb.w	r6, [sp, #20]
 8014808:	fa5f f888 	uxtb.w	r8, r8
 801480c:	fb14 f40a 	smulbb	r4, r4, sl
 8014810:	fb08 4402 	mla	r4, r8, r2, r4
 8014814:	fa1f fe8e 	uxth.w	lr, lr
 8014818:	fb16 f60a 	smulbb	r6, r6, sl
 801481c:	b2a4      	uxth	r4, r4
 801481e:	f00c 0cfc 	and.w	ip, ip, #252	@ 0xfc
 8014822:	fb0c 6c02 	mla	ip, ip, r2, r6
 8014826:	f10e 0201 	add.w	r2, lr, #1
 801482a:	1c66      	adds	r6, r4, #1
 801482c:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
 8014830:	eb06 2614 	add.w	r6, r6, r4, lsr #8
 8014834:	fa1f fc8c 	uxth.w	ip, ip
 8014838:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 801483c:	f40e 4e78 	and.w	lr, lr, #63488	@ 0xf800
 8014840:	ea46 0e0e 	orr.w	lr, r6, lr
 8014844:	f10c 0601 	add.w	r6, ip, #1
 8014848:	eb06 261c 	add.w	r6, r6, ip, lsr #8
 801484c:	0976      	lsrs	r6, r6, #5
 801484e:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
 8014852:	9a02      	ldr	r2, [sp, #8]
 8014854:	ea4e 0e06 	orr.w	lr, lr, r6
 8014858:	f825 e002 	strh.w	lr, [r5, r2]
 801485c:	e7b3      	b.n	80147c6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801485e:	f04f 0800 	mov.w	r8, #0
 8014862:	eba3 0208 	sub.w	r2, r3, r8
 8014866:	2a00      	cmp	r2, #0
 8014868:	f77f af3e 	ble.w	80146e8 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801486c:	f9b9 6008 	ldrsh.w	r6, [r9, #8]
 8014870:	1404      	asrs	r4, r0, #16
 8014872:	140a      	asrs	r2, r1, #16
 8014874:	fb06 4202 	mla	r2, r6, r2, r4
 8014878:	9c01      	ldr	r4, [sp, #4]
 801487a:	f854 4022 	ldr.w	r4, [r4, r2, lsl #2]
 801487e:	0e22      	lsrs	r2, r4, #24
 8014880:	d016      	beq.n	80148b0 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x266>
 8014882:	9e04      	ldr	r6, [sp, #16]
 8014884:	4372      	muls	r2, r6
 8014886:	1c56      	adds	r6, r2, #1
 8014888:	eb06 2222 	add.w	r2, r6, r2, asr #8
 801488c:	1212      	asrs	r2, r2, #8
 801488e:	2aff      	cmp	r2, #255	@ 0xff
 8014890:	ea4f 2614 	mov.w	r6, r4, lsr #8
 8014894:	d113      	bne.n	80148be <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x274>
 8014896:	0962      	lsrs	r2, r4, #5
 8014898:	f426 66ff 	bic.w	r6, r6, #2040	@ 0x7f8
 801489c:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 80148a0:	f026 0607 	bic.w	r6, r6, #7
 80148a4:	4316      	orrs	r6, r2
 80148a6:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 80148aa:	4326      	orrs	r6, r4
 80148ac:	f825 6018 	strh.w	r6, [r5, r8, lsl #1]
 80148b0:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 80148b2:	4410      	add	r0, r2
 80148b4:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 80148b6:	f108 0801 	add.w	r8, r8, #1
 80148ba:	4411      	add	r1, r2
 80148bc:	e7d1      	b.n	8014862 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x218>
 80148be:	f835 e018 	ldrh.w	lr, [r5, r8, lsl #1]
 80148c2:	fa1f fa82 	uxth.w	sl, r2
 80148c6:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 80148ca:	f3c4 4707 	ubfx	r7, r4, #16, #8
 80148ce:	43d2      	mvns	r2, r2
 80148d0:	b2d2      	uxtb	r2, r2
 80148d2:	fb17 f70a 	smulbb	r7, r7, sl
 80148d6:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 80148da:	fb0c 7c02 	mla	ip, ip, r2, r7
 80148de:	b2e4      	uxtb	r4, r4
 80148e0:	ea4f 07ee 	mov.w	r7, lr, asr #3
 80148e4:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 80148e8:	fa5f fe8e 	uxtb.w	lr, lr
 80148ec:	fb14 f40a 	smulbb	r4, r4, sl
 80148f0:	fb0e 4402 	mla	r4, lr, r2, r4
 80148f4:	b2f6      	uxtb	r6, r6
 80148f6:	fa1f fc8c 	uxth.w	ip, ip
 80148fa:	fb16 f60a 	smulbb	r6, r6, sl
 80148fe:	b2a4      	uxth	r4, r4
 8014900:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 8014904:	fb07 6702 	mla	r7, r7, r2, r6
 8014908:	f10c 0201 	add.w	r2, ip, #1
 801490c:	1c66      	adds	r6, r4, #1
 801490e:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 8014912:	eb06 2614 	add.w	r6, r6, r4, lsr #8
 8014916:	b2bf      	uxth	r7, r7
 8014918:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 801491c:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 8014920:	ea46 0c0c 	orr.w	ip, r6, ip
 8014924:	1c7e      	adds	r6, r7, #1
 8014926:	eb06 2617 	add.w	r6, r6, r7, lsr #8
 801492a:	0976      	lsrs	r6, r6, #5
 801492c:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
 8014930:	ea4c 0c06 	orr.w	ip, ip, r6
 8014934:	f825 c018 	strh.w	ip, [r5, r8, lsl #1]
 8014938:	e7ba      	b.n	80148b0 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x266>
 801493a:	b007      	add	sp, #28
 801493c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08014940 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8014940:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014944:	b085      	sub	sp, #20
 8014946:	468b      	mov	fp, r1
 8014948:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 801494a:	9203      	str	r2, [sp, #12]
 801494c:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	@ 0x50
 8014950:	6841      	ldr	r1, [r0, #4]
 8014952:	f8dd 8058 	ldr.w	r8, [sp, #88]	@ 0x58
 8014956:	fb01 2404 	mla	r4, r1, r4, r2
 801495a:	6802      	ldr	r2, [r0, #0]
 801495c:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8014960:	f8d8 2000 	ldr.w	r2, [r8]
 8014964:	9201      	str	r2, [sp, #4]
 8014966:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 801496a:	f1bb 0f00 	cmp.w	fp, #0
 801496e:	dc03      	bgt.n	8014978 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 8014970:	9a03      	ldr	r2, [sp, #12]
 8014972:	2a00      	cmp	r2, #0
 8014974:	f340 814f 	ble.w	8014c16 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
 8014978:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 801497a:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
 801497e:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
 8014982:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 8014986:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 8014988:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 801498c:	2b00      	cmp	r3, #0
 801498e:	dd0e      	ble.n	80149ae <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8014990:	1408      	asrs	r0, r1, #16
 8014992:	d405      	bmi.n	80149a0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8014994:	42b8      	cmp	r0, r7
 8014996:	da03      	bge.n	80149a0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8014998:	1410      	asrs	r0, r2, #16
 801499a:	d401      	bmi.n	80149a0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801499c:	42b0      	cmp	r0, r6
 801499e:	db07      	blt.n	80149b0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 80149a0:	9811      	ldr	r0, [sp, #68]	@ 0x44
 80149a2:	4401      	add	r1, r0
 80149a4:	9812      	ldr	r0, [sp, #72]	@ 0x48
 80149a6:	3b01      	subs	r3, #1
 80149a8:	4402      	add	r2, r0
 80149aa:	3402      	adds	r4, #2
 80149ac:	e7ee      	b.n	801498c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 80149ae:	d017      	beq.n	80149e0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 80149b0:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 80149b2:	1e58      	subs	r0, r3, #1
 80149b4:	fb05 1500 	mla	r5, r5, r0, r1
 80149b8:	142d      	asrs	r5, r5, #16
 80149ba:	d409      	bmi.n	80149d0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 80149bc:	42bd      	cmp	r5, r7
 80149be:	da07      	bge.n	80149d0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 80149c0:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 80149c2:	fb05 2000 	mla	r0, r5, r0, r2
 80149c6:	1400      	asrs	r0, r0, #16
 80149c8:	d402      	bmi.n	80149d0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 80149ca:	42b0      	cmp	r0, r6
 80149cc:	f2c0 80ba 	blt.w	8014b44 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 80149d0:	2600      	movs	r6, #0
 80149d2:	1998      	adds	r0, r3, r6
 80149d4:	2800      	cmp	r0, #0
 80149d6:	dc3e      	bgt.n	8014a56 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 80149d8:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80149dc:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80149e0:	f1bb 0f00 	cmp.w	fp, #0
 80149e4:	f340 8117 	ble.w	8014c16 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
 80149e8:	ee30 0a04 	vadd.f32	s0, s0, s8
 80149ec:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80149f0:	eec6 7a80 	vdiv.f32	s15, s13, s0
 80149f4:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 80149f6:	f1bb 0b01 	subs.w	fp, fp, #1
 80149fa:	ee31 1a05 	vadd.f32	s2, s2, s10
 80149fe:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8014a02:	eeb0 6a62 	vmov.f32	s12, s5
 8014a06:	ee61 7a27 	vmul.f32	s15, s2, s15
 8014a0a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8014a0e:	ee77 2a62 	vsub.f32	s5, s14, s5
 8014a12:	ed8d 6a0f 	vstr	s12, [sp, #60]	@ 0x3c
 8014a16:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8014a1a:	eeb0 6a43 	vmov.f32	s12, s6
 8014a1e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8014a22:	ee12 2a90 	vmov	r2, s5
 8014a26:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8014a2a:	fb92 f3f3 	sdiv	r3, r2, r3
 8014a2e:	ee13 2a10 	vmov	r2, s6
 8014a32:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8014a36:	9311      	str	r3, [sp, #68]	@ 0x44
 8014a38:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8014a3a:	fb92 f3f3 	sdiv	r3, r2, r3
 8014a3e:	9a03      	ldr	r2, [sp, #12]
 8014a40:	9312      	str	r3, [sp, #72]	@ 0x48
 8014a42:	ed8d 6a10 	vstr	s12, [sp, #64]	@ 0x40
 8014a46:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8014a48:	eeb0 3a67 	vmov.f32	s6, s15
 8014a4c:	bf08      	it	eq
 8014a4e:	4613      	moveq	r3, r2
 8014a50:	eef0 2a47 	vmov.f32	s5, s14
 8014a54:	e789      	b.n	801496a <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 8014a56:	140f      	asrs	r7, r1, #16
 8014a58:	d424      	bmi.n	8014aa4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8014a5a:	f8d8 5008 	ldr.w	r5, [r8, #8]
 8014a5e:	42bd      	cmp	r5, r7
 8014a60:	dd20      	ble.n	8014aa4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8014a62:	ea5f 4c22 	movs.w	ip, r2, asr #16
 8014a66:	d41d      	bmi.n	8014aa4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8014a68:	f8d8 000c 	ldr.w	r0, [r8, #12]
 8014a6c:	4560      	cmp	r0, ip
 8014a6e:	dd19      	ble.n	8014aa4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8014a70:	b22d      	sxth	r5, r5
 8014a72:	fb0c 7505 	mla	r5, ip, r5, r7
 8014a76:	9801      	ldr	r0, [sp, #4]
 8014a78:	f850 0025 	ldr.w	r0, [r0, r5, lsl #2]
 8014a7c:	0e07      	lsrs	r7, r0, #24
 8014a7e:	2fff      	cmp	r7, #255	@ 0xff
 8014a80:	d116      	bne.n	8014ab0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8014a82:	f06f 0501 	mvn.w	r5, #1
 8014a86:	fb05 f706 	mul.w	r7, r5, r6
 8014a8a:	f2a5 75fe 	subw	r5, r5, #2046	@ 0x7fe
 8014a8e:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
 8014a92:	0945      	lsrs	r5, r0, #5
 8014a94:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 8014a98:	ea4c 0505 	orr.w	r5, ip, r5
 8014a9c:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 8014aa0:	4305      	orrs	r5, r0
 8014aa2:	53e5      	strh	r5, [r4, r7]
 8014aa4:	9811      	ldr	r0, [sp, #68]	@ 0x44
 8014aa6:	4401      	add	r1, r0
 8014aa8:	9812      	ldr	r0, [sp, #72]	@ 0x48
 8014aaa:	3e01      	subs	r6, #1
 8014aac:	4402      	add	r2, r0
 8014aae:	e790      	b.n	80149d2 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8014ab0:	b2fd      	uxtb	r5, r7
 8014ab2:	2f00      	cmp	r7, #0
 8014ab4:	d0f6      	beq.n	8014aa4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8014ab6:	f06f 0701 	mvn.w	r7, #1
 8014aba:	4377      	muls	r7, r6
 8014abc:	fa1f f985 	uxth.w	r9, r5
 8014ac0:	f834 e007 	ldrh.w	lr, [r4, r7]
 8014ac4:	9702      	str	r7, [sp, #8]
 8014ac6:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 8014aca:	f3c0 4707 	ubfx	r7, r0, #16, #8
 8014ace:	43ed      	mvns	r5, r5
 8014ad0:	b2ed      	uxtb	r5, r5
 8014ad2:	fb17 f709 	smulbb	r7, r7, r9
 8014ad6:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 8014ada:	fb0c 7c05 	mla	ip, ip, r5, r7
 8014ade:	f3c0 2a07 	ubfx	sl, r0, #8, #8
 8014ae2:	ea4f 07ee 	mov.w	r7, lr, asr #3
 8014ae6:	b2c0      	uxtb	r0, r0
 8014ae8:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8014aec:	fa5f fe8e 	uxtb.w	lr, lr
 8014af0:	fb10 f009 	smulbb	r0, r0, r9
 8014af4:	fb0e 0005 	mla	r0, lr, r5, r0
 8014af8:	b280      	uxth	r0, r0
 8014afa:	fa1f fc8c 	uxth.w	ip, ip
 8014afe:	fb1a fa09 	smulbb	sl, sl, r9
 8014b02:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 8014b06:	fb07 a705 	mla	r7, r7, r5, sl
 8014b0a:	f100 0a01 	add.w	sl, r0, #1
 8014b0e:	f10c 0501 	add.w	r5, ip, #1
 8014b12:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
 8014b16:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8014b1a:	b2bf      	uxth	r7, r7
 8014b1c:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8014b20:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 8014b24:	ea4a 0c0c 	orr.w	ip, sl, ip
 8014b28:	f107 0a01 	add.w	sl, r7, #1
 8014b2c:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 8014b30:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8014b34:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 8014b38:	9802      	ldr	r0, [sp, #8]
 8014b3a:	ea4c 0c0a 	orr.w	ip, ip, sl
 8014b3e:	f824 c000 	strh.w	ip, [r4, r0]
 8014b42:	e7af      	b.n	8014aa4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8014b44:	f04f 0e00 	mov.w	lr, #0
 8014b48:	eba3 000e 	sub.w	r0, r3, lr
 8014b4c:	2800      	cmp	r0, #0
 8014b4e:	f77f af43 	ble.w	80149d8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8014b52:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
 8014b56:	140d      	asrs	r5, r1, #16
 8014b58:	1410      	asrs	r0, r2, #16
 8014b5a:	fb06 5000 	mla	r0, r6, r0, r5
 8014b5e:	9d01      	ldr	r5, [sp, #4]
 8014b60:	f855 5020 	ldr.w	r5, [r5, r0, lsl #2]
 8014b64:	0e2e      	lsrs	r6, r5, #24
 8014b66:	2eff      	cmp	r6, #255	@ 0xff
 8014b68:	d112      	bne.n	8014b90 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x250>
 8014b6a:	482c      	ldr	r0, [pc, #176]	@ (8014c1c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2dc>)
 8014b6c:	ea00 2615 	and.w	r6, r0, r5, lsr #8
 8014b70:	0968      	lsrs	r0, r5, #5
 8014b72:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8014b76:	4330      	orrs	r0, r6
 8014b78:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 8014b7c:	4328      	orrs	r0, r5
 8014b7e:	f824 001e 	strh.w	r0, [r4, lr, lsl #1]
 8014b82:	9811      	ldr	r0, [sp, #68]	@ 0x44
 8014b84:	4401      	add	r1, r0
 8014b86:	9812      	ldr	r0, [sp, #72]	@ 0x48
 8014b88:	f10e 0e01 	add.w	lr, lr, #1
 8014b8c:	4402      	add	r2, r0
 8014b8e:	e7db      	b.n	8014b48 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x208>
 8014b90:	b2f0      	uxtb	r0, r6
 8014b92:	2e00      	cmp	r6, #0
 8014b94:	d0f5      	beq.n	8014b82 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 8014b96:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
 8014b9a:	fa1f f980 	uxth.w	r9, r0
 8014b9e:	ea4f 272c 	mov.w	r7, ip, asr #8
 8014ba2:	f3c5 4607 	ubfx	r6, r5, #16, #8
 8014ba6:	43c0      	mvns	r0, r0
 8014ba8:	b2c0      	uxtb	r0, r0
 8014baa:	fb16 f609 	smulbb	r6, r6, r9
 8014bae:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 8014bb2:	fb07 6700 	mla	r7, r7, r0, r6
 8014bb6:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 8014bba:	ea4f 06ec 	mov.w	r6, ip, asr #3
 8014bbe:	b2ed      	uxtb	r5, r5
 8014bc0:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8014bc4:	fa5f fc8c 	uxtb.w	ip, ip
 8014bc8:	fb15 f509 	smulbb	r5, r5, r9
 8014bcc:	fb0c 5500 	mla	r5, ip, r0, r5
 8014bd0:	b2bf      	uxth	r7, r7
 8014bd2:	fb1a fa09 	smulbb	sl, sl, r9
 8014bd6:	b2ad      	uxth	r5, r5
 8014bd8:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 8014bdc:	fb06 a600 	mla	r6, r6, r0, sl
 8014be0:	1c78      	adds	r0, r7, #1
 8014be2:	f105 0a01 	add.w	sl, r5, #1
 8014be6:	eb00 2717 	add.w	r7, r0, r7, lsr #8
 8014bea:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8014bee:	b2b6      	uxth	r6, r6
 8014bf0:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8014bf4:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 8014bf8:	ea4a 0707 	orr.w	r7, sl, r7
 8014bfc:	f106 0a01 	add.w	sl, r6, #1
 8014c00:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8014c04:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8014c08:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 8014c0c:	ea47 070a 	orr.w	r7, r7, sl
 8014c10:	f824 701e 	strh.w	r7, [r4, lr, lsl #1]
 8014c14:	e7b5      	b.n	8014b82 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 8014c16:	b005      	add	sp, #20
 8014c18:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8014c1c:	fffff800 	.word	0xfffff800

08014c20 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8014c20:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014c24:	b087      	sub	sp, #28
 8014c26:	468b      	mov	fp, r1
 8014c28:	9815      	ldr	r0, [sp, #84]	@ 0x54
 8014c2a:	9203      	str	r2, [sp, #12]
 8014c2c:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 8014c30:	9204      	str	r2, [sp, #16]
 8014c32:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	@ 0x58
 8014c36:	6841      	ldr	r1, [r0, #4]
 8014c38:	f8dd 9060 	ldr.w	r9, [sp, #96]	@ 0x60
 8014c3c:	fb01 2404 	mla	r4, r1, r4, r2
 8014c40:	6802      	ldr	r2, [r0, #0]
 8014c42:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8014c46:	f8d9 2008 	ldr.w	r2, [r9, #8]
 8014c4a:	3201      	adds	r2, #1
 8014c4c:	f022 0201 	bic.w	r2, r2, #1
 8014c50:	9200      	str	r2, [sp, #0]
 8014c52:	f8d9 2000 	ldr.w	r2, [r9]
 8014c56:	9201      	str	r2, [sp, #4]
 8014c58:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8014c5c:	f1bb 0f00 	cmp.w	fp, #0
 8014c60:	dc03      	bgt.n	8014c6a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 8014c62:	9a03      	ldr	r2, [sp, #12]
 8014c64:	2a00      	cmp	r2, #0
 8014c66:	f340 8169 	ble.w	8014f3c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 8014c6a:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 8014c6c:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
 8014c70:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
 8014c74:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
 8014c78:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 8014c7a:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 8014c7e:	2b00      	cmp	r3, #0
 8014c80:	dd0e      	ble.n	8014ca0 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 8014c82:	1402      	asrs	r2, r0, #16
 8014c84:	d405      	bmi.n	8014c92 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8014c86:	42ba      	cmp	r2, r7
 8014c88:	da03      	bge.n	8014c92 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8014c8a:	140a      	asrs	r2, r1, #16
 8014c8c:	d401      	bmi.n	8014c92 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8014c8e:	42b2      	cmp	r2, r6
 8014c90:	db07      	blt.n	8014ca2 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 8014c92:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 8014c94:	4410      	add	r0, r2
 8014c96:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8014c98:	3b01      	subs	r3, #1
 8014c9a:	4411      	add	r1, r2
 8014c9c:	3402      	adds	r4, #2
 8014c9e:	e7ee      	b.n	8014c7e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 8014ca0:	d017      	beq.n	8014cd2 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 8014ca2:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 8014ca4:	1e5a      	subs	r2, r3, #1
 8014ca6:	fb05 0502 	mla	r5, r5, r2, r0
 8014caa:	142d      	asrs	r5, r5, #16
 8014cac:	d409      	bmi.n	8014cc2 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 8014cae:	42bd      	cmp	r5, r7
 8014cb0:	da07      	bge.n	8014cc2 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 8014cb2:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 8014cb4:	fb05 1202 	mla	r2, r5, r2, r1
 8014cb8:	1412      	asrs	r2, r2, #16
 8014cba:	d402      	bmi.n	8014cc2 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 8014cbc:	42b2      	cmp	r2, r6
 8014cbe:	f2c0 80c7 	blt.w	8014e50 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x230>
 8014cc2:	2700      	movs	r7, #0
 8014cc4:	19da      	adds	r2, r3, r7
 8014cc6:	2a00      	cmp	r2, #0
 8014cc8:	dc3e      	bgt.n	8014d48 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 8014cca:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8014cce:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8014cd2:	f1bb 0f00 	cmp.w	fp, #0
 8014cd6:	f340 8131 	ble.w	8014f3c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 8014cda:	ee30 0a04 	vadd.f32	s0, s0, s8
 8014cde:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8014ce2:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8014ce6:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8014ce8:	f1bb 0b01 	subs.w	fp, fp, #1
 8014cec:	ee31 1a05 	vadd.f32	s2, s2, s10
 8014cf0:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8014cf4:	eeb0 6a62 	vmov.f32	s12, s5
 8014cf8:	ee61 7a27 	vmul.f32	s15, s2, s15
 8014cfc:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8014d00:	ee77 2a62 	vsub.f32	s5, s14, s5
 8014d04:	ed8d 6a11 	vstr	s12, [sp, #68]	@ 0x44
 8014d08:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8014d0c:	eeb0 6a43 	vmov.f32	s12, s6
 8014d10:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8014d14:	ee12 2a90 	vmov	r2, s5
 8014d18:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8014d1c:	fb92 f3f3 	sdiv	r3, r2, r3
 8014d20:	ee13 2a10 	vmov	r2, s6
 8014d24:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8014d28:	9313      	str	r3, [sp, #76]	@ 0x4c
 8014d2a:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8014d2c:	fb92 f3f3 	sdiv	r3, r2, r3
 8014d30:	9a03      	ldr	r2, [sp, #12]
 8014d32:	9314      	str	r3, [sp, #80]	@ 0x50
 8014d34:	ed8d 6a12 	vstr	s12, [sp, #72]	@ 0x48
 8014d38:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8014d3a:	eeb0 3a67 	vmov.f32	s6, s15
 8014d3e:	bf08      	it	eq
 8014d40:	4613      	moveq	r3, r2
 8014d42:	eef0 2a47 	vmov.f32	s5, s14
 8014d46:	e789      	b.n	8014c5c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8014d48:	1405      	asrs	r5, r0, #16
 8014d4a:	d435      	bmi.n	8014db8 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8014d4c:	f8d9 2008 	ldr.w	r2, [r9, #8]
 8014d50:	42aa      	cmp	r2, r5
 8014d52:	dd31      	ble.n	8014db8 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8014d54:	140e      	asrs	r6, r1, #16
 8014d56:	d42f      	bmi.n	8014db8 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8014d58:	f8d9 200c 	ldr.w	r2, [r9, #12]
 8014d5c:	42b2      	cmp	r2, r6
 8014d5e:	dd2b      	ble.n	8014db8 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8014d60:	9a00      	ldr	r2, [sp, #0]
 8014d62:	fb06 5502 	mla	r5, r6, r2, r5
 8014d66:	086a      	lsrs	r2, r5, #1
 8014d68:	9e01      	ldr	r6, [sp, #4]
 8014d6a:	5cb2      	ldrb	r2, [r6, r2]
 8014d6c:	07ee      	lsls	r6, r5, #31
 8014d6e:	bf54      	ite	pl
 8014d70:	f002 020f 	andpl.w	r2, r2, #15
 8014d74:	1112      	asrmi	r2, r2, #4
 8014d76:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8014d7a:	b2d2      	uxtb	r2, r2
 8014d7c:	b1e2      	cbz	r2, 8014db8 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8014d7e:	9d04      	ldr	r5, [sp, #16]
 8014d80:	436a      	muls	r2, r5
 8014d82:	1c55      	adds	r5, r2, #1
 8014d84:	eb05 2222 	add.w	r2, r5, r2, asr #8
 8014d88:	4d6e      	ldr	r5, [pc, #440]	@ (8014f44 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>)
 8014d8a:	682d      	ldr	r5, [r5, #0]
 8014d8c:	1212      	asrs	r2, r2, #8
 8014d8e:	0a2e      	lsrs	r6, r5, #8
 8014d90:	2aff      	cmp	r2, #255	@ 0xff
 8014d92:	9605      	str	r6, [sp, #20]
 8014d94:	d116      	bne.n	8014dc4 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8014d96:	f06f 0201 	mvn.w	r2, #1
 8014d9a:	fb02 fc07 	mul.w	ip, r2, r7
 8014d9e:	f426 66ff 	bic.w	r6, r6, #2040	@ 0x7f8
 8014da2:	096a      	lsrs	r2, r5, #5
 8014da4:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8014da8:	f026 0607 	bic.w	r6, r6, #7
 8014dac:	4316      	orrs	r6, r2
 8014dae:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 8014db2:	432e      	orrs	r6, r5
 8014db4:	f824 600c 	strh.w	r6, [r4, ip]
 8014db8:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 8014dba:	4410      	add	r0, r2
 8014dbc:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8014dbe:	3f01      	subs	r7, #1
 8014dc0:	4411      	add	r1, r2
 8014dc2:	e77f      	b.n	8014cc4 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa4>
 8014dc4:	f06f 0601 	mvn.w	r6, #1
 8014dc8:	437e      	muls	r6, r7
 8014dca:	fa1f fa82 	uxth.w	sl, r2
 8014dce:	f834 8006 	ldrh.w	r8, [r4, r6]
 8014dd2:	9602      	str	r6, [sp, #8]
 8014dd4:	ea4f 2e28 	mov.w	lr, r8, asr #8
 8014dd8:	f3c5 4c07 	ubfx	ip, r5, #16, #8
 8014ddc:	43d2      	mvns	r2, r2
 8014dde:	b2d2      	uxtb	r2, r2
 8014de0:	fb1c fc0a 	smulbb	ip, ip, sl
 8014de4:	f00e 0ef8 	and.w	lr, lr, #248	@ 0xf8
 8014de8:	fb0e ce02 	mla	lr, lr, r2, ip
 8014dec:	b2ed      	uxtb	r5, r5
 8014dee:	ea4f 0ce8 	mov.w	ip, r8, asr #3
 8014df2:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 8014df6:	f89d 6014 	ldrb.w	r6, [sp, #20]
 8014dfa:	fa5f f888 	uxtb.w	r8, r8
 8014dfe:	fb15 f50a 	smulbb	r5, r5, sl
 8014e02:	fb08 5502 	mla	r5, r8, r2, r5
 8014e06:	fa1f fe8e 	uxth.w	lr, lr
 8014e0a:	fb16 f60a 	smulbb	r6, r6, sl
 8014e0e:	b2ad      	uxth	r5, r5
 8014e10:	f00c 0cfc 	and.w	ip, ip, #252	@ 0xfc
 8014e14:	fb0c 6c02 	mla	ip, ip, r2, r6
 8014e18:	f10e 0201 	add.w	r2, lr, #1
 8014e1c:	1c6e      	adds	r6, r5, #1
 8014e1e:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
 8014e22:	eb06 2615 	add.w	r6, r6, r5, lsr #8
 8014e26:	fa1f fc8c 	uxth.w	ip, ip
 8014e2a:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 8014e2e:	f40e 4e78 	and.w	lr, lr, #63488	@ 0xf800
 8014e32:	ea46 0e0e 	orr.w	lr, r6, lr
 8014e36:	f10c 0601 	add.w	r6, ip, #1
 8014e3a:	eb06 261c 	add.w	r6, r6, ip, lsr #8
 8014e3e:	0976      	lsrs	r6, r6, #5
 8014e40:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
 8014e44:	9a02      	ldr	r2, [sp, #8]
 8014e46:	ea4e 0e06 	orr.w	lr, lr, r6
 8014e4a:	f824 e002 	strh.w	lr, [r4, r2]
 8014e4e:	e7b3      	b.n	8014db8 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8014e50:	f04f 0800 	mov.w	r8, #0
 8014e54:	eba3 0208 	sub.w	r2, r3, r8
 8014e58:	2a00      	cmp	r2, #0
 8014e5a:	f77f af36 	ble.w	8014cca <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 8014e5e:	9e00      	ldr	r6, [sp, #0]
 8014e60:	1402      	asrs	r2, r0, #16
 8014e62:	140d      	asrs	r5, r1, #16
 8014e64:	fb06 2505 	mla	r5, r6, r5, r2
 8014e68:	086a      	lsrs	r2, r5, #1
 8014e6a:	9e01      	ldr	r6, [sp, #4]
 8014e6c:	5cb2      	ldrb	r2, [r6, r2]
 8014e6e:	07ed      	lsls	r5, r5, #31
 8014e70:	bf54      	ite	pl
 8014e72:	f002 020f 	andpl.w	r2, r2, #15
 8014e76:	1112      	asrmi	r2, r2, #4
 8014e78:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8014e7c:	b2d2      	uxtb	r2, r2
 8014e7e:	b1c2      	cbz	r2, 8014eb2 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x292>
 8014e80:	9d04      	ldr	r5, [sp, #16]
 8014e82:	436a      	muls	r2, r5
 8014e84:	1c55      	adds	r5, r2, #1
 8014e86:	eb05 2222 	add.w	r2, r5, r2, asr #8
 8014e8a:	4d2e      	ldr	r5, [pc, #184]	@ (8014f44 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>)
 8014e8c:	1212      	asrs	r2, r2, #8
 8014e8e:	682e      	ldr	r6, [r5, #0]
 8014e90:	2aff      	cmp	r2, #255	@ 0xff
 8014e92:	ea4f 2516 	mov.w	r5, r6, lsr #8
 8014e96:	d113      	bne.n	8014ec0 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a0>
 8014e98:	0972      	lsrs	r2, r6, #5
 8014e9a:	f425 65ff 	bic.w	r5, r5, #2040	@ 0x7f8
 8014e9e:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8014ea2:	f025 0507 	bic.w	r5, r5, #7
 8014ea6:	4315      	orrs	r5, r2
 8014ea8:	f3c6 06c4 	ubfx	r6, r6, #3, #5
 8014eac:	4335      	orrs	r5, r6
 8014eae:	f824 5018 	strh.w	r5, [r4, r8, lsl #1]
 8014eb2:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 8014eb4:	4410      	add	r0, r2
 8014eb6:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8014eb8:	f108 0801 	add.w	r8, r8, #1
 8014ebc:	4411      	add	r1, r2
 8014ebe:	e7c9      	b.n	8014e54 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 8014ec0:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
 8014ec4:	fa1f fa82 	uxth.w	sl, r2
 8014ec8:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 8014ecc:	f3c6 4707 	ubfx	r7, r6, #16, #8
 8014ed0:	43d2      	mvns	r2, r2
 8014ed2:	b2d2      	uxtb	r2, r2
 8014ed4:	fb17 f70a 	smulbb	r7, r7, sl
 8014ed8:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 8014edc:	fb0c 7c02 	mla	ip, ip, r2, r7
 8014ee0:	b2f6      	uxtb	r6, r6
 8014ee2:	ea4f 07ee 	mov.w	r7, lr, asr #3
 8014ee6:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8014eea:	fa5f fe8e 	uxtb.w	lr, lr
 8014eee:	fb16 f60a 	smulbb	r6, r6, sl
 8014ef2:	fb0e 6602 	mla	r6, lr, r2, r6
 8014ef6:	b2ed      	uxtb	r5, r5
 8014ef8:	fa1f fc8c 	uxth.w	ip, ip
 8014efc:	fb15 f50a 	smulbb	r5, r5, sl
 8014f00:	b2b6      	uxth	r6, r6
 8014f02:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 8014f06:	fb07 5702 	mla	r7, r7, r2, r5
 8014f0a:	f10c 0201 	add.w	r2, ip, #1
 8014f0e:	1c75      	adds	r5, r6, #1
 8014f10:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 8014f14:	eb05 2516 	add.w	r5, r5, r6, lsr #8
 8014f18:	b2bf      	uxth	r7, r7
 8014f1a:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8014f1e:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 8014f22:	ea45 0c0c 	orr.w	ip, r5, ip
 8014f26:	1c7d      	adds	r5, r7, #1
 8014f28:	eb05 2517 	add.w	r5, r5, r7, lsr #8
 8014f2c:	096d      	lsrs	r5, r5, #5
 8014f2e:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 8014f32:	ea4c 0c05 	orr.w	ip, ip, r5
 8014f36:	f824 c018 	strh.w	ip, [r4, r8, lsl #1]
 8014f3a:	e7ba      	b.n	8014eb2 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x292>
 8014f3c:	b007      	add	sp, #28
 8014f3e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8014f42:	bf00      	nop
 8014f44:	20013f3c 	.word	0x20013f3c

08014f48 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8014f48:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014f4c:	b087      	sub	sp, #28
 8014f4e:	f8df 830c 	ldr.w	r8, [pc, #780]	@ 801525c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x314>
 8014f52:	9815      	ldr	r0, [sp, #84]	@ 0x54
 8014f54:	9205      	str	r2, [sp, #20]
 8014f56:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	@ 0x58
 8014f5a:	9101      	str	r1, [sp, #4]
 8014f5c:	6841      	ldr	r1, [r0, #4]
 8014f5e:	f8dd b060 	ldr.w	fp, [sp, #96]	@ 0x60
 8014f62:	fb01 2404 	mla	r4, r1, r4, r2
 8014f66:	6802      	ldr	r2, [r0, #0]
 8014f68:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8014f6c:	f8db 2008 	ldr.w	r2, [fp, #8]
 8014f70:	3201      	adds	r2, #1
 8014f72:	f022 0201 	bic.w	r2, r2, #1
 8014f76:	9202      	str	r2, [sp, #8]
 8014f78:	f8db 2000 	ldr.w	r2, [fp]
 8014f7c:	9203      	str	r2, [sp, #12]
 8014f7e:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8014f82:	9a01      	ldr	r2, [sp, #4]
 8014f84:	2a00      	cmp	r2, #0
 8014f86:	dc03      	bgt.n	8014f90 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8014f88:	9a05      	ldr	r2, [sp, #20]
 8014f8a:	2a00      	cmp	r2, #0
 8014f8c:	f340 8162 	ble.w	8015254 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 8014f90:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 8014f92:	f9bb 7008 	ldrsh.w	r7, [fp, #8]
 8014f96:	f9bb 600c 	ldrsh.w	r6, [fp, #12]
 8014f9a:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
 8014f9e:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 8014fa0:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 8014fa4:	2b00      	cmp	r3, #0
 8014fa6:	dd0e      	ble.n	8014fc6 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8014fa8:	1402      	asrs	r2, r0, #16
 8014faa:	d405      	bmi.n	8014fb8 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8014fac:	42ba      	cmp	r2, r7
 8014fae:	da03      	bge.n	8014fb8 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8014fb0:	140a      	asrs	r2, r1, #16
 8014fb2:	d401      	bmi.n	8014fb8 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8014fb4:	42b2      	cmp	r2, r6
 8014fb6:	db07      	blt.n	8014fc8 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 8014fb8:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 8014fba:	4410      	add	r0, r2
 8014fbc:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8014fbe:	3b01      	subs	r3, #1
 8014fc0:	4411      	add	r1, r2
 8014fc2:	3402      	adds	r4, #2
 8014fc4:	e7ee      	b.n	8014fa4 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 8014fc6:	d017      	beq.n	8014ff8 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 8014fc8:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 8014fca:	1e5a      	subs	r2, r3, #1
 8014fcc:	fb05 0502 	mla	r5, r5, r2, r0
 8014fd0:	142d      	asrs	r5, r5, #16
 8014fd2:	d409      	bmi.n	8014fe8 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8014fd4:	42bd      	cmp	r5, r7
 8014fd6:	da07      	bge.n	8014fe8 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8014fd8:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 8014fda:	fb05 1202 	mla	r2, r5, r2, r1
 8014fde:	1412      	asrs	r2, r2, #16
 8014fe0:	d402      	bmi.n	8014fe8 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8014fe2:	42b2      	cmp	r2, r6
 8014fe4:	f2c0 80c3 	blt.w	801516e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x226>
 8014fe8:	2500      	movs	r5, #0
 8014fea:	195a      	adds	r2, r3, r5
 8014fec:	2a00      	cmp	r2, #0
 8014fee:	dc3f      	bgt.n	8015070 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 8014ff0:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8014ff4:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8014ff8:	9b01      	ldr	r3, [sp, #4]
 8014ffa:	2b00      	cmp	r3, #0
 8014ffc:	f340 812a 	ble.w	8015254 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 8015000:	ee30 0a04 	vadd.f32	s0, s0, s8
 8015004:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8015008:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801500c:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801500e:	ee31 1a05 	vadd.f32	s2, s2, s10
 8015012:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8015016:	eeb0 6a62 	vmov.f32	s12, s5
 801501a:	ee61 7a27 	vmul.f32	s15, s2, s15
 801501e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8015022:	ee77 2a62 	vsub.f32	s5, s14, s5
 8015026:	ed8d 6a11 	vstr	s12, [sp, #68]	@ 0x44
 801502a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801502e:	eeb0 6a43 	vmov.f32	s12, s6
 8015032:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8015036:	ee12 2a90 	vmov	r2, s5
 801503a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801503e:	fb92 f3f3 	sdiv	r3, r2, r3
 8015042:	ee13 2a10 	vmov	r2, s6
 8015046:	9313      	str	r3, [sp, #76]	@ 0x4c
 8015048:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801504a:	fb92 f3f3 	sdiv	r3, r2, r3
 801504e:	9314      	str	r3, [sp, #80]	@ 0x50
 8015050:	9b01      	ldr	r3, [sp, #4]
 8015052:	9a05      	ldr	r2, [sp, #20]
 8015054:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8015058:	3b01      	subs	r3, #1
 801505a:	9301      	str	r3, [sp, #4]
 801505c:	ed8d 6a12 	vstr	s12, [sp, #72]	@ 0x48
 8015060:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8015062:	eeb0 3a67 	vmov.f32	s6, s15
 8015066:	bf08      	it	eq
 8015068:	4613      	moveq	r3, r2
 801506a:	eef0 2a47 	vmov.f32	s5, s14
 801506e:	e788      	b.n	8014f82 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 8015070:	1406      	asrs	r6, r0, #16
 8015072:	d42c      	bmi.n	80150ce <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8015074:	f8db 2008 	ldr.w	r2, [fp, #8]
 8015078:	42b2      	cmp	r2, r6
 801507a:	dd28      	ble.n	80150ce <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801507c:	140f      	asrs	r7, r1, #16
 801507e:	d426      	bmi.n	80150ce <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8015080:	f8db 200c 	ldr.w	r2, [fp, #12]
 8015084:	42ba      	cmp	r2, r7
 8015086:	dd22      	ble.n	80150ce <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8015088:	9a02      	ldr	r2, [sp, #8]
 801508a:	fb07 6602 	mla	r6, r7, r2, r6
 801508e:	0872      	lsrs	r2, r6, #1
 8015090:	9f03      	ldr	r7, [sp, #12]
 8015092:	5cba      	ldrb	r2, [r7, r2]
 8015094:	07f6      	lsls	r6, r6, #31
 8015096:	bf54      	ite	pl
 8015098:	f002 020f 	andpl.w	r2, r2, #15
 801509c:	1112      	asrmi	r2, r2, #4
 801509e:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 80150a2:	b2d2      	uxtb	r2, r2
 80150a4:	2aff      	cmp	r2, #255	@ 0xff
 80150a6:	d118      	bne.n	80150da <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x192>
 80150a8:	f8d8 2000 	ldr.w	r2, [r8]
 80150ac:	f06f 0601 	mvn.w	r6, #1
 80150b0:	fb06 f705 	mul.w	r7, r6, r5
 80150b4:	f2a6 76fe 	subw	r6, r6, #2046	@ 0x7fe
 80150b8:	ea06 2c12 	and.w	ip, r6, r2, lsr #8
 80150bc:	0956      	lsrs	r6, r2, #5
 80150be:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
 80150c2:	ea4c 0606 	orr.w	r6, ip, r6
 80150c6:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 80150ca:	4316      	orrs	r6, r2
 80150cc:	53e6      	strh	r6, [r4, r7]
 80150ce:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 80150d0:	4410      	add	r0, r2
 80150d2:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 80150d4:	3d01      	subs	r5, #1
 80150d6:	4411      	add	r1, r2
 80150d8:	e787      	b.n	8014fea <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 80150da:	2a00      	cmp	r2, #0
 80150dc:	d0f7      	beq.n	80150ce <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 80150de:	f06f 0601 	mvn.w	r6, #1
 80150e2:	436e      	muls	r6, r5
 80150e4:	f8d8 c000 	ldr.w	ip, [r8]
 80150e8:	f834 e006 	ldrh.w	lr, [r4, r6]
 80150ec:	9604      	str	r6, [sp, #16]
 80150ee:	fa1f f982 	uxth.w	r9, r2
 80150f2:	ea4f 272e 	mov.w	r7, lr, asr #8
 80150f6:	f3cc 4607 	ubfx	r6, ip, #16, #8
 80150fa:	43d2      	mvns	r2, r2
 80150fc:	b2d2      	uxtb	r2, r2
 80150fe:	fb16 f609 	smulbb	r6, r6, r9
 8015102:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 8015106:	fb07 6702 	mla	r7, r7, r2, r6
 801510a:	f3cc 2a07 	ubfx	sl, ip, #8, #8
 801510e:	ea4f 06ee 	mov.w	r6, lr, asr #3
 8015112:	fa5f fc8c 	uxtb.w	ip, ip
 8015116:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801511a:	fa5f fe8e 	uxtb.w	lr, lr
 801511e:	fb1c fc09 	smulbb	ip, ip, r9
 8015122:	fb0e cc02 	mla	ip, lr, r2, ip
 8015126:	b2bf      	uxth	r7, r7
 8015128:	fb1a fa09 	smulbb	sl, sl, r9
 801512c:	fa1f fc8c 	uxth.w	ip, ip
 8015130:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 8015134:	fb06 a602 	mla	r6, r6, r2, sl
 8015138:	1c7a      	adds	r2, r7, #1
 801513a:	f10c 0a01 	add.w	sl, ip, #1
 801513e:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 8015142:	eb0a 2a1c 	add.w	sl, sl, ip, lsr #8
 8015146:	b2b6      	uxth	r6, r6
 8015148:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801514c:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 8015150:	ea4a 0707 	orr.w	r7, sl, r7
 8015154:	f106 0a01 	add.w	sl, r6, #1
 8015158:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801515c:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8015160:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 8015164:	9a04      	ldr	r2, [sp, #16]
 8015166:	ea47 070a 	orr.w	r7, r7, sl
 801516a:	52a7      	strh	r7, [r4, r2]
 801516c:	e7af      	b.n	80150ce <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801516e:	f04f 0e00 	mov.w	lr, #0
 8015172:	eba3 020e 	sub.w	r2, r3, lr
 8015176:	2a00      	cmp	r2, #0
 8015178:	f77f af3a 	ble.w	8014ff0 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 801517c:	9e02      	ldr	r6, [sp, #8]
 801517e:	1402      	asrs	r2, r0, #16
 8015180:	140d      	asrs	r5, r1, #16
 8015182:	fb06 2505 	mla	r5, r6, r5, r2
 8015186:	086a      	lsrs	r2, r5, #1
 8015188:	9e03      	ldr	r6, [sp, #12]
 801518a:	5cb2      	ldrb	r2, [r6, r2]
 801518c:	07ed      	lsls	r5, r5, #31
 801518e:	bf54      	ite	pl
 8015190:	f002 020f 	andpl.w	r2, r2, #15
 8015194:	1112      	asrmi	r2, r2, #4
 8015196:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801519a:	b2d2      	uxtb	r2, r2
 801519c:	2aff      	cmp	r2, #255	@ 0xff
 801519e:	d115      	bne.n	80151cc <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x284>
 80151a0:	f8d8 5000 	ldr.w	r5, [r8]
 80151a4:	f6a2 02ff 	subw	r2, r2, #2303	@ 0x8ff
 80151a8:	ea02 2615 	and.w	r6, r2, r5, lsr #8
 80151ac:	096a      	lsrs	r2, r5, #5
 80151ae:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 80151b2:	4332      	orrs	r2, r6
 80151b4:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 80151b8:	432a      	orrs	r2, r5
 80151ba:	f824 201e 	strh.w	r2, [r4, lr, lsl #1]
 80151be:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 80151c0:	4410      	add	r0, r2
 80151c2:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 80151c4:	f10e 0e01 	add.w	lr, lr, #1
 80151c8:	4411      	add	r1, r2
 80151ca:	e7d2      	b.n	8015172 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 80151cc:	2a00      	cmp	r2, #0
 80151ce:	d0f6      	beq.n	80151be <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 80151d0:	f8d8 7000 	ldr.w	r7, [r8]
 80151d4:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
 80151d8:	fa1f f982 	uxth.w	r9, r2
 80151dc:	ea4f 262c 	mov.w	r6, ip, asr #8
 80151e0:	f3c7 4507 	ubfx	r5, r7, #16, #8
 80151e4:	43d2      	mvns	r2, r2
 80151e6:	b2d2      	uxtb	r2, r2
 80151e8:	fb15 f509 	smulbb	r5, r5, r9
 80151ec:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 80151f0:	fb06 5602 	mla	r6, r6, r2, r5
 80151f4:	f3c7 2a07 	ubfx	sl, r7, #8, #8
 80151f8:	ea4f 05ec 	mov.w	r5, ip, asr #3
 80151fc:	b2ff      	uxtb	r7, r7
 80151fe:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8015202:	fa5f fc8c 	uxtb.w	ip, ip
 8015206:	fb17 f709 	smulbb	r7, r7, r9
 801520a:	fb0c 7702 	mla	r7, ip, r2, r7
 801520e:	b2b6      	uxth	r6, r6
 8015210:	fb1a fa09 	smulbb	sl, sl, r9
 8015214:	b2bf      	uxth	r7, r7
 8015216:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 801521a:	fb05 a502 	mla	r5, r5, r2, sl
 801521e:	1c72      	adds	r2, r6, #1
 8015220:	f107 0a01 	add.w	sl, r7, #1
 8015224:	eb02 2616 	add.w	r6, r2, r6, lsr #8
 8015228:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 801522c:	b2ad      	uxth	r5, r5
 801522e:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8015232:	f406 4678 	and.w	r6, r6, #63488	@ 0xf800
 8015236:	ea4a 0606 	orr.w	r6, sl, r6
 801523a:	f105 0a01 	add.w	sl, r5, #1
 801523e:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8015242:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8015246:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 801524a:	ea46 060a 	orr.w	r6, r6, sl
 801524e:	f824 601e 	strh.w	r6, [r4, lr, lsl #1]
 8015252:	e7b4      	b.n	80151be <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 8015254:	b007      	add	sp, #28
 8015256:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801525a:	bf00      	nop
 801525c:	20013f3c 	.word	0x20013f3c

08015260 <_ZN8touchgfx8LCD16bppD1Ev>:
 8015260:	4770      	bx	lr

08015262 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOID1Ev>:
 8015262:	4770      	bx	lr

08015264 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW9D1Ev>:
 8015264:	4770      	bx	lr

08015266 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLED1Ev>:
 8015266:	4770      	bx	lr

08015268 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L4D1Ev>:
 8015268:	4770      	bx	lr

0801526a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD1Ev>:
 801526a:	4770      	bx	lr

0801526c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD1Ev>:
 801526c:	4770      	bx	lr

0801526e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD1Ev>:
 801526e:	4770      	bx	lr

08015270 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD1Ev>:
 8015270:	4770      	bx	lr

08015272 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 8015272:	4770      	bx	lr

08015274 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 8015274:	4770      	bx	lr

08015276 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 8015276:	4770      	bx	lr

08015278 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 8015278:	4770      	bx	lr

0801527a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
 801527a:	4770      	bx	lr

0801527c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
 801527c:	4770      	bx	lr

0801527e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 801527e:	4770      	bx	lr

08015280 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD1Ev>:
 8015280:	4770      	bx	lr

08015282 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
 8015282:	4770      	bx	lr

08015284 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
 8015284:	4770      	bx	lr

08015286 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 8015286:	4770      	bx	lr

08015288 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD1Ev>:
 8015288:	4770      	bx	lr

0801528a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 801528a:	4770      	bx	lr

0801528c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 801528c:	4770      	bx	lr

0801528e <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 801528e:	4770      	bx	lr

08015290 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 8015290:	4770      	bx	lr

08015292 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD1Ev>:
 8015292:	4770      	bx	lr

08015294 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD1Ev>:
 8015294:	4770      	bx	lr

08015296 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD1Ev>:
 8015296:	4770      	bx	lr

08015298 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD1Ev>:
 8015298:	4770      	bx	lr

0801529a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
 801529a:	4770      	bx	lr

0801529c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
 801529c:	4770      	bx	lr

0801529e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
 801529e:	4770      	bx	lr

080152a0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
 80152a0:	4770      	bx	lr

080152a2 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t>:
 80152a2:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80152a6:	b088      	sub	sp, #32
 80152a8:	ac08      	add	r4, sp, #32
 80152aa:	4606      	mov	r6, r0
 80152ac:	f824 3d0c 	strh.w	r3, [r4, #-12]!
 80152b0:	4620      	mov	r0, r4
 80152b2:	4688      	mov	r8, r1
 80152b4:	4691      	mov	r9, r2
 80152b6:	f7fd fc31 	bl	8012b1c <_ZNK8touchgfx6Bitmap7getDataEv>
 80152ba:	6833      	ldr	r3, [r6, #0]
 80152bc:	4605      	mov	r5, r0
 80152be:	4620      	mov	r0, r4
 80152c0:	699f      	ldr	r7, [r3, #24]
 80152c2:	f7fd fb39 	bl	8012938 <_ZNK8touchgfx6Bitmap8getWidthEv>
 80152c6:	4682      	mov	sl, r0
 80152c8:	4620      	mov	r0, r4
 80152ca:	f7fd fb69 	bl	80129a0 <_ZNK8touchgfx6Bitmap9getHeightEv>
 80152ce:	9500      	str	r5, [sp, #0]
 80152d0:	e9cd a001 	strd	sl, r0, [sp, #4]
 80152d4:	464b      	mov	r3, r9
 80152d6:	a806      	add	r0, sp, #24
 80152d8:	4642      	mov	r2, r8
 80152da:	4631      	mov	r1, r6
 80152dc:	47b8      	blx	r7
 80152de:	4628      	mov	r0, r5
 80152e0:	b008      	add	sp, #32
 80152e2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
	...

080152e8 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE>:
 80152e8:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 80152ec:	2300      	movs	r3, #0
 80152ee:	9300      	str	r3, [sp, #0]
 80152f0:	4b3d      	ldr	r3, [pc, #244]	@ (80153e8 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x100>)
 80152f2:	781b      	ldrb	r3, [r3, #0]
 80152f4:	2b00      	cmp	r3, #0
 80152f6:	d137      	bne.n	8015368 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x80>
 80152f8:	4a3c      	ldr	r2, [pc, #240]	@ (80153ec <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 80152fa:	f9b2 2000 	ldrsh.w	r2, [r2]
 80152fe:	f8ad 2004 	strh.w	r2, [sp, #4]
 8015302:	2b00      	cmp	r3, #0
 8015304:	d132      	bne.n	801536c <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x84>
 8015306:	4b3a      	ldr	r3, [pc, #232]	@ (80153f0 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x108>)
 8015308:	f9b3 3000 	ldrsh.w	r3, [r3]
 801530c:	6808      	ldr	r0, [r1, #0]
 801530e:	6849      	ldr	r1, [r1, #4]
 8015310:	f8ad 3006 	strh.w	r3, [sp, #6]
 8015314:	ac02      	add	r4, sp, #8
 8015316:	ab02      	add	r3, sp, #8
 8015318:	c303      	stmia	r3!, {r0, r1}
 801531a:	4669      	mov	r1, sp
 801531c:	4620      	mov	r0, r4
 801531e:	f7f9 ff85 	bl	800f22c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8015322:	4668      	mov	r0, sp
 8015324:	f7f9 ff5a 	bl	800f1dc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8015328:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 801532c:	f8bd 2000 	ldrh.w	r2, [sp]
 8015330:	4d30      	ldr	r5, [pc, #192]	@ (80153f4 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x10c>)
 8015332:	4413      	add	r3, r2
 8015334:	f8ad 3008 	strh.w	r3, [sp, #8]
 8015338:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 801533c:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 8015340:	6828      	ldr	r0, [r5, #0]
 8015342:	4413      	add	r3, r2
 8015344:	f8ad 300a 	strh.w	r3, [sp, #10]
 8015348:	6803      	ldr	r3, [r0, #0]
 801534a:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 801534c:	4798      	blx	r3
 801534e:	f010 0f01 	tst.w	r0, #1
 8015352:	462f      	mov	r7, r5
 8015354:	d00c      	beq.n	8015370 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x88>
 8015356:	6828      	ldr	r0, [r5, #0]
 8015358:	6803      	ldr	r3, [r0, #0]
 801535a:	e894 0006 	ldmia.w	r4, {r1, r2}
 801535e:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 8015360:	4798      	blx	r3
 8015362:	b004      	add	sp, #16
 8015364:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8015368:	4a21      	ldr	r2, [pc, #132]	@ (80153f0 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x108>)
 801536a:	e7c6      	b.n	80152fa <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x12>
 801536c:	4b1f      	ldr	r3, [pc, #124]	@ (80153ec <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 801536e:	e7cb      	b.n	8015308 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x20>
 8015370:	6838      	ldr	r0, [r7, #0]
 8015372:	f9bd 800c 	ldrsh.w	r8, [sp, #12]
 8015376:	6803      	ldr	r3, [r0, #0]
 8015378:	f9bd 500e 	ldrsh.w	r5, [sp, #14]
 801537c:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 801537e:	4798      	blx	r3
 8015380:	f9bd 3008 	ldrsh.w	r3, [sp, #8]
 8015384:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 8015388:	f8bd 6004 	ldrh.w	r6, [sp, #4]
 801538c:	fb16 3602 	smlabb	r6, r6, r2, r3
 8015390:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 8015394:	6838      	ldr	r0, [r7, #0]
 8015396:	6803      	ldr	r3, [r0, #0]
 8015398:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801539a:	4798      	blx	r3
 801539c:	4a13      	ldr	r2, [pc, #76]	@ (80153ec <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 801539e:	f9bd 400a 	ldrsh.w	r4, [sp, #10]
 80153a2:	8813      	ldrh	r3, [r2, #0]
 80153a4:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
 80153a8:	fb03 1404 	mla	r4, r3, r4, r1
 80153ac:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 80153b0:	435d      	muls	r5, r3
 80153b2:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 80153b6:	ea4f 0848 	mov.w	r8, r8, lsl #1
 80153ba:	4691      	mov	r9, r2
 80153bc:	6838      	ldr	r0, [r7, #0]
 80153be:	42ac      	cmp	r4, r5
 80153c0:	6803      	ldr	r3, [r0, #0]
 80153c2:	d20e      	bcs.n	80153e2 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0xfa>
 80153c4:	f8d3 a038 	ldr.w	sl, [r3, #56]	@ 0x38
 80153c8:	4632      	mov	r2, r6
 80153ca:	4643      	mov	r3, r8
 80153cc:	4621      	mov	r1, r4
 80153ce:	47d0      	blx	sl
 80153d0:	f8b9 3000 	ldrh.w	r3, [r9]
 80153d4:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80153d8:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 80153dc:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 80153e0:	e7ec      	b.n	80153bc <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0xd4>
 80153e2:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80153e4:	4798      	blx	r3
 80153e6:	e7bc      	b.n	8015362 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x7a>
 80153e8:	20013f22 	.word	0x20013f22
 80153ec:	20013f24 	.word	0x20013f24
 80153f0:	20013f26 	.word	0x20013f26
 80153f4:	20013f2c 	.word	0x20013f2c

080153f8 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb>:
 80153f8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80153fc:	b08b      	sub	sp, #44	@ 0x2c
 80153fe:	460f      	mov	r7, r1
 8015400:	f89d b050 	ldrb.w	fp, [sp, #80]	@ 0x50
 8015404:	f89d 4054 	ldrb.w	r4, [sp, #84]	@ 0x54
 8015408:	4616      	mov	r6, r2
 801540a:	f1bb 0f00 	cmp.w	fp, #0
 801540e:	d04a      	beq.n	80154a6 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xae>
 8015410:	6810      	ldr	r0, [r2, #0]
 8015412:	6851      	ldr	r1, [r2, #4]
 8015414:	ad06      	add	r5, sp, #24
 8015416:	c503      	stmia	r5!, {r0, r1}
 8015418:	6818      	ldr	r0, [r3, #0]
 801541a:	6859      	ldr	r1, [r3, #4]
 801541c:	ad08      	add	r5, sp, #32
 801541e:	c503      	stmia	r5!, {r0, r1}
 8015420:	a806      	add	r0, sp, #24
 8015422:	f7f9 fedb 	bl	800f1dc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8015426:	4631      	mov	r1, r6
 8015428:	a808      	add	r0, sp, #32
 801542a:	f7f9 feff 	bl	800f22c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801542e:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
 8015432:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	@ 0x22
 8015436:	f8bd 601c 	ldrh.w	r6, [sp, #28]
 801543a:	f9bd 8024 	ldrsh.w	r8, [sp, #36]	@ 0x24
 801543e:	f9bd 5026 	ldrsh.w	r5, [sp, #38]	@ 0x26
 8015442:	fb16 2103 	smlabb	r1, r6, r3, r2
 8015446:	eb07 0641 	add.w	r6, r7, r1, lsl #1
 801544a:	f8bd 1018 	ldrh.w	r1, [sp, #24]
 801544e:	4f5f      	ldr	r7, [pc, #380]	@ (80155cc <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>)
 8015450:	440a      	add	r2, r1
 8015452:	f8ad 2020 	strh.w	r2, [sp, #32]
 8015456:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 801545a:	6838      	ldr	r0, [r7, #0]
 801545c:	4413      	add	r3, r2
 801545e:	f8ad 3022 	strh.w	r3, [sp, #34]	@ 0x22
 8015462:	6803      	ldr	r3, [r0, #0]
 8015464:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8015466:	4798      	blx	r3
 8015468:	f1bb 0fff 	cmp.w	fp, #255	@ 0xff
 801546c:	46b9      	mov	r9, r7
 801546e:	d11d      	bne.n	80154ac <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xb4>
 8015470:	b9fc      	cbnz	r4, 80154b2 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xba>
 8015472:	f010 0f01 	tst.w	r0, #1
 8015476:	d01c      	beq.n	80154b2 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xba>
 8015478:	f8d9 0000 	ldr.w	r0, [r9]
 801547c:	f8bd 3022 	ldrh.w	r3, [sp, #34]	@ 0x22
 8015480:	6801      	ldr	r1, [r0, #0]
 8015482:	f8cd b00c 	str.w	fp, [sp, #12]
 8015486:	2700      	movs	r7, #0
 8015488:	e9cd 4704 	strd	r4, r7, [sp, #16]
 801548c:	f8bd 401c 	ldrh.w	r4, [sp, #28]
 8015490:	9402      	str	r4, [sp, #8]
 8015492:	b2ad      	uxth	r5, r5
 8015494:	fa1f f488 	uxth.w	r4, r8
 8015498:	9501      	str	r5, [sp, #4]
 801549a:	9400      	str	r4, [sp, #0]
 801549c:	6c8c      	ldr	r4, [r1, #72]	@ 0x48
 801549e:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 80154a2:	4631      	mov	r1, r6
 80154a4:	47a0      	blx	r4
 80154a6:	b00b      	add	sp, #44	@ 0x2c
 80154a8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80154ac:	f010 0f04 	tst.w	r0, #4
 80154b0:	e7e1      	b.n	8015476 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x7e>
 80154b2:	f8d9 0000 	ldr.w	r0, [r9]
 80154b6:	6803      	ldr	r3, [r0, #0]
 80154b8:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80154ba:	4798      	blx	r3
 80154bc:	4b44      	ldr	r3, [pc, #272]	@ (80155d0 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d8>)
 80154be:	f9bd 4022 	ldrsh.w	r4, [sp, #34]	@ 0x22
 80154c2:	881a      	ldrh	r2, [r3, #0]
 80154c4:	f9bd 1020 	ldrsh.w	r1, [sp, #32]
 80154c8:	f1bb 0fff 	cmp.w	fp, #255	@ 0xff
 80154cc:	fb02 1404 	mla	r4, r2, r4, r1
 80154d0:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 80154d4:	469a      	mov	sl, r3
 80154d6:	fb05 f502 	mul.w	r5, r5, r2
 80154da:	ea4f 0748 	mov.w	r7, r8, lsl #1
 80154de:	d059      	beq.n	8015594 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x19c>
 80154e0:	f1cb 09ff 	rsb	r9, fp, #255	@ 0xff
 80154e4:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 80154e8:	fa1f f28b 	uxth.w	r2, fp
 80154ec:	fa1f f989 	uxth.w	r9, r9
 80154f0:	469e      	mov	lr, r3
 80154f2:	42ac      	cmp	r4, r5
 80154f4:	d264      	bcs.n	80155c0 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c8>
 80154f6:	eb04 0a07 	add.w	sl, r4, r7
 80154fa:	4554      	cmp	r4, sl
 80154fc:	d23d      	bcs.n	801557a <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x182>
 80154fe:	8821      	ldrh	r1, [r4, #0]
 8015500:	f836 3b02 	ldrh.w	r3, [r6], #2
 8015504:	1208      	asrs	r0, r1, #8
 8015506:	ea4f 2c23 	mov.w	ip, r3, asr #8
 801550a:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 801550e:	fb10 f009 	smulbb	r0, r0, r9
 8015512:	ea4f 0be1 	mov.w	fp, r1, asr #3
 8015516:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 801551a:	00c9      	lsls	r1, r1, #3
 801551c:	fb0c 0c02 	mla	ip, ip, r2, r0
 8015520:	f00b 0bfc 	and.w	fp, fp, #252	@ 0xfc
 8015524:	10d8      	asrs	r0, r3, #3
 8015526:	b2c9      	uxtb	r1, r1
 8015528:	00db      	lsls	r3, r3, #3
 801552a:	fa1f fc8c 	uxth.w	ip, ip
 801552e:	fb1b fb09 	smulbb	fp, fp, r9
 8015532:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 8015536:	b2db      	uxtb	r3, r3
 8015538:	fb11 f109 	smulbb	r1, r1, r9
 801553c:	fb00 b002 	mla	r0, r0, r2, fp
 8015540:	fb03 1302 	mla	r3, r3, r2, r1
 8015544:	f10c 0b01 	add.w	fp, ip, #1
 8015548:	b29b      	uxth	r3, r3
 801554a:	eb0b 2c1c 	add.w	ip, fp, ip, lsr #8
 801554e:	b280      	uxth	r0, r0
 8015550:	f40c 4b78 	and.w	fp, ip, #63488	@ 0xf800
 8015554:	f103 0c01 	add.w	ip, r3, #1
 8015558:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 801555c:	1c43      	adds	r3, r0, #1
 801555e:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8015562:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 8015566:	0940      	lsrs	r0, r0, #5
 8015568:	ea4c 0c0b 	orr.w	ip, ip, fp
 801556c:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8015570:	ea4c 0c00 	orr.w	ip, ip, r0
 8015574:	f824 cb02 	strh.w	ip, [r4], #2
 8015578:	e7bf      	b.n	80154fa <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x102>
 801557a:	f8be 3000 	ldrh.w	r3, [lr]
 801557e:	eba3 0308 	sub.w	r3, r3, r8
 8015582:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8015586:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 801558a:	eba3 0308 	sub.w	r3, r3, r8
 801558e:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 8015592:	e7ae      	b.n	80154f2 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xfa>
 8015594:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 8015598:	f8d9 0000 	ldr.w	r0, [r9]
 801559c:	42ac      	cmp	r4, r5
 801559e:	6803      	ldr	r3, [r0, #0]
 80155a0:	d20e      	bcs.n	80155c0 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c8>
 80155a2:	f8d3 8038 	ldr.w	r8, [r3, #56]	@ 0x38
 80155a6:	4632      	mov	r2, r6
 80155a8:	463b      	mov	r3, r7
 80155aa:	4621      	mov	r1, r4
 80155ac:	47c0      	blx	r8
 80155ae:	f8ba 3000 	ldrh.w	r3, [sl]
 80155b2:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80155b6:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 80155ba:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 80155be:	e7eb      	b.n	8015598 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1a0>
 80155c0:	4b02      	ldr	r3, [pc, #8]	@ (80155cc <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>)
 80155c2:	6818      	ldr	r0, [r3, #0]
 80155c4:	6803      	ldr	r3, [r0, #0]
 80155c6:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80155c8:	4798      	blx	r3
 80155ca:	e76c      	b.n	80154a6 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xae>
 80155cc:	20013f2c 	.word	0x20013f2c
 80155d0:	20013f24 	.word	0x20013f24

080155d4 <_ZN8touchgfx8LCD16bppD0Ev>:
 80155d4:	b510      	push	{r4, lr}
 80155d6:	218c      	movs	r1, #140	@ 0x8c
 80155d8:	4604      	mov	r4, r0
 80155da:	f00c fa2c 	bl	8021a36 <_ZdlPvj>
 80155de:	4620      	mov	r0, r4
 80155e0:	bd10      	pop	{r4, pc}

080155e2 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L4D0Ev>:
 80155e2:	b510      	push	{r4, lr}
 80155e4:	2104      	movs	r1, #4
 80155e6:	4604      	mov	r4, r0
 80155e8:	f00c fa25 	bl	8021a36 <_ZdlPvj>
 80155ec:	4620      	mov	r0, r4
 80155ee:	bd10      	pop	{r4, pc}

080155f0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLED0Ev>:
 80155f0:	b510      	push	{r4, lr}
 80155f2:	2104      	movs	r1, #4
 80155f4:	4604      	mov	r4, r0
 80155f6:	f00c fa1e 	bl	8021a36 <_ZdlPvj>
 80155fa:	4620      	mov	r0, r4
 80155fc:	bd10      	pop	{r4, pc}

080155fe <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW9D0Ev>:
 80155fe:	b510      	push	{r4, lr}
 8015600:	f640 0144 	movw	r1, #2116	@ 0x844
 8015604:	4604      	mov	r4, r0
 8015606:	f00c fa16 	bl	8021a36 <_ZdlPvj>
 801560a:	4620      	mov	r0, r4
 801560c:	bd10      	pop	{r4, pc}

0801560e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOID0Ev>:
 801560e:	b510      	push	{r4, lr}
 8015610:	f44f 7182 	mov.w	r1, #260	@ 0x104
 8015614:	4604      	mov	r4, r0
 8015616:	f00c fa0e 	bl	8021a36 <_ZdlPvj>
 801561a:	4620      	mov	r0, r4
 801561c:	bd10      	pop	{r4, pc}

0801561e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
 801561e:	b510      	push	{r4, lr}
 8015620:	2104      	movs	r1, #4
 8015622:	4604      	mov	r4, r0
 8015624:	f00c fa07 	bl	8021a36 <_ZdlPvj>
 8015628:	4620      	mov	r0, r4
 801562a:	bd10      	pop	{r4, pc}

0801562c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
 801562c:	b510      	push	{r4, lr}
 801562e:	2104      	movs	r1, #4
 8015630:	4604      	mov	r4, r0
 8015632:	f00c fa00 	bl	8021a36 <_ZdlPvj>
 8015636:	4620      	mov	r0, r4
 8015638:	bd10      	pop	{r4, pc}

0801563a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
 801563a:	b510      	push	{r4, lr}
 801563c:	2104      	movs	r1, #4
 801563e:	4604      	mov	r4, r0
 8015640:	f00c f9f9 	bl	8021a36 <_ZdlPvj>
 8015644:	4620      	mov	r0, r4
 8015646:	bd10      	pop	{r4, pc}

08015648 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
 8015648:	b510      	push	{r4, lr}
 801564a:	2104      	movs	r1, #4
 801564c:	4604      	mov	r4, r0
 801564e:	f00c f9f2 	bl	8021a36 <_ZdlPvj>
 8015652:	4620      	mov	r0, r4
 8015654:	bd10      	pop	{r4, pc}

08015656 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD0Ev>:
 8015656:	b510      	push	{r4, lr}
 8015658:	2104      	movs	r1, #4
 801565a:	4604      	mov	r4, r0
 801565c:	f00c f9eb 	bl	8021a36 <_ZdlPvj>
 8015660:	4620      	mov	r0, r4
 8015662:	bd10      	pop	{r4, pc}

08015664 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD0Ev>:
 8015664:	b510      	push	{r4, lr}
 8015666:	2104      	movs	r1, #4
 8015668:	4604      	mov	r4, r0
 801566a:	f00c f9e4 	bl	8021a36 <_ZdlPvj>
 801566e:	4620      	mov	r0, r4
 8015670:	bd10      	pop	{r4, pc}

08015672 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD0Ev>:
 8015672:	b510      	push	{r4, lr}
 8015674:	2104      	movs	r1, #4
 8015676:	4604      	mov	r4, r0
 8015678:	f00c f9dd 	bl	8021a36 <_ZdlPvj>
 801567c:	4620      	mov	r0, r4
 801567e:	bd10      	pop	{r4, pc}

08015680 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD0Ev>:
 8015680:	b510      	push	{r4, lr}
 8015682:	2104      	movs	r1, #4
 8015684:	4604      	mov	r4, r0
 8015686:	f00c f9d6 	bl	8021a36 <_ZdlPvj>
 801568a:	4620      	mov	r0, r4
 801568c:	bd10      	pop	{r4, pc}

0801568e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 801568e:	b510      	push	{r4, lr}
 8015690:	2104      	movs	r1, #4
 8015692:	4604      	mov	r4, r0
 8015694:	f00c f9cf 	bl	8021a36 <_ZdlPvj>
 8015698:	4620      	mov	r0, r4
 801569a:	bd10      	pop	{r4, pc}

0801569c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 801569c:	b510      	push	{r4, lr}
 801569e:	2104      	movs	r1, #4
 80156a0:	4604      	mov	r4, r0
 80156a2:	f00c f9c8 	bl	8021a36 <_ZdlPvj>
 80156a6:	4620      	mov	r0, r4
 80156a8:	bd10      	pop	{r4, pc}

080156aa <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 80156aa:	b510      	push	{r4, lr}
 80156ac:	2104      	movs	r1, #4
 80156ae:	4604      	mov	r4, r0
 80156b0:	f00c f9c1 	bl	8021a36 <_ZdlPvj>
 80156b4:	4620      	mov	r0, r4
 80156b6:	bd10      	pop	{r4, pc}

080156b8 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 80156b8:	b510      	push	{r4, lr}
 80156ba:	2104      	movs	r1, #4
 80156bc:	4604      	mov	r4, r0
 80156be:	f00c f9ba 	bl	8021a36 <_ZdlPvj>
 80156c2:	4620      	mov	r0, r4
 80156c4:	bd10      	pop	{r4, pc}

080156c6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
 80156c6:	b510      	push	{r4, lr}
 80156c8:	2104      	movs	r1, #4
 80156ca:	4604      	mov	r4, r0
 80156cc:	f00c f9b3 	bl	8021a36 <_ZdlPvj>
 80156d0:	4620      	mov	r0, r4
 80156d2:	bd10      	pop	{r4, pc}

080156d4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
 80156d4:	b510      	push	{r4, lr}
 80156d6:	2104      	movs	r1, #4
 80156d8:	4604      	mov	r4, r0
 80156da:	f00c f9ac 	bl	8021a36 <_ZdlPvj>
 80156de:	4620      	mov	r0, r4
 80156e0:	bd10      	pop	{r4, pc}

080156e2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 80156e2:	b510      	push	{r4, lr}
 80156e4:	2104      	movs	r1, #4
 80156e6:	4604      	mov	r4, r0
 80156e8:	f00c f9a5 	bl	8021a36 <_ZdlPvj>
 80156ec:	4620      	mov	r0, r4
 80156ee:	bd10      	pop	{r4, pc}

080156f0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD0Ev>:
 80156f0:	b510      	push	{r4, lr}
 80156f2:	2104      	movs	r1, #4
 80156f4:	4604      	mov	r4, r0
 80156f6:	f00c f99e 	bl	8021a36 <_ZdlPvj>
 80156fa:	4620      	mov	r0, r4
 80156fc:	bd10      	pop	{r4, pc}

080156fe <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
 80156fe:	b510      	push	{r4, lr}
 8015700:	2104      	movs	r1, #4
 8015702:	4604      	mov	r4, r0
 8015704:	f00c f997 	bl	8021a36 <_ZdlPvj>
 8015708:	4620      	mov	r0, r4
 801570a:	bd10      	pop	{r4, pc}

0801570c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
 801570c:	b510      	push	{r4, lr}
 801570e:	2104      	movs	r1, #4
 8015710:	4604      	mov	r4, r0
 8015712:	f00c f990 	bl	8021a36 <_ZdlPvj>
 8015716:	4620      	mov	r0, r4
 8015718:	bd10      	pop	{r4, pc}

0801571a <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 801571a:	b510      	push	{r4, lr}
 801571c:	2104      	movs	r1, #4
 801571e:	4604      	mov	r4, r0
 8015720:	f00c f989 	bl	8021a36 <_ZdlPvj>
 8015724:	4620      	mov	r0, r4
 8015726:	bd10      	pop	{r4, pc}

08015728 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD0Ev>:
 8015728:	b510      	push	{r4, lr}
 801572a:	2104      	movs	r1, #4
 801572c:	4604      	mov	r4, r0
 801572e:	f00c f982 	bl	8021a36 <_ZdlPvj>
 8015732:	4620      	mov	r0, r4
 8015734:	bd10      	pop	{r4, pc}

08015736 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 8015736:	b510      	push	{r4, lr}
 8015738:	2104      	movs	r1, #4
 801573a:	4604      	mov	r4, r0
 801573c:	f00c f97b 	bl	8021a36 <_ZdlPvj>
 8015740:	4620      	mov	r0, r4
 8015742:	bd10      	pop	{r4, pc}

08015744 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 8015744:	b510      	push	{r4, lr}
 8015746:	2104      	movs	r1, #4
 8015748:	4604      	mov	r4, r0
 801574a:	f00c f974 	bl	8021a36 <_ZdlPvj>
 801574e:	4620      	mov	r0, r4
 8015750:	bd10      	pop	{r4, pc}

08015752 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 8015752:	b510      	push	{r4, lr}
 8015754:	2104      	movs	r1, #4
 8015756:	4604      	mov	r4, r0
 8015758:	f00c f96d 	bl	8021a36 <_ZdlPvj>
 801575c:	4620      	mov	r0, r4
 801575e:	bd10      	pop	{r4, pc}

08015760 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 8015760:	b510      	push	{r4, lr}
 8015762:	2104      	movs	r1, #4
 8015764:	4604      	mov	r4, r0
 8015766:	f00c f966 	bl	8021a36 <_ZdlPvj>
 801576a:	4620      	mov	r0, r4
 801576c:	bd10      	pop	{r4, pc}

0801576e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD0Ev>:
 801576e:	b510      	push	{r4, lr}
 8015770:	2104      	movs	r1, #4
 8015772:	4604      	mov	r4, r0
 8015774:	f00c f95f 	bl	8021a36 <_ZdlPvj>
 8015778:	4620      	mov	r0, r4
 801577a:	bd10      	pop	{r4, pc}

0801577c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD0Ev>:
 801577c:	b510      	push	{r4, lr}
 801577e:	2104      	movs	r1, #4
 8015780:	4604      	mov	r4, r0
 8015782:	f00c f958 	bl	8021a36 <_ZdlPvj>
 8015786:	4620      	mov	r0, r4
 8015788:	bd10      	pop	{r4, pc}

0801578a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD0Ev>:
 801578a:	b510      	push	{r4, lr}
 801578c:	2104      	movs	r1, #4
 801578e:	4604      	mov	r4, r0
 8015790:	f00c f951 	bl	8021a36 <_ZdlPvj>
 8015794:	4620      	mov	r0, r4
 8015796:	bd10      	pop	{r4, pc}

08015798 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD0Ev>:
 8015798:	b510      	push	{r4, lr}
 801579a:	2104      	movs	r1, #4
 801579c:	4604      	mov	r4, r0
 801579e:	f00c f94a 	bl	8021a36 <_ZdlPvj>
 80157a2:	4620      	mov	r0, r4
 80157a4:	bd10      	pop	{r4, pc}
	...

080157a8 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h>:
 80157a8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80157ac:	b08f      	sub	sp, #60	@ 0x3c
 80157ae:	4616      	mov	r6, r2
 80157b0:	f89d 2060 	ldrb.w	r2, [sp, #96]	@ 0x60
 80157b4:	9205      	str	r2, [sp, #20]
 80157b6:	4682      	mov	sl, r0
 80157b8:	460d      	mov	r5, r1
 80157ba:	2a00      	cmp	r2, #0
 80157bc:	f000 82b7 	beq.w	8015d2e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x586>
 80157c0:	6830      	ldr	r0, [r6, #0]
 80157c2:	6871      	ldr	r1, [r6, #4]
 80157c4:	ac0a      	add	r4, sp, #40	@ 0x28
 80157c6:	c403      	stmia	r4!, {r0, r1}
 80157c8:	6818      	ldr	r0, [r3, #0]
 80157ca:	6859      	ldr	r1, [r3, #4]
 80157cc:	ac0c      	add	r4, sp, #48	@ 0x30
 80157ce:	c403      	stmia	r4!, {r0, r1}
 80157d0:	a80a      	add	r0, sp, #40	@ 0x28
 80157d2:	f7f9 fd03 	bl	800f1dc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80157d6:	4631      	mov	r1, r6
 80157d8:	a80c      	add	r0, sp, #48	@ 0x30
 80157da:	f7f9 fd27 	bl	800f22c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80157de:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	@ 0x2c
 80157e2:	f5b2 6f80 	cmp.w	r2, #1024	@ 0x400
 80157e6:	bfd7      	itett	le
 80157e8:	b293      	uxthle	r3, r2
 80157ea:	2301      	movgt	r3, #1
 80157ec:	f44f 6180 	movle.w	r1, #1024	@ 0x400
 80157f0:	fb91 f3f3 	sdivle	r3, r1, r3
 80157f4:	9300      	str	r3, [sp, #0]
 80157f6:	f105 0308 	add.w	r3, r5, #8
 80157fa:	9900      	ldr	r1, [sp, #0]
 80157fc:	9306      	str	r3, [sp, #24]
 80157fe:	f9bd 302e 	ldrsh.w	r3, [sp, #46]	@ 0x2e
 8015802:	440b      	add	r3, r1
 8015804:	3b01      	subs	r3, #1
 8015806:	fb93 f3f1 	sdiv	r3, r3, r1
 801580a:	9906      	ldr	r1, [sp, #24]
 801580c:	3b01      	subs	r3, #1
 801580e:	b29b      	uxth	r3, r3
 8015810:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 8015814:	9307      	str	r3, [sp, #28]
 8015816:	9900      	ldr	r1, [sp, #0]
 8015818:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	@ 0x32
 801581c:	fb93 f0f1 	sdiv	r0, r3, r1
 8015820:	b284      	uxth	r4, r0
 8015822:	9402      	str	r4, [sp, #8]
 8015824:	9d02      	ldr	r5, [sp, #8]
 8015826:	9c00      	ldr	r4, [sp, #0]
 8015828:	f8bd 1030 	ldrh.w	r1, [sp, #48]	@ 0x30
 801582c:	fb05 3414 	mls	r4, r5, r4, r3
 8015830:	fb14 f402 	smulbb	r4, r4, r2
 8015834:	440c      	add	r4, r1
 8015836:	b2a4      	uxth	r4, r4
 8015838:	2d00      	cmp	r5, #0
 801583a:	d06c      	beq.n	8015916 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x16e>
 801583c:	1e6a      	subs	r2, r5, #1
 801583e:	9806      	ldr	r0, [sp, #24]
 8015840:	f850 6022 	ldr.w	r6, [r0, r2, lsl #2]
 8015844:	9a07      	ldr	r2, [sp, #28]
 8015846:	ba36      	rev	r6, r6
 8015848:	4416      	add	r6, r2
 801584a:	f8bd 2028 	ldrh.w	r2, [sp, #40]	@ 0x28
 801584e:	f9bd 5036 	ldrsh.w	r5, [sp, #54]	@ 0x36
 8015852:	f8df 9334 	ldr.w	r9, [pc, #820]	@ 8015b88 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x3e0>
 8015856:	4411      	add	r1, r2
 8015858:	f8bd 202a 	ldrh.w	r2, [sp, #42]	@ 0x2a
 801585c:	f8ad 1030 	strh.w	r1, [sp, #48]	@ 0x30
 8015860:	4413      	add	r3, r2
 8015862:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
 8015866:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	@ 0x34
 801586a:	9301      	str	r3, [sp, #4]
 801586c:	4bc4      	ldr	r3, [pc, #784]	@ (8015b80 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x3d8>)
 801586e:	6818      	ldr	r0, [r3, #0]
 8015870:	6803      	ldr	r3, [r0, #0]
 8015872:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8015874:	4798      	blx	r3
 8015876:	4bc3      	ldr	r3, [pc, #780]	@ (8015b84 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x3dc>)
 8015878:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	@ 0x30
 801587c:	881b      	ldrh	r3, [r3, #0]
 801587e:	f9bd 8032 	ldrsh.w	r8, [sp, #50]	@ 0x32
 8015882:	fb03 2808 	mla	r8, r3, r8, r2
 8015886:	eb00 0848 	add.w	r8, r0, r8, lsl #1
 801588a:	436b      	muls	r3, r5
 801588c:	eb08 0343 	add.w	r3, r8, r3, lsl #1
 8015890:	9309      	str	r3, [sp, #36]	@ 0x24
 8015892:	2500      	movs	r5, #0
 8015894:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
 8015898:	fb94 f3f3 	sdiv	r3, r4, r3
 801589c:	9304      	str	r3, [sp, #16]
 801589e:	f10a 0304 	add.w	r3, sl, #4
 80158a2:	f44f 7280 	mov.w	r2, #256	@ 0x100
 80158a6:	4629      	mov	r1, r5
 80158a8:	4618      	mov	r0, r3
 80158aa:	9308      	str	r3, [sp, #32]
 80158ac:	f00d fa07 	bl	8022cbe <memset>
 80158b0:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80158b2:	4543      	cmp	r3, r8
 80158b4:	f240 8236 	bls.w	8015d24 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x57c>
 80158b8:	2203      	movs	r2, #3
 80158ba:	2107      	movs	r1, #7
 80158bc:	200b      	movs	r0, #11
 80158be:	2c00      	cmp	r4, #0
 80158c0:	f000 8131 	beq.w	8015b26 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x37e>
 80158c4:	7833      	ldrb	r3, [r6, #0]
 80158c6:	b2db      	uxtb	r3, r3
 80158c8:	2bfe      	cmp	r3, #254	@ 0xfe
 80158ca:	d126      	bne.n	801591a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x172>
 80158cc:	f896 e001 	ldrb.w	lr, [r6, #1]
 80158d0:	f896 c002 	ldrb.w	ip, [r6, #2]
 80158d4:	f896 b003 	ldrb.w	fp, [r6, #3]
 80158d8:	fa5f fe8e 	uxtb.w	lr, lr
 80158dc:	fa5f fc8c 	uxtb.w	ip, ip
 80158e0:	f36e 0507 	bfi	r5, lr, #0, #8
 80158e4:	f36c 250f 	bfi	r5, ip, #8, #8
 80158e8:	fa5f fb8b 	uxtb.w	fp, fp
 80158ec:	eb0c 0c8c 	add.w	ip, ip, ip, lsl #2
 80158f0:	f36b 4517 	bfi	r5, fp, #16, #8
 80158f4:	fb12 cc0b 	smlabb	ip, r2, fp, ip
 80158f8:	0e2b      	lsrs	r3, r5, #24
 80158fa:	fb11 cc0e 	smlabb	ip, r1, lr, ip
 80158fe:	fb10 c303 	smlabb	r3, r0, r3, ip
 8015902:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 8015906:	eb0a 0383 	add.w	r3, sl, r3, lsl #2
 801590a:	3c01      	subs	r4, #1
 801590c:	1d37      	adds	r7, r6, #4
 801590e:	b2a4      	uxth	r4, r4
 8015910:	605d      	str	r5, [r3, #4]
 8015912:	463e      	mov	r6, r7
 8015914:	e7d3      	b.n	80158be <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x116>
 8015916:	9e07      	ldr	r6, [sp, #28]
 8015918:	e797      	b.n	801584a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0xa2>
 801591a:	2bff      	cmp	r3, #255	@ 0xff
 801591c:	d127      	bne.n	801596e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x1c6>
 801591e:	f896 c001 	ldrb.w	ip, [r6, #1]
 8015922:	78b3      	ldrb	r3, [r6, #2]
 8015924:	f896 e003 	ldrb.w	lr, [r6, #3]
 8015928:	f896 b004 	ldrb.w	fp, [r6, #4]
 801592c:	fa5f fc8c 	uxtb.w	ip, ip
 8015930:	b2db      	uxtb	r3, r3
 8015932:	f36c 0507 	bfi	r5, ip, #0, #8
 8015936:	f363 250f 	bfi	r5, r3, #8, #8
 801593a:	fa5f fe8e 	uxtb.w	lr, lr
 801593e:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 8015942:	fb12 330e 	smlabb	r3, r2, lr, r3
 8015946:	fa5f fb8b 	uxtb.w	fp, fp
 801594a:	f36e 4517 	bfi	r5, lr, #16, #8
 801594e:	fb11 330c 	smlabb	r3, r1, ip, r3
 8015952:	f36b 651f 	bfi	r5, fp, #24, #8
 8015956:	fb10 3b0b 	smlabb	fp, r0, fp, r3
 801595a:	f00b 0b3f 	and.w	fp, fp, #63	@ 0x3f
 801595e:	eb0a 0b8b 	add.w	fp, sl, fp, lsl #2
 8015962:	3c01      	subs	r4, #1
 8015964:	1d77      	adds	r7, r6, #5
 8015966:	b2a4      	uxth	r4, r4
 8015968:	f8cb 5004 	str.w	r5, [fp, #4]
 801596c:	e7d1      	b.n	8015912 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x16a>
 801596e:	ea5f 1ca3 	movs.w	ip, r3, asr #6
 8015972:	f106 0701 	add.w	r7, r6, #1
 8015976:	d107      	bne.n	8015988 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x1e0>
 8015978:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 801597c:	eb0a 0383 	add.w	r3, sl, r3, lsl #2
 8015980:	685d      	ldr	r5, [r3, #4]
 8015982:	3c01      	subs	r4, #1
 8015984:	b2a4      	uxth	r4, r4
 8015986:	e7c4      	b.n	8015912 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x16a>
 8015988:	f1bc 0f01 	cmp.w	ip, #1
 801598c:	d12c      	bne.n	80159e8 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x240>
 801598e:	f003 0e03 	and.w	lr, r3, #3
 8015992:	f1ae 0e02 	sub.w	lr, lr, #2
 8015996:	eb05 0ece 	add.w	lr, r5, lr, lsl #3
 801599a:	fa5f fe8e 	uxtb.w	lr, lr
 801599e:	f003 0c0c 	and.w	ip, r3, #12
 80159a2:	f36e 0507 	bfi	r5, lr, #0, #8
 80159a6:	f1ac 0c08 	sub.w	ip, ip, #8
 80159aa:	eb0c 2c15 	add.w	ip, ip, r5, lsr #8
 80159ae:	f00c 0cff 	and.w	ip, ip, #255	@ 0xff
 80159b2:	f36c 250f 	bfi	r5, ip, #8, #8
 80159b6:	f3c3 1301 	ubfx	r3, r3, #4, #2
 80159ba:	f3c5 4607 	ubfx	r6, r5, #16, #8
 80159be:	3b02      	subs	r3, #2
 80159c0:	eb06 03c3 	add.w	r3, r6, r3, lsl #3
 80159c4:	b2db      	uxtb	r3, r3
 80159c6:	eb0c 0c8c 	add.w	ip, ip, ip, lsl #2
 80159ca:	f363 4517 	bfi	r5, r3, #16, #8
 80159ce:	fb12 cc03 	smlabb	ip, r2, r3, ip
 80159d2:	0e2e      	lsrs	r6, r5, #24
 80159d4:	fb11 cc0e 	smlabb	ip, r1, lr, ip
 80159d8:	fb10 c606 	smlabb	r6, r0, r6, ip
 80159dc:	f006 063f 	and.w	r6, r6, #63	@ 0x3f
 80159e0:	eb0a 0686 	add.w	r6, sl, r6, lsl #2
 80159e4:	6075      	str	r5, [r6, #4]
 80159e6:	e7cc      	b.n	8015982 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x1da>
 80159e8:	f1bc 0f02 	cmp.w	ip, #2
 80159ec:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 80159f0:	d12a      	bne.n	8015a48 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x2a0>
 80159f2:	1cb7      	adds	r7, r6, #2
 80159f4:	7876      	ldrb	r6, [r6, #1]
 80159f6:	b2f6      	uxtb	r6, r6
 80159f8:	f006 0c0f 	and.w	ip, r6, #15
 80159fc:	3b20      	subs	r3, #32
 80159fe:	f1ac 0c08 	sub.w	ip, ip, #8
 8015a02:	449c      	add	ip, r3
 8015a04:	eb05 0ccc 	add.w	ip, r5, ip, lsl #3
 8015a08:	fa5f fc8c 	uxtb.w	ip, ip
 8015a0c:	f36c 0507 	bfi	r5, ip, #0, #8
 8015a10:	f3c5 2e07 	ubfx	lr, r5, #8, #8
 8015a14:	eb0e 0e83 	add.w	lr, lr, r3, lsl #2
 8015a18:	fa5f fe8e 	uxtb.w	lr, lr
 8015a1c:	1136      	asrs	r6, r6, #4
 8015a1e:	f36e 250f 	bfi	r5, lr, #8, #8
 8015a22:	3e08      	subs	r6, #8
 8015a24:	4433      	add	r3, r6
 8015a26:	f3c5 4607 	ubfx	r6, r5, #16, #8
 8015a2a:	eb06 03c3 	add.w	r3, r6, r3, lsl #3
 8015a2e:	b2db      	uxtb	r3, r3
 8015a30:	eb0e 0e8e 	add.w	lr, lr, lr, lsl #2
 8015a34:	f363 4517 	bfi	r5, r3, #16, #8
 8015a38:	fb12 ee03 	smlabb	lr, r2, r3, lr
 8015a3c:	0e2e      	lsrs	r6, r5, #24
 8015a3e:	fb11 ee0c 	smlabb	lr, r1, ip, lr
 8015a42:	fb10 e606 	smlabb	r6, r0, r6, lr
 8015a46:	e7c9      	b.n	80159dc <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x234>
 8015a48:	1c5e      	adds	r6, r3, #1
 8015a4a:	42a6      	cmp	r6, r4
 8015a4c:	dd4e      	ble.n	8015aec <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x344>
 8015a4e:	1b36      	subs	r6, r6, r4
 8015a50:	2e00      	cmp	r6, #0
 8015a52:	dc4e      	bgt.n	8015af2 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x34a>
 8015a54:	f8dd b004 	ldr.w	fp, [sp, #4]
 8015a58:	2400      	movs	r4, #0
 8015a5a:	f1bb 0f00 	cmp.w	fp, #0
 8015a5e:	f340 8122 	ble.w	8015ca6 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x4fe>
 8015a62:	1c7b      	adds	r3, r7, #1
 8015a64:	9303      	str	r3, [sp, #12]
 8015a66:	783b      	ldrb	r3, [r7, #0]
 8015a68:	b2db      	uxtb	r3, r3
 8015a6a:	2bfe      	cmp	r3, #254	@ 0xfe
 8015a6c:	d160      	bne.n	8015b30 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x388>
 8015a6e:	7879      	ldrb	r1, [r7, #1]
 8015a70:	78ba      	ldrb	r2, [r7, #2]
 8015a72:	78f8      	ldrb	r0, [r7, #3]
 8015a74:	b2c9      	uxtb	r1, r1
 8015a76:	f361 0507 	bfi	r5, r1, #0, #8
 8015a7a:	b2d2      	uxtb	r2, r2
 8015a7c:	1d3b      	adds	r3, r7, #4
 8015a7e:	f362 250f 	bfi	r5, r2, #8, #8
 8015a82:	b2c0      	uxtb	r0, r0
 8015a84:	9303      	str	r3, [sp, #12]
 8015a86:	eb02 0282 	add.w	r2, r2, r2, lsl #2
 8015a8a:	2303      	movs	r3, #3
 8015a8c:	fb13 2200 	smlabb	r2, r3, r0, r2
 8015a90:	f360 4517 	bfi	r5, r0, #16, #8
 8015a94:	2307      	movs	r3, #7
 8015a96:	fb13 2101 	smlabb	r1, r3, r1, r2
 8015a9a:	0e2e      	lsrs	r6, r5, #24
 8015a9c:	230b      	movs	r3, #11
 8015a9e:	fb13 1306 	smlabb	r3, r3, r6, r1
 8015aa2:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 8015aa6:	eb0a 0383 	add.w	r3, sl, r3, lsl #2
 8015aaa:	605d      	str	r5, [r3, #4]
 8015aac:	2601      	movs	r6, #1
 8015aae:	4637      	mov	r7, r6
 8015ab0:	0e2b      	lsrs	r3, r5, #24
 8015ab2:	ebab 0b07 	sub.w	fp, fp, r7
 8015ab6:	eba6 0607 	sub.w	r6, r6, r7
 8015aba:	f040 80d3 	bne.w	8015c64 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x4bc>
 8015abe:	b18c      	cbz	r4, 8015ae4 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x33c>
 8015ac0:	4648      	mov	r0, r9
 8015ac2:	00a1      	lsls	r1, r4, #2
 8015ac4:	f7eb fa44 	bl	8000f50 <_ZN8touchgfx5paint9flushLineEPmi>
 8015ac8:	9b05      	ldr	r3, [sp, #20]
 8015aca:	4622      	mov	r2, r4
 8015acc:	4649      	mov	r1, r9
 8015ace:	4640      	mov	r0, r8
 8015ad0:	f7eb fa8c 	bl	8000fec <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh>
 8015ad4:	4b2c      	ldr	r3, [pc, #176]	@ (8015b88 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x3e0>)
 8015ad6:	4a2d      	ldr	r2, [pc, #180]	@ (8015b8c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x3e4>)
 8015ad8:	4599      	cmp	r9, r3
 8015ada:	bf08      	it	eq
 8015adc:	4613      	moveq	r3, r2
 8015ade:	eb08 0844 	add.w	r8, r8, r4, lsl #1
 8015ae2:	4699      	mov	r9, r3
 8015ae4:	eb08 0847 	add.w	r8, r8, r7, lsl #1
 8015ae8:	2400      	movs	r4, #0
 8015aea:	e0da      	b.n	8015ca2 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x4fa>
 8015aec:	1ba6      	subs	r6, r4, r6
 8015aee:	b2b4      	uxth	r4, r6
 8015af0:	e70f      	b.n	8015912 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x16a>
 8015af2:	9b01      	ldr	r3, [sp, #4]
 8015af4:	9a01      	ldr	r2, [sp, #4]
 8015af6:	42b3      	cmp	r3, r6
 8015af8:	bfa8      	it	ge
 8015afa:	4633      	movge	r3, r6
 8015afc:	0e2c      	lsrs	r4, r5, #24
 8015afe:	eba2 0b03 	sub.w	fp, r2, r3
 8015b02:	eba6 0603 	sub.w	r6, r6, r3
 8015b06:	d00b      	beq.n	8015b20 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x378>
 8015b08:	f1a9 0104 	sub.w	r1, r9, #4
 8015b0c:	461a      	mov	r2, r3
 8015b0e:	2a00      	cmp	r2, #0
 8015b10:	dc02      	bgt.n	8015b18 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x370>
 8015b12:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 8015b16:	e7a0      	b.n	8015a5a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x2b2>
 8015b18:	f841 5f04 	str.w	r5, [r1, #4]!
 8015b1c:	3a01      	subs	r2, #1
 8015b1e:	e7f6      	b.n	8015b0e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x366>
 8015b20:	eb08 0843 	add.w	r8, r8, r3, lsl #1
 8015b24:	e799      	b.n	8015a5a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x2b2>
 8015b26:	4637      	mov	r7, r6
 8015b28:	f8dd b004 	ldr.w	fp, [sp, #4]
 8015b2c:	4626      	mov	r6, r4
 8015b2e:	e794      	b.n	8015a5a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x2b2>
 8015b30:	2bff      	cmp	r3, #255	@ 0xff
 8015b32:	d11d      	bne.n	8015b70 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x3c8>
 8015b34:	7878      	ldrb	r0, [r7, #1]
 8015b36:	78ba      	ldrb	r2, [r7, #2]
 8015b38:	78fe      	ldrb	r6, [r7, #3]
 8015b3a:	1d7b      	adds	r3, r7, #5
 8015b3c:	b2c0      	uxtb	r0, r0
 8015b3e:	9303      	str	r3, [sp, #12]
 8015b40:	793b      	ldrb	r3, [r7, #4]
 8015b42:	f360 0507 	bfi	r5, r0, #0, #8
 8015b46:	b2d2      	uxtb	r2, r2
 8015b48:	b2d9      	uxtb	r1, r3
 8015b4a:	f362 250f 	bfi	r5, r2, #8, #8
 8015b4e:	b2f6      	uxtb	r6, r6
 8015b50:	2303      	movs	r3, #3
 8015b52:	eb02 0282 	add.w	r2, r2, r2, lsl #2
 8015b56:	fb13 2206 	smlabb	r2, r3, r6, r2
 8015b5a:	2307      	movs	r3, #7
 8015b5c:	fb13 2000 	smlabb	r0, r3, r0, r2
 8015b60:	f366 4517 	bfi	r5, r6, #16, #8
 8015b64:	230b      	movs	r3, #11
 8015b66:	f361 651f 	bfi	r5, r1, #24, #8
 8015b6a:	fb13 0301 	smlabb	r3, r3, r1, r0
 8015b6e:	e798      	b.n	8015aa2 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x2fa>
 8015b70:	119e      	asrs	r6, r3, #6
 8015b72:	d10d      	bne.n	8015b90 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x3e8>
 8015b74:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 8015b78:	eb0a 0383 	add.w	r3, sl, r3, lsl #2
 8015b7c:	685d      	ldr	r5, [r3, #4]
 8015b7e:	e795      	b.n	8015aac <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x304>
 8015b80:	20013f2c 	.word	0x20013f2c
 8015b84:	20013f24 	.word	0x20013f24
 8015b88:	20000280 	.word	0x20000280
 8015b8c:	20000380 	.word	0x20000380
 8015b90:	2e01      	cmp	r6, #1
 8015b92:	ea4f 6115 	mov.w	r1, r5, lsr #24
 8015b96:	d12b      	bne.n	8015bf0 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x448>
 8015b98:	f003 0003 	and.w	r0, r3, #3
 8015b9c:	3802      	subs	r0, #2
 8015b9e:	eb05 00c0 	add.w	r0, r5, r0, lsl #3
 8015ba2:	b2c0      	uxtb	r0, r0
 8015ba4:	f003 020c 	and.w	r2, r3, #12
 8015ba8:	f360 0507 	bfi	r5, r0, #0, #8
 8015bac:	3a08      	subs	r2, #8
 8015bae:	eb02 2215 	add.w	r2, r2, r5, lsr #8
 8015bb2:	f002 02ff 	and.w	r2, r2, #255	@ 0xff
 8015bb6:	f362 250f 	bfi	r5, r2, #8, #8
 8015bba:	f3c3 1301 	ubfx	r3, r3, #4, #2
 8015bbe:	1e9f      	subs	r7, r3, #2
 8015bc0:	f3c5 4307 	ubfx	r3, r5, #16, #8
 8015bc4:	eb03 03c7 	add.w	r3, r3, r7, lsl #3
 8015bc8:	b2db      	uxtb	r3, r3
 8015bca:	2703      	movs	r7, #3
 8015bcc:	eb02 0282 	add.w	r2, r2, r2, lsl #2
 8015bd0:	fb17 2203 	smlabb	r2, r7, r3, r2
 8015bd4:	2707      	movs	r7, #7
 8015bd6:	f363 4517 	bfi	r5, r3, #16, #8
 8015bda:	fb17 2000 	smlabb	r0, r7, r0, r2
 8015bde:	230b      	movs	r3, #11
 8015be0:	fb13 0101 	smlabb	r1, r3, r1, r0
 8015be4:	f001 013f 	and.w	r1, r1, #63	@ 0x3f
 8015be8:	eb0a 0181 	add.w	r1, sl, r1, lsl #2
 8015bec:	604d      	str	r5, [r1, #4]
 8015bee:	e75e      	b.n	8015aae <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x306>
 8015bf0:	2e02      	cmp	r6, #2
 8015bf2:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 8015bf6:	d12f      	bne.n	8015c58 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x4b0>
 8015bf8:	7878      	ldrb	r0, [r7, #1]
 8015bfa:	1cba      	adds	r2, r7, #2
 8015bfc:	b2c0      	uxtb	r0, r0
 8015bfe:	9203      	str	r2, [sp, #12]
 8015c00:	f000 020f 	and.w	r2, r0, #15
 8015c04:	3b20      	subs	r3, #32
 8015c06:	3a08      	subs	r2, #8
 8015c08:	441a      	add	r2, r3
 8015c0a:	eb05 02c2 	add.w	r2, r5, r2, lsl #3
 8015c0e:	b2d2      	uxtb	r2, r2
 8015c10:	f362 0507 	bfi	r5, r2, #0, #8
 8015c14:	f3c5 2607 	ubfx	r6, r5, #8, #8
 8015c18:	eb06 0683 	add.w	r6, r6, r3, lsl #2
 8015c1c:	b2f6      	uxtb	r6, r6
 8015c1e:	1100      	asrs	r0, r0, #4
 8015c20:	f366 250f 	bfi	r5, r6, #8, #8
 8015c24:	3808      	subs	r0, #8
 8015c26:	4403      	add	r3, r0
 8015c28:	f3c5 4007 	ubfx	r0, r5, #16, #8
 8015c2c:	eb00 03c3 	add.w	r3, r0, r3, lsl #3
 8015c30:	b2db      	uxtb	r3, r3
 8015c32:	2003      	movs	r0, #3
 8015c34:	eb06 0686 	add.w	r6, r6, r6, lsl #2
 8015c38:	fb10 6603 	smlabb	r6, r0, r3, r6
 8015c3c:	2007      	movs	r0, #7
 8015c3e:	f363 4517 	bfi	r5, r3, #16, #8
 8015c42:	fb10 6202 	smlabb	r2, r0, r2, r6
 8015c46:	230b      	movs	r3, #11
 8015c48:	fb13 2101 	smlabb	r1, r3, r1, r2
 8015c4c:	f001 013f 	and.w	r1, r1, #63	@ 0x3f
 8015c50:	eb0a 0181 	add.w	r1, sl, r1, lsl #2
 8015c54:	604d      	str	r5, [r1, #4]
 8015c56:	e729      	b.n	8015aac <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x304>
 8015c58:	1c5e      	adds	r6, r3, #1
 8015c5a:	45b3      	cmp	fp, r6
 8015c5c:	465f      	mov	r7, fp
 8015c5e:	bfa8      	it	ge
 8015c60:	4637      	movge	r7, r6
 8015c62:	e725      	b.n	8015ab0 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x308>
 8015c64:	193b      	adds	r3, r7, r4
 8015c66:	2b40      	cmp	r3, #64	@ 0x40
 8015c68:	dd13      	ble.n	8015c92 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x4ea>
 8015c6a:	4648      	mov	r0, r9
 8015c6c:	00a1      	lsls	r1, r4, #2
 8015c6e:	f7eb f96f 	bl	8000f50 <_ZN8touchgfx5paint9flushLineEPmi>
 8015c72:	4649      	mov	r1, r9
 8015c74:	9b05      	ldr	r3, [sp, #20]
 8015c76:	4622      	mov	r2, r4
 8015c78:	4640      	mov	r0, r8
 8015c7a:	f7eb f9b7 	bl	8000fec <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh>
 8015c7e:	4b2d      	ldr	r3, [pc, #180]	@ (8015d34 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x58c>)
 8015c80:	4599      	cmp	r9, r3
 8015c82:	bf0c      	ite	eq
 8015c84:	f8df 90b8 	ldreq.w	r9, [pc, #184]	@ 8015d40 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x598>
 8015c88:	f8df 90a8 	ldrne.w	r9, [pc, #168]	@ 8015d34 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x58c>
 8015c8c:	eb08 0844 	add.w	r8, r8, r4, lsl #1
 8015c90:	2400      	movs	r4, #0
 8015c92:	eb09 0284 	add.w	r2, r9, r4, lsl #2
 8015c96:	463b      	mov	r3, r7
 8015c98:	3b01      	subs	r3, #1
 8015c9a:	f842 5b04 	str.w	r5, [r2], #4
 8015c9e:	d1fb      	bne.n	8015c98 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x4f0>
 8015ca0:	443c      	add	r4, r7
 8015ca2:	9f03      	ldr	r7, [sp, #12]
 8015ca4:	e6d9      	b.n	8015a5a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x2b2>
 8015ca6:	b15c      	cbz	r4, 8015cc0 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x518>
 8015ca8:	00a1      	lsls	r1, r4, #2
 8015caa:	4648      	mov	r0, r9
 8015cac:	f7eb f950 	bl	8000f50 <_ZN8touchgfx5paint9flushLineEPmi>
 8015cb0:	4640      	mov	r0, r8
 8015cb2:	9b05      	ldr	r3, [sp, #20]
 8015cb4:	4622      	mov	r2, r4
 8015cb6:	4649      	mov	r1, r9
 8015cb8:	f7eb f998 	bl	8000fec <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh>
 8015cbc:	eb08 0844 	add.w	r8, r8, r4, lsl #1
 8015cc0:	4b1d      	ldr	r3, [pc, #116]	@ (8015d38 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x590>)
 8015cc2:	9a01      	ldr	r2, [sp, #4]
 8015cc4:	881b      	ldrh	r3, [r3, #0]
 8015cc6:	1a9b      	subs	r3, r3, r2
 8015cc8:	eb08 0843 	add.w	r8, r8, r3, lsl #1
 8015ccc:	9b04      	ldr	r3, [sp, #16]
 8015cce:	3301      	adds	r3, #1
 8015cd0:	9304      	str	r3, [sp, #16]
 8015cd2:	9a04      	ldr	r2, [sp, #16]
 8015cd4:	9b00      	ldr	r3, [sp, #0]
 8015cd6:	4293      	cmp	r3, r2
 8015cd8:	d11d      	bne.n	8015d16 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x56e>
 8015cda:	9b02      	ldr	r3, [sp, #8]
 8015cdc:	9a02      	ldr	r2, [sp, #8]
 8015cde:	f8bd 4030 	ldrh.w	r4, [sp, #48]	@ 0x30
 8015ce2:	f8bd 6028 	ldrh.w	r6, [sp, #40]	@ 0x28
 8015ce6:	9808      	ldr	r0, [sp, #32]
 8015ce8:	f103 0b01 	add.w	fp, r3, #1
 8015cec:	9b06      	ldr	r3, [sp, #24]
 8015cee:	f853 7022 	ldr.w	r7, [r3, r2, lsl #2]
 8015cf2:	9b07      	ldr	r3, [sp, #28]
 8015cf4:	2500      	movs	r5, #0
 8015cf6:	ba3f      	rev	r7, r7
 8015cf8:	1ba4      	subs	r4, r4, r6
 8015cfa:	f44f 7280 	mov.w	r2, #256	@ 0x100
 8015cfe:	4629      	mov	r1, r5
 8015d00:	441f      	add	r7, r3
 8015d02:	b2a4      	uxth	r4, r4
 8015d04:	f00c ffdb 	bl	8022cbe <memset>
 8015d08:	f8cd b008 	str.w	fp, [sp, #8]
 8015d0c:	9504      	str	r5, [sp, #16]
 8015d0e:	f7eb f915 	bl	8000f3c <_ZN8touchgfx5paint8tearDownEv>
 8015d12:	463e      	mov	r6, r7
 8015d14:	e5cc      	b.n	80158b0 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x108>
 8015d16:	f8bd 402c 	ldrh.w	r4, [sp, #44]	@ 0x2c
 8015d1a:	9b01      	ldr	r3, [sp, #4]
 8015d1c:	1ae4      	subs	r4, r4, r3
 8015d1e:	1ba4      	subs	r4, r4, r6
 8015d20:	b2a4      	uxth	r4, r4
 8015d22:	e7f4      	b.n	8015d0e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x566>
 8015d24:	4b05      	ldr	r3, [pc, #20]	@ (8015d3c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x594>)
 8015d26:	6818      	ldr	r0, [r3, #0]
 8015d28:	6803      	ldr	r3, [r0, #0]
 8015d2a:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8015d2c:	4798      	blx	r3
 8015d2e:	b00f      	add	sp, #60	@ 0x3c
 8015d30:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8015d34:	20000280 	.word	0x20000280
 8015d38:	20013f24 	.word	0x20013f24
 8015d3c:	20013f2c 	.word	0x20013f2c
 8015d40:	20000380 	.word	0x20000380

08015d44 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
 8015d44:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015d48:	b08f      	sub	sp, #60	@ 0x3c
 8015d4a:	461c      	mov	r4, r3
 8015d4c:	9205      	str	r2, [sp, #20]
 8015d4e:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 8015d52:	9100      	str	r1, [sp, #0]
 8015d54:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 8015d56:	9201      	str	r2, [sp, #4]
 8015d58:	2a00      	cmp	r2, #0
 8015d5a:	f000 8115 	beq.w	8015f88 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x244>
 8015d5e:	6820      	ldr	r0, [r4, #0]
 8015d60:	6861      	ldr	r1, [r4, #4]
 8015d62:	aa0a      	add	r2, sp, #40	@ 0x28
 8015d64:	c203      	stmia	r2!, {r0, r1}
 8015d66:	6818      	ldr	r0, [r3, #0]
 8015d68:	6859      	ldr	r1, [r3, #4]
 8015d6a:	aa0c      	add	r2, sp, #48	@ 0x30
 8015d6c:	c203      	stmia	r2!, {r0, r1}
 8015d6e:	a80a      	add	r0, sp, #40	@ 0x28
 8015d70:	f7f9 fa34 	bl	800f1dc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8015d74:	4621      	mov	r1, r4
 8015d76:	a80c      	add	r0, sp, #48	@ 0x30
 8015d78:	f7f9 fa58 	bl	800f22c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8015d7c:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	@ 0x2c
 8015d80:	f9bd 502e 	ldrsh.w	r5, [sp, #46]	@ 0x2e
 8015d84:	f8bd 0030 	ldrh.w	r0, [sp, #48]	@ 0x30
 8015d88:	f5b6 6f80 	cmp.w	r6, #1024	@ 0x400
 8015d8c:	bfde      	ittt	le
 8015d8e:	b2b3      	uxthle	r3, r6
 8015d90:	f44f 6280 	movle.w	r2, #1024	@ 0x400
 8015d94:	fb92 f3f3 	sdivle	r3, r2, r3
 8015d98:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	@ 0x32
 8015d9c:	bfc8      	it	gt
 8015d9e:	2301      	movgt	r3, #1
 8015da0:	fb92 f1f3 	sdiv	r1, r2, r3
 8015da4:	fa1f fc81 	uxth.w	ip, r1
 8015da8:	fb0c 2413 	mls	r4, ip, r3, r2
 8015dac:	fb14 f406 	smulbb	r4, r4, r6
 8015db0:	441d      	add	r5, r3
 8015db2:	4404      	add	r4, r0
 8015db4:	4661      	mov	r1, ip
 8015db6:	3d01      	subs	r5, #1
 8015db8:	b2a4      	uxth	r4, r4
 8015dba:	fb95 f5f3 	sdiv	r5, r5, r3
 8015dbe:	b131      	cbz	r1, 8015dce <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x8a>
 8015dc0:	9b05      	ldr	r3, [sp, #20]
 8015dc2:	9900      	ldr	r1, [sp, #0]
 8015dc4:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 8015dc8:	ba1b      	rev	r3, r3
 8015dca:	4419      	add	r1, r3
 8015dcc:	9100      	str	r1, [sp, #0]
 8015dce:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
 8015dd2:	f9bd 8034 	ldrsh.w	r8, [sp, #52]	@ 0x34
 8015dd6:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	@ 0x36
 8015dda:	4418      	add	r0, r3
 8015ddc:	f8bd 302a 	ldrh.w	r3, [sp, #42]	@ 0x2a
 8015de0:	f8ad 0030 	strh.w	r0, [sp, #48]	@ 0x30
 8015de4:	441a      	add	r2, r3
 8015de6:	4b6a      	ldr	r3, [pc, #424]	@ (8015f90 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x24c>)
 8015de8:	f8ad 2032 	strh.w	r2, [sp, #50]	@ 0x32
 8015dec:	6818      	ldr	r0, [r3, #0]
 8015dee:	6803      	ldr	r3, [r0, #0]
 8015df0:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8015df2:	4798      	blx	r3
 8015df4:	4967      	ldr	r1, [pc, #412]	@ (8015f94 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x250>)
 8015df6:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	@ 0x32
 8015dfa:	880b      	ldrh	r3, [r1, #0]
 8015dfc:	f9bd c030 	ldrsh.w	ip, [sp, #48]	@ 0x30
 8015e00:	9109      	str	r1, [sp, #36]	@ 0x24
 8015e02:	fb03 c202 	mla	r2, r3, r2, ip
 8015e06:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8015e0a:	4373      	muls	r3, r6
 8015e0c:	b2ad      	uxth	r5, r5
 8015e0e:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8015e12:	00ad      	lsls	r5, r5, #2
 8015e14:	9306      	str	r3, [sp, #24]
 8015e16:	1d2b      	adds	r3, r5, #4
 8015e18:	9307      	str	r3, [sp, #28]
 8015e1a:	9b01      	ldr	r3, [sp, #4]
 8015e1c:	f8bd 1004 	ldrh.w	r1, [sp, #4]
 8015e20:	9103      	str	r1, [sp, #12]
 8015e22:	f1c3 02ff 	rsb	r2, r3, #255	@ 0xff
 8015e26:	2c00      	cmp	r4, #0
 8015e28:	bf0c      	ite	eq
 8015e2a:	46c6      	moveq	lr, r8
 8015e2c:	f04f 0e00 	movne.w	lr, #0
 8015e30:	2300      	movs	r3, #0
 8015e32:	b292      	uxth	r2, r2
 8015e34:	fa1f fe8e 	uxth.w	lr, lr
 8015e38:	9302      	str	r3, [sp, #8]
 8015e3a:	9204      	str	r2, [sp, #16]
 8015e3c:	9a06      	ldr	r2, [sp, #24]
 8015e3e:	4282      	cmp	r2, r0
 8015e40:	f240 809d 	bls.w	8015f7e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x23a>
 8015e44:	b963      	cbnz	r3, 8015e60 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x11c>
 8015e46:	9b00      	ldr	r3, [sp, #0]
 8015e48:	781a      	ldrb	r2, [r3, #0]
 8015e4a:	0993      	lsrs	r3, r2, #6
 8015e4c:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
 8015e50:	9202      	str	r2, [sp, #8]
 8015e52:	1e5a      	subs	r2, r3, #1
 8015e54:	2a02      	cmp	r2, #2
 8015e56:	d815      	bhi.n	8015e84 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x140>
 8015e58:	9a00      	ldr	r2, [sp, #0]
 8015e5a:	3201      	adds	r2, #1
 8015e5c:	9200      	str	r2, [sp, #0]
 8015e5e:	b29b      	uxth	r3, r3
 8015e60:	b1b4      	cbz	r4, 8015e90 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x14c>
 8015e62:	429c      	cmp	r4, r3
 8015e64:	bf95      	itete	ls
 8015e66:	1b1c      	subls	r4, r3, r4
 8015e68:	1ae4      	subhi	r4, r4, r3
 8015e6a:	fa1f fa84 	uxthls.w	sl, r4
 8015e6e:	b2a4      	uxthhi	r4, r4
 8015e70:	bf87      	ittee	hi
 8015e72:	4671      	movhi	r1, lr
 8015e74:	f04f 0a00 	movhi.w	sl, #0
 8015e78:	fa1f f188 	uxthls.w	r1, r8
 8015e7c:	2400      	movls	r4, #0
 8015e7e:	4653      	mov	r3, sl
 8015e80:	468e      	mov	lr, r1
 8015e82:	e7db      	b.n	8015e3c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xf8>
 8015e84:	9a00      	ldr	r2, [sp, #0]
 8015e86:	9b00      	ldr	r3, [sp, #0]
 8015e88:	3202      	adds	r2, #2
 8015e8a:	785b      	ldrb	r3, [r3, #1]
 8015e8c:	9200      	str	r2, [sp, #0]
 8015e8e:	e7e7      	b.n	8015e60 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x11c>
 8015e90:	2202      	movs	r2, #2
 8015e92:	4615      	mov	r5, r2
 8015e94:	9907      	ldr	r1, [sp, #28]
 8015e96:	9a02      	ldr	r2, [sp, #8]
 8015e98:	fb15 1202 	smlabb	r2, r5, r2, r1
 8015e9c:	9905      	ldr	r1, [sp, #20]
 8015e9e:	4573      	cmp	r3, lr
 8015ea0:	f831 c002 	ldrh.w	ip, [r1, r2]
 8015ea4:	9a01      	ldr	r2, [sp, #4]
 8015ea6:	bf2b      	itete	cs
 8015ea8:	eba3 0a0e 	subcs.w	sl, r3, lr
 8015eac:	ebae 0103 	subcc.w	r1, lr, r3
 8015eb0:	46f1      	movcs	r9, lr
 8015eb2:	4699      	movcc	r9, r3
 8015eb4:	bf27      	ittee	cs
 8015eb6:	fa1f fa8a 	uxthcs.w	sl, sl
 8015eba:	4621      	movcs	r1, r4
 8015ebc:	b289      	uxthcc	r1, r1
 8015ebe:	46a2      	movcc	sl, r4
 8015ec0:	2aff      	cmp	r2, #255	@ 0xff
 8015ec2:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8015ec6:	d105      	bne.n	8015ed4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x190>
 8015ec8:	4481      	add	r9, r0
 8015eca:	4581      	cmp	r9, r0
 8015ecc:	d045      	beq.n	8015f5a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x216>
 8015ece:	f820 cb02 	strh.w	ip, [r0], #2
 8015ed2:	e7fa      	b.n	8015eca <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x186>
 8015ed4:	9d03      	ldr	r5, [sp, #12]
 8015ed6:	ea4f 222c 	mov.w	r2, ip, asr #8
 8015eda:	ea4f 0bec 	mov.w	fp, ip, asr #3
 8015ede:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
 8015ee2:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8015ee6:	436a      	muls	r2, r5
 8015ee8:	f00b 0bfc 	and.w	fp, fp, #252	@ 0xfc
 8015eec:	fa5f fc8c 	uxtb.w	ip, ip
 8015ef0:	9208      	str	r2, [sp, #32]
 8015ef2:	fb0b fb05 	mul.w	fp, fp, r5
 8015ef6:	fb0c fc05 	mul.w	ip, ip, r5
 8015efa:	4481      	add	r9, r0
 8015efc:	4581      	cmp	r9, r0
 8015efe:	d02c      	beq.n	8015f5a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x216>
 8015f00:	8802      	ldrh	r2, [r0, #0]
 8015f02:	9d04      	ldr	r5, [sp, #16]
 8015f04:	9f04      	ldr	r7, [sp, #16]
 8015f06:	1216      	asrs	r6, r2, #8
 8015f08:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 8015f0c:	fb16 f605 	smulbb	r6, r6, r5
 8015f10:	9d08      	ldr	r5, [sp, #32]
 8015f12:	442e      	add	r6, r5
 8015f14:	10d5      	asrs	r5, r2, #3
 8015f16:	00d2      	lsls	r2, r2, #3
 8015f18:	b2d2      	uxtb	r2, r2
 8015f1a:	fb12 f207 	smulbb	r2, r2, r7
 8015f1e:	b2b6      	uxth	r6, r6
 8015f20:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 8015f24:	4462      	add	r2, ip
 8015f26:	fb15 f507 	smulbb	r5, r5, r7
 8015f2a:	b292      	uxth	r2, r2
 8015f2c:	1c77      	adds	r7, r6, #1
 8015f2e:	eb07 2616 	add.w	r6, r7, r6, lsr #8
 8015f32:	1c57      	adds	r7, r2, #1
 8015f34:	445d      	add	r5, fp
 8015f36:	eb07 2212 	add.w	r2, r7, r2, lsr #8
 8015f3a:	b2ad      	uxth	r5, r5
 8015f3c:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8015f40:	f406 4678 	and.w	r6, r6, #63488	@ 0xf800
 8015f44:	4316      	orrs	r6, r2
 8015f46:	1c6a      	adds	r2, r5, #1
 8015f48:	eb02 2515 	add.w	r5, r2, r5, lsr #8
 8015f4c:	096d      	lsrs	r5, r5, #5
 8015f4e:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 8015f52:	432e      	orrs	r6, r5
 8015f54:	f820 6b02 	strh.w	r6, [r0], #2
 8015f58:	e7d0      	b.n	8015efc <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1b8>
 8015f5a:	4573      	cmp	r3, lr
 8015f5c:	d38f      	bcc.n	8015e7e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x13a>
 8015f5e:	f8bd 402c 	ldrh.w	r4, [sp, #44]	@ 0x2c
 8015f62:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8015f64:	fa1f f188 	uxth.w	r1, r8
 8015f68:	1a64      	subs	r4, r4, r1
 8015f6a:	881b      	ldrh	r3, [r3, #0]
 8015f6c:	b2a4      	uxth	r4, r4
 8015f6e:	2c00      	cmp	r4, #0
 8015f70:	eba3 0308 	sub.w	r3, r3, r8
 8015f74:	bf18      	it	ne
 8015f76:	2100      	movne	r1, #0
 8015f78:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8015f7c:	e77f      	b.n	8015e7e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x13a>
 8015f7e:	4b04      	ldr	r3, [pc, #16]	@ (8015f90 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x24c>)
 8015f80:	6818      	ldr	r0, [r3, #0]
 8015f82:	6803      	ldr	r3, [r0, #0]
 8015f84:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8015f86:	4798      	blx	r3
 8015f88:	b00f      	add	sp, #60	@ 0x3c
 8015f8a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8015f8e:	bf00      	nop
 8015f90:	20013f2c 	.word	0x20013f2c
 8015f94:	20013f24 	.word	0x20013f24

08015f98 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
 8015f98:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015f9c:	b09f      	sub	sp, #124	@ 0x7c
 8015f9e:	e9cd 1213 	strd	r1, r2, [sp, #76]	@ 0x4c
 8015fa2:	f89d 20a4 	ldrb.w	r2, [sp, #164]	@ 0xa4
 8015fa6:	9209      	str	r2, [sp, #36]	@ 0x24
 8015fa8:	461d      	mov	r5, r3
 8015faa:	4604      	mov	r4, r0
 8015fac:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 8015fae:	2a00      	cmp	r2, #0
 8015fb0:	f000 81eb 	beq.w	801638a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3f2>
 8015fb4:	6828      	ldr	r0, [r5, #0]
 8015fb6:	6869      	ldr	r1, [r5, #4]
 8015fb8:	aa1a      	add	r2, sp, #104	@ 0x68
 8015fba:	c203      	stmia	r2!, {r0, r1}
 8015fbc:	6818      	ldr	r0, [r3, #0]
 8015fbe:	6859      	ldr	r1, [r3, #4]
 8015fc0:	aa1c      	add	r2, sp, #112	@ 0x70
 8015fc2:	c203      	stmia	r2!, {r0, r1}
 8015fc4:	a81a      	add	r0, sp, #104	@ 0x68
 8015fc6:	f7f9 f909 	bl	800f1dc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8015fca:	4629      	mov	r1, r5
 8015fcc:	a81c      	add	r0, sp, #112	@ 0x70
 8015fce:	f7f9 f92d 	bl	800f22c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8015fd2:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	@ 0x6c
 8015fd6:	f9bd 806e 	ldrsh.w	r8, [sp, #110]	@ 0x6e
 8015fda:	f9bd 6076 	ldrsh.w	r6, [sp, #118]	@ 0x76
 8015fde:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 8015fe2:	bfd7      	itett	le
 8015fe4:	b29a      	uxthle	r2, r3
 8015fe6:	2201      	movgt	r2, #1
 8015fe8:	f44f 6180 	movle.w	r1, #1024	@ 0x400
 8015fec:	fb91 f2f2 	sdivle	r2, r1, r2
 8015ff0:	9202      	str	r2, [sp, #8]
 8015ff2:	9802      	ldr	r0, [sp, #8]
 8015ff4:	f9bd 2072 	ldrsh.w	r2, [sp, #114]	@ 0x72
 8015ff8:	fb92 f0f0 	sdiv	r0, r2, r0
 8015ffc:	b280      	uxth	r0, r0
 8015ffe:	9010      	str	r0, [sp, #64]	@ 0x40
 8016000:	9902      	ldr	r1, [sp, #8]
 8016002:	9802      	ldr	r0, [sp, #8]
 8016004:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 8016006:	4488      	add	r8, r1
 8016008:	fb05 2510 	mls	r5, r5, r0, r2
 801600c:	fb15 f503 	smulbb	r5, r5, r3
 8016010:	f108 38ff 	add.w	r8, r8, #4294967295
 8016014:	f8bd 3068 	ldrh.w	r3, [sp, #104]	@ 0x68
 8016018:	fb98 f8f1 	sdiv	r8, r8, r1
 801601c:	f8bd 1070 	ldrh.w	r1, [sp, #112]	@ 0x70
 8016020:	440d      	add	r5, r1
 8016022:	4419      	add	r1, r3
 8016024:	f8bd 306a 	ldrh.w	r3, [sp, #106]	@ 0x6a
 8016028:	f8ad 1070 	strh.w	r1, [sp, #112]	@ 0x70
 801602c:	441a      	add	r2, r3
 801602e:	f9bd 3074 	ldrsh.w	r3, [sp, #116]	@ 0x74
 8016032:	9304      	str	r3, [sp, #16]
 8016034:	4b95      	ldr	r3, [pc, #596]	@ (801628c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2f4>)
 8016036:	f8ad 2072 	strh.w	r2, [sp, #114]	@ 0x72
 801603a:	6818      	ldr	r0, [r3, #0]
 801603c:	6803      	ldr	r3, [r0, #0]
 801603e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8016040:	4798      	blx	r3
 8016042:	4b93      	ldr	r3, [pc, #588]	@ (8016290 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2f8>)
 8016044:	f9bd 1072 	ldrsh.w	r1, [sp, #114]	@ 0x72
 8016048:	881a      	ldrh	r2, [r3, #0]
 801604a:	f9bd 7070 	ldrsh.w	r7, [sp, #112]	@ 0x70
 801604e:	9318      	str	r3, [sp, #96]	@ 0x60
 8016050:	fb02 7101 	mla	r1, r2, r1, r7
 8016054:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 8016058:	4356      	muls	r6, r2
 801605a:	eb00 0246 	add.w	r2, r0, r6, lsl #1
 801605e:	f108 0801 	add.w	r8, r8, #1
 8016062:	920a      	str	r2, [sp, #40]	@ 0x28
 8016064:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8016066:	f8bd 3024 	ldrh.w	r3, [sp, #36]	@ 0x24
 801606a:	930f      	str	r3, [sp, #60]	@ 0x3c
 801606c:	fa1f f888 	uxth.w	r8, r8
 8016070:	eb02 0888 	add.w	r8, r2, r8, lsl #2
 8016074:	f108 0204 	add.w	r2, r8, #4
 8016078:	9211      	str	r2, [sp, #68]	@ 0x44
 801607a:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 801607c:	4b85      	ldr	r3, [pc, #532]	@ (8016294 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2fc>)
 801607e:	f1c2 02ff 	rsb	r2, r2, #255	@ 0xff
 8016082:	b2ad      	uxth	r5, r5
 8016084:	9215      	str	r2, [sp, #84]	@ 0x54
 8016086:	2d00      	cmp	r5, #0
 8016088:	9a04      	ldr	r2, [sp, #16]
 801608a:	f04f 0100 	mov.w	r1, #0
 801608e:	bf18      	it	ne
 8016090:	2200      	movne	r2, #0
 8016092:	1b1b      	subs	r3, r3, r4
 8016094:	b292      	uxth	r2, r2
 8016096:	910d      	str	r1, [sp, #52]	@ 0x34
 8016098:	9319      	str	r3, [sp, #100]	@ 0x64
 801609a:	9910      	ldr	r1, [sp, #64]	@ 0x40
 801609c:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801609e:	fa11 f383 	uxtah	r3, r1, r3
 80160a2:	9914      	ldr	r1, [sp, #80]	@ 0x50
 80160a4:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 80160a8:	3304      	adds	r3, #4
 80160aa:	9306      	str	r3, [sp, #24]
 80160ac:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 80160ae:	4283      	cmp	r3, r0
 80160b0:	f240 8166 	bls.w	8016380 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3e8>
 80160b4:	9902      	ldr	r1, [sp, #8]
 80160b6:	f8bd 306c 	ldrh.w	r3, [sp, #108]	@ 0x6c
 80160ba:	fbb5 f3f3 	udiv	r3, r5, r3
 80160be:	1acb      	subs	r3, r1, r3
 80160c0:	b29b      	uxth	r3, r3
 80160c2:	9316      	str	r3, [sp, #88]	@ 0x58
 80160c4:	9b06      	ldr	r3, [sp, #24]
 80160c6:	9e06      	ldr	r6, [sp, #24]
 80160c8:	7859      	ldrb	r1, [r3, #1]
 80160ca:	789b      	ldrb	r3, [r3, #2]
 80160cc:	7836      	ldrb	r6, [r6, #0]
 80160ce:	9612      	str	r6, [sp, #72]	@ 0x48
 80160d0:	021b      	lsls	r3, r3, #8
 80160d2:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 80160d6:	9906      	ldr	r1, [sp, #24]
 80160d8:	78c9      	ldrb	r1, [r1, #3]
 80160da:	430b      	orrs	r3, r1
 80160dc:	9913      	ldr	r1, [sp, #76]	@ 0x4c
 80160de:	3601      	adds	r6, #1
 80160e0:	4419      	add	r1, r3
 80160e2:	9605      	str	r6, [sp, #20]
 80160e4:	1c4e      	adds	r6, r1, #1
 80160e6:	9603      	str	r6, [sp, #12]
 80160e8:	7849      	ldrb	r1, [r1, #1]
 80160ea:	9e13      	ldr	r6, [sp, #76]	@ 0x4c
 80160ec:	0209      	lsls	r1, r1, #8
 80160ee:	5cf3      	ldrb	r3, [r6, r3]
 80160f0:	f401 71ff 	and.w	r1, r1, #510	@ 0x1fe
 80160f4:	4319      	orrs	r1, r3
 80160f6:	b28b      	uxth	r3, r1
 80160f8:	930c      	str	r3, [sp, #48]	@ 0x30
 80160fa:	2300      	movs	r3, #0
 80160fc:	f04f 0a01 	mov.w	sl, #1
 8016100:	9307      	str	r3, [sp, #28]
 8016102:	469c      	mov	ip, r3
 8016104:	f8bd 3054 	ldrh.w	r3, [sp, #84]	@ 0x54
 8016108:	f884 1804 	strb.w	r1, [r4, #2052]	@ 0x804
 801610c:	46d3      	mov	fp, sl
 801610e:	4657      	mov	r7, sl
 8016110:	930e      	str	r3, [sp, #56]	@ 0x38
 8016112:	2d00      	cmp	r5, #0
 8016114:	d07e      	beq.n	8016214 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x27c>
 8016116:	42af      	cmp	r7, r5
 8016118:	d26e      	bcs.n	80161f8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x260>
 801611a:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801611c:	9201      	str	r2, [sp, #4]
 801611e:	1bed      	subs	r5, r5, r7
 8016120:	4283      	cmp	r3, r0
 8016122:	b2ad      	uxth	r5, r5
 8016124:	d802      	bhi.n	801612c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x194>
 8016126:	e073      	b.n	8016210 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x278>
 8016128:	2b00      	cmp	r3, #0
 801612a:	d15f      	bne.n	80161ec <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x254>
 801612c:	9b03      	ldr	r3, [sp, #12]
 801612e:	785b      	ldrb	r3, [r3, #1]
 8016130:	f1cb 0207 	rsb	r2, fp, #7
 8016134:	4093      	lsls	r3, r2
 8016136:	005b      	lsls	r3, r3, #1
 8016138:	f403 72ff 	and.w	r2, r3, #510	@ 0x1fe
 801613c:	9b03      	ldr	r3, [sp, #12]
 801613e:	781b      	ldrb	r3, [r3, #0]
 8016140:	fa43 f30b 	asr.w	r3, r3, fp
 8016144:	b2db      	uxtb	r3, r3
 8016146:	4313      	orrs	r3, r2
 8016148:	f10b 0201 	add.w	r2, fp, #1
 801614c:	fa5f fb82 	uxtb.w	fp, r2
 8016150:	9a03      	ldr	r2, [sp, #12]
 8016152:	f1bb 0f08 	cmp.w	fp, #8
 8016156:	bf15      	itete	ne
 8016158:	3201      	addne	r2, #1
 801615a:	3202      	addeq	r2, #2
 801615c:	9203      	strne	r2, [sp, #12]
 801615e:	9203      	streq	r2, [sp, #12]
 8016160:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 8016162:	b29f      	uxth	r7, r3
 8016164:	bf08      	it	eq
 8016166:	f04f 0b00 	moveq.w	fp, #0
 801616a:	42ba      	cmp	r2, r7
 801616c:	d309      	bcc.n	8016182 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1ea>
 801616e:	f884 3804 	strb.w	r3, [r4, #2052]	@ 0x804
 8016172:	2301      	movs	r3, #1
 8016174:	9a05      	ldr	r2, [sp, #20]
 8016176:	f5b2 7f00 	cmp.w	r2, #512	@ 0x200
 801617a:	d30e      	bcc.n	801619a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x202>
 801617c:	469a      	mov	sl, r3
 801617e:	2600      	movs	r6, #0
 8016180:	e035      	b.n	80161ee <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x256>
 8016182:	9b05      	ldr	r3, [sp, #20]
 8016184:	429f      	cmp	r7, r3
 8016186:	d318      	bcc.n	80161ba <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x222>
 8016188:	eb04 030a 	add.w	r3, r4, sl
 801618c:	f894 2804 	ldrb.w	r2, [r4, #2052]	@ 0x804
 8016190:	f883 2804 	strb.w	r2, [r3, #2052]	@ 0x804
 8016194:	f10a 0301 	add.w	r3, sl, #1
 8016198:	b29b      	uxth	r3, r3
 801619a:	9a05      	ldr	r2, [sp, #20]
 801619c:	f894 6804 	ldrb.w	r6, [r4, #2052]	@ 0x804
 80161a0:	990c      	ldr	r1, [sp, #48]	@ 0x30
 80161a2:	eb04 0282 	add.w	r2, r4, r2, lsl #2
 80161a6:	7116      	strb	r6, [r2, #4]
 80161a8:	f10a 0601 	add.w	r6, sl, #1
 80161ac:	80d1      	strh	r1, [r2, #6]
 80161ae:	7156      	strb	r6, [r2, #5]
 80161b0:	9a05      	ldr	r2, [sp, #20]
 80161b2:	3201      	adds	r2, #1
 80161b4:	b292      	uxth	r2, r2
 80161b6:	9205      	str	r2, [sp, #20]
 80161b8:	e7e0      	b.n	801617c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1e4>
 80161ba:	eb04 0387 	add.w	r3, r4, r7, lsl #2
 80161be:	463a      	mov	r2, r7
 80161c0:	795b      	ldrb	r3, [r3, #5]
 80161c2:	f603 0604 	addw	r6, r3, #2052	@ 0x804
 80161c6:	4426      	add	r6, r4
 80161c8:	9919      	ldr	r1, [sp, #100]	@ 0x64
 80161ca:	eb01 0c06 	add.w	ip, r1, r6
 80161ce:	f1bc 0f00 	cmp.w	ip, #0
 80161d2:	dd07      	ble.n	80161e4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x24c>
 80161d4:	eb04 0282 	add.w	r2, r4, r2, lsl #2
 80161d8:	f892 c004 	ldrb.w	ip, [r2, #4]
 80161dc:	f806 cd01 	strb.w	ip, [r6, #-1]!
 80161e0:	88d2      	ldrh	r2, [r2, #6]
 80161e2:	e7f1      	b.n	80161c8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x230>
 80161e4:	f884 2804 	strb.w	r2, [r4, #2052]	@ 0x804
 80161e8:	b29b      	uxth	r3, r3
 80161ea:	e7c3      	b.n	8016174 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1dc>
 80161ec:	9f0c      	ldr	r7, [sp, #48]	@ 0x30
 80161ee:	970c      	str	r7, [sp, #48]	@ 0x30
 80161f0:	9a01      	ldr	r2, [sp, #4]
 80161f2:	46b4      	mov	ip, r6
 80161f4:	461f      	mov	r7, r3
 80161f6:	e78c      	b.n	8016112 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x17a>
 80161f8:	1b7b      	subs	r3, r7, r5
 80161fa:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 80161fe:	9201      	str	r2, [sp, #4]
 8016200:	eb0c 0605 	add.w	r6, ip, r5
 8016204:	b29b      	uxth	r3, r3
 8016206:	b2b6      	uxth	r6, r6
 8016208:	2500      	movs	r5, #0
 801620a:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 801620c:	4282      	cmp	r2, r0
 801620e:	d88b      	bhi.n	8016128 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x190>
 8016210:	9a01      	ldr	r2, [sp, #4]
 8016212:	e74b      	b.n	80160ac <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x114>
 8016214:	4297      	cmp	r7, r2
 8016216:	d332      	bcc.n	801627e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2e6>
 8016218:	1abb      	subs	r3, r7, r2
 801621a:	b29b      	uxth	r3, r3
 801621c:	9208      	str	r2, [sp, #32]
 801621e:	9501      	str	r5, [sp, #4]
 8016220:	9909      	ldr	r1, [sp, #36]	@ 0x24
 8016222:	29ff      	cmp	r1, #255	@ 0xff
 8016224:	9908      	ldr	r1, [sp, #32]
 8016226:	eb0c 0601 	add.w	r6, ip, r1
 801622a:	d135      	bne.n	8016298 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x300>
 801622c:	f1a0 0e02 	sub.w	lr, r0, #2
 8016230:	b2b6      	uxth	r6, r6
 8016232:	45b4      	cmp	ip, r6
 8016234:	f040 808c 	bne.w	8016350 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3b8>
 8016238:	9908      	ldr	r1, [sp, #32]
 801623a:	4297      	cmp	r7, r2
 801623c:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 8016240:	d3e2      	bcc.n	8016208 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x270>
 8016242:	9a18      	ldr	r2, [sp, #96]	@ 0x60
 8016244:	9904      	ldr	r1, [sp, #16]
 8016246:	8812      	ldrh	r2, [r2, #0]
 8016248:	1a52      	subs	r2, r2, r1
 801624a:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801624e:	9a07      	ldr	r2, [sp, #28]
 8016250:	9916      	ldr	r1, [sp, #88]	@ 0x58
 8016252:	3201      	adds	r2, #1
 8016254:	428a      	cmp	r2, r1
 8016256:	9207      	str	r2, [sp, #28]
 8016258:	f040 8087 	bne.w	801636a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3d2>
 801625c:	f8bd 5070 	ldrh.w	r5, [sp, #112]	@ 0x70
 8016260:	f8bd 7068 	ldrh.w	r7, [sp, #104]	@ 0x68
 8016264:	9b04      	ldr	r3, [sp, #16]
 8016266:	1bed      	subs	r5, r5, r7
 8016268:	b2ad      	uxth	r5, r5
 801626a:	2d00      	cmp	r5, #0
 801626c:	bf08      	it	eq
 801626e:	461a      	moveq	r2, r3
 8016270:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8016272:	bf18      	it	ne
 8016274:	2200      	movne	r2, #0
 8016276:	3301      	adds	r3, #1
 8016278:	930d      	str	r3, [sp, #52]	@ 0x34
 801627a:	b292      	uxth	r2, r2
 801627c:	e70d      	b.n	801609a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x102>
 801627e:	1bd1      	subs	r1, r2, r7
 8016280:	b28b      	uxth	r3, r1
 8016282:	9301      	str	r3, [sp, #4]
 8016284:	9708      	str	r7, [sp, #32]
 8016286:	462b      	mov	r3, r5
 8016288:	e7ca      	b.n	8016220 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x288>
 801628a:	bf00      	nop
 801628c:	20013f2c 	.word	0x20013f2c
 8016290:	20013f24 	.word	0x20013f24
 8016294:	fffff7fb 	.word	0xfffff7fb
 8016298:	b2b6      	uxth	r6, r6
 801629a:	900b      	str	r0, [sp, #44]	@ 0x2c
 801629c:	45b4      	cmp	ip, r6
 801629e:	d0cb      	beq.n	8016238 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2a0>
 80162a0:	f10c 0101 	add.w	r1, ip, #1
 80162a4:	44a4      	add	ip, r4
 80162a6:	9117      	str	r1, [sp, #92]	@ 0x5c
 80162a8:	f89c 5804 	ldrb.w	r5, [ip, #2052]	@ 0x804
 80162ac:	9911      	ldr	r1, [sp, #68]	@ 0x44
 80162ae:	f831 5015 	ldrh.w	r5, [r1, r5, lsl #1]
 80162b2:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 80162b4:	f8b1 c000 	ldrh.w	ip, [r1]
 80162b8:	990e      	ldr	r1, [sp, #56]	@ 0x38
 80162ba:	ea4f 2e2c 	mov.w	lr, ip, asr #8
 80162be:	f00e 0ef8 	and.w	lr, lr, #248	@ 0xf8
 80162c2:	fb1e fe01 	smulbb	lr, lr, r1
 80162c6:	ea4f 2825 	mov.w	r8, r5, asr #8
 80162ca:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 80162cc:	f008 08f8 	and.w	r8, r8, #248	@ 0xf8
 80162d0:	fb08 e801 	mla	r8, r8, r1, lr
 80162d4:	ea4f 09ec 	mov.w	r9, ip, asr #3
 80162d8:	990e      	ldr	r1, [sp, #56]	@ 0x38
 80162da:	f009 09fc 	and.w	r9, r9, #252	@ 0xfc
 80162de:	fb19 f901 	smulbb	r9, r9, r1
 80162e2:	ea4f 0ee5 	mov.w	lr, r5, asr #3
 80162e6:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 80162e8:	f00e 0efc 	and.w	lr, lr, #252	@ 0xfc
 80162ec:	fb0e 9e01 	mla	lr, lr, r1, r9
 80162f0:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 80162f4:	990e      	ldr	r1, [sp, #56]	@ 0x38
 80162f6:	fa5f fc8c 	uxtb.w	ip, ip
 80162fa:	fb1c fc01 	smulbb	ip, ip, r1
 80162fe:	00ed      	lsls	r5, r5, #3
 8016300:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 8016302:	b2ed      	uxtb	r5, r5
 8016304:	fb05 c501 	mla	r5, r5, r1, ip
 8016308:	fa1f f888 	uxth.w	r8, r8
 801630c:	fa1f fe8e 	uxth.w	lr, lr
 8016310:	b2ad      	uxth	r5, r5
 8016312:	f108 0c01 	add.w	ip, r8, #1
 8016316:	eb0c 2818 	add.w	r8, ip, r8, lsr #8
 801631a:	f10e 0901 	add.w	r9, lr, #1
 801631e:	f105 0c01 	add.w	ip, r5, #1
 8016322:	eb0c 2c15 	add.w	ip, ip, r5, lsr #8
 8016326:	eb09 291e 	add.w	r9, r9, lr, lsr #8
 801632a:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801632e:	f408 4878 	and.w	r8, r8, #63488	@ 0xf800
 8016332:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8016336:	ea4c 0808 	orr.w	r8, ip, r8
 801633a:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 801633c:	f8bd c05c 	ldrh.w	ip, [sp, #92]	@ 0x5c
 8016340:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 8016344:	ea48 0809 	orr.w	r8, r8, r9
 8016348:	f821 8b02 	strh.w	r8, [r1], #2
 801634c:	910b      	str	r1, [sp, #44]	@ 0x2c
 801634e:	e7a5      	b.n	801629c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x304>
 8016350:	f10c 0801 	add.w	r8, ip, #1
 8016354:	44a4      	add	ip, r4
 8016356:	9911      	ldr	r1, [sp, #68]	@ 0x44
 8016358:	f89c 5804 	ldrb.w	r5, [ip, #2052]	@ 0x804
 801635c:	f831 5015 	ldrh.w	r5, [r1, r5, lsl #1]
 8016360:	f82e 5f02 	strh.w	r5, [lr, #2]!
 8016364:	fa1f fc88 	uxth.w	ip, r8
 8016368:	e763      	b.n	8016232 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x29a>
 801636a:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801636e:	f8bd 506c 	ldrh.w	r5, [sp, #108]	@ 0x6c
 8016372:	1aad      	subs	r5, r5, r2
 8016374:	b2ad      	uxth	r5, r5
 8016376:	2d00      	cmp	r5, #0
 8016378:	bf18      	it	ne
 801637a:	2200      	movne	r2, #0
 801637c:	9201      	str	r2, [sp, #4]
 801637e:	e744      	b.n	801620a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x272>
 8016380:	4b03      	ldr	r3, [pc, #12]	@ (8016390 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3f8>)
 8016382:	6818      	ldr	r0, [r3, #0]
 8016384:	6803      	ldr	r3, [r0, #0]
 8016386:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8016388:	4798      	blx	r3
 801638a:	b01f      	add	sp, #124	@ 0x7c
 801638c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8016390:	20013f2c 	.word	0x20013f2c

08016394 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h>:
 8016394:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016398:	b093      	sub	sp, #76	@ 0x4c
 801639a:	4616      	mov	r6, r2
 801639c:	f89d 2070 	ldrb.w	r2, [sp, #112]	@ 0x70
 80163a0:	9003      	str	r0, [sp, #12]
 80163a2:	460d      	mov	r5, r1
 80163a4:	9201      	str	r2, [sp, #4]
 80163a6:	2a00      	cmp	r2, #0
 80163a8:	f000 8304 	beq.w	80169b4 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x620>
 80163ac:	6830      	ldr	r0, [r6, #0]
 80163ae:	6871      	ldr	r1, [r6, #4]
 80163b0:	ac0e      	add	r4, sp, #56	@ 0x38
 80163b2:	c403      	stmia	r4!, {r0, r1}
 80163b4:	6818      	ldr	r0, [r3, #0]
 80163b6:	6859      	ldr	r1, [r3, #4]
 80163b8:	ac10      	add	r4, sp, #64	@ 0x40
 80163ba:	c403      	stmia	r4!, {r0, r1}
 80163bc:	a80e      	add	r0, sp, #56	@ 0x38
 80163be:	f7f8 ff0d 	bl	800f1dc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80163c2:	4631      	mov	r1, r6
 80163c4:	a810      	add	r0, sp, #64	@ 0x40
 80163c6:	f7f8 ff31 	bl	800f22c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80163ca:	f9bd 203c 	ldrsh.w	r2, [sp, #60]	@ 0x3c
 80163ce:	f5b2 6f80 	cmp.w	r2, #1024	@ 0x400
 80163d2:	bfd7      	itett	le
 80163d4:	b293      	uxthle	r3, r2
 80163d6:	2301      	movgt	r3, #1
 80163d8:	f44f 6180 	movle.w	r1, #1024	@ 0x400
 80163dc:	fb91 f3f3 	sdivle	r3, r1, r3
 80163e0:	9304      	str	r3, [sp, #16]
 80163e2:	f105 0308 	add.w	r3, r5, #8
 80163e6:	9904      	ldr	r1, [sp, #16]
 80163e8:	9308      	str	r3, [sp, #32]
 80163ea:	f9bd 303e 	ldrsh.w	r3, [sp, #62]	@ 0x3e
 80163ee:	440b      	add	r3, r1
 80163f0:	3b01      	subs	r3, #1
 80163f2:	fb93 f3f1 	sdiv	r3, r3, r1
 80163f6:	9908      	ldr	r1, [sp, #32]
 80163f8:	3b01      	subs	r3, #1
 80163fa:	b29b      	uxth	r3, r3
 80163fc:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 8016400:	9309      	str	r3, [sp, #36]	@ 0x24
 8016402:	9904      	ldr	r1, [sp, #16]
 8016404:	f9bd 3042 	ldrsh.w	r3, [sp, #66]	@ 0x42
 8016408:	fb93 f0f1 	sdiv	r0, r3, r1
 801640c:	b284      	uxth	r4, r0
 801640e:	9405      	str	r4, [sp, #20]
 8016410:	e9dd 4504 	ldrd	r4, r5, [sp, #16]
 8016414:	f8bd 1040 	ldrh.w	r1, [sp, #64]	@ 0x40
 8016418:	fb05 3914 	mls	r9, r5, r4, r3
 801641c:	fb19 f902 	smulbb	r9, r9, r2
 8016420:	4489      	add	r9, r1
 8016422:	fa1f f989 	uxth.w	r9, r9
 8016426:	2d00      	cmp	r5, #0
 8016428:	d05d      	beq.n	80164e6 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x152>
 801642a:	1e6a      	subs	r2, r5, #1
 801642c:	9808      	ldr	r0, [sp, #32]
 801642e:	f850 a022 	ldr.w	sl, [r0, r2, lsl #2]
 8016432:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8016434:	fa9a fa8a 	rev.w	sl, sl
 8016438:	4492      	add	sl, r2
 801643a:	f8bd 2038 	ldrh.w	r2, [sp, #56]	@ 0x38
 801643e:	f9bd 5046 	ldrsh.w	r5, [sp, #70]	@ 0x46
 8016442:	4411      	add	r1, r2
 8016444:	f8bd 203a 	ldrh.w	r2, [sp, #58]	@ 0x3a
 8016448:	f8ad 1040 	strh.w	r1, [sp, #64]	@ 0x40
 801644c:	4413      	add	r3, r2
 801644e:	f8ad 3042 	strh.w	r3, [sp, #66]	@ 0x42
 8016452:	f9bd 3044 	ldrsh.w	r3, [sp, #68]	@ 0x44
 8016456:	9302      	str	r3, [sp, #8]
 8016458:	4bcb      	ldr	r3, [pc, #812]	@ (8016788 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3f4>)
 801645a:	6818      	ldr	r0, [r3, #0]
 801645c:	6803      	ldr	r3, [r0, #0]
 801645e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8016460:	4798      	blx	r3
 8016462:	4bca      	ldr	r3, [pc, #808]	@ (801678c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3f8>)
 8016464:	f9bd 2040 	ldrsh.w	r2, [sp, #64]	@ 0x40
 8016468:	881b      	ldrh	r3, [r3, #0]
 801646a:	f9bd 4042 	ldrsh.w	r4, [sp, #66]	@ 0x42
 801646e:	fb03 2404 	mla	r4, r3, r4, r2
 8016472:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8016476:	436b      	muls	r3, r5
 8016478:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 801647c:	930d      	str	r3, [sp, #52]	@ 0x34
 801647e:	f9bd 303c 	ldrsh.w	r3, [sp, #60]	@ 0x3c
 8016482:	fb99 f3f3 	sdiv	r3, r9, r3
 8016486:	9306      	str	r3, [sp, #24]
 8016488:	9b01      	ldr	r3, [sp, #4]
 801648a:	43db      	mvns	r3, r3
 801648c:	b2db      	uxtb	r3, r3
 801648e:	930a      	str	r3, [sp, #40]	@ 0x28
 8016490:	9b03      	ldr	r3, [sp, #12]
 8016492:	3304      	adds	r3, #4
 8016494:	4618      	mov	r0, r3
 8016496:	2280      	movs	r2, #128	@ 0x80
 8016498:	2100      	movs	r1, #0
 801649a:	930b      	str	r3, [sp, #44]	@ 0x2c
 801649c:	f00c fc0f 	bl	8022cbe <memset>
 80164a0:	4bbb      	ldr	r3, [pc, #748]	@ (8016790 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3fc>)
 80164a2:	9300      	str	r3, [sp, #0]
 80164a4:	2300      	movs	r3, #0
 80164a6:	f04f 0600 	mov.w	r6, #0
 80164aa:	9307      	str	r3, [sp, #28]
 80164ac:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 80164ae:	42a3      	cmp	r3, r4
 80164b0:	f240 827b 	bls.w	80169aa <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x616>
 80164b4:	f04f 0e07 	mov.w	lr, #7
 80164b8:	f1b9 0f00 	cmp.w	r9, #0
 80164bc:	f000 8159 	beq.w	8016772 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3de>
 80164c0:	f89a 5000 	ldrb.w	r5, [sl]
 80164c4:	b2ed      	uxtb	r5, r5
 80164c6:	11aa      	asrs	r2, r5, #6
 80164c8:	f10a 0701 	add.w	r7, sl, #1
 80164cc:	d10e      	bne.n	80164ec <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x158>
 80164ce:	9b03      	ldr	r3, [sp, #12]
 80164d0:	f005 053f 	and.w	r5, r5, #63	@ 0x3f
 80164d4:	eb03 0545 	add.w	r5, r3, r5, lsl #1
 80164d8:	88ae      	ldrh	r6, [r5, #4]
 80164da:	f109 39ff 	add.w	r9, r9, #4294967295
 80164de:	fa1f f989 	uxth.w	r9, r9
 80164e2:	46ba      	mov	sl, r7
 80164e4:	e7e8      	b.n	80164b8 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x124>
 80164e6:	f8dd a024 	ldr.w	sl, [sp, #36]	@ 0x24
 80164ea:	e7a6      	b.n	801643a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0xa6>
 80164ec:	2a01      	cmp	r2, #1
 80164ee:	d129      	bne.n	8016544 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x1b0>
 80164f0:	f3c6 0304 	ubfx	r3, r6, #0, #5
 80164f4:	f005 0203 	and.w	r2, r5, #3
 80164f8:	3b02      	subs	r3, #2
 80164fa:	4413      	add	r3, r2
 80164fc:	f003 031f 	and.w	r3, r3, #31
 8016500:	f3c5 0281 	ubfx	r2, r5, #2, #2
 8016504:	f363 0604 	bfi	r6, r3, #0, #5
 8016508:	3a02      	subs	r2, #2
 801650a:	eb02 1256 	add.w	r2, r2, r6, lsr #5
 801650e:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
 8016512:	f3c5 1501 	ubfx	r5, r5, #4, #2
 8016516:	f362 164a 	bfi	r6, r2, #5, #6
 801651a:	3d02      	subs	r5, #2
 801651c:	eb05 25d6 	add.w	r5, r5, r6, lsr #11
 8016520:	f005 051f 	and.w	r5, r5, #31
 8016524:	eb02 0282 	add.w	r2, r2, r2, lsl #2
 8016528:	2103      	movs	r1, #3
 801652a:	fb11 2205 	smlabb	r2, r1, r5, r2
 801652e:	fb1e 2303 	smlabb	r3, lr, r3, r2
 8016532:	9a03      	ldr	r2, [sp, #12]
 8016534:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 8016538:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801653c:	f365 26cf 	bfi	r6, r5, #11, #5
 8016540:	809e      	strh	r6, [r3, #4]
 8016542:	e7ca      	b.n	80164da <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x146>
 8016544:	f005 053f 	and.w	r5, r5, #63	@ 0x3f
 8016548:	2a02      	cmp	r2, #2
 801654a:	b2ab      	uxth	r3, r5
 801654c:	d136      	bne.n	80165bc <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x228>
 801654e:	2101      	movs	r1, #1
 8016550:	fb12 1205 	smlabb	r2, r2, r5, r1
 8016554:	4492      	add	sl, r2
 8016556:	463a      	mov	r2, r7
 8016558:	4552      	cmp	r2, sl
 801655a:	d01c      	beq.n	8016596 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x202>
 801655c:	4694      	mov	ip, r2
 801655e:	f04f 0b03 	mov.w	fp, #3
 8016562:	f81c 1b02 	ldrb.w	r1, [ip], #2
 8016566:	7852      	ldrb	r2, [r2, #1]
 8016568:	ea41 2102 	orr.w	r1, r1, r2, lsl #8
 801656c:	f3c1 1045 	ubfx	r0, r1, #5, #6
 8016570:	ea4f 28d1 	mov.w	r8, r1, lsr #11
 8016574:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 8016578:	f001 021f 	and.w	r2, r1, #31
 801657c:	fb1b 0008 	smlabb	r0, fp, r8, r0
 8016580:	fb1e 0002 	smlabb	r0, lr, r2, r0
 8016584:	9a03      	ldr	r2, [sp, #12]
 8016586:	f000 003f 	and.w	r0, r0, #63	@ 0x3f
 801658a:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 801658e:	460e      	mov	r6, r1
 8016590:	8081      	strh	r1, [r0, #4]
 8016592:	4662      	mov	r2, ip
 8016594:	e7e0      	b.n	8016558 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x1c4>
 8016596:	4599      	cmp	r9, r3
 8016598:	d20b      	bcs.n	80165b2 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x21e>
 801659a:	eba5 0509 	sub.w	r5, r5, r9
 801659e:	2d00      	cmp	r5, #0
 80165a0:	eb07 0749 	add.w	r7, r7, r9, lsl #1
 80165a4:	f300 8209 	bgt.w	80169ba <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x626>
 80165a8:	f8dd 8008 	ldr.w	r8, [sp, #8]
 80165ac:	2301      	movs	r3, #1
 80165ae:	9307      	str	r3, [sp, #28]
 80165b0:	e00c      	b.n	80165cc <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x238>
 80165b2:	eb07 0745 	add.w	r7, r7, r5, lsl #1
 80165b6:	eba9 0903 	sub.w	r9, r9, r3
 80165ba:	e790      	b.n	80164de <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x14a>
 80165bc:	4599      	cmp	r9, r3
 80165be:	d2fa      	bcs.n	80165b6 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x222>
 80165c0:	eba5 0509 	sub.w	r5, r5, r9
 80165c4:	2d00      	cmp	r5, #0
 80165c6:	dc1d      	bgt.n	8016604 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x270>
 80165c8:	f8dd 8008 	ldr.w	r8, [sp, #8]
 80165cc:	f04f 0b00 	mov.w	fp, #0
 80165d0:	f1b8 0f00 	cmp.w	r8, #0
 80165d4:	f340 81a1 	ble.w	801691a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x586>
 80165d8:	783b      	ldrb	r3, [r7, #0]
 80165da:	b2db      	uxtb	r3, r3
 80165dc:	119a      	asrs	r2, r3, #6
 80165de:	f107 0a01 	add.w	sl, r7, #1
 80165e2:	f040 80d7 	bne.w	8016794 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x400>
 80165e6:	9a03      	ldr	r2, [sp, #12]
 80165e8:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 80165ec:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 80165f0:	889e      	ldrh	r6, [r3, #4]
 80165f2:	9b01      	ldr	r3, [sp, #4]
 80165f4:	2bff      	cmp	r3, #255	@ 0xff
 80165f6:	f040 81e9 	bne.w	80169cc <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x638>
 80165fa:	8026      	strh	r6, [r4, #0]
 80165fc:	f108 38ff 	add.w	r8, r8, #4294967295
 8016600:	3402      	adds	r4, #2
 8016602:	e0be      	b.n	8016782 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3ee>
 8016604:	9b02      	ldr	r3, [sp, #8]
 8016606:	9a02      	ldr	r2, [sp, #8]
 8016608:	42ab      	cmp	r3, r5
 801660a:	bfa8      	it	ge
 801660c:	462b      	movge	r3, r5
 801660e:	eba2 0803 	sub.w	r8, r2, r3
 8016612:	9a07      	ldr	r2, [sp, #28]
 8016614:	1aed      	subs	r5, r5, r3
 8016616:	2a00      	cmp	r2, #0
 8016618:	d05a      	beq.n	80166d0 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x33c>
 801661a:	9a01      	ldr	r2, [sp, #4]
 801661c:	2aff      	cmp	r2, #255	@ 0xff
 801661e:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8016622:	d049      	beq.n	80166b8 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x324>
 8016624:	f8bd e004 	ldrh.w	lr, [sp, #4]
 8016628:	f8bd 9028 	ldrh.w	r9, [sp, #40]	@ 0x28
 801662c:	42a3      	cmp	r3, r4
 801662e:	f240 80a5 	bls.w	801677c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3e8>
 8016632:	46bc      	mov	ip, r7
 8016634:	8820      	ldrh	r0, [r4, #0]
 8016636:	f81c 2b02 	ldrb.w	r2, [ip], #2
 801663a:	7879      	ldrb	r1, [r7, #1]
 801663c:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
 8016640:	b212      	sxth	r2, r2
 8016642:	b291      	uxth	r1, r2
 8016644:	ea4f 2a20 	mov.w	sl, r0, asr #8
 8016648:	120f      	asrs	r7, r1, #8
 801664a:	f00a 0af8 	and.w	sl, sl, #248	@ 0xf8
 801664e:	fb1a fa09 	smulbb	sl, sl, r9
 8016652:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 8016656:	fb07 a70e 	mla	r7, r7, lr, sl
 801665a:	ea4f 0ae0 	mov.w	sl, r0, asr #3
 801665e:	00c0      	lsls	r0, r0, #3
 8016660:	10c9      	asrs	r1, r1, #3
 8016662:	f00a 0afc 	and.w	sl, sl, #252	@ 0xfc
 8016666:	00d2      	lsls	r2, r2, #3
 8016668:	b2c0      	uxtb	r0, r0
 801666a:	fb1a fa09 	smulbb	sl, sl, r9
 801666e:	fb10 f009 	smulbb	r0, r0, r9
 8016672:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 8016676:	b2d2      	uxtb	r2, r2
 8016678:	b2bf      	uxth	r7, r7
 801667a:	fb01 a10e 	mla	r1, r1, lr, sl
 801667e:	fb02 020e 	mla	r2, r2, lr, r0
 8016682:	b289      	uxth	r1, r1
 8016684:	b292      	uxth	r2, r2
 8016686:	1c78      	adds	r0, r7, #1
 8016688:	eb00 2717 	add.w	r7, r0, r7, lsr #8
 801668c:	f101 0a01 	add.w	sl, r1, #1
 8016690:	1c50      	adds	r0, r2, #1
 8016692:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 8016696:	eb0a 2a11 	add.w	sl, sl, r1, lsr #8
 801669a:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 801669e:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 80166a2:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80166a6:	4307      	orrs	r7, r0
 80166a8:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 80166ac:	ea47 070a 	orr.w	r7, r7, sl
 80166b0:	f824 7b02 	strh.w	r7, [r4], #2
 80166b4:	4667      	mov	r7, ip
 80166b6:	e7b9      	b.n	801662c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x298>
 80166b8:	42a3      	cmp	r3, r4
 80166ba:	d95f      	bls.n	801677c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3e8>
 80166bc:	463a      	mov	r2, r7
 80166be:	f812 1b02 	ldrb.w	r1, [r2], #2
 80166c2:	7878      	ldrb	r0, [r7, #1]
 80166c4:	ea41 2100 	orr.w	r1, r1, r0, lsl #8
 80166c8:	f824 1b02 	strh.w	r1, [r4], #2
 80166cc:	4617      	mov	r7, r2
 80166ce:	e7f3      	b.n	80166b8 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x324>
 80166d0:	9901      	ldr	r1, [sp, #4]
 80166d2:	29ff      	cmp	r1, #255	@ 0xff
 80166d4:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 80166d8:	b2b2      	uxth	r2, r6
 80166da:	d044      	beq.n	8016766 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3d2>
 80166dc:	f8bd 1004 	ldrh.w	r1, [sp, #4]
 80166e0:	f8bd a028 	ldrh.w	sl, [sp, #40]	@ 0x28
 80166e4:	ea4f 2922 	mov.w	r9, r2, asr #8
 80166e8:	ea4f 0ee2 	mov.w	lr, r2, asr #3
 80166ec:	f009 09f8 	and.w	r9, r9, #248	@ 0xf8
 80166f0:	f00e 0efc 	and.w	lr, lr, #252	@ 0xfc
 80166f4:	4608      	mov	r0, r1
 80166f6:	fb09 f901 	mul.w	r9, r9, r1
 80166fa:	fb0e fe01 	mul.w	lr, lr, r1
 80166fe:	00d1      	lsls	r1, r2, #3
 8016700:	b2c9      	uxtb	r1, r1
 8016702:	4341      	muls	r1, r0
 8016704:	429c      	cmp	r4, r3
 8016706:	f4bf af61 	bcs.w	80165cc <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x238>
 801670a:	8822      	ldrh	r2, [r4, #0]
 801670c:	1210      	asrs	r0, r2, #8
 801670e:	ea4f 0ce2 	mov.w	ip, r2, asr #3
 8016712:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 8016716:	00d2      	lsls	r2, r2, #3
 8016718:	fb00 900a 	mla	r0, r0, sl, r9
 801671c:	b2d2      	uxtb	r2, r2
 801671e:	b280      	uxth	r0, r0
 8016720:	f00c 0cfc 	and.w	ip, ip, #252	@ 0xfc
 8016724:	fb02 120a 	mla	r2, r2, sl, r1
 8016728:	b292      	uxth	r2, r2
 801672a:	f100 0b01 	add.w	fp, r0, #1
 801672e:	fb0c ec0a 	mla	ip, ip, sl, lr
 8016732:	fa1f fc8c 	uxth.w	ip, ip
 8016736:	eb0b 2b10 	add.w	fp, fp, r0, lsr #8
 801673a:	1c50      	adds	r0, r2, #1
 801673c:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 8016740:	f10c 0201 	add.w	r2, ip, #1
 8016744:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 8016748:	f40b 4b78 	and.w	fp, fp, #63488	@ 0xf800
 801674c:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 8016750:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 8016754:	ea40 0b0b 	orr.w	fp, r0, fp
 8016758:	f40c 6cfc 	and.w	ip, ip, #2016	@ 0x7e0
 801675c:	ea4b 0b0c 	orr.w	fp, fp, ip
 8016760:	f824 bb02 	strh.w	fp, [r4], #2
 8016764:	e7ce      	b.n	8016704 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x370>
 8016766:	429c      	cmp	r4, r3
 8016768:	f4bf af30 	bcs.w	80165cc <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x238>
 801676c:	f824 2b02 	strh.w	r2, [r4], #2
 8016770:	e7f9      	b.n	8016766 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3d2>
 8016772:	f8dd 8008 	ldr.w	r8, [sp, #8]
 8016776:	4657      	mov	r7, sl
 8016778:	464d      	mov	r5, r9
 801677a:	e727      	b.n	80165cc <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x238>
 801677c:	2300      	movs	r3, #0
 801677e:	e716      	b.n	80165ae <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x21a>
 8016780:	44bb      	add	fp, r7
 8016782:	4657      	mov	r7, sl
 8016784:	e724      	b.n	80165d0 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x23c>
 8016786:	bf00      	nop
 8016788:	20013f2c 	.word	0x20013f2c
 801678c:	20013f24 	.word	0x20013f24
 8016790:	20000280 	.word	0x20000280
 8016794:	2a01      	cmp	r2, #1
 8016796:	d12a      	bne.n	80167ee <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x45a>
 8016798:	f3c6 0104 	ubfx	r1, r6, #0, #5
 801679c:	f003 0203 	and.w	r2, r3, #3
 80167a0:	3902      	subs	r1, #2
 80167a2:	4411      	add	r1, r2
 80167a4:	f001 011f 	and.w	r1, r1, #31
 80167a8:	f3c3 0081 	ubfx	r0, r3, #2, #2
 80167ac:	f361 0604 	bfi	r6, r1, #0, #5
 80167b0:	3802      	subs	r0, #2
 80167b2:	eb00 1056 	add.w	r0, r0, r6, lsr #5
 80167b6:	f000 003f 	and.w	r0, r0, #63	@ 0x3f
 80167ba:	f3c3 1301 	ubfx	r3, r3, #4, #2
 80167be:	f360 164a 	bfi	r6, r0, #5, #6
 80167c2:	3b02      	subs	r3, #2
 80167c4:	eb03 22d6 	add.w	r2, r3, r6, lsr #11
 80167c8:	f002 031f 	and.w	r3, r2, #31
 80167cc:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 80167d0:	2203      	movs	r2, #3
 80167d2:	f363 26cf 	bfi	r6, r3, #11, #5
 80167d6:	fb12 0303 	smlabb	r3, r2, r3, r0
 80167da:	2207      	movs	r2, #7
 80167dc:	fb12 3301 	smlabb	r3, r2, r1, r3
 80167e0:	9a03      	ldr	r2, [sp, #12]
 80167e2:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 80167e6:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 80167ea:	809e      	strh	r6, [r3, #4]
 80167ec:	e701      	b.n	80165f2 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x25e>
 80167ee:	f003 053f 	and.w	r5, r3, #63	@ 0x3f
 80167f2:	45a8      	cmp	r8, r5
 80167f4:	4647      	mov	r7, r8
 80167f6:	bfa8      	it	ge
 80167f8:	462f      	movge	r7, r5
 80167fa:	2a02      	cmp	r2, #2
 80167fc:	d154      	bne.n	80168a8 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x514>
 80167fe:	9b01      	ldr	r3, [sp, #4]
 8016800:	2bff      	cmp	r3, #255	@ 0xff
 8016802:	d01a      	beq.n	801683a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x4a6>
 8016804:	eb0b 0307 	add.w	r3, fp, r7
 8016808:	2b40      	cmp	r3, #64	@ 0x40
 801680a:	dd16      	ble.n	801683a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x4a6>
 801680c:	ea4f 094b 	mov.w	r9, fp, lsl #1
 8016810:	4649      	mov	r1, r9
 8016812:	9800      	ldr	r0, [sp, #0]
 8016814:	f7ea fb9c 	bl	8000f50 <_ZN8touchgfx5paint9flushLineEPmi>
 8016818:	465a      	mov	r2, fp
 801681a:	9b01      	ldr	r3, [sp, #4]
 801681c:	9900      	ldr	r1, [sp, #0]
 801681e:	4620      	mov	r0, r4
 8016820:	f7ea fbc0 	bl	8000fa4 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh>
 8016824:	9b00      	ldr	r3, [sp, #0]
 8016826:	461a      	mov	r2, r3
 8016828:	4b6c      	ldr	r3, [pc, #432]	@ (80169dc <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x648>)
 801682a:	429a      	cmp	r2, r3
 801682c:	bf0c      	ite	eq
 801682e:	4b6c      	ldreq	r3, [pc, #432]	@ (80169e0 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x64c>)
 8016830:	4b6a      	ldrne	r3, [pc, #424]	@ (80169dc <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x648>)
 8016832:	9300      	str	r3, [sp, #0]
 8016834:	444c      	add	r4, r9
 8016836:	f04f 0b00 	mov.w	fp, #0
 801683a:	4652      	mov	r2, sl
 801683c:	2100      	movs	r1, #0
 801683e:	42a9      	cmp	r1, r5
 8016840:	da2c      	bge.n	801689c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x508>
 8016842:	4694      	mov	ip, r2
 8016844:	f04f 0903 	mov.w	r9, #3
 8016848:	f81c 3b02 	ldrb.w	r3, [ip], #2
 801684c:	7852      	ldrb	r2, [r2, #1]
 801684e:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 8016852:	f3c3 1045 	ubfx	r0, r3, #5, #6
 8016856:	ea4f 2ed3 	mov.w	lr, r3, lsr #11
 801685a:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 801685e:	f003 021f 	and.w	r2, r3, #31
 8016862:	fb19 000e 	smlabb	r0, r9, lr, r0
 8016866:	f04f 0e07 	mov.w	lr, #7
 801686a:	fb1e 0002 	smlabb	r0, lr, r2, r0
 801686e:	9a03      	ldr	r2, [sp, #12]
 8016870:	f000 003f 	and.w	r0, r0, #63	@ 0x3f
 8016874:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 8016878:	42b9      	cmp	r1, r7
 801687a:	461e      	mov	r6, r3
 801687c:	8083      	strh	r3, [r0, #4]
 801687e:	da0a      	bge.n	8016896 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x502>
 8016880:	9a01      	ldr	r2, [sp, #4]
 8016882:	2aff      	cmp	r2, #255	@ 0xff
 8016884:	bf15      	itete	ne
 8016886:	9a00      	ldrne	r2, [sp, #0]
 8016888:	8023      	strheq	r3, [r4, #0]
 801688a:	f822 301b 	strhne.w	r3, [r2, fp, lsl #1]
 801688e:	3402      	addeq	r4, #2
 8016890:	bf18      	it	ne
 8016892:	f10b 0b01 	addne.w	fp, fp, #1
 8016896:	3101      	adds	r1, #1
 8016898:	4662      	mov	r2, ip
 801689a:	e7d0      	b.n	801683e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x4aa>
 801689c:	eb0a 0a45 	add.w	sl, sl, r5, lsl #1
 80168a0:	eba8 0807 	sub.w	r8, r8, r7
 80168a4:	1bed      	subs	r5, r5, r7
 80168a6:	e76c      	b.n	8016782 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3ee>
 80168a8:	9b01      	ldr	r3, [sp, #4]
 80168aa:	2bff      	cmp	r3, #255	@ 0xff
 80168ac:	eba8 0807 	sub.w	r8, r8, r7
 80168b0:	eba5 0507 	sub.w	r5, r5, r7
 80168b4:	fa1f f986 	uxth.w	r9, r6
 80168b8:	d027      	beq.n	801690a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x576>
 80168ba:	eb0b 0307 	add.w	r3, fp, r7
 80168be:	2b40      	cmp	r3, #64	@ 0x40
 80168c0:	dd18      	ble.n	80168f4 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x560>
 80168c2:	ea4f 034b 	mov.w	r3, fp, lsl #1
 80168c6:	4619      	mov	r1, r3
 80168c8:	9800      	ldr	r0, [sp, #0]
 80168ca:	930c      	str	r3, [sp, #48]	@ 0x30
 80168cc:	f7ea fb40 	bl	8000f50 <_ZN8touchgfx5paint9flushLineEPmi>
 80168d0:	465a      	mov	r2, fp
 80168d2:	9b01      	ldr	r3, [sp, #4]
 80168d4:	9900      	ldr	r1, [sp, #0]
 80168d6:	4620      	mov	r0, r4
 80168d8:	f7ea fb64 	bl	8000fa4 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh>
 80168dc:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 80168de:	441c      	add	r4, r3
 80168e0:	9b00      	ldr	r3, [sp, #0]
 80168e2:	461a      	mov	r2, r3
 80168e4:	4b3d      	ldr	r3, [pc, #244]	@ (80169dc <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x648>)
 80168e6:	429a      	cmp	r2, r3
 80168e8:	bf0c      	ite	eq
 80168ea:	4b3d      	ldreq	r3, [pc, #244]	@ (80169e0 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x64c>)
 80168ec:	4b3b      	ldrne	r3, [pc, #236]	@ (80169dc <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x648>)
 80168ee:	9300      	str	r3, [sp, #0]
 80168f0:	f04f 0b00 	mov.w	fp, #0
 80168f4:	9b00      	ldr	r3, [sp, #0]
 80168f6:	eb03 024b 	add.w	r2, r3, fp, lsl #1
 80168fa:	463b      	mov	r3, r7
 80168fc:	2b00      	cmp	r3, #0
 80168fe:	f43f af3f 	beq.w	8016780 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3ec>
 8016902:	f822 9b02 	strh.w	r9, [r2], #2
 8016906:	3b01      	subs	r3, #1
 8016908:	e7f8      	b.n	80168fc <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x568>
 801690a:	eb04 0747 	add.w	r7, r4, r7, lsl #1
 801690e:	42a7      	cmp	r7, r4
 8016910:	f67f af37 	bls.w	8016782 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3ee>
 8016914:	f824 9b02 	strh.w	r9, [r4], #2
 8016918:	e7f9      	b.n	801690e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x57a>
 801691a:	f1bb 0f00 	cmp.w	fp, #0
 801691e:	d00c      	beq.n	801693a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x5a6>
 8016920:	ea4f 084b 	mov.w	r8, fp, lsl #1
 8016924:	4641      	mov	r1, r8
 8016926:	9800      	ldr	r0, [sp, #0]
 8016928:	f7ea fb12 	bl	8000f50 <_ZN8touchgfx5paint9flushLineEPmi>
 801692c:	4620      	mov	r0, r4
 801692e:	9b01      	ldr	r3, [sp, #4]
 8016930:	9900      	ldr	r1, [sp, #0]
 8016932:	465a      	mov	r2, fp
 8016934:	f7ea fb36 	bl	8000fa4 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh>
 8016938:	4444      	add	r4, r8
 801693a:	4b2a      	ldr	r3, [pc, #168]	@ (80169e4 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x650>)
 801693c:	9a02      	ldr	r2, [sp, #8]
 801693e:	881b      	ldrh	r3, [r3, #0]
 8016940:	1a9b      	subs	r3, r3, r2
 8016942:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8016946:	9b06      	ldr	r3, [sp, #24]
 8016948:	3301      	adds	r3, #1
 801694a:	9306      	str	r3, [sp, #24]
 801694c:	9a06      	ldr	r2, [sp, #24]
 801694e:	9b04      	ldr	r3, [sp, #16]
 8016950:	4293      	cmp	r3, r2
 8016952:	d120      	bne.n	8016996 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x602>
 8016954:	9b05      	ldr	r3, [sp, #20]
 8016956:	9a05      	ldr	r2, [sp, #20]
 8016958:	f8bd 9040 	ldrh.w	r9, [sp, #64]	@ 0x40
 801695c:	f8bd 5038 	ldrh.w	r5, [sp, #56]	@ 0x38
 8016960:	980b      	ldr	r0, [sp, #44]	@ 0x2c
 8016962:	f103 0801 	add.w	r8, r3, #1
 8016966:	9b08      	ldr	r3, [sp, #32]
 8016968:	f853 7022 	ldr.w	r7, [r3, r2, lsl #2]
 801696c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801696e:	ba3f      	rev	r7, r7
 8016970:	2280      	movs	r2, #128	@ 0x80
 8016972:	2100      	movs	r1, #0
 8016974:	441f      	add	r7, r3
 8016976:	eba9 0905 	sub.w	r9, r9, r5
 801697a:	f00c f9a0 	bl	8022cbe <memset>
 801697e:	2300      	movs	r3, #0
 8016980:	fa1f f989 	uxth.w	r9, r9
 8016984:	f04f 0600 	mov.w	r6, #0
 8016988:	f8cd 8014 	str.w	r8, [sp, #20]
 801698c:	9306      	str	r3, [sp, #24]
 801698e:	f7ea fad5 	bl	8000f3c <_ZN8touchgfx5paint8tearDownEv>
 8016992:	46ba      	mov	sl, r7
 8016994:	e58a      	b.n	80164ac <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x118>
 8016996:	f8bd 903c 	ldrh.w	r9, [sp, #60]	@ 0x3c
 801699a:	9b02      	ldr	r3, [sp, #8]
 801699c:	eba9 0903 	sub.w	r9, r9, r3
 80169a0:	eba9 0505 	sub.w	r5, r9, r5
 80169a4:	fa1f f985 	uxth.w	r9, r5
 80169a8:	e7f1      	b.n	801698e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x5fa>
 80169aa:	4b0f      	ldr	r3, [pc, #60]	@ (80169e8 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x654>)
 80169ac:	6818      	ldr	r0, [r3, #0]
 80169ae:	6803      	ldr	r3, [r0, #0]
 80169b0:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80169b2:	4798      	blx	r3
 80169b4:	b013      	add	sp, #76	@ 0x4c
 80169b6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80169ba:	9b02      	ldr	r3, [sp, #8]
 80169bc:	9a02      	ldr	r2, [sp, #8]
 80169be:	42ab      	cmp	r3, r5
 80169c0:	bfa8      	it	ge
 80169c2:	462b      	movge	r3, r5
 80169c4:	eba2 0803 	sub.w	r8, r2, r3
 80169c8:	1aed      	subs	r5, r5, r3
 80169ca:	e626      	b.n	801661a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x286>
 80169cc:	f108 38ff 	add.w	r8, r8, #4294967295
 80169d0:	fa1f f986 	uxth.w	r9, r6
 80169d4:	2500      	movs	r5, #0
 80169d6:	2701      	movs	r7, #1
 80169d8:	e76f      	b.n	80168ba <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x526>
 80169da:	bf00      	nop
 80169dc:	20000280 	.word	0x20000280
 80169e0:	20000380 	.word	0x20000380
 80169e4:	20013f24 	.word	0x20013f24
 80169e8:	20013f2c 	.word	0x20013f2c

080169ec <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
 80169ec:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80169f0:	b08f      	sub	sp, #60	@ 0x3c
 80169f2:	461c      	mov	r4, r3
 80169f4:	9203      	str	r2, [sp, #12]
 80169f6:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 80169fa:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 80169fc:	9202      	str	r2, [sp, #8]
 80169fe:	460f      	mov	r7, r1
 8016a00:	2a00      	cmp	r2, #0
 8016a02:	f000 8128 	beq.w	8016c56 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x26a>
 8016a06:	6820      	ldr	r0, [r4, #0]
 8016a08:	6861      	ldr	r1, [r4, #4]
 8016a0a:	aa0a      	add	r2, sp, #40	@ 0x28
 8016a0c:	c203      	stmia	r2!, {r0, r1}
 8016a0e:	6818      	ldr	r0, [r3, #0]
 8016a10:	6859      	ldr	r1, [r3, #4]
 8016a12:	aa0c      	add	r2, sp, #48	@ 0x30
 8016a14:	c203      	stmia	r2!, {r0, r1}
 8016a16:	a80a      	add	r0, sp, #40	@ 0x28
 8016a18:	f7f8 fbe0 	bl	800f1dc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8016a1c:	4621      	mov	r1, r4
 8016a1e:	a80c      	add	r0, sp, #48	@ 0x30
 8016a20:	f7f8 fc04 	bl	800f22c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8016a24:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	@ 0x2c
 8016a28:	f9bd 502e 	ldrsh.w	r5, [sp, #46]	@ 0x2e
 8016a2c:	f8bd 0030 	ldrh.w	r0, [sp, #48]	@ 0x30
 8016a30:	f5b6 6f80 	cmp.w	r6, #1024	@ 0x400
 8016a34:	bfde      	ittt	le
 8016a36:	b2b3      	uxthle	r3, r6
 8016a38:	f44f 6280 	movle.w	r2, #1024	@ 0x400
 8016a3c:	fb92 f3f3 	sdivle	r3, r2, r3
 8016a40:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	@ 0x32
 8016a44:	bfc8      	it	gt
 8016a46:	2301      	movgt	r3, #1
 8016a48:	fb92 f1f3 	sdiv	r1, r2, r3
 8016a4c:	fa1f fc81 	uxth.w	ip, r1
 8016a50:	fb0c 2413 	mls	r4, ip, r3, r2
 8016a54:	fb14 f406 	smulbb	r4, r4, r6
 8016a58:	441d      	add	r5, r3
 8016a5a:	4404      	add	r4, r0
 8016a5c:	4661      	mov	r1, ip
 8016a5e:	3d01      	subs	r5, #1
 8016a60:	b2a4      	uxth	r4, r4
 8016a62:	fb95 f5f3 	sdiv	r5, r5, r3
 8016a66:	b121      	cbz	r1, 8016a72 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x86>
 8016a68:	9b03      	ldr	r3, [sp, #12]
 8016a6a:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 8016a6e:	ba1b      	rev	r3, r3
 8016a70:	441f      	add	r7, r3
 8016a72:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
 8016a76:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	@ 0x34
 8016a7a:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	@ 0x36
 8016a7e:	4418      	add	r0, r3
 8016a80:	f8bd 302a 	ldrh.w	r3, [sp, #42]	@ 0x2a
 8016a84:	f8ad 0030 	strh.w	r0, [sp, #48]	@ 0x30
 8016a88:	441a      	add	r2, r3
 8016a8a:	4b74      	ldr	r3, [pc, #464]	@ (8016c5c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x270>)
 8016a8c:	f8ad 2032 	strh.w	r2, [sp, #50]	@ 0x32
 8016a90:	6818      	ldr	r0, [r3, #0]
 8016a92:	6803      	ldr	r3, [r0, #0]
 8016a94:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8016a96:	4798      	blx	r3
 8016a98:	4a71      	ldr	r2, [pc, #452]	@ (8016c60 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x274>)
 8016a9a:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	@ 0x32
 8016a9e:	8813      	ldrh	r3, [r2, #0]
 8016aa0:	f9bd c030 	ldrsh.w	ip, [sp, #48]	@ 0x30
 8016aa4:	9209      	str	r2, [sp, #36]	@ 0x24
 8016aa6:	fb03 c101 	mla	r1, r3, r1, ip
 8016aaa:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 8016aae:	4373      	muls	r3, r6
 8016ab0:	b2ad      	uxth	r5, r5
 8016ab2:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8016ab6:	00ad      	lsls	r5, r5, #2
 8016ab8:	2c00      	cmp	r4, #0
 8016aba:	9304      	str	r3, [sp, #16]
 8016abc:	f105 0304 	add.w	r3, r5, #4
 8016ac0:	9305      	str	r3, [sp, #20]
 8016ac2:	bf0c      	ite	eq
 8016ac4:	46c8      	moveq	r8, r9
 8016ac6:	f04f 0800 	movne.w	r8, #0
 8016aca:	2300      	movs	r3, #0
 8016acc:	fa1f f888 	uxth.w	r8, r8
 8016ad0:	9301      	str	r3, [sp, #4]
 8016ad2:	9a04      	ldr	r2, [sp, #16]
 8016ad4:	4282      	cmp	r2, r0
 8016ad6:	f240 80b9 	bls.w	8016c4c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x260>
 8016ada:	b95b      	cbnz	r3, 8016af4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x108>
 8016adc:	783a      	ldrb	r2, [r7, #0]
 8016ade:	0993      	lsrs	r3, r2, #6
 8016ae0:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
 8016ae4:	9201      	str	r2, [sp, #4]
 8016ae6:	1e5a      	subs	r2, r3, #1
 8016ae8:	2a02      	cmp	r2, #2
 8016aea:	bf8d      	iteet	hi
 8016aec:	787b      	ldrbhi	r3, [r7, #1]
 8016aee:	3701      	addls	r7, #1
 8016af0:	b29b      	uxthls	r3, r3
 8016af2:	3702      	addhi	r7, #2
 8016af4:	b184      	cbz	r4, 8016b18 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x12c>
 8016af6:	429c      	cmp	r4, r3
 8016af8:	bf95      	itete	ls
 8016afa:	1b1c      	subls	r4, r3, r4
 8016afc:	1ae4      	subhi	r4, r4, r3
 8016afe:	fa1f fa84 	uxthls.w	sl, r4
 8016b02:	b2a4      	uxthhi	r4, r4
 8016b04:	bf87      	ittee	hi
 8016b06:	46c4      	movhi	ip, r8
 8016b08:	f04f 0a00 	movhi.w	sl, #0
 8016b0c:	fa1f fc89 	uxthls.w	ip, r9
 8016b10:	2400      	movls	r4, #0
 8016b12:	4653      	mov	r3, sl
 8016b14:	46e0      	mov	r8, ip
 8016b16:	e7dc      	b.n	8016ad2 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xe6>
 8016b18:	2204      	movs	r2, #4
 8016b1a:	4615      	mov	r5, r2
 8016b1c:	9905      	ldr	r1, [sp, #20]
 8016b1e:	9a01      	ldr	r2, [sp, #4]
 8016b20:	fb15 1202 	smlabb	r2, r5, r2, r1
 8016b24:	9903      	ldr	r1, [sp, #12]
 8016b26:	588a      	ldr	r2, [r1, r2]
 8016b28:	4543      	cmp	r3, r8
 8016b2a:	bf27      	ittee	cs
 8016b2c:	eba3 0a08 	subcs.w	sl, r3, r8
 8016b30:	46c6      	movcs	lr, r8
 8016b32:	eba8 0c03 	subcc.w	ip, r8, r3
 8016b36:	469e      	movcc	lr, r3
 8016b38:	ea4f 6112 	mov.w	r1, r2, lsr #24
 8016b3c:	bf27      	ittee	cs
 8016b3e:	fa1f fa8a 	uxthcs.w	sl, sl
 8016b42:	46a4      	movcs	ip, r4
 8016b44:	fa1f fc8c 	uxthcc.w	ip, ip
 8016b48:	46a2      	movcc	sl, r4
 8016b4a:	ea4f 0e4e 	mov.w	lr, lr, lsl #1
 8016b4e:	2900      	cmp	r1, #0
 8016b50:	d066      	beq.n	8016c20 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x234>
 8016b52:	29ff      	cmp	r1, #255	@ 0xff
 8016b54:	ea4f 2612 	mov.w	r6, r2, lsr #8
 8016b58:	d114      	bne.n	8016b84 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x198>
 8016b5a:	9d02      	ldr	r5, [sp, #8]
 8016b5c:	2dff      	cmp	r5, #255	@ 0xff
 8016b5e:	d111      	bne.n	8016b84 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x198>
 8016b60:	0951      	lsrs	r1, r2, #5
 8016b62:	f426 66ff 	bic.w	r6, r6, #2040	@ 0x7f8
 8016b66:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 8016b6a:	f026 0607 	bic.w	r6, r6, #7
 8016b6e:	430e      	orrs	r6, r1
 8016b70:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8016b74:	4316      	orrs	r6, r2
 8016b76:	b2b6      	uxth	r6, r6
 8016b78:	4486      	add	lr, r0
 8016b7a:	4586      	cmp	lr, r0
 8016b7c:	d051      	beq.n	8016c22 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
 8016b7e:	f820 6b02 	strh.w	r6, [r0], #2
 8016b82:	e7fa      	b.n	8016b7a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x18e>
 8016b84:	9d02      	ldr	r5, [sp, #8]
 8016b86:	4369      	muls	r1, r5
 8016b88:	1c4d      	adds	r5, r1, #1
 8016b8a:	eb05 2521 	add.w	r5, r5, r1, asr #8
 8016b8e:	122d      	asrs	r5, r5, #8
 8016b90:	ea6f 0b05 	mvn.w	fp, r5
 8016b94:	f3c2 4107 	ubfx	r1, r2, #16, #8
 8016b98:	b2ad      	uxth	r5, r5
 8016b9a:	b2f6      	uxtb	r6, r6
 8016b9c:	b2d2      	uxtb	r2, r2
 8016b9e:	fb11 f105 	smulbb	r1, r1, r5
 8016ba2:	fb16 f605 	smulbb	r6, r6, r5
 8016ba6:	fb12 f205 	smulbb	r2, r2, r5
 8016baa:	b289      	uxth	r1, r1
 8016bac:	b2b6      	uxth	r6, r6
 8016bae:	b292      	uxth	r2, r2
 8016bb0:	9106      	str	r1, [sp, #24]
 8016bb2:	9607      	str	r6, [sp, #28]
 8016bb4:	9208      	str	r2, [sp, #32]
 8016bb6:	4486      	add	lr, r0
 8016bb8:	fa5f fb8b 	uxtb.w	fp, fp
 8016bbc:	4586      	cmp	lr, r0
 8016bbe:	d030      	beq.n	8016c22 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
 8016bc0:	8802      	ldrh	r2, [r0, #0]
 8016bc2:	9906      	ldr	r1, [sp, #24]
 8016bc4:	1216      	asrs	r6, r2, #8
 8016bc6:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 8016bca:	10d5      	asrs	r5, r2, #3
 8016bcc:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 8016bd0:	fb06 160b 	mla	r6, r6, fp, r1
 8016bd4:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 8016bd8:	9907      	ldr	r1, [sp, #28]
 8016bda:	00d2      	lsls	r2, r2, #3
 8016bdc:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 8016be0:	fb05 150b 	mla	r5, r5, fp, r1
 8016be4:	b2d2      	uxtb	r2, r2
 8016be6:	9908      	ldr	r1, [sp, #32]
 8016be8:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 8016bec:	b2b6      	uxth	r6, r6
 8016bee:	fb02 120b 	mla	r2, r2, fp, r1
 8016bf2:	b292      	uxth	r2, r2
 8016bf4:	1c71      	adds	r1, r6, #1
 8016bf6:	eb01 2616 	add.w	r6, r1, r6, lsr #8
 8016bfa:	1c51      	adds	r1, r2, #1
 8016bfc:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8016c00:	b2ad      	uxth	r5, r5
 8016c02:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8016c06:	f406 4678 	and.w	r6, r6, #63488	@ 0xf800
 8016c0a:	4316      	orrs	r6, r2
 8016c0c:	1c6a      	adds	r2, r5, #1
 8016c0e:	eb02 2515 	add.w	r5, r2, r5, lsr #8
 8016c12:	096d      	lsrs	r5, r5, #5
 8016c14:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 8016c18:	432e      	orrs	r6, r5
 8016c1a:	f820 6b02 	strh.w	r6, [r0], #2
 8016c1e:	e7cd      	b.n	8016bbc <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1d0>
 8016c20:	4470      	add	r0, lr
 8016c22:	4543      	cmp	r3, r8
 8016c24:	f4ff af75 	bcc.w	8016b12 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x126>
 8016c28:	f8bd 402c 	ldrh.w	r4, [sp, #44]	@ 0x2c
 8016c2c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8016c2e:	fa1f fc89 	uxth.w	ip, r9
 8016c32:	eba4 040c 	sub.w	r4, r4, ip
 8016c36:	881b      	ldrh	r3, [r3, #0]
 8016c38:	b2a4      	uxth	r4, r4
 8016c3a:	2c00      	cmp	r4, #0
 8016c3c:	eba3 0309 	sub.w	r3, r3, r9
 8016c40:	bf18      	it	ne
 8016c42:	f04f 0c00 	movne.w	ip, #0
 8016c46:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8016c4a:	e762      	b.n	8016b12 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x126>
 8016c4c:	4b03      	ldr	r3, [pc, #12]	@ (8016c5c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x270>)
 8016c4e:	6818      	ldr	r0, [r3, #0]
 8016c50:	6803      	ldr	r3, [r0, #0]
 8016c52:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8016c54:	4798      	blx	r3
 8016c56:	b00f      	add	sp, #60	@ 0x3c
 8016c58:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8016c5c:	20013f2c 	.word	0x20013f2c
 8016c60:	20013f24 	.word	0x20013f24

08016c64 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
 8016c64:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016c68:	b093      	sub	sp, #76	@ 0x4c
 8016c6a:	461c      	mov	r4, r3
 8016c6c:	9205      	str	r2, [sp, #20]
 8016c6e:	f89d 2074 	ldrb.w	r2, [sp, #116]	@ 0x74
 8016c72:	9101      	str	r1, [sp, #4]
 8016c74:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 8016c76:	9202      	str	r2, [sp, #8]
 8016c78:	2a00      	cmp	r2, #0
 8016c7a:	f000 812c 	beq.w	8016ed6 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x272>
 8016c7e:	6820      	ldr	r0, [r4, #0]
 8016c80:	6861      	ldr	r1, [r4, #4]
 8016c82:	aa0e      	add	r2, sp, #56	@ 0x38
 8016c84:	c203      	stmia	r2!, {r0, r1}
 8016c86:	6818      	ldr	r0, [r3, #0]
 8016c88:	6859      	ldr	r1, [r3, #4]
 8016c8a:	aa10      	add	r2, sp, #64	@ 0x40
 8016c8c:	c203      	stmia	r2!, {r0, r1}
 8016c8e:	a80e      	add	r0, sp, #56	@ 0x38
 8016c90:	f7f8 faa4 	bl	800f1dc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8016c94:	4621      	mov	r1, r4
 8016c96:	a810      	add	r0, sp, #64	@ 0x40
 8016c98:	f7f8 fac8 	bl	800f22c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8016c9c:	f9bd 603c 	ldrsh.w	r6, [sp, #60]	@ 0x3c
 8016ca0:	f9bd 503e 	ldrsh.w	r5, [sp, #62]	@ 0x3e
 8016ca4:	f8bd 0040 	ldrh.w	r0, [sp, #64]	@ 0x40
 8016ca8:	f5b6 6f80 	cmp.w	r6, #1024	@ 0x400
 8016cac:	bfde      	ittt	le
 8016cae:	b2b3      	uxthle	r3, r6
 8016cb0:	f44f 6280 	movle.w	r2, #1024	@ 0x400
 8016cb4:	fb92 f3f3 	sdivle	r3, r2, r3
 8016cb8:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	@ 0x42
 8016cbc:	bfc8      	it	gt
 8016cbe:	2301      	movgt	r3, #1
 8016cc0:	fb92 f1f3 	sdiv	r1, r2, r3
 8016cc4:	fa1f fc81 	uxth.w	ip, r1
 8016cc8:	fb0c 2413 	mls	r4, ip, r3, r2
 8016ccc:	fb14 f406 	smulbb	r4, r4, r6
 8016cd0:	441d      	add	r5, r3
 8016cd2:	4404      	add	r4, r0
 8016cd4:	4661      	mov	r1, ip
 8016cd6:	3d01      	subs	r5, #1
 8016cd8:	b2a4      	uxth	r4, r4
 8016cda:	fb95 f5f3 	sdiv	r5, r5, r3
 8016cde:	b131      	cbz	r1, 8016cee <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x8a>
 8016ce0:	9b05      	ldr	r3, [sp, #20]
 8016ce2:	9901      	ldr	r1, [sp, #4]
 8016ce4:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 8016ce8:	ba1b      	rev	r3, r3
 8016cea:	4419      	add	r1, r3
 8016cec:	9101      	str	r1, [sp, #4]
 8016cee:	f8bd 3038 	ldrh.w	r3, [sp, #56]	@ 0x38
 8016cf2:	f9bd b044 	ldrsh.w	fp, [sp, #68]	@ 0x44
 8016cf6:	f9bd 6046 	ldrsh.w	r6, [sp, #70]	@ 0x46
 8016cfa:	4418      	add	r0, r3
 8016cfc:	f8bd 303a 	ldrh.w	r3, [sp, #58]	@ 0x3a
 8016d00:	f8ad 0040 	strh.w	r0, [sp, #64]	@ 0x40
 8016d04:	441a      	add	r2, r3
 8016d06:	4b75      	ldr	r3, [pc, #468]	@ (8016edc <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x278>)
 8016d08:	f8ad 2042 	strh.w	r2, [sp, #66]	@ 0x42
 8016d0c:	6818      	ldr	r0, [r3, #0]
 8016d0e:	6803      	ldr	r3, [r0, #0]
 8016d10:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8016d12:	4798      	blx	r3
 8016d14:	4972      	ldr	r1, [pc, #456]	@ (8016ee0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x27c>)
 8016d16:	f9bd c040 	ldrsh.w	ip, [sp, #64]	@ 0x40
 8016d1a:	880b      	ldrh	r3, [r1, #0]
 8016d1c:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	@ 0x42
 8016d20:	910d      	str	r1, [sp, #52]	@ 0x34
 8016d22:	fb03 c202 	mla	r2, r3, r2, ip
 8016d26:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8016d2a:	4373      	muls	r3, r6
 8016d2c:	b2ad      	uxth	r5, r5
 8016d2e:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8016d32:	00ad      	lsls	r5, r5, #2
 8016d34:	9308      	str	r3, [sp, #32]
 8016d36:	1d2b      	adds	r3, r5, #4
 8016d38:	9309      	str	r3, [sp, #36]	@ 0x24
 8016d3a:	9b02      	ldr	r3, [sp, #8]
 8016d3c:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 8016d40:	9106      	str	r1, [sp, #24]
 8016d42:	43da      	mvns	r2, r3
 8016d44:	2c00      	cmp	r4, #0
 8016d46:	bf0c      	ite	eq
 8016d48:	46dc      	moveq	ip, fp
 8016d4a:	f04f 0c00 	movne.w	ip, #0
 8016d4e:	2300      	movs	r3, #0
 8016d50:	b2d2      	uxtb	r2, r2
 8016d52:	fa1f fc8c 	uxth.w	ip, ip
 8016d56:	9303      	str	r3, [sp, #12]
 8016d58:	9207      	str	r2, [sp, #28]
 8016d5a:	9a08      	ldr	r2, [sp, #32]
 8016d5c:	4282      	cmp	r2, r0
 8016d5e:	f240 80b5 	bls.w	8016ecc <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x268>
 8016d62:	b963      	cbnz	r3, 8016d7e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x11a>
 8016d64:	9b01      	ldr	r3, [sp, #4]
 8016d66:	781a      	ldrb	r2, [r3, #0]
 8016d68:	0993      	lsrs	r3, r2, #6
 8016d6a:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
 8016d6e:	9203      	str	r2, [sp, #12]
 8016d70:	1e5a      	subs	r2, r3, #1
 8016d72:	2a02      	cmp	r2, #2
 8016d74:	d815      	bhi.n	8016da2 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x13e>
 8016d76:	9a01      	ldr	r2, [sp, #4]
 8016d78:	3201      	adds	r2, #1
 8016d7a:	9201      	str	r2, [sp, #4]
 8016d7c:	b29b      	uxth	r3, r3
 8016d7e:	b1b4      	cbz	r4, 8016dae <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x14a>
 8016d80:	429c      	cmp	r4, r3
 8016d82:	bf95      	itete	ls
 8016d84:	1b1c      	subls	r4, r3, r4
 8016d86:	1ae4      	subhi	r4, r4, r3
 8016d88:	fa1f f884 	uxthls.w	r8, r4
 8016d8c:	b2a4      	uxthhi	r4, r4
 8016d8e:	bf87      	ittee	hi
 8016d90:	4666      	movhi	r6, ip
 8016d92:	f04f 0800 	movhi.w	r8, #0
 8016d96:	fa1f f68b 	uxthls.w	r6, fp
 8016d9a:	2400      	movls	r4, #0
 8016d9c:	4643      	mov	r3, r8
 8016d9e:	46b4      	mov	ip, r6
 8016da0:	e7db      	b.n	8016d5a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf6>
 8016da2:	9a01      	ldr	r2, [sp, #4]
 8016da4:	9b01      	ldr	r3, [sp, #4]
 8016da6:	3202      	adds	r2, #2
 8016da8:	785b      	ldrb	r3, [r3, #1]
 8016daa:	9201      	str	r2, [sp, #4]
 8016dac:	e7e7      	b.n	8016d7e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x11a>
 8016dae:	2203      	movs	r2, #3
 8016db0:	4615      	mov	r5, r2
 8016db2:	9909      	ldr	r1, [sp, #36]	@ 0x24
 8016db4:	9a03      	ldr	r2, [sp, #12]
 8016db6:	fb15 1202 	smlabb	r2, r5, r2, r1
 8016dba:	9905      	ldr	r1, [sp, #20]
 8016dbc:	4563      	cmp	r3, ip
 8016dbe:	eb01 0502 	add.w	r5, r1, r2
 8016dc2:	9902      	ldr	r1, [sp, #8]
 8016dc4:	bf29      	itett	cs
 8016dc6:	eba3 080c 	subcs.w	r8, r3, ip
 8016dca:	ebac 0603 	subcc.w	r6, ip, r3
 8016dce:	fa1f f888 	uxthcs.w	r8, r8
 8016dd2:	46e1      	movcs	r9, ip
 8016dd4:	bf2f      	iteee	cs
 8016dd6:	4626      	movcs	r6, r4
 8016dd8:	b2b6      	uxthcc	r6, r6
 8016dda:	4699      	movcc	r9, r3
 8016ddc:	46a0      	movcc	r8, r4
 8016dde:	29ff      	cmp	r1, #255	@ 0xff
 8016de0:	d04a      	beq.n	8016e78 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x214>
 8016de2:	9f06      	ldr	r7, [sp, #24]
 8016de4:	78a9      	ldrb	r1, [r5, #2]
 8016de6:	9004      	str	r0, [sp, #16]
 8016de8:	4379      	muls	r1, r7
 8016dea:	910a      	str	r1, [sp, #40]	@ 0x28
 8016dec:	7869      	ldrb	r1, [r5, #1]
 8016dee:	4379      	muls	r1, r7
 8016df0:	910b      	str	r1, [sp, #44]	@ 0x2c
 8016df2:	9905      	ldr	r1, [sp, #20]
 8016df4:	5c8a      	ldrb	r2, [r1, r2]
 8016df6:	437a      	muls	r2, r7
 8016df8:	920c      	str	r2, [sp, #48]	@ 0x30
 8016dfa:	46ca      	mov	sl, r9
 8016dfc:	f1ba 0f00 	cmp.w	sl, #0
 8016e00:	d03d      	beq.n	8016e7e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x21a>
 8016e02:	9a04      	ldr	r2, [sp, #16]
 8016e04:	9f07      	ldr	r7, [sp, #28]
 8016e06:	8812      	ldrh	r2, [r2, #0]
 8016e08:	1215      	asrs	r5, r2, #8
 8016e0a:	46be      	mov	lr, r7
 8016e0c:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 8016e10:	9f0a      	ldr	r7, [sp, #40]	@ 0x28
 8016e12:	10d1      	asrs	r1, r2, #3
 8016e14:	ea45 1555 	orr.w	r5, r5, r5, lsr #5
 8016e18:	fb05 750e 	mla	r5, r5, lr, r7
 8016e1c:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 8016e20:	9f0b      	ldr	r7, [sp, #44]	@ 0x2c
 8016e22:	00d2      	lsls	r2, r2, #3
 8016e24:	ea41 1191 	orr.w	r1, r1, r1, lsr #6
 8016e28:	fb01 710e 	mla	r1, r1, lr, r7
 8016e2c:	b2d2      	uxtb	r2, r2
 8016e2e:	9f0c      	ldr	r7, [sp, #48]	@ 0x30
 8016e30:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 8016e34:	b2ad      	uxth	r5, r5
 8016e36:	fb02 720e 	mla	r2, r2, lr, r7
 8016e3a:	b292      	uxth	r2, r2
 8016e3c:	f105 0e01 	add.w	lr, r5, #1
 8016e40:	eb0e 2515 	add.w	r5, lr, r5, lsr #8
 8016e44:	f102 0e01 	add.w	lr, r2, #1
 8016e48:	eb0e 2212 	add.w	r2, lr, r2, lsr #8
 8016e4c:	b289      	uxth	r1, r1
 8016e4e:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8016e52:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 8016e56:	4315      	orrs	r5, r2
 8016e58:	1c4a      	adds	r2, r1, #1
 8016e5a:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8016e5e:	0949      	lsrs	r1, r1, #5
 8016e60:	9a04      	ldr	r2, [sp, #16]
 8016e62:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 8016e66:	430d      	orrs	r5, r1
 8016e68:	f822 5b02 	strh.w	r5, [r2], #2
 8016e6c:	f10a 3aff 	add.w	sl, sl, #4294967295
 8016e70:	9204      	str	r2, [sp, #16]
 8016e72:	fa1f fa8a 	uxth.w	sl, sl
 8016e76:	e7c1      	b.n	8016dfc <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x198>
 8016e78:	4649      	mov	r1, r9
 8016e7a:	4686      	mov	lr, r0
 8016e7c:	b999      	cbnz	r1, 8016ea6 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x242>
 8016e7e:	4563      	cmp	r3, ip
 8016e80:	eb00 0049 	add.w	r0, r0, r9, lsl #1
 8016e84:	d38a      	bcc.n	8016d9c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x138>
 8016e86:	f8bd 403c 	ldrh.w	r4, [sp, #60]	@ 0x3c
 8016e8a:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8016e8c:	fa1f f68b 	uxth.w	r6, fp
 8016e90:	1ba4      	subs	r4, r4, r6
 8016e92:	881b      	ldrh	r3, [r3, #0]
 8016e94:	b2a4      	uxth	r4, r4
 8016e96:	2c00      	cmp	r4, #0
 8016e98:	eba3 030b 	sub.w	r3, r3, fp
 8016e9c:	bf18      	it	ne
 8016e9e:	2600      	movne	r6, #0
 8016ea0:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8016ea4:	e77a      	b.n	8016d9c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x138>
 8016ea6:	78aa      	ldrb	r2, [r5, #2]
 8016ea8:	4f0e      	ldr	r7, [pc, #56]	@ (8016ee4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x280>)
 8016eaa:	ea07 2a02 	and.w	sl, r7, r2, lsl #8
 8016eae:	786a      	ldrb	r2, [r5, #1]
 8016eb0:	00d2      	lsls	r2, r2, #3
 8016eb2:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8016eb6:	ea4a 0202 	orr.w	r2, sl, r2
 8016eba:	f895 a000 	ldrb.w	sl, [r5]
 8016ebe:	3901      	subs	r1, #1
 8016ec0:	ea42 02da 	orr.w	r2, r2, sl, lsr #3
 8016ec4:	f82e 2b02 	strh.w	r2, [lr], #2
 8016ec8:	b289      	uxth	r1, r1
 8016eca:	e7d7      	b.n	8016e7c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x218>
 8016ecc:	4b03      	ldr	r3, [pc, #12]	@ (8016edc <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x278>)
 8016ece:	6818      	ldr	r0, [r3, #0]
 8016ed0:	6803      	ldr	r3, [r0, #0]
 8016ed2:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8016ed4:	4798      	blx	r3
 8016ed6:	b013      	add	sp, #76	@ 0x4c
 8016ed8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8016edc:	20013f2c 	.word	0x20013f2c
 8016ee0:	20013f24 	.word	0x20013f24
 8016ee4:	fffff800 	.word	0xfffff800

08016ee8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
 8016ee8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016eec:	b09d      	sub	sp, #116	@ 0x74
 8016eee:	e9cd 1211 	strd	r1, r2, [sp, #68]	@ 0x44
 8016ef2:	f89d 209c 	ldrb.w	r2, [sp, #156]	@ 0x9c
 8016ef6:	920e      	str	r2, [sp, #56]	@ 0x38
 8016ef8:	461c      	mov	r4, r3
 8016efa:	4683      	mov	fp, r0
 8016efc:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 8016efe:	2a00      	cmp	r2, #0
 8016f00:	f000 81e0 	beq.w	80172c4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3dc>
 8016f04:	6820      	ldr	r0, [r4, #0]
 8016f06:	6861      	ldr	r1, [r4, #4]
 8016f08:	aa18      	add	r2, sp, #96	@ 0x60
 8016f0a:	c203      	stmia	r2!, {r0, r1}
 8016f0c:	6818      	ldr	r0, [r3, #0]
 8016f0e:	6859      	ldr	r1, [r3, #4]
 8016f10:	aa1a      	add	r2, sp, #104	@ 0x68
 8016f12:	c203      	stmia	r2!, {r0, r1}
 8016f14:	a818      	add	r0, sp, #96	@ 0x60
 8016f16:	f7f8 f961 	bl	800f1dc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8016f1a:	4621      	mov	r1, r4
 8016f1c:	a81a      	add	r0, sp, #104	@ 0x68
 8016f1e:	f7f8 f985 	bl	800f22c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8016f22:	f9bd 3064 	ldrsh.w	r3, [sp, #100]	@ 0x64
 8016f26:	f9bd 4066 	ldrsh.w	r4, [sp, #102]	@ 0x66
 8016f2a:	f9bd 606e 	ldrsh.w	r6, [sp, #110]	@ 0x6e
 8016f2e:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 8016f32:	bfd7      	itett	le
 8016f34:	b29a      	uxthle	r2, r3
 8016f36:	2201      	movgt	r2, #1
 8016f38:	f44f 6180 	movle.w	r1, #1024	@ 0x400
 8016f3c:	fb91 f2f2 	sdivle	r2, r1, r2
 8016f40:	9202      	str	r2, [sp, #8]
 8016f42:	9802      	ldr	r0, [sp, #8]
 8016f44:	f9bd 206a 	ldrsh.w	r2, [sp, #106]	@ 0x6a
 8016f48:	fb92 f0f0 	sdiv	r0, r2, r0
 8016f4c:	b280      	uxth	r0, r0
 8016f4e:	900f      	str	r0, [sp, #60]	@ 0x3c
 8016f50:	9902      	ldr	r1, [sp, #8]
 8016f52:	9802      	ldr	r0, [sp, #8]
 8016f54:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
 8016f56:	440c      	add	r4, r1
 8016f58:	fb05 2510 	mls	r5, r5, r0, r2
 8016f5c:	fb15 f503 	smulbb	r5, r5, r3
 8016f60:	3c01      	subs	r4, #1
 8016f62:	f8bd 3060 	ldrh.w	r3, [sp, #96]	@ 0x60
 8016f66:	fb94 f4f1 	sdiv	r4, r4, r1
 8016f6a:	f8bd 1068 	ldrh.w	r1, [sp, #104]	@ 0x68
 8016f6e:	440d      	add	r5, r1
 8016f70:	4419      	add	r1, r3
 8016f72:	f8bd 3062 	ldrh.w	r3, [sp, #98]	@ 0x62
 8016f76:	f8ad 1068 	strh.w	r1, [sp, #104]	@ 0x68
 8016f7a:	441a      	add	r2, r3
 8016f7c:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	@ 0x6c
 8016f80:	9306      	str	r3, [sp, #24]
 8016f82:	4bb3      	ldr	r3, [pc, #716]	@ (8017250 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x368>)
 8016f84:	f8ad 206a 	strh.w	r2, [sp, #106]	@ 0x6a
 8016f88:	6818      	ldr	r0, [r3, #0]
 8016f8a:	6803      	ldr	r3, [r0, #0]
 8016f8c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8016f8e:	4798      	blx	r3
 8016f90:	4bb0      	ldr	r3, [pc, #704]	@ (8017254 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x36c>)
 8016f92:	f9bd 106a 	ldrsh.w	r1, [sp, #106]	@ 0x6a
 8016f96:	881a      	ldrh	r2, [r3, #0]
 8016f98:	f9bd 7068 	ldrsh.w	r7, [sp, #104]	@ 0x68
 8016f9c:	9316      	str	r3, [sp, #88]	@ 0x58
 8016f9e:	fb02 7101 	mla	r1, r2, r1, r7
 8016fa2:	3401      	adds	r4, #1
 8016fa4:	eb00 0841 	add.w	r8, r0, r1, lsl #1
 8016fa8:	b2a4      	uxth	r4, r4
 8016faa:	4356      	muls	r6, r2
 8016fac:	eb08 0246 	add.w	r2, r8, r6, lsl #1
 8016fb0:	00a4      	lsls	r4, r4, #2
 8016fb2:	920a      	str	r2, [sp, #40]	@ 0x28
 8016fb4:	1d22      	adds	r2, r4, #4
 8016fb6:	b2ad      	uxth	r5, r5
 8016fb8:	9213      	str	r2, [sp, #76]	@ 0x4c
 8016fba:	4ba7      	ldr	r3, [pc, #668]	@ (8017258 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x370>)
 8016fbc:	9a06      	ldr	r2, [sp, #24]
 8016fbe:	2d00      	cmp	r5, #0
 8016fc0:	bf0c      	ite	eq
 8016fc2:	4611      	moveq	r1, r2
 8016fc4:	2100      	movne	r1, #0
 8016fc6:	2200      	movs	r2, #0
 8016fc8:	eba3 030b 	sub.w	r3, r3, fp
 8016fcc:	b289      	uxth	r1, r1
 8016fce:	920d      	str	r2, [sp, #52]	@ 0x34
 8016fd0:	9317      	str	r3, [sp, #92]	@ 0x5c
 8016fd2:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 8016fd4:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8016fd6:	fa12 f383 	uxtah	r3, r2, r3
 8016fda:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 8016fdc:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 8016fe0:	3304      	adds	r3, #4
 8016fe2:	9308      	str	r3, [sp, #32]
 8016fe4:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8016fe6:	4543      	cmp	r3, r8
 8016fe8:	f240 8167 	bls.w	80172ba <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3d2>
 8016fec:	9a02      	ldr	r2, [sp, #8]
 8016fee:	f8bd 3064 	ldrh.w	r3, [sp, #100]	@ 0x64
 8016ff2:	fbb5 f3f3 	udiv	r3, r5, r3
 8016ff6:	1ad3      	subs	r3, r2, r3
 8016ff8:	b29b      	uxth	r3, r3
 8016ffa:	9314      	str	r3, [sp, #80]	@ 0x50
 8016ffc:	9b08      	ldr	r3, [sp, #32]
 8016ffe:	9808      	ldr	r0, [sp, #32]
 8017000:	785a      	ldrb	r2, [r3, #1]
 8017002:	789b      	ldrb	r3, [r3, #2]
 8017004:	7800      	ldrb	r0, [r0, #0]
 8017006:	9010      	str	r0, [sp, #64]	@ 0x40
 8017008:	021b      	lsls	r3, r3, #8
 801700a:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 801700e:	9a08      	ldr	r2, [sp, #32]
 8017010:	78d2      	ldrb	r2, [r2, #3]
 8017012:	4313      	orrs	r3, r2
 8017014:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 8017016:	3001      	adds	r0, #1
 8017018:	441a      	add	r2, r3
 801701a:	9007      	str	r0, [sp, #28]
 801701c:	1c50      	adds	r0, r2, #1
 801701e:	9005      	str	r0, [sp, #20]
 8017020:	7852      	ldrb	r2, [r2, #1]
 8017022:	9811      	ldr	r0, [sp, #68]	@ 0x44
 8017024:	0212      	lsls	r2, r2, #8
 8017026:	5cc3      	ldrb	r3, [r0, r3]
 8017028:	f402 72ff 	and.w	r2, r2, #510	@ 0x1fe
 801702c:	431a      	orrs	r2, r3
 801702e:	b293      	uxth	r3, r2
 8017030:	930b      	str	r3, [sp, #44]	@ 0x2c
 8017032:	2300      	movs	r3, #0
 8017034:	9309      	str	r3, [sp, #36]	@ 0x24
 8017036:	2301      	movs	r3, #1
 8017038:	9301      	str	r3, [sp, #4]
 801703a:	9304      	str	r3, [sp, #16]
 801703c:	2300      	movs	r3, #0
 801703e:	f88b 2804 	strb.w	r2, [fp, #2052]	@ 0x804
 8017042:	9303      	str	r3, [sp, #12]
 8017044:	f04f 0e01 	mov.w	lr, #1
 8017048:	2d00      	cmp	r5, #0
 801704a:	d07c      	beq.n	8017146 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x25e>
 801704c:	45ae      	cmp	lr, r5
 801704e:	d26b      	bcs.n	8017128 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x240>
 8017050:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8017052:	eba5 050e 	sub.w	r5, r5, lr
 8017056:	4543      	cmp	r3, r8
 8017058:	b2ad      	uxth	r5, r5
 801705a:	460c      	mov	r4, r1
 801705c:	d802      	bhi.n	8017064 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x17c>
 801705e:	e070      	b.n	8017142 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x25a>
 8017060:	2b00      	cmp	r3, #0
 8017062:	d15c      	bne.n	801711e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
 8017064:	9b05      	ldr	r3, [sp, #20]
 8017066:	9a04      	ldr	r2, [sp, #16]
 8017068:	785b      	ldrb	r3, [r3, #1]
 801706a:	9904      	ldr	r1, [sp, #16]
 801706c:	f1c2 0207 	rsb	r2, r2, #7
 8017070:	4093      	lsls	r3, r2
 8017072:	005b      	lsls	r3, r3, #1
 8017074:	f403 72ff 	and.w	r2, r3, #510	@ 0x1fe
 8017078:	9b05      	ldr	r3, [sp, #20]
 801707a:	781b      	ldrb	r3, [r3, #0]
 801707c:	410b      	asrs	r3, r1
 801707e:	3101      	adds	r1, #1
 8017080:	b2c9      	uxtb	r1, r1
 8017082:	2908      	cmp	r1, #8
 8017084:	9104      	str	r1, [sp, #16]
 8017086:	9905      	ldr	r1, [sp, #20]
 8017088:	bf0a      	itet	eq
 801708a:	3102      	addeq	r1, #2
 801708c:	3101      	addne	r1, #1
 801708e:	9105      	streq	r1, [sp, #20]
 8017090:	b2db      	uxtb	r3, r3
 8017092:	bf0a      	itet	eq
 8017094:	2100      	moveq	r1, #0
 8017096:	9105      	strne	r1, [sp, #20]
 8017098:	9104      	streq	r1, [sp, #16]
 801709a:	4313      	orrs	r3, r2
 801709c:	9910      	ldr	r1, [sp, #64]	@ 0x40
 801709e:	b29a      	uxth	r2, r3
 80170a0:	4291      	cmp	r1, r2
 80170a2:	d30a      	bcc.n	80170ba <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1d2>
 80170a4:	f88b 3804 	strb.w	r3, [fp, #2052]	@ 0x804
 80170a8:	2301      	movs	r3, #1
 80170aa:	9907      	ldr	r1, [sp, #28]
 80170ac:	f5b1 7f00 	cmp.w	r1, #512	@ 0x200
 80170b0:	d30f      	bcc.n	80170d2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1ea>
 80170b2:	2100      	movs	r1, #0
 80170b4:	9301      	str	r3, [sp, #4]
 80170b6:	9103      	str	r1, [sp, #12]
 80170b8:	e032      	b.n	8017120 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x238>
 80170ba:	9b07      	ldr	r3, [sp, #28]
 80170bc:	429a      	cmp	r2, r3
 80170be:	d318      	bcc.n	80170f2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x20a>
 80170c0:	9b01      	ldr	r3, [sp, #4]
 80170c2:	f89b 1804 	ldrb.w	r1, [fp, #2052]	@ 0x804
 80170c6:	445b      	add	r3, fp
 80170c8:	f883 1804 	strb.w	r1, [r3, #2052]	@ 0x804
 80170cc:	9b01      	ldr	r3, [sp, #4]
 80170ce:	3301      	adds	r3, #1
 80170d0:	b29b      	uxth	r3, r3
 80170d2:	9907      	ldr	r1, [sp, #28]
 80170d4:	f89b 0804 	ldrb.w	r0, [fp, #2052]	@ 0x804
 80170d8:	eb0b 0181 	add.w	r1, fp, r1, lsl #2
 80170dc:	7108      	strb	r0, [r1, #4]
 80170de:	980b      	ldr	r0, [sp, #44]	@ 0x2c
 80170e0:	80c8      	strh	r0, [r1, #6]
 80170e2:	9801      	ldr	r0, [sp, #4]
 80170e4:	3001      	adds	r0, #1
 80170e6:	7148      	strb	r0, [r1, #5]
 80170e8:	9907      	ldr	r1, [sp, #28]
 80170ea:	3101      	adds	r1, #1
 80170ec:	b289      	uxth	r1, r1
 80170ee:	9107      	str	r1, [sp, #28]
 80170f0:	e7df      	b.n	80170b2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1ca>
 80170f2:	eb0b 0382 	add.w	r3, fp, r2, lsl #2
 80170f6:	4611      	mov	r1, r2
 80170f8:	795b      	ldrb	r3, [r3, #5]
 80170fa:	f603 0004 	addw	r0, r3, #2052	@ 0x804
 80170fe:	4458      	add	r0, fp
 8017100:	9e17      	ldr	r6, [sp, #92]	@ 0x5c
 8017102:	4406      	add	r6, r0
 8017104:	2e00      	cmp	r6, #0
 8017106:	dd06      	ble.n	8017116 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x22e>
 8017108:	eb0b 0181 	add.w	r1, fp, r1, lsl #2
 801710c:	790e      	ldrb	r6, [r1, #4]
 801710e:	f800 6d01 	strb.w	r6, [r0, #-1]!
 8017112:	88c9      	ldrh	r1, [r1, #6]
 8017114:	e7f4      	b.n	8017100 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x218>
 8017116:	f88b 1804 	strb.w	r1, [fp, #2052]	@ 0x804
 801711a:	b29b      	uxth	r3, r3
 801711c:	e7c5      	b.n	80170aa <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1c2>
 801711e:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 8017120:	920b      	str	r2, [sp, #44]	@ 0x2c
 8017122:	4621      	mov	r1, r4
 8017124:	469e      	mov	lr, r3
 8017126:	e78f      	b.n	8017048 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x160>
 8017128:	9a03      	ldr	r2, [sp, #12]
 801712a:	f8bd 4018 	ldrh.w	r4, [sp, #24]
 801712e:	442a      	add	r2, r5
 8017130:	ebae 0305 	sub.w	r3, lr, r5
 8017134:	b292      	uxth	r2, r2
 8017136:	b29b      	uxth	r3, r3
 8017138:	9203      	str	r2, [sp, #12]
 801713a:	2500      	movs	r5, #0
 801713c:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 801713e:	4542      	cmp	r2, r8
 8017140:	d88e      	bhi.n	8017060 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x178>
 8017142:	4621      	mov	r1, r4
 8017144:	e74e      	b.n	8016fe4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xfc>
 8017146:	458e      	cmp	lr, r1
 8017148:	bf29      	itett	cs
 801714a:	ebae 0301 	subcs.w	r3, lr, r1
 801714e:	eba1 040e 	subcc.w	r4, r1, lr
 8017152:	b29b      	uxthcs	r3, r3
 8017154:	910c      	strcs	r1, [sp, #48]	@ 0x30
 8017156:	bf2f      	iteee	cs
 8017158:	462c      	movcs	r4, r5
 801715a:	b2a4      	uxthcc	r4, r4
 801715c:	f8cd e030 	strcc.w	lr, [sp, #48]	@ 0x30
 8017160:	462b      	movcc	r3, r5
 8017162:	f04f 0900 	mov.w	r9, #0
 8017166:	9a03      	ldr	r2, [sp, #12]
 8017168:	980c      	ldr	r0, [sp, #48]	@ 0x30
 801716a:	444a      	add	r2, r9
 801716c:	4548      	cmp	r0, r9
 801716e:	b292      	uxth	r2, r2
 8017170:	d074      	beq.n	801725c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x374>
 8017172:	445a      	add	r2, fp
 8017174:	2004      	movs	r0, #4
 8017176:	4605      	mov	r5, r0
 8017178:	f892 2804 	ldrb.w	r2, [r2, #2052]	@ 0x804
 801717c:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 801717e:	fb15 0202 	smlabb	r2, r5, r2, r0
 8017182:	9812      	ldr	r0, [sp, #72]	@ 0x48
 8017184:	5880      	ldr	r0, [r0, r2]
 8017186:	ea5f 6a10 	movs.w	sl, r0, lsr #24
 801718a:	d014      	beq.n	80171b6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2ce>
 801718c:	f1ba 0fff 	cmp.w	sl, #255	@ 0xff
 8017190:	ea4f 2510 	mov.w	r5, r0, lsr #8
 8017194:	d112      	bne.n	80171bc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2d4>
 8017196:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 8017198:	2aff      	cmp	r2, #255	@ 0xff
 801719a:	d10f      	bne.n	80171bc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2d4>
 801719c:	0942      	lsrs	r2, r0, #5
 801719e:	f425 65ff 	bic.w	r5, r5, #2040	@ 0x7f8
 80171a2:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 80171a6:	f025 0507 	bic.w	r5, r5, #7
 80171aa:	4315      	orrs	r5, r2
 80171ac:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 80171b0:	4305      	orrs	r5, r0
 80171b2:	f828 5019 	strh.w	r5, [r8, r9, lsl #1]
 80171b6:	f109 0901 	add.w	r9, r9, #1
 80171ba:	e7d4      	b.n	8017166 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x27e>
 80171bc:	f838 c019 	ldrh.w	ip, [r8, r9, lsl #1]
 80171c0:	ea4f 06ec 	mov.w	r6, ip, asr #3
 80171c4:	f006 02fc 	and.w	r2, r6, #252	@ 0xfc
 80171c8:	9215      	str	r2, [sp, #84]	@ 0x54
 80171ca:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 80171cc:	fb02 fa0a 	mul.w	sl, r2, sl
 80171d0:	f10a 0201 	add.w	r2, sl, #1
 80171d4:	eb02 222a 	add.w	r2, r2, sl, asr #8
 80171d8:	ea4f 272c 	mov.w	r7, ip, asr #8
 80171dc:	1212      	asrs	r2, r2, #8
 80171de:	fa1f fa82 	uxth.w	sl, r2
 80171e2:	f3c0 4607 	ubfx	r6, r0, #16, #8
 80171e6:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 80171ea:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 80171ee:	43d2      	mvns	r2, r2
 80171f0:	b2d2      	uxtb	r2, r2
 80171f2:	fb16 f60a 	smulbb	r6, r6, sl
 80171f6:	fa5f fc8c 	uxtb.w	ip, ip
 80171fa:	ea47 1757 	orr.w	r7, r7, r7, lsr #5
 80171fe:	b2c0      	uxtb	r0, r0
 8017200:	fb07 6702 	mla	r7, r7, r2, r6
 8017204:	ea4c 1c5c 	orr.w	ip, ip, ip, lsr #5
 8017208:	9e15      	ldr	r6, [sp, #84]	@ 0x54
 801720a:	fb10 f00a 	smulbb	r0, r0, sl
 801720e:	fb0c 0002 	mla	r0, ip, r2, r0
 8017212:	b2ed      	uxtb	r5, r5
 8017214:	b2bf      	uxth	r7, r7
 8017216:	fb15 f50a 	smulbb	r5, r5, sl
 801721a:	b280      	uxth	r0, r0
 801721c:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
 8017220:	fb06 5602 	mla	r6, r6, r2, r5
 8017224:	1c7a      	adds	r2, r7, #1
 8017226:	1c45      	adds	r5, r0, #1
 8017228:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 801722c:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 8017230:	b2b6      	uxth	r6, r6
 8017232:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8017236:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 801723a:	432f      	orrs	r7, r5
 801723c:	1c75      	adds	r5, r6, #1
 801723e:	eb05 2516 	add.w	r5, r5, r6, lsr #8
 8017242:	096d      	lsrs	r5, r5, #5
 8017244:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 8017248:	432f      	orrs	r7, r5
 801724a:	f828 7019 	strh.w	r7, [r8, r9, lsl #1]
 801724e:	e7b2      	b.n	80171b6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2ce>
 8017250:	20013f2c 	.word	0x20013f2c
 8017254:	20013f24 	.word	0x20013f24
 8017258:	fffff7fb 	.word	0xfffff7fb
 801725c:	9203      	str	r2, [sp, #12]
 801725e:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 8017260:	458e      	cmp	lr, r1
 8017262:	eb08 0842 	add.w	r8, r8, r2, lsl #1
 8017266:	f4ff af68 	bcc.w	801713a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x252>
 801726a:	9a16      	ldr	r2, [sp, #88]	@ 0x58
 801726c:	9906      	ldr	r1, [sp, #24]
 801726e:	8812      	ldrh	r2, [r2, #0]
 8017270:	1a52      	subs	r2, r2, r1
 8017272:	eb08 0842 	add.w	r8, r8, r2, lsl #1
 8017276:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8017278:	9914      	ldr	r1, [sp, #80]	@ 0x50
 801727a:	3201      	adds	r2, #1
 801727c:	428a      	cmp	r2, r1
 801727e:	9209      	str	r2, [sp, #36]	@ 0x24
 8017280:	d111      	bne.n	80172a6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3be>
 8017282:	f8bd 5068 	ldrh.w	r5, [sp, #104]	@ 0x68
 8017286:	f8bd 9060 	ldrh.w	r9, [sp, #96]	@ 0x60
 801728a:	9b06      	ldr	r3, [sp, #24]
 801728c:	eba5 0509 	sub.w	r5, r5, r9
 8017290:	b2ad      	uxth	r5, r5
 8017292:	2d00      	cmp	r5, #0
 8017294:	bf08      	it	eq
 8017296:	4619      	moveq	r1, r3
 8017298:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801729a:	bf18      	it	ne
 801729c:	2100      	movne	r1, #0
 801729e:	3301      	adds	r3, #1
 80172a0:	930d      	str	r3, [sp, #52]	@ 0x34
 80172a2:	b289      	uxth	r1, r1
 80172a4:	e695      	b.n	8016fd2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xea>
 80172a6:	f8bd 4018 	ldrh.w	r4, [sp, #24]
 80172aa:	f8bd 5064 	ldrh.w	r5, [sp, #100]	@ 0x64
 80172ae:	1b2d      	subs	r5, r5, r4
 80172b0:	b2ad      	uxth	r5, r5
 80172b2:	2d00      	cmp	r5, #0
 80172b4:	bf18      	it	ne
 80172b6:	2400      	movne	r4, #0
 80172b8:	e740      	b.n	801713c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x254>
 80172ba:	4b04      	ldr	r3, [pc, #16]	@ (80172cc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3e4>)
 80172bc:	6818      	ldr	r0, [r3, #0]
 80172be:	6803      	ldr	r3, [r0, #0]
 80172c0:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80172c2:	4798      	blx	r3
 80172c4:	b01d      	add	sp, #116	@ 0x74
 80172c6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80172ca:	bf00      	nop
 80172cc:	20013f2c 	.word	0x20013f2c

080172d0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
 80172d0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80172d4:	b09f      	sub	sp, #124	@ 0x7c
 80172d6:	e9cd 1213 	strd	r1, r2, [sp, #76]	@ 0x4c
 80172da:	f89d 20a4 	ldrb.w	r2, [sp, #164]	@ 0xa4
 80172de:	920a      	str	r2, [sp, #40]	@ 0x28
 80172e0:	461d      	mov	r5, r3
 80172e2:	4604      	mov	r4, r0
 80172e4:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 80172e6:	2a00      	cmp	r2, #0
 80172e8:	f000 81fa 	beq.w	80176e0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x410>
 80172ec:	6828      	ldr	r0, [r5, #0]
 80172ee:	6869      	ldr	r1, [r5, #4]
 80172f0:	aa1a      	add	r2, sp, #104	@ 0x68
 80172f2:	c203      	stmia	r2!, {r0, r1}
 80172f4:	6818      	ldr	r0, [r3, #0]
 80172f6:	6859      	ldr	r1, [r3, #4]
 80172f8:	aa1c      	add	r2, sp, #112	@ 0x70
 80172fa:	c203      	stmia	r2!, {r0, r1}
 80172fc:	a81a      	add	r0, sp, #104	@ 0x68
 80172fe:	f7f7 ff6d 	bl	800f1dc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8017302:	4629      	mov	r1, r5
 8017304:	a81c      	add	r0, sp, #112	@ 0x70
 8017306:	f7f7 ff91 	bl	800f22c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801730a:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	@ 0x6c
 801730e:	f9bd 606e 	ldrsh.w	r6, [sp, #110]	@ 0x6e
 8017312:	f9bd 7076 	ldrsh.w	r7, [sp, #118]	@ 0x76
 8017316:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 801731a:	bfd7      	itett	le
 801731c:	b29a      	uxthle	r2, r3
 801731e:	2201      	movgt	r2, #1
 8017320:	f44f 6180 	movle.w	r1, #1024	@ 0x400
 8017324:	fb91 f2f2 	sdivle	r2, r1, r2
 8017328:	9201      	str	r2, [sp, #4]
 801732a:	9801      	ldr	r0, [sp, #4]
 801732c:	f9bd 2072 	ldrsh.w	r2, [sp, #114]	@ 0x72
 8017330:	fb92 f0f0 	sdiv	r0, r2, r0
 8017334:	b280      	uxth	r0, r0
 8017336:	9010      	str	r0, [sp, #64]	@ 0x40
 8017338:	9901      	ldr	r1, [sp, #4]
 801733a:	9801      	ldr	r0, [sp, #4]
 801733c:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 801733e:	440e      	add	r6, r1
 8017340:	fb05 2510 	mls	r5, r5, r0, r2
 8017344:	fb15 f503 	smulbb	r5, r5, r3
 8017348:	3e01      	subs	r6, #1
 801734a:	f8bd 3068 	ldrh.w	r3, [sp, #104]	@ 0x68
 801734e:	fb96 f6f1 	sdiv	r6, r6, r1
 8017352:	f8bd 1070 	ldrh.w	r1, [sp, #112]	@ 0x70
 8017356:	440d      	add	r5, r1
 8017358:	4419      	add	r1, r3
 801735a:	f8bd 306a 	ldrh.w	r3, [sp, #106]	@ 0x6a
 801735e:	f8ad 1070 	strh.w	r1, [sp, #112]	@ 0x70
 8017362:	441a      	add	r2, r3
 8017364:	f9bd 3074 	ldrsh.w	r3, [sp, #116]	@ 0x74
 8017368:	9304      	str	r3, [sp, #16]
 801736a:	4b96      	ldr	r3, [pc, #600]	@ (80175c4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2f4>)
 801736c:	f8ad 2072 	strh.w	r2, [sp, #114]	@ 0x72
 8017370:	6818      	ldr	r0, [r3, #0]
 8017372:	6803      	ldr	r3, [r0, #0]
 8017374:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8017376:	4798      	blx	r3
 8017378:	4b93      	ldr	r3, [pc, #588]	@ (80175c8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2f8>)
 801737a:	f9bd 1072 	ldrsh.w	r1, [sp, #114]	@ 0x72
 801737e:	881a      	ldrh	r2, [r3, #0]
 8017380:	f9bd c070 	ldrsh.w	ip, [sp, #112]	@ 0x70
 8017384:	9318      	str	r3, [sp, #96]	@ 0x60
 8017386:	fb02 c101 	mla	r1, r2, r1, ip
 801738a:	eb00 0b41 	add.w	fp, r0, r1, lsl #1
 801738e:	4357      	muls	r7, r2
 8017390:	eb0b 0247 	add.w	r2, fp, r7, lsl #1
 8017394:	3601      	adds	r6, #1
 8017396:	920b      	str	r2, [sp, #44]	@ 0x2c
 8017398:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 801739a:	4b8c      	ldr	r3, [pc, #560]	@ (80175cc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2fc>)
 801739c:	b2b6      	uxth	r6, r6
 801739e:	eb02 0686 	add.w	r6, r2, r6, lsl #2
 80173a2:	1d32      	adds	r2, r6, #4
 80173a4:	9206      	str	r2, [sp, #24]
 80173a6:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 80173a8:	43d2      	mvns	r2, r2
 80173aa:	b2d2      	uxtb	r2, r2
 80173ac:	b2ad      	uxth	r5, r5
 80173ae:	9215      	str	r2, [sp, #84]	@ 0x54
 80173b0:	9a04      	ldr	r2, [sp, #16]
 80173b2:	2d00      	cmp	r5, #0
 80173b4:	bf0c      	ite	eq
 80173b6:	4611      	moveq	r1, r2
 80173b8:	2100      	movne	r1, #0
 80173ba:	2200      	movs	r2, #0
 80173bc:	1b1b      	subs	r3, r3, r4
 80173be:	b289      	uxth	r1, r1
 80173c0:	920d      	str	r2, [sp, #52]	@ 0x34
 80173c2:	9319      	str	r3, [sp, #100]	@ 0x64
 80173c4:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 80173c6:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 80173c8:	fa12 f383 	uxtah	r3, r2, r3
 80173cc:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 80173ce:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 80173d2:	3304      	adds	r3, #4
 80173d4:	9307      	str	r3, [sp, #28]
 80173d6:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 80173d8:	455b      	cmp	r3, fp
 80173da:	f240 817c 	bls.w	80176d6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x406>
 80173de:	9a01      	ldr	r2, [sp, #4]
 80173e0:	f8bd 306c 	ldrh.w	r3, [sp, #108]	@ 0x6c
 80173e4:	fbb5 f3f3 	udiv	r3, r5, r3
 80173e8:	1ad3      	subs	r3, r2, r3
 80173ea:	b29b      	uxth	r3, r3
 80173ec:	9316      	str	r3, [sp, #88]	@ 0x58
 80173ee:	9b07      	ldr	r3, [sp, #28]
 80173f0:	9807      	ldr	r0, [sp, #28]
 80173f2:	785a      	ldrb	r2, [r3, #1]
 80173f4:	789b      	ldrb	r3, [r3, #2]
 80173f6:	7800      	ldrb	r0, [r0, #0]
 80173f8:	9011      	str	r0, [sp, #68]	@ 0x44
 80173fa:	021b      	lsls	r3, r3, #8
 80173fc:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8017400:	9a07      	ldr	r2, [sp, #28]
 8017402:	78d2      	ldrb	r2, [r2, #3]
 8017404:	4313      	orrs	r3, r2
 8017406:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 8017408:	3001      	adds	r0, #1
 801740a:	441a      	add	r2, r3
 801740c:	9005      	str	r0, [sp, #20]
 801740e:	1c50      	adds	r0, r2, #1
 8017410:	9003      	str	r0, [sp, #12]
 8017412:	7852      	ldrb	r2, [r2, #1]
 8017414:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 8017416:	0212      	lsls	r2, r2, #8
 8017418:	5cc3      	ldrb	r3, [r0, r3]
 801741a:	f402 72ff 	and.w	r2, r2, #510	@ 0x1fe
 801741e:	431a      	orrs	r2, r3
 8017420:	b293      	uxth	r3, r2
 8017422:	930c      	str	r3, [sp, #48]	@ 0x30
 8017424:	2300      	movs	r3, #0
 8017426:	f884 2804 	strb.w	r2, [r4, #2052]	@ 0x804
 801742a:	9308      	str	r3, [sp, #32]
 801742c:	461a      	mov	r2, r3
 801742e:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
 8017432:	930e      	str	r3, [sp, #56]	@ 0x38
 8017434:	f04f 0801 	mov.w	r8, #1
 8017438:	f8bd 3054 	ldrh.w	r3, [sp, #84]	@ 0x54
 801743c:	f8cd 8008 	str.w	r8, [sp, #8]
 8017440:	46c4      	mov	ip, r8
 8017442:	930f      	str	r3, [sp, #60]	@ 0x3c
 8017444:	2d00      	cmp	r5, #0
 8017446:	d07c      	beq.n	8017542 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x272>
 8017448:	45ac      	cmp	ip, r5
 801744a:	d26c      	bcs.n	8017526 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x256>
 801744c:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801744e:	eba5 050c 	sub.w	r5, r5, ip
 8017452:	455b      	cmp	r3, fp
 8017454:	b2ad      	uxth	r5, r5
 8017456:	4608      	mov	r0, r1
 8017458:	d802      	bhi.n	8017460 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x190>
 801745a:	e070      	b.n	801753e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x26e>
 801745c:	2b00      	cmp	r3, #0
 801745e:	d15c      	bne.n	801751a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x24a>
 8017460:	9b03      	ldr	r3, [sp, #12]
 8017462:	9a02      	ldr	r2, [sp, #8]
 8017464:	785b      	ldrb	r3, [r3, #1]
 8017466:	9902      	ldr	r1, [sp, #8]
 8017468:	f1c2 0207 	rsb	r2, r2, #7
 801746c:	4093      	lsls	r3, r2
 801746e:	005b      	lsls	r3, r3, #1
 8017470:	f403 72ff 	and.w	r2, r3, #510	@ 0x1fe
 8017474:	9b03      	ldr	r3, [sp, #12]
 8017476:	781b      	ldrb	r3, [r3, #0]
 8017478:	410b      	asrs	r3, r1
 801747a:	3101      	adds	r1, #1
 801747c:	b2c9      	uxtb	r1, r1
 801747e:	2908      	cmp	r1, #8
 8017480:	9102      	str	r1, [sp, #8]
 8017482:	9903      	ldr	r1, [sp, #12]
 8017484:	bf0a      	itet	eq
 8017486:	3102      	addeq	r1, #2
 8017488:	3101      	addne	r1, #1
 801748a:	9103      	streq	r1, [sp, #12]
 801748c:	b2db      	uxtb	r3, r3
 801748e:	bf0a      	itet	eq
 8017490:	2100      	moveq	r1, #0
 8017492:	9103      	strne	r1, [sp, #12]
 8017494:	9102      	streq	r1, [sp, #8]
 8017496:	4313      	orrs	r3, r2
 8017498:	9911      	ldr	r1, [sp, #68]	@ 0x44
 801749a:	b29a      	uxth	r2, r3
 801749c:	4291      	cmp	r1, r2
 801749e:	d30a      	bcc.n	80174b6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1e6>
 80174a0:	f884 3804 	strb.w	r3, [r4, #2052]	@ 0x804
 80174a4:	2301      	movs	r3, #1
 80174a6:	9905      	ldr	r1, [sp, #20]
 80174a8:	f5b1 7f00 	cmp.w	r1, #512	@ 0x200
 80174ac:	d30f      	bcc.n	80174ce <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1fe>
 80174ae:	2100      	movs	r1, #0
 80174b0:	4698      	mov	r8, r3
 80174b2:	9100      	str	r1, [sp, #0]
 80174b4:	e032      	b.n	801751c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x24c>
 80174b6:	9b05      	ldr	r3, [sp, #20]
 80174b8:	429a      	cmp	r2, r3
 80174ba:	d318      	bcc.n	80174ee <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x21e>
 80174bc:	eb04 0308 	add.w	r3, r4, r8
 80174c0:	f894 1804 	ldrb.w	r1, [r4, #2052]	@ 0x804
 80174c4:	f883 1804 	strb.w	r1, [r3, #2052]	@ 0x804
 80174c8:	f108 0301 	add.w	r3, r8, #1
 80174cc:	b29b      	uxth	r3, r3
 80174ce:	9905      	ldr	r1, [sp, #20]
 80174d0:	f894 6804 	ldrb.w	r6, [r4, #2052]	@ 0x804
 80174d4:	eb04 0181 	add.w	r1, r4, r1, lsl #2
 80174d8:	710e      	strb	r6, [r1, #4]
 80174da:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 80174dc:	80ce      	strh	r6, [r1, #6]
 80174de:	f108 0601 	add.w	r6, r8, #1
 80174e2:	714e      	strb	r6, [r1, #5]
 80174e4:	9905      	ldr	r1, [sp, #20]
 80174e6:	3101      	adds	r1, #1
 80174e8:	b289      	uxth	r1, r1
 80174ea:	9105      	str	r1, [sp, #20]
 80174ec:	e7df      	b.n	80174ae <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1de>
 80174ee:	eb04 0382 	add.w	r3, r4, r2, lsl #2
 80174f2:	4611      	mov	r1, r2
 80174f4:	795b      	ldrb	r3, [r3, #5]
 80174f6:	f603 0604 	addw	r6, r3, #2052	@ 0x804
 80174fa:	4426      	add	r6, r4
 80174fc:	9f19      	ldr	r7, [sp, #100]	@ 0x64
 80174fe:	4437      	add	r7, r6
 8017500:	2f00      	cmp	r7, #0
 8017502:	dd06      	ble.n	8017512 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x242>
 8017504:	eb04 0181 	add.w	r1, r4, r1, lsl #2
 8017508:	790f      	ldrb	r7, [r1, #4]
 801750a:	f806 7d01 	strb.w	r7, [r6, #-1]!
 801750e:	88c9      	ldrh	r1, [r1, #6]
 8017510:	e7f4      	b.n	80174fc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x22c>
 8017512:	f884 1804 	strb.w	r1, [r4, #2052]	@ 0x804
 8017516:	b29b      	uxth	r3, r3
 8017518:	e7c5      	b.n	80174a6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1d6>
 801751a:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 801751c:	920c      	str	r2, [sp, #48]	@ 0x30
 801751e:	4601      	mov	r1, r0
 8017520:	9a00      	ldr	r2, [sp, #0]
 8017522:	469c      	mov	ip, r3
 8017524:	e78e      	b.n	8017444 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x174>
 8017526:	1957      	adds	r7, r2, r5
 8017528:	ebac 0305 	sub.w	r3, ip, r5
 801752c:	b2ba      	uxth	r2, r7
 801752e:	f8bd 0010 	ldrh.w	r0, [sp, #16]
 8017532:	9200      	str	r2, [sp, #0]
 8017534:	b29b      	uxth	r3, r3
 8017536:	2500      	movs	r5, #0
 8017538:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 801753a:	455a      	cmp	r2, fp
 801753c:	d88e      	bhi.n	801745c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x18c>
 801753e:	4601      	mov	r1, r0
 8017540:	e749      	b.n	80173d6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x106>
 8017542:	458c      	cmp	ip, r1
 8017544:	bf2c      	ite	cs
 8017546:	4628      	movcs	r0, r5
 8017548:	462b      	movcc	r3, r5
 801754a:	9d0a      	ldr	r5, [sp, #40]	@ 0x28
 801754c:	bf27      	ittee	cs
 801754e:	9109      	strcs	r1, [sp, #36]	@ 0x24
 8017550:	ebac 0301 	subcs.w	r3, ip, r1
 8017554:	eba1 000c 	subcc.w	r0, r1, ip
 8017558:	f8cd c024 	strcc.w	ip, [sp, #36]	@ 0x24
 801755c:	bf2c      	ite	cs
 801755e:	b29b      	uxthcs	r3, r3
 8017560:	b280      	uxthcc	r0, r0
 8017562:	2dff      	cmp	r5, #255	@ 0xff
 8017564:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 8017566:	eb02 0705 	add.w	r7, r2, r5
 801756a:	b2bd      	uxth	r5, r7
 801756c:	9500      	str	r5, [sp, #0]
 801756e:	d12f      	bne.n	80175d0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x300>
 8017570:	465e      	mov	r6, fp
 8017572:	9d00      	ldr	r5, [sp, #0]
 8017574:	42aa      	cmp	r2, r5
 8017576:	f040 8084 	bne.w	8017682 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x3b2>
 801757a:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 801757c:	458c      	cmp	ip, r1
 801757e:	eb0b 0b42 	add.w	fp, fp, r2, lsl #1
 8017582:	d3d8      	bcc.n	8017536 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x266>
 8017584:	9a18      	ldr	r2, [sp, #96]	@ 0x60
 8017586:	9904      	ldr	r1, [sp, #16]
 8017588:	8812      	ldrh	r2, [r2, #0]
 801758a:	1a52      	subs	r2, r2, r1
 801758c:	eb0b 0b42 	add.w	fp, fp, r2, lsl #1
 8017590:	9a08      	ldr	r2, [sp, #32]
 8017592:	9916      	ldr	r1, [sp, #88]	@ 0x58
 8017594:	3201      	adds	r2, #1
 8017596:	428a      	cmp	r2, r1
 8017598:	9208      	str	r2, [sp, #32]
 801759a:	f040 8092 	bne.w	80176c2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x3f2>
 801759e:	f8bd 5070 	ldrh.w	r5, [sp, #112]	@ 0x70
 80175a2:	f8bd c068 	ldrh.w	ip, [sp, #104]	@ 0x68
 80175a6:	9b04      	ldr	r3, [sp, #16]
 80175a8:	eba5 050c 	sub.w	r5, r5, ip
 80175ac:	b2ad      	uxth	r5, r5
 80175ae:	2d00      	cmp	r5, #0
 80175b0:	bf08      	it	eq
 80175b2:	4619      	moveq	r1, r3
 80175b4:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 80175b6:	bf18      	it	ne
 80175b8:	2100      	movne	r1, #0
 80175ba:	3301      	adds	r3, #1
 80175bc:	930d      	str	r3, [sp, #52]	@ 0x34
 80175be:	b289      	uxth	r1, r1
 80175c0:	e700      	b.n	80173c4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf4>
 80175c2:	bf00      	nop
 80175c4:	20013f2c 	.word	0x20013f2c
 80175c8:	20013f24 	.word	0x20013f24
 80175cc:	fffff7fb 	.word	0xfffff7fb
 80175d0:	46d9      	mov	r9, fp
 80175d2:	9d00      	ldr	r5, [sp, #0]
 80175d4:	42aa      	cmp	r2, r5
 80175d6:	d0d0      	beq.n	801757a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2aa>
 80175d8:	1c55      	adds	r5, r2, #1
 80175da:	4422      	add	r2, r4
 80175dc:	9517      	str	r5, [sp, #92]	@ 0x5c
 80175de:	f892 e804 	ldrb.w	lr, [r2, #2052]	@ 0x804
 80175e2:	9a06      	ldr	r2, [sp, #24]
 80175e4:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 80175e8:	4472      	add	r2, lr
 80175ea:	9212      	str	r2, [sp, #72]	@ 0x48
 80175ec:	9f12      	ldr	r7, [sp, #72]	@ 0x48
 80175ee:	f8b9 2000 	ldrh.w	r2, [r9]
 80175f2:	f897 a002 	ldrb.w	sl, [r7, #2]
 80175f6:	9f0e      	ldr	r7, [sp, #56]	@ 0x38
 80175f8:	1216      	asrs	r6, r2, #8
 80175fa:	fb1a fa07 	smulbb	sl, sl, r7
 80175fe:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 8017602:	9f0f      	ldr	r7, [sp, #60]	@ 0x3c
 8017604:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 8017608:	fb06 a607 	mla	r6, r6, r7, sl
 801760c:	9f12      	ldr	r7, [sp, #72]	@ 0x48
 801760e:	f897 a001 	ldrb.w	sl, [r7, #1]
 8017612:	9f0e      	ldr	r7, [sp, #56]	@ 0x38
 8017614:	10d5      	asrs	r5, r2, #3
 8017616:	fb1a fa07 	smulbb	sl, sl, r7
 801761a:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 801761e:	9f0f      	ldr	r7, [sp, #60]	@ 0x3c
 8017620:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 8017624:	fb05 a507 	mla	r5, r5, r7, sl
 8017628:	9f06      	ldr	r7, [sp, #24]
 801762a:	f817 e00e 	ldrb.w	lr, [r7, lr]
 801762e:	9f0e      	ldr	r7, [sp, #56]	@ 0x38
 8017630:	00d2      	lsls	r2, r2, #3
 8017632:	fb1e fe07 	smulbb	lr, lr, r7
 8017636:	b2d2      	uxtb	r2, r2
 8017638:	9f0f      	ldr	r7, [sp, #60]	@ 0x3c
 801763a:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 801763e:	b2b6      	uxth	r6, r6
 8017640:	fb02 e207 	mla	r2, r2, r7, lr
 8017644:	b292      	uxth	r2, r2
 8017646:	b2ad      	uxth	r5, r5
 8017648:	f106 0a01 	add.w	sl, r6, #1
 801764c:	eb0a 2616 	add.w	r6, sl, r6, lsr #8
 8017650:	f102 0e01 	add.w	lr, r2, #1
 8017654:	f105 0a01 	add.w	sl, r5, #1
 8017658:	eb0e 2e12 	add.w	lr, lr, r2, lsr #8
 801765c:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8017660:	f406 4678 	and.w	r6, r6, #63488	@ 0xf800
 8017664:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 8017668:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801766c:	ea4e 0606 	orr.w	r6, lr, r6
 8017670:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 8017674:	ea46 060a 	orr.w	r6, r6, sl
 8017678:	f829 6b02 	strh.w	r6, [r9], #2
 801767c:	f8bd 205c 	ldrh.w	r2, [sp, #92]	@ 0x5c
 8017680:	e7a7      	b.n	80175d2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x302>
 8017682:	f102 0e01 	add.w	lr, r2, #1
 8017686:	4422      	add	r2, r4
 8017688:	9f06      	ldr	r7, [sp, #24]
 801768a:	f892 5804 	ldrb.w	r5, [r2, #2052]	@ 0x804
 801768e:	9a06      	ldr	r2, [sp, #24]
 8017690:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8017694:	eb02 0a05 	add.w	sl, r2, r5
 8017698:	4a13      	ldr	r2, [pc, #76]	@ (80176e8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x418>)
 801769a:	f89a 9002 	ldrb.w	r9, [sl, #2]
 801769e:	ea02 2909 	and.w	r9, r2, r9, lsl #8
 80176a2:	f89a 2001 	ldrb.w	r2, [sl, #1]
 80176a6:	00d2      	lsls	r2, r2, #3
 80176a8:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 80176ac:	ea49 0202 	orr.w	r2, r9, r2
 80176b0:	f817 9005 	ldrb.w	r9, [r7, r5]
 80176b4:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
 80176b8:	f826 2b02 	strh.w	r2, [r6], #2
 80176bc:	fa1f f28e 	uxth.w	r2, lr
 80176c0:	e757      	b.n	8017572 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a2>
 80176c2:	f8bd 0010 	ldrh.w	r0, [sp, #16]
 80176c6:	f8bd 506c 	ldrh.w	r5, [sp, #108]	@ 0x6c
 80176ca:	1a2d      	subs	r5, r5, r0
 80176cc:	b2ad      	uxth	r5, r5
 80176ce:	2d00      	cmp	r5, #0
 80176d0:	bf18      	it	ne
 80176d2:	2000      	movne	r0, #0
 80176d4:	e730      	b.n	8017538 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x268>
 80176d6:	4b05      	ldr	r3, [pc, #20]	@ (80176ec <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x41c>)
 80176d8:	6818      	ldr	r0, [r3, #0]
 80176da:	6803      	ldr	r3, [r0, #0]
 80176dc:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80176de:	4798      	blx	r3
 80176e0:	b01f      	add	sp, #124	@ 0x7c
 80176e2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80176e6:	bf00      	nop
 80176e8:	fffff800 	.word	0xfffff800
 80176ec:	20013f2c 	.word	0x20013f2c

080176f0 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss>:
 80176f0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80176f4:	b091      	sub	sp, #68	@ 0x44
 80176f6:	469b      	mov	fp, r3
 80176f8:	f10d 0828 	add.w	r8, sp, #40	@ 0x28
 80176fc:	4616      	mov	r6, r2
 80176fe:	f9bd 906c 	ldrsh.w	r9, [sp, #108]	@ 0x6c
 8017702:	f9b3 2000 	ldrsh.w	r2, [r3]
 8017706:	f9bd 7070 	ldrsh.w	r7, [sp, #112]	@ 0x70
 801770a:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 801770e:	f8ad 2028 	strh.w	r2, [sp, #40]	@ 0x28
 8017712:	4604      	mov	r4, r0
 8017714:	460d      	mov	r5, r1
 8017716:	4640      	mov	r0, r8
 8017718:	4659      	mov	r1, fp
 801771a:	f8ad 302a 	strh.w	r3, [sp, #42]	@ 0x2a
 801771e:	f8ad 902c 	strh.w	r9, [sp, #44]	@ 0x2c
 8017722:	f8ad 702e 	strh.w	r7, [sp, #46]	@ 0x2e
 8017726:	f7f2 fde1 	bl	800a2ec <_ZN8touchgfx4RectaNERKS0_>
 801772a:	4631      	mov	r1, r6
 801772c:	4640      	mov	r0, r8
 801772e:	f7f2 fddd 	bl	800a2ec <_ZN8touchgfx4RectaNERKS0_>
 8017732:	4b74      	ldr	r3, [pc, #464]	@ (8017904 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x214>)
 8017734:	8818      	ldrh	r0, [r3, #0]
 8017736:	4b74      	ldr	r3, [pc, #464]	@ (8017908 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x218>)
 8017738:	8819      	ldrh	r1, [r3, #0]
 801773a:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	@ 0x28
 801773e:	2b00      	cmp	r3, #0
 8017740:	b202      	sxth	r2, r0
 8017742:	b20e      	sxth	r6, r1
 8017744:	da07      	bge.n	8017756 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x66>
 8017746:	f8bd c02c 	ldrh.w	ip, [sp, #44]	@ 0x2c
 801774a:	4463      	add	r3, ip
 801774c:	f8ad 302c 	strh.w	r3, [sp, #44]	@ 0x2c
 8017750:	2300      	movs	r3, #0
 8017752:	f8ad 3028 	strh.w	r3, [sp, #40]	@ 0x28
 8017756:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	@ 0x28
 801775a:	f9bd c02c 	ldrsh.w	ip, [sp, #44]	@ 0x2c
 801775e:	1ad2      	subs	r2, r2, r3
 8017760:	4594      	cmp	ip, r2
 8017762:	bfc4      	itt	gt
 8017764:	1ac2      	subgt	r2, r0, r3
 8017766:	f8ad 202c 	strhgt.w	r2, [sp, #44]	@ 0x2c
 801776a:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	@ 0x2a
 801776e:	2a00      	cmp	r2, #0
 8017770:	da07      	bge.n	8017782 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x92>
 8017772:	f8bd c02e 	ldrh.w	ip, [sp, #46]	@ 0x2e
 8017776:	4462      	add	r2, ip
 8017778:	f8ad 202e 	strh.w	r2, [sp, #46]	@ 0x2e
 801777c:	2200      	movs	r2, #0
 801777e:	f8ad 202a 	strh.w	r2, [sp, #42]	@ 0x2a
 8017782:	f9bd a02a 	ldrsh.w	sl, [sp, #42]	@ 0x2a
 8017786:	f9bd 202e 	ldrsh.w	r2, [sp, #46]	@ 0x2e
 801778a:	eba6 060a 	sub.w	r6, r6, sl
 801778e:	42b2      	cmp	r2, r6
 8017790:	bfc4      	itt	gt
 8017792:	eba1 020a 	subgt.w	r2, r1, sl
 8017796:	f8ad 202e 	strhgt.w	r2, [sp, #46]	@ 0x2e
 801779a:	4a5c      	ldr	r2, [pc, #368]	@ (801790c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x21c>)
 801779c:	7812      	ldrb	r2, [r2, #0]
 801779e:	b9a2      	cbnz	r2, 80177ca <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xda>
 80177a0:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	@ 0x2c
 80177a4:	4286      	cmp	r6, r0
 80177a6:	4640      	mov	r0, r8
 80177a8:	9303      	str	r3, [sp, #12]
 80177aa:	bf14      	ite	ne
 80177ac:	2600      	movne	r6, #0
 80177ae:	2601      	moveq	r6, #1
 80177b0:	f7f2 fddf 	bl	800a372 <_ZNK8touchgfx4Rect7isEmptyEv>
 80177b4:	9b03      	ldr	r3, [sp, #12]
 80177b6:	b160      	cbz	r0, 80177d2 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xe2>
 80177b8:	2300      	movs	r3, #0
 80177ba:	8023      	strh	r3, [r4, #0]
 80177bc:	8063      	strh	r3, [r4, #2]
 80177be:	80a3      	strh	r3, [r4, #4]
 80177c0:	4620      	mov	r0, r4
 80177c2:	80e3      	strh	r3, [r4, #6]
 80177c4:	b011      	add	sp, #68	@ 0x44
 80177c6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80177ca:	f9bd 602e 	ldrsh.w	r6, [sp, #46]	@ 0x2e
 80177ce:	428e      	cmp	r6, r1
 80177d0:	e7e9      	b.n	80177a6 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xb6>
 80177d2:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	@ 0x2c
 80177d6:	9205      	str	r2, [sp, #20]
 80177d8:	f9bd 202e 	ldrsh.w	r2, [sp, #46]	@ 0x2e
 80177dc:	9206      	str	r2, [sp, #24]
 80177de:	f8bb 2000 	ldrh.w	r2, [fp]
 80177e2:	900e      	str	r0, [sp, #56]	@ 0x38
 80177e4:	1a9b      	subs	r3, r3, r2
 80177e6:	b21b      	sxth	r3, r3
 80177e8:	9303      	str	r3, [sp, #12]
 80177ea:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 80177ee:	f8ad 903c 	strh.w	r9, [sp, #60]	@ 0x3c
 80177f2:	ebaa 0a03 	sub.w	sl, sl, r3
 80177f6:	fa0f f38a 	sxth.w	r3, sl
 80177fa:	9304      	str	r3, [sp, #16]
 80177fc:	9b03      	ldr	r3, [sp, #12]
 80177fe:	f8ad 3030 	strh.w	r3, [sp, #48]	@ 0x30
 8017802:	9b04      	ldr	r3, [sp, #16]
 8017804:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
 8017808:	9b05      	ldr	r3, [sp, #20]
 801780a:	f8ad 3034 	strh.w	r3, [sp, #52]	@ 0x34
 801780e:	a90e      	add	r1, sp, #56	@ 0x38
 8017810:	9b06      	ldr	r3, [sp, #24]
 8017812:	f8ad 3036 	strh.w	r3, [sp, #54]	@ 0x36
 8017816:	a80c      	add	r0, sp, #48	@ 0x30
 8017818:	f8ad 703e 	strh.w	r7, [sp, #62]	@ 0x3e
 801781c:	f7f7 fd06 	bl	800f22c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8017820:	4640      	mov	r0, r8
 8017822:	f7f7 fcdb 	bl	800f1dc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8017826:	a80e      	add	r0, sp, #56	@ 0x38
 8017828:	f7f7 fcd8 	bl	800f1dc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801782c:	4b38      	ldr	r3, [pc, #224]	@ (8017910 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x220>)
 801782e:	f9bd a03c 	ldrsh.w	sl, [sp, #60]	@ 0x3c
 8017832:	881b      	ldrh	r3, [r3, #0]
 8017834:	9307      	str	r3, [sp, #28]
 8017836:	682b      	ldr	r3, [r5, #0]
 8017838:	f8df b0d8 	ldr.w	fp, [pc, #216]	@ 8017914 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x224>
 801783c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 801783e:	4628      	mov	r0, r5
 8017840:	4798      	blx	r3
 8017842:	f8bd 5032 	ldrh.w	r5, [sp, #50]	@ 0x32
 8017846:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	@ 0x30
 801784a:	4681      	mov	r9, r0
 801784c:	fb1a 3305 	smlabb	r3, sl, r5, r3
 8017850:	f8db 0000 	ldr.w	r0, [fp]
 8017854:	9d1a      	ldr	r5, [sp, #104]	@ 0x68
 8017856:	eb05 0543 	add.w	r5, r5, r3, lsl #1
 801785a:	6803      	ldr	r3, [r0, #0]
 801785c:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 801785e:	4798      	blx	r3
 8017860:	4607      	mov	r7, r0
 8017862:	f8db 0000 	ldr.w	r0, [fp]
 8017866:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	@ 0x28
 801786a:	6803      	ldr	r3, [r0, #0]
 801786c:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	@ 0x2a
 8017870:	9109      	str	r1, [sp, #36]	@ 0x24
 8017872:	9208      	str	r2, [sp, #32]
 8017874:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8017876:	4798      	blx	r3
 8017878:	f010 0f01 	tst.w	r0, #1
 801787c:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 8017880:	d012      	beq.n	80178a8 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1b8>
 8017882:	f8db 0000 	ldr.w	r0, [fp]
 8017886:	f9bd 2034 	ldrsh.w	r2, [sp, #52]	@ 0x34
 801788a:	6803      	ldr	r3, [r0, #0]
 801788c:	9200      	str	r2, [sp, #0]
 801788e:	6f1e      	ldr	r6, [r3, #112]	@ 0x70
 8017890:	e898 0006 	ldmia.w	r8, {r1, r2}
 8017894:	462b      	mov	r3, r5
 8017896:	47b0      	blx	r6
 8017898:	9b03      	ldr	r3, [sp, #12]
 801789a:	8023      	strh	r3, [r4, #0]
 801789c:	9b04      	ldr	r3, [sp, #16]
 801789e:	8063      	strh	r3, [r4, #2]
 80178a0:	9b05      	ldr	r3, [sp, #20]
 80178a2:	80a3      	strh	r3, [r4, #4]
 80178a4:	9b06      	ldr	r3, [sp, #24]
 80178a6:	e78b      	b.n	80177c0 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xd0>
 80178a8:	fb09 f202 	mul.w	r2, r9, r2
 80178ac:	eb02 0141 	add.w	r1, r2, r1, lsl #1
 80178b0:	440f      	add	r7, r1
 80178b2:	f9bd 3036 	ldrsh.w	r3, [sp, #54]	@ 0x36
 80178b6:	b166      	cbz	r6, 80178d2 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1e2>
 80178b8:	9a07      	ldr	r2, [sp, #28]
 80178ba:	4592      	cmp	sl, r2
 80178bc:	d109      	bne.n	80178d2 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1e2>
 80178be:	f8db 0000 	ldr.w	r0, [fp]
 80178c2:	6802      	ldr	r2, [r0, #0]
 80178c4:	fb09 f303 	mul.w	r3, r9, r3
 80178c8:	6b96      	ldr	r6, [r2, #56]	@ 0x38
 80178ca:	4629      	mov	r1, r5
 80178cc:	463a      	mov	r2, r7
 80178ce:	47b0      	blx	r6
 80178d0:	e7e2      	b.n	8017898 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1a8>
 80178d2:	fb0a f303 	mul.w	r3, sl, r3
 80178d6:	f8df b03c 	ldr.w	fp, [pc, #60]	@ 8017914 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x224>
 80178da:	eb05 0843 	add.w	r8, r5, r3, lsl #1
 80178de:	ea4f 064a 	mov.w	r6, sl, lsl #1
 80178e2:	4545      	cmp	r5, r8
 80178e4:	d2d8      	bcs.n	8017898 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1a8>
 80178e6:	f8db 0000 	ldr.w	r0, [fp]
 80178ea:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	@ 0x34
 80178ee:	6802      	ldr	r2, [r0, #0]
 80178f0:	4629      	mov	r1, r5
 80178f2:	f8d2 a038 	ldr.w	sl, [r2, #56]	@ 0x38
 80178f6:	005b      	lsls	r3, r3, #1
 80178f8:	463a      	mov	r2, r7
 80178fa:	47d0      	blx	sl
 80178fc:	444f      	add	r7, r9
 80178fe:	4435      	add	r5, r6
 8017900:	e7ef      	b.n	80178e2 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1f2>
 8017902:	bf00      	nop
 8017904:	20013f1e 	.word	0x20013f1e
 8017908:	20013f20 	.word	0x20013f20
 801790c:	20013f22 	.word	0x20013f22
 8017910:	20013f24 	.word	0x20013f24
 8017914:	20013f2c 	.word	0x20013f2c

08017918 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh>:
 8017918:	b5f0      	push	{r4, r5, r6, r7, lr}
 801791a:	4606      	mov	r6, r0
 801791c:	b087      	sub	sp, #28
 801791e:	460c      	mov	r4, r1
 8017920:	4617      	mov	r7, r2
 8017922:	461d      	mov	r5, r3
 8017924:	b333      	cbz	r3, 8017974 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 8017926:	4608      	mov	r0, r1
 8017928:	f7f2 fd23 	bl	800a372 <_ZNK8touchgfx4Rect7isEmptyEv>
 801792c:	bb10      	cbnz	r0, 8017974 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 801792e:	6820      	ldr	r0, [r4, #0]
 8017930:	6861      	ldr	r1, [r4, #4]
 8017932:	4c1c      	ldr	r4, [pc, #112]	@ (80179a4 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x8c>)
 8017934:	ab04      	add	r3, sp, #16
 8017936:	c303      	stmia	r3!, {r0, r1}
 8017938:	a804      	add	r0, sp, #16
 801793a:	f7f7 fc4f 	bl	800f1dc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801793e:	6820      	ldr	r0, [r4, #0]
 8017940:	6803      	ldr	r3, [r0, #0]
 8017942:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8017944:	4798      	blx	r3
 8017946:	2dff      	cmp	r5, #255	@ 0xff
 8017948:	d016      	beq.n	8017978 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x60>
 801794a:	f010 0f08 	tst.w	r0, #8
 801794e:	6820      	ldr	r0, [r4, #0]
 8017950:	d015      	beq.n	801797e <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x66>
 8017952:	2400      	movs	r4, #0
 8017954:	6801      	ldr	r1, [r0, #0]
 8017956:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 801795a:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801795e:	e9cd 5402 	strd	r5, r4, [sp, #8]
 8017962:	f8bd 4016 	ldrh.w	r4, [sp, #22]
 8017966:	9401      	str	r4, [sp, #4]
 8017968:	f8bd 4014 	ldrh.w	r4, [sp, #20]
 801796c:	9400      	str	r4, [sp, #0]
 801796e:	6e4c      	ldr	r4, [r1, #100]	@ 0x64
 8017970:	4639      	mov	r1, r7
 8017972:	47a0      	blx	r4
 8017974:	b007      	add	sp, #28
 8017976:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8017978:	f010 0f02 	tst.w	r0, #2
 801797c:	e7e7      	b.n	801794e <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x36>
 801797e:	6803      	ldr	r3, [r0, #0]
 8017980:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8017982:	4798      	blx	r3
 8017984:	4b08      	ldr	r3, [pc, #32]	@ (80179a8 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x90>)
 8017986:	881a      	ldrh	r2, [r3, #0]
 8017988:	6833      	ldr	r3, [r6, #0]
 801798a:	e9cd 7500 	strd	r7, r5, [sp]
 801798e:	4601      	mov	r1, r0
 8017990:	6a5d      	ldr	r5, [r3, #36]	@ 0x24
 8017992:	4630      	mov	r0, r6
 8017994:	ab04      	add	r3, sp, #16
 8017996:	47a8      	blx	r5
 8017998:	6820      	ldr	r0, [r4, #0]
 801799a:	6803      	ldr	r3, [r0, #0]
 801799c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 801799e:	4798      	blx	r3
 80179a0:	e7e8      	b.n	8017974 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 80179a2:	bf00      	nop
 80179a4:	20013f2c 	.word	0x20013f2c
 80179a8:	20013f24 	.word	0x20013f24

080179ac <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh>:
 80179ac:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80179b0:	f89d 7024 	ldrb.w	r7, [sp, #36]	@ 0x24
 80179b4:	9e08      	ldr	r6, [sp, #32]
 80179b6:	4688      	mov	r8, r1
 80179b8:	4614      	mov	r4, r2
 80179ba:	461d      	mov	r5, r3
 80179bc:	2f00      	cmp	r7, #0
 80179be:	f000 80a9 	beq.w	8017b14 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 80179c2:	4618      	mov	r0, r3
 80179c4:	f7f2 fcd5 	bl	800a372 <_ZNK8touchgfx4Rect7isEmptyEv>
 80179c8:	2800      	cmp	r0, #0
 80179ca:	f040 80a3 	bne.w	8017b14 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 80179ce:	f9b5 1000 	ldrsh.w	r1, [r5]
 80179d2:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 80179d6:	f9b5 0004 	ldrsh.w	r0, [r5, #4]
 80179da:	f9b5 5006 	ldrsh.w	r5, [r5, #6]
 80179de:	fb04 1303 	mla	r3, r4, r3, r1
 80179e2:	eb08 0143 	add.w	r1, r8, r3, lsl #1
 80179e6:	4365      	muls	r5, r4
 80179e8:	2fff      	cmp	r7, #255	@ 0xff
 80179ea:	eba4 0200 	sub.w	r2, r4, r0
 80179ee:	eb01 0545 	add.w	r5, r1, r5, lsl #1
 80179f2:	ea4f 2816 	mov.w	r8, r6, lsr #8
 80179f6:	d04a      	beq.n	8017a8e <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xe2>
 80179f8:	b2bc      	uxth	r4, r7
 80179fa:	f1c7 0cff 	rsb	ip, r7, #255	@ 0xff
 80179fe:	f3c6 4e07 	ubfx	lr, r6, #16, #8
 8017a02:	fa5f f788 	uxtb.w	r7, r8
 8017a06:	b2f3      	uxtb	r3, r6
 8017a08:	0040      	lsls	r0, r0, #1
 8017a0a:	fb0e fe04 	mul.w	lr, lr, r4
 8017a0e:	4367      	muls	r7, r4
 8017a10:	4363      	muls	r3, r4
 8017a12:	ea4f 0842 	mov.w	r8, r2, lsl #1
 8017a16:	fa1f fc8c 	uxth.w	ip, ip
 8017a1a:	42a9      	cmp	r1, r5
 8017a1c:	d27a      	bcs.n	8017b14 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 8017a1e:	eb01 0900 	add.w	r9, r1, r0
 8017a22:	4549      	cmp	r1, r9
 8017a24:	d231      	bcs.n	8017a8a <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xde>
 8017a26:	880a      	ldrh	r2, [r1, #0]
 8017a28:	1214      	asrs	r4, r2, #8
 8017a2a:	10d6      	asrs	r6, r2, #3
 8017a2c:	f004 04f8 	and.w	r4, r4, #248	@ 0xf8
 8017a30:	00d2      	lsls	r2, r2, #3
 8017a32:	b2d2      	uxtb	r2, r2
 8017a34:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 8017a38:	fb14 f40c 	smulbb	r4, r4, ip
 8017a3c:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 8017a40:	4474      	add	r4, lr
 8017a42:	fb12 f20c 	smulbb	r2, r2, ip
 8017a46:	b2a4      	uxth	r4, r4
 8017a48:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 8017a4c:	441a      	add	r2, r3
 8017a4e:	b292      	uxth	r2, r2
 8017a50:	f104 0a01 	add.w	sl, r4, #1
 8017a54:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
 8017a58:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
 8017a5c:	fb16 f60c 	smulbb	r6, r6, ip
 8017a60:	f102 0a01 	add.w	sl, r2, #1
 8017a64:	443e      	add	r6, r7
 8017a66:	eb0a 2212 	add.w	r2, sl, r2, lsr #8
 8017a6a:	b2b6      	uxth	r6, r6
 8017a6c:	f404 4478 	and.w	r4, r4, #63488	@ 0xf800
 8017a70:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8017a74:	4322      	orrs	r2, r4
 8017a76:	1c74      	adds	r4, r6, #1
 8017a78:	eb04 2616 	add.w	r6, r4, r6, lsr #8
 8017a7c:	0976      	lsrs	r6, r6, #5
 8017a7e:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
 8017a82:	4332      	orrs	r2, r6
 8017a84:	f821 2b02 	strh.w	r2, [r1], #2
 8017a88:	e7cb      	b.n	8017a22 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x76>
 8017a8a:	4441      	add	r1, r8
 8017a8c:	e7c5      	b.n	8017a1a <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x6e>
 8017a8e:	4f22      	ldr	r7, [pc, #136]	@ (8017b18 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>)
 8017a90:	0973      	lsrs	r3, r6, #5
 8017a92:	ea08 0707 	and.w	r7, r8, r7
 8017a96:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 8017a9a:	433b      	orrs	r3, r7
 8017a9c:	f3c6 06c4 	ubfx	r6, r6, #3, #5
 8017aa0:	4333      	orrs	r3, r6
 8017aa2:	07e7      	lsls	r7, r4, #31
 8017aa4:	b29b      	uxth	r3, r3
 8017aa6:	d50b      	bpl.n	8017ac0 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x114>
 8017aa8:	0040      	lsls	r0, r0, #1
 8017aaa:	0052      	lsls	r2, r2, #1
 8017aac:	42a9      	cmp	r1, r5
 8017aae:	d231      	bcs.n	8017b14 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 8017ab0:	180c      	adds	r4, r1, r0
 8017ab2:	42a1      	cmp	r1, r4
 8017ab4:	d202      	bcs.n	8017abc <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x110>
 8017ab6:	f821 3b02 	strh.w	r3, [r1], #2
 8017aba:	e7fa      	b.n	8017ab2 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x106>
 8017abc:	4411      	add	r1, r2
 8017abe:	e7f5      	b.n	8017aac <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x100>
 8017ac0:	078e      	lsls	r6, r1, #30
 8017ac2:	d008      	beq.n	8017ad6 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x12a>
 8017ac4:	0066      	lsls	r6, r4, #1
 8017ac6:	460a      	mov	r2, r1
 8017ac8:	42aa      	cmp	r2, r5
 8017aca:	d202      	bcs.n	8017ad2 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x126>
 8017acc:	8013      	strh	r3, [r2, #0]
 8017ace:	4432      	add	r2, r6
 8017ad0:	e7fa      	b.n	8017ac8 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x11c>
 8017ad2:	3102      	adds	r1, #2
 8017ad4:	3801      	subs	r0, #1
 8017ad6:	07c2      	lsls	r2, r0, #31
 8017ad8:	d50b      	bpl.n	8017af2 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x146>
 8017ada:	f100 4200 	add.w	r2, r0, #2147483648	@ 0x80000000
 8017ade:	3a01      	subs	r2, #1
 8017ae0:	eb01 0242 	add.w	r2, r1, r2, lsl #1
 8017ae4:	0066      	lsls	r6, r4, #1
 8017ae6:	42aa      	cmp	r2, r5
 8017ae8:	d202      	bcs.n	8017af0 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x144>
 8017aea:	8013      	strh	r3, [r2, #0]
 8017aec:	4432      	add	r2, r6
 8017aee:	e7fa      	b.n	8017ae6 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x13a>
 8017af0:	3801      	subs	r0, #1
 8017af2:	b178      	cbz	r0, 8017b14 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 8017af4:	1040      	asrs	r0, r0, #1
 8017af6:	ea43 4303 	orr.w	r3, r3, r3, lsl #16
 8017afa:	0080      	lsls	r0, r0, #2
 8017afc:	0064      	lsls	r4, r4, #1
 8017afe:	42a9      	cmp	r1, r5
 8017b00:	d208      	bcs.n	8017b14 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 8017b02:	180e      	adds	r6, r1, r0
 8017b04:	460a      	mov	r2, r1
 8017b06:	42b2      	cmp	r2, r6
 8017b08:	d202      	bcs.n	8017b10 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x164>
 8017b0a:	f842 3b04 	str.w	r3, [r2], #4
 8017b0e:	e7fa      	b.n	8017b06 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x15a>
 8017b10:	4421      	add	r1, r4
 8017b12:	e7f4      	b.n	8017afe <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x152>
 8017b14:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8017b18:	00fff800 	.word	0x00fff800

08017b1c <_ZN8touchgfx8LCD16bppC1Ev>:
 8017b1c:	2200      	movs	r2, #0
 8017b1e:	4912      	ldr	r1, [pc, #72]	@ (8017b68 <_ZN8touchgfx8LCD16bppC1Ev+0x4c>)
 8017b20:	6001      	str	r1, [r0, #0]
 8017b22:	e9c0 2201 	strd	r2, r2, [r0, #4]
 8017b26:	e9c0 2203 	strd	r2, r2, [r0, #12]
 8017b2a:	e9c0 2205 	strd	r2, r2, [r0, #20]
 8017b2e:	e9c0 2207 	strd	r2, r2, [r0, #28]
 8017b32:	e9c0 2209 	strd	r2, r2, [r0, #36]	@ 0x24
 8017b36:	e9c0 220b 	strd	r2, r2, [r0, #44]	@ 0x2c
 8017b3a:	e9c0 220d 	strd	r2, r2, [r0, #52]	@ 0x34
 8017b3e:	e9c0 220f 	strd	r2, r2, [r0, #60]	@ 0x3c
 8017b42:	e9c0 2211 	strd	r2, r2, [r0, #68]	@ 0x44
 8017b46:	e9c0 2213 	strd	r2, r2, [r0, #76]	@ 0x4c
 8017b4a:	e9c0 2215 	strd	r2, r2, [r0, #84]	@ 0x54
 8017b4e:	e9c0 2217 	strd	r2, r2, [r0, #92]	@ 0x5c
 8017b52:	e9c0 2219 	strd	r2, r2, [r0, #100]	@ 0x64
 8017b56:	e9c0 221b 	strd	r2, r2, [r0, #108]	@ 0x6c
 8017b5a:	e9c0 221d 	strd	r2, r2, [r0, #116]	@ 0x74
 8017b5e:	e9c0 221f 	strd	r2, r2, [r0, #124]	@ 0x7c
 8017b62:	e9c0 2221 	strd	r2, r2, [r0, #132]	@ 0x84
 8017b66:	4770      	bx	lr
 8017b68:	08025130 	.word	0x08025130

08017b6c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>:
 8017b6c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017b70:	460d      	mov	r5, r1
 8017b72:	b08d      	sub	sp, #52	@ 0x34
 8017b74:	4604      	mov	r4, r0
 8017b76:	6808      	ldr	r0, [r1, #0]
 8017b78:	6849      	ldr	r1, [r1, #4]
 8017b7a:	4699      	mov	r9, r3
 8017b7c:	ab08      	add	r3, sp, #32
 8017b7e:	c303      	stmia	r3!, {r0, r1}
 8017b80:	6810      	ldr	r0, [r2, #0]
 8017b82:	6851      	ldr	r1, [r2, #4]
 8017b84:	ab0a      	add	r3, sp, #40	@ 0x28
 8017b86:	c303      	stmia	r3!, {r0, r1}
 8017b88:	a808      	add	r0, sp, #32
 8017b8a:	f7f7 fb27 	bl	800f1dc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8017b8e:	4629      	mov	r1, r5
 8017b90:	a80a      	add	r0, sp, #40	@ 0x28
 8017b92:	f7f7 fb4b 	bl	800f22c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8017b96:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	@ 0x28
 8017b9a:	f9bd 302a 	ldrsh.w	r3, [sp, #42]	@ 0x2a
 8017b9e:	f8bd 1024 	ldrh.w	r1, [sp, #36]	@ 0x24
 8017ba2:	4d63      	ldr	r5, [pc, #396]	@ (8017d30 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c4>)
 8017ba4:	f9bd 802c 	ldrsh.w	r8, [sp, #44]	@ 0x2c
 8017ba8:	6828      	ldr	r0, [r5, #0]
 8017baa:	f9bd 602e 	ldrsh.w	r6, [sp, #46]	@ 0x2e
 8017bae:	fb11 2103 	smlabb	r1, r1, r3, r2
 8017bb2:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 8017bb6:	f8bd 1020 	ldrh.w	r1, [sp, #32]
 8017bba:	440a      	add	r2, r1
 8017bbc:	f8ad 2028 	strh.w	r2, [sp, #40]	@ 0x28
 8017bc0:	f8bd 2022 	ldrh.w	r2, [sp, #34]	@ 0x22
 8017bc4:	4413      	add	r3, r2
 8017bc6:	f8ad 302a 	strh.w	r3, [sp, #42]	@ 0x2a
 8017bca:	6803      	ldr	r3, [r0, #0]
 8017bcc:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8017bce:	4798      	blx	r3
 8017bd0:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
 8017bd4:	d119      	bne.n	8017c0a <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x9e>
 8017bd6:	f010 0f20 	tst.w	r0, #32
 8017bda:	6828      	ldr	r0, [r5, #0]
 8017bdc:	d018      	beq.n	8017c10 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xa4>
 8017bde:	2500      	movs	r5, #0
 8017be0:	6801      	ldr	r1, [r0, #0]
 8017be2:	f8bd 302a 	ldrh.w	r3, [sp, #42]	@ 0x2a
 8017be6:	f8bd 2028 	ldrh.w	r2, [sp, #40]	@ 0x28
 8017bea:	e9cd 9503 	strd	r9, r5, [sp, #12]
 8017bee:	f8bd 5024 	ldrh.w	r5, [sp, #36]	@ 0x24
 8017bf2:	9502      	str	r5, [sp, #8]
 8017bf4:	b2b6      	uxth	r6, r6
 8017bf6:	fa1f f588 	uxth.w	r5, r8
 8017bfa:	9601      	str	r6, [sp, #4]
 8017bfc:	9500      	str	r5, [sp, #0]
 8017bfe:	6d4d      	ldr	r5, [r1, #84]	@ 0x54
 8017c00:	4621      	mov	r1, r4
 8017c02:	47a8      	blx	r5
 8017c04:	b00d      	add	sp, #52	@ 0x34
 8017c06:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8017c0a:	f010 0f40 	tst.w	r0, #64	@ 0x40
 8017c0e:	e7e4      	b.n	8017bda <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x6e>
 8017c10:	6803      	ldr	r3, [r0, #0]
 8017c12:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8017c14:	4798      	blx	r3
 8017c16:	4947      	ldr	r1, [pc, #284]	@ (8017d34 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c8>)
 8017c18:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	@ 0x2a
 8017c1c:	880b      	ldrh	r3, [r1, #0]
 8017c1e:	f9bd 5028 	ldrsh.w	r5, [sp, #40]	@ 0x28
 8017c22:	fb03 5202 	mla	r2, r3, r2, r5
 8017c26:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8017c2a:	4373      	muls	r3, r6
 8017c2c:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8017c30:	9307      	str	r3, [sp, #28]
 8017c32:	ea4f 0348 	mov.w	r3, r8, lsl #1
 8017c36:	9306      	str	r3, [sp, #24]
 8017c38:	468a      	mov	sl, r1
 8017c3a:	9b07      	ldr	r3, [sp, #28]
 8017c3c:	4298      	cmp	r0, r3
 8017c3e:	d270      	bcs.n	8017d22 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1b6>
 8017c40:	9b06      	ldr	r3, [sp, #24]
 8017c42:	4621      	mov	r1, r4
 8017c44:	eb00 0b03 	add.w	fp, r0, r3
 8017c48:	4558      	cmp	r0, fp
 8017c4a:	d25d      	bcs.n	8017d08 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x19c>
 8017c4c:	f851 4b04 	ldr.w	r4, [r1], #4
 8017c50:	0e23      	lsrs	r3, r4, #24
 8017c52:	d014      	beq.n	8017c7e <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x112>
 8017c54:	2bff      	cmp	r3, #255	@ 0xff
 8017c56:	ea4f 2c14 	mov.w	ip, r4, lsr #8
 8017c5a:	d112      	bne.n	8017c82 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x116>
 8017c5c:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
 8017c60:	d10f      	bne.n	8017c82 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x116>
 8017c62:	0963      	lsrs	r3, r4, #5
 8017c64:	f42c 6cff 	bic.w	ip, ip, #2040	@ 0x7f8
 8017c68:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 8017c6c:	f02c 0c07 	bic.w	ip, ip, #7
 8017c70:	ea43 0c0c 	orr.w	ip, r3, ip
 8017c74:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 8017c78:	ea4c 0404 	orr.w	r4, ip, r4
 8017c7c:	8004      	strh	r4, [r0, #0]
 8017c7e:	3002      	adds	r0, #2
 8017c80:	e7e2      	b.n	8017c48 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xdc>
 8017c82:	fb09 f303 	mul.w	r3, r9, r3
 8017c86:	8807      	ldrh	r7, [r0, #0]
 8017c88:	1c5a      	adds	r2, r3, #1
 8017c8a:	eb02 2223 	add.w	r2, r2, r3, asr #8
 8017c8e:	1212      	asrs	r2, r2, #8
 8017c90:	123e      	asrs	r6, r7, #8
 8017c92:	b293      	uxth	r3, r2
 8017c94:	f3c4 4e07 	ubfx	lr, r4, #16, #8
 8017c98:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 8017c9c:	43d2      	mvns	r2, r2
 8017c9e:	b2d2      	uxtb	r2, r2
 8017ca0:	10fd      	asrs	r5, r7, #3
 8017ca2:	fb1e fe03 	smulbb	lr, lr, r3
 8017ca6:	00ff      	lsls	r7, r7, #3
 8017ca8:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 8017cac:	fb06 e602 	mla	r6, r6, r2, lr
 8017cb0:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 8017cb4:	b2ff      	uxtb	r7, r7
 8017cb6:	fa5f fc8c 	uxtb.w	ip, ip
 8017cba:	b2e4      	uxtb	r4, r4
 8017cbc:	b2b6      	uxth	r6, r6
 8017cbe:	fb1c fc03 	smulbb	ip, ip, r3
 8017cc2:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 8017cc6:	ea47 1757 	orr.w	r7, r7, r7, lsr #5
 8017cca:	fb14 f403 	smulbb	r4, r4, r3
 8017cce:	fb05 c502 	mla	r5, r5, r2, ip
 8017cd2:	f106 0e01 	add.w	lr, r6, #1
 8017cd6:	fb07 4702 	mla	r7, r7, r2, r4
 8017cda:	b2ad      	uxth	r5, r5
 8017cdc:	b2bf      	uxth	r7, r7
 8017cde:	eb0e 2616 	add.w	r6, lr, r6, lsr #8
 8017ce2:	f406 4e78 	and.w	lr, r6, #63488	@ 0xf800
 8017ce6:	f105 0c01 	add.w	ip, r5, #1
 8017cea:	1c7e      	adds	r6, r7, #1
 8017cec:	eb06 2617 	add.w	r6, r6, r7, lsr #8
 8017cf0:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 8017cf4:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 8017cf8:	096d      	lsrs	r5, r5, #5
 8017cfa:	ea46 060e 	orr.w	r6, r6, lr
 8017cfe:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 8017d02:	432e      	orrs	r6, r5
 8017d04:	8006      	strh	r6, [r0, #0]
 8017d06:	e7ba      	b.n	8017c7e <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x112>
 8017d08:	f8ba 3000 	ldrh.w	r3, [sl]
 8017d0c:	f9bd 4024 	ldrsh.w	r4, [sp, #36]	@ 0x24
 8017d10:	eba3 0308 	sub.w	r3, r3, r8
 8017d14:	eba4 0408 	sub.w	r4, r4, r8
 8017d18:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8017d1c:	eb01 0484 	add.w	r4, r1, r4, lsl #2
 8017d20:	e78b      	b.n	8017c3a <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xce>
 8017d22:	4b03      	ldr	r3, [pc, #12]	@ (8017d30 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c4>)
 8017d24:	6818      	ldr	r0, [r3, #0]
 8017d26:	6803      	ldr	r3, [r0, #0]
 8017d28:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8017d2a:	4798      	blx	r3
 8017d2c:	e76a      	b.n	8017c04 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x98>
 8017d2e:	bf00      	nop
 8017d30:	20013f2c 	.word	0x20013f2c
 8017d34:	20013f24 	.word	0x20013f24

08017d38 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>:
 8017d38:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8017d3c:	460c      	mov	r4, r1
 8017d3e:	b085      	sub	sp, #20
 8017d40:	6810      	ldr	r0, [r2, #0]
 8017d42:	6851      	ldr	r1, [r2, #4]
 8017d44:	466d      	mov	r5, sp
 8017d46:	c503      	stmia	r5!, {r0, r1}
 8017d48:	6818      	ldr	r0, [r3, #0]
 8017d4a:	6859      	ldr	r1, [r3, #4]
 8017d4c:	4616      	mov	r6, r2
 8017d4e:	c503      	stmia	r5!, {r0, r1}
 8017d50:	4668      	mov	r0, sp
 8017d52:	f7f7 fa43 	bl	800f1dc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8017d56:	4631      	mov	r1, r6
 8017d58:	a802      	add	r0, sp, #8
 8017d5a:	f7f7 fa67 	bl	800f22c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8017d5e:	f9bd 2008 	ldrsh.w	r2, [sp, #8]
 8017d62:	f9bd 300a 	ldrsh.w	r3, [sp, #10]
 8017d66:	f8bd 1004 	ldrh.w	r1, [sp, #4]
 8017d6a:	4d28      	ldr	r5, [pc, #160]	@ (8017e0c <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xd4>)
 8017d6c:	4e28      	ldr	r6, [pc, #160]	@ (8017e10 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xd8>)
 8017d6e:	6828      	ldr	r0, [r5, #0]
 8017d70:	f9bd 700c 	ldrsh.w	r7, [sp, #12]
 8017d74:	f9bd 800e 	ldrsh.w	r8, [sp, #14]
 8017d78:	fb11 2103 	smlabb	r1, r1, r3, r2
 8017d7c:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 8017d80:	f8bd 1000 	ldrh.w	r1, [sp]
 8017d84:	440a      	add	r2, r1
 8017d86:	f8ad 2008 	strh.w	r2, [sp, #8]
 8017d8a:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 8017d8e:	4413      	add	r3, r2
 8017d90:	f8ad 300a 	strh.w	r3, [sp, #10]
 8017d94:	6803      	ldr	r3, [r0, #0]
 8017d96:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8017d98:	4798      	blx	r3
 8017d9a:	8833      	ldrh	r3, [r6, #0]
 8017d9c:	f9bd 200a 	ldrsh.w	r2, [sp, #10]
 8017da0:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
 8017da4:	f8df e06c 	ldr.w	lr, [pc, #108]	@ 8017e14 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xdc>
 8017da8:	fb03 1202 	mla	r2, r3, r2, r1
 8017dac:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8017db0:	fb08 f303 	mul.w	r3, r8, r3
 8017db4:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8017db8:	ea4f 0c47 	mov.w	ip, r7, lsl #1
 8017dbc:	4298      	cmp	r0, r3
 8017dbe:	d21d      	bcs.n	8017dfc <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xc4>
 8017dc0:	eb00 080c 	add.w	r8, r0, ip
 8017dc4:	4540      	cmp	r0, r8
 8017dc6:	d20f      	bcs.n	8017de8 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xb0>
 8017dc8:	f854 1b04 	ldr.w	r1, [r4], #4
 8017dcc:	ea4f 1951 	mov.w	r9, r1, lsr #5
 8017dd0:	ea0e 2211 	and.w	r2, lr, r1, lsr #8
 8017dd4:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 8017dd8:	ea42 0209 	orr.w	r2, r2, r9
 8017ddc:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 8017de0:	430a      	orrs	r2, r1
 8017de2:	f820 2b02 	strh.w	r2, [r0], #2
 8017de6:	e7ed      	b.n	8017dc4 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0x8c>
 8017de8:	8832      	ldrh	r2, [r6, #0]
 8017dea:	1bd2      	subs	r2, r2, r7
 8017dec:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8017df0:	f9bd 2004 	ldrsh.w	r2, [sp, #4]
 8017df4:	1bd2      	subs	r2, r2, r7
 8017df6:	eb04 0482 	add.w	r4, r4, r2, lsl #2
 8017dfa:	e7df      	b.n	8017dbc <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0x84>
 8017dfc:	6828      	ldr	r0, [r5, #0]
 8017dfe:	6803      	ldr	r3, [r0, #0]
 8017e00:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8017e02:	4798      	blx	r3
 8017e04:	b005      	add	sp, #20
 8017e06:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8017e0a:	bf00      	nop
 8017e0c:	20013f2c 	.word	0x20013f2c
 8017e10:	20013f24 	.word	0x20013f24
 8017e14:	fffff800 	.word	0xfffff800

08017e18 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>:
 8017e18:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8017e1c:	460e      	mov	r6, r1
 8017e1e:	b08e      	sub	sp, #56	@ 0x38
 8017e20:	4604      	mov	r4, r0
 8017e22:	6808      	ldr	r0, [r1, #0]
 8017e24:	6849      	ldr	r1, [r1, #4]
 8017e26:	f8df 81d8 	ldr.w	r8, [pc, #472]	@ 8018000 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e8>
 8017e2a:	f8df 91d8 	ldr.w	r9, [pc, #472]	@ 8018004 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1ec>
 8017e2e:	461d      	mov	r5, r3
 8017e30:	ab0a      	add	r3, sp, #40	@ 0x28
 8017e32:	c303      	stmia	r3!, {r0, r1}
 8017e34:	6810      	ldr	r0, [r2, #0]
 8017e36:	6851      	ldr	r1, [r2, #4]
 8017e38:	ab0c      	add	r3, sp, #48	@ 0x30
 8017e3a:	c303      	stmia	r3!, {r0, r1}
 8017e3c:	a80a      	add	r0, sp, #40	@ 0x28
 8017e3e:	f7f7 f9cd 	bl	800f1dc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8017e42:	4631      	mov	r1, r6
 8017e44:	a80c      	add	r0, sp, #48	@ 0x30
 8017e46:	f7f7 f9f1 	bl	800f22c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8017e4a:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	@ 0x30
 8017e4e:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	@ 0x32
 8017e52:	f8bd 102c 	ldrh.w	r1, [sp, #44]	@ 0x2c
 8017e56:	f8d8 0000 	ldr.w	r0, [r8]
 8017e5a:	f9bd 7034 	ldrsh.w	r7, [sp, #52]	@ 0x34
 8017e5e:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	@ 0x36
 8017e62:	fb11 2103 	smlabb	r1, r1, r3, r2
 8017e66:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8017e6a:	440c      	add	r4, r1
 8017e6c:	f8bd 1028 	ldrh.w	r1, [sp, #40]	@ 0x28
 8017e70:	440a      	add	r2, r1
 8017e72:	f8ad 2030 	strh.w	r2, [sp, #48]	@ 0x30
 8017e76:	f8bd 202a 	ldrh.w	r2, [sp, #42]	@ 0x2a
 8017e7a:	4413      	add	r3, r2
 8017e7c:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
 8017e80:	6803      	ldr	r3, [r0, #0]
 8017e82:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8017e84:	4798      	blx	r3
 8017e86:	2dff      	cmp	r5, #255	@ 0xff
 8017e88:	d124      	bne.n	8017ed4 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xbc>
 8017e8a:	f010 0f01 	tst.w	r0, #1
 8017e8e:	f8d8 0000 	ldr.w	r0, [r8]
 8017e92:	d022      	beq.n	8017eda <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xc2>
 8017e94:	2100      	movs	r1, #0
 8017e96:	f8d0 c000 	ldr.w	ip, [r0]
 8017e9a:	f8bd 3032 	ldrh.w	r3, [sp, #50]	@ 0x32
 8017e9e:	f8bd 2030 	ldrh.w	r2, [sp, #48]	@ 0x30
 8017ea2:	e9cd 1107 	strd	r1, r1, [sp, #28]
 8017ea6:	f04f 0e01 	mov.w	lr, #1
 8017eaa:	f8cd e018 	str.w	lr, [sp, #24]
 8017eae:	f8b9 e000 	ldrh.w	lr, [r9]
 8017eb2:	9503      	str	r5, [sp, #12]
 8017eb4:	e9cd 1e04 	strd	r1, lr, [sp, #16]
 8017eb8:	b2b6      	uxth	r6, r6
 8017eba:	f8bd 102c 	ldrh.w	r1, [sp, #44]	@ 0x2c
 8017ebe:	9102      	str	r1, [sp, #8]
 8017ec0:	b2bf      	uxth	r7, r7
 8017ec2:	9601      	str	r6, [sp, #4]
 8017ec4:	9700      	str	r7, [sp, #0]
 8017ec6:	f8dc 5044 	ldr.w	r5, [ip, #68]	@ 0x44
 8017eca:	4621      	mov	r1, r4
 8017ecc:	47a8      	blx	r5
 8017ece:	b00e      	add	sp, #56	@ 0x38
 8017ed0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8017ed4:	f010 0f04 	tst.w	r0, #4
 8017ed8:	e7d9      	b.n	8017e8e <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x76>
 8017eda:	6803      	ldr	r3, [r0, #0]
 8017edc:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8017ede:	4798      	blx	r3
 8017ee0:	f8b9 3000 	ldrh.w	r3, [r9]
 8017ee4:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	@ 0x32
 8017ee8:	f9bd 1030 	ldrsh.w	r1, [sp, #48]	@ 0x30
 8017eec:	f9bd c02c 	ldrsh.w	ip, [sp, #44]	@ 0x2c
 8017ef0:	fb03 1202 	mla	r2, r3, r2, r1
 8017ef4:	ebac 0c07 	sub.w	ip, ip, r7
 8017ef8:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8017efc:	435e      	muls	r6, r3
 8017efe:	ea4f 0e47 	mov.w	lr, r7, lsl #1
 8017f02:	2dff      	cmp	r5, #255	@ 0xff
 8017f04:	eba3 0707 	sub.w	r7, r3, r7
 8017f08:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 8017f0c:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 8017f10:	ea4f 0747 	mov.w	r7, r7, lsl #1
 8017f14:	d049      	beq.n	8017faa <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x192>
 8017f16:	43eb      	mvns	r3, r5
 8017f18:	fa1f f985 	uxth.w	r9, r5
 8017f1c:	b2db      	uxtb	r3, r3
 8017f1e:	42b0      	cmp	r0, r6
 8017f20:	d266      	bcs.n	8017ff0 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d8>
 8017f22:	eb00 0a0e 	add.w	sl, r0, lr
 8017f26:	4550      	cmp	r0, sl
 8017f28:	4621      	mov	r1, r4
 8017f2a:	f104 0403 	add.w	r4, r4, #3
 8017f2e:	d25b      	bcs.n	8017fe8 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d0>
 8017f30:	8802      	ldrh	r2, [r0, #0]
 8017f32:	f814 1c01 	ldrb.w	r1, [r4, #-1]
 8017f36:	ea4f 2822 	mov.w	r8, r2, asr #8
 8017f3a:	f008 08f8 	and.w	r8, r8, #248	@ 0xf8
 8017f3e:	fb11 f109 	smulbb	r1, r1, r9
 8017f42:	ea48 1858 	orr.w	r8, r8, r8, lsr #5
 8017f46:	10d5      	asrs	r5, r2, #3
 8017f48:	fb08 1803 	mla	r8, r8, r3, r1
 8017f4c:	f814 1c02 	ldrb.w	r1, [r4, #-2]
 8017f50:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 8017f54:	fb11 f109 	smulbb	r1, r1, r9
 8017f58:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 8017f5c:	fb05 1503 	mla	r5, r5, r3, r1
 8017f60:	00d2      	lsls	r2, r2, #3
 8017f62:	f814 1c03 	ldrb.w	r1, [r4, #-3]
 8017f66:	b2d2      	uxtb	r2, r2
 8017f68:	fb11 f109 	smulbb	r1, r1, r9
 8017f6c:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 8017f70:	fa1f f888 	uxth.w	r8, r8
 8017f74:	fb02 1203 	mla	r2, r2, r3, r1
 8017f78:	b292      	uxth	r2, r2
 8017f7a:	f108 0101 	add.w	r1, r8, #1
 8017f7e:	b2ad      	uxth	r5, r5
 8017f80:	eb01 2818 	add.w	r8, r1, r8, lsr #8
 8017f84:	1c51      	adds	r1, r2, #1
 8017f86:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8017f8a:	1c69      	adds	r1, r5, #1
 8017f8c:	eb01 2515 	add.w	r5, r1, r5, lsr #8
 8017f90:	f408 4878 	and.w	r8, r8, #63488	@ 0xf800
 8017f94:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8017f98:	096d      	lsrs	r5, r5, #5
 8017f9a:	ea42 0208 	orr.w	r2, r2, r8
 8017f9e:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 8017fa2:	432a      	orrs	r2, r5
 8017fa4:	f820 2b02 	strh.w	r2, [r0], #2
 8017fa8:	e7bd      	b.n	8017f26 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x10e>
 8017faa:	4a14      	ldr	r2, [pc, #80]	@ (8017ffc <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e4>)
 8017fac:	42b0      	cmp	r0, r6
 8017fae:	d21f      	bcs.n	8017ff0 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d8>
 8017fb0:	eb00 050e 	add.w	r5, r0, lr
 8017fb4:	42a8      	cmp	r0, r5
 8017fb6:	4621      	mov	r1, r4
 8017fb8:	f104 0403 	add.w	r4, r4, #3
 8017fbc:	d210      	bcs.n	8017fe0 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1c8>
 8017fbe:	f814 3c02 	ldrb.w	r3, [r4, #-2]
 8017fc2:	f814 1c01 	ldrb.w	r1, [r4, #-1]
 8017fc6:	00db      	lsls	r3, r3, #3
 8017fc8:	ea02 2101 	and.w	r1, r2, r1, lsl #8
 8017fcc:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 8017fd0:	430b      	orrs	r3, r1
 8017fd2:	f814 1c03 	ldrb.w	r1, [r4, #-3]
 8017fd6:	ea43 03d1 	orr.w	r3, r3, r1, lsr #3
 8017fda:	f820 3b02 	strh.w	r3, [r0], #2
 8017fde:	e7e9      	b.n	8017fb4 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x19c>
 8017fe0:	4438      	add	r0, r7
 8017fe2:	eb01 040c 	add.w	r4, r1, ip
 8017fe6:	e7e1      	b.n	8017fac <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x194>
 8017fe8:	4438      	add	r0, r7
 8017fea:	eb01 040c 	add.w	r4, r1, ip
 8017fee:	e796      	b.n	8017f1e <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x106>
 8017ff0:	4b03      	ldr	r3, [pc, #12]	@ (8018000 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e8>)
 8017ff2:	6818      	ldr	r0, [r3, #0]
 8017ff4:	6803      	ldr	r3, [r0, #0]
 8017ff6:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8017ff8:	4798      	blx	r3
 8017ffa:	e768      	b.n	8017ece <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xb6>
 8017ffc:	fffff800 	.word	0xfffff800
 8018000:	20013f2c 	.word	0x20013f2c
 8018004:	20013f24 	.word	0x20013f24

08018008 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb>:
 8018008:	b4f0      	push	{r4, r5, r6, r7}
 801800a:	4616      	mov	r6, r2
 801800c:	2e01      	cmp	r6, #1
 801800e:	461c      	mov	r4, r3
 8018010:	460d      	mov	r5, r1
 8018012:	9a04      	ldr	r2, [sp, #16]
 8018014:	f89d 3014 	ldrb.w	r3, [sp, #20]
 8018018:	f89d 7018 	ldrb.w	r7, [sp, #24]
 801801c:	d012      	beq.n	8018044 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x3c>
 801801e:	d303      	bcc.n	8018028 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x20>
 8018020:	2e02      	cmp	r6, #2
 8018022:	d00a      	beq.n	801803a <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x32>
 8018024:	bcf0      	pop	{r4, r5, r6, r7}
 8018026:	4770      	bx	lr
 8018028:	6805      	ldr	r5, [r0, #0]
 801802a:	e9cd 3704 	strd	r3, r7, [sp, #16]
 801802e:	68ed      	ldr	r5, [r5, #12]
 8018030:	4613      	mov	r3, r2
 8018032:	46ac      	mov	ip, r5
 8018034:	4622      	mov	r2, r4
 8018036:	bcf0      	pop	{r4, r5, r6, r7}
 8018038:	4760      	bx	ip
 801803a:	4621      	mov	r1, r4
 801803c:	4628      	mov	r0, r5
 801803e:	bcf0      	pop	{r4, r5, r6, r7}
 8018040:	f7ff bd94 	b.w	8017b6c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 8018044:	4621      	mov	r1, r4
 8018046:	4628      	mov	r0, r5
 8018048:	bcf0      	pop	{r4, r5, r6, r7}
 801804a:	f7ff bee5 	b.w	8017e18 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>
	...

08018050 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>:
 8018050:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018054:	4681      	mov	r9, r0
 8018056:	b093      	sub	sp, #76	@ 0x4c
 8018058:	6810      	ldr	r0, [r2, #0]
 801805a:	f89d a070 	ldrb.w	sl, [sp, #112]	@ 0x70
 801805e:	4f6d      	ldr	r7, [pc, #436]	@ (8018214 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c4>)
 8018060:	4688      	mov	r8, r1
 8018062:	6851      	ldr	r1, [r2, #4]
 8018064:	ac0e      	add	r4, sp, #56	@ 0x38
 8018066:	c403      	stmia	r4!, {r0, r1}
 8018068:	6818      	ldr	r0, [r3, #0]
 801806a:	6859      	ldr	r1, [r3, #4]
 801806c:	ac10      	add	r4, sp, #64	@ 0x40
 801806e:	4616      	mov	r6, r2
 8018070:	c403      	stmia	r4!, {r0, r1}
 8018072:	a80e      	add	r0, sp, #56	@ 0x38
 8018074:	f7f7 f8b2 	bl	800f1dc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8018078:	4631      	mov	r1, r6
 801807a:	a810      	add	r0, sp, #64	@ 0x40
 801807c:	f7f7 f8d6 	bl	800f22c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8018080:	f9bd 2040 	ldrsh.w	r2, [sp, #64]	@ 0x40
 8018084:	f9bd 3042 	ldrsh.w	r3, [sp, #66]	@ 0x42
 8018088:	f8bd 103c 	ldrh.w	r1, [sp, #60]	@ 0x3c
 801808c:	4e62      	ldr	r6, [pc, #392]	@ (8018218 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c8>)
 801808e:	f9bd 4044 	ldrsh.w	r4, [sp, #68]	@ 0x44
 8018092:	6830      	ldr	r0, [r6, #0]
 8018094:	f9bd 5046 	ldrsh.w	r5, [sp, #70]	@ 0x46
 8018098:	fb11 2103 	smlabb	r1, r1, r3, r2
 801809c:	4489      	add	r9, r1
 801809e:	f8bd 1038 	ldrh.w	r1, [sp, #56]	@ 0x38
 80180a2:	440a      	add	r2, r1
 80180a4:	f8ad 2040 	strh.w	r2, [sp, #64]	@ 0x40
 80180a8:	f8bd 203a 	ldrh.w	r2, [sp, #58]	@ 0x3a
 80180ac:	4413      	add	r3, r2
 80180ae:	f8ad 3042 	strh.w	r3, [sp, #66]	@ 0x42
 80180b2:	6803      	ldr	r3, [r0, #0]
 80180b4:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 80180b6:	4798      	blx	r3
 80180b8:	f010 0f80 	tst.w	r0, #128	@ 0x80
 80180bc:	6830      	ldr	r0, [r6, #0]
 80180be:	d01d      	beq.n	80180fc <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xac>
 80180c0:	2200      	movs	r2, #0
 80180c2:	6801      	ldr	r1, [r0, #0]
 80180c4:	f8bd 3040 	ldrh.w	r3, [sp, #64]	@ 0x40
 80180c8:	e9cd 2208 	strd	r2, r2, [sp, #32]
 80180cc:	220b      	movs	r2, #11
 80180ce:	9207      	str	r2, [sp, #28]
 80180d0:	883a      	ldrh	r2, [r7, #0]
 80180d2:	9206      	str	r2, [sp, #24]
 80180d4:	2201      	movs	r2, #1
 80180d6:	e9cd a204 	strd	sl, r2, [sp, #16]
 80180da:	f8bd 203c 	ldrh.w	r2, [sp, #60]	@ 0x3c
 80180de:	9203      	str	r2, [sp, #12]
 80180e0:	b2a4      	uxth	r4, r4
 80180e2:	f8bd 2042 	ldrh.w	r2, [sp, #66]	@ 0x42
 80180e6:	9200      	str	r2, [sp, #0]
 80180e8:	b2ad      	uxth	r5, r5
 80180ea:	9502      	str	r5, [sp, #8]
 80180ec:	9401      	str	r4, [sp, #4]
 80180ee:	6c0c      	ldr	r4, [r1, #64]	@ 0x40
 80180f0:	4642      	mov	r2, r8
 80180f2:	4649      	mov	r1, r9
 80180f4:	47a0      	blx	r4
 80180f6:	b013      	add	sp, #76	@ 0x4c
 80180f8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80180fc:	6803      	ldr	r3, [r0, #0]
 80180fe:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8018100:	4798      	blx	r3
 8018102:	883b      	ldrh	r3, [r7, #0]
 8018104:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	@ 0x42
 8018108:	f9bd 1040 	ldrsh.w	r1, [sp, #64]	@ 0x40
 801810c:	fb03 1202 	mla	r2, r3, r2, r1
 8018110:	435d      	muls	r5, r3
 8018112:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8018116:	eb00 0245 	add.w	r2, r0, r5, lsl #1
 801811a:	920c      	str	r2, [sp, #48]	@ 0x30
 801811c:	f9bd 203c 	ldrsh.w	r2, [sp, #60]	@ 0x3c
 8018120:	1b12      	subs	r2, r2, r4
 8018122:	920d      	str	r2, [sp, #52]	@ 0x34
 8018124:	0062      	lsls	r2, r4, #1
 8018126:	1b1c      	subs	r4, r3, r4
 8018128:	0063      	lsls	r3, r4, #1
 801812a:	920a      	str	r2, [sp, #40]	@ 0x28
 801812c:	930b      	str	r3, [sp, #44]	@ 0x2c
 801812e:	f04f 0e04 	mov.w	lr, #4
 8018132:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8018134:	4298      	cmp	r0, r3
 8018136:	d266      	bcs.n	8018206 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1b6>
 8018138:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801813a:	eb00 0b03 	add.w	fp, r0, r3
 801813e:	4558      	cmp	r0, fp
 8018140:	d25c      	bcs.n	80181fc <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1ac>
 8018142:	f819 3b01 	ldrb.w	r3, [r9], #1
 8018146:	fb1e e303 	smlabb	r3, lr, r3, lr
 801814a:	f858 2003 	ldr.w	r2, [r8, r3]
 801814e:	0e11      	lsrs	r1, r2, #24
 8018150:	d012      	beq.n	8018178 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x128>
 8018152:	29ff      	cmp	r1, #255	@ 0xff
 8018154:	ea4f 2712 	mov.w	r7, r2, lsr #8
 8018158:	d110      	bne.n	801817c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x12c>
 801815a:	f1ba 0fff 	cmp.w	sl, #255	@ 0xff
 801815e:	d10d      	bne.n	801817c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x12c>
 8018160:	0953      	lsrs	r3, r2, #5
 8018162:	f427 67ff 	bic.w	r7, r7, #2040	@ 0x7f8
 8018166:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801816a:	f027 0707 	bic.w	r7, r7, #7
 801816e:	431f      	orrs	r7, r3
 8018170:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8018174:	433a      	orrs	r2, r7
 8018176:	8002      	strh	r2, [r0, #0]
 8018178:	3002      	adds	r0, #2
 801817a:	e7e0      	b.n	801813e <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xee>
 801817c:	fb0a f101 	mul.w	r1, sl, r1
 8018180:	8806      	ldrh	r6, [r0, #0]
 8018182:	1c4b      	adds	r3, r1, #1
 8018184:	eb03 2321 	add.w	r3, r3, r1, asr #8
 8018188:	1235      	asrs	r5, r6, #8
 801818a:	10f4      	asrs	r4, r6, #3
 801818c:	121b      	asrs	r3, r3, #8
 801818e:	00f6      	lsls	r6, r6, #3
 8018190:	b299      	uxth	r1, r3
 8018192:	f3c2 4c07 	ubfx	ip, r2, #16, #8
 8018196:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 801819a:	b2f6      	uxtb	r6, r6
 801819c:	43db      	mvns	r3, r3
 801819e:	b2d2      	uxtb	r2, r2
 80181a0:	b2db      	uxtb	r3, r3
 80181a2:	fb1c fc01 	smulbb	ip, ip, r1
 80181a6:	ea45 1555 	orr.w	r5, r5, r5, lsr #5
 80181aa:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 80181ae:	fb12 f201 	smulbb	r2, r2, r1
 80181b2:	fb05 c503 	mla	r5, r5, r3, ip
 80181b6:	f004 04fc 	and.w	r4, r4, #252	@ 0xfc
 80181ba:	b2ff      	uxtb	r7, r7
 80181bc:	fb06 2203 	mla	r2, r6, r3, r2
 80181c0:	b2ad      	uxth	r5, r5
 80181c2:	fb17 f701 	smulbb	r7, r7, r1
 80181c6:	b292      	uxth	r2, r2
 80181c8:	ea44 1494 	orr.w	r4, r4, r4, lsr #6
 80181cc:	fb04 7403 	mla	r4, r4, r3, r7
 80181d0:	f105 0c01 	add.w	ip, r5, #1
 80181d4:	1c57      	adds	r7, r2, #1
 80181d6:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 80181da:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 80181de:	b2a4      	uxth	r4, r4
 80181e0:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 80181e4:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 80181e8:	433d      	orrs	r5, r7
 80181ea:	1c67      	adds	r7, r4, #1
 80181ec:	eb07 2414 	add.w	r4, r7, r4, lsr #8
 80181f0:	0964      	lsrs	r4, r4, #5
 80181f2:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
 80181f6:	4325      	orrs	r5, r4
 80181f8:	8005      	strh	r5, [r0, #0]
 80181fa:	e7bd      	b.n	8018178 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x128>
 80181fc:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 80181fe:	4418      	add	r0, r3
 8018200:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8018202:	4499      	add	r9, r3
 8018204:	e795      	b.n	8018132 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xe2>
 8018206:	4b04      	ldr	r3, [pc, #16]	@ (8018218 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c8>)
 8018208:	6818      	ldr	r0, [r3, #0]
 801820a:	6803      	ldr	r3, [r0, #0]
 801820c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 801820e:	4798      	blx	r3
 8018210:	e771      	b.n	80180f6 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xa6>
 8018212:	bf00      	nop
 8018214:	20013f24 	.word	0x20013f24
 8018218:	20013f2c 	.word	0x20013f2c

0801821c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>:
 801821c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018220:	b087      	sub	sp, #28
 8018222:	4680      	mov	r8, r0
 8018224:	f89d 6040 	ldrb.w	r6, [sp, #64]	@ 0x40
 8018228:	460d      	mov	r5, r1
 801822a:	4614      	mov	r4, r2
 801822c:	2e00      	cmp	r6, #0
 801822e:	f000 80b9 	beq.w	80183a4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x188>
 8018232:	6810      	ldr	r0, [r2, #0]
 8018234:	6851      	ldr	r1, [r2, #4]
 8018236:	af02      	add	r7, sp, #8
 8018238:	c703      	stmia	r7!, {r0, r1}
 801823a:	6818      	ldr	r0, [r3, #0]
 801823c:	6859      	ldr	r1, [r3, #4]
 801823e:	af04      	add	r7, sp, #16
 8018240:	c703      	stmia	r7!, {r0, r1}
 8018242:	a802      	add	r0, sp, #8
 8018244:	f7f6 ffca 	bl	800f1dc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8018248:	4621      	mov	r1, r4
 801824a:	a804      	add	r0, sp, #16
 801824c:	f7f6 ffee 	bl	800f22c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8018250:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 8018254:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 8018258:	f8bd 400c 	ldrh.w	r4, [sp, #12]
 801825c:	f9bd 7016 	ldrsh.w	r7, [sp, #22]
 8018260:	fb14 2103 	smlabb	r1, r4, r3, r2
 8018264:	eb08 0401 	add.w	r4, r8, r1
 8018268:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 801826c:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
 8018270:	440a      	add	r2, r1
 8018272:	f8ad 2010 	strh.w	r2, [sp, #16]
 8018276:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 801827a:	4413      	add	r3, r2
 801827c:	f8ad 3012 	strh.w	r3, [sp, #18]
 8018280:	4b4a      	ldr	r3, [pc, #296]	@ (80183ac <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x190>)
 8018282:	6818      	ldr	r0, [r3, #0]
 8018284:	6803      	ldr	r3, [r0, #0]
 8018286:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8018288:	4798      	blx	r3
 801828a:	4b49      	ldr	r3, [pc, #292]	@ (80183b0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x194>)
 801828c:	f9bd 1012 	ldrsh.w	r1, [sp, #18]
 8018290:	881a      	ldrh	r2, [r3, #0]
 8018292:	f9bd c010 	ldrsh.w	ip, [sp, #16]
 8018296:	2eff      	cmp	r6, #255	@ 0xff
 8018298:	fb02 c101 	mla	r1, r2, r1, ip
 801829c:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 80182a0:	fb02 f207 	mul.w	r2, r2, r7
 80182a4:	f105 0104 	add.w	r1, r5, #4
 80182a8:	ea4f 0a48 	mov.w	sl, r8, lsl #1
 80182ac:	461d      	mov	r5, r3
 80182ae:	d05a      	beq.n	8018366 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x14a>
 80182b0:	f1c6 0eff 	rsb	lr, r6, #255	@ 0xff
 80182b4:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 80182b8:	b2b6      	uxth	r6, r6
 80182ba:	fa1f fe8e 	uxth.w	lr, lr
 80182be:	9301      	str	r3, [sp, #4]
 80182c0:	4282      	cmp	r2, r0
 80182c2:	d96a      	bls.n	801839a <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x17e>
 80182c4:	eb00 0b0a 	add.w	fp, r0, sl
 80182c8:	4583      	cmp	fp, r0
 80182ca:	d940      	bls.n	801834e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x132>
 80182cc:	f814 3b01 	ldrb.w	r3, [r4], #1
 80182d0:	8805      	ldrh	r5, [r0, #0]
 80182d2:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 80182d6:	122f      	asrs	r7, r5, #8
 80182d8:	ea4f 2c23 	mov.w	ip, r3, asr #8
 80182dc:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 80182e0:	fb17 f70e 	smulbb	r7, r7, lr
 80182e4:	ea4f 09e5 	mov.w	r9, r5, asr #3
 80182e8:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 80182ec:	00ed      	lsls	r5, r5, #3
 80182ee:	fb0c 7c06 	mla	ip, ip, r6, r7
 80182f2:	f009 09fc 	and.w	r9, r9, #252	@ 0xfc
 80182f6:	10df      	asrs	r7, r3, #3
 80182f8:	b2ed      	uxtb	r5, r5
 80182fa:	00db      	lsls	r3, r3, #3
 80182fc:	fa1f fc8c 	uxth.w	ip, ip
 8018300:	fb19 f90e 	smulbb	r9, r9, lr
 8018304:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 8018308:	b2db      	uxtb	r3, r3
 801830a:	fb15 f50e 	smulbb	r5, r5, lr
 801830e:	fb07 9706 	mla	r7, r7, r6, r9
 8018312:	fb03 5306 	mla	r3, r3, r6, r5
 8018316:	f10c 0901 	add.w	r9, ip, #1
 801831a:	b29b      	uxth	r3, r3
 801831c:	eb09 2c1c 	add.w	ip, r9, ip, lsr #8
 8018320:	f40c 4978 	and.w	r9, ip, #63488	@ 0xf800
 8018324:	f103 0c01 	add.w	ip, r3, #1
 8018328:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 801832c:	b2bf      	uxth	r7, r7
 801832e:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 8018332:	ea4c 0c09 	orr.w	ip, ip, r9
 8018336:	f107 0901 	add.w	r9, r7, #1
 801833a:	eb09 2717 	add.w	r7, r9, r7, lsr #8
 801833e:	097f      	lsrs	r7, r7, #5
 8018340:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 8018344:	ea4c 0c07 	orr.w	ip, ip, r7
 8018348:	f820 cb02 	strh.w	ip, [r0], #2
 801834c:	e7bc      	b.n	80182c8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xac>
 801834e:	9b01      	ldr	r3, [sp, #4]
 8018350:	881b      	ldrh	r3, [r3, #0]
 8018352:	eba3 0308 	sub.w	r3, r3, r8
 8018356:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801835a:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 801835e:	eba3 0308 	sub.w	r3, r3, r8
 8018362:	441c      	add	r4, r3
 8018364:	e7ac      	b.n	80182c0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xa4>
 8018366:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 801836a:	4282      	cmp	r2, r0
 801836c:	d915      	bls.n	801839a <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x17e>
 801836e:	eb00 060a 	add.w	r6, r0, sl
 8018372:	4286      	cmp	r6, r0
 8018374:	d906      	bls.n	8018384 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x168>
 8018376:	f814 3b01 	ldrb.w	r3, [r4], #1
 801837a:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 801837e:	f820 3b02 	strh.w	r3, [r0], #2
 8018382:	e7f6      	b.n	8018372 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x156>
 8018384:	882b      	ldrh	r3, [r5, #0]
 8018386:	eba3 0308 	sub.w	r3, r3, r8
 801838a:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801838e:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 8018392:	eba3 0308 	sub.w	r3, r3, r8
 8018396:	441c      	add	r4, r3
 8018398:	e7e7      	b.n	801836a <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x14e>
 801839a:	4b04      	ldr	r3, [pc, #16]	@ (80183ac <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x190>)
 801839c:	6818      	ldr	r0, [r3, #0]
 801839e:	6803      	ldr	r3, [r0, #0]
 80183a0:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80183a2:	4798      	blx	r3
 80183a4:	b007      	add	sp, #28
 80183a6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80183aa:	bf00      	nop
 80183ac:	20013f2c 	.word	0x20013f2c
 80183b0:	20013f24 	.word	0x20013f24

080183b4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>:
 80183b4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80183b8:	b091      	sub	sp, #68	@ 0x44
 80183ba:	4680      	mov	r8, r0
 80183bc:	f89d 5068 	ldrb.w	r5, [sp, #104]	@ 0x68
 80183c0:	460f      	mov	r7, r1
 80183c2:	4614      	mov	r4, r2
 80183c4:	2d00      	cmp	r5, #0
 80183c6:	d051      	beq.n	801846c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xb8>
 80183c8:	6810      	ldr	r0, [r2, #0]
 80183ca:	6851      	ldr	r1, [r2, #4]
 80183cc:	f8df 9200 	ldr.w	r9, [pc, #512]	@ 80185d0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21c>
 80183d0:	ae0c      	add	r6, sp, #48	@ 0x30
 80183d2:	c603      	stmia	r6!, {r0, r1}
 80183d4:	6818      	ldr	r0, [r3, #0]
 80183d6:	6859      	ldr	r1, [r3, #4]
 80183d8:	ae0e      	add	r6, sp, #56	@ 0x38
 80183da:	c603      	stmia	r6!, {r0, r1}
 80183dc:	a80c      	add	r0, sp, #48	@ 0x30
 80183de:	f7f6 fefd 	bl	800f1dc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80183e2:	4621      	mov	r1, r4
 80183e4:	a80e      	add	r0, sp, #56	@ 0x38
 80183e6:	f7f6 ff21 	bl	800f22c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80183ea:	f9bd 2038 	ldrsh.w	r2, [sp, #56]	@ 0x38
 80183ee:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	@ 0x3a
 80183f2:	f8bd 1034 	ldrh.w	r1, [sp, #52]	@ 0x34
 80183f6:	f8d9 0000 	ldr.w	r0, [r9]
 80183fa:	f9bd 603c 	ldrsh.w	r6, [sp, #60]	@ 0x3c
 80183fe:	f9bd a03e 	ldrsh.w	sl, [sp, #62]	@ 0x3e
 8018402:	fb11 2103 	smlabb	r1, r1, r3, r2
 8018406:	eb08 0401 	add.w	r4, r8, r1
 801840a:	f8bd 1030 	ldrh.w	r1, [sp, #48]	@ 0x30
 801840e:	f8df 81c4 	ldr.w	r8, [pc, #452]	@ 80185d4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x220>
 8018412:	440a      	add	r2, r1
 8018414:	f8ad 2038 	strh.w	r2, [sp, #56]	@ 0x38
 8018418:	f8bd 2032 	ldrh.w	r2, [sp, #50]	@ 0x32
 801841c:	4413      	add	r3, r2
 801841e:	f8ad 303a 	strh.w	r3, [sp, #58]	@ 0x3a
 8018422:	6803      	ldr	r3, [r0, #0]
 8018424:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8018426:	4798      	blx	r3
 8018428:	f010 0f80 	tst.w	r0, #128	@ 0x80
 801842c:	f8d9 0000 	ldr.w	r0, [r9]
 8018430:	d01f      	beq.n	8018472 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xbe>
 8018432:	2200      	movs	r2, #0
 8018434:	6801      	ldr	r1, [r0, #0]
 8018436:	f8bd 3038 	ldrh.w	r3, [sp, #56]	@ 0x38
 801843a:	e9cd 2208 	strd	r2, r2, [sp, #32]
 801843e:	220b      	movs	r2, #11
 8018440:	9207      	str	r2, [sp, #28]
 8018442:	f8b8 2000 	ldrh.w	r2, [r8]
 8018446:	9206      	str	r2, [sp, #24]
 8018448:	2201      	movs	r2, #1
 801844a:	e9cd 5204 	strd	r5, r2, [sp, #16]
 801844e:	f8bd 2034 	ldrh.w	r2, [sp, #52]	@ 0x34
 8018452:	9203      	str	r2, [sp, #12]
 8018454:	fa1f f28a 	uxth.w	r2, sl
 8018458:	9202      	str	r2, [sp, #8]
 801845a:	b2b6      	uxth	r6, r6
 801845c:	f8bd 203a 	ldrh.w	r2, [sp, #58]	@ 0x3a
 8018460:	9200      	str	r2, [sp, #0]
 8018462:	9601      	str	r6, [sp, #4]
 8018464:	6c0d      	ldr	r5, [r1, #64]	@ 0x40
 8018466:	463a      	mov	r2, r7
 8018468:	4621      	mov	r1, r4
 801846a:	47a8      	blx	r5
 801846c:	b011      	add	sp, #68	@ 0x44
 801846e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8018472:	6803      	ldr	r3, [r0, #0]
 8018474:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8018476:	4798      	blx	r3
 8018478:	f8b8 2000 	ldrh.w	r2, [r8]
 801847c:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	@ 0x3a
 8018480:	f9bd 1038 	ldrsh.w	r1, [sp, #56]	@ 0x38
 8018484:	2dff      	cmp	r5, #255	@ 0xff
 8018486:	fb02 1303 	mla	r3, r2, r3, r1
 801848a:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801848e:	ea4f 0946 	mov.w	r9, r6, lsl #1
 8018492:	fb0a fa02 	mul.w	sl, sl, r2
 8018496:	d062      	beq.n	801855e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1aa>
 8018498:	ea6f 0c05 	mvn.w	ip, r5
 801849c:	eb00 034a 	add.w	r3, r0, sl, lsl #1
 80184a0:	930a      	str	r3, [sp, #40]	@ 0x28
 80184a2:	b2ad      	uxth	r5, r5
 80184a4:	fa5f fc8c 	uxtb.w	ip, ip
 80184a8:	f8cd 802c 	str.w	r8, [sp, #44]	@ 0x2c
 80184ac:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 80184ae:	4298      	cmp	r0, r3
 80184b0:	f080 8085 	bcs.w	80185be <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x20a>
 80184b4:	eb00 0b09 	add.w	fp, r0, r9
 80184b8:	4558      	cmp	r0, fp
 80184ba:	d246      	bcs.n	801854a <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x196>
 80184bc:	f814 eb01 	ldrb.w	lr, [r4], #1
 80184c0:	2303      	movs	r3, #3
 80184c2:	2204      	movs	r2, #4
 80184c4:	fb13 2e0e 	smlabb	lr, r3, lr, r2
 80184c8:	eb07 0a0e 	add.w	sl, r7, lr
 80184cc:	8803      	ldrh	r3, [r0, #0]
 80184ce:	f89a 8002 	ldrb.w	r8, [sl, #2]
 80184d2:	f817 e00e 	ldrb.w	lr, [r7, lr]
 80184d6:	1219      	asrs	r1, r3, #8
 80184d8:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 80184dc:	fb18 f805 	smulbb	r8, r8, r5
 80184e0:	ea41 1151 	orr.w	r1, r1, r1, lsr #5
 80184e4:	10da      	asrs	r2, r3, #3
 80184e6:	fb01 810c 	mla	r1, r1, ip, r8
 80184ea:	00db      	lsls	r3, r3, #3
 80184ec:	f89a 8001 	ldrb.w	r8, [sl, #1]
 80184f0:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 80184f4:	b2db      	uxtb	r3, r3
 80184f6:	fb18 f805 	smulbb	r8, r8, r5
 80184fa:	fb1e fe05 	smulbb	lr, lr, r5
 80184fe:	ea42 1292 	orr.w	r2, r2, r2, lsr #6
 8018502:	ea43 1353 	orr.w	r3, r3, r3, lsr #5
 8018506:	b289      	uxth	r1, r1
 8018508:	fb02 820c 	mla	r2, r2, ip, r8
 801850c:	fb03 e30c 	mla	r3, r3, ip, lr
 8018510:	b292      	uxth	r2, r2
 8018512:	b29b      	uxth	r3, r3
 8018514:	f101 0801 	add.w	r8, r1, #1
 8018518:	eb08 2111 	add.w	r1, r8, r1, lsr #8
 801851c:	f103 0e01 	add.w	lr, r3, #1
 8018520:	f102 0801 	add.w	r8, r2, #1
 8018524:	eb0e 2e13 	add.w	lr, lr, r3, lsr #8
 8018528:	eb08 2812 	add.w	r8, r8, r2, lsr #8
 801852c:	f401 4178 	and.w	r1, r1, #63488	@ 0xf800
 8018530:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 8018534:	ea4f 1858 	mov.w	r8, r8, lsr #5
 8018538:	ea4e 0101 	orr.w	r1, lr, r1
 801853c:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
 8018540:	ea41 0108 	orr.w	r1, r1, r8
 8018544:	f820 1b02 	strh.w	r1, [r0], #2
 8018548:	e7b6      	b.n	80184b8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x104>
 801854a:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801854c:	881b      	ldrh	r3, [r3, #0]
 801854e:	1b9b      	subs	r3, r3, r6
 8018550:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8018554:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	@ 0x34
 8018558:	1b9b      	subs	r3, r3, r6
 801855a:	441c      	add	r4, r3
 801855c:	e7a6      	b.n	80184ac <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xf8>
 801855e:	491b      	ldr	r1, [pc, #108]	@ (80185cc <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x218>)
 8018560:	eb00 0a4a 	add.w	sl, r0, sl, lsl #1
 8018564:	2203      	movs	r2, #3
 8018566:	2504      	movs	r5, #4
 8018568:	4550      	cmp	r0, sl
 801856a:	d228      	bcs.n	80185be <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x20a>
 801856c:	eb00 0c09 	add.w	ip, r0, r9
 8018570:	4560      	cmp	r0, ip
 8018572:	4623      	mov	r3, r4
 8018574:	d219      	bcs.n	80185aa <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1f6>
 8018576:	f893 e000 	ldrb.w	lr, [r3]
 801857a:	fb12 5e0e 	smlabb	lr, r2, lr, r5
 801857e:	eb07 0b0e 	add.w	fp, r7, lr
 8018582:	f817 e00e 	ldrb.w	lr, [r7, lr]
 8018586:	f89b 3002 	ldrb.w	r3, [fp, #2]
 801858a:	f89b b001 	ldrb.w	fp, [fp, #1]
 801858e:	ea4f 0bcb 	mov.w	fp, fp, lsl #3
 8018592:	ea01 2303 	and.w	r3, r1, r3, lsl #8
 8018596:	f40b 6bfc 	and.w	fp, fp, #2016	@ 0x7e0
 801859a:	ea43 030b 	orr.w	r3, r3, fp
 801859e:	ea43 03de 	orr.w	r3, r3, lr, lsr #3
 80185a2:	3401      	adds	r4, #1
 80185a4:	f820 3b02 	strh.w	r3, [r0], #2
 80185a8:	e7e2      	b.n	8018570 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1bc>
 80185aa:	f8b8 3000 	ldrh.w	r3, [r8]
 80185ae:	1b9b      	subs	r3, r3, r6
 80185b0:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 80185b4:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	@ 0x34
 80185b8:	1b9b      	subs	r3, r3, r6
 80185ba:	441c      	add	r4, r3
 80185bc:	e7d4      	b.n	8018568 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1b4>
 80185be:	4b04      	ldr	r3, [pc, #16]	@ (80185d0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21c>)
 80185c0:	6818      	ldr	r0, [r3, #0]
 80185c2:	6803      	ldr	r3, [r0, #0]
 80185c4:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80185c6:	4798      	blx	r3
 80185c8:	e750      	b.n	801846c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xb8>
 80185ca:	bf00      	nop
 80185cc:	fffff800 	.word	0xfffff800
 80185d0:	20013f2c 	.word	0x20013f2c
 80185d4:	20013f24 	.word	0x20013f24

080185d8 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>:
 80185d8:	b4f0      	push	{r4, r5, r6, r7}
 80185da:	460c      	mov	r4, r1
 80185dc:	4611      	mov	r1, r2
 80185de:	f89d 5014 	ldrb.w	r5, [sp, #20]
 80185e2:	780f      	ldrb	r7, [r1, #0]
 80185e4:	784e      	ldrb	r6, [r1, #1]
 80185e6:	2f01      	cmp	r7, #1
 80185e8:	461a      	mov	r2, r3
 80185ea:	9b04      	ldr	r3, [sp, #16]
 80185ec:	d038      	beq.n	8018660 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x88>
 80185ee:	d31f      	bcc.n	8018630 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x58>
 80185f0:	2f02      	cmp	r7, #2
 80185f2:	d14d      	bne.n	8018690 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
 80185f4:	2e03      	cmp	r6, #3
 80185f6:	d84b      	bhi.n	8018690 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
 80185f8:	e8df f006 	tbb	[pc, r6]
 80185fc:	17140702 	.word	0x17140702
 8018600:	9504      	str	r5, [sp, #16]
 8018602:	4620      	mov	r0, r4
 8018604:	bcf0      	pop	{r4, r5, r6, r7}
 8018606:	f7ff be09 	b.w	801821c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>
 801860a:	6fc0      	ldr	r0, [r0, #124]	@ 0x7c
 801860c:	2800      	cmp	r0, #0
 801860e:	d03f      	beq.n	8018690 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
 8018610:	6806      	ldr	r6, [r0, #0]
 8018612:	e9cd 3504 	strd	r3, r5, [sp, #16]
 8018616:	68b5      	ldr	r5, [r6, #8]
 8018618:	4613      	mov	r3, r2
 801861a:	46ac      	mov	ip, r5
 801861c:	460a      	mov	r2, r1
 801861e:	4621      	mov	r1, r4
 8018620:	bcf0      	pop	{r4, r5, r6, r7}
 8018622:	4760      	bx	ip
 8018624:	f8d0 0080 	ldr.w	r0, [r0, #128]	@ 0x80
 8018628:	e7f0      	b.n	801860c <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x34>
 801862a:	f8d0 0084 	ldr.w	r0, [r0, #132]	@ 0x84
 801862e:	e7ed      	b.n	801860c <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x34>
 8018630:	2e03      	cmp	r6, #3
 8018632:	d82d      	bhi.n	8018690 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
 8018634:	e8df f006 	tbb	[pc, r6]
 8018638:	110e0702 	.word	0x110e0702
 801863c:	9504      	str	r5, [sp, #16]
 801863e:	4620      	mov	r0, r4
 8018640:	bcf0      	pop	{r4, r5, r6, r7}
 8018642:	f7ff bd05 	b.w	8018050 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>
 8018646:	6fc0      	ldr	r0, [r0, #124]	@ 0x7c
 8018648:	b310      	cbz	r0, 8018690 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
 801864a:	6806      	ldr	r6, [r0, #0]
 801864c:	e9cd 3504 	strd	r3, r5, [sp, #16]
 8018650:	68f5      	ldr	r5, [r6, #12]
 8018652:	e7e1      	b.n	8018618 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x40>
 8018654:	f8d0 0080 	ldr.w	r0, [r0, #128]	@ 0x80
 8018658:	e7f6      	b.n	8018648 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x70>
 801865a:	f8d0 0084 	ldr.w	r0, [r0, #132]	@ 0x84
 801865e:	e7f3      	b.n	8018648 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x70>
 8018660:	2e03      	cmp	r6, #3
 8018662:	d815      	bhi.n	8018690 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
 8018664:	e8df f006 	tbb	[pc, r6]
 8018668:	110e0702 	.word	0x110e0702
 801866c:	9504      	str	r5, [sp, #16]
 801866e:	4620      	mov	r0, r4
 8018670:	bcf0      	pop	{r4, r5, r6, r7}
 8018672:	f7ff be9f 	b.w	80183b4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>
 8018676:	6fc0      	ldr	r0, [r0, #124]	@ 0x7c
 8018678:	b150      	cbz	r0, 8018690 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
 801867a:	6806      	ldr	r6, [r0, #0]
 801867c:	e9cd 3504 	strd	r3, r5, [sp, #16]
 8018680:	6935      	ldr	r5, [r6, #16]
 8018682:	e7c9      	b.n	8018618 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x40>
 8018684:	f8d0 0080 	ldr.w	r0, [r0, #128]	@ 0x80
 8018688:	e7f6      	b.n	8018678 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xa0>
 801868a:	f8d0 0084 	ldr.w	r0, [r0, #132]	@ 0x84
 801868e:	e7f3      	b.n	8018678 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xa0>
 8018690:	bcf0      	pop	{r4, r5, r6, r7}
 8018692:	4770      	bx	lr

08018694 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>:
 8018694:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018698:	4604      	mov	r4, r0
 801869a:	b087      	sub	sp, #28
 801869c:	6810      	ldr	r0, [r2, #0]
 801869e:	f89d a040 	ldrb.w	sl, [sp, #64]	@ 0x40
 80186a2:	f8df 9238 	ldr.w	r9, [pc, #568]	@ 80188dc <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x248>
 80186a6:	460e      	mov	r6, r1
 80186a8:	6851      	ldr	r1, [r2, #4]
 80186aa:	ad02      	add	r5, sp, #8
 80186ac:	c503      	stmia	r5!, {r0, r1}
 80186ae:	6818      	ldr	r0, [r3, #0]
 80186b0:	6859      	ldr	r1, [r3, #4]
 80186b2:	ad04      	add	r5, sp, #16
 80186b4:	4617      	mov	r7, r2
 80186b6:	c503      	stmia	r5!, {r0, r1}
 80186b8:	a802      	add	r0, sp, #8
 80186ba:	f7f6 fd8f 	bl	800f1dc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80186be:	4639      	mov	r1, r7
 80186c0:	a804      	add	r0, sp, #16
 80186c2:	f7f6 fdb3 	bl	800f22c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80186c6:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 80186ca:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 80186ce:	f8bd 100c 	ldrh.w	r1, [sp, #12]
 80186d2:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
 80186d6:	f9bd 5016 	ldrsh.w	r5, [sp, #22]
 80186da:	fb11 2103 	smlabb	r1, r1, r3, r2
 80186de:	eb04 0441 	add.w	r4, r4, r1, lsl #1
 80186e2:	440e      	add	r6, r1
 80186e4:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 80186e8:	440a      	add	r2, r1
 80186ea:	f8ad 2010 	strh.w	r2, [sp, #16]
 80186ee:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 80186f2:	4413      	add	r3, r2
 80186f4:	f8ad 3012 	strh.w	r3, [sp, #18]
 80186f8:	4b77      	ldr	r3, [pc, #476]	@ (80188d8 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
 80186fa:	6818      	ldr	r0, [r3, #0]
 80186fc:	6803      	ldr	r3, [r0, #0]
 80186fe:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8018700:	4798      	blx	r3
 8018702:	f8b9 b000 	ldrh.w	fp, [r9]
 8018706:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801870a:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 801870e:	fb0b 2303 	mla	r3, fp, r3, r2
 8018712:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8018716:	f1ba 0fff 	cmp.w	sl, #255	@ 0xff
 801871a:	ea4f 0348 	mov.w	r3, r8, lsl #1
 801871e:	fb05 f50b 	mul.w	r5, r5, fp
 8018722:	9300      	str	r3, [sp, #0]
 8018724:	d069      	beq.n	80187fa <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x166>
 8018726:	eb00 0b45 	add.w	fp, r0, r5, lsl #1
 801872a:	4558      	cmp	r0, fp
 801872c:	f080 80cc 	bcs.w	80188c8 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
 8018730:	9b00      	ldr	r3, [sp, #0]
 8018732:	18c3      	adds	r3, r0, r3
 8018734:	9301      	str	r3, [sp, #4]
 8018736:	4631      	mov	r1, r6
 8018738:	9b01      	ldr	r3, [sp, #4]
 801873a:	4298      	cmp	r0, r3
 801873c:	d24f      	bcs.n	80187de <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x14a>
 801873e:	f811 2b01 	ldrb.w	r2, [r1], #1
 8018742:	2a00      	cmp	r2, #0
 8018744:	d048      	beq.n	80187d8 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x144>
 8018746:	fb0a f202 	mul.w	r2, sl, r2
 801874a:	1c53      	adds	r3, r2, #1
 801874c:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8018750:	121b      	asrs	r3, r3, #8
 8018752:	d041      	beq.n	80187d8 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x144>
 8018754:	8802      	ldrh	r2, [r0, #0]
 8018756:	f8b4 c000 	ldrh.w	ip, [r4]
 801875a:	b29e      	uxth	r6, r3
 801875c:	1215      	asrs	r5, r2, #8
 801875e:	43db      	mvns	r3, r3
 8018760:	b2db      	uxtb	r3, r3
 8018762:	ea4f 272c 	mov.w	r7, ip, asr #8
 8018766:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 801876a:	fb15 f503 	smulbb	r5, r5, r3
 801876e:	ea4f 0ee2 	mov.w	lr, r2, asr #3
 8018772:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 8018776:	00d2      	lsls	r2, r2, #3
 8018778:	fb07 5706 	mla	r7, r7, r6, r5
 801877c:	f00e 0efc 	and.w	lr, lr, #252	@ 0xfc
 8018780:	ea4f 05ec 	mov.w	r5, ip, asr #3
 8018784:	b2d2      	uxtb	r2, r2
 8018786:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801878a:	b2bf      	uxth	r7, r7
 801878c:	fb1e fe03 	smulbb	lr, lr, r3
 8018790:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 8018794:	fa5f fc8c 	uxtb.w	ip, ip
 8018798:	fb12 f203 	smulbb	r2, r2, r3
 801879c:	fb05 e506 	mla	r5, r5, r6, lr
 80187a0:	fb0c 2c06 	mla	ip, ip, r6, r2
 80187a4:	f107 0e01 	add.w	lr, r7, #1
 80187a8:	fa1f fc8c 	uxth.w	ip, ip
 80187ac:	eb0e 2717 	add.w	r7, lr, r7, lsr #8
 80187b0:	f407 4e78 	and.w	lr, r7, #63488	@ 0xf800
 80187b4:	f10c 0701 	add.w	r7, ip, #1
 80187b8:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 80187bc:	b2ad      	uxth	r5, r5
 80187be:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 80187c2:	ea47 070e 	orr.w	r7, r7, lr
 80187c6:	f105 0e01 	add.w	lr, r5, #1
 80187ca:	eb0e 2515 	add.w	r5, lr, r5, lsr #8
 80187ce:	096d      	lsrs	r5, r5, #5
 80187d0:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 80187d4:	432f      	orrs	r7, r5
 80187d6:	8007      	strh	r7, [r0, #0]
 80187d8:	3002      	adds	r0, #2
 80187da:	3402      	adds	r4, #2
 80187dc:	e7ac      	b.n	8018738 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0xa4>
 80187de:	f8b9 3000 	ldrh.w	r3, [r9]
 80187e2:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
 80187e6:	eba3 0308 	sub.w	r3, r3, r8
 80187ea:	eba6 0608 	sub.w	r6, r6, r8
 80187ee:	eb04 0446 	add.w	r4, r4, r6, lsl #1
 80187f2:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 80187f6:	440e      	add	r6, r1
 80187f8:	e797      	b.n	801872a <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x96>
 80187fa:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 80187fe:	42a8      	cmp	r0, r5
 8018800:	d262      	bcs.n	80188c8 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
 8018802:	9b00      	ldr	r3, [sp, #0]
 8018804:	4631      	mov	r1, r6
 8018806:	eb00 0b03 	add.w	fp, r0, r3
 801880a:	4558      	cmp	r0, fp
 801880c:	d24e      	bcs.n	80188ac <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x218>
 801880e:	f811 3b01 	ldrb.w	r3, [r1], #1
 8018812:	b12b      	cbz	r3, 8018820 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18c>
 8018814:	2bff      	cmp	r3, #255	@ 0xff
 8018816:	f8b4 e000 	ldrh.w	lr, [r4]
 801881a:	d104      	bne.n	8018826 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x192>
 801881c:	f8a0 e000 	strh.w	lr, [r0]
 8018820:	3002      	adds	r0, #2
 8018822:	3402      	adds	r4, #2
 8018824:	e7f1      	b.n	801880a <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x176>
 8018826:	8802      	ldrh	r2, [r0, #0]
 8018828:	b29f      	uxth	r7, r3
 801882a:	1216      	asrs	r6, r2, #8
 801882c:	43db      	mvns	r3, r3
 801882e:	b2db      	uxtb	r3, r3
 8018830:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 8018834:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 8018838:	fb16 f603 	smulbb	r6, r6, r3
 801883c:	ea4f 0ae2 	mov.w	sl, r2, asr #3
 8018840:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 8018844:	00d2      	lsls	r2, r2, #3
 8018846:	fb0c 6c07 	mla	ip, ip, r7, r6
 801884a:	b2d2      	uxtb	r2, r2
 801884c:	ea4f 06ee 	mov.w	r6, lr, asr #3
 8018850:	f00a 0afc 	and.w	sl, sl, #252	@ 0xfc
 8018854:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8018858:	fb1a fa03 	smulbb	sl, sl, r3
 801885c:	fa1f fc8c 	uxth.w	ip, ip
 8018860:	fb12 f303 	smulbb	r3, r2, r3
 8018864:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 8018868:	fa5f fe8e 	uxtb.w	lr, lr
 801886c:	fb06 a607 	mla	r6, r6, r7, sl
 8018870:	f10c 0201 	add.w	r2, ip, #1
 8018874:	fb0e 3307 	mla	r3, lr, r7, r3
 8018878:	b2b6      	uxth	r6, r6
 801887a:	b29b      	uxth	r3, r3
 801887c:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 8018880:	f40c 4278 	and.w	r2, ip, #63488	@ 0xf800
 8018884:	f106 0a01 	add.w	sl, r6, #1
 8018888:	f103 0c01 	add.w	ip, r3, #1
 801888c:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 8018890:	eb0a 2616 	add.w	r6, sl, r6, lsr #8
 8018894:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 8018898:	0976      	lsrs	r6, r6, #5
 801889a:	ea4c 0c02 	orr.w	ip, ip, r2
 801889e:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
 80188a2:	ea4c 0c06 	orr.w	ip, ip, r6
 80188a6:	f8a0 c000 	strh.w	ip, [r0]
 80188aa:	e7b9      	b.n	8018820 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18c>
 80188ac:	f8b9 3000 	ldrh.w	r3, [r9]
 80188b0:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
 80188b4:	eba3 0308 	sub.w	r3, r3, r8
 80188b8:	eba6 0608 	sub.w	r6, r6, r8
 80188bc:	eb04 0446 	add.w	r4, r4, r6, lsl #1
 80188c0:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 80188c4:	440e      	add	r6, r1
 80188c6:	e79a      	b.n	80187fe <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x16a>
 80188c8:	4b03      	ldr	r3, [pc, #12]	@ (80188d8 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
 80188ca:	6818      	ldr	r0, [r3, #0]
 80188cc:	6803      	ldr	r3, [r0, #0]
 80188ce:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80188d0:	4798      	blx	r3
 80188d2:	b007      	add	sp, #28
 80188d4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80188d8:	20013f2c 	.word	0x20013f2c
 80188dc:	20013f24 	.word	0x20013f24

080188e0 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb>:
 80188e0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80188e4:	b089      	sub	sp, #36	@ 0x24
 80188e6:	4607      	mov	r7, r0
 80188e8:	f89d 604c 	ldrb.w	r6, [sp, #76]	@ 0x4c
 80188ec:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 80188ee:	4688      	mov	r8, r1
 80188f0:	4692      	mov	sl, r2
 80188f2:	4699      	mov	r9, r3
 80188f4:	2e00      	cmp	r6, #0
 80188f6:	d048      	beq.n	801898a <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 80188f8:	4608      	mov	r0, r1
 80188fa:	f7fa f81d 	bl	8012938 <_ZNK8touchgfx6Bitmap8getWidthEv>
 80188fe:	4605      	mov	r5, r0
 8018900:	4640      	mov	r0, r8
 8018902:	f7fa f84d 	bl	80129a0 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8018906:	f8ad 000e 	strh.w	r0, [sp, #14]
 801890a:	4640      	mov	r0, r8
 801890c:	f8ad a008 	strh.w	sl, [sp, #8]
 8018910:	f8ad 500c 	strh.w	r5, [sp, #12]
 8018914:	f8ad 900a 	strh.w	r9, [sp, #10]
 8018918:	f7fa f900 	bl	8012b1c <_ZNK8touchgfx6Bitmap7getDataEv>
 801891c:	4605      	mov	r5, r0
 801891e:	4640      	mov	r0, r8
 8018920:	f7fa f92c 	bl	8012b7c <_ZNK8touchgfx6Bitmap12getExtraDataEv>
 8018924:	4682      	mov	sl, r0
 8018926:	4640      	mov	r0, r8
 8018928:	f7fa f97c 	bl	8012c24 <_ZNK8touchgfx6Bitmap9getFormatEv>
 801892c:	2810      	cmp	r0, #16
 801892e:	d82c      	bhi.n	801898a <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 8018930:	e8df f010 	tbh	[pc, r0, lsl #1]
 8018934:	00ba00ca 	.word	0x00ba00ca
 8018938:	002b0011 	.word	0x002b0011
 801893c:	002b002b 	.word	0x002b002b
 8018940:	002b002b 	.word	0x002b002b
 8018944:	002b002b 	.word	0x002b002b
 8018948:	00c1002b 	.word	0x00c1002b
 801894c:	002b002b 	.word	0x002b002b
 8018950:	002b0180 	.word	0x002b0180
 8018954:	0173      	.short	0x0173
 8018956:	4bbc      	ldr	r3, [pc, #752]	@ (8018c48 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x368>)
 8018958:	6818      	ldr	r0, [r3, #0]
 801895a:	6803      	ldr	r3, [r0, #0]
 801895c:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 801895e:	4798      	blx	r3
 8018960:	2eff      	cmp	r6, #255	@ 0xff
 8018962:	d101      	bne.n	8018968 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x88>
 8018964:	0683      	lsls	r3, r0, #26
 8018966:	d506      	bpl.n	8018976 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x96>
 8018968:	4633      	mov	r3, r6
 801896a:	4622      	mov	r2, r4
 801896c:	a902      	add	r1, sp, #8
 801896e:	4628      	mov	r0, r5
 8018970:	f7ff f8fc 	bl	8017b6c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 8018974:	e009      	b.n	801898a <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 8018976:	4640      	mov	r0, r8
 8018978:	f7fa f898 	bl	8012aac <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 801897c:	b940      	cbnz	r0, 8018990 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xb0>
 801897e:	4623      	mov	r3, r4
 8018980:	aa02      	add	r2, sp, #8
 8018982:	4629      	mov	r1, r5
 8018984:	4638      	mov	r0, r7
 8018986:	f7ff f9d7 	bl	8017d38 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>
 801898a:	b009      	add	sp, #36	@ 0x24
 801898c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8018990:	f10d 0918 	add.w	r9, sp, #24
 8018994:	4641      	mov	r1, r8
 8018996:	4648      	mov	r0, r9
 8018998:	f7fa f836 	bl	8012a08 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 801899c:	e899 0003 	ldmia.w	r9, {r0, r1}
 80189a0:	f10d 0810 	add.w	r8, sp, #16
 80189a4:	e888 0003 	stmia.w	r8, {r0, r1}
 80189a8:	4640      	mov	r0, r8
 80189aa:	4621      	mov	r1, r4
 80189ac:	f7f1 fc9e 	bl	800a2ec <_ZN8touchgfx4RectaNERKS0_>
 80189b0:	4640      	mov	r0, r8
 80189b2:	f7f1 fcde 	bl	800a372 <_ZNK8touchgfx4Rect7isEmptyEv>
 80189b6:	2800      	cmp	r0, #0
 80189b8:	d1d6      	bne.n	8018968 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x88>
 80189ba:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 80189be:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 80189c2:	4293      	cmp	r3, r2
 80189c4:	dd12      	ble.n	80189ec <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x10c>
 80189c6:	1a9b      	subs	r3, r3, r2
 80189c8:	f9b4 0000 	ldrsh.w	r0, [r4]
 80189cc:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 80189d0:	f8ad 0018 	strh.w	r0, [sp, #24]
 80189d4:	f8ad 201a 	strh.w	r2, [sp, #26]
 80189d8:	f8ad 101c 	strh.w	r1, [sp, #28]
 80189dc:	f8ad 301e 	strh.w	r3, [sp, #30]
 80189e0:	464a      	mov	r2, r9
 80189e2:	4633      	mov	r3, r6
 80189e4:	a902      	add	r1, sp, #8
 80189e6:	4628      	mov	r0, r5
 80189e8:	f7ff f8c0 	bl	8017b6c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 80189ec:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
 80189f0:	f9b4 2000 	ldrsh.w	r2, [r4]
 80189f4:	4293      	cmp	r3, r2
 80189f6:	dd12      	ble.n	8018a1e <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x13e>
 80189f8:	1a9b      	subs	r3, r3, r2
 80189fa:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
 80189fe:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
 8018a02:	f8ad 2018 	strh.w	r2, [sp, #24]
 8018a06:	f8ad 001a 	strh.w	r0, [sp, #26]
 8018a0a:	f8ad 301c 	strh.w	r3, [sp, #28]
 8018a0e:	f8ad 101e 	strh.w	r1, [sp, #30]
 8018a12:	23ff      	movs	r3, #255	@ 0xff
 8018a14:	464a      	mov	r2, r9
 8018a16:	a902      	add	r1, sp, #8
 8018a18:	4628      	mov	r0, r5
 8018a1a:	f7ff f8a7 	bl	8017b6c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 8018a1e:	4643      	mov	r3, r8
 8018a20:	aa02      	add	r2, sp, #8
 8018a22:	4629      	mov	r1, r5
 8018a24:	4638      	mov	r0, r7
 8018a26:	f7ff f987 	bl	8017d38 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>
 8018a2a:	88a2      	ldrh	r2, [r4, #4]
 8018a2c:	8823      	ldrh	r3, [r4, #0]
 8018a2e:	f8bd 1014 	ldrh.w	r1, [sp, #20]
 8018a32:	4413      	add	r3, r2
 8018a34:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 8018a38:	440a      	add	r2, r1
 8018a3a:	b29b      	uxth	r3, r3
 8018a3c:	b292      	uxth	r2, r2
 8018a3e:	b211      	sxth	r1, r2
 8018a40:	b218      	sxth	r0, r3
 8018a42:	4288      	cmp	r0, r1
 8018a44:	dd12      	ble.n	8018a6c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x18c>
 8018a46:	1a9b      	subs	r3, r3, r2
 8018a48:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
 8018a4c:	f9bd 6012 	ldrsh.w	r6, [sp, #18]
 8018a50:	f8ad 1018 	strh.w	r1, [sp, #24]
 8018a54:	f8ad 301c 	strh.w	r3, [sp, #28]
 8018a58:	f8ad 001e 	strh.w	r0, [sp, #30]
 8018a5c:	23ff      	movs	r3, #255	@ 0xff
 8018a5e:	464a      	mov	r2, r9
 8018a60:	a902      	add	r1, sp, #8
 8018a62:	4628      	mov	r0, r5
 8018a64:	f8ad 601a 	strh.w	r6, [sp, #26]
 8018a68:	f7ff f880 	bl	8017b6c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 8018a6c:	88e2      	ldrh	r2, [r4, #6]
 8018a6e:	8863      	ldrh	r3, [r4, #2]
 8018a70:	f8bd 1016 	ldrh.w	r1, [sp, #22]
 8018a74:	4413      	add	r3, r2
 8018a76:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 8018a7a:	440a      	add	r2, r1
 8018a7c:	b29b      	uxth	r3, r3
 8018a7e:	b292      	uxth	r2, r2
 8018a80:	b211      	sxth	r1, r2
 8018a82:	b218      	sxth	r0, r3
 8018a84:	4288      	cmp	r0, r1
 8018a86:	dd80      	ble.n	801898a <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 8018a88:	1a9b      	subs	r3, r3, r2
 8018a8a:	f9b4 6000 	ldrsh.w	r6, [r4]
 8018a8e:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8018a92:	f8ad 301e 	strh.w	r3, [sp, #30]
 8018a96:	f8ad 6018 	strh.w	r6, [sp, #24]
 8018a9a:	f8ad 101a 	strh.w	r1, [sp, #26]
 8018a9e:	f8ad 001c 	strh.w	r0, [sp, #28]
 8018aa2:	23ff      	movs	r3, #255	@ 0xff
 8018aa4:	464a      	mov	r2, r9
 8018aa6:	e761      	b.n	801896c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x8c>
 8018aa8:	4633      	mov	r3, r6
 8018aaa:	4622      	mov	r2, r4
 8018aac:	a902      	add	r1, sp, #8
 8018aae:	4628      	mov	r0, r5
 8018ab0:	f7ff f9b2 	bl	8017e18 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>
 8018ab4:	e769      	b.n	801898a <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 8018ab6:	e9cd 4600 	strd	r4, r6, [sp]
 8018aba:	ab02      	add	r3, sp, #8
 8018abc:	4652      	mov	r2, sl
 8018abe:	4629      	mov	r1, r5
 8018ac0:	4638      	mov	r0, r7
 8018ac2:	f7ff fd89 	bl	80185d8 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>
 8018ac6:	e760      	b.n	801898a <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 8018ac8:	4640      	mov	r0, r8
 8018aca:	f7f9 ffef 	bl	8012aac <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 8018ace:	b948      	cbnz	r0, 8018ae4 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x204>
 8018ad0:	683b      	ldr	r3, [r7, #0]
 8018ad2:	e9cd 6000 	strd	r6, r0, [sp]
 8018ad6:	aa02      	add	r2, sp, #8
 8018ad8:	68de      	ldr	r6, [r3, #12]
 8018ada:	4629      	mov	r1, r5
 8018adc:	4623      	mov	r3, r4
 8018ade:	4638      	mov	r0, r7
 8018ae0:	47b0      	blx	r6
 8018ae2:	e752      	b.n	801898a <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 8018ae4:	f10d 0918 	add.w	r9, sp, #24
 8018ae8:	4641      	mov	r1, r8
 8018aea:	4648      	mov	r0, r9
 8018aec:	f7f9 ff8c 	bl	8012a08 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 8018af0:	e899 0003 	ldmia.w	r9, {r0, r1}
 8018af4:	f10d 0810 	add.w	r8, sp, #16
 8018af8:	e888 0003 	stmia.w	r8, {r0, r1}
 8018afc:	4640      	mov	r0, r8
 8018afe:	4621      	mov	r1, r4
 8018b00:	f7f1 fbf4 	bl	800a2ec <_ZN8touchgfx4RectaNERKS0_>
 8018b04:	4640      	mov	r0, r8
 8018b06:	f7f1 fc34 	bl	800a372 <_ZNK8touchgfx4Rect7isEmptyEv>
 8018b0a:	b138      	cbz	r0, 8018b1c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x23c>
 8018b0c:	9600      	str	r6, [sp, #0]
 8018b0e:	4623      	mov	r3, r4
 8018b10:	aa02      	add	r2, sp, #8
 8018b12:	4651      	mov	r1, sl
 8018b14:	4628      	mov	r0, r5
 8018b16:	f7ff fdbd 	bl	8018694 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 8018b1a:	e736      	b.n	801898a <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 8018b1c:	683b      	ldr	r3, [r7, #0]
 8018b1e:	e9cd 6000 	strd	r6, r0, [sp]
 8018b22:	aa02      	add	r2, sp, #8
 8018b24:	f8d3 b00c 	ldr.w	fp, [r3, #12]
 8018b28:	4629      	mov	r1, r5
 8018b2a:	4643      	mov	r3, r8
 8018b2c:	4638      	mov	r0, r7
 8018b2e:	47d8      	blx	fp
 8018b30:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 8018b34:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 8018b38:	4293      	cmp	r3, r2
 8018b3a:	dd13      	ble.n	8018b64 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x284>
 8018b3c:	f9b4 0000 	ldrsh.w	r0, [r4]
 8018b40:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8018b44:	f8ad 0018 	strh.w	r0, [sp, #24]
 8018b48:	1a9b      	subs	r3, r3, r2
 8018b4a:	f8ad 201a 	strh.w	r2, [sp, #26]
 8018b4e:	f8ad 101c 	strh.w	r1, [sp, #28]
 8018b52:	f8ad 301e 	strh.w	r3, [sp, #30]
 8018b56:	9600      	str	r6, [sp, #0]
 8018b58:	464b      	mov	r3, r9
 8018b5a:	aa02      	add	r2, sp, #8
 8018b5c:	4651      	mov	r1, sl
 8018b5e:	4628      	mov	r0, r5
 8018b60:	f7ff fd98 	bl	8018694 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 8018b64:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
 8018b68:	f9b4 2000 	ldrsh.w	r2, [r4]
 8018b6c:	4293      	cmp	r3, r2
 8018b6e:	dd13      	ble.n	8018b98 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x2b8>
 8018b70:	1a9b      	subs	r3, r3, r2
 8018b72:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
 8018b76:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
 8018b7a:	f8ad 2018 	strh.w	r2, [sp, #24]
 8018b7e:	f8ad 001a 	strh.w	r0, [sp, #26]
 8018b82:	f8ad 301c 	strh.w	r3, [sp, #28]
 8018b86:	f8ad 101e 	strh.w	r1, [sp, #30]
 8018b8a:	9600      	str	r6, [sp, #0]
 8018b8c:	464b      	mov	r3, r9
 8018b8e:	aa02      	add	r2, sp, #8
 8018b90:	4651      	mov	r1, sl
 8018b92:	4628      	mov	r0, r5
 8018b94:	f7ff fd7e 	bl	8018694 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 8018b98:	88a2      	ldrh	r2, [r4, #4]
 8018b9a:	8823      	ldrh	r3, [r4, #0]
 8018b9c:	f8bd 1014 	ldrh.w	r1, [sp, #20]
 8018ba0:	4413      	add	r3, r2
 8018ba2:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 8018ba6:	440a      	add	r2, r1
 8018ba8:	b29b      	uxth	r3, r3
 8018baa:	b292      	uxth	r2, r2
 8018bac:	b211      	sxth	r1, r2
 8018bae:	b218      	sxth	r0, r3
 8018bb0:	4288      	cmp	r0, r1
 8018bb2:	dd13      	ble.n	8018bdc <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x2fc>
 8018bb4:	1a9b      	subs	r3, r3, r2
 8018bb6:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
 8018bba:	f9bd 7012 	ldrsh.w	r7, [sp, #18]
 8018bbe:	f8ad 1018 	strh.w	r1, [sp, #24]
 8018bc2:	f8ad 301c 	strh.w	r3, [sp, #28]
 8018bc6:	f8ad 001e 	strh.w	r0, [sp, #30]
 8018bca:	9600      	str	r6, [sp, #0]
 8018bcc:	464b      	mov	r3, r9
 8018bce:	aa02      	add	r2, sp, #8
 8018bd0:	4651      	mov	r1, sl
 8018bd2:	4628      	mov	r0, r5
 8018bd4:	f8ad 701a 	strh.w	r7, [sp, #26]
 8018bd8:	f7ff fd5c 	bl	8018694 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 8018bdc:	88e2      	ldrh	r2, [r4, #6]
 8018bde:	8863      	ldrh	r3, [r4, #2]
 8018be0:	f8bd 1016 	ldrh.w	r1, [sp, #22]
 8018be4:	4413      	add	r3, r2
 8018be6:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 8018bea:	440a      	add	r2, r1
 8018bec:	b29b      	uxth	r3, r3
 8018bee:	b292      	uxth	r2, r2
 8018bf0:	b211      	sxth	r1, r2
 8018bf2:	b218      	sxth	r0, r3
 8018bf4:	4288      	cmp	r0, r1
 8018bf6:	f77f aec8 	ble.w	801898a <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 8018bfa:	f9b4 7000 	ldrsh.w	r7, [r4]
 8018bfe:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8018c02:	f8ad 7018 	strh.w	r7, [sp, #24]
 8018c06:	1a9b      	subs	r3, r3, r2
 8018c08:	f8ad 301e 	strh.w	r3, [sp, #30]
 8018c0c:	f8ad 101a 	strh.w	r1, [sp, #26]
 8018c10:	f8ad 001c 	strh.w	r0, [sp, #28]
 8018c14:	9600      	str	r6, [sp, #0]
 8018c16:	464b      	mov	r3, r9
 8018c18:	e77a      	b.n	8018b10 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x230>
 8018c1a:	f8d7 0088 	ldr.w	r0, [r7, #136]	@ 0x88
 8018c1e:	2800      	cmp	r0, #0
 8018c20:	f43f aeb3 	beq.w	801898a <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 8018c24:	6803      	ldr	r3, [r0, #0]
 8018c26:	9600      	str	r6, [sp, #0]
 8018c28:	68de      	ldr	r6, [r3, #12]
 8018c2a:	4623      	mov	r3, r4
 8018c2c:	aa02      	add	r2, sp, #8
 8018c2e:	4629      	mov	r1, r5
 8018c30:	47b0      	blx	r6
 8018c32:	e6aa      	b.n	801898a <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 8018c34:	f8d7 0088 	ldr.w	r0, [r7, #136]	@ 0x88
 8018c38:	2800      	cmp	r0, #0
 8018c3a:	f43f aea6 	beq.w	801898a <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 8018c3e:	6803      	ldr	r3, [r0, #0]
 8018c40:	9600      	str	r6, [sp, #0]
 8018c42:	689e      	ldr	r6, [r3, #8]
 8018c44:	e7f1      	b.n	8018c2a <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x34a>
 8018c46:	bf00      	nop
 8018c48:	20013f2c 	.word	0x20013f2c

08018c4c <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>:
 8018c4c:	b180      	cbz	r0, 8018c70 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x24>
 8018c4e:	2903      	cmp	r1, #3
 8018c50:	d81c      	bhi.n	8018c8c <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
 8018c52:	e8df f001 	tbb	[pc, r1]
 8018c56:	1d02      	.short	0x1d02
 8018c58:	1f08      	.short	0x1f08
 8018c5a:	4b10      	ldr	r3, [pc, #64]	@ (8018c9c <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
 8018c5c:	8818      	ldrh	r0, [r3, #0]
 8018c5e:	f3c0 000e 	ubfx	r0, r0, #0, #15
 8018c62:	4240      	negs	r0, r0
 8018c64:	4770      	bx	lr
 8018c66:	4b0d      	ldr	r3, [pc, #52]	@ (8018c9c <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
 8018c68:	8818      	ldrh	r0, [r3, #0]
 8018c6a:	f3c0 000e 	ubfx	r0, r0, #0, #15
 8018c6e:	4770      	bx	lr
 8018c70:	2903      	cmp	r1, #3
 8018c72:	d80b      	bhi.n	8018c8c <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
 8018c74:	a301      	add	r3, pc, #4	@ (adr r3, 8018c7c <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x30>)
 8018c76:	f853 f021 	ldr.w	pc, [r3, r1, lsl #2]
 8018c7a:	bf00      	nop
 8018c7c:	08018c91 	.word	0x08018c91
 8018c80:	08018c67 	.word	0x08018c67
 8018c84:	08018c95 	.word	0x08018c95
 8018c88:	08018c5b 	.word	0x08018c5b
 8018c8c:	2000      	movs	r0, #0
 8018c8e:	4770      	bx	lr
 8018c90:	2001      	movs	r0, #1
 8018c92:	4770      	bx	lr
 8018c94:	f04f 30ff 	mov.w	r0, #4294967295
 8018c98:	4770      	bx	lr
 8018c9a:	bf00      	nop
 8018c9c:	20013f24 	.word	0x20013f24

08018ca0 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>:
 8018ca0:	b180      	cbz	r0, 8018cc4 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x24>
 8018ca2:	2903      	cmp	r1, #3
 8018ca4:	d81c      	bhi.n	8018ce0 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x40>
 8018ca6:	e8df f001 	tbb	[pc, r1]
 8018caa:	021d      	.short	0x021d
 8018cac:	071f      	.short	0x071f
 8018cae:	4b10      	ldr	r3, [pc, #64]	@ (8018cf0 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
 8018cb0:	8818      	ldrh	r0, [r3, #0]
 8018cb2:	f3c0 000e 	ubfx	r0, r0, #0, #15
 8018cb6:	4770      	bx	lr
 8018cb8:	4b0d      	ldr	r3, [pc, #52]	@ (8018cf0 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
 8018cba:	8818      	ldrh	r0, [r3, #0]
 8018cbc:	f3c0 000e 	ubfx	r0, r0, #0, #15
 8018cc0:	4240      	negs	r0, r0
 8018cc2:	4770      	bx	lr
 8018cc4:	2903      	cmp	r1, #3
 8018cc6:	d80b      	bhi.n	8018ce0 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x40>
 8018cc8:	a301      	add	r3, pc, #4	@ (adr r3, 8018cd0 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x30>)
 8018cca:	f853 f021 	ldr.w	pc, [r3, r1, lsl #2]
 8018cce:	bf00      	nop
 8018cd0:	08018caf 	.word	0x08018caf
 8018cd4:	08018ce9 	.word	0x08018ce9
 8018cd8:	08018cb9 	.word	0x08018cb9
 8018cdc:	08018ce5 	.word	0x08018ce5
 8018ce0:	2000      	movs	r0, #0
 8018ce2:	4770      	bx	lr
 8018ce4:	2001      	movs	r0, #1
 8018ce6:	4770      	bx	lr
 8018ce8:	f04f 30ff 	mov.w	r0, #4294967295
 8018cec:	4770      	bx	lr
 8018cee:	bf00      	nop
 8018cf0:	20013f24 	.word	0x20013f24

08018cf4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE>:
 8018cf4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018cf8:	b099      	sub	sp, #100	@ 0x64
 8018cfa:	910d      	str	r1, [sp, #52]	@ 0x34
 8018cfc:	a914      	add	r1, sp, #80	@ 0x50
 8018cfe:	e881 000c 	stmia.w	r1, {r2, r3}
 8018d02:	f9bd 308c 	ldrsh.w	r3, [sp, #140]	@ 0x8c
 8018d06:	930b      	str	r3, [sp, #44]	@ 0x2c
 8018d08:	e9dd 2126 	ldrd	r2, r1, [sp, #152]	@ 0x98
 8018d0c:	f89d 30a4 	ldrb.w	r3, [sp, #164]	@ 0xa4
 8018d10:	9310      	str	r3, [sp, #64]	@ 0x40
 8018d12:	f89d 30ac 	ldrb.w	r3, [sp, #172]	@ 0xac
 8018d16:	9308      	str	r3, [sp, #32]
 8018d18:	f89d 30b0 	ldrb.w	r3, [sp, #176]	@ 0xb0
 8018d1c:	9309      	str	r3, [sp, #36]	@ 0x24
 8018d1e:	7b4b      	ldrb	r3, [r1, #13]
 8018d20:	f9bd 4088 	ldrsh.w	r4, [sp, #136]	@ 0x88
 8018d24:	f8bd 5090 	ldrh.w	r5, [sp, #144]	@ 0x90
 8018d28:	f8bd 6094 	ldrh.w	r6, [sp, #148]	@ 0x94
 8018d2c:	9f28      	ldr	r7, [sp, #160]	@ 0xa0
 8018d2e:	f8dd 90a8 	ldr.w	r9, [sp, #168]	@ 0xa8
 8018d32:	f89d a0b4 	ldrb.w	sl, [sp, #180]	@ 0xb4
 8018d36:	ea4f 1843 	mov.w	r8, r3, lsl #5
 8018d3a:	f408 7080 	and.w	r0, r8, #256	@ 0x100
 8018d3e:	f891 8006 	ldrb.w	r8, [r1, #6]
 8018d42:	ea58 0800 	orrs.w	r8, r8, r0
 8018d46:	f000 81ce 	beq.w	80190e6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f2>
 8018d4a:	011b      	lsls	r3, r3, #4
 8018d4c:	79c8      	ldrb	r0, [r1, #7]
 8018d4e:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8018d52:	4303      	orrs	r3, r0
 8018d54:	930c      	str	r3, [sp, #48]	@ 0x30
 8018d56:	f000 81c6 	beq.w	80190e6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f2>
 8018d5a:	f991 3009 	ldrsb.w	r3, [r1, #9]
 8018d5e:	b29b      	uxth	r3, r3
 8018d60:	2d00      	cmp	r5, #0
 8018d62:	f000 812c 	beq.w	8018fbe <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2ca>
 8018d66:	1aed      	subs	r5, r5, r3
 8018d68:	b2ad      	uxth	r5, r5
 8018d6a:	0429      	lsls	r1, r5, #16
 8018d6c:	d502      	bpl.n	8018d74 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x80>
 8018d6e:	1b64      	subs	r4, r4, r5
 8018d70:	b224      	sxth	r4, r4
 8018d72:	2500      	movs	r5, #0
 8018d74:	f9b2 0000 	ldrsh.w	r0, [r2]
 8018d78:	8891      	ldrh	r1, [r2, #4]
 8018d7a:	4284      	cmp	r4, r0
 8018d7c:	b283      	uxth	r3, r0
 8018d7e:	bfb8      	it	lt
 8018d80:	18ed      	addlt	r5, r5, r3
 8018d82:	440b      	add	r3, r1
 8018d84:	b21b      	sxth	r3, r3
 8018d86:	930a      	str	r3, [sp, #40]	@ 0x28
 8018d88:	88d3      	ldrh	r3, [r2, #6]
 8018d8a:	8852      	ldrh	r2, [r2, #2]
 8018d8c:	4413      	add	r3, r2
 8018d8e:	b21b      	sxth	r3, r3
 8018d90:	930f      	str	r3, [sp, #60]	@ 0x3c
 8018d92:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8018d94:	930e      	str	r3, [sp, #56]	@ 0x38
 8018d96:	bfb8      	it	lt
 8018d98:	1b2c      	sublt	r4, r5, r4
 8018d9a:	4bb5      	ldr	r3, [pc, #724]	@ (8019070 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x37c>)
 8018d9c:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 8018d9e:	f893 b000 	ldrb.w	fp, [r3]
 8018da2:	bfbc      	itt	lt
 8018da4:	b2a5      	uxthlt	r5, r4
 8018da6:	4604      	movlt	r4, r0
 8018da8:	4653      	mov	r3, sl
 8018daa:	4621      	mov	r1, r4
 8018dac:	a814      	add	r0, sp, #80	@ 0x50
 8018dae:	f7f6 f889 	bl	800eec4 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>
 8018db2:	4621      	mov	r1, r4
 8018db4:	f8ad 005c 	strh.w	r0, [sp, #92]	@ 0x5c
 8018db8:	4653      	mov	r3, sl
 8018dba:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 8018dbc:	a814      	add	r0, sp, #80	@ 0x50
 8018dbe:	f7f6 f89e 	bl	800eefe <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>
 8018dc2:	a918      	add	r1, sp, #96	@ 0x60
 8018dc4:	f821 0d02 	strh.w	r0, [r1, #-2]!
 8018dc8:	a817      	add	r0, sp, #92	@ 0x5c
 8018dca:	f7f6 f9c5 	bl	800f158 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>
 8018dce:	f1ba 0f00 	cmp.w	sl, #0
 8018dd2:	f040 80f7 	bne.w	8018fc4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2d0>
 8018dd6:	f1bb 0f01 	cmp.w	fp, #1
 8018dda:	f040 80fb 	bne.w	8018fd4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2e0>
 8018dde:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8018de0:	2b00      	cmp	r3, #0
 8018de2:	f040 81a8 	bne.w	8019136 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x442>
 8018de6:	fa1f f288 	uxth.w	r2, r8
 8018dea:	b905      	cbnz	r5, 8018dee <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xfa>
 8018dec:	b15e      	cbz	r6, 8018e06 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x112>
 8018dee:	9808      	ldr	r0, [sp, #32]
 8018df0:	fb06 5302 	mla	r3, r6, r2, r5
 8018df4:	4343      	muls	r3, r0
 8018df6:	4631      	mov	r1, r6
 8018df8:	eb07 07d3 	add.w	r7, r7, r3, lsr #3
 8018dfc:	f003 0607 	and.w	r6, r3, #7
 8018e00:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8018e02:	1a5b      	subs	r3, r3, r1
 8018e04:	930e      	str	r3, [sp, #56]	@ 0x38
 8018e06:	f10b 31ff 	add.w	r1, fp, #4294967295
 8018e0a:	424b      	negs	r3, r1
 8018e0c:	414b      	adcs	r3, r1
 8018e0e:	4618      	mov	r0, r3
 8018e10:	4651      	mov	r1, sl
 8018e12:	930c      	str	r3, [sp, #48]	@ 0x30
 8018e14:	f7ff ff1a 	bl	8018c4c <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>
 8018e18:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8018e1a:	4683      	mov	fp, r0
 8018e1c:	4618      	mov	r0, r3
 8018e1e:	f7ff ff3f 	bl	8018ca0 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>
 8018e22:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 8018e24:	4603      	mov	r3, r0
 8018e26:	980b      	ldr	r0, [sp, #44]	@ 0x2c
 8018e28:	eba1 0a00 	sub.w	sl, r1, r0
 8018e2c:	990e      	ldr	r1, [sp, #56]	@ 0x38
 8018e2e:	458a      	cmp	sl, r1
 8018e30:	bfa8      	it	ge
 8018e32:	468a      	movge	sl, r1
 8018e34:	f1ba 0f00 	cmp.w	sl, #0
 8018e38:	f340 8155 	ble.w	80190e6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f2>
 8018e3c:	990a      	ldr	r1, [sp, #40]	@ 0x28
 8018e3e:	1b64      	subs	r4, r4, r5
 8018e40:	1b0c      	subs	r4, r1, r4
 8018e42:	4544      	cmp	r4, r8
 8018e44:	bfd4      	ite	le
 8018e46:	ebc5 0504 	rsble	r5, r5, r4
 8018e4a:	ebc5 0508 	rsbgt	r5, r5, r8
 8018e4e:	2d00      	cmp	r5, #0
 8018e50:	f340 8149 	ble.w	80190e6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f2>
 8018e54:	9908      	ldr	r1, [sp, #32]
 8018e56:	1b52      	subs	r2, r2, r5
 8018e58:	434a      	muls	r2, r1
 8018e5a:	920e      	str	r2, [sp, #56]	@ 0x38
 8018e5c:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 8018e5e:	2a00      	cmp	r2, #0
 8018e60:	f040 8175 	bne.w	801914e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x45a>
 8018e64:	4a83      	ldr	r2, [pc, #524]	@ (8019074 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x380>)
 8018e66:	930a      	str	r3, [sp, #40]	@ 0x28
 8018e68:	6810      	ldr	r0, [r2, #0]
 8018e6a:	6802      	ldr	r2, [r0, #0]
 8018e6c:	6ad2      	ldr	r2, [r2, #44]	@ 0x2c
 8018e6e:	4790      	blx	r2
 8018e70:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8018e72:	9908      	ldr	r1, [sp, #32]
 8018e74:	2201      	movs	r2, #1
 8018e76:	408a      	lsls	r2, r1
 8018e78:	3a01      	subs	r2, #1
 8018e7a:	497f      	ldr	r1, [pc, #508]	@ (8019078 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x384>)
 8018e7c:	b2d2      	uxtb	r2, r2
 8018e7e:	880c      	ldrh	r4, [r1, #0]
 8018e80:	920c      	str	r2, [sp, #48]	@ 0x30
 8018e82:	f9bd 105c 	ldrsh.w	r1, [sp, #92]	@ 0x5c
 8018e86:	f9bd 205e 	ldrsh.w	r2, [sp, #94]	@ 0x5e
 8018e8a:	fb04 1202 	mla	r2, r4, r2, r1
 8018e8e:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 8018e92:	ea4f 2419 	mov.w	r4, r9, lsr #8
 8018e96:	920a      	str	r2, [sp, #40]	@ 0x28
 8018e98:	f3c9 4207 	ubfx	r2, r9, #16, #8
 8018e9c:	9212      	str	r2, [sp, #72]	@ 0x48
 8018e9e:	b2e2      	uxtb	r2, r4
 8018ea0:	9211      	str	r2, [sp, #68]	@ 0x44
 8018ea2:	fa5f f289 	uxtb.w	r2, r9
 8018ea6:	9210      	str	r2, [sp, #64]	@ 0x40
 8018ea8:	4a74      	ldr	r2, [pc, #464]	@ (801907c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x388>)
 8018eaa:	ea4f 1159 	mov.w	r1, r9, lsr #5
 8018eae:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 8018eb2:	4022      	ands	r2, r4
 8018eb4:	430a      	orrs	r2, r1
 8018eb6:	f3c9 09c4 	ubfx	r9, r9, #3, #5
 8018eba:	ea42 0209 	orr.w	r2, r2, r9
 8018ebe:	ea4f 014b 	mov.w	r1, fp, lsl #1
 8018ec2:	b292      	uxth	r2, r2
 8018ec4:	fb05 3b1b 	mls	fp, r5, fp, r3
 8018ec8:	920f      	str	r2, [sp, #60]	@ 0x3c
 8018eca:	460b      	mov	r3, r1
 8018ecc:	783a      	ldrb	r2, [r7, #0]
 8018ece:	910b      	str	r1, [sp, #44]	@ 0x2c
 8018ed0:	436b      	muls	r3, r5
 8018ed2:	4132      	asrs	r2, r6
 8018ed4:	eb03 034b 	add.w	r3, r3, fp, lsl #1
 8018ed8:	b2d2      	uxtb	r2, r2
 8018eda:	9313      	str	r3, [sp, #76]	@ 0x4c
 8018edc:	f11a 3aff 	adds.w	sl, sl, #4294967295
 8018ee0:	f0c0 8149 	bcc.w	8019176 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x482>
 8018ee4:	f8dd 8028 	ldr.w	r8, [sp, #40]	@ 0x28
 8018ee8:	46a9      	mov	r9, r5
 8018eea:	f119 39ff 	adds.w	r9, r9, #4294967295
 8018eee:	f0c0 8132 	bcc.w	8019156 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x462>
 8018ef2:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8018ef4:	4013      	ands	r3, r2
 8018ef6:	d054      	beq.n	8018fa2 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2ae>
 8018ef8:	20ff      	movs	r0, #255	@ 0xff
 8018efa:	990c      	ldr	r1, [sp, #48]	@ 0x30
 8018efc:	fb90 f1f1 	sdiv	r1, r0, r1
 8018f00:	434b      	muls	r3, r1
 8018f02:	2bfe      	cmp	r3, #254	@ 0xfe
 8018f04:	dd03      	ble.n	8018f0e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x21a>
 8018f06:	9909      	ldr	r1, [sp, #36]	@ 0x24
 8018f08:	4281      	cmp	r1, r0
 8018f0a:	f000 8122 	beq.w	8019152 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x45e>
 8018f0e:	9909      	ldr	r1, [sp, #36]	@ 0x24
 8018f10:	f8b8 4000 	ldrh.w	r4, [r8]
 8018f14:	9812      	ldr	r0, [sp, #72]	@ 0x48
 8018f16:	fb11 f303 	smulbb	r3, r1, r3
 8018f1a:	b29b      	uxth	r3, r3
 8018f1c:	1c59      	adds	r1, r3, #1
 8018f1e:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 8018f22:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8018f26:	fa1f fe83 	uxth.w	lr, r3
 8018f2a:	1221      	asrs	r1, r4, #8
 8018f2c:	fb10 fb0e 	smulbb	fp, r0, lr
 8018f30:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 8018f34:	9811      	ldr	r0, [sp, #68]	@ 0x44
 8018f36:	43db      	mvns	r3, r3
 8018f38:	b2db      	uxtb	r3, r3
 8018f3a:	ea41 1151 	orr.w	r1, r1, r1, lsr #5
 8018f3e:	fb01 b103 	mla	r1, r1, r3, fp
 8018f42:	ea4f 0ce4 	mov.w	ip, r4, asr #3
 8018f46:	fb10 fb0e 	smulbb	fp, r0, lr
 8018f4a:	00e4      	lsls	r4, r4, #3
 8018f4c:	9810      	ldr	r0, [sp, #64]	@ 0x40
 8018f4e:	b2e4      	uxtb	r4, r4
 8018f50:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 8018f54:	fb10 fe0e 	smulbb	lr, r0, lr
 8018f58:	fb04 e403 	mla	r4, r4, r3, lr
 8018f5c:	f00c 0cfc 	and.w	ip, ip, #252	@ 0xfc
 8018f60:	b289      	uxth	r1, r1
 8018f62:	b2a4      	uxth	r4, r4
 8018f64:	ea4c 1c9c 	orr.w	ip, ip, ip, lsr #6
 8018f68:	fb0c bc03 	mla	ip, ip, r3, fp
 8018f6c:	1c4b      	adds	r3, r1, #1
 8018f6e:	f104 0b01 	add.w	fp, r4, #1
 8018f72:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 8018f76:	eb0b 2b14 	add.w	fp, fp, r4, lsr #8
 8018f7a:	fa1f fc8c 	uxth.w	ip, ip
 8018f7e:	f3cb 2bc4 	ubfx	fp, fp, #11, #5
 8018f82:	f401 4178 	and.w	r1, r1, #63488	@ 0xf800
 8018f86:	ea4b 0101 	orr.w	r1, fp, r1
 8018f8a:	f10c 0b01 	add.w	fp, ip, #1
 8018f8e:	eb0b 2b1c 	add.w	fp, fp, ip, lsr #8
 8018f92:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 8018f96:	f40b 6bfc 	and.w	fp, fp, #2016	@ 0x7e0
 8018f9a:	ea41 010b 	orr.w	r1, r1, fp
 8018f9e:	f8a8 1000 	strh.w	r1, [r8]
 8018fa2:	9b08      	ldr	r3, [sp, #32]
 8018fa4:	441e      	add	r6, r3
 8018fa6:	b2b6      	uxth	r6, r6
 8018fa8:	2e07      	cmp	r6, #7
 8018faa:	bf98      	it	ls
 8018fac:	411a      	asrls	r2, r3
 8018fae:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8018fb0:	bf89      	itett	hi
 8018fb2:	787a      	ldrbhi	r2, [r7, #1]
 8018fb4:	b2d2      	uxtbls	r2, r2
 8018fb6:	3701      	addhi	r7, #1
 8018fb8:	2600      	movhi	r6, #0
 8018fba:	4498      	add	r8, r3
 8018fbc:	e795      	b.n	8018eea <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1f6>
 8018fbe:	441c      	add	r4, r3
 8018fc0:	b224      	sxth	r4, r4
 8018fc2:	e6d7      	b.n	8018d74 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x80>
 8018fc4:	f1ba 0f01 	cmp.w	sl, #1
 8018fc8:	f47f af09 	bne.w	8018dde <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xea>
 8018fcc:	f1bb 0f01 	cmp.w	fp, #1
 8018fd0:	f47f af05 	bne.w	8018dde <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xea>
 8018fd4:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8018fd6:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 8018fd8:	1a99      	subs	r1, r3, r2
 8018fda:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8018fdc:	1b9b      	subs	r3, r3, r6
 8018fde:	4299      	cmp	r1, r3
 8018fe0:	bfa8      	it	ge
 8018fe2:	4619      	movge	r1, r3
 8018fe4:	2900      	cmp	r1, #0
 8018fe6:	9112      	str	r1, [sp, #72]	@ 0x48
 8018fe8:	dd7d      	ble.n	80190e6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f2>
 8018fea:	4a22      	ldr	r2, [pc, #136]	@ (8019074 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x380>)
 8018fec:	9211      	str	r2, [sp, #68]	@ 0x44
 8018fee:	6810      	ldr	r0, [r2, #0]
 8018ff0:	6803      	ldr	r3, [r0, #0]
 8018ff2:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8018ff4:	4798      	blx	r3
 8018ff6:	f410 7380 	ands.w	r3, r0, #256	@ 0x100
 8018ffa:	9912      	ldr	r1, [sp, #72]	@ 0x48
 8018ffc:	d006      	beq.n	801900c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x318>
 8018ffe:	9b08      	ldr	r3, [sp, #32]
 8019000:	2b04      	cmp	r3, #4
 8019002:	d133      	bne.n	801906c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x378>
 8019004:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8019006:	3300      	adds	r3, #0
 8019008:	bf18      	it	ne
 801900a:	2301      	movne	r3, #1
 801900c:	0582      	lsls	r2, r0, #22
 801900e:	fa1f fc88 	uxth.w	ip, r8
 8019012:	f140 80b9 	bpl.w	8019188 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x494>
 8019016:	9808      	ldr	r0, [sp, #32]
 8019018:	2808      	cmp	r0, #8
 801901a:	f040 80b5 	bne.w	8019188 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x494>
 801901e:	2b00      	cmp	r3, #0
 8019020:	d064      	beq.n	80190ec <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f8>
 8019022:	f10c 0c01 	add.w	ip, ip, #1
 8019026:	f02c 0301 	bic.w	r3, ip, #1
 801902a:	b29b      	uxth	r3, r3
 801902c:	bb45      	cbnz	r5, 8019080 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x38c>
 801902e:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 8019030:	eb08 0004 	add.w	r0, r8, r4
 8019034:	4290      	cmp	r0, r2
 8019036:	dc23      	bgt.n	8019080 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x38c>
 8019038:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 801903a:	f8bd e05e 	ldrh.w	lr, [sp, #94]	@ 0x5e
 801903e:	6810      	ldr	r0, [r2, #0]
 8019040:	f8bd 205c 	ldrh.w	r2, [sp, #92]	@ 0x5c
 8019044:	6804      	ldr	r4, [r0, #0]
 8019046:	9506      	str	r5, [sp, #24]
 8019048:	f44f 7580 	mov.w	r5, #256	@ 0x100
 801904c:	9505      	str	r5, [sp, #20]
 801904e:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 8019050:	9302      	str	r3, [sp, #8]
 8019052:	b289      	uxth	r1, r1
 8019054:	e9cd 3100 	strd	r3, r1, [sp]
 8019058:	e9cd 9503 	strd	r9, r5, [sp, #12]
 801905c:	ea4f 0c5c 	mov.w	ip, ip, lsr #1
 8019060:	6da4      	ldr	r4, [r4, #88]	@ 0x58
 8019062:	4673      	mov	r3, lr
 8019064:	fb06 710c 	mla	r1, r6, ip, r7
 8019068:	47a0      	blx	r4
 801906a:	e03c      	b.n	80190e6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f2>
 801906c:	2300      	movs	r3, #0
 801906e:	e7cd      	b.n	801900c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x318>
 8019070:	20013f22 	.word	0x20013f22
 8019074:	20013f2c 	.word	0x20013f2c
 8019078:	20013f24 	.word	0x20013f24
 801907c:	00fff800 	.word	0x00fff800
 8019080:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 8019082:	eba4 0e05 	sub.w	lr, r4, r5
 8019086:	eba2 0e0e 	sub.w	lr, r2, lr
 801908a:	45c6      	cmp	lr, r8
 801908c:	bfd4      	ite	le
 801908e:	ebc5 0e0e 	rsble	lr, r5, lr
 8019092:	ebc5 0e08 	rsbgt	lr, r5, r8
 8019096:	f1be 0f00 	cmp.w	lr, #0
 801909a:	d024      	beq.n	80190e6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f2>
 801909c:	07e8      	lsls	r0, r5, #31
 801909e:	f53f ae9e 	bmi.w	8018dde <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xea>
 80190a2:	f01e 0001 	ands.w	r0, lr, #1
 80190a6:	f47f ae9a 	bne.w	8018dde <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xea>
 80190aa:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 80190ac:	f8bd 805e 	ldrh.w	r8, [sp, #94]	@ 0x5e
 80190b0:	6814      	ldr	r4, [r2, #0]
 80190b2:	f8bd 205c 	ldrh.w	r2, [sp, #92]	@ 0x5c
 80190b6:	086d      	lsrs	r5, r5, #1
 80190b8:	ea4f 0c5c 	mov.w	ip, ip, lsr #1
 80190bc:	fb06 560c 	mla	r6, r6, ip, r5
 80190c0:	6825      	ldr	r5, [r4, #0]
 80190c2:	9006      	str	r0, [sp, #24]
 80190c4:	f44f 7080 	mov.w	r0, #256	@ 0x100
 80190c8:	9005      	str	r0, [sp, #20]
 80190ca:	9809      	ldr	r0, [sp, #36]	@ 0x24
 80190cc:	9302      	str	r3, [sp, #8]
 80190ce:	e9cd 9003 	strd	r9, r0, [sp, #12]
 80190d2:	b289      	uxth	r1, r1
 80190d4:	fa1f f38e 	uxth.w	r3, lr
 80190d8:	9101      	str	r1, [sp, #4]
 80190da:	9300      	str	r3, [sp, #0]
 80190dc:	6dad      	ldr	r5, [r5, #88]	@ 0x58
 80190de:	4643      	mov	r3, r8
 80190e0:	19b9      	adds	r1, r7, r6
 80190e2:	4620      	mov	r0, r4
 80190e4:	47a8      	blx	r5
 80190e6:	b019      	add	sp, #100	@ 0x64
 80190e8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80190ec:	4a28      	ldr	r2, [pc, #160]	@ (8019190 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x49c>)
 80190ee:	f8bd e05e 	ldrh.w	lr, [sp, #94]	@ 0x5e
 80190f2:	6810      	ldr	r0, [r2, #0]
 80190f4:	f8bd 205c 	ldrh.w	r2, [sp, #92]	@ 0x5c
 80190f8:	f8d0 a000 	ldr.w	sl, [r0]
 80190fc:	9306      	str	r3, [sp, #24]
 80190fe:	f44f 7300 	mov.w	r3, #512	@ 0x200
 8019102:	9305      	str	r3, [sp, #20]
 8019104:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8019106:	f8cd c008 	str.w	ip, [sp, #8]
 801910a:	e9cd 9303 	strd	r9, r3, [sp, #12]
 801910e:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8019110:	1b64      	subs	r4, r4, r5
 8019112:	1b1c      	subs	r4, r3, r4
 8019114:	fb06 5608 	mla	r6, r6, r8, r5
 8019118:	4544      	cmp	r4, r8
 801911a:	bfd4      	ite	le
 801911c:	ebc5 0504 	rsble	r5, r5, r4
 8019120:	ebc5 0508 	rsbgt	r5, r5, r8
 8019124:	b289      	uxth	r1, r1
 8019126:	b2ad      	uxth	r5, r5
 8019128:	9101      	str	r1, [sp, #4]
 801912a:	9500      	str	r5, [sp, #0]
 801912c:	f8da 4058 	ldr.w	r4, [sl, #88]	@ 0x58
 8019130:	4673      	mov	r3, lr
 8019132:	19b9      	adds	r1, r7, r6
 8019134:	e798      	b.n	8019068 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x374>
 8019136:	2208      	movs	r2, #8
 8019138:	9b08      	ldr	r3, [sp, #32]
 801913a:	fb92 f3f3 	sdiv	r3, r2, r3
 801913e:	1e5a      	subs	r2, r3, #1
 8019140:	4442      	add	r2, r8
 8019142:	fb92 f2f3 	sdiv	r2, r2, r3
 8019146:	fb12 f203 	smulbb	r2, r2, r3
 801914a:	b292      	uxth	r2, r2
 801914c:	e64d      	b.n	8018dea <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf6>
 801914e:	980d      	ldr	r0, [sp, #52]	@ 0x34
 8019150:	e68f      	b.n	8018e72 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x17e>
 8019152:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 8019154:	e723      	b.n	8018f9e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2aa>
 8019156:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8019158:	b143      	cbz	r3, 801916c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x478>
 801915a:	441e      	add	r6, r3
 801915c:	b2b6      	uxth	r6, r6
 801915e:	eb07 07d6 	add.w	r7, r7, r6, lsr #3
 8019162:	f006 0607 	and.w	r6, r6, #7
 8019166:	783a      	ldrb	r2, [r7, #0]
 8019168:	4132      	asrs	r2, r6
 801916a:	b2d2      	uxtb	r2, r2
 801916c:	990a      	ldr	r1, [sp, #40]	@ 0x28
 801916e:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 8019170:	4419      	add	r1, r3
 8019172:	910a      	str	r1, [sp, #40]	@ 0x28
 8019174:	e6b2      	b.n	8018edc <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1e8>
 8019176:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8019178:	2b00      	cmp	r3, #0
 801917a:	d1b4      	bne.n	80190e6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f2>
 801917c:	4b04      	ldr	r3, [pc, #16]	@ (8019190 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x49c>)
 801917e:	6818      	ldr	r0, [r3, #0]
 8019180:	6803      	ldr	r3, [r0, #0]
 8019182:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8019184:	4798      	blx	r3
 8019186:	e7ae      	b.n	80190e6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f2>
 8019188:	2b00      	cmp	r3, #0
 801918a:	f47f af4a 	bne.w	8019022 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x32e>
 801918e:	e626      	b.n	8018dde <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xea>
 8019190:	20013f2c 	.word	0x20013f2c

08019194 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>:
 8019194:	b538      	push	{r3, r4, r5, lr}
 8019196:	4c15      	ldr	r4, [pc, #84]	@ (80191ec <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x58>)
 8019198:	7823      	ldrb	r3, [r4, #0]
 801919a:	f3bf 8f5b 	dmb	ish
 801919e:	07da      	lsls	r2, r3, #31
 80191a0:	4605      	mov	r5, r0
 80191a2:	d40b      	bmi.n	80191bc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
 80191a4:	4620      	mov	r0, r4
 80191a6:	f008 fc48 	bl	8021a3a <__cxa_guard_acquire>
 80191aa:	b138      	cbz	r0, 80191bc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
 80191ac:	4620      	mov	r0, r4
 80191ae:	f008 fc50 	bl	8021a52 <__cxa_guard_release>
 80191b2:	4a0f      	ldr	r2, [pc, #60]	@ (80191f0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
 80191b4:	490f      	ldr	r1, [pc, #60]	@ (80191f4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x60>)
 80191b6:	4810      	ldr	r0, [pc, #64]	@ (80191f8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
 80191b8:	f008 fc38 	bl	8021a2c <__aeabi_atexit>
 80191bc:	4c0f      	ldr	r4, [pc, #60]	@ (80191fc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x68>)
 80191be:	7823      	ldrb	r3, [r4, #0]
 80191c0:	f3bf 8f5b 	dmb	ish
 80191c4:	07db      	lsls	r3, r3, #31
 80191c6:	d40b      	bmi.n	80191e0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
 80191c8:	4620      	mov	r0, r4
 80191ca:	f008 fc36 	bl	8021a3a <__cxa_guard_acquire>
 80191ce:	b138      	cbz	r0, 80191e0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
 80191d0:	4620      	mov	r0, r4
 80191d2:	f008 fc3e 	bl	8021a52 <__cxa_guard_release>
 80191d6:	4a06      	ldr	r2, [pc, #24]	@ (80191f0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
 80191d8:	4909      	ldr	r1, [pc, #36]	@ (8019200 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x6c>)
 80191da:	480a      	ldr	r0, [pc, #40]	@ (8019204 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
 80191dc:	f008 fc26 	bl	8021a2c <__aeabi_atexit>
 80191e0:	4b05      	ldr	r3, [pc, #20]	@ (80191f8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
 80191e2:	616b      	str	r3, [r5, #20]
 80191e4:	4b07      	ldr	r3, [pc, #28]	@ (8019204 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
 80191e6:	61ab      	str	r3, [r5, #24]
 80191e8:	bd38      	pop	{r3, r4, r5, pc}
 80191ea:	bf00      	nop
 80191ec:	20014010 	.word	0x20014010
 80191f0:	20000000 	.word	0x20000000
 80191f4:	0801529d 	.word	0x0801529d
 80191f8:	200001e0 	.word	0x200001e0
 80191fc:	20014014 	.word	0x20014014
 8019200:	0801529b 	.word	0x0801529b
 8019204:	200001e4 	.word	0x200001e4

08019208 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>:
 8019208:	b538      	push	{r3, r4, r5, lr}
 801920a:	4c15      	ldr	r4, [pc, #84]	@ (8019260 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x58>)
 801920c:	7823      	ldrb	r3, [r4, #0]
 801920e:	f3bf 8f5b 	dmb	ish
 8019212:	07da      	lsls	r2, r3, #31
 8019214:	4605      	mov	r5, r0
 8019216:	d40b      	bmi.n	8019230 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
 8019218:	4620      	mov	r0, r4
 801921a:	f008 fc0e 	bl	8021a3a <__cxa_guard_acquire>
 801921e:	b138      	cbz	r0, 8019230 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
 8019220:	4620      	mov	r0, r4
 8019222:	f008 fc16 	bl	8021a52 <__cxa_guard_release>
 8019226:	4a0f      	ldr	r2, [pc, #60]	@ (8019264 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
 8019228:	490f      	ldr	r1, [pc, #60]	@ (8019268 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x60>)
 801922a:	4810      	ldr	r0, [pc, #64]	@ (801926c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
 801922c:	f008 fbfe 	bl	8021a2c <__aeabi_atexit>
 8019230:	4c0f      	ldr	r4, [pc, #60]	@ (8019270 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x68>)
 8019232:	7823      	ldrb	r3, [r4, #0]
 8019234:	f3bf 8f5b 	dmb	ish
 8019238:	07db      	lsls	r3, r3, #31
 801923a:	d40b      	bmi.n	8019254 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
 801923c:	4620      	mov	r0, r4
 801923e:	f008 fbfc 	bl	8021a3a <__cxa_guard_acquire>
 8019242:	b138      	cbz	r0, 8019254 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
 8019244:	4620      	mov	r0, r4
 8019246:	f008 fc04 	bl	8021a52 <__cxa_guard_release>
 801924a:	4a06      	ldr	r2, [pc, #24]	@ (8019264 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
 801924c:	4909      	ldr	r1, [pc, #36]	@ (8019274 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x6c>)
 801924e:	480a      	ldr	r0, [pc, #40]	@ (8019278 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
 8019250:	f008 fbec 	bl	8021a2c <__aeabi_atexit>
 8019254:	4b05      	ldr	r3, [pc, #20]	@ (801926c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
 8019256:	60eb      	str	r3, [r5, #12]
 8019258:	4b07      	ldr	r3, [pc, #28]	@ (8019278 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
 801925a:	612b      	str	r3, [r5, #16]
 801925c:	bd38      	pop	{r3, r4, r5, pc}
 801925e:	bf00      	nop
 8019260:	20013fe8 	.word	0x20013fe8
 8019264:	20000000 	.word	0x20000000
 8019268:	080152a1 	.word	0x080152a1
 801926c:	200001b8 	.word	0x200001b8
 8019270:	20013fec 	.word	0x20013fec
 8019274:	0801529f 	.word	0x0801529f
 8019278:	200001bc 	.word	0x200001bc

0801927c <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>:
 801927c:	b510      	push	{r4, lr}
 801927e:	4604      	mov	r4, r0
 8019280:	f7ff ff88 	bl	8019194 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>
 8019284:	4620      	mov	r0, r4
 8019286:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801928a:	f7ff bfbd 	b.w	8019208 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>
	...

08019290 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>:
 8019290:	b538      	push	{r3, r4, r5, lr}
 8019292:	4c15      	ldr	r4, [pc, #84]	@ (80192e8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x58>)
 8019294:	7823      	ldrb	r3, [r4, #0]
 8019296:	f3bf 8f5b 	dmb	ish
 801929a:	07da      	lsls	r2, r3, #31
 801929c:	4605      	mov	r5, r0
 801929e:	d40b      	bmi.n	80192b8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
 80192a0:	4620      	mov	r0, r4
 80192a2:	f008 fbca 	bl	8021a3a <__cxa_guard_acquire>
 80192a6:	b138      	cbz	r0, 80192b8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
 80192a8:	4620      	mov	r0, r4
 80192aa:	f008 fbd2 	bl	8021a52 <__cxa_guard_release>
 80192ae:	4a0f      	ldr	r2, [pc, #60]	@ (80192ec <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
 80192b0:	490f      	ldr	r1, [pc, #60]	@ (80192f0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x60>)
 80192b2:	4810      	ldr	r0, [pc, #64]	@ (80192f4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
 80192b4:	f008 fbba 	bl	8021a2c <__aeabi_atexit>
 80192b8:	4c0f      	ldr	r4, [pc, #60]	@ (80192f8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x68>)
 80192ba:	7823      	ldrb	r3, [r4, #0]
 80192bc:	f3bf 8f5b 	dmb	ish
 80192c0:	07db      	lsls	r3, r3, #31
 80192c2:	d40b      	bmi.n	80192dc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
 80192c4:	4620      	mov	r0, r4
 80192c6:	f008 fbb8 	bl	8021a3a <__cxa_guard_acquire>
 80192ca:	b138      	cbz	r0, 80192dc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
 80192cc:	4620      	mov	r0, r4
 80192ce:	f008 fbc0 	bl	8021a52 <__cxa_guard_release>
 80192d2:	4a06      	ldr	r2, [pc, #24]	@ (80192ec <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
 80192d4:	4909      	ldr	r1, [pc, #36]	@ (80192fc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x6c>)
 80192d6:	480a      	ldr	r0, [pc, #40]	@ (8019300 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
 80192d8:	f008 fba8 	bl	8021a2c <__aeabi_atexit>
 80192dc:	4b05      	ldr	r3, [pc, #20]	@ (80192f4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
 80192de:	626b      	str	r3, [r5, #36]	@ 0x24
 80192e0:	4b07      	ldr	r3, [pc, #28]	@ (8019300 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
 80192e2:	62ab      	str	r3, [r5, #40]	@ 0x28
 80192e4:	bd38      	pop	{r3, r4, r5, pc}
 80192e6:	bf00      	nop
 80192e8:	20014018 	.word	0x20014018
 80192ec:	20000000 	.word	0x20000000
 80192f0:	08015295 	.word	0x08015295
 80192f4:	200001e8 	.word	0x200001e8
 80192f8:	2001401c 	.word	0x2001401c
 80192fc:	08015293 	.word	0x08015293
 8019300:	200001ec 	.word	0x200001ec

08019304 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>:
 8019304:	b538      	push	{r3, r4, r5, lr}
 8019306:	4c15      	ldr	r4, [pc, #84]	@ (801935c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x58>)
 8019308:	7823      	ldrb	r3, [r4, #0]
 801930a:	f3bf 8f5b 	dmb	ish
 801930e:	07da      	lsls	r2, r3, #31
 8019310:	4605      	mov	r5, r0
 8019312:	d40b      	bmi.n	801932c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
 8019314:	4620      	mov	r0, r4
 8019316:	f008 fb90 	bl	8021a3a <__cxa_guard_acquire>
 801931a:	b138      	cbz	r0, 801932c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
 801931c:	4620      	mov	r0, r4
 801931e:	f008 fb98 	bl	8021a52 <__cxa_guard_release>
 8019322:	4a0f      	ldr	r2, [pc, #60]	@ (8019360 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
 8019324:	490f      	ldr	r1, [pc, #60]	@ (8019364 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x60>)
 8019326:	4810      	ldr	r0, [pc, #64]	@ (8019368 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
 8019328:	f008 fb80 	bl	8021a2c <__aeabi_atexit>
 801932c:	4c0f      	ldr	r4, [pc, #60]	@ (801936c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x68>)
 801932e:	7823      	ldrb	r3, [r4, #0]
 8019330:	f3bf 8f5b 	dmb	ish
 8019334:	07db      	lsls	r3, r3, #31
 8019336:	d40b      	bmi.n	8019350 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
 8019338:	4620      	mov	r0, r4
 801933a:	f008 fb7e 	bl	8021a3a <__cxa_guard_acquire>
 801933e:	b138      	cbz	r0, 8019350 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
 8019340:	4620      	mov	r0, r4
 8019342:	f008 fb86 	bl	8021a52 <__cxa_guard_release>
 8019346:	4a06      	ldr	r2, [pc, #24]	@ (8019360 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
 8019348:	4909      	ldr	r1, [pc, #36]	@ (8019370 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x6c>)
 801934a:	480a      	ldr	r0, [pc, #40]	@ (8019374 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
 801934c:	f008 fb6e 	bl	8021a2c <__aeabi_atexit>
 8019350:	4b05      	ldr	r3, [pc, #20]	@ (8019368 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
 8019352:	61eb      	str	r3, [r5, #28]
 8019354:	4b07      	ldr	r3, [pc, #28]	@ (8019374 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
 8019356:	622b      	str	r3, [r5, #32]
 8019358:	bd38      	pop	{r3, r4, r5, pc}
 801935a:	bf00      	nop
 801935c:	20013ff0 	.word	0x20013ff0
 8019360:	20000000 	.word	0x20000000
 8019364:	08015299 	.word	0x08015299
 8019368:	200001c0 	.word	0x200001c0
 801936c:	20013ff4 	.word	0x20013ff4
 8019370:	08015297 	.word	0x08015297
 8019374:	200001c4 	.word	0x200001c4

08019378 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>:
 8019378:	b510      	push	{r4, lr}
 801937a:	4604      	mov	r4, r0
 801937c:	f7ff ff88 	bl	8019290 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>
 8019380:	4620      	mov	r0, r4
 8019382:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8019386:	f7ff bfbd 	b.w	8019304 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>
	...

0801938c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>:
 801938c:	b538      	push	{r3, r4, r5, lr}
 801938e:	4c15      	ldr	r4, [pc, #84]	@ (80193e4 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x58>)
 8019390:	7823      	ldrb	r3, [r4, #0]
 8019392:	f3bf 8f5b 	dmb	ish
 8019396:	07da      	lsls	r2, r3, #31
 8019398:	4605      	mov	r5, r0
 801939a:	d40b      	bmi.n	80193b4 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
 801939c:	4620      	mov	r0, r4
 801939e:	f008 fb4c 	bl	8021a3a <__cxa_guard_acquire>
 80193a2:	b138      	cbz	r0, 80193b4 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
 80193a4:	4620      	mov	r0, r4
 80193a6:	f008 fb54 	bl	8021a52 <__cxa_guard_release>
 80193aa:	4a0f      	ldr	r2, [pc, #60]	@ (80193e8 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
 80193ac:	490f      	ldr	r1, [pc, #60]	@ (80193ec <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x60>)
 80193ae:	4810      	ldr	r0, [pc, #64]	@ (80193f0 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
 80193b0:	f008 fb3c 	bl	8021a2c <__aeabi_atexit>
 80193b4:	4c0f      	ldr	r4, [pc, #60]	@ (80193f4 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x68>)
 80193b6:	7823      	ldrb	r3, [r4, #0]
 80193b8:	f3bf 8f5b 	dmb	ish
 80193bc:	07db      	lsls	r3, r3, #31
 80193be:	d40b      	bmi.n	80193d8 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
 80193c0:	4620      	mov	r0, r4
 80193c2:	f008 fb3a 	bl	8021a3a <__cxa_guard_acquire>
 80193c6:	b138      	cbz	r0, 80193d8 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
 80193c8:	4620      	mov	r0, r4
 80193ca:	f008 fb42 	bl	8021a52 <__cxa_guard_release>
 80193ce:	4a06      	ldr	r2, [pc, #24]	@ (80193e8 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
 80193d0:	4909      	ldr	r1, [pc, #36]	@ (80193f8 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x6c>)
 80193d2:	480a      	ldr	r0, [pc, #40]	@ (80193fc <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
 80193d4:	f008 fb2a 	bl	8021a2c <__aeabi_atexit>
 80193d8:	4b05      	ldr	r3, [pc, #20]	@ (80193f0 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
 80193da:	636b      	str	r3, [r5, #52]	@ 0x34
 80193dc:	4b07      	ldr	r3, [pc, #28]	@ (80193fc <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
 80193de:	63ab      	str	r3, [r5, #56]	@ 0x38
 80193e0:	bd38      	pop	{r3, r4, r5, pc}
 80193e2:	bf00      	nop
 80193e4:	20014028 	.word	0x20014028
 80193e8:	20000000 	.word	0x20000000
 80193ec:	0801528d 	.word	0x0801528d
 80193f0:	200001f8 	.word	0x200001f8
 80193f4:	2001402c 	.word	0x2001402c
 80193f8:	0801528b 	.word	0x0801528b
 80193fc:	200001fc 	.word	0x200001fc

08019400 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>:
 8019400:	b538      	push	{r3, r4, r5, lr}
 8019402:	4c15      	ldr	r4, [pc, #84]	@ (8019458 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x58>)
 8019404:	7823      	ldrb	r3, [r4, #0]
 8019406:	f3bf 8f5b 	dmb	ish
 801940a:	07da      	lsls	r2, r3, #31
 801940c:	4605      	mov	r5, r0
 801940e:	d40b      	bmi.n	8019428 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
 8019410:	4620      	mov	r0, r4
 8019412:	f008 fb12 	bl	8021a3a <__cxa_guard_acquire>
 8019416:	b138      	cbz	r0, 8019428 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
 8019418:	4620      	mov	r0, r4
 801941a:	f008 fb1a 	bl	8021a52 <__cxa_guard_release>
 801941e:	4a0f      	ldr	r2, [pc, #60]	@ (801945c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
 8019420:	490f      	ldr	r1, [pc, #60]	@ (8019460 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x60>)
 8019422:	4810      	ldr	r0, [pc, #64]	@ (8019464 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
 8019424:	f008 fb02 	bl	8021a2c <__aeabi_atexit>
 8019428:	4c0f      	ldr	r4, [pc, #60]	@ (8019468 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x68>)
 801942a:	7823      	ldrb	r3, [r4, #0]
 801942c:	f3bf 8f5b 	dmb	ish
 8019430:	07db      	lsls	r3, r3, #31
 8019432:	d40b      	bmi.n	801944c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
 8019434:	4620      	mov	r0, r4
 8019436:	f008 fb00 	bl	8021a3a <__cxa_guard_acquire>
 801943a:	b138      	cbz	r0, 801944c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
 801943c:	4620      	mov	r0, r4
 801943e:	f008 fb08 	bl	8021a52 <__cxa_guard_release>
 8019442:	4a06      	ldr	r2, [pc, #24]	@ (801945c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
 8019444:	4909      	ldr	r1, [pc, #36]	@ (801946c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x6c>)
 8019446:	480a      	ldr	r0, [pc, #40]	@ (8019470 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
 8019448:	f008 faf0 	bl	8021a2c <__aeabi_atexit>
 801944c:	4b05      	ldr	r3, [pc, #20]	@ (8019464 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
 801944e:	62eb      	str	r3, [r5, #44]	@ 0x2c
 8019450:	4b07      	ldr	r3, [pc, #28]	@ (8019470 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
 8019452:	632b      	str	r3, [r5, #48]	@ 0x30
 8019454:	bd38      	pop	{r3, r4, r5, pc}
 8019456:	bf00      	nop
 8019458:	20013ff8 	.word	0x20013ff8
 801945c:	20000000 	.word	0x20000000
 8019460:	08015291 	.word	0x08015291
 8019464:	200001c8 	.word	0x200001c8
 8019468:	20013ffc 	.word	0x20013ffc
 801946c:	0801528f 	.word	0x0801528f
 8019470:	200001cc 	.word	0x200001cc

08019474 <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>:
 8019474:	b510      	push	{r4, lr}
 8019476:	4604      	mov	r4, r0
 8019478:	f7ff ff88 	bl	801938c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>
 801947c:	4620      	mov	r0, r4
 801947e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8019482:	f7ff bfbd 	b.w	8019400 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>
	...

08019488 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>:
 8019488:	b538      	push	{r3, r4, r5, lr}
 801948a:	4c15      	ldr	r4, [pc, #84]	@ (80194e0 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x58>)
 801948c:	7823      	ldrb	r3, [r4, #0]
 801948e:	f3bf 8f5b 	dmb	ish
 8019492:	07da      	lsls	r2, r3, #31
 8019494:	4605      	mov	r5, r0
 8019496:	d40b      	bmi.n	80194b0 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
 8019498:	4620      	mov	r0, r4
 801949a:	f008 face 	bl	8021a3a <__cxa_guard_acquire>
 801949e:	b138      	cbz	r0, 80194b0 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
 80194a0:	4620      	mov	r0, r4
 80194a2:	f008 fad6 	bl	8021a52 <__cxa_guard_release>
 80194a6:	4a0f      	ldr	r2, [pc, #60]	@ (80194e4 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
 80194a8:	490f      	ldr	r1, [pc, #60]	@ (80194e8 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x60>)
 80194aa:	4810      	ldr	r0, [pc, #64]	@ (80194ec <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
 80194ac:	f008 fabe 	bl	8021a2c <__aeabi_atexit>
 80194b0:	4c0f      	ldr	r4, [pc, #60]	@ (80194f0 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x68>)
 80194b2:	7823      	ldrb	r3, [r4, #0]
 80194b4:	f3bf 8f5b 	dmb	ish
 80194b8:	07db      	lsls	r3, r3, #31
 80194ba:	d40b      	bmi.n	80194d4 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
 80194bc:	4620      	mov	r0, r4
 80194be:	f008 fabc 	bl	8021a3a <__cxa_guard_acquire>
 80194c2:	b138      	cbz	r0, 80194d4 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
 80194c4:	4620      	mov	r0, r4
 80194c6:	f008 fac4 	bl	8021a52 <__cxa_guard_release>
 80194ca:	4a06      	ldr	r2, [pc, #24]	@ (80194e4 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
 80194cc:	4909      	ldr	r1, [pc, #36]	@ (80194f4 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x6c>)
 80194ce:	480a      	ldr	r0, [pc, #40]	@ (80194f8 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
 80194d0:	f008 faac 	bl	8021a2c <__aeabi_atexit>
 80194d4:	4b05      	ldr	r3, [pc, #20]	@ (80194ec <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
 80194d6:	656b      	str	r3, [r5, #84]	@ 0x54
 80194d8:	4b07      	ldr	r3, [pc, #28]	@ (80194f8 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
 80194da:	65ab      	str	r3, [r5, #88]	@ 0x58
 80194dc:	bd38      	pop	{r3, r4, r5, pc}
 80194de:	bf00      	nop
 80194e0:	20014030 	.word	0x20014030
 80194e4:	20000000 	.word	0x20000000
 80194e8:	0801527d 	.word	0x0801527d
 80194ec:	20000200 	.word	0x20000200
 80194f0:	20014034 	.word	0x20014034
 80194f4:	0801527b 	.word	0x0801527b
 80194f8:	20000204 	.word	0x20000204

080194fc <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>:
 80194fc:	b538      	push	{r3, r4, r5, lr}
 80194fe:	4c15      	ldr	r4, [pc, #84]	@ (8019554 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x58>)
 8019500:	7823      	ldrb	r3, [r4, #0]
 8019502:	f3bf 8f5b 	dmb	ish
 8019506:	07da      	lsls	r2, r3, #31
 8019508:	4605      	mov	r5, r0
 801950a:	d40b      	bmi.n	8019524 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
 801950c:	4620      	mov	r0, r4
 801950e:	f008 fa94 	bl	8021a3a <__cxa_guard_acquire>
 8019512:	b138      	cbz	r0, 8019524 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
 8019514:	4620      	mov	r0, r4
 8019516:	f008 fa9c 	bl	8021a52 <__cxa_guard_release>
 801951a:	4a0f      	ldr	r2, [pc, #60]	@ (8019558 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
 801951c:	490f      	ldr	r1, [pc, #60]	@ (801955c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x60>)
 801951e:	4810      	ldr	r0, [pc, #64]	@ (8019560 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
 8019520:	f008 fa84 	bl	8021a2c <__aeabi_atexit>
 8019524:	4c0f      	ldr	r4, [pc, #60]	@ (8019564 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x68>)
 8019526:	7823      	ldrb	r3, [r4, #0]
 8019528:	f3bf 8f5b 	dmb	ish
 801952c:	07db      	lsls	r3, r3, #31
 801952e:	d40b      	bmi.n	8019548 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
 8019530:	4620      	mov	r0, r4
 8019532:	f008 fa82 	bl	8021a3a <__cxa_guard_acquire>
 8019536:	b138      	cbz	r0, 8019548 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
 8019538:	4620      	mov	r0, r4
 801953a:	f008 fa8a 	bl	8021a52 <__cxa_guard_release>
 801953e:	4a06      	ldr	r2, [pc, #24]	@ (8019558 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
 8019540:	4909      	ldr	r1, [pc, #36]	@ (8019568 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x6c>)
 8019542:	480a      	ldr	r0, [pc, #40]	@ (801956c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
 8019544:	f008 fa72 	bl	8021a2c <__aeabi_atexit>
 8019548:	4b05      	ldr	r3, [pc, #20]	@ (8019560 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
 801954a:	64eb      	str	r3, [r5, #76]	@ 0x4c
 801954c:	4b07      	ldr	r3, [pc, #28]	@ (801956c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
 801954e:	652b      	str	r3, [r5, #80]	@ 0x50
 8019550:	bd38      	pop	{r3, r4, r5, pc}
 8019552:	bf00      	nop
 8019554:	20014038 	.word	0x20014038
 8019558:	20000000 	.word	0x20000000
 801955c:	08015281 	.word	0x08015281
 8019560:	20000208 	.word	0x20000208
 8019564:	2001403c 	.word	0x2001403c
 8019568:	0801527f 	.word	0x0801527f
 801956c:	2000020c 	.word	0x2000020c

08019570 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>:
 8019570:	b538      	push	{r3, r4, r5, lr}
 8019572:	4c15      	ldr	r4, [pc, #84]	@ (80195c8 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x58>)
 8019574:	7823      	ldrb	r3, [r4, #0]
 8019576:	f3bf 8f5b 	dmb	ish
 801957a:	07da      	lsls	r2, r3, #31
 801957c:	4605      	mov	r5, r0
 801957e:	d40b      	bmi.n	8019598 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
 8019580:	4620      	mov	r0, r4
 8019582:	f008 fa5a 	bl	8021a3a <__cxa_guard_acquire>
 8019586:	b138      	cbz	r0, 8019598 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
 8019588:	4620      	mov	r0, r4
 801958a:	f008 fa62 	bl	8021a52 <__cxa_guard_release>
 801958e:	4a0f      	ldr	r2, [pc, #60]	@ (80195cc <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
 8019590:	490f      	ldr	r1, [pc, #60]	@ (80195d0 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x60>)
 8019592:	4810      	ldr	r0, [pc, #64]	@ (80195d4 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
 8019594:	f008 fa4a 	bl	8021a2c <__aeabi_atexit>
 8019598:	4c0f      	ldr	r4, [pc, #60]	@ (80195d8 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x68>)
 801959a:	7823      	ldrb	r3, [r4, #0]
 801959c:	f3bf 8f5b 	dmb	ish
 80195a0:	07db      	lsls	r3, r3, #31
 80195a2:	d40b      	bmi.n	80195bc <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
 80195a4:	4620      	mov	r0, r4
 80195a6:	f008 fa48 	bl	8021a3a <__cxa_guard_acquire>
 80195aa:	b138      	cbz	r0, 80195bc <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
 80195ac:	4620      	mov	r0, r4
 80195ae:	f008 fa50 	bl	8021a52 <__cxa_guard_release>
 80195b2:	4a06      	ldr	r2, [pc, #24]	@ (80195cc <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
 80195b4:	4909      	ldr	r1, [pc, #36]	@ (80195dc <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x6c>)
 80195b6:	480a      	ldr	r0, [pc, #40]	@ (80195e0 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
 80195b8:	f008 fa38 	bl	8021a2c <__aeabi_atexit>
 80195bc:	4b05      	ldr	r3, [pc, #20]	@ (80195d4 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
 80195be:	646b      	str	r3, [r5, #68]	@ 0x44
 80195c0:	4b07      	ldr	r3, [pc, #28]	@ (80195e0 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
 80195c2:	64ab      	str	r3, [r5, #72]	@ 0x48
 80195c4:	bd38      	pop	{r3, r4, r5, pc}
 80195c6:	bf00      	nop
 80195c8:	20014000 	.word	0x20014000
 80195cc:	20000000 	.word	0x20000000
 80195d0:	08015285 	.word	0x08015285
 80195d4:	200001d0 	.word	0x200001d0
 80195d8:	20014004 	.word	0x20014004
 80195dc:	08015283 	.word	0x08015283
 80195e0:	200001d4 	.word	0x200001d4

080195e4 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>:
 80195e4:	b538      	push	{r3, r4, r5, lr}
 80195e6:	4c15      	ldr	r4, [pc, #84]	@ (801963c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x58>)
 80195e8:	7823      	ldrb	r3, [r4, #0]
 80195ea:	f3bf 8f5b 	dmb	ish
 80195ee:	07da      	lsls	r2, r3, #31
 80195f0:	4605      	mov	r5, r0
 80195f2:	d40b      	bmi.n	801960c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
 80195f4:	4620      	mov	r0, r4
 80195f6:	f008 fa20 	bl	8021a3a <__cxa_guard_acquire>
 80195fa:	b138      	cbz	r0, 801960c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
 80195fc:	4620      	mov	r0, r4
 80195fe:	f008 fa28 	bl	8021a52 <__cxa_guard_release>
 8019602:	4a0f      	ldr	r2, [pc, #60]	@ (8019640 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
 8019604:	490f      	ldr	r1, [pc, #60]	@ (8019644 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x60>)
 8019606:	4810      	ldr	r0, [pc, #64]	@ (8019648 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
 8019608:	f008 fa10 	bl	8021a2c <__aeabi_atexit>
 801960c:	4c0f      	ldr	r4, [pc, #60]	@ (801964c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x68>)
 801960e:	7823      	ldrb	r3, [r4, #0]
 8019610:	f3bf 8f5b 	dmb	ish
 8019614:	07db      	lsls	r3, r3, #31
 8019616:	d40b      	bmi.n	8019630 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
 8019618:	4620      	mov	r0, r4
 801961a:	f008 fa0e 	bl	8021a3a <__cxa_guard_acquire>
 801961e:	b138      	cbz	r0, 8019630 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
 8019620:	4620      	mov	r0, r4
 8019622:	f008 fa16 	bl	8021a52 <__cxa_guard_release>
 8019626:	4a06      	ldr	r2, [pc, #24]	@ (8019640 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
 8019628:	4909      	ldr	r1, [pc, #36]	@ (8019650 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x6c>)
 801962a:	480a      	ldr	r0, [pc, #40]	@ (8019654 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
 801962c:	f008 f9fe 	bl	8021a2c <__aeabi_atexit>
 8019630:	4b05      	ldr	r3, [pc, #20]	@ (8019648 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
 8019632:	63eb      	str	r3, [r5, #60]	@ 0x3c
 8019634:	4b07      	ldr	r3, [pc, #28]	@ (8019654 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
 8019636:	642b      	str	r3, [r5, #64]	@ 0x40
 8019638:	bd38      	pop	{r3, r4, r5, pc}
 801963a:	bf00      	nop
 801963c:	20014020 	.word	0x20014020
 8019640:	20000000 	.word	0x20000000
 8019644:	08015289 	.word	0x08015289
 8019648:	200001f0 	.word	0x200001f0
 801964c:	20014024 	.word	0x20014024
 8019650:	08015287 	.word	0x08015287
 8019654:	200001f4 	.word	0x200001f4

08019658 <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>:
 8019658:	b510      	push	{r4, lr}
 801965a:	4604      	mov	r4, r0
 801965c:	f7ff ff14 	bl	8019488 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>
 8019660:	4620      	mov	r0, r4
 8019662:	f7ff ff85 	bl	8019570 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>
 8019666:	4620      	mov	r0, r4
 8019668:	f7ff ff48 	bl	80194fc <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>
 801966c:	4620      	mov	r0, r4
 801966e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8019672:	f7ff bfb7 	b.w	80195e4 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>
	...

08019678 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>:
 8019678:	b538      	push	{r3, r4, r5, lr}
 801967a:	4c15      	ldr	r4, [pc, #84]	@ (80196d0 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x58>)
 801967c:	7823      	ldrb	r3, [r4, #0]
 801967e:	f3bf 8f5b 	dmb	ish
 8019682:	07da      	lsls	r2, r3, #31
 8019684:	4605      	mov	r5, r0
 8019686:	d40b      	bmi.n	80196a0 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
 8019688:	4620      	mov	r0, r4
 801968a:	f008 f9d6 	bl	8021a3a <__cxa_guard_acquire>
 801968e:	b138      	cbz	r0, 80196a0 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
 8019690:	4620      	mov	r0, r4
 8019692:	f008 f9de 	bl	8021a52 <__cxa_guard_release>
 8019696:	4a0f      	ldr	r2, [pc, #60]	@ (80196d4 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
 8019698:	490f      	ldr	r1, [pc, #60]	@ (80196d8 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x60>)
 801969a:	4810      	ldr	r0, [pc, #64]	@ (80196dc <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
 801969c:	f008 f9c6 	bl	8021a2c <__aeabi_atexit>
 80196a0:	4c0f      	ldr	r4, [pc, #60]	@ (80196e0 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x68>)
 80196a2:	7823      	ldrb	r3, [r4, #0]
 80196a4:	f3bf 8f5b 	dmb	ish
 80196a8:	07db      	lsls	r3, r3, #31
 80196aa:	d40b      	bmi.n	80196c4 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
 80196ac:	4620      	mov	r0, r4
 80196ae:	f008 f9c4 	bl	8021a3a <__cxa_guard_acquire>
 80196b2:	b138      	cbz	r0, 80196c4 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
 80196b4:	4620      	mov	r0, r4
 80196b6:	f008 f9cc 	bl	8021a52 <__cxa_guard_release>
 80196ba:	4a06      	ldr	r2, [pc, #24]	@ (80196d4 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
 80196bc:	4909      	ldr	r1, [pc, #36]	@ (80196e4 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x6c>)
 80196be:	480a      	ldr	r0, [pc, #40]	@ (80196e8 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
 80196c0:	f008 f9b4 	bl	8021a2c <__aeabi_atexit>
 80196c4:	4b05      	ldr	r3, [pc, #20]	@ (80196dc <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
 80196c6:	666b      	str	r3, [r5, #100]	@ 0x64
 80196c8:	4b07      	ldr	r3, [pc, #28]	@ (80196e8 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
 80196ca:	66ab      	str	r3, [r5, #104]	@ 0x68
 80196cc:	bd38      	pop	{r3, r4, r5, pc}
 80196ce:	bf00      	nop
 80196d0:	20014008 	.word	0x20014008
 80196d4:	20000000 	.word	0x20000000
 80196d8:	08015275 	.word	0x08015275
 80196dc:	200001d8 	.word	0x200001d8
 80196e0:	2001400c 	.word	0x2001400c
 80196e4:	08015273 	.word	0x08015273
 80196e8:	200001dc 	.word	0x200001dc

080196ec <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>:
 80196ec:	b538      	push	{r3, r4, r5, lr}
 80196ee:	4c15      	ldr	r4, [pc, #84]	@ (8019744 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x58>)
 80196f0:	7823      	ldrb	r3, [r4, #0]
 80196f2:	f3bf 8f5b 	dmb	ish
 80196f6:	07da      	lsls	r2, r3, #31
 80196f8:	4605      	mov	r5, r0
 80196fa:	d40b      	bmi.n	8019714 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
 80196fc:	4620      	mov	r0, r4
 80196fe:	f008 f99c 	bl	8021a3a <__cxa_guard_acquire>
 8019702:	b138      	cbz	r0, 8019714 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
 8019704:	4620      	mov	r0, r4
 8019706:	f008 f9a4 	bl	8021a52 <__cxa_guard_release>
 801970a:	4a0f      	ldr	r2, [pc, #60]	@ (8019748 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
 801970c:	490f      	ldr	r1, [pc, #60]	@ (801974c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x60>)
 801970e:	4810      	ldr	r0, [pc, #64]	@ (8019750 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
 8019710:	f008 f98c 	bl	8021a2c <__aeabi_atexit>
 8019714:	4c0f      	ldr	r4, [pc, #60]	@ (8019754 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x68>)
 8019716:	7823      	ldrb	r3, [r4, #0]
 8019718:	f3bf 8f5b 	dmb	ish
 801971c:	07db      	lsls	r3, r3, #31
 801971e:	d40b      	bmi.n	8019738 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
 8019720:	4620      	mov	r0, r4
 8019722:	f008 f98a 	bl	8021a3a <__cxa_guard_acquire>
 8019726:	b138      	cbz	r0, 8019738 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
 8019728:	4620      	mov	r0, r4
 801972a:	f008 f992 	bl	8021a52 <__cxa_guard_release>
 801972e:	4a06      	ldr	r2, [pc, #24]	@ (8019748 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
 8019730:	4909      	ldr	r1, [pc, #36]	@ (8019758 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x6c>)
 8019732:	480a      	ldr	r0, [pc, #40]	@ (801975c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
 8019734:	f008 f97a 	bl	8021a2c <__aeabi_atexit>
 8019738:	4b05      	ldr	r3, [pc, #20]	@ (8019750 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
 801973a:	65eb      	str	r3, [r5, #92]	@ 0x5c
 801973c:	4b07      	ldr	r3, [pc, #28]	@ (801975c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
 801973e:	662b      	str	r3, [r5, #96]	@ 0x60
 8019740:	bd38      	pop	{r3, r4, r5, pc}
 8019742:	bf00      	nop
 8019744:	20013fe0 	.word	0x20013fe0
 8019748:	20000000 	.word	0x20000000
 801974c:	08015279 	.word	0x08015279
 8019750:	200001b0 	.word	0x200001b0
 8019754:	20013fe4 	.word	0x20013fe4
 8019758:	08015277 	.word	0x08015277
 801975c:	200001b4 	.word	0x200001b4

08019760 <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>:
 8019760:	b510      	push	{r4, lr}
 8019762:	4604      	mov	r4, r0
 8019764:	f7ff ff88 	bl	8019678 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>
 8019768:	4620      	mov	r0, r4
 801976a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801976e:	f7ff bfbd 	b.w	80196ec <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>
	...

08019774 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>:
 8019774:	b538      	push	{r3, r4, r5, lr}
 8019776:	4c15      	ldr	r4, [pc, #84]	@ (80197cc <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x58>)
 8019778:	7823      	ldrb	r3, [r4, #0]
 801977a:	f3bf 8f5b 	dmb	ish
 801977e:	07da      	lsls	r2, r3, #31
 8019780:	4605      	mov	r5, r0
 8019782:	d40b      	bmi.n	801979c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
 8019784:	4620      	mov	r0, r4
 8019786:	f008 f958 	bl	8021a3a <__cxa_guard_acquire>
 801978a:	b138      	cbz	r0, 801979c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
 801978c:	4620      	mov	r0, r4
 801978e:	f008 f960 	bl	8021a52 <__cxa_guard_release>
 8019792:	4a0f      	ldr	r2, [pc, #60]	@ (80197d0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
 8019794:	490f      	ldr	r1, [pc, #60]	@ (80197d4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x60>)
 8019796:	4810      	ldr	r0, [pc, #64]	@ (80197d8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
 8019798:	f008 f948 	bl	8021a2c <__aeabi_atexit>
 801979c:	4c0f      	ldr	r4, [pc, #60]	@ (80197dc <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x68>)
 801979e:	7823      	ldrb	r3, [r4, #0]
 80197a0:	f3bf 8f5b 	dmb	ish
 80197a4:	07db      	lsls	r3, r3, #31
 80197a6:	d40b      	bmi.n	80197c0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
 80197a8:	4620      	mov	r0, r4
 80197aa:	f008 f946 	bl	8021a3a <__cxa_guard_acquire>
 80197ae:	b138      	cbz	r0, 80197c0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
 80197b0:	4620      	mov	r0, r4
 80197b2:	f008 f94e 	bl	8021a52 <__cxa_guard_release>
 80197b6:	4a06      	ldr	r2, [pc, #24]	@ (80197d0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
 80197b8:	4909      	ldr	r1, [pc, #36]	@ (80197e0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x6c>)
 80197ba:	480a      	ldr	r0, [pc, #40]	@ (80197e4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
 80197bc:	f008 f936 	bl	8021a2c <__aeabi_atexit>
 80197c0:	4b05      	ldr	r3, [pc, #20]	@ (80197d8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
 80197c2:	676b      	str	r3, [r5, #116]	@ 0x74
 80197c4:	4b07      	ldr	r3, [pc, #28]	@ (80197e4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
 80197c6:	67ab      	str	r3, [r5, #120]	@ 0x78
 80197c8:	bd38      	pop	{r3, r4, r5, pc}
 80197ca:	bf00      	nop
 80197cc:	20013fd8 	.word	0x20013fd8
 80197d0:	20000000 	.word	0x20000000
 80197d4:	0801526d 	.word	0x0801526d
 80197d8:	200001a8 	.word	0x200001a8
 80197dc:	20013fdc 	.word	0x20013fdc
 80197e0:	0801526b 	.word	0x0801526b
 80197e4:	200001ac 	.word	0x200001ac

080197e8 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>:
 80197e8:	b538      	push	{r3, r4, r5, lr}
 80197ea:	4c15      	ldr	r4, [pc, #84]	@ (8019840 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x58>)
 80197ec:	7823      	ldrb	r3, [r4, #0]
 80197ee:	f3bf 8f5b 	dmb	ish
 80197f2:	07da      	lsls	r2, r3, #31
 80197f4:	4605      	mov	r5, r0
 80197f6:	d40b      	bmi.n	8019810 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
 80197f8:	4620      	mov	r0, r4
 80197fa:	f008 f91e 	bl	8021a3a <__cxa_guard_acquire>
 80197fe:	b138      	cbz	r0, 8019810 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
 8019800:	4620      	mov	r0, r4
 8019802:	f008 f926 	bl	8021a52 <__cxa_guard_release>
 8019806:	4a0f      	ldr	r2, [pc, #60]	@ (8019844 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
 8019808:	490f      	ldr	r1, [pc, #60]	@ (8019848 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x60>)
 801980a:	4810      	ldr	r0, [pc, #64]	@ (801984c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
 801980c:	f008 f90e 	bl	8021a2c <__aeabi_atexit>
 8019810:	4c0f      	ldr	r4, [pc, #60]	@ (8019850 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x68>)
 8019812:	7823      	ldrb	r3, [r4, #0]
 8019814:	f3bf 8f5b 	dmb	ish
 8019818:	07db      	lsls	r3, r3, #31
 801981a:	d40b      	bmi.n	8019834 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
 801981c:	4620      	mov	r0, r4
 801981e:	f008 f90c 	bl	8021a3a <__cxa_guard_acquire>
 8019822:	b138      	cbz	r0, 8019834 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
 8019824:	4620      	mov	r0, r4
 8019826:	f008 f914 	bl	8021a52 <__cxa_guard_release>
 801982a:	4a06      	ldr	r2, [pc, #24]	@ (8019844 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
 801982c:	4909      	ldr	r1, [pc, #36]	@ (8019854 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x6c>)
 801982e:	480a      	ldr	r0, [pc, #40]	@ (8019858 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
 8019830:	f008 f8fc 	bl	8021a2c <__aeabi_atexit>
 8019834:	4b05      	ldr	r3, [pc, #20]	@ (801984c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
 8019836:	66eb      	str	r3, [r5, #108]	@ 0x6c
 8019838:	4b07      	ldr	r3, [pc, #28]	@ (8019858 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
 801983a:	672b      	str	r3, [r5, #112]	@ 0x70
 801983c:	bd38      	pop	{r3, r4, r5, pc}
 801983e:	bf00      	nop
 8019840:	20013fd0 	.word	0x20013fd0
 8019844:	20000000 	.word	0x20000000
 8019848:	08015271 	.word	0x08015271
 801984c:	200001a0 	.word	0x200001a0
 8019850:	20013fd4 	.word	0x20013fd4
 8019854:	0801526f 	.word	0x0801526f
 8019858:	200001a4 	.word	0x200001a4

0801985c <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>:
 801985c:	b510      	push	{r4, lr}
 801985e:	4604      	mov	r4, r0
 8019860:	f7ff ff88 	bl	8019774 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>
 8019864:	4620      	mov	r0, r4
 8019866:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801986a:	f7ff bfbd 	b.w	80197e8 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>

0801986e <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>:
 801986e:	b510      	push	{r4, lr}
 8019870:	4604      	mov	r4, r0
 8019872:	f7ff fff3 	bl	801985c <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>
 8019876:	4620      	mov	r0, r4
 8019878:	f7ff ff72 	bl	8019760 <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>
 801987c:	4620      	mov	r0, r4
 801987e:	f7ff fdf9 	bl	8019474 <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>
 8019882:	4620      	mov	r0, r4
 8019884:	f7ff fcfa 	bl	801927c <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>
 8019888:	4620      	mov	r0, r4
 801988a:	f7ff fd75 	bl	8019378 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>
 801988e:	4620      	mov	r0, r4
 8019890:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8019894:	f7ff bee0 	b.w	8019658 <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>

08019898 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev>:
 8019898:	b538      	push	{r3, r4, r5, lr}
 801989a:	4c0b      	ldr	r4, [pc, #44]	@ (80198c8 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x30>)
 801989c:	7823      	ldrb	r3, [r4, #0]
 801989e:	f3bf 8f5b 	dmb	ish
 80198a2:	07db      	lsls	r3, r3, #31
 80198a4:	4605      	mov	r5, r0
 80198a6:	d40b      	bmi.n	80198c0 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x28>
 80198a8:	4620      	mov	r0, r4
 80198aa:	f008 f8c6 	bl	8021a3a <__cxa_guard_acquire>
 80198ae:	b138      	cbz	r0, 80198c0 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x28>
 80198b0:	4620      	mov	r0, r4
 80198b2:	f008 f8ce 	bl	8021a52 <__cxa_guard_release>
 80198b6:	4a05      	ldr	r2, [pc, #20]	@ (80198cc <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x34>)
 80198b8:	4905      	ldr	r1, [pc, #20]	@ (80198d0 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x38>)
 80198ba:	4806      	ldr	r0, [pc, #24]	@ (80198d4 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x3c>)
 80198bc:	f008 f8b6 	bl	8021a2c <__aeabi_atexit>
 80198c0:	4b04      	ldr	r3, [pc, #16]	@ (80198d4 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x3c>)
 80198c2:	67eb      	str	r3, [r5, #124]	@ 0x7c
 80198c4:	bd38      	pop	{r3, r4, r5, pc}
 80198c6:	bf00      	nop
 80198c8:	20013fc4 	.word	0x20013fc4
 80198cc:	20000000 	.word	0x20000000
 80198d0:	08015269 	.word	0x08015269
 80198d4:	20000198 	.word	0x20000198

080198d8 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv>:
 80198d8:	b538      	push	{r3, r4, r5, lr}
 80198da:	4c0b      	ldr	r4, [pc, #44]	@ (8019908 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x30>)
 80198dc:	7823      	ldrb	r3, [r4, #0]
 80198de:	f3bf 8f5b 	dmb	ish
 80198e2:	07db      	lsls	r3, r3, #31
 80198e4:	4605      	mov	r5, r0
 80198e6:	d40b      	bmi.n	8019900 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x28>
 80198e8:	4620      	mov	r0, r4
 80198ea:	f008 f8a6 	bl	8021a3a <__cxa_guard_acquire>
 80198ee:	b138      	cbz	r0, 8019900 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x28>
 80198f0:	4620      	mov	r0, r4
 80198f2:	f008 f8ae 	bl	8021a52 <__cxa_guard_release>
 80198f6:	4a05      	ldr	r2, [pc, #20]	@ (801990c <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x34>)
 80198f8:	4905      	ldr	r1, [pc, #20]	@ (8019910 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x38>)
 80198fa:	4806      	ldr	r0, [pc, #24]	@ (8019914 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x3c>)
 80198fc:	f008 f896 	bl	8021a2c <__aeabi_atexit>
 8019900:	4b04      	ldr	r3, [pc, #16]	@ (8019914 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x3c>)
 8019902:	f8c5 3080 	str.w	r3, [r5, #128]	@ 0x80
 8019906:	bd38      	pop	{r3, r4, r5, pc}
 8019908:	20013fc8 	.word	0x20013fc8
 801990c:	20000000 	.word	0x20000000
 8019910:	08015267 	.word	0x08015267
 8019914:	2000019c 	.word	0x2000019c

08019918 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev>:
 8019918:	b570      	push	{r4, r5, r6, lr}
 801991a:	4d0d      	ldr	r5, [pc, #52]	@ (8019950 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x38>)
 801991c:	4c0d      	ldr	r4, [pc, #52]	@ (8019954 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x3c>)
 801991e:	782b      	ldrb	r3, [r5, #0]
 8019920:	f3bf 8f5b 	dmb	ish
 8019924:	f013 0f01 	tst.w	r3, #1
 8019928:	4606      	mov	r6, r0
 801992a:	d10d      	bne.n	8019948 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x30>
 801992c:	4628      	mov	r0, r5
 801992e:	f008 f884 	bl	8021a3a <__cxa_guard_acquire>
 8019932:	b148      	cbz	r0, 8019948 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x30>
 8019934:	4b08      	ldr	r3, [pc, #32]	@ (8019958 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x40>)
 8019936:	6023      	str	r3, [r4, #0]
 8019938:	4628      	mov	r0, r5
 801993a:	f008 f88a 	bl	8021a52 <__cxa_guard_release>
 801993e:	4a07      	ldr	r2, [pc, #28]	@ (801995c <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x44>)
 8019940:	4907      	ldr	r1, [pc, #28]	@ (8019960 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x48>)
 8019942:	4620      	mov	r0, r4
 8019944:	f008 f872 	bl	8021a2c <__aeabi_atexit>
 8019948:	f8c6 4084 	str.w	r4, [r6, #132]	@ 0x84
 801994c:	bd70      	pop	{r4, r5, r6, pc}
 801994e:	bf00      	nop
 8019950:	20013fcc 	.word	0x20013fcc
 8019954:	20014144 	.word	0x20014144
 8019958:	08024ecc 	.word	0x08024ecc
 801995c:	20000000 	.word	0x20000000
 8019960:	08015265 	.word	0x08015265

08019964 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_AllEv>:
 8019964:	b510      	push	{r4, lr}
 8019966:	4604      	mov	r4, r0
 8019968:	f7ff ff96 	bl	8019898 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev>
 801996c:	4620      	mov	r0, r4
 801996e:	f7ff ffb3 	bl	80198d8 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv>
 8019972:	4620      	mov	r0, r4
 8019974:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8019978:	f7ff bfce 	b.w	8019918 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev>

0801997c <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv>:
 801997c:	b570      	push	{r4, r5, r6, lr}
 801997e:	4d0d      	ldr	r5, [pc, #52]	@ (80199b4 <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv+0x38>)
 8019980:	4c0d      	ldr	r4, [pc, #52]	@ (80199b8 <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv+0x3c>)
 8019982:	782b      	ldrb	r3, [r5, #0]
 8019984:	f3bf 8f5b 	dmb	ish
 8019988:	f013 0f01 	tst.w	r3, #1
 801998c:	4606      	mov	r6, r0
 801998e:	d10d      	bne.n	80199ac <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv+0x30>
 8019990:	4628      	mov	r0, r5
 8019992:	f008 f852 	bl	8021a3a <__cxa_guard_acquire>
 8019996:	b148      	cbz	r0, 80199ac <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv+0x30>
 8019998:	4b08      	ldr	r3, [pc, #32]	@ (80199bc <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv+0x40>)
 801999a:	6023      	str	r3, [r4, #0]
 801999c:	4628      	mov	r0, r5
 801999e:	f008 f858 	bl	8021a52 <__cxa_guard_release>
 80199a2:	4a07      	ldr	r2, [pc, #28]	@ (80199c0 <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv+0x44>)
 80199a4:	4907      	ldr	r1, [pc, #28]	@ (80199c4 <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv+0x48>)
 80199a6:	4620      	mov	r0, r4
 80199a8:	f008 f840 	bl	8021a2c <__aeabi_atexit>
 80199ac:	f8c6 4088 	str.w	r4, [r6, #136]	@ 0x88
 80199b0:	bd70      	pop	{r4, r5, r6, pc}
 80199b2:	bf00      	nop
 80199b4:	20013fc0 	.word	0x20013fc0
 80199b8:	20014040 	.word	0x20014040
 80199bc:	08024ee8 	.word	0x08024ee8
 80199c0:	20000000 	.word	0x20000000
 80199c4:	08015263 	.word	0x08015263

080199c8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>:
 80199c8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80199cc:	e9dd 450b 	ldrd	r4, r5, [sp, #44]	@ 0x2c
 80199d0:	f9bd e024 	ldrsh.w	lr, [sp, #36]	@ 0x24
 80199d4:	f9bd b028 	ldrsh.w	fp, [sp, #40]	@ 0x28
 80199d8:	f89d 9034 	ldrb.w	r9, [sp, #52]	@ 0x34
 80199dc:	f89d 7038 	ldrb.w	r7, [sp, #56]	@ 0x38
 80199e0:	f89d 603c 	ldrb.w	r6, [sp, #60]	@ 0x3c
 80199e4:	8808      	ldrh	r0, [r1, #0]
 80199e6:	fb05 4c0e 	mla	ip, r5, lr, r4
 80199ea:	2d00      	cmp	r5, #0
 80199ec:	eb02 0a0c 	add.w	sl, r2, ip
 80199f0:	f2c0 80b0 	blt.w	8019b54 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x18c>
 80199f4:	45ab      	cmp	fp, r5
 80199f6:	f340 80ad 	ble.w	8019b54 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x18c>
 80199fa:	2c00      	cmp	r4, #0
 80199fc:	f2c0 80a8 	blt.w	8019b50 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x188>
 8019a00:	45a6      	cmp	lr, r4
 8019a02:	f340 80a5 	ble.w	8019b50 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x188>
 8019a06:	f812 200c 	ldrb.w	r2, [r2, ip]
 8019a0a:	f833 8012 	ldrh.w	r8, [r3, r2, lsl #1]
 8019a0e:	1c62      	adds	r2, r4, #1
 8019a10:	f100 80a3 	bmi.w	8019b5a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 8019a14:	4596      	cmp	lr, r2
 8019a16:	f340 80a0 	ble.w	8019b5a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 8019a1a:	f1b9 0f00 	cmp.w	r9, #0
 8019a1e:	f000 809c 	beq.w	8019b5a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 8019a22:	f89a 2001 	ldrb.w	r2, [sl, #1]
 8019a26:	f833 c012 	ldrh.w	ip, [r3, r2, lsl #1]
 8019a2a:	3501      	adds	r5, #1
 8019a2c:	f100 8099 	bmi.w	8019b62 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 8019a30:	45ab      	cmp	fp, r5
 8019a32:	f340 8096 	ble.w	8019b62 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 8019a36:	2f00      	cmp	r7, #0
 8019a38:	f000 8093 	beq.w	8019b62 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 8019a3c:	2c00      	cmp	r4, #0
 8019a3e:	f2c0 808e 	blt.w	8019b5e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x196>
 8019a42:	45a6      	cmp	lr, r4
 8019a44:	f340 808b 	ble.w	8019b5e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x196>
 8019a48:	f81a 200e 	ldrb.w	r2, [sl, lr]
 8019a4c:	f833 5012 	ldrh.w	r5, [r3, r2, lsl #1]
 8019a50:	3401      	adds	r4, #1
 8019a52:	f100 8089 	bmi.w	8019b68 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 8019a56:	45a6      	cmp	lr, r4
 8019a58:	f340 8086 	ble.w	8019b68 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 8019a5c:	f1b9 0f00 	cmp.w	r9, #0
 8019a60:	f000 8082 	beq.w	8019b68 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 8019a64:	44d6      	add	lr, sl
 8019a66:	f89e 2001 	ldrb.w	r2, [lr, #1]
 8019a6a:	f833 3012 	ldrh.w	r3, [r3, r2, lsl #1]
 8019a6e:	ea4f 4408 	mov.w	r4, r8, lsl #16
 8019a72:	f004 64fc 	and.w	r4, r4, #132120576	@ 0x7e00000
 8019a76:	f428 68fc 	bic.w	r8, r8, #2016	@ 0x7e0
 8019a7a:	fb19 fe07 	smulbb	lr, r9, r7
 8019a7e:	ea44 0808 	orr.w	r8, r4, r8
 8019a82:	ea4f 440c 	mov.w	r4, ip, lsl #16
 8019a86:	f3ce 0ec7 	ubfx	lr, lr, #3, #8
 8019a8a:	f1c7 0210 	rsb	r2, r7, #16
 8019a8e:	f004 64fc 	and.w	r4, r4, #132120576	@ 0x7e00000
 8019a92:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
 8019a96:	ea44 0c0c 	orr.w	ip, r4, ip
 8019a9a:	eba2 0209 	sub.w	r2, r2, r9
 8019a9e:	ebce 0449 	rsb	r4, lr, r9, lsl #1
 8019aa2:	eb0e 0242 	add.w	r2, lr, r2, lsl #1
 8019aa6:	fb04 f40c 	mul.w	r4, r4, ip
 8019aaa:	fb02 4808 	mla	r8, r2, r8, r4
 8019aae:	041a      	lsls	r2, r3, #16
 8019ab0:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
 8019ab4:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 8019ab8:	4313      	orrs	r3, r2
 8019aba:	042a      	lsls	r2, r5, #16
 8019abc:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
 8019ac0:	f425 65fc 	bic.w	r5, r5, #2016	@ 0x7e0
 8019ac4:	fb0e 8303 	mla	r3, lr, r3, r8
 8019ac8:	432a      	orrs	r2, r5
 8019aca:	ebce 0747 	rsb	r7, lr, r7, lsl #1
 8019ace:	fb07 3202 	mla	r2, r7, r2, r3
 8019ad2:	0d53      	lsrs	r3, r2, #21
 8019ad4:	0952      	lsrs	r2, r2, #5
 8019ad6:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 8019ada:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 8019ade:	431a      	orrs	r2, r3
 8019ae0:	b293      	uxth	r3, r2
 8019ae2:	b2b4      	uxth	r4, r6
 8019ae4:	1202      	asrs	r2, r0, #8
 8019ae6:	43f6      	mvns	r6, r6
 8019ae8:	b2f6      	uxtb	r6, r6
 8019aea:	121d      	asrs	r5, r3, #8
 8019aec:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
 8019af0:	fb12 f206 	smulbb	r2, r2, r6
 8019af4:	10c7      	asrs	r7, r0, #3
 8019af6:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 8019afa:	00c0      	lsls	r0, r0, #3
 8019afc:	fb05 2504 	mla	r5, r5, r4, r2
 8019b00:	b2c0      	uxtb	r0, r0
 8019b02:	10da      	asrs	r2, r3, #3
 8019b04:	00db      	lsls	r3, r3, #3
 8019b06:	b2db      	uxtb	r3, r3
 8019b08:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 8019b0c:	fb10 f006 	smulbb	r0, r0, r6
 8019b10:	b2ad      	uxth	r5, r5
 8019b12:	fb03 0004 	mla	r0, r3, r4, r0
 8019b16:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 8019b1a:	fb17 f706 	smulbb	r7, r7, r6
 8019b1e:	b280      	uxth	r0, r0
 8019b20:	1c6b      	adds	r3, r5, #1
 8019b22:	fb02 7204 	mla	r2, r2, r4, r7
 8019b26:	b292      	uxth	r2, r2
 8019b28:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8019b2c:	1c43      	adds	r3, r0, #1
 8019b2e:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 8019b32:	1c50      	adds	r0, r2, #1
 8019b34:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 8019b38:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 8019b3c:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8019b40:	0952      	lsrs	r2, r2, #5
 8019b42:	432b      	orrs	r3, r5
 8019b44:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8019b48:	4313      	orrs	r3, r2
 8019b4a:	800b      	strh	r3, [r1, #0]
 8019b4c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8019b50:	4680      	mov	r8, r0
 8019b52:	e75c      	b.n	8019a0e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x46>
 8019b54:	4684      	mov	ip, r0
 8019b56:	4680      	mov	r8, r0
 8019b58:	e767      	b.n	8019a2a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x62>
 8019b5a:	4684      	mov	ip, r0
 8019b5c:	e765      	b.n	8019a2a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x62>
 8019b5e:	4605      	mov	r5, r0
 8019b60:	e776      	b.n	8019a50 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x88>
 8019b62:	4603      	mov	r3, r0
 8019b64:	4605      	mov	r5, r0
 8019b66:	e782      	b.n	8019a6e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>
 8019b68:	4603      	mov	r3, r0
 8019b6a:	e780      	b.n	8019a6e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>

08019b6c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8019b6c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019b70:	b099      	sub	sp, #100	@ 0x64
 8019b72:	e9dd a523 	ldrd	sl, r5, [sp, #140]	@ 0x8c
 8019b76:	9215      	str	r2, [sp, #84]	@ 0x54
 8019b78:	9309      	str	r3, [sp, #36]	@ 0x24
 8019b7a:	9a27      	ldr	r2, [sp, #156]	@ 0x9c
 8019b7c:	f89d 30ac 	ldrb.w	r3, [sp, #172]	@ 0xac
 8019b80:	930d      	str	r3, [sp, #52]	@ 0x34
 8019b82:	910c      	str	r1, [sp, #48]	@ 0x30
 8019b84:	e9dd 1328 	ldrd	r1, r3, [sp, #160]	@ 0xa0
 8019b88:	9016      	str	r0, [sp, #88]	@ 0x58
 8019b8a:	6850      	ldr	r0, [r2, #4]
 8019b8c:	6812      	ldr	r2, [r2, #0]
 8019b8e:	fb00 1303 	mla	r3, r0, r3, r1
 8019b92:	eb02 0843 	add.w	r8, r2, r3, lsl #1
 8019b96:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 8019b98:	681b      	ldr	r3, [r3, #0]
 8019b9a:	930b      	str	r3, [sp, #44]	@ 0x2c
 8019b9c:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 8019b9e:	685e      	ldr	r6, [r3, #4]
 8019ba0:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8019ba2:	43db      	mvns	r3, r3
 8019ba4:	b2db      	uxtb	r3, r3
 8019ba6:	3604      	adds	r6, #4
 8019ba8:	930a      	str	r3, [sp, #40]	@ 0x28
 8019baa:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8019bac:	2b00      	cmp	r3, #0
 8019bae:	dc03      	bgt.n	8019bb8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 8019bb0:	9b15      	ldr	r3, [sp, #84]	@ 0x54
 8019bb2:	2b00      	cmp	r3, #0
 8019bb4:	f340 8225 	ble.w	801a002 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x496>
 8019bb8:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 8019bba:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8019bbe:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8019bc2:	1e48      	subs	r0, r1, #1
 8019bc4:	1e57      	subs	r7, r2, #1
 8019bc6:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8019bc8:	2b00      	cmp	r3, #0
 8019bca:	f340 80e3 	ble.w	8019d94 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 8019bce:	ea5f 4c2a 	movs.w	ip, sl, asr #16
 8019bd2:	ea4f 4325 	mov.w	r3, r5, asr #16
 8019bd6:	d406      	bmi.n	8019be6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8019bd8:	4584      	cmp	ip, r0
 8019bda:	da04      	bge.n	8019be6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8019bdc:	2b00      	cmp	r3, #0
 8019bde:	db02      	blt.n	8019be6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8019be0:	42bb      	cmp	r3, r7
 8019be2:	f2c0 80d8 	blt.w	8019d96 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 8019be6:	f11c 0c01 	adds.w	ip, ip, #1
 8019bea:	f100 80c9 	bmi.w	8019d80 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8019bee:	4561      	cmp	r1, ip
 8019bf0:	f2c0 80c6 	blt.w	8019d80 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8019bf4:	3301      	adds	r3, #1
 8019bf6:	f100 80c3 	bmi.w	8019d80 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8019bfa:	429a      	cmp	r2, r3
 8019bfc:	f2c0 80c0 	blt.w	8019d80 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8019c00:	f8dd b024 	ldr.w	fp, [sp, #36]	@ 0x24
 8019c04:	4647      	mov	r7, r8
 8019c06:	f1bb 0f00 	cmp.w	fp, #0
 8019c0a:	f340 80e3 	ble.w	8019dd4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x268>
 8019c0e:	9a2a      	ldr	r2, [sp, #168]	@ 0xa8
 8019c10:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 8019c12:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 8019c16:	689b      	ldr	r3, [r3, #8]
 8019c18:	ea5f 422a 	movs.w	r2, sl, asr #16
 8019c1c:	ea4f 4c25 	mov.w	ip, r5, asr #16
 8019c20:	f3ca 3003 	ubfx	r0, sl, #12, #4
 8019c24:	f3c5 3103 	ubfx	r1, r5, #12, #4
 8019c28:	f100 8121 	bmi.w	8019e6e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 8019c2c:	f103 39ff 	add.w	r9, r3, #4294967295
 8019c30:	454a      	cmp	r2, r9
 8019c32:	f280 811c 	bge.w	8019e6e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 8019c36:	f1bc 0f00 	cmp.w	ip, #0
 8019c3a:	f2c0 8118 	blt.w	8019e6e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 8019c3e:	f10e 39ff 	add.w	r9, lr, #4294967295
 8019c42:	45cc      	cmp	ip, r9
 8019c44:	f280 8113 	bge.w	8019e6e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 8019c48:	b21b      	sxth	r3, r3
 8019c4a:	fb0c 2203 	mla	r2, ip, r3, r2
 8019c4e:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 8019c50:	eb04 0902 	add.w	r9, r4, r2
 8019c54:	5ca2      	ldrb	r2, [r4, r2]
 8019c56:	f836 e012 	ldrh.w	lr, [r6, r2, lsl #1]
 8019c5a:	2800      	cmp	r0, #0
 8019c5c:	f000 80fe 	beq.w	8019e5c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 8019c60:	f899 2001 	ldrb.w	r2, [r9, #1]
 8019c64:	f836 2012 	ldrh.w	r2, [r6, r2, lsl #1]
 8019c68:	9211      	str	r2, [sp, #68]	@ 0x44
 8019c6a:	b151      	cbz	r1, 8019c82 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 8019c6c:	eb09 0203 	add.w	r2, r9, r3
 8019c70:	f819 3003 	ldrb.w	r3, [r9, r3]
 8019c74:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8019c78:	930f      	str	r3, [sp, #60]	@ 0x3c
 8019c7a:	7853      	ldrb	r3, [r2, #1]
 8019c7c:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8019c80:	9312      	str	r3, [sp, #72]	@ 0x48
 8019c82:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 8019c84:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 8019c86:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 8019c8a:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
 8019c8e:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 8019c92:	ea4c 0c03 	orr.w	ip, ip, r3
 8019c96:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 8019c98:	041b      	lsls	r3, r3, #16
 8019c9a:	fb10 f201 	smulbb	r2, r0, r1
 8019c9e:	f424 64fc 	bic.w	r4, r4, #2016	@ 0x7e0
 8019ca2:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 8019ca6:	10d2      	asrs	r2, r2, #3
 8019ca8:	4323      	orrs	r3, r4
 8019caa:	ebc2 0940 	rsb	r9, r2, r0, lsl #1
 8019cae:	4353      	muls	r3, r2
 8019cb0:	fb09 330c 	mla	r3, r9, ip, r3
 8019cb4:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
 8019cb8:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
 8019cbc:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
 8019cc0:	ea4c 0e0e 	orr.w	lr, ip, lr
 8019cc4:	f1c1 0c10 	rsb	ip, r1, #16
 8019cc8:	ebac 0c00 	sub.w	ip, ip, r0
 8019ccc:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 8019cd0:	fb0c 3c0e 	mla	ip, ip, lr, r3
 8019cd4:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8019cd6:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 8019cd8:	0418      	lsls	r0, r3, #16
 8019cda:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
 8019cde:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 8019ce2:	4318      	orrs	r0, r3
 8019ce4:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
 8019ce8:	fb02 c200 	mla	r2, r2, r0, ip
 8019cec:	0d53      	lsrs	r3, r2, #21
 8019cee:	0952      	lsrs	r2, r2, #5
 8019cf0:	8838      	ldrh	r0, [r7, #0]
 8019cf2:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 8019cf6:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 8019cfa:	431a      	orrs	r2, r3
 8019cfc:	b292      	uxth	r2, r2
 8019cfe:	1201      	asrs	r1, r0, #8
 8019d00:	f8bd 3034 	ldrh.w	r3, [sp, #52]	@ 0x34
 8019d04:	ea4f 2c22 	mov.w	ip, r2, asr #8
 8019d08:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 8019d0c:	fb11 f104 	smulbb	r1, r1, r4
 8019d10:	ea4f 0ee0 	mov.w	lr, r0, asr #3
 8019d14:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 8019d18:	00c0      	lsls	r0, r0, #3
 8019d1a:	fb0c 1c03 	mla	ip, ip, r3, r1
 8019d1e:	f00e 0efc 	and.w	lr, lr, #252	@ 0xfc
 8019d22:	10d1      	asrs	r1, r2, #3
 8019d24:	b2c0      	uxtb	r0, r0
 8019d26:	00d2      	lsls	r2, r2, #3
 8019d28:	b2d2      	uxtb	r2, r2
 8019d2a:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 8019d2e:	fb1e fe04 	smulbb	lr, lr, r4
 8019d32:	fb10 f004 	smulbb	r0, r0, r4
 8019d36:	fa1f fc8c 	uxth.w	ip, ip
 8019d3a:	fb01 e103 	mla	r1, r1, r3, lr
 8019d3e:	fb02 0303 	mla	r3, r2, r3, r0
 8019d42:	b29a      	uxth	r2, r3
 8019d44:	f10c 0301 	add.w	r3, ip, #1
 8019d48:	b289      	uxth	r1, r1
 8019d4a:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 8019d4e:	1c53      	adds	r3, r2, #1
 8019d50:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8019d54:	1c4a      	adds	r2, r1, #1
 8019d56:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8019d5a:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 8019d5e:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8019d62:	0949      	lsrs	r1, r1, #5
 8019d64:	ea43 030c 	orr.w	r3, r3, ip
 8019d68:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 8019d6c:	430b      	orrs	r3, r1
 8019d6e:	803b      	strh	r3, [r7, #0]
 8019d70:	9b25      	ldr	r3, [sp, #148]	@ 0x94
 8019d72:	449a      	add	sl, r3
 8019d74:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 8019d76:	3702      	adds	r7, #2
 8019d78:	441d      	add	r5, r3
 8019d7a:	f10b 3bff 	add.w	fp, fp, #4294967295
 8019d7e:	e742      	b.n	8019c06 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 8019d80:	9b25      	ldr	r3, [sp, #148]	@ 0x94
 8019d82:	449a      	add	sl, r3
 8019d84:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 8019d86:	441d      	add	r5, r3
 8019d88:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8019d8a:	3b01      	subs	r3, #1
 8019d8c:	9309      	str	r3, [sp, #36]	@ 0x24
 8019d8e:	f108 0802 	add.w	r8, r8, #2
 8019d92:	e718      	b.n	8019bc6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
 8019d94:	d023      	beq.n	8019dde <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x272>
 8019d96:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8019d98:	9825      	ldr	r0, [sp, #148]	@ 0x94
 8019d9a:	3b01      	subs	r3, #1
 8019d9c:	fb00 a003 	mla	r0, r0, r3, sl
 8019da0:	1400      	asrs	r0, r0, #16
 8019da2:	f53f af2d 	bmi.w	8019c00 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8019da6:	3901      	subs	r1, #1
 8019da8:	4288      	cmp	r0, r1
 8019daa:	f6bf af29 	bge.w	8019c00 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8019dae:	9926      	ldr	r1, [sp, #152]	@ 0x98
 8019db0:	fb01 5303 	mla	r3, r1, r3, r5
 8019db4:	141b      	asrs	r3, r3, #16
 8019db6:	f53f af23 	bmi.w	8019c00 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8019dba:	3a01      	subs	r2, #1
 8019dbc:	4293      	cmp	r3, r2
 8019dbe:	f6bf af1f 	bge.w	8019c00 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8019dc2:	f8dd e024 	ldr.w	lr, [sp, #36]	@ 0x24
 8019dc6:	f8bd 9034 	ldrh.w	r9, [sp, #52]	@ 0x34
 8019dca:	f8cd 8038 	str.w	r8, [sp, #56]	@ 0x38
 8019dce:	f1be 0f00 	cmp.w	lr, #0
 8019dd2:	dc6c      	bgt.n	8019eae <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
 8019dd4:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8019dd6:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 8019dda:	eb08 0844 	add.w	r8, r8, r4, lsl #1
 8019dde:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8019de0:	2b00      	cmp	r3, #0
 8019de2:	f340 810e 	ble.w	801a002 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x496>
 8019de6:	ee30 0a04 	vadd.f32	s0, s0, s8
 8019dea:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8019dee:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8019df2:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 8019df4:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8019df8:	ee31 1a05 	vadd.f32	s2, s2, s10
 8019dfc:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8019e00:	eef0 6a62 	vmov.f32	s13, s5
 8019e04:	ee61 7a27 	vmul.f32	s15, s2, s15
 8019e08:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8019e0c:	ee77 2a62 	vsub.f32	s5, s14, s5
 8019e10:	ee16 aa90 	vmov	sl, s13
 8019e14:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8019e18:	eef0 6a43 	vmov.f32	s13, s6
 8019e1c:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8019e20:	ee12 2a90 	vmov	r2, s5
 8019e24:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8019e28:	fb92 f3f3 	sdiv	r3, r2, r3
 8019e2c:	ee13 2a10 	vmov	r2, s6
 8019e30:	9325      	str	r3, [sp, #148]	@ 0x94
 8019e32:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 8019e34:	fb92 f3f3 	sdiv	r3, r2, r3
 8019e38:	9326      	str	r3, [sp, #152]	@ 0x98
 8019e3a:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8019e3c:	9a15      	ldr	r2, [sp, #84]	@ 0x54
 8019e3e:	3b01      	subs	r3, #1
 8019e40:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8019e44:	930c      	str	r3, [sp, #48]	@ 0x30
 8019e46:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 8019e48:	bf08      	it	eq
 8019e4a:	4613      	moveq	r3, r2
 8019e4c:	ee16 5a90 	vmov	r5, s13
 8019e50:	9309      	str	r3, [sp, #36]	@ 0x24
 8019e52:	eeb0 3a67 	vmov.f32	s6, s15
 8019e56:	eef0 2a47 	vmov.f32	s5, s14
 8019e5a:	e6a6      	b.n	8019baa <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 8019e5c:	2900      	cmp	r1, #0
 8019e5e:	f43f af10 	beq.w	8019c82 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 8019e62:	f819 3003 	ldrb.w	r3, [r9, r3]
 8019e66:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8019e6a:	930f      	str	r3, [sp, #60]	@ 0x3c
 8019e6c:	e709      	b.n	8019c82 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 8019e6e:	f112 0901 	adds.w	r9, r2, #1
 8019e72:	f53f af7d 	bmi.w	8019d70 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 8019e76:	454b      	cmp	r3, r9
 8019e78:	f6ff af7a 	blt.w	8019d70 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 8019e7c:	f11c 0901 	adds.w	r9, ip, #1
 8019e80:	f53f af76 	bmi.w	8019d70 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 8019e84:	45ce      	cmp	lr, r9
 8019e86:	f6ff af73 	blt.w	8019d70 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 8019e8a:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 8019e8c:	9202      	str	r2, [sp, #8]
 8019e8e:	b21b      	sxth	r3, r3
 8019e90:	fa0f f28e 	sxth.w	r2, lr
 8019e94:	e9cd 1405 	strd	r1, r4, [sp, #20]
 8019e98:	e9cd c003 	strd	ip, r0, [sp, #12]
 8019e9c:	9201      	str	r2, [sp, #4]
 8019e9e:	9300      	str	r3, [sp, #0]
 8019ea0:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 8019ea2:	9816      	ldr	r0, [sp, #88]	@ 0x58
 8019ea4:	4633      	mov	r3, r6
 8019ea6:	4639      	mov	r1, r7
 8019ea8:	f7ff fd8e 	bl	80199c8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>
 8019eac:	e760      	b.n	8019d70 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 8019eae:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 8019eb0:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 8019eb2:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 8019eb6:	ea4f 422a 	mov.w	r2, sl, asr #16
 8019eba:	1429      	asrs	r1, r5, #16
 8019ebc:	fb03 2101 	mla	r1, r3, r1, r2
 8019ec0:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 8019ec2:	440a      	add	r2, r1
 8019ec4:	5c61      	ldrb	r1, [r4, r1]
 8019ec6:	f3ca 3c03 	ubfx	ip, sl, #12, #4
 8019eca:	f3c5 3003 	ubfx	r0, r5, #12, #4
 8019ece:	f836 1011 	ldrh.w	r1, [r6, r1, lsl #1]
 8019ed2:	f1bc 0f00 	cmp.w	ip, #0
 8019ed6:	f000 808c 	beq.w	8019ff2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x486>
 8019eda:	7857      	ldrb	r7, [r2, #1]
 8019edc:	f836 4017 	ldrh.w	r4, [r6, r7, lsl #1]
 8019ee0:	9413      	str	r4, [sp, #76]	@ 0x4c
 8019ee2:	b140      	cbz	r0, 8019ef6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 8019ee4:	18d7      	adds	r7, r2, r3
 8019ee6:	5cd3      	ldrb	r3, [r2, r3]
 8019ee8:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8019eec:	9310      	str	r3, [sp, #64]	@ 0x40
 8019eee:	787b      	ldrb	r3, [r7, #1]
 8019ef0:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8019ef4:	9314      	str	r3, [sp, #80]	@ 0x50
 8019ef6:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 8019ef8:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 8019efa:	fb1c f200 	smulbb	r2, ip, r0
 8019efe:	041f      	lsls	r7, r3, #16
 8019f00:	10d2      	asrs	r2, r2, #3
 8019f02:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 8019f06:	f007 67fc 	and.w	r7, r7, #132120576	@ 0x7e00000
 8019f0a:	431f      	orrs	r7, r3
 8019f0c:	ebc2 034c 	rsb	r3, r2, ip, lsl #1
 8019f10:	9317      	str	r3, [sp, #92]	@ 0x5c
 8019f12:	9b14      	ldr	r3, [sp, #80]	@ 0x50
 8019f14:	041b      	lsls	r3, r3, #16
 8019f16:	f424 6bfc 	bic.w	fp, r4, #2016	@ 0x7e0
 8019f1a:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 8019f1e:	ea43 030b 	orr.w	r3, r3, fp
 8019f22:	9c17      	ldr	r4, [sp, #92]	@ 0x5c
 8019f24:	4353      	muls	r3, r2
 8019f26:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 8019f2a:	fb04 3707 	mla	r7, r4, r7, r3
 8019f2e:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
 8019f32:	f00b 63fc 	and.w	r3, fp, #132120576	@ 0x7e00000
 8019f36:	ea43 0b01 	orr.w	fp, r3, r1
 8019f3a:	f1c0 0110 	rsb	r1, r0, #16
 8019f3e:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8019f40:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 8019f42:	eba1 0c0c 	sub.w	ip, r1, ip
 8019f46:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 8019f4a:	fb0c 770b 	mla	r7, ip, fp, r7
 8019f4e:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 8019f52:	f423 6bfc 	bic.w	fp, r3, #2016	@ 0x7e0
 8019f56:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
 8019f5a:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 8019f5e:	ea4c 0c0b 	orr.w	ip, ip, fp
 8019f62:	fb02 770c 	mla	r7, r2, ip, r7
 8019f66:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 8019f68:	0d79      	lsrs	r1, r7, #21
 8019f6a:	097f      	lsrs	r7, r7, #5
 8019f6c:	8812      	ldrh	r2, [r2, #0]
 8019f6e:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 8019f72:	f427 67fc 	bic.w	r7, r7, #2016	@ 0x7e0
 8019f76:	430f      	orrs	r7, r1
 8019f78:	b2bb      	uxth	r3, r7
 8019f7a:	1211      	asrs	r1, r2, #8
 8019f7c:	1218      	asrs	r0, r3, #8
 8019f7e:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 8019f82:	fb11 f104 	smulbb	r1, r1, r4
 8019f86:	10d7      	asrs	r7, r2, #3
 8019f88:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 8019f8c:	00d2      	lsls	r2, r2, #3
 8019f8e:	fb00 1009 	mla	r0, r0, r9, r1
 8019f92:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 8019f96:	10d9      	asrs	r1, r3, #3
 8019f98:	b2d2      	uxtb	r2, r2
 8019f9a:	00db      	lsls	r3, r3, #3
 8019f9c:	fb17 f704 	smulbb	r7, r7, r4
 8019fa0:	fb12 f204 	smulbb	r2, r2, r4
 8019fa4:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 8019fa8:	b2db      	uxtb	r3, r3
 8019faa:	b280      	uxth	r0, r0
 8019fac:	fb01 7109 	mla	r1, r1, r9, r7
 8019fb0:	fb03 2309 	mla	r3, r3, r9, r2
 8019fb4:	b29b      	uxth	r3, r3
 8019fb6:	b289      	uxth	r1, r1
 8019fb8:	1c42      	adds	r2, r0, #1
 8019fba:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8019fbe:	1c4f      	adds	r7, r1, #1
 8019fc0:	1c5a      	adds	r2, r3, #1
 8019fc2:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 8019fc6:	eb07 2111 	add.w	r1, r7, r1, lsr #8
 8019fca:	f400 4078 	and.w	r0, r0, #63488	@ 0xf800
 8019fce:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8019fd2:	0949      	lsrs	r1, r1, #5
 8019fd4:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8019fd6:	4310      	orrs	r0, r2
 8019fd8:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 8019fdc:	4308      	orrs	r0, r1
 8019fde:	f823 0b02 	strh.w	r0, [r3], #2
 8019fe2:	930e      	str	r3, [sp, #56]	@ 0x38
 8019fe4:	9b25      	ldr	r3, [sp, #148]	@ 0x94
 8019fe6:	449a      	add	sl, r3
 8019fe8:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 8019fea:	f10e 3eff 	add.w	lr, lr, #4294967295
 8019fee:	441d      	add	r5, r3
 8019ff0:	e6ed      	b.n	8019dce <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x262>
 8019ff2:	2800      	cmp	r0, #0
 8019ff4:	f43f af7f 	beq.w	8019ef6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 8019ff8:	5cd3      	ldrb	r3, [r2, r3]
 8019ffa:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8019ffe:	9310      	str	r3, [sp, #64]	@ 0x40
 801a000:	e779      	b.n	8019ef6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 801a002:	b019      	add	sp, #100	@ 0x64
 801a004:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801a008 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
 801a008:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801a00c:	e9dd 480a 	ldrd	r4, r8, [sp, #40]	@ 0x28
 801a010:	f9bd e020 	ldrsh.w	lr, [sp, #32]
 801a014:	f9bd a024 	ldrsh.w	sl, [sp, #36]	@ 0x24
 801a018:	f89d 5030 	ldrb.w	r5, [sp, #48]	@ 0x30
 801a01c:	f89d 6034 	ldrb.w	r6, [sp, #52]	@ 0x34
 801a020:	8808      	ldrh	r0, [r1, #0]
 801a022:	fb08 470e 	mla	r7, r8, lr, r4
 801a026:	f1b8 0f00 	cmp.w	r8, #0
 801a02a:	eb02 0907 	add.w	r9, r2, r7
 801a02e:	db67      	blt.n	801a100 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf8>
 801a030:	45c2      	cmp	sl, r8
 801a032:	dd65      	ble.n	801a100 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf8>
 801a034:	2c00      	cmp	r4, #0
 801a036:	db61      	blt.n	801a0fc <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf4>
 801a038:	45a6      	cmp	lr, r4
 801a03a:	dd5f      	ble.n	801a0fc <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf4>
 801a03c:	5dd2      	ldrb	r2, [r2, r7]
 801a03e:	f833 c012 	ldrh.w	ip, [r3, r2, lsl #1]
 801a042:	1c62      	adds	r2, r4, #1
 801a044:	d45f      	bmi.n	801a106 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 801a046:	4596      	cmp	lr, r2
 801a048:	dd5d      	ble.n	801a106 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 801a04a:	2d00      	cmp	r5, #0
 801a04c:	d05b      	beq.n	801a106 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 801a04e:	f899 2001 	ldrb.w	r2, [r9, #1]
 801a052:	f833 7012 	ldrh.w	r7, [r3, r2, lsl #1]
 801a056:	f118 0801 	adds.w	r8, r8, #1
 801a05a:	d458      	bmi.n	801a10e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 801a05c:	45c2      	cmp	sl, r8
 801a05e:	dd56      	ble.n	801a10e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 801a060:	2e00      	cmp	r6, #0
 801a062:	d054      	beq.n	801a10e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 801a064:	2c00      	cmp	r4, #0
 801a066:	db50      	blt.n	801a10a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x102>
 801a068:	45a6      	cmp	lr, r4
 801a06a:	dd4e      	ble.n	801a10a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x102>
 801a06c:	f819 200e 	ldrb.w	r2, [r9, lr]
 801a070:	f833 2012 	ldrh.w	r2, [r3, r2, lsl #1]
 801a074:	3401      	adds	r4, #1
 801a076:	d407      	bmi.n	801a088 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 801a078:	45a6      	cmp	lr, r4
 801a07a:	dd05      	ble.n	801a088 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 801a07c:	b125      	cbz	r5, 801a088 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 801a07e:	44ce      	add	lr, r9
 801a080:	f89e 0001 	ldrb.w	r0, [lr, #1]
 801a084:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
 801a088:	ea4f 430c 	mov.w	r3, ip, lsl #16
 801a08c:	fb15 f406 	smulbb	r4, r5, r6
 801a090:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 801a094:	ea4f 4e07 	mov.w	lr, r7, lsl #16
 801a098:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
 801a09c:	f3c4 04c7 	ubfx	r4, r4, #3, #8
 801a0a0:	ea43 0c0c 	orr.w	ip, r3, ip
 801a0a4:	f00e 6efc 	and.w	lr, lr, #132120576	@ 0x7e00000
 801a0a8:	f1c6 0310 	rsb	r3, r6, #16
 801a0ac:	f427 67fc 	bic.w	r7, r7, #2016	@ 0x7e0
 801a0b0:	1b5b      	subs	r3, r3, r5
 801a0b2:	ea4e 0707 	orr.w	r7, lr, r7
 801a0b6:	ebc4 0545 	rsb	r5, r4, r5, lsl #1
 801a0ba:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 801a0be:	437d      	muls	r5, r7
 801a0c0:	fb03 5c0c 	mla	ip, r3, ip, r5
 801a0c4:	0403      	lsls	r3, r0, #16
 801a0c6:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 801a0ca:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 801a0ce:	4318      	orrs	r0, r3
 801a0d0:	0413      	lsls	r3, r2, #16
 801a0d2:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 801a0d6:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801a0da:	4313      	orrs	r3, r2
 801a0dc:	fb04 c000 	mla	r0, r4, r0, ip
 801a0e0:	ebc4 0646 	rsb	r6, r4, r6, lsl #1
 801a0e4:	fb06 0003 	mla	r0, r6, r3, r0
 801a0e8:	0d43      	lsrs	r3, r0, #21
 801a0ea:	0940      	lsrs	r0, r0, #5
 801a0ec:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801a0f0:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 801a0f4:	4318      	orrs	r0, r3
 801a0f6:	8008      	strh	r0, [r1, #0]
 801a0f8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801a0fc:	4684      	mov	ip, r0
 801a0fe:	e7a0      	b.n	801a042 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x3a>
 801a100:	4607      	mov	r7, r0
 801a102:	4684      	mov	ip, r0
 801a104:	e7a7      	b.n	801a056 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4e>
 801a106:	4607      	mov	r7, r0
 801a108:	e7a5      	b.n	801a056 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4e>
 801a10a:	4602      	mov	r2, r0
 801a10c:	e7b2      	b.n	801a074 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x6c>
 801a10e:	4602      	mov	r2, r0
 801a110:	e7ba      	b.n	801a088 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>

0801a112 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801a112:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a116:	b093      	sub	sp, #76	@ 0x4c
 801a118:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	@ 0x74
 801a11c:	920f      	str	r2, [sp, #60]	@ 0x3c
 801a11e:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 801a120:	9108      	str	r1, [sp, #32]
 801a122:	9306      	str	r3, [sp, #24]
 801a124:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	@ 0x88
 801a128:	9010      	str	r0, [sp, #64]	@ 0x40
 801a12a:	6850      	ldr	r0, [r2, #4]
 801a12c:	6812      	ldr	r2, [r2, #0]
 801a12e:	fb00 1303 	mla	r3, r0, r3, r1
 801a132:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 801a136:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801a138:	681b      	ldr	r3, [r3, #0]
 801a13a:	9307      	str	r3, [sp, #28]
 801a13c:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801a13e:	685f      	ldr	r7, [r3, #4]
 801a140:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 801a144:	3704      	adds	r7, #4
 801a146:	9b08      	ldr	r3, [sp, #32]
 801a148:	2b00      	cmp	r3, #0
 801a14a:	dc03      	bgt.n	801a154 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42>
 801a14c:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 801a14e:	2b00      	cmp	r3, #0
 801a150:	f340 81b2 	ble.w	801a4b8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 801a154:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801a156:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801a15a:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801a15e:	1e48      	subs	r0, r1, #1
 801a160:	f102 3cff 	add.w	ip, r2, #4294967295
 801a164:	9b06      	ldr	r3, [sp, #24]
 801a166:	2b00      	cmp	r3, #0
 801a168:	f340 80a9 	ble.w	801a2be <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
 801a16c:	ea5f 4e24 	movs.w	lr, r4, asr #16
 801a170:	ea4f 4326 	mov.w	r3, r6, asr #16
 801a174:	d406      	bmi.n	801a184 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801a176:	4586      	cmp	lr, r0
 801a178:	da04      	bge.n	801a184 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801a17a:	2b00      	cmp	r3, #0
 801a17c:	db02      	blt.n	801a184 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801a17e:	4563      	cmp	r3, ip
 801a180:	f2c0 809e 	blt.w	801a2c0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 801a184:	f11e 0e01 	adds.w	lr, lr, #1
 801a188:	f100 808f 	bmi.w	801a2aa <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801a18c:	4571      	cmp	r1, lr
 801a18e:	f2c0 808c 	blt.w	801a2aa <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801a192:	3301      	adds	r3, #1
 801a194:	f100 8089 	bmi.w	801a2aa <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801a198:	429a      	cmp	r2, r3
 801a19a:	f2c0 8086 	blt.w	801a2aa <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801a19e:	f8dd b018 	ldr.w	fp, [sp, #24]
 801a1a2:	46c8      	mov	r8, r9
 801a1a4:	f1bb 0f00 	cmp.w	fp, #0
 801a1a8:	f340 80a6 	ble.w	801a2f8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
 801a1ac:	9a24      	ldr	r2, [sp, #144]	@ 0x90
 801a1ae:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801a1b0:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 801a1b4:	689b      	ldr	r3, [r3, #8]
 801a1b6:	1422      	asrs	r2, r4, #16
 801a1b8:	ea4f 4c26 	mov.w	ip, r6, asr #16
 801a1bc:	f3c4 3003 	ubfx	r0, r4, #12, #4
 801a1c0:	f3c6 3103 	ubfx	r1, r6, #12, #4
 801a1c4:	f100 80e3 	bmi.w	801a38e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 801a1c8:	f103 3aff 	add.w	sl, r3, #4294967295
 801a1cc:	4552      	cmp	r2, sl
 801a1ce:	f280 80de 	bge.w	801a38e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 801a1d2:	f1bc 0f00 	cmp.w	ip, #0
 801a1d6:	f2c0 80da 	blt.w	801a38e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 801a1da:	f10e 3aff 	add.w	sl, lr, #4294967295
 801a1de:	45d4      	cmp	ip, sl
 801a1e0:	f280 80d5 	bge.w	801a38e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 801a1e4:	b21b      	sxth	r3, r3
 801a1e6:	fb0c 2203 	mla	r2, ip, r3, r2
 801a1ea:	9d07      	ldr	r5, [sp, #28]
 801a1ec:	eb05 0a02 	add.w	sl, r5, r2
 801a1f0:	5caa      	ldrb	r2, [r5, r2]
 801a1f2:	f837 e012 	ldrh.w	lr, [r7, r2, lsl #1]
 801a1f6:	2800      	cmp	r0, #0
 801a1f8:	f000 80c0 	beq.w	801a37c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26a>
 801a1fc:	f89a 2001 	ldrb.w	r2, [sl, #1]
 801a200:	f837 2012 	ldrh.w	r2, [r7, r2, lsl #1]
 801a204:	920b      	str	r2, [sp, #44]	@ 0x2c
 801a206:	b151      	cbz	r1, 801a21e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 801a208:	eb0a 0203 	add.w	r2, sl, r3
 801a20c:	f81a 3003 	ldrb.w	r3, [sl, r3]
 801a210:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801a214:	9309      	str	r3, [sp, #36]	@ 0x24
 801a216:	7853      	ldrb	r3, [r2, #1]
 801a218:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801a21c:	930c      	str	r3, [sp, #48]	@ 0x30
 801a21e:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801a220:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 801a222:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 801a226:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
 801a22a:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 801a22e:	ea4c 0c03 	orr.w	ip, ip, r3
 801a232:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801a234:	041b      	lsls	r3, r3, #16
 801a236:	fb10 f201 	smulbb	r2, r0, r1
 801a23a:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 801a23e:	f425 65fc 	bic.w	r5, r5, #2016	@ 0x7e0
 801a242:	10d2      	asrs	r2, r2, #3
 801a244:	432b      	orrs	r3, r5
 801a246:	ebc2 0a40 	rsb	sl, r2, r0, lsl #1
 801a24a:	4353      	muls	r3, r2
 801a24c:	fb0a 330c 	mla	r3, sl, ip, r3
 801a250:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
 801a254:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
 801a258:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
 801a25c:	ea4c 0e0e 	orr.w	lr, ip, lr
 801a260:	f1c1 0c10 	rsb	ip, r1, #16
 801a264:	ebac 0c00 	sub.w	ip, ip, r0
 801a268:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 801a26c:	fb0c 3c0e 	mla	ip, ip, lr, r3
 801a270:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801a272:	0418      	lsls	r0, r3, #16
 801a274:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
 801a278:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 801a27c:	4318      	orrs	r0, r3
 801a27e:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
 801a282:	fb02 c200 	mla	r2, r2, r0, ip
 801a286:	0d53      	lsrs	r3, r2, #21
 801a288:	0952      	lsrs	r2, r2, #5
 801a28a:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801a28e:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801a292:	431a      	orrs	r2, r3
 801a294:	f8a8 2000 	strh.w	r2, [r8]
 801a298:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 801a29a:	441c      	add	r4, r3
 801a29c:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801a29e:	f108 0802 	add.w	r8, r8, #2
 801a2a2:	441e      	add	r6, r3
 801a2a4:	f10b 3bff 	add.w	fp, fp, #4294967295
 801a2a8:	e77c      	b.n	801a1a4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801a2aa:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 801a2ac:	441c      	add	r4, r3
 801a2ae:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801a2b0:	441e      	add	r6, r3
 801a2b2:	9b06      	ldr	r3, [sp, #24]
 801a2b4:	3b01      	subs	r3, #1
 801a2b6:	9306      	str	r3, [sp, #24]
 801a2b8:	f109 0902 	add.w	r9, r9, #2
 801a2bc:	e752      	b.n	801a164 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 801a2be:	d020      	beq.n	801a302 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801a2c0:	9b06      	ldr	r3, [sp, #24]
 801a2c2:	981f      	ldr	r0, [sp, #124]	@ 0x7c
 801a2c4:	3b01      	subs	r3, #1
 801a2c6:	fb00 4003 	mla	r0, r0, r3, r4
 801a2ca:	1400      	asrs	r0, r0, #16
 801a2cc:	f53f af67 	bmi.w	801a19e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801a2d0:	3901      	subs	r1, #1
 801a2d2:	4288      	cmp	r0, r1
 801a2d4:	f6bf af63 	bge.w	801a19e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801a2d8:	9920      	ldr	r1, [sp, #128]	@ 0x80
 801a2da:	fb01 6303 	mla	r3, r1, r3, r6
 801a2de:	141b      	asrs	r3, r3, #16
 801a2e0:	f53f af5d 	bmi.w	801a19e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801a2e4:	3a01      	subs	r2, #1
 801a2e6:	4293      	cmp	r3, r2
 801a2e8:	f6bf af59 	bge.w	801a19e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801a2ec:	f8dd 8018 	ldr.w	r8, [sp, #24]
 801a2f0:	46ca      	mov	sl, r9
 801a2f2:	f1b8 0f00 	cmp.w	r8, #0
 801a2f6:	dc67      	bgt.n	801a3c8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 801a2f8:	9b06      	ldr	r3, [sp, #24]
 801a2fa:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 801a2fe:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 801a302:	9b08      	ldr	r3, [sp, #32]
 801a304:	2b00      	cmp	r3, #0
 801a306:	f340 80d7 	ble.w	801a4b8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 801a30a:	ee30 0a04 	vadd.f32	s0, s0, s8
 801a30e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801a312:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801a316:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801a318:	ee31 1a05 	vadd.f32	s2, s2, s10
 801a31c:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801a320:	eeb0 6a62 	vmov.f32	s12, s5
 801a324:	ee61 7a27 	vmul.f32	s15, s2, s15
 801a328:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801a32c:	ee77 2a62 	vsub.f32	s5, s14, s5
 801a330:	ee16 4a10 	vmov	r4, s12
 801a334:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801a338:	eeb0 6a43 	vmov.f32	s12, s6
 801a33c:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801a340:	ee12 2a90 	vmov	r2, s5
 801a344:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801a348:	fb92 f3f3 	sdiv	r3, r2, r3
 801a34c:	ee13 2a10 	vmov	r2, s6
 801a350:	931f      	str	r3, [sp, #124]	@ 0x7c
 801a352:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801a354:	fb92 f3f3 	sdiv	r3, r2, r3
 801a358:	9320      	str	r3, [sp, #128]	@ 0x80
 801a35a:	9b08      	ldr	r3, [sp, #32]
 801a35c:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 801a35e:	3b01      	subs	r3, #1
 801a360:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801a364:	9308      	str	r3, [sp, #32]
 801a366:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801a368:	bf08      	it	eq
 801a36a:	4613      	moveq	r3, r2
 801a36c:	ee16 6a10 	vmov	r6, s12
 801a370:	9306      	str	r3, [sp, #24]
 801a372:	eeb0 3a67 	vmov.f32	s6, s15
 801a376:	eef0 2a47 	vmov.f32	s5, s14
 801a37a:	e6e4      	b.n	801a146 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34>
 801a37c:	2900      	cmp	r1, #0
 801a37e:	f43f af4e 	beq.w	801a21e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 801a382:	f81a 3003 	ldrb.w	r3, [sl, r3]
 801a386:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801a38a:	9309      	str	r3, [sp, #36]	@ 0x24
 801a38c:	e747      	b.n	801a21e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 801a38e:	f112 0a01 	adds.w	sl, r2, #1
 801a392:	d481      	bmi.n	801a298 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801a394:	4553      	cmp	r3, sl
 801a396:	f6ff af7f 	blt.w	801a298 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801a39a:	f11c 0a01 	adds.w	sl, ip, #1
 801a39e:	f53f af7b 	bmi.w	801a298 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801a3a2:	45d6      	cmp	lr, sl
 801a3a4:	f6ff af78 	blt.w	801a298 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801a3a8:	e9cd 2c02 	strd	r2, ip, [sp, #8]
 801a3ac:	b21b      	sxth	r3, r3
 801a3ae:	fa0f f28e 	sxth.w	r2, lr
 801a3b2:	e9cd 0104 	strd	r0, r1, [sp, #16]
 801a3b6:	9201      	str	r2, [sp, #4]
 801a3b8:	9300      	str	r3, [sp, #0]
 801a3ba:	9a07      	ldr	r2, [sp, #28]
 801a3bc:	9810      	ldr	r0, [sp, #64]	@ 0x40
 801a3be:	463b      	mov	r3, r7
 801a3c0:	4641      	mov	r1, r8
 801a3c2:	f7ff fe21 	bl	801a008 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
 801a3c6:	e767      	b.n	801a298 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801a3c8:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801a3ca:	9d07      	ldr	r5, [sp, #28]
 801a3cc:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 801a3d0:	1422      	asrs	r2, r4, #16
 801a3d2:	1431      	asrs	r1, r6, #16
 801a3d4:	fb03 2101 	mla	r1, r3, r1, r2
 801a3d8:	9a07      	ldr	r2, [sp, #28]
 801a3da:	440a      	add	r2, r1
 801a3dc:	5c69      	ldrb	r1, [r5, r1]
 801a3de:	f3c4 3e03 	ubfx	lr, r4, #12, #4
 801a3e2:	f3c6 3003 	ubfx	r0, r6, #12, #4
 801a3e6:	f837 1011 	ldrh.w	r1, [r7, r1, lsl #1]
 801a3ea:	f1be 0f00 	cmp.w	lr, #0
 801a3ee:	d05c      	beq.n	801a4aa <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x398>
 801a3f0:	f892 c001 	ldrb.w	ip, [r2, #1]
 801a3f4:	f837 501c 	ldrh.w	r5, [r7, ip, lsl #1]
 801a3f8:	950d      	str	r5, [sp, #52]	@ 0x34
 801a3fa:	b150      	cbz	r0, 801a412 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 801a3fc:	eb02 0c03 	add.w	ip, r2, r3
 801a400:	5cd3      	ldrb	r3, [r2, r3]
 801a402:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801a406:	930a      	str	r3, [sp, #40]	@ 0x28
 801a408:	f89c 3001 	ldrb.w	r3, [ip, #1]
 801a40c:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801a410:	930e      	str	r3, [sp, #56]	@ 0x38
 801a412:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801a414:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 801a416:	fb1e f200 	smulbb	r2, lr, r0
 801a41a:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 801a41e:	10d2      	asrs	r2, r2, #3
 801a420:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 801a424:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
 801a428:	ea4c 0c03 	orr.w	ip, ip, r3
 801a42c:	ebc2 034e 	rsb	r3, r2, lr, lsl #1
 801a430:	9311      	str	r3, [sp, #68]	@ 0x44
 801a432:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801a434:	041b      	lsls	r3, r3, #16
 801a436:	f425 6bfc 	bic.w	fp, r5, #2016	@ 0x7e0
 801a43a:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 801a43e:	ea43 030b 	orr.w	r3, r3, fp
 801a442:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 801a444:	4353      	muls	r3, r2
 801a446:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 801a44a:	fb05 3c0c 	mla	ip, r5, ip, r3
 801a44e:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
 801a452:	f00b 63fc 	and.w	r3, fp, #132120576	@ 0x7e00000
 801a456:	ea43 0b01 	orr.w	fp, r3, r1
 801a45a:	f1c0 0110 	rsb	r1, r0, #16
 801a45e:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801a460:	eba1 0e0e 	sub.w	lr, r1, lr
 801a464:	eb02 0e4e 	add.w	lr, r2, lr, lsl #1
 801a468:	fb0e cc0b 	mla	ip, lr, fp, ip
 801a46c:	ea4f 4b03 	mov.w	fp, r3, lsl #16
 801a470:	f423 6efc 	bic.w	lr, r3, #2016	@ 0x7e0
 801a474:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 801a478:	ea4b 0e0e 	orr.w	lr, fp, lr
 801a47c:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 801a480:	fb02 cc0e 	mla	ip, r2, lr, ip
 801a484:	ea4f 535c 	mov.w	r3, ip, lsr #21
 801a488:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 801a48c:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801a490:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
 801a494:	ea43 0c0c 	orr.w	ip, r3, ip
 801a498:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 801a49a:	f82a cb02 	strh.w	ip, [sl], #2
 801a49e:	441c      	add	r4, r3
 801a4a0:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801a4a2:	f108 38ff 	add.w	r8, r8, #4294967295
 801a4a6:	441e      	add	r6, r3
 801a4a8:	e723      	b.n	801a2f2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 801a4aa:	2800      	cmp	r0, #0
 801a4ac:	d0b1      	beq.n	801a412 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 801a4ae:	5cd3      	ldrb	r3, [r2, r3]
 801a4b0:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801a4b4:	930a      	str	r3, [sp, #40]	@ 0x28
 801a4b6:	e7ac      	b.n	801a412 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 801a4b8:	b013      	add	sp, #76	@ 0x4c
 801a4ba:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801a4be <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>:
 801a4be:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a4c2:	880d      	ldrh	r5, [r1, #0]
 801a4c4:	b087      	sub	sp, #28
 801a4c6:	10ef      	asrs	r7, r5, #3
 801a4c8:	ea4f 2a25 	mov.w	sl, r5, asr #8
 801a4cc:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 801a4d0:	00ed      	lsls	r5, r5, #3
 801a4d2:	9701      	str	r7, [sp, #4]
 801a4d4:	b2ed      	uxtb	r5, r5
 801a4d6:	9502      	str	r5, [sp, #8]
 801a4d8:	9d01      	ldr	r5, [sp, #4]
 801a4da:	9103      	str	r1, [sp, #12]
 801a4dc:	e9dd 0612 	ldrd	r0, r6, [sp, #72]	@ 0x48
 801a4e0:	f9bd 9040 	ldrsh.w	r9, [sp, #64]	@ 0x40
 801a4e4:	9902      	ldr	r1, [sp, #8]
 801a4e6:	f9bd b044 	ldrsh.w	fp, [sp, #68]	@ 0x44
 801a4ea:	f89d 4050 	ldrb.w	r4, [sp, #80]	@ 0x50
 801a4ee:	f89d e054 	ldrb.w	lr, [sp, #84]	@ 0x54
 801a4f2:	f89d 8058 	ldrb.w	r8, [sp, #88]	@ 0x58
 801a4f6:	f00a 0af8 	and.w	sl, sl, #248	@ 0xf8
 801a4fa:	022d      	lsls	r5, r5, #8
 801a4fc:	ea45 450a 	orr.w	r5, r5, sl, lsl #16
 801a500:	fb06 0709 	mla	r7, r6, r9, r0
 801a504:	430d      	orrs	r5, r1
 801a506:	2e00      	cmp	r6, #0
 801a508:	eb02 0c07 	add.w	ip, r2, r7
 801a50c:	9505      	str	r5, [sp, #20]
 801a50e:	f2c0 80b6 	blt.w	801a67e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c0>
 801a512:	45b3      	cmp	fp, r6
 801a514:	f340 80b3 	ble.w	801a67e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c0>
 801a518:	2800      	cmp	r0, #0
 801a51a:	f2c0 80ae 	blt.w	801a67a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1bc>
 801a51e:	4581      	cmp	r9, r0
 801a520:	f340 80ab 	ble.w	801a67a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1bc>
 801a524:	5dd7      	ldrb	r7, [r2, r7]
 801a526:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 801a52a:	441f      	add	r7, r3
 801a52c:	1c42      	adds	r2, r0, #1
 801a52e:	f100 80a9 	bmi.w	801a684 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 801a532:	4591      	cmp	r9, r2
 801a534:	f340 80a6 	ble.w	801a684 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 801a538:	2c00      	cmp	r4, #0
 801a53a:	f000 80a3 	beq.w	801a684 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 801a53e:	f89c 5001 	ldrb.w	r5, [ip, #1]
 801a542:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 801a546:	441d      	add	r5, r3
 801a548:	3601      	adds	r6, #1
 801a54a:	f100 809f 	bmi.w	801a68c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 801a54e:	45b3      	cmp	fp, r6
 801a550:	f340 809c 	ble.w	801a68c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 801a554:	f1be 0f00 	cmp.w	lr, #0
 801a558:	f000 8098 	beq.w	801a68c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 801a55c:	2800      	cmp	r0, #0
 801a55e:	f2c0 8093 	blt.w	801a688 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ca>
 801a562:	4581      	cmp	r9, r0
 801a564:	f340 8090 	ble.w	801a688 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ca>
 801a568:	f81c 6009 	ldrb.w	r6, [ip, r9]
 801a56c:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 801a570:	441e      	add	r6, r3
 801a572:	3001      	adds	r0, #1
 801a574:	f100 808d 	bmi.w	801a692 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 801a578:	4581      	cmp	r9, r0
 801a57a:	f340 808a 	ble.w	801a692 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 801a57e:	2c00      	cmp	r4, #0
 801a580:	f000 8087 	beq.w	801a692 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 801a584:	44e1      	add	r9, ip
 801a586:	f899 2001 	ldrb.w	r2, [r9, #1]
 801a58a:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801a58e:	4413      	add	r3, r2
 801a590:	b2a4      	uxth	r4, r4
 801a592:	fa1f fe8e 	uxth.w	lr, lr
 801a596:	fb04 fb0e 	mul.w	fp, r4, lr
 801a59a:	0124      	lsls	r4, r4, #4
 801a59c:	ebcb 1e0e 	rsb	lr, fp, lr, lsl #4
 801a5a0:	f5c4 7980 	rsb	r9, r4, #256	@ 0x100
 801a5a4:	eba4 040b 	sub.w	r4, r4, fp
 801a5a8:	fa1f f08e 	uxth.w	r0, lr
 801a5ac:	b2a2      	uxth	r2, r4
 801a5ae:	78ac      	ldrb	r4, [r5, #2]
 801a5b0:	f897 c002 	ldrb.w	ip, [r7, #2]
 801a5b4:	9901      	ldr	r1, [sp, #4]
 801a5b6:	eba9 0900 	sub.w	r9, r9, r0
 801a5ba:	fa1f f989 	uxth.w	r9, r9
 801a5be:	4354      	muls	r4, r2
 801a5c0:	fb09 440c 	mla	r4, r9, ip, r4
 801a5c4:	f896 c002 	ldrb.w	ip, [r6, #2]
 801a5c8:	fb00 440c 	mla	r4, r0, ip, r4
 801a5cc:	f893 c002 	ldrb.w	ip, [r3, #2]
 801a5d0:	fa1f fe88 	uxth.w	lr, r8
 801a5d4:	ea6f 0808 	mvn.w	r8, r8
 801a5d8:	fa5f f888 	uxtb.w	r8, r8
 801a5dc:	fb0b 4c0c 	mla	ip, fp, ip, r4
 801a5e0:	fb1a fa08 	smulbb	sl, sl, r8
 801a5e4:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 801a5e8:	fb0c ac0e 	mla	ip, ip, lr, sl
 801a5ec:	f895 a001 	ldrb.w	sl, [r5, #1]
 801a5f0:	787c      	ldrb	r4, [r7, #1]
 801a5f2:	782d      	ldrb	r5, [r5, #0]
 801a5f4:	783f      	ldrb	r7, [r7, #0]
 801a5f6:	fb02 fa0a 	mul.w	sl, r2, sl
 801a5fa:	fb09 aa04 	mla	sl, r9, r4, sl
 801a5fe:	7874      	ldrb	r4, [r6, #1]
 801a600:	436a      	muls	r2, r5
 801a602:	7835      	ldrb	r5, [r6, #0]
 801a604:	fb00 aa04 	mla	sl, r0, r4, sl
 801a608:	fb09 2207 	mla	r2, r9, r7, r2
 801a60c:	785c      	ldrb	r4, [r3, #1]
 801a60e:	781b      	ldrb	r3, [r3, #0]
 801a610:	fb00 2005 	mla	r0, r0, r5, r2
 801a614:	fb0b a404 	mla	r4, fp, r4, sl
 801a618:	fb0b 0b03 	mla	fp, fp, r3, r0
 801a61c:	9b02      	ldr	r3, [sp, #8]
 801a61e:	fb11 fa08 	smulbb	sl, r1, r8
 801a622:	fa1f fc8c 	uxth.w	ip, ip
 801a626:	fb13 f808 	smulbb	r8, r3, r8
 801a62a:	f3cb 2b07 	ubfx	fp, fp, #8, #8
 801a62e:	f3c4 2407 	ubfx	r4, r4, #8, #8
 801a632:	fb04 a40e 	mla	r4, r4, lr, sl
 801a636:	f10c 0301 	add.w	r3, ip, #1
 801a63a:	fb0b 8e0e 	mla	lr, fp, lr, r8
 801a63e:	fa1f fe8e 	uxth.w	lr, lr
 801a642:	b2a4      	uxth	r4, r4
 801a644:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 801a648:	f40c 4378 	and.w	r3, ip, #63488	@ 0xf800
 801a64c:	f104 0a01 	add.w	sl, r4, #1
 801a650:	f10e 0c01 	add.w	ip, lr, #1
 801a654:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 801a658:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
 801a65c:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801a660:	0964      	lsrs	r4, r4, #5
 801a662:	ea4c 0c03 	orr.w	ip, ip, r3
 801a666:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
 801a66a:	9b03      	ldr	r3, [sp, #12]
 801a66c:	ea4c 0c04 	orr.w	ip, ip, r4
 801a670:	f8a3 c000 	strh.w	ip, [r3]
 801a674:	b007      	add	sp, #28
 801a676:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801a67a:	af05      	add	r7, sp, #20
 801a67c:	e756      	b.n	801a52c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x6e>
 801a67e:	ad05      	add	r5, sp, #20
 801a680:	462f      	mov	r7, r5
 801a682:	e761      	b.n	801a548 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x8a>
 801a684:	ad05      	add	r5, sp, #20
 801a686:	e75f      	b.n	801a548 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x8a>
 801a688:	ae05      	add	r6, sp, #20
 801a68a:	e772      	b.n	801a572 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xb4>
 801a68c:	ab05      	add	r3, sp, #20
 801a68e:	461e      	mov	r6, r3
 801a690:	e77e      	b.n	801a590 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd2>
 801a692:	ab05      	add	r3, sp, #20
 801a694:	e77c      	b.n	801a590 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd2>

0801a696 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801a696:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a69a:	b095      	sub	sp, #84	@ 0x54
 801a69c:	9212      	str	r2, [sp, #72]	@ 0x48
 801a69e:	9309      	str	r3, [sp, #36]	@ 0x24
 801a6a0:	9a23      	ldr	r2, [sp, #140]	@ 0x8c
 801a6a2:	f89d 309c 	ldrb.w	r3, [sp, #156]	@ 0x9c
 801a6a6:	930f      	str	r3, [sp, #60]	@ 0x3c
 801a6a8:	910e      	str	r1, [sp, #56]	@ 0x38
 801a6aa:	e9dd 1324 	ldrd	r1, r3, [sp, #144]	@ 0x90
 801a6ae:	9013      	str	r0, [sp, #76]	@ 0x4c
 801a6b0:	6850      	ldr	r0, [r2, #4]
 801a6b2:	6812      	ldr	r2, [r2, #0]
 801a6b4:	fb00 1303 	mla	r3, r0, r3, r1
 801a6b8:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801a6bc:	930a      	str	r3, [sp, #40]	@ 0x28
 801a6be:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 801a6c0:	681b      	ldr	r3, [r3, #0]
 801a6c2:	930d      	str	r3, [sp, #52]	@ 0x34
 801a6c4:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 801a6c6:	685c      	ldr	r4, [r3, #4]
 801a6c8:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 801a6ca:	43db      	mvns	r3, r3
 801a6cc:	b2db      	uxtb	r3, r3
 801a6ce:	3404      	adds	r4, #4
 801a6d0:	930b      	str	r3, [sp, #44]	@ 0x2c
 801a6d2:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801a6d4:	2b00      	cmp	r3, #0
 801a6d6:	dc03      	bgt.n	801a6e0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 801a6d8:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 801a6da:	2b00      	cmp	r3, #0
 801a6dc:	f340 8255 	ble.w	801ab8a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f4>
 801a6e0:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 801a6e2:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801a6e6:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801a6ea:	1e48      	subs	r0, r1, #1
 801a6ec:	1e55      	subs	r5, r2, #1
 801a6ee:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801a6f0:	2b00      	cmp	r3, #0
 801a6f2:	f340 80f9 	ble.w	801a8e8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 801a6f6:	9e1f      	ldr	r6, [sp, #124]	@ 0x7c
 801a6f8:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801a6fa:	1436      	asrs	r6, r6, #16
 801a6fc:	ea4f 4323 	mov.w	r3, r3, asr #16
 801a700:	d406      	bmi.n	801a710 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801a702:	4286      	cmp	r6, r0
 801a704:	da04      	bge.n	801a710 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801a706:	2b00      	cmp	r3, #0
 801a708:	db02      	blt.n	801a710 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801a70a:	42ab      	cmp	r3, r5
 801a70c:	f2c0 80ed 	blt.w	801a8ea <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x254>
 801a710:	3601      	adds	r6, #1
 801a712:	f100 80da 	bmi.w	801a8ca <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801a716:	42b1      	cmp	r1, r6
 801a718:	f2c0 80d7 	blt.w	801a8ca <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801a71c:	3301      	adds	r3, #1
 801a71e:	f100 80d4 	bmi.w	801a8ca <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801a722:	429a      	cmp	r2, r3
 801a724:	f2c0 80d1 	blt.w	801a8ca <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801a728:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801a72a:	9311      	str	r3, [sp, #68]	@ 0x44
 801a72c:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801a72e:	930c      	str	r3, [sp, #48]	@ 0x30
 801a730:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 801a732:	2b00      	cmp	r3, #0
 801a734:	f340 80fa 	ble.w	801a92c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x296>
 801a738:	9826      	ldr	r0, [sp, #152]	@ 0x98
 801a73a:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801a73c:	9a20      	ldr	r2, [sp, #128]	@ 0x80
 801a73e:	68c6      	ldr	r6, [r0, #12]
 801a740:	981f      	ldr	r0, [sp, #124]	@ 0x7c
 801a742:	141d      	asrs	r5, r3, #16
 801a744:	f3c2 3103 	ubfx	r1, r2, #12, #4
 801a748:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 801a74a:	9a26      	ldr	r2, [sp, #152]	@ 0x98
 801a74c:	1400      	asrs	r0, r0, #16
 801a74e:	f3c3 3303 	ubfx	r3, r3, #12, #4
 801a752:	6892      	ldr	r2, [r2, #8]
 801a754:	f100 813e 	bmi.w	801a9d4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 801a758:	1e57      	subs	r7, r2, #1
 801a75a:	42b8      	cmp	r0, r7
 801a75c:	f280 813a 	bge.w	801a9d4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 801a760:	2d00      	cmp	r5, #0
 801a762:	f2c0 8137 	blt.w	801a9d4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 801a766:	1e77      	subs	r7, r6, #1
 801a768:	42bd      	cmp	r5, r7
 801a76a:	f280 8133 	bge.w	801a9d4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 801a76e:	b212      	sxth	r2, r2
 801a770:	fb05 0002 	mla	r0, r5, r2, r0
 801a774:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 801a776:	f815 a000 	ldrb.w	sl, [r5, r0]
 801a77a:	eb0a 0a4a 	add.w	sl, sl, sl, lsl #1
 801a77e:	182e      	adds	r6, r5, r0
 801a780:	eb04 050a 	add.w	r5, r4, sl
 801a784:	2b00      	cmp	r3, #0
 801a786:	f000 8117 	beq.w	801a9b8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x322>
 801a78a:	f896 c001 	ldrb.w	ip, [r6, #1]
 801a78e:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 801a792:	44a4      	add	ip, r4
 801a794:	2900      	cmp	r1, #0
 801a796:	f000 8117 	beq.w	801a9c8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x332>
 801a79a:	18b0      	adds	r0, r6, r2
 801a79c:	5cb2      	ldrb	r2, [r6, r2]
 801a79e:	7840      	ldrb	r0, [r0, #1]
 801a7a0:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801a7a4:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801a7a8:	4422      	add	r2, r4
 801a7aa:	4420      	add	r0, r4
 801a7ac:	b29b      	uxth	r3, r3
 801a7ae:	b289      	uxth	r1, r1
 801a7b0:	fb03 f901 	mul.w	r9, r3, r1
 801a7b4:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 801a7b8:	011b      	lsls	r3, r3, #4
 801a7ba:	b289      	uxth	r1, r1
 801a7bc:	f89c 7002 	ldrb.w	r7, [ip, #2]
 801a7c0:	f895 b002 	ldrb.w	fp, [r5, #2]
 801a7c4:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 801a7c6:	f814 a00a 	ldrb.w	sl, [r4, sl]
 801a7ca:	f8b6 e000 	ldrh.w	lr, [r6]
 801a7ce:	f8bd 603c 	ldrh.w	r6, [sp, #60]	@ 0x3c
 801a7d2:	f5c3 7880 	rsb	r8, r3, #256	@ 0x100
 801a7d6:	eba3 0309 	sub.w	r3, r3, r9
 801a7da:	b29b      	uxth	r3, r3
 801a7dc:	eba8 0801 	sub.w	r8, r8, r1
 801a7e0:	fa1f f888 	uxth.w	r8, r8
 801a7e4:	435f      	muls	r7, r3
 801a7e6:	fb08 770b 	mla	r7, r8, fp, r7
 801a7ea:	f892 b002 	ldrb.w	fp, [r2, #2]
 801a7ee:	9310      	str	r3, [sp, #64]	@ 0x40
 801a7f0:	fb01 770b 	mla	r7, r1, fp, r7
 801a7f4:	f890 b002 	ldrb.w	fp, [r0, #2]
 801a7f8:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801a7fa:	fb09 770b 	mla	r7, r9, fp, r7
 801a7fe:	ea4f 2b2e 	mov.w	fp, lr, asr #8
 801a802:	f00b 0bf8 	and.w	fp, fp, #248	@ 0xf8
 801a806:	fb1b fb03 	smulbb	fp, fp, r3
 801a80a:	f3c7 2707 	ubfx	r7, r7, #8, #8
 801a80e:	fb07 b706 	mla	r7, r7, r6, fp
 801a812:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801a814:	f895 b001 	ldrb.w	fp, [r5, #1]
 801a818:	f89c 5001 	ldrb.w	r5, [ip, #1]
 801a81c:	f89c c000 	ldrb.w	ip, [ip]
 801a820:	435d      	muls	r5, r3
 801a822:	fb08 550b 	mla	r5, r8, fp, r5
 801a826:	f892 b001 	ldrb.w	fp, [r2, #1]
 801a82a:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801a82c:	fb01 550b 	mla	r5, r1, fp, r5
 801a830:	f890 b001 	ldrb.w	fp, [r0, #1]
 801a834:	fb09 550b 	mla	r5, r9, fp, r5
 801a838:	ea4f 0bee 	mov.w	fp, lr, asr #3
 801a83c:	f00b 0bfc 	and.w	fp, fp, #252	@ 0xfc
 801a840:	fb1b fb03 	smulbb	fp, fp, r3
 801a844:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801a846:	fb03 f30c 	mul.w	r3, r3, ip
 801a84a:	f892 c000 	ldrb.w	ip, [r2]
 801a84e:	fb08 330a 	mla	r3, r8, sl, r3
 801a852:	fb01 330c 	mla	r3, r1, ip, r3
 801a856:	f890 c000 	ldrb.w	ip, [r0]
 801a85a:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801a85e:	fb09 3c0c 	mla	ip, r9, ip, r3
 801a862:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801a864:	fa5f fe8e 	uxtb.w	lr, lr
 801a868:	b2bf      	uxth	r7, r7
 801a86a:	fb1e fe03 	smulbb	lr, lr, r3
 801a86e:	f3c5 2507 	ubfx	r5, r5, #8, #8
 801a872:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 801a876:	fb05 b506 	mla	r5, r5, r6, fp
 801a87a:	1c7b      	adds	r3, r7, #1
 801a87c:	fb0c e606 	mla	r6, ip, r6, lr
 801a880:	b2ad      	uxth	r5, r5
 801a882:	b2b6      	uxth	r6, r6
 801a884:	eb03 2717 	add.w	r7, r3, r7, lsr #8
 801a888:	f407 4378 	and.w	r3, r7, #63488	@ 0xf800
 801a88c:	f105 0b01 	add.w	fp, r5, #1
 801a890:	1c77      	adds	r7, r6, #1
 801a892:	eb07 2716 	add.w	r7, r7, r6, lsr #8
 801a896:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
 801a89a:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801a89e:	096d      	lsrs	r5, r5, #5
 801a8a0:	431f      	orrs	r7, r3
 801a8a2:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801a8a6:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801a8a8:	433d      	orrs	r5, r7
 801a8aa:	801d      	strh	r5, [r3, #0]
 801a8ac:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801a8ae:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 801a8b0:	3302      	adds	r3, #2
 801a8b2:	930c      	str	r3, [sp, #48]	@ 0x30
 801a8b4:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 801a8b6:	4413      	add	r3, r2
 801a8b8:	931f      	str	r3, [sp, #124]	@ 0x7c
 801a8ba:	9a22      	ldr	r2, [sp, #136]	@ 0x88
 801a8bc:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801a8be:	4413      	add	r3, r2
 801a8c0:	9320      	str	r3, [sp, #128]	@ 0x80
 801a8c2:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 801a8c4:	3b01      	subs	r3, #1
 801a8c6:	9311      	str	r3, [sp, #68]	@ 0x44
 801a8c8:	e732      	b.n	801a730 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 801a8ca:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 801a8cc:	9e21      	ldr	r6, [sp, #132]	@ 0x84
 801a8ce:	4433      	add	r3, r6
 801a8d0:	931f      	str	r3, [sp, #124]	@ 0x7c
 801a8d2:	9e22      	ldr	r6, [sp, #136]	@ 0x88
 801a8d4:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801a8d6:	4433      	add	r3, r6
 801a8d8:	9320      	str	r3, [sp, #128]	@ 0x80
 801a8da:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801a8dc:	3b01      	subs	r3, #1
 801a8de:	9309      	str	r3, [sp, #36]	@ 0x24
 801a8e0:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801a8e2:	3302      	adds	r3, #2
 801a8e4:	930a      	str	r3, [sp, #40]	@ 0x28
 801a8e6:	e702      	b.n	801a6ee <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 801a8e8:	d027      	beq.n	801a93a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a4>
 801a8ea:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801a8ec:	9821      	ldr	r0, [sp, #132]	@ 0x84
 801a8ee:	9d1f      	ldr	r5, [sp, #124]	@ 0x7c
 801a8f0:	3b01      	subs	r3, #1
 801a8f2:	fb00 5003 	mla	r0, r0, r3, r5
 801a8f6:	1400      	asrs	r0, r0, #16
 801a8f8:	f53f af16 	bmi.w	801a728 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801a8fc:	3901      	subs	r1, #1
 801a8fe:	4288      	cmp	r0, r1
 801a900:	f6bf af12 	bge.w	801a728 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801a904:	9922      	ldr	r1, [sp, #136]	@ 0x88
 801a906:	9820      	ldr	r0, [sp, #128]	@ 0x80
 801a908:	fb01 0303 	mla	r3, r1, r3, r0
 801a90c:	141b      	asrs	r3, r3, #16
 801a90e:	f53f af0b 	bmi.w	801a728 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801a912:	3a01      	subs	r2, #1
 801a914:	4293      	cmp	r3, r2
 801a916:	f6bf af07 	bge.w	801a728 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801a91a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801a91c:	9311      	str	r3, [sp, #68]	@ 0x44
 801a91e:	f8bd a03c 	ldrh.w	sl, [sp, #60]	@ 0x3c
 801a922:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801a924:	930c      	str	r3, [sp, #48]	@ 0x30
 801a926:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 801a928:	2b00      	cmp	r3, #0
 801a92a:	dc70      	bgt.n	801aa0e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x378>
 801a92c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801a92e:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 801a930:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801a934:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801a938:	930a      	str	r3, [sp, #40]	@ 0x28
 801a93a:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801a93c:	2b00      	cmp	r3, #0
 801a93e:	f340 8124 	ble.w	801ab8a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f4>
 801a942:	ee30 0a04 	vadd.f32	s0, s0, s8
 801a946:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 801a94a:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801a94e:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 801a950:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801a954:	ee31 1a05 	vadd.f32	s2, s2, s10
 801a958:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801a95c:	eef0 6a62 	vmov.f32	s13, s5
 801a960:	ee61 7a27 	vmul.f32	s15, s2, s15
 801a964:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801a968:	ee77 2a62 	vsub.f32	s5, s14, s5
 801a96c:	edcd 6a1f 	vstr	s13, [sp, #124]	@ 0x7c
 801a970:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801a974:	eef0 6a43 	vmov.f32	s13, s6
 801a978:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801a97c:	ee12 2a90 	vmov	r2, s5
 801a980:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801a984:	fb92 f3f3 	sdiv	r3, r2, r3
 801a988:	ee13 2a10 	vmov	r2, s6
 801a98c:	9321      	str	r3, [sp, #132]	@ 0x84
 801a98e:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 801a990:	fb92 f3f3 	sdiv	r3, r2, r3
 801a994:	9322      	str	r3, [sp, #136]	@ 0x88
 801a996:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801a998:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 801a99a:	3b01      	subs	r3, #1
 801a99c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801a9a0:	930e      	str	r3, [sp, #56]	@ 0x38
 801a9a2:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 801a9a4:	edcd 6a20 	vstr	s13, [sp, #128]	@ 0x80
 801a9a8:	bf08      	it	eq
 801a9aa:	4613      	moveq	r3, r2
 801a9ac:	9309      	str	r3, [sp, #36]	@ 0x24
 801a9ae:	eeb0 3a67 	vmov.f32	s6, s15
 801a9b2:	eef0 2a47 	vmov.f32	s5, s14
 801a9b6:	e68c      	b.n	801a6d2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 801a9b8:	b149      	cbz	r1, 801a9ce <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x338>
 801a9ba:	5cb2      	ldrb	r2, [r6, r2]
 801a9bc:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801a9c0:	4422      	add	r2, r4
 801a9c2:	4628      	mov	r0, r5
 801a9c4:	46ac      	mov	ip, r5
 801a9c6:	e6f1      	b.n	801a7ac <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801a9c8:	4628      	mov	r0, r5
 801a9ca:	462a      	mov	r2, r5
 801a9cc:	e6ee      	b.n	801a7ac <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801a9ce:	4628      	mov	r0, r5
 801a9d0:	462a      	mov	r2, r5
 801a9d2:	e7f7      	b.n	801a9c4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32e>
 801a9d4:	1c47      	adds	r7, r0, #1
 801a9d6:	f53f af69 	bmi.w	801a8ac <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801a9da:	42ba      	cmp	r2, r7
 801a9dc:	f6ff af66 	blt.w	801a8ac <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801a9e0:	1c6f      	adds	r7, r5, #1
 801a9e2:	f53f af63 	bmi.w	801a8ac <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801a9e6:	42be      	cmp	r6, r7
 801a9e8:	f6ff af60 	blt.w	801a8ac <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801a9ec:	9f0f      	ldr	r7, [sp, #60]	@ 0x3c
 801a9ee:	9002      	str	r0, [sp, #8]
 801a9f0:	b236      	sxth	r6, r6
 801a9f2:	b212      	sxth	r2, r2
 801a9f4:	e9cd 1705 	strd	r1, r7, [sp, #20]
 801a9f8:	e9cd 5303 	strd	r5, r3, [sp, #12]
 801a9fc:	9200      	str	r2, [sp, #0]
 801a9fe:	9601      	str	r6, [sp, #4]
 801aa00:	4623      	mov	r3, r4
 801aa02:	e9dd 120c 	ldrd	r1, r2, [sp, #48]	@ 0x30
 801aa06:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 801aa08:	f7ff fd59 	bl	801a4be <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>
 801aa0c:	e74e      	b.n	801a8ac <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801aa0e:	9a20      	ldr	r2, [sp, #128]	@ 0x80
 801aa10:	9820      	ldr	r0, [sp, #128]	@ 0x80
 801aa12:	9d1f      	ldr	r5, [sp, #124]	@ 0x7c
 801aa14:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 801aa16:	f3c2 3103 	ubfx	r1, r2, #12, #4
 801aa1a:	9a26      	ldr	r2, [sp, #152]	@ 0x98
 801aa1c:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
 801aa20:	142d      	asrs	r5, r5, #16
 801aa22:	1400      	asrs	r0, r0, #16
 801aa24:	fb02 5000 	mla	r0, r2, r0, r5
 801aa28:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 801aa2a:	f815 9000 	ldrb.w	r9, [r5, r0]
 801aa2e:	f3c3 3303 	ubfx	r3, r3, #12, #4
 801aa32:	eb09 0949 	add.w	r9, r9, r9, lsl #1
 801aa36:	182e      	adds	r6, r5, r0
 801aa38:	eb04 0509 	add.w	r5, r4, r9
 801aa3c:	2b00      	cmp	r3, #0
 801aa3e:	f000 8096 	beq.w	801ab6e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d8>
 801aa42:	7877      	ldrb	r7, [r6, #1]
 801aa44:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 801aa48:	4427      	add	r7, r4
 801aa4a:	2900      	cmp	r1, #0
 801aa4c:	f000 8097 	beq.w	801ab7e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e8>
 801aa50:	18b0      	adds	r0, r6, r2
 801aa52:	5cb2      	ldrb	r2, [r6, r2]
 801aa54:	7840      	ldrb	r0, [r0, #1]
 801aa56:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801aa5a:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801aa5e:	4422      	add	r2, r4
 801aa60:	4420      	add	r0, r4
 801aa62:	b29b      	uxth	r3, r3
 801aa64:	b289      	uxth	r1, r1
 801aa66:	fb03 f801 	mul.w	r8, r3, r1
 801aa6a:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 801aa6c:	f895 b002 	ldrb.w	fp, [r5, #2]
 801aa70:	f8b6 c000 	ldrh.w	ip, [r6]
 801aa74:	78be      	ldrb	r6, [r7, #2]
 801aa76:	f814 9009 	ldrb.w	r9, [r4, r9]
 801aa7a:	011b      	lsls	r3, r3, #4
 801aa7c:	ebc8 1101 	rsb	r1, r8, r1, lsl #4
 801aa80:	b289      	uxth	r1, r1
 801aa82:	f5c3 7e80 	rsb	lr, r3, #256	@ 0x100
 801aa86:	eba3 0308 	sub.w	r3, r3, r8
 801aa8a:	b29b      	uxth	r3, r3
 801aa8c:	ebae 0e01 	sub.w	lr, lr, r1
 801aa90:	fa1f fe8e 	uxth.w	lr, lr
 801aa94:	435e      	muls	r6, r3
 801aa96:	fb0e 660b 	mla	r6, lr, fp, r6
 801aa9a:	f892 b002 	ldrb.w	fp, [r2, #2]
 801aa9e:	9310      	str	r3, [sp, #64]	@ 0x40
 801aaa0:	fb01 660b 	mla	r6, r1, fp, r6
 801aaa4:	f890 b002 	ldrb.w	fp, [r0, #2]
 801aaa8:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801aaaa:	fb08 660b 	mla	r6, r8, fp, r6
 801aaae:	ea4f 2b2c 	mov.w	fp, ip, asr #8
 801aab2:	f00b 0bf8 	and.w	fp, fp, #248	@ 0xf8
 801aab6:	fb1b fb03 	smulbb	fp, fp, r3
 801aaba:	f3c6 2607 	ubfx	r6, r6, #8, #8
 801aabe:	fb06 b60a 	mla	r6, r6, sl, fp
 801aac2:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801aac4:	f895 b001 	ldrb.w	fp, [r5, #1]
 801aac8:	787d      	ldrb	r5, [r7, #1]
 801aaca:	783f      	ldrb	r7, [r7, #0]
 801aacc:	435d      	muls	r5, r3
 801aace:	fb0e 550b 	mla	r5, lr, fp, r5
 801aad2:	f892 b001 	ldrb.w	fp, [r2, #1]
 801aad6:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801aad8:	fb01 550b 	mla	r5, r1, fp, r5
 801aadc:	f890 b001 	ldrb.w	fp, [r0, #1]
 801aae0:	fb08 550b 	mla	r5, r8, fp, r5
 801aae4:	ea4f 0bec 	mov.w	fp, ip, asr #3
 801aae8:	f00b 0bfc 	and.w	fp, fp, #252	@ 0xfc
 801aaec:	fb1b fb03 	smulbb	fp, fp, r3
 801aaf0:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801aaf2:	437b      	muls	r3, r7
 801aaf4:	7817      	ldrb	r7, [r2, #0]
 801aaf6:	fb0e 3309 	mla	r3, lr, r9, r3
 801aafa:	fb01 3307 	mla	r3, r1, r7, r3
 801aafe:	7807      	ldrb	r7, [r0, #0]
 801ab00:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801ab04:	fb08 3707 	mla	r7, r8, r7, r3
 801ab08:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801ab0a:	fa5f fc8c 	uxtb.w	ip, ip
 801ab0e:	fb1c fc03 	smulbb	ip, ip, r3
 801ab12:	f3c5 2507 	ubfx	r5, r5, #8, #8
 801ab16:	f3c7 2707 	ubfx	r7, r7, #8, #8
 801ab1a:	fb05 b50a 	mla	r5, r5, sl, fp
 801ab1e:	fb07 c70a 	mla	r7, r7, sl, ip
 801ab22:	b2b6      	uxth	r6, r6
 801ab24:	b2ad      	uxth	r5, r5
 801ab26:	b2bf      	uxth	r7, r7
 801ab28:	1c73      	adds	r3, r6, #1
 801ab2a:	1c7a      	adds	r2, r7, #1
 801ab2c:	f105 0b01 	add.w	fp, r5, #1
 801ab30:	eb03 2616 	add.w	r6, r3, r6, lsr #8
 801ab34:	eb02 2217 	add.w	r2, r2, r7, lsr #8
 801ab38:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
 801ab3c:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801ab40:	f406 4678 	and.w	r6, r6, #63488	@ 0xf800
 801ab44:	096d      	lsrs	r5, r5, #5
 801ab46:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801ab48:	4316      	orrs	r6, r2
 801ab4a:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801ab4e:	432e      	orrs	r6, r5
 801ab50:	f823 6b02 	strh.w	r6, [r3], #2
 801ab54:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 801ab56:	930c      	str	r3, [sp, #48]	@ 0x30
 801ab58:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 801ab5a:	4413      	add	r3, r2
 801ab5c:	931f      	str	r3, [sp, #124]	@ 0x7c
 801ab5e:	9a22      	ldr	r2, [sp, #136]	@ 0x88
 801ab60:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801ab62:	4413      	add	r3, r2
 801ab64:	9320      	str	r3, [sp, #128]	@ 0x80
 801ab66:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 801ab68:	3b01      	subs	r3, #1
 801ab6a:	9311      	str	r3, [sp, #68]	@ 0x44
 801ab6c:	e6db      	b.n	801a926 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x290>
 801ab6e:	b149      	cbz	r1, 801ab84 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ee>
 801ab70:	5cb2      	ldrb	r2, [r6, r2]
 801ab72:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801ab76:	4422      	add	r2, r4
 801ab78:	4628      	mov	r0, r5
 801ab7a:	462f      	mov	r7, r5
 801ab7c:	e771      	b.n	801aa62 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3cc>
 801ab7e:	4628      	mov	r0, r5
 801ab80:	462a      	mov	r2, r5
 801ab82:	e76e      	b.n	801aa62 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3cc>
 801ab84:	4628      	mov	r0, r5
 801ab86:	462a      	mov	r2, r5
 801ab88:	e7f7      	b.n	801ab7a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 801ab8a:	b015      	add	sp, #84	@ 0x54
 801ab8c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801ab90 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>:
 801ab90:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801ab94:	880f      	ldrh	r7, [r1, #0]
 801ab96:	f9bd e030 	ldrsh.w	lr, [sp, #48]	@ 0x30
 801ab9a:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	@ 0x34
 801ab9e:	f89d 0040 	ldrb.w	r0, [sp, #64]	@ 0x40
 801aba2:	f89d 6044 	ldrb.w	r6, [sp, #68]	@ 0x44
 801aba6:	023c      	lsls	r4, r7, #8
 801aba8:	e9dd c50e 	ldrd	ip, r5, [sp, #56]	@ 0x38
 801abac:	f404 0b78 	and.w	fp, r4, #16252928	@ 0xf80000
 801abb0:	017c      	lsls	r4, r7, #5
 801abb2:	f404 447c 	and.w	r4, r4, #64512	@ 0xfc00
 801abb6:	00ff      	lsls	r7, r7, #3
 801abb8:	ea4b 0404 	orr.w	r4, fp, r4
 801abbc:	b2ff      	uxtb	r7, r7
 801abbe:	fb05 ca0e 	mla	sl, r5, lr, ip
 801abc2:	4327      	orrs	r7, r4
 801abc4:	2d00      	cmp	r5, #0
 801abc6:	eb02 080a 	add.w	r8, r2, sl
 801abca:	9701      	str	r7, [sp, #4]
 801abcc:	db7e      	blt.n	801accc <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x13c>
 801abce:	45a9      	cmp	r9, r5
 801abd0:	dd7c      	ble.n	801accc <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x13c>
 801abd2:	f1bc 0f00 	cmp.w	ip, #0
 801abd6:	db77      	blt.n	801acc8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x138>
 801abd8:	45e6      	cmp	lr, ip
 801abda:	dd75      	ble.n	801acc8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x138>
 801abdc:	f812 700a 	ldrb.w	r7, [r2, sl]
 801abe0:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 801abe4:	441f      	add	r7, r3
 801abe6:	f11c 0201 	adds.w	r2, ip, #1
 801abea:	d472      	bmi.n	801acd2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 801abec:	4596      	cmp	lr, r2
 801abee:	dd70      	ble.n	801acd2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 801abf0:	2800      	cmp	r0, #0
 801abf2:	d06e      	beq.n	801acd2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 801abf4:	f898 4001 	ldrb.w	r4, [r8, #1]
 801abf8:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 801abfc:	441c      	add	r4, r3
 801abfe:	3501      	adds	r5, #1
 801ac00:	d46b      	bmi.n	801acda <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 801ac02:	45a9      	cmp	r9, r5
 801ac04:	dd69      	ble.n	801acda <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 801ac06:	2e00      	cmp	r6, #0
 801ac08:	d067      	beq.n	801acda <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 801ac0a:	f1bc 0f00 	cmp.w	ip, #0
 801ac0e:	db62      	blt.n	801acd6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x146>
 801ac10:	45e6      	cmp	lr, ip
 801ac12:	dd60      	ble.n	801acd6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x146>
 801ac14:	f818 500e 	ldrb.w	r5, [r8, lr]
 801ac18:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 801ac1c:	441d      	add	r5, r3
 801ac1e:	f11c 0201 	adds.w	r2, ip, #1
 801ac22:	d45d      	bmi.n	801ace0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 801ac24:	4596      	cmp	lr, r2
 801ac26:	dd5b      	ble.n	801ace0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 801ac28:	2800      	cmp	r0, #0
 801ac2a:	d059      	beq.n	801ace0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 801ac2c:	44c6      	add	lr, r8
 801ac2e:	f89e 2001 	ldrb.w	r2, [lr, #1]
 801ac32:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801ac36:	4413      	add	r3, r2
 801ac38:	b280      	uxth	r0, r0
 801ac3a:	b2b2      	uxth	r2, r6
 801ac3c:	fb00 f602 	mul.w	r6, r0, r2
 801ac40:	0100      	lsls	r0, r0, #4
 801ac42:	ebc6 1202 	rsb	r2, r6, r2, lsl #4
 801ac46:	f5c0 7880 	rsb	r8, r0, #256	@ 0x100
 801ac4a:	1b80      	subs	r0, r0, r6
 801ac4c:	fa1f fc82 	uxth.w	ip, r2
 801ac50:	b282      	uxth	r2, r0
 801ac52:	78a0      	ldrb	r0, [r4, #2]
 801ac54:	f897 e002 	ldrb.w	lr, [r7, #2]
 801ac58:	f897 9000 	ldrb.w	r9, [r7]
 801ac5c:	787f      	ldrb	r7, [r7, #1]
 801ac5e:	eba8 080c 	sub.w	r8, r8, ip
 801ac62:	fa1f f888 	uxth.w	r8, r8
 801ac66:	4350      	muls	r0, r2
 801ac68:	fb08 0e0e 	mla	lr, r8, lr, r0
 801ac6c:	78a8      	ldrb	r0, [r5, #2]
 801ac6e:	fb0c e000 	mla	r0, ip, r0, lr
 801ac72:	f893 e002 	ldrb.w	lr, [r3, #2]
 801ac76:	fb06 0e0e 	mla	lr, r6, lr, r0
 801ac7a:	f40e 4078 	and.w	r0, lr, #63488	@ 0xf800
 801ac7e:	f894 e000 	ldrb.w	lr, [r4]
 801ac82:	fb02 fe0e 	mul.w	lr, r2, lr
 801ac86:	fb08 e909 	mla	r9, r8, r9, lr
 801ac8a:	f895 e000 	ldrb.w	lr, [r5]
 801ac8e:	fb0c 990e 	mla	r9, ip, lr, r9
 801ac92:	f893 e000 	ldrb.w	lr, [r3]
 801ac96:	785b      	ldrb	r3, [r3, #1]
 801ac98:	fb06 9e0e 	mla	lr, r6, lr, r9
 801ac9c:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 801aca0:	ea4e 0e00 	orr.w	lr, lr, r0
 801aca4:	7860      	ldrb	r0, [r4, #1]
 801aca6:	4350      	muls	r0, r2
 801aca8:	786a      	ldrb	r2, [r5, #1]
 801acaa:	fb08 0007 	mla	r0, r8, r7, r0
 801acae:	fb0c 0202 	mla	r2, ip, r2, r0
 801acb2:	fb06 2303 	mla	r3, r6, r3, r2
 801acb6:	095b      	lsrs	r3, r3, #5
 801acb8:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801acbc:	ea4e 0303 	orr.w	r3, lr, r3
 801acc0:	800b      	strh	r3, [r1, #0]
 801acc2:	b003      	add	sp, #12
 801acc4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801acc8:	af01      	add	r7, sp, #4
 801acca:	e78c      	b.n	801abe6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x56>
 801accc:	ac01      	add	r4, sp, #4
 801acce:	4627      	mov	r7, r4
 801acd0:	e795      	b.n	801abfe <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
 801acd2:	ac01      	add	r4, sp, #4
 801acd4:	e793      	b.n	801abfe <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
 801acd6:	ad01      	add	r5, sp, #4
 801acd8:	e7a1      	b.n	801ac1e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x8e>
 801acda:	ab01      	add	r3, sp, #4
 801acdc:	461d      	mov	r5, r3
 801acde:	e7ab      	b.n	801ac38 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xa8>
 801ace0:	ab01      	add	r3, sp, #4
 801ace2:	e7a9      	b.n	801ac38 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xa8>

0801ace4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801ace4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801ace8:	b08f      	sub	sp, #60	@ 0x3c
 801acea:	e9dd b519 	ldrd	fp, r5, [sp, #100]	@ 0x64
 801acee:	920c      	str	r2, [sp, #48]	@ 0x30
 801acf0:	9a1d      	ldr	r2, [sp, #116]	@ 0x74
 801acf2:	910a      	str	r1, [sp, #40]	@ 0x28
 801acf4:	9306      	str	r3, [sp, #24]
 801acf6:	e9dd 131e 	ldrd	r1, r3, [sp, #120]	@ 0x78
 801acfa:	900d      	str	r0, [sp, #52]	@ 0x34
 801acfc:	6850      	ldr	r0, [r2, #4]
 801acfe:	6812      	ldr	r2, [r2, #0]
 801ad00:	fb00 1303 	mla	r3, r0, r3, r1
 801ad04:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801ad08:	9307      	str	r3, [sp, #28]
 801ad0a:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801ad0c:	681b      	ldr	r3, [r3, #0]
 801ad0e:	9308      	str	r3, [sp, #32]
 801ad10:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801ad12:	685c      	ldr	r4, [r3, #4]
 801ad14:	3404      	adds	r4, #4
 801ad16:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801ad18:	2b00      	cmp	r3, #0
 801ad1a:	dc03      	bgt.n	801ad24 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 801ad1c:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801ad1e:	2b00      	cmp	r3, #0
 801ad20:	f340 81d6 	ble.w	801b0d0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ec>
 801ad24:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801ad26:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801ad2a:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801ad2e:	1e48      	subs	r0, r1, #1
 801ad30:	1e56      	subs	r6, r2, #1
 801ad32:	9b06      	ldr	r3, [sp, #24]
 801ad34:	2b00      	cmp	r3, #0
 801ad36:	f340 80b7 	ble.w	801aea8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c4>
 801ad3a:	ea5f 472b 	movs.w	r7, fp, asr #16
 801ad3e:	ea4f 4325 	mov.w	r3, r5, asr #16
 801ad42:	d406      	bmi.n	801ad52 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801ad44:	4287      	cmp	r7, r0
 801ad46:	da04      	bge.n	801ad52 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801ad48:	2b00      	cmp	r3, #0
 801ad4a:	db02      	blt.n	801ad52 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801ad4c:	42b3      	cmp	r3, r6
 801ad4e:	f2c0 80ac 	blt.w	801aeaa <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c6>
 801ad52:	3701      	adds	r7, #1
 801ad54:	f100 809d 	bmi.w	801ae92 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 801ad58:	42b9      	cmp	r1, r7
 801ad5a:	f2c0 809a 	blt.w	801ae92 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 801ad5e:	3301      	adds	r3, #1
 801ad60:	f100 8097 	bmi.w	801ae92 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 801ad64:	429a      	cmp	r2, r3
 801ad66:	f2c0 8094 	blt.w	801ae92 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 801ad6a:	9b06      	ldr	r3, [sp, #24]
 801ad6c:	930b      	str	r3, [sp, #44]	@ 0x2c
 801ad6e:	9b07      	ldr	r3, [sp, #28]
 801ad70:	9309      	str	r3, [sp, #36]	@ 0x24
 801ad72:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801ad74:	2b00      	cmp	r3, #0
 801ad76:	f340 80b5 	ble.w	801aee4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 801ad7a:	9820      	ldr	r0, [sp, #128]	@ 0x80
 801ad7c:	9a20      	ldr	r2, [sp, #128]	@ 0x80
 801ad7e:	68c7      	ldr	r7, [r0, #12]
 801ad80:	6892      	ldr	r2, [r2, #8]
 801ad82:	ea5f 402b 	movs.w	r0, fp, asr #16
 801ad86:	ea4f 4625 	mov.w	r6, r5, asr #16
 801ad8a:	f3cb 3303 	ubfx	r3, fp, #12, #4
 801ad8e:	f3c5 3103 	ubfx	r1, r5, #12, #4
 801ad92:	f100 80fb 	bmi.w	801af8c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 801ad96:	f102 3cff 	add.w	ip, r2, #4294967295
 801ad9a:	4560      	cmp	r0, ip
 801ad9c:	f280 80f6 	bge.w	801af8c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 801ada0:	2e00      	cmp	r6, #0
 801ada2:	f2c0 80f3 	blt.w	801af8c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 801ada6:	f107 3cff 	add.w	ip, r7, #4294967295
 801adaa:	4566      	cmp	r6, ip
 801adac:	f280 80ee 	bge.w	801af8c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 801adb0:	b212      	sxth	r2, r2
 801adb2:	fb06 0002 	mla	r0, r6, r2, r0
 801adb6:	9e08      	ldr	r6, [sp, #32]
 801adb8:	1837      	adds	r7, r6, r0
 801adba:	5c30      	ldrb	r0, [r6, r0]
 801adbc:	eb00 0840 	add.w	r8, r0, r0, lsl #1
 801adc0:	eb04 0c08 	add.w	ip, r4, r8
 801adc4:	2b00      	cmp	r3, #0
 801adc6:	f000 80d3 	beq.w	801af70 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 801adca:	787e      	ldrb	r6, [r7, #1]
 801adcc:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 801add0:	4426      	add	r6, r4
 801add2:	2900      	cmp	r1, #0
 801add4:	f000 80d4 	beq.w	801af80 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29c>
 801add8:	18b8      	adds	r0, r7, r2
 801adda:	5cba      	ldrb	r2, [r7, r2]
 801addc:	7840      	ldrb	r0, [r0, #1]
 801adde:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801ade2:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801ade6:	4422      	add	r2, r4
 801ade8:	4420      	add	r0, r4
 801adea:	b29b      	uxth	r3, r3
 801adec:	b289      	uxth	r1, r1
 801adee:	fb03 f901 	mul.w	r9, r3, r1
 801adf2:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 801adf6:	011b      	lsls	r3, r3, #4
 801adf8:	b289      	uxth	r1, r1
 801adfa:	78b7      	ldrb	r7, [r6, #2]
 801adfc:	f89c a002 	ldrb.w	sl, [ip, #2]
 801ae00:	f89c c001 	ldrb.w	ip, [ip, #1]
 801ae04:	f5c3 7e80 	rsb	lr, r3, #256	@ 0x100
 801ae08:	eba3 0309 	sub.w	r3, r3, r9
 801ae0c:	b29b      	uxth	r3, r3
 801ae0e:	ebae 0e01 	sub.w	lr, lr, r1
 801ae12:	fa1f fe8e 	uxth.w	lr, lr
 801ae16:	435f      	muls	r7, r3
 801ae18:	fb0e 770a 	mla	r7, lr, sl, r7
 801ae1c:	f892 a002 	ldrb.w	sl, [r2, #2]
 801ae20:	fb01 770a 	mla	r7, r1, sl, r7
 801ae24:	f890 a002 	ldrb.w	sl, [r0, #2]
 801ae28:	fb09 7a0a 	mla	sl, r9, sl, r7
 801ae2c:	f814 7008 	ldrb.w	r7, [r4, r8]
 801ae30:	f896 8000 	ldrb.w	r8, [r6]
 801ae34:	7876      	ldrb	r6, [r6, #1]
 801ae36:	fb03 f808 	mul.w	r8, r3, r8
 801ae3a:	fb0e 8807 	mla	r8, lr, r7, r8
 801ae3e:	7817      	ldrb	r7, [r2, #0]
 801ae40:	fb01 8807 	mla	r8, r1, r7, r8
 801ae44:	7807      	ldrb	r7, [r0, #0]
 801ae46:	fb09 8707 	mla	r7, r9, r7, r8
 801ae4a:	f40a 4a78 	and.w	sl, sl, #63488	@ 0xf800
 801ae4e:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801ae52:	ea47 070a 	orr.w	r7, r7, sl
 801ae56:	4373      	muls	r3, r6
 801ae58:	f892 a001 	ldrb.w	sl, [r2, #1]
 801ae5c:	fb0e 330c 	mla	r3, lr, ip, r3
 801ae60:	fb01 310a 	mla	r1, r1, sl, r3
 801ae64:	f890 a001 	ldrb.w	sl, [r0, #1]
 801ae68:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801ae6a:	fb09 1a0a 	mla	sl, r9, sl, r1
 801ae6e:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801ae72:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 801ae76:	ea47 070a 	orr.w	r7, r7, sl
 801ae7a:	801f      	strh	r7, [r3, #0]
 801ae7c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801ae7e:	3302      	adds	r3, #2
 801ae80:	9309      	str	r3, [sp, #36]	@ 0x24
 801ae82:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
 801ae84:	449b      	add	fp, r3
 801ae86:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801ae88:	441d      	add	r5, r3
 801ae8a:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801ae8c:	3b01      	subs	r3, #1
 801ae8e:	930b      	str	r3, [sp, #44]	@ 0x2c
 801ae90:	e76f      	b.n	801ad72 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801ae92:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
 801ae94:	449b      	add	fp, r3
 801ae96:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801ae98:	441d      	add	r5, r3
 801ae9a:	9b06      	ldr	r3, [sp, #24]
 801ae9c:	3b01      	subs	r3, #1
 801ae9e:	9306      	str	r3, [sp, #24]
 801aea0:	9b07      	ldr	r3, [sp, #28]
 801aea2:	3302      	adds	r3, #2
 801aea4:	9307      	str	r3, [sp, #28]
 801aea6:	e744      	b.n	801ad32 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e>
 801aea8:	d023      	beq.n	801aef2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20e>
 801aeaa:	9b06      	ldr	r3, [sp, #24]
 801aeac:	981b      	ldr	r0, [sp, #108]	@ 0x6c
 801aeae:	3b01      	subs	r3, #1
 801aeb0:	fb00 b003 	mla	r0, r0, r3, fp
 801aeb4:	1400      	asrs	r0, r0, #16
 801aeb6:	f53f af58 	bmi.w	801ad6a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801aeba:	3901      	subs	r1, #1
 801aebc:	4288      	cmp	r0, r1
 801aebe:	f6bf af54 	bge.w	801ad6a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801aec2:	991c      	ldr	r1, [sp, #112]	@ 0x70
 801aec4:	fb01 5303 	mla	r3, r1, r3, r5
 801aec8:	141b      	asrs	r3, r3, #16
 801aeca:	f53f af4e 	bmi.w	801ad6a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801aece:	3a01      	subs	r2, #1
 801aed0:	4293      	cmp	r3, r2
 801aed2:	f6bf af4a 	bge.w	801ad6a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801aed6:	9b06      	ldr	r3, [sp, #24]
 801aed8:	9309      	str	r3, [sp, #36]	@ 0x24
 801aeda:	9b07      	ldr	r3, [sp, #28]
 801aedc:	930b      	str	r3, [sp, #44]	@ 0x2c
 801aede:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801aee0:	2b00      	cmp	r3, #0
 801aee2:	dc70      	bgt.n	801afc6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e2>
 801aee4:	9b06      	ldr	r3, [sp, #24]
 801aee6:	9a07      	ldr	r2, [sp, #28]
 801aee8:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801aeec:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801aef0:	9307      	str	r3, [sp, #28]
 801aef2:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801aef4:	2b00      	cmp	r3, #0
 801aef6:	f340 80eb 	ble.w	801b0d0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ec>
 801aefa:	ee30 0a04 	vadd.f32	s0, s0, s8
 801aefe:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 801af02:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801af06:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 801af08:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801af0c:	ee31 1a05 	vadd.f32	s2, s2, s10
 801af10:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801af14:	eef0 6a62 	vmov.f32	s13, s5
 801af18:	ee61 7a27 	vmul.f32	s15, s2, s15
 801af1c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801af20:	ee77 2a62 	vsub.f32	s5, s14, s5
 801af24:	ee16 ba90 	vmov	fp, s13
 801af28:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801af2c:	eef0 6a43 	vmov.f32	s13, s6
 801af30:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801af34:	ee12 2a90 	vmov	r2, s5
 801af38:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801af3c:	fb92 f3f3 	sdiv	r3, r2, r3
 801af40:	ee13 2a10 	vmov	r2, s6
 801af44:	931b      	str	r3, [sp, #108]	@ 0x6c
 801af46:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 801af48:	fb92 f3f3 	sdiv	r3, r2, r3
 801af4c:	931c      	str	r3, [sp, #112]	@ 0x70
 801af4e:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801af50:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 801af52:	3b01      	subs	r3, #1
 801af54:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801af58:	930a      	str	r3, [sp, #40]	@ 0x28
 801af5a:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 801af5c:	bf08      	it	eq
 801af5e:	4613      	moveq	r3, r2
 801af60:	ee16 5a90 	vmov	r5, s13
 801af64:	9306      	str	r3, [sp, #24]
 801af66:	eeb0 3a67 	vmov.f32	s6, s15
 801af6a:	eef0 2a47 	vmov.f32	s5, s14
 801af6e:	e6d2      	b.n	801ad16 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 801af70:	b149      	cbz	r1, 801af86 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 801af72:	5cba      	ldrb	r2, [r7, r2]
 801af74:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801af78:	4422      	add	r2, r4
 801af7a:	4660      	mov	r0, ip
 801af7c:	4666      	mov	r6, ip
 801af7e:	e734      	b.n	801adea <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 801af80:	4660      	mov	r0, ip
 801af82:	4662      	mov	r2, ip
 801af84:	e731      	b.n	801adea <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 801af86:	4660      	mov	r0, ip
 801af88:	4662      	mov	r2, ip
 801af8a:	e7f7      	b.n	801af7c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x298>
 801af8c:	f110 0c01 	adds.w	ip, r0, #1
 801af90:	f53f af74 	bmi.w	801ae7c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801af94:	4562      	cmp	r2, ip
 801af96:	f6ff af71 	blt.w	801ae7c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801af9a:	f116 0c01 	adds.w	ip, r6, #1
 801af9e:	f53f af6d 	bmi.w	801ae7c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801afa2:	4567      	cmp	r7, ip
 801afa4:	f6ff af6a 	blt.w	801ae7c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801afa8:	b23f      	sxth	r7, r7
 801afaa:	b212      	sxth	r2, r2
 801afac:	e9cd 3104 	strd	r3, r1, [sp, #16]
 801afb0:	e9cd 0602 	strd	r0, r6, [sp, #8]
 801afb4:	9200      	str	r2, [sp, #0]
 801afb6:	9701      	str	r7, [sp, #4]
 801afb8:	4623      	mov	r3, r4
 801afba:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 801afbe:	980d      	ldr	r0, [sp, #52]	@ 0x34
 801afc0:	f7ff fde6 	bl	801ab90 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>
 801afc4:	e75a      	b.n	801ae7c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801afc6:	9a20      	ldr	r2, [sp, #128]	@ 0x80
 801afc8:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
 801afcc:	ea4f 462b 	mov.w	r6, fp, asr #16
 801afd0:	1428      	asrs	r0, r5, #16
 801afd2:	fb02 6000 	mla	r0, r2, r0, r6
 801afd6:	9e08      	ldr	r6, [sp, #32]
 801afd8:	f816 8000 	ldrb.w	r8, [r6, r0]
 801afdc:	f3cb 3303 	ubfx	r3, fp, #12, #4
 801afe0:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 801afe4:	f3c5 3103 	ubfx	r1, r5, #12, #4
 801afe8:	1837      	adds	r7, r6, r0
 801afea:	eb04 0c08 	add.w	ip, r4, r8
 801afee:	2b00      	cmp	r3, #0
 801aff0:	d060      	beq.n	801b0b4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d0>
 801aff2:	787e      	ldrb	r6, [r7, #1]
 801aff4:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 801aff8:	4426      	add	r6, r4
 801affa:	2900      	cmp	r1, #0
 801affc:	d062      	beq.n	801b0c4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e0>
 801affe:	18b8      	adds	r0, r7, r2
 801b000:	5cba      	ldrb	r2, [r7, r2]
 801b002:	7840      	ldrb	r0, [r0, #1]
 801b004:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801b008:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801b00c:	4422      	add	r2, r4
 801b00e:	4420      	add	r0, r4
 801b010:	b29b      	uxth	r3, r3
 801b012:	b289      	uxth	r1, r1
 801b014:	fb03 f901 	mul.w	r9, r3, r1
 801b018:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 801b01c:	011b      	lsls	r3, r3, #4
 801b01e:	b289      	uxth	r1, r1
 801b020:	78b7      	ldrb	r7, [r6, #2]
 801b022:	f89c a002 	ldrb.w	sl, [ip, #2]
 801b026:	f89c c001 	ldrb.w	ip, [ip, #1]
 801b02a:	f5c3 7e80 	rsb	lr, r3, #256	@ 0x100
 801b02e:	eba3 0309 	sub.w	r3, r3, r9
 801b032:	b29b      	uxth	r3, r3
 801b034:	ebae 0e01 	sub.w	lr, lr, r1
 801b038:	fa1f fe8e 	uxth.w	lr, lr
 801b03c:	435f      	muls	r7, r3
 801b03e:	fb0e 770a 	mla	r7, lr, sl, r7
 801b042:	f892 a002 	ldrb.w	sl, [r2, #2]
 801b046:	fb01 770a 	mla	r7, r1, sl, r7
 801b04a:	f890 a002 	ldrb.w	sl, [r0, #2]
 801b04e:	fb09 7a0a 	mla	sl, r9, sl, r7
 801b052:	f814 7008 	ldrb.w	r7, [r4, r8]
 801b056:	f896 8000 	ldrb.w	r8, [r6]
 801b05a:	7876      	ldrb	r6, [r6, #1]
 801b05c:	fb03 f808 	mul.w	r8, r3, r8
 801b060:	fb0e 8807 	mla	r8, lr, r7, r8
 801b064:	7817      	ldrb	r7, [r2, #0]
 801b066:	fb01 8807 	mla	r8, r1, r7, r8
 801b06a:	7807      	ldrb	r7, [r0, #0]
 801b06c:	fb09 8707 	mla	r7, r9, r7, r8
 801b070:	f40a 4a78 	and.w	sl, sl, #63488	@ 0xf800
 801b074:	4373      	muls	r3, r6
 801b076:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801b07a:	7856      	ldrb	r6, [r2, #1]
 801b07c:	ea47 070a 	orr.w	r7, r7, sl
 801b080:	fb0e 330c 	mla	r3, lr, ip, r3
 801b084:	f890 a001 	ldrb.w	sl, [r0, #1]
 801b088:	fb01 3306 	mla	r3, r1, r6, r3
 801b08c:	fb09 3a0a 	mla	sl, r9, sl, r3
 801b090:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801b094:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801b096:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 801b09a:	ea47 070a 	orr.w	r7, r7, sl
 801b09e:	f823 7b02 	strh.w	r7, [r3], #2
 801b0a2:	930b      	str	r3, [sp, #44]	@ 0x2c
 801b0a4:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
 801b0a6:	449b      	add	fp, r3
 801b0a8:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801b0aa:	441d      	add	r5, r3
 801b0ac:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801b0ae:	3b01      	subs	r3, #1
 801b0b0:	9309      	str	r3, [sp, #36]	@ 0x24
 801b0b2:	e714      	b.n	801aede <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fa>
 801b0b4:	b149      	cbz	r1, 801b0ca <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
 801b0b6:	5cba      	ldrb	r2, [r7, r2]
 801b0b8:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801b0bc:	4422      	add	r2, r4
 801b0be:	4660      	mov	r0, ip
 801b0c0:	4666      	mov	r6, ip
 801b0c2:	e7a5      	b.n	801b010 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32c>
 801b0c4:	4660      	mov	r0, ip
 801b0c6:	4662      	mov	r2, ip
 801b0c8:	e7a2      	b.n	801b010 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32c>
 801b0ca:	4660      	mov	r0, ip
 801b0cc:	4662      	mov	r2, ip
 801b0ce:	e7f7      	b.n	801b0c0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3dc>
 801b0d0:	b00f      	add	sp, #60	@ 0x3c
 801b0d2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801b0d6 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>:
 801b0d6:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b0da:	b085      	sub	sp, #20
 801b0dc:	e9dd 7410 	ldrd	r7, r4, [sp, #64]	@ 0x40
 801b0e0:	f9bd c038 	ldrsh.w	ip, [sp, #56]	@ 0x38
 801b0e4:	9102      	str	r1, [sp, #8]
 801b0e6:	2c00      	cmp	r4, #0
 801b0e8:	fb04 710c 	mla	r1, r4, ip, r7
 801b0ec:	f9bd 803c 	ldrsh.w	r8, [sp, #60]	@ 0x3c
 801b0f0:	f89d 6048 	ldrb.w	r6, [sp, #72]	@ 0x48
 801b0f4:	f89d 004c 	ldrb.w	r0, [sp, #76]	@ 0x4c
 801b0f8:	eb02 0e01 	add.w	lr, r2, r1
 801b0fc:	f2c0 8122 	blt.w	801b344 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26e>
 801b100:	45a0      	cmp	r8, r4
 801b102:	f340 811f 	ble.w	801b344 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26e>
 801b106:	2f00      	cmp	r7, #0
 801b108:	f2c0 811a 	blt.w	801b340 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26a>
 801b10c:	45bc      	cmp	ip, r7
 801b10e:	f340 8117 	ble.w	801b340 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26a>
 801b112:	5c52      	ldrb	r2, [r2, r1]
 801b114:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 801b118:	1c7a      	adds	r2, r7, #1
 801b11a:	f100 8116 	bmi.w	801b34a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x274>
 801b11e:	4594      	cmp	ip, r2
 801b120:	f340 8113 	ble.w	801b34a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x274>
 801b124:	2e00      	cmp	r6, #0
 801b126:	f000 8112 	beq.w	801b34e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x278>
 801b12a:	f89e 2001 	ldrb.w	r2, [lr, #1]
 801b12e:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 801b132:	3401      	adds	r4, #1
 801b134:	f100 810f 	bmi.w	801b356 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x280>
 801b138:	45a0      	cmp	r8, r4
 801b13a:	f340 810c 	ble.w	801b356 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x280>
 801b13e:	2800      	cmp	r0, #0
 801b140:	f000 810c 	beq.w	801b35c <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x286>
 801b144:	2f00      	cmp	r7, #0
 801b146:	f2c0 8104 	blt.w	801b352 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x27c>
 801b14a:	45bc      	cmp	ip, r7
 801b14c:	f340 8101 	ble.w	801b352 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x27c>
 801b150:	f81e 200c 	ldrb.w	r2, [lr, ip]
 801b154:	f853 4022 	ldr.w	r4, [r3, r2, lsl #2]
 801b158:	3701      	adds	r7, #1
 801b15a:	f100 8102 	bmi.w	801b362 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x28c>
 801b15e:	45bc      	cmp	ip, r7
 801b160:	f340 80ff 	ble.w	801b362 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x28c>
 801b164:	2e00      	cmp	r6, #0
 801b166:	f000 80fe 	beq.w	801b366 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x290>
 801b16a:	44f4      	add	ip, lr
 801b16c:	f89c 2001 	ldrb.w	r2, [ip, #1]
 801b170:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 801b174:	b2b6      	uxth	r6, r6
 801b176:	b280      	uxth	r0, r0
 801b178:	fb00 fe06 	mul.w	lr, r0, r6
 801b17c:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 801b180:	0136      	lsls	r6, r6, #4
 801b182:	eba6 070e 	sub.w	r7, r6, lr
 801b186:	b280      	uxth	r0, r0
 801b188:	f5c6 7380 	rsb	r3, r6, #256	@ 0x100
 801b18c:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 801b190:	b2bf      	uxth	r7, r7
 801b192:	1a1b      	subs	r3, r3, r0
 801b194:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 801b198:	b29b      	uxth	r3, r3
 801b19a:	fb0a f607 	mul.w	r6, sl, r7
 801b19e:	ea4f 6914 	mov.w	r9, r4, lsr #24
 801b1a2:	fb0b 6603 	mla	r6, fp, r3, r6
 801b1a6:	ea4f 6812 	mov.w	r8, r2, lsr #24
 801b1aa:	fb00 6609 	mla	r6, r0, r9, r6
 801b1ae:	fb0e 6608 	mla	r6, lr, r8, r6
 801b1b2:	f3c6 2607 	ubfx	r6, r6, #8, #8
 801b1b6:	9600      	str	r6, [sp, #0]
 801b1b8:	2e00      	cmp	r6, #0
 801b1ba:	f000 80be 	beq.w	801b33a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x264>
 801b1be:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 801b1c2:	fb0b fc0c 	mul.w	ip, fp, ip
 801b1c6:	f405 457f 	and.w	r5, r5, #65280	@ 0xff00
 801b1ca:	fb0b f505 	mul.w	r5, fp, r5
 801b1ce:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 801b1d2:	f00b 1bff 	and.w	fp, fp, #16711935	@ 0xff00ff
 801b1d6:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 801b1da:	44dc      	add	ip, fp
 801b1dc:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801b1e0:	9501      	str	r5, [sp, #4]
 801b1e2:	f00c 15ff 	and.w	r5, ip, #16711935	@ 0xff00ff
 801b1e6:	9503      	str	r5, [sp, #12]
 801b1e8:	9d01      	ldr	r5, [sp, #4]
 801b1ea:	9e02      	ldr	r6, [sp, #8]
 801b1ec:	f505 7c80 	add.w	ip, r5, #256	@ 0x100
 801b1f0:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 801b1f4:	f001 1cff 	and.w	ip, r1, #16711935	@ 0xff00ff
 801b1f8:	fb0a fc0c 	mul.w	ip, sl, ip
 801b1fc:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 801b200:	ea4f 251c 	mov.w	r5, ip, lsr #8
 801b204:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 801b208:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 801b20c:	4465      	add	r5, ip
 801b20e:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 801b212:	f404 447f 	and.w	r4, r4, #65280	@ 0xff00
 801b216:	fb09 fc0c 	mul.w	ip, r9, ip
 801b21a:	fb09 f904 	mul.w	r9, r9, r4
 801b21e:	f509 7480 	add.w	r4, r9, #256	@ 0x100
 801b222:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 801b226:	f002 14ff 	and.w	r4, r2, #16711935	@ 0xff00ff
 801b22a:	fb08 f404 	mul.w	r4, r8, r4
 801b22e:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 801b232:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
 801b236:	fb08 f802 	mul.w	r8, r8, r2
 801b23a:	fb0a fa01 	mul.w	sl, sl, r1
 801b23e:	0a22      	lsrs	r2, r4, #8
 801b240:	f50a 7180 	add.w	r1, sl, #256	@ 0x100
 801b244:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 801b248:	f104 1401 	add.w	r4, r4, #65537	@ 0x10001
 801b24c:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 801b250:	4414      	add	r4, r2
 801b252:	ea4f 211c 	mov.w	r1, ip, lsr #8
 801b256:	f508 7280 	add.w	r2, r8, #256	@ 0x100
 801b25a:	0a2d      	lsrs	r5, r5, #8
 801b25c:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 801b260:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 801b264:	9a03      	ldr	r2, [sp, #12]
 801b266:	8836      	ldrh	r6, [r6, #0]
 801b268:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 801b26c:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 801b270:	437d      	muls	r5, r7
 801b272:	4461      	add	r1, ip
 801b274:	0a24      	lsrs	r4, r4, #8
 801b276:	fb02 5503 	mla	r5, r2, r3, r5
 801b27a:	0a09      	lsrs	r1, r1, #8
 801b27c:	f004 14ff 	and.w	r4, r4, #16711935	@ 0xff00ff
 801b280:	fb04 540e 	mla	r4, r4, lr, r5
 801b284:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 801b288:	fb01 4100 	mla	r1, r1, r0, r4
 801b28c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801b290:	0a09      	lsrs	r1, r1, #8
 801b292:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801b296:	f001 14ff 	and.w	r4, r1, #16711935	@ 0xff00ff
 801b29a:	fb07 f70a 	mul.w	r7, r7, sl
 801b29e:	ea4f 2818 	mov.w	r8, r8, lsr #8
 801b2a2:	f40b 417f 	and.w	r1, fp, #65280	@ 0xff00
 801b2a6:	fb03 7101 	mla	r1, r3, r1, r7
 801b2aa:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801b2ae:	f408 487f 	and.w	r8, r8, #65280	@ 0xff00
 801b2b2:	fb0e 1e08 	mla	lr, lr, r8, r1
 801b2b6:	f409 417f 	and.w	r1, r9, #65280	@ 0xff00
 801b2ba:	fb00 e101 	mla	r1, r0, r1, lr
 801b2be:	f89d 0050 	ldrb.w	r0, [sp, #80]	@ 0x50
 801b2c2:	9a00      	ldr	r2, [sp, #0]
 801b2c4:	b287      	uxth	r7, r0
 801b2c6:	437a      	muls	r2, r7
 801b2c8:	0a09      	lsrs	r1, r1, #8
 801b2ca:	1c53      	adds	r3, r2, #1
 801b2cc:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 801b2d0:	4321      	orrs	r1, r4
 801b2d2:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801b2d6:	1235      	asrs	r5, r6, #8
 801b2d8:	0c0a      	lsrs	r2, r1, #16
 801b2da:	ea6f 2313 	mvn.w	r3, r3, lsr #8
 801b2de:	b2db      	uxtb	r3, r3
 801b2e0:	fb12 f207 	smulbb	r2, r2, r7
 801b2e4:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 801b2e8:	fb05 2503 	mla	r5, r5, r3, r2
 801b2ec:	f3c1 2407 	ubfx	r4, r1, #8, #8
 801b2f0:	10f2      	asrs	r2, r6, #3
 801b2f2:	b2c8      	uxtb	r0, r1
 801b2f4:	00f6      	lsls	r6, r6, #3
 801b2f6:	fb14 f407 	smulbb	r4, r4, r7
 801b2fa:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 801b2fe:	b2f6      	uxtb	r6, r6
 801b300:	fb10 f007 	smulbb	r0, r0, r7
 801b304:	fb02 4203 	mla	r2, r2, r3, r4
 801b308:	b2ad      	uxth	r5, r5
 801b30a:	fb06 0303 	mla	r3, r6, r3, r0
 801b30e:	b299      	uxth	r1, r3
 801b310:	b294      	uxth	r4, r2
 801b312:	1c6b      	adds	r3, r5, #1
 801b314:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801b318:	1c62      	adds	r2, r4, #1
 801b31a:	1c4b      	adds	r3, r1, #1
 801b31c:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 801b320:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 801b324:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 801b328:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801b32c:	0952      	lsrs	r2, r2, #5
 801b32e:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801b332:	432b      	orrs	r3, r5
 801b334:	4313      	orrs	r3, r2
 801b336:	9a02      	ldr	r2, [sp, #8]
 801b338:	8013      	strh	r3, [r2, #0]
 801b33a:	b005      	add	sp, #20
 801b33c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801b340:	2500      	movs	r5, #0
 801b342:	e6e9      	b.n	801b118 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x42>
 801b344:	2100      	movs	r1, #0
 801b346:	460d      	mov	r5, r1
 801b348:	e6f3      	b.n	801b132 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 801b34a:	2100      	movs	r1, #0
 801b34c:	e6f1      	b.n	801b132 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 801b34e:	4631      	mov	r1, r6
 801b350:	e6ef      	b.n	801b132 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 801b352:	2400      	movs	r4, #0
 801b354:	e700      	b.n	801b158 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x82>
 801b356:	2200      	movs	r2, #0
 801b358:	4614      	mov	r4, r2
 801b35a:	e70b      	b.n	801b174 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 801b35c:	4602      	mov	r2, r0
 801b35e:	4604      	mov	r4, r0
 801b360:	e708      	b.n	801b174 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 801b362:	2200      	movs	r2, #0
 801b364:	e706      	b.n	801b174 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 801b366:	4632      	mov	r2, r6
 801b368:	e704      	b.n	801b174 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>

0801b36a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801b36a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b36e:	b09f      	sub	sp, #124	@ 0x7c
 801b370:	921b      	str	r2, [sp, #108]	@ 0x6c
 801b372:	9309      	str	r3, [sp, #36]	@ 0x24
 801b374:	9a2d      	ldr	r2, [sp, #180]	@ 0xb4
 801b376:	f89d 30c4 	ldrb.w	r3, [sp, #196]	@ 0xc4
 801b37a:	931c      	str	r3, [sp, #112]	@ 0x70
 801b37c:	9119      	str	r1, [sp, #100]	@ 0x64
 801b37e:	e9dd 132e 	ldrd	r1, r3, [sp, #184]	@ 0xb8
 801b382:	901d      	str	r0, [sp, #116]	@ 0x74
 801b384:	6850      	ldr	r0, [r2, #4]
 801b386:	6812      	ldr	r2, [r2, #0]
 801b388:	9d2a      	ldr	r5, [sp, #168]	@ 0xa8
 801b38a:	fb00 1303 	mla	r3, r0, r3, r1
 801b38e:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801b392:	930c      	str	r3, [sp, #48]	@ 0x30
 801b394:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
 801b396:	681b      	ldr	r3, [r3, #0]
 801b398:	9312      	str	r3, [sp, #72]	@ 0x48
 801b39a:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
 801b39c:	685e      	ldr	r6, [r3, #4]
 801b39e:	f8bd 3070 	ldrh.w	r3, [sp, #112]	@ 0x70
 801b3a2:	930d      	str	r3, [sp, #52]	@ 0x34
 801b3a4:	3604      	adds	r6, #4
 801b3a6:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 801b3a8:	2b00      	cmp	r3, #0
 801b3aa:	dc03      	bgt.n	801b3b4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 801b3ac:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
 801b3ae:	2b00      	cmp	r3, #0
 801b3b0:	f340 8388 	ble.w	801bac4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x75a>
 801b3b4:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
 801b3b6:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801b3ba:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801b3be:	1e48      	subs	r0, r1, #1
 801b3c0:	1e57      	subs	r7, r2, #1
 801b3c2:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801b3c4:	2b00      	cmp	r3, #0
 801b3c6:	f340 8195 	ble.w	801b6f4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 801b3ca:	9c29      	ldr	r4, [sp, #164]	@ 0xa4
 801b3cc:	ea5f 4c24 	movs.w	ip, r4, asr #16
 801b3d0:	ea4f 4325 	mov.w	r3, r5, asr #16
 801b3d4:	d406      	bmi.n	801b3e4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801b3d6:	4584      	cmp	ip, r0
 801b3d8:	da04      	bge.n	801b3e4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801b3da:	2b00      	cmp	r3, #0
 801b3dc:	db02      	blt.n	801b3e4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801b3de:	42bb      	cmp	r3, r7
 801b3e0:	f2c0 8189 	blt.w	801b6f6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38c>
 801b3e4:	f11c 0c01 	adds.w	ip, ip, #1
 801b3e8:	f100 8177 	bmi.w	801b6da <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 801b3ec:	4561      	cmp	r1, ip
 801b3ee:	f2c0 8174 	blt.w	801b6da <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 801b3f2:	3301      	adds	r3, #1
 801b3f4:	f100 8171 	bmi.w	801b6da <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 801b3f8:	429a      	cmp	r2, r3
 801b3fa:	f2c0 816e 	blt.w	801b6da <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 801b3fe:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801b400:	9f0c      	ldr	r7, [sp, #48]	@ 0x30
 801b402:	931a      	str	r3, [sp, #104]	@ 0x68
 801b404:	9b1a      	ldr	r3, [sp, #104]	@ 0x68
 801b406:	2b00      	cmp	r3, #0
 801b408:	f340 8193 	ble.w	801b732 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c8>
 801b40c:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 801b40e:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801b412:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
 801b414:	e9d3 0e02 	ldrd	r0, lr, [r3, #8]
 801b418:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 801b41a:	141b      	asrs	r3, r3, #16
 801b41c:	ea4f 4c25 	mov.w	ip, r5, asr #16
 801b420:	f3c5 3103 	ubfx	r1, r5, #12, #4
 801b424:	f100 81d6 	bmi.w	801b7d4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 801b428:	f100 38ff 	add.w	r8, r0, #4294967295
 801b42c:	4543      	cmp	r3, r8
 801b42e:	f280 81d1 	bge.w	801b7d4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 801b432:	f1bc 0f00 	cmp.w	ip, #0
 801b436:	f2c0 81cd 	blt.w	801b7d4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 801b43a:	f10e 38ff 	add.w	r8, lr, #4294967295
 801b43e:	45c4      	cmp	ip, r8
 801b440:	f280 81c8 	bge.w	801b7d4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 801b444:	b200      	sxth	r0, r0
 801b446:	fb0c 3300 	mla	r3, ip, r0, r3
 801b44a:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 801b44c:	eb04 0803 	add.w	r8, r4, r3
 801b450:	5ce3      	ldrb	r3, [r4, r3]
 801b452:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 801b456:	ea4f 6e13 	mov.w	lr, r3, lsr #24
 801b45a:	2a00      	cmp	r2, #0
 801b45c:	f000 81af 	beq.w	801b7be <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 801b460:	f898 c001 	ldrb.w	ip, [r8, #1]
 801b464:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
 801b468:	940e      	str	r4, [sp, #56]	@ 0x38
 801b46a:	0e24      	lsrs	r4, r4, #24
 801b46c:	9415      	str	r4, [sp, #84]	@ 0x54
 801b46e:	b179      	cbz	r1, 801b490 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 801b470:	eb08 0c00 	add.w	ip, r8, r0
 801b474:	f818 0000 	ldrb.w	r0, [r8, r0]
 801b478:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 801b47c:	900a      	str	r0, [sp, #40]	@ 0x28
 801b47e:	0e00      	lsrs	r0, r0, #24
 801b480:	9013      	str	r0, [sp, #76]	@ 0x4c
 801b482:	f89c 0001 	ldrb.w	r0, [ip, #1]
 801b486:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 801b48a:	900f      	str	r0, [sp, #60]	@ 0x3c
 801b48c:	0e00      	lsrs	r0, r0, #24
 801b48e:	9016      	str	r0, [sp, #88]	@ 0x58
 801b490:	b292      	uxth	r2, r2
 801b492:	b289      	uxth	r1, r1
 801b494:	fb02 f901 	mul.w	r9, r2, r1
 801b498:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 801b49c:	0112      	lsls	r2, r2, #4
 801b49e:	eba2 0809 	sub.w	r8, r2, r9
 801b4a2:	b289      	uxth	r1, r1
 801b4a4:	f5c2 7280 	rsb	r2, r2, #256	@ 0x100
 801b4a8:	9815      	ldr	r0, [sp, #84]	@ 0x54
 801b4aa:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 801b4ac:	fa1f f888 	uxth.w	r8, r8
 801b4b0:	1a52      	subs	r2, r2, r1
 801b4b2:	b292      	uxth	r2, r2
 801b4b4:	fb08 f000 	mul.w	r0, r8, r0
 801b4b8:	fb02 000e 	mla	r0, r2, lr, r0
 801b4bc:	fb01 0004 	mla	r0, r1, r4, r0
 801b4c0:	9c16      	ldr	r4, [sp, #88]	@ 0x58
 801b4c2:	fb09 0004 	mla	r0, r9, r4, r0
 801b4c6:	f3c0 2007 	ubfx	r0, r0, #8, #8
 801b4ca:	2800      	cmp	r0, #0
 801b4cc:	f000 80fa 	beq.w	801b6c4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801b4d0:	f1be 0fff 	cmp.w	lr, #255	@ 0xff
 801b4d4:	d01b      	beq.n	801b50e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 801b4d6:	f003 1aff 	and.w	sl, r3, #16711935	@ 0xff00ff
 801b4da:	fb0e fa0a 	mul.w	sl, lr, sl
 801b4de:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 801b4e2:	fb0e fe03 	mul.w	lr, lr, r3
 801b4e6:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801b4ea:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 801b4ee:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
 801b4f2:	f50e 7c80 	add.w	ip, lr, #256	@ 0x100
 801b4f6:	4453      	add	r3, sl
 801b4f8:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 801b4fc:	0a1b      	lsrs	r3, r3, #8
 801b4fe:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801b502:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 801b506:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 801b50a:	ea43 030c 	orr.w	r3, r3, ip
 801b50e:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 801b510:	2cff      	cmp	r4, #255	@ 0xff
 801b512:	d021      	beq.n	801b558 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 801b514:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 801b516:	f004 1bff 	and.w	fp, r4, #16711935	@ 0xff00ff
 801b51a:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 801b51c:	fb04 fb0b 	mul.w	fp, r4, fp
 801b520:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 801b522:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 801b526:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 801b528:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801b52c:	fb04 fa0a 	mul.w	sl, r4, sl
 801b530:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801b534:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 801b538:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 801b53c:	44de      	add	lr, fp
 801b53e:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801b542:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801b546:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801b54a:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801b54e:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801b552:	ea4e 040a 	orr.w	r4, lr, sl
 801b556:	940e      	str	r4, [sp, #56]	@ 0x38
 801b558:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 801b55a:	2cff      	cmp	r4, #255	@ 0xff
 801b55c:	d021      	beq.n	801b5a2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x238>
 801b55e:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 801b560:	f004 1bff 	and.w	fp, r4, #16711935	@ 0xff00ff
 801b564:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 801b566:	fb04 fb0b 	mul.w	fp, r4, fp
 801b56a:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 801b56c:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 801b570:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 801b572:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801b576:	fb04 fa0a 	mul.w	sl, r4, sl
 801b57a:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801b57e:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 801b582:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 801b586:	44de      	add	lr, fp
 801b588:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801b58c:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801b590:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801b594:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801b598:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801b59c:	ea4e 040a 	orr.w	r4, lr, sl
 801b5a0:	940a      	str	r4, [sp, #40]	@ 0x28
 801b5a2:	9c16      	ldr	r4, [sp, #88]	@ 0x58
 801b5a4:	2cff      	cmp	r4, #255	@ 0xff
 801b5a6:	d021      	beq.n	801b5ec <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x282>
 801b5a8:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
 801b5aa:	f004 1bff 	and.w	fp, r4, #16711935	@ 0xff00ff
 801b5ae:	9c16      	ldr	r4, [sp, #88]	@ 0x58
 801b5b0:	fb04 fb0b 	mul.w	fp, r4, fp
 801b5b4:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
 801b5b6:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 801b5ba:	9c16      	ldr	r4, [sp, #88]	@ 0x58
 801b5bc:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801b5c0:	fb04 fa0a 	mul.w	sl, r4, sl
 801b5c4:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801b5c8:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 801b5cc:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 801b5d0:	44de      	add	lr, fp
 801b5d2:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801b5d6:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801b5da:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801b5de:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801b5e2:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801b5e6:	ea4e 040a 	orr.w	r4, lr, sl
 801b5ea:	940f      	str	r4, [sp, #60]	@ 0x3c
 801b5ec:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 801b5ee:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 801b5f2:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 801b5f4:	f003 1eff 	and.w	lr, r3, #16711935	@ 0xff00ff
 801b5f8:	fb08 fc0c 	mul.w	ip, r8, ip
 801b5fc:	fb02 cc0e 	mla	ip, r2, lr, ip
 801b600:	f004 1eff 	and.w	lr, r4, #16711935	@ 0xff00ff
 801b604:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
 801b606:	fb01 cc0e 	mla	ip, r1, lr, ip
 801b60a:	f004 1eff 	and.w	lr, r4, #16711935	@ 0xff00ff
 801b60e:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 801b610:	fb09 cc0e 	mla	ip, r9, lr, ip
 801b614:	f404 4e7f 	and.w	lr, r4, #65280	@ 0xff00
 801b618:	fb08 f80e 	mul.w	r8, r8, lr
 801b61c:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 801b620:	fb02 8303 	mla	r3, r2, r3, r8
 801b624:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 801b626:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 801b628:	f402 4a7f 	and.w	sl, r2, #65280	@ 0xff00
 801b62c:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 801b62e:	fb01 330a 	mla	r3, r1, sl, r3
 801b632:	f402 417f 	and.w	r1, r2, #65280	@ 0xff00
 801b636:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 801b638:	fb09 3901 	mla	r9, r9, r1, r3
 801b63c:	4342      	muls	r2, r0
 801b63e:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801b642:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801b646:	883b      	ldrh	r3, [r7, #0]
 801b648:	1c50      	adds	r0, r2, #1
 801b64a:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801b64e:	f409 497f 	and.w	r9, r9, #65280	@ 0xff00
 801b652:	ea4c 0c09 	orr.w	ip, ip, r9
 801b656:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 801b65a:	1219      	asrs	r1, r3, #8
 801b65c:	ea4f 421c 	mov.w	r2, ip, lsr #16
 801b660:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 801b664:	b2c0      	uxtb	r0, r0
 801b666:	fb12 f204 	smulbb	r2, r2, r4
 801b66a:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 801b66e:	fb01 2100 	mla	r1, r1, r0, r2
 801b672:	f3cc 2e07 	ubfx	lr, ip, #8, #8
 801b676:	10da      	asrs	r2, r3, #3
 801b678:	fa5f fc8c 	uxtb.w	ip, ip
 801b67c:	00db      	lsls	r3, r3, #3
 801b67e:	fb1c fc04 	smulbb	ip, ip, r4
 801b682:	b2db      	uxtb	r3, r3
 801b684:	b289      	uxth	r1, r1
 801b686:	fb03 c300 	mla	r3, r3, r0, ip
 801b68a:	fa1f fc83 	uxth.w	ip, r3
 801b68e:	1c4b      	adds	r3, r1, #1
 801b690:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 801b694:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 801b698:	fb1e fe04 	smulbb	lr, lr, r4
 801b69c:	f10c 0301 	add.w	r3, ip, #1
 801b6a0:	fb02 e200 	mla	r2, r2, r0, lr
 801b6a4:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 801b6a8:	b292      	uxth	r2, r2
 801b6aa:	f401 4178 	and.w	r1, r1, #63488	@ 0xf800
 801b6ae:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801b6b2:	430b      	orrs	r3, r1
 801b6b4:	1c51      	adds	r1, r2, #1
 801b6b6:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801b6ba:	0952      	lsrs	r2, r2, #5
 801b6bc:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801b6c0:	4313      	orrs	r3, r2
 801b6c2:	803b      	strh	r3, [r7, #0]
 801b6c4:	9b2b      	ldr	r3, [sp, #172]	@ 0xac
 801b6c6:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
 801b6c8:	441a      	add	r2, r3
 801b6ca:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 801b6cc:	9229      	str	r2, [sp, #164]	@ 0xa4
 801b6ce:	441d      	add	r5, r3
 801b6d0:	9b1a      	ldr	r3, [sp, #104]	@ 0x68
 801b6d2:	3b01      	subs	r3, #1
 801b6d4:	3702      	adds	r7, #2
 801b6d6:	931a      	str	r3, [sp, #104]	@ 0x68
 801b6d8:	e694      	b.n	801b404 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 801b6da:	9b2b      	ldr	r3, [sp, #172]	@ 0xac
 801b6dc:	9c29      	ldr	r4, [sp, #164]	@ 0xa4
 801b6de:	441c      	add	r4, r3
 801b6e0:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 801b6e2:	9429      	str	r4, [sp, #164]	@ 0xa4
 801b6e4:	441d      	add	r5, r3
 801b6e6:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801b6e8:	3b01      	subs	r3, #1
 801b6ea:	9309      	str	r3, [sp, #36]	@ 0x24
 801b6ec:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801b6ee:	3302      	adds	r3, #2
 801b6f0:	930c      	str	r3, [sp, #48]	@ 0x30
 801b6f2:	e666      	b.n	801b3c2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 801b6f4:	d024      	beq.n	801b740 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d6>
 801b6f6:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801b6f8:	982b      	ldr	r0, [sp, #172]	@ 0xac
 801b6fa:	9c29      	ldr	r4, [sp, #164]	@ 0xa4
 801b6fc:	3b01      	subs	r3, #1
 801b6fe:	fb00 4003 	mla	r0, r0, r3, r4
 801b702:	1400      	asrs	r0, r0, #16
 801b704:	f53f ae7b 	bmi.w	801b3fe <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801b708:	3901      	subs	r1, #1
 801b70a:	4288      	cmp	r0, r1
 801b70c:	f6bf ae77 	bge.w	801b3fe <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801b710:	992c      	ldr	r1, [sp, #176]	@ 0xb0
 801b712:	fb01 5303 	mla	r3, r1, r3, r5
 801b716:	141b      	asrs	r3, r3, #16
 801b718:	f53f ae71 	bmi.w	801b3fe <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801b71c:	3a01      	subs	r2, #1
 801b71e:	4293      	cmp	r3, r2
 801b720:	f6bf ae6d 	bge.w	801b3fe <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801b724:	f8dd b024 	ldr.w	fp, [sp, #36]	@ 0x24
 801b728:	f8dd 9030 	ldr.w	r9, [sp, #48]	@ 0x30
 801b72c:	f1bb 0f00 	cmp.w	fp, #0
 801b730:	dc70      	bgt.n	801b814 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4aa>
 801b732:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801b734:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 801b738:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801b73a:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 801b73e:	930c      	str	r3, [sp, #48]	@ 0x30
 801b740:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 801b742:	2b00      	cmp	r3, #0
 801b744:	f340 81be 	ble.w	801bac4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x75a>
 801b748:	ee30 0a04 	vadd.f32	s0, s0, s8
 801b74c:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 801b750:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801b754:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801b756:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801b75a:	ee31 1a05 	vadd.f32	s2, s2, s10
 801b75e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801b762:	eef0 6a62 	vmov.f32	s13, s5
 801b766:	ee61 7a27 	vmul.f32	s15, s2, s15
 801b76a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801b76e:	ee77 2a62 	vsub.f32	s5, s14, s5
 801b772:	edcd 6a29 	vstr	s13, [sp, #164]	@ 0xa4
 801b776:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801b77a:	eef0 6a43 	vmov.f32	s13, s6
 801b77e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801b782:	ee12 2a90 	vmov	r2, s5
 801b786:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801b78a:	fb92 f3f3 	sdiv	r3, r2, r3
 801b78e:	ee13 2a10 	vmov	r2, s6
 801b792:	932b      	str	r3, [sp, #172]	@ 0xac
 801b794:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801b796:	fb92 f3f3 	sdiv	r3, r2, r3
 801b79a:	932c      	str	r3, [sp, #176]	@ 0xb0
 801b79c:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 801b79e:	9a1b      	ldr	r2, [sp, #108]	@ 0x6c
 801b7a0:	3b01      	subs	r3, #1
 801b7a2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801b7a6:	9319      	str	r3, [sp, #100]	@ 0x64
 801b7a8:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801b7aa:	bf08      	it	eq
 801b7ac:	4613      	moveq	r3, r2
 801b7ae:	ee16 5a90 	vmov	r5, s13
 801b7b2:	9309      	str	r3, [sp, #36]	@ 0x24
 801b7b4:	eeb0 3a67 	vmov.f32	s6, s15
 801b7b8:	eef0 2a47 	vmov.f32	s5, s14
 801b7bc:	e5f3      	b.n	801b3a6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 801b7be:	2900      	cmp	r1, #0
 801b7c0:	f43f ae66 	beq.w	801b490 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 801b7c4:	f818 0000 	ldrb.w	r0, [r8, r0]
 801b7c8:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 801b7cc:	900a      	str	r0, [sp, #40]	@ 0x28
 801b7ce:	0e00      	lsrs	r0, r0, #24
 801b7d0:	9013      	str	r0, [sp, #76]	@ 0x4c
 801b7d2:	e65d      	b.n	801b490 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 801b7d4:	f113 0801 	adds.w	r8, r3, #1
 801b7d8:	f53f af74 	bmi.w	801b6c4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801b7dc:	4540      	cmp	r0, r8
 801b7de:	f6ff af71 	blt.w	801b6c4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801b7e2:	f11c 0801 	adds.w	r8, ip, #1
 801b7e6:	f53f af6d 	bmi.w	801b6c4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801b7ea:	45c6      	cmp	lr, r8
 801b7ec:	f6ff af6a 	blt.w	801b6c4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801b7f0:	9c1c      	ldr	r4, [sp, #112]	@ 0x70
 801b7f2:	9302      	str	r3, [sp, #8]
 801b7f4:	b200      	sxth	r0, r0
 801b7f6:	fa0f f38e 	sxth.w	r3, lr
 801b7fa:	e9cd 1405 	strd	r1, r4, [sp, #20]
 801b7fe:	e9cd c203 	strd	ip, r2, [sp, #12]
 801b802:	9301      	str	r3, [sp, #4]
 801b804:	9000      	str	r0, [sp, #0]
 801b806:	4633      	mov	r3, r6
 801b808:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 801b80a:	981d      	ldr	r0, [sp, #116]	@ 0x74
 801b80c:	4639      	mov	r1, r7
 801b80e:	f7ff fc62 	bl	801b0d6 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>
 801b812:	e757      	b.n	801b6c4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801b814:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 801b816:	9c29      	ldr	r4, [sp, #164]	@ 0xa4
 801b818:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801b81c:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
 801b81e:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801b822:	1427      	asrs	r7, r4, #16
 801b824:	142b      	asrs	r3, r5, #16
 801b826:	fb01 7303 	mla	r3, r1, r3, r7
 801b82a:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 801b82c:	18e7      	adds	r7, r4, r3
 801b82e:	5ce3      	ldrb	r3, [r4, r3]
 801b830:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 801b834:	f3c5 3003 	ubfx	r0, r5, #12, #4
 801b838:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 801b83c:	2a00      	cmp	r2, #0
 801b83e:	f000 8137 	beq.w	801bab0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x746>
 801b842:	f897 e001 	ldrb.w	lr, [r7, #1]
 801b846:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
 801b84a:	9410      	str	r4, [sp, #64]	@ 0x40
 801b84c:	0e24      	lsrs	r4, r4, #24
 801b84e:	9417      	str	r4, [sp, #92]	@ 0x5c
 801b850:	b170      	cbz	r0, 801b870 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 801b852:	eb07 0e01 	add.w	lr, r7, r1
 801b856:	5c79      	ldrb	r1, [r7, r1]
 801b858:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801b85c:	910b      	str	r1, [sp, #44]	@ 0x2c
 801b85e:	0e09      	lsrs	r1, r1, #24
 801b860:	9114      	str	r1, [sp, #80]	@ 0x50
 801b862:	f89e 1001 	ldrb.w	r1, [lr, #1]
 801b866:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801b86a:	9111      	str	r1, [sp, #68]	@ 0x44
 801b86c:	0e09      	lsrs	r1, r1, #24
 801b86e:	9118      	str	r1, [sp, #96]	@ 0x60
 801b870:	b292      	uxth	r2, r2
 801b872:	b280      	uxth	r0, r0
 801b874:	fb02 f800 	mul.w	r8, r2, r0
 801b878:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 801b87c:	0112      	lsls	r2, r2, #4
 801b87e:	eba2 0e08 	sub.w	lr, r2, r8
 801b882:	b280      	uxth	r0, r0
 801b884:	f5c2 7280 	rsb	r2, r2, #256	@ 0x100
 801b888:	9917      	ldr	r1, [sp, #92]	@ 0x5c
 801b88a:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 801b88c:	fa1f fe8e 	uxth.w	lr, lr
 801b890:	1a12      	subs	r2, r2, r0
 801b892:	b292      	uxth	r2, r2
 801b894:	fb0e f101 	mul.w	r1, lr, r1
 801b898:	fb02 110c 	mla	r1, r2, ip, r1
 801b89c:	fb00 1104 	mla	r1, r0, r4, r1
 801b8a0:	9c18      	ldr	r4, [sp, #96]	@ 0x60
 801b8a2:	fb08 1104 	mla	r1, r8, r4, r1
 801b8a6:	f3c1 2107 	ubfx	r1, r1, #8, #8
 801b8aa:	2900      	cmp	r1, #0
 801b8ac:	f000 80f5 	beq.w	801ba9a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 801b8b0:	f1bc 0fff 	cmp.w	ip, #255	@ 0xff
 801b8b4:	d019      	beq.n	801b8ea <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x580>
 801b8b6:	f003 1aff 	and.w	sl, r3, #16711935	@ 0xff00ff
 801b8ba:	fb0c fa0a 	mul.w	sl, ip, sl
 801b8be:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 801b8c2:	fb0c fc03 	mul.w	ip, ip, r3
 801b8c6:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801b8ca:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 801b8ce:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
 801b8d2:	f50c 7780 	add.w	r7, ip, #256	@ 0x100
 801b8d6:	4453      	add	r3, sl
 801b8d8:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 801b8dc:	0a1b      	lsrs	r3, r3, #8
 801b8de:	0a3f      	lsrs	r7, r7, #8
 801b8e0:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 801b8e4:	f407 477f 	and.w	r7, r7, #65280	@ 0xff00
 801b8e8:	433b      	orrs	r3, r7
 801b8ea:	9c17      	ldr	r4, [sp, #92]	@ 0x5c
 801b8ec:	2cff      	cmp	r4, #255	@ 0xff
 801b8ee:	d020      	beq.n	801b932 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c8>
 801b8f0:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 801b8f2:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
 801b8f6:	9c17      	ldr	r4, [sp, #92]	@ 0x5c
 801b8f8:	4367      	muls	r7, r4
 801b8fa:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 801b8fc:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 801b900:	9c17      	ldr	r4, [sp, #92]	@ 0x5c
 801b902:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801b906:	fb04 fa0a 	mul.w	sl, r4, sl
 801b90a:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 801b90e:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801b912:	44bc      	add	ip, r7
 801b914:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 801b918:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801b91c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801b920:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801b924:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801b928:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801b92c:	ea4c 040a 	orr.w	r4, ip, sl
 801b930:	9410      	str	r4, [sp, #64]	@ 0x40
 801b932:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 801b934:	2cff      	cmp	r4, #255	@ 0xff
 801b936:	d020      	beq.n	801b97a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x610>
 801b938:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 801b93a:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
 801b93e:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 801b940:	4367      	muls	r7, r4
 801b942:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 801b944:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 801b948:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 801b94a:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801b94e:	fb04 fa0a 	mul.w	sl, r4, sl
 801b952:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 801b956:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801b95a:	44bc      	add	ip, r7
 801b95c:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 801b960:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801b964:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801b968:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801b96c:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801b970:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801b974:	ea4c 040a 	orr.w	r4, ip, sl
 801b978:	940b      	str	r4, [sp, #44]	@ 0x2c
 801b97a:	9c18      	ldr	r4, [sp, #96]	@ 0x60
 801b97c:	2cff      	cmp	r4, #255	@ 0xff
 801b97e:	d020      	beq.n	801b9c2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x658>
 801b980:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 801b982:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
 801b986:	9c18      	ldr	r4, [sp, #96]	@ 0x60
 801b988:	4367      	muls	r7, r4
 801b98a:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 801b98c:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 801b990:	9c18      	ldr	r4, [sp, #96]	@ 0x60
 801b992:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801b996:	fb04 fa0a 	mul.w	sl, r4, sl
 801b99a:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 801b99e:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801b9a2:	44bc      	add	ip, r7
 801b9a4:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 801b9a8:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801b9ac:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801b9b0:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801b9b4:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801b9b8:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801b9bc:	ea4c 040a 	orr.w	r4, ip, sl
 801b9c0:	9411      	str	r4, [sp, #68]	@ 0x44
 801b9c2:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 801b9c4:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
 801b9c8:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 801b9ca:	f003 1cff 	and.w	ip, r3, #16711935	@ 0xff00ff
 801b9ce:	fb0e f707 	mul.w	r7, lr, r7
 801b9d2:	fb02 770c 	mla	r7, r2, ip, r7
 801b9d6:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 801b9da:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 801b9dc:	fb00 770c 	mla	r7, r0, ip, r7
 801b9e0:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 801b9e4:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 801b9e6:	fb08 770c 	mla	r7, r8, ip, r7
 801b9ea:	f404 4c7f 	and.w	ip, r4, #65280	@ 0xff00
 801b9ee:	fb0e fe0c 	mul.w	lr, lr, ip
 801b9f2:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 801b9f6:	fb02 e303 	mla	r3, r2, r3, lr
 801b9fa:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 801b9fc:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 801b9fe:	f402 4a7f 	and.w	sl, r2, #65280	@ 0xff00
 801ba02:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 801ba04:	fb00 330a 	mla	r3, r0, sl, r3
 801ba08:	f402 4c7f 	and.w	ip, r2, #65280	@ 0xff00
 801ba0c:	fb08 3c0c 	mla	ip, r8, ip, r3
 801ba10:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801ba12:	f8b9 0000 	ldrh.w	r0, [r9]
 801ba16:	434b      	muls	r3, r1
 801ba18:	0a3f      	lsrs	r7, r7, #8
 801ba1a:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801ba1e:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 801ba22:	1c59      	adds	r1, r3, #1
 801ba24:	f007 17ff 	and.w	r7, r7, #16711935	@ 0xff00ff
 801ba28:	ea47 070c 	orr.w	r7, r7, ip
 801ba2c:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 801ba30:	1202      	asrs	r2, r0, #8
 801ba32:	0c3b      	lsrs	r3, r7, #16
 801ba34:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 801ba38:	b2c9      	uxtb	r1, r1
 801ba3a:	fb13 f304 	smulbb	r3, r3, r4
 801ba3e:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
 801ba42:	fb02 3201 	mla	r2, r2, r1, r3
 801ba46:	f3c7 2c07 	ubfx	ip, r7, #8, #8
 801ba4a:	10c3      	asrs	r3, r0, #3
 801ba4c:	b2ff      	uxtb	r7, r7
 801ba4e:	00c0      	lsls	r0, r0, #3
 801ba50:	b292      	uxth	r2, r2
 801ba52:	fb1c fc04 	smulbb	ip, ip, r4
 801ba56:	f003 03fc 	and.w	r3, r3, #252	@ 0xfc
 801ba5a:	b2c0      	uxtb	r0, r0
 801ba5c:	fb17 f704 	smulbb	r7, r7, r4
 801ba60:	fb03 c301 	mla	r3, r3, r1, ip
 801ba64:	fb00 7001 	mla	r0, r0, r1, r7
 801ba68:	f102 0c01 	add.w	ip, r2, #1
 801ba6c:	b280      	uxth	r0, r0
 801ba6e:	eb0c 2212 	add.w	r2, ip, r2, lsr #8
 801ba72:	f402 4c78 	and.w	ip, r2, #63488	@ 0xf800
 801ba76:	1c42      	adds	r2, r0, #1
 801ba78:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 801ba7c:	b29b      	uxth	r3, r3
 801ba7e:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801ba82:	ea42 020c 	orr.w	r2, r2, ip
 801ba86:	f103 0c01 	add.w	ip, r3, #1
 801ba8a:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
 801ba8e:	095b      	lsrs	r3, r3, #5
 801ba90:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801ba94:	431a      	orrs	r2, r3
 801ba96:	f8a9 2000 	strh.w	r2, [r9]
 801ba9a:	9b2b      	ldr	r3, [sp, #172]	@ 0xac
 801ba9c:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
 801ba9e:	441a      	add	r2, r3
 801baa0:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 801baa2:	9229      	str	r2, [sp, #164]	@ 0xa4
 801baa4:	f109 0902 	add.w	r9, r9, #2
 801baa8:	441d      	add	r5, r3
 801baaa:	f10b 3bff 	add.w	fp, fp, #4294967295
 801baae:	e63d      	b.n	801b72c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c2>
 801bab0:	2800      	cmp	r0, #0
 801bab2:	f43f aedd 	beq.w	801b870 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 801bab6:	5c79      	ldrb	r1, [r7, r1]
 801bab8:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801babc:	910b      	str	r1, [sp, #44]	@ 0x2c
 801babe:	0e09      	lsrs	r1, r1, #24
 801bac0:	9114      	str	r1, [sp, #80]	@ 0x50
 801bac2:	e6d5      	b.n	801b870 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 801bac4:	b01f      	add	sp, #124	@ 0x7c
 801bac6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801baca <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>:
 801baca:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801bace:	b089      	sub	sp, #36	@ 0x24
 801bad0:	9101      	str	r1, [sp, #4]
 801bad2:	9801      	ldr	r0, [sp, #4]
 801bad4:	f9bd c048 	ldrsh.w	ip, [sp, #72]	@ 0x48
 801bad8:	8800      	ldrh	r0, [r0, #0]
 801bada:	f9bd 804c 	ldrsh.w	r8, [sp, #76]	@ 0x4c
 801bade:	f89d 5058 	ldrb.w	r5, [sp, #88]	@ 0x58
 801bae2:	f89d 405c 	ldrb.w	r4, [sp, #92]	@ 0x5c
 801bae6:	1206      	asrs	r6, r0, #8
 801bae8:	e9dd 1714 	ldrd	r1, r7, [sp, #80]	@ 0x50
 801baec:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 801baf0:	9602      	str	r6, [sp, #8]
 801baf2:	10c6      	asrs	r6, r0, #3
 801baf4:	00c0      	lsls	r0, r0, #3
 801baf6:	b2c0      	uxtb	r0, r0
 801baf8:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 801bafc:	9004      	str	r0, [sp, #16]
 801bafe:	2f00      	cmp	r7, #0
 801bb00:	fb07 100c 	mla	r0, r7, ip, r1
 801bb04:	9603      	str	r6, [sp, #12]
 801bb06:	eb02 0e00 	add.w	lr, r2, r0
 801bb0a:	f2c0 810a 	blt.w	801bd22 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x258>
 801bb0e:	45b8      	cmp	r8, r7
 801bb10:	f340 8107 	ble.w	801bd22 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x258>
 801bb14:	2900      	cmp	r1, #0
 801bb16:	f2c0 8102 	blt.w	801bd1e <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x254>
 801bb1a:	458c      	cmp	ip, r1
 801bb1c:	f340 80ff 	ble.w	801bd1e <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x254>
 801bb20:	5c12      	ldrb	r2, [r2, r0]
 801bb22:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 801bb26:	1c4a      	adds	r2, r1, #1
 801bb28:	f100 80fe 	bmi.w	801bd28 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x25e>
 801bb2c:	4594      	cmp	ip, r2
 801bb2e:	f340 80fb 	ble.w	801bd28 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x25e>
 801bb32:	2d00      	cmp	r5, #0
 801bb34:	f000 80fa 	beq.w	801bd2c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x262>
 801bb38:	f89e 2001 	ldrb.w	r2, [lr, #1]
 801bb3c:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
 801bb40:	3701      	adds	r7, #1
 801bb42:	f100 80f7 	bmi.w	801bd34 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x26a>
 801bb46:	45b8      	cmp	r8, r7
 801bb48:	f340 80f4 	ble.w	801bd34 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x26a>
 801bb4c:	2c00      	cmp	r4, #0
 801bb4e:	f000 80f4 	beq.w	801bd3a <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x270>
 801bb52:	2900      	cmp	r1, #0
 801bb54:	eb0e 020c 	add.w	r2, lr, ip
 801bb58:	f2c0 80ea 	blt.w	801bd30 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x266>
 801bb5c:	458c      	cmp	ip, r1
 801bb5e:	f340 80e7 	ble.w	801bd30 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x266>
 801bb62:	f81e 700c 	ldrb.w	r7, [lr, ip]
 801bb66:	f853 7027 	ldr.w	r7, [r3, r7, lsl #2]
 801bb6a:	3101      	adds	r1, #1
 801bb6c:	f100 80e8 	bmi.w	801bd40 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x276>
 801bb70:	458c      	cmp	ip, r1
 801bb72:	f340 80e5 	ble.w	801bd40 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x276>
 801bb76:	2d00      	cmp	r5, #0
 801bb78:	f000 80e4 	beq.w	801bd44 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x27a>
 801bb7c:	7852      	ldrb	r2, [r2, #1]
 801bb7e:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 801bb82:	0e0b      	lsrs	r3, r1, #24
 801bb84:	ea4f 6a10 	mov.w	sl, r0, lsr #24
 801bb88:	9300      	str	r3, [sp, #0]
 801bb8a:	b2a4      	uxth	r4, r4
 801bb8c:	b2ab      	uxth	r3, r5
 801bb8e:	f000 15ff 	and.w	r5, r0, #16711935	@ 0xff00ff
 801bb92:	fb03 f904 	mul.w	r9, r3, r4
 801bb96:	fb0a f505 	mul.w	r5, sl, r5
 801bb9a:	011b      	lsls	r3, r3, #4
 801bb9c:	eba3 0e09 	sub.w	lr, r3, r9
 801bba0:	f5c3 7280 	rsb	r2, r3, #256	@ 0x100
 801bba4:	f400 437f 	and.w	r3, r0, #65280	@ 0xff00
 801bba8:	0a28      	lsrs	r0, r5, #8
 801bbaa:	f000 10ff 	and.w	r0, r0, #16711935	@ 0xff00ff
 801bbae:	f105 1501 	add.w	r5, r5, #65537	@ 0x10001
 801bbb2:	4405      	add	r5, r0
 801bbb4:	0a2d      	lsrs	r5, r5, #8
 801bbb6:	fb0a f303 	mul.w	r3, sl, r3
 801bbba:	f005 10ff 	and.w	r0, r5, #16711935	@ 0xff00ff
 801bbbe:	9005      	str	r0, [sp, #20]
 801bbc0:	f503 7080 	add.w	r0, r3, #256	@ 0x100
 801bbc4:	eb00 2313 	add.w	r3, r0, r3, lsr #8
 801bbc8:	0a1b      	lsrs	r3, r3, #8
 801bbca:	ea4f 6b16 	mov.w	fp, r6, lsr #24
 801bbce:	9306      	str	r3, [sp, #24]
 801bbd0:	f006 13ff 	and.w	r3, r6, #16711935	@ 0xff00ff
 801bbd4:	fb0b f303 	mul.w	r3, fp, r3
 801bbd8:	0a1d      	lsrs	r5, r3, #8
 801bbda:	f406 467f 	and.w	r6, r6, #65280	@ 0xff00
 801bbde:	ea4f 6817 	mov.w	r8, r7, lsr #24
 801bbe2:	fb0b f606 	mul.w	r6, fp, r6
 801bbe6:	f103 1301 	add.w	r3, r3, #65537	@ 0x10001
 801bbea:	f007 1cff 	and.w	ip, r7, #16711935	@ 0xff00ff
 801bbee:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 801bbf2:	f407 477f 	and.w	r7, r7, #65280	@ 0xff00
 801bbf6:	fb08 f707 	mul.w	r7, r8, r7
 801bbfa:	441d      	add	r5, r3
 801bbfc:	f506 7380 	add.w	r3, r6, #256	@ 0x100
 801bc00:	eb03 2616 	add.w	r6, r3, r6, lsr #8
 801bc04:	f507 7380 	add.w	r3, r7, #256	@ 0x100
 801bc08:	eb03 2317 	add.w	r3, r3, r7, lsr #8
 801bc0c:	fb08 fc0c 	mul.w	ip, r8, ip
 801bc10:	0a1b      	lsrs	r3, r3, #8
 801bc12:	9307      	str	r3, [sp, #28]
 801bc14:	ea4f 201c 	mov.w	r0, ip, lsr #8
 801bc18:	0e0b      	lsrs	r3, r1, #24
 801bc1a:	f001 17ff 	and.w	r7, r1, #16711935	@ 0xff00ff
 801bc1e:	435f      	muls	r7, r3
 801bc20:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 801bc24:	f000 10ff 	and.w	r0, r0, #16711935	@ 0xff00ff
 801bc28:	ebc9 1404 	rsb	r4, r9, r4, lsl #4
 801bc2c:	4460      	add	r0, ip
 801bc2e:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801bc32:	b2a4      	uxth	r4, r4
 801bc34:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 801bc38:	0a2d      	lsrs	r5, r5, #8
 801bc3a:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 801bc3e:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801bc42:	fa1f fe8e 	uxth.w	lr, lr
 801bc46:	4359      	muls	r1, r3
 801bc48:	1b12      	subs	r2, r2, r4
 801bc4a:	9b05      	ldr	r3, [sp, #20]
 801bc4c:	44bc      	add	ip, r7
 801bc4e:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 801bc52:	b292      	uxth	r2, r2
 801bc54:	fb05 f50e 	mul.w	r5, r5, lr
 801bc58:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801bc5c:	fb03 5502 	mla	r5, r3, r2, r5
 801bc60:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801bc64:	9b06      	ldr	r3, [sp, #24]
 801bc66:	f501 7780 	add.w	r7, r1, #256	@ 0x100
 801bc6a:	0a36      	lsrs	r6, r6, #8
 801bc6c:	0a00      	lsrs	r0, r0, #8
 801bc6e:	fb0c 5509 	mla	r5, ip, r9, r5
 801bc72:	f000 10ff 	and.w	r0, r0, #16711935	@ 0xff00ff
 801bc76:	eb07 2111 	add.w	r1, r7, r1, lsr #8
 801bc7a:	f406 467f 	and.w	r6, r6, #65280	@ 0xff00
 801bc7e:	fb00 5504 	mla	r5, r0, r4, r5
 801bc82:	fb0e f606 	mul.w	r6, lr, r6
 801bc86:	f403 407f 	and.w	r0, r3, #65280	@ 0xff00
 801bc8a:	0a09      	lsrs	r1, r1, #8
 801bc8c:	9b07      	ldr	r3, [sp, #28]
 801bc8e:	fb02 6000 	mla	r0, r2, r0, r6
 801bc92:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 801bc96:	fb09 0001 	mla	r0, r9, r1, r0
 801bc9a:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 801bc9e:	fb0e fe0b 	mul.w	lr, lr, fp
 801bca2:	fb04 0003 	mla	r0, r4, r3, r0
 801bca6:	fb02 e20a 	mla	r2, r2, sl, lr
 801bcaa:	9b00      	ldr	r3, [sp, #0]
 801bcac:	fb04 2408 	mla	r4, r4, r8, r2
 801bcb0:	fb09 4903 	mla	r9, r9, r3, r4
 801bcb4:	ea6f 2929 	mvn.w	r9, r9, asr #8
 801bcb8:	9b02      	ldr	r3, [sp, #8]
 801bcba:	9a04      	ldr	r2, [sp, #16]
 801bcbc:	fa5f f989 	uxtb.w	r9, r9
 801bcc0:	fb03 f109 	mul.w	r1, r3, r9
 801bcc4:	9b03      	ldr	r3, [sp, #12]
 801bcc6:	0a2d      	lsrs	r5, r5, #8
 801bcc8:	0a00      	lsrs	r0, r0, #8
 801bcca:	fb03 f309 	mul.w	r3, r3, r9
 801bcce:	f400 407f 	and.w	r0, r0, #65280	@ 0xff00
 801bcd2:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 801bcd6:	4305      	orrs	r5, r0
 801bcd8:	fb02 f909 	mul.w	r9, r2, r9
 801bcdc:	1c58      	adds	r0, r3, #1
 801bcde:	1c4a      	adds	r2, r1, #1
 801bce0:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 801bce4:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801bce8:	0a2b      	lsrs	r3, r5, #8
 801bcea:	0c2a      	lsrs	r2, r5, #16
 801bcec:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 801bcf0:	eb02 2211 	add.w	r2, r2, r1, lsr #8
 801bcf4:	00db      	lsls	r3, r3, #3
 801bcf6:	0212      	lsls	r2, r2, #8
 801bcf8:	f402 4278 	and.w	r2, r2, #63488	@ 0xf800
 801bcfc:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801bd00:	4313      	orrs	r3, r2
 801bd02:	f109 0201 	add.w	r2, r9, #1
 801bd06:	eb02 2919 	add.w	r9, r2, r9, lsr #8
 801bd0a:	eb05 2519 	add.w	r5, r5, r9, lsr #8
 801bd0e:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 801bd12:	431d      	orrs	r5, r3
 801bd14:	9b01      	ldr	r3, [sp, #4]
 801bd16:	801d      	strh	r5, [r3, #0]
 801bd18:	b009      	add	sp, #36	@ 0x24
 801bd1a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801bd1e:	2000      	movs	r0, #0
 801bd20:	e701      	b.n	801bb26 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x5c>
 801bd22:	2600      	movs	r6, #0
 801bd24:	4630      	mov	r0, r6
 801bd26:	e70b      	b.n	801bb40 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 801bd28:	2600      	movs	r6, #0
 801bd2a:	e709      	b.n	801bb40 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 801bd2c:	462e      	mov	r6, r5
 801bd2e:	e707      	b.n	801bb40 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 801bd30:	2700      	movs	r7, #0
 801bd32:	e71a      	b.n	801bb6a <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xa0>
 801bd34:	2100      	movs	r1, #0
 801bd36:	460f      	mov	r7, r1
 801bd38:	e723      	b.n	801bb82 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 801bd3a:	4621      	mov	r1, r4
 801bd3c:	4627      	mov	r7, r4
 801bd3e:	e720      	b.n	801bb82 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 801bd40:	2100      	movs	r1, #0
 801bd42:	e71e      	b.n	801bb82 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 801bd44:	4629      	mov	r1, r5
 801bd46:	e71c      	b.n	801bb82 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>

0801bd48 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801bd48:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801bd4c:	b09b      	sub	sp, #108	@ 0x6c
 801bd4e:	9218      	str	r2, [sp, #96]	@ 0x60
 801bd50:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
 801bd52:	9116      	str	r1, [sp, #88]	@ 0x58
 801bd54:	9307      	str	r3, [sp, #28]
 801bd56:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	@ 0xa8
 801bd5a:	9019      	str	r0, [sp, #100]	@ 0x64
 801bd5c:	6850      	ldr	r0, [r2, #4]
 801bd5e:	6812      	ldr	r2, [r2, #0]
 801bd60:	9d26      	ldr	r5, [sp, #152]	@ 0x98
 801bd62:	fb00 1303 	mla	r3, r0, r3, r1
 801bd66:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801bd6a:	930a      	str	r3, [sp, #40]	@ 0x28
 801bd6c:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 801bd6e:	681b      	ldr	r3, [r3, #0]
 801bd70:	930f      	str	r3, [sp, #60]	@ 0x3c
 801bd72:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 801bd74:	685e      	ldr	r6, [r3, #4]
 801bd76:	3604      	adds	r6, #4
 801bd78:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 801bd7a:	2b00      	cmp	r3, #0
 801bd7c:	dc03      	bgt.n	801bd86 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 801bd7e:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 801bd80:	2b00      	cmp	r3, #0
 801bd82:	f340 8373 	ble.w	801c46c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x724>
 801bd86:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 801bd88:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801bd8c:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801bd90:	1e48      	subs	r0, r1, #1
 801bd92:	1e57      	subs	r7, r2, #1
 801bd94:	9b07      	ldr	r3, [sp, #28]
 801bd96:	2b00      	cmp	r3, #0
 801bd98:	f340 8190 	ble.w	801c0bc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
 801bd9c:	9c25      	ldr	r4, [sp, #148]	@ 0x94
 801bd9e:	ea5f 4c24 	movs.w	ip, r4, asr #16
 801bda2:	ea4f 4325 	mov.w	r3, r5, asr #16
 801bda6:	d406      	bmi.n	801bdb6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801bda8:	4584      	cmp	ip, r0
 801bdaa:	da04      	bge.n	801bdb6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801bdac:	2b00      	cmp	r3, #0
 801bdae:	db02      	blt.n	801bdb6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801bdb0:	42bb      	cmp	r3, r7
 801bdb2:	f2c0 8184 	blt.w	801c0be <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x376>
 801bdb6:	f11c 0c01 	adds.w	ip, ip, #1
 801bdba:	f100 8172 	bmi.w	801c0a2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801bdbe:	4561      	cmp	r1, ip
 801bdc0:	f2c0 816f 	blt.w	801c0a2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801bdc4:	3301      	adds	r3, #1
 801bdc6:	f100 816c 	bmi.w	801c0a2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801bdca:	429a      	cmp	r2, r3
 801bdcc:	f2c0 8169 	blt.w	801c0a2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801bdd0:	9b07      	ldr	r3, [sp, #28]
 801bdd2:	9f0a      	ldr	r7, [sp, #40]	@ 0x28
 801bdd4:	9317      	str	r3, [sp, #92]	@ 0x5c
 801bdd6:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 801bdd8:	2b00      	cmp	r3, #0
 801bdda:	f340 818e 	ble.w	801c0fa <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b2>
 801bdde:	9b25      	ldr	r3, [sp, #148]	@ 0x94
 801bde0:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801bde4:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 801bde6:	e9d3 1e02 	ldrd	r1, lr, [r3, #8]
 801bdea:	9b25      	ldr	r3, [sp, #148]	@ 0x94
 801bdec:	141b      	asrs	r3, r3, #16
 801bdee:	ea4f 4c25 	mov.w	ip, r5, asr #16
 801bdf2:	f3c5 3003 	ubfx	r0, r5, #12, #4
 801bdf6:	f100 81d1 	bmi.w	801c19c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 801bdfa:	f101 38ff 	add.w	r8, r1, #4294967295
 801bdfe:	4543      	cmp	r3, r8
 801be00:	f280 81cc 	bge.w	801c19c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 801be04:	f1bc 0f00 	cmp.w	ip, #0
 801be08:	f2c0 81c8 	blt.w	801c19c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 801be0c:	f10e 38ff 	add.w	r8, lr, #4294967295
 801be10:	45c4      	cmp	ip, r8
 801be12:	f280 81c3 	bge.w	801c19c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 801be16:	b209      	sxth	r1, r1
 801be18:	fb0c 3301 	mla	r3, ip, r1, r3
 801be1c:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
 801be1e:	eb04 0803 	add.w	r8, r4, r3
 801be22:	5ce3      	ldrb	r3, [r4, r3]
 801be24:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 801be28:	ea4f 6e13 	mov.w	lr, r3, lsr #24
 801be2c:	2a00      	cmp	r2, #0
 801be2e:	f000 81aa 	beq.w	801c186 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x43e>
 801be32:	f898 c001 	ldrb.w	ip, [r8, #1]
 801be36:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
 801be3a:	940b      	str	r4, [sp, #44]	@ 0x2c
 801be3c:	0e24      	lsrs	r4, r4, #24
 801be3e:	9412      	str	r4, [sp, #72]	@ 0x48
 801be40:	b178      	cbz	r0, 801be62 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11a>
 801be42:	eb08 0c01 	add.w	ip, r8, r1
 801be46:	f818 1001 	ldrb.w	r1, [r8, r1]
 801be4a:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801be4e:	9108      	str	r1, [sp, #32]
 801be50:	0e09      	lsrs	r1, r1, #24
 801be52:	9110      	str	r1, [sp, #64]	@ 0x40
 801be54:	f89c 1001 	ldrb.w	r1, [ip, #1]
 801be58:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801be5c:	910c      	str	r1, [sp, #48]	@ 0x30
 801be5e:	0e09      	lsrs	r1, r1, #24
 801be60:	9113      	str	r1, [sp, #76]	@ 0x4c
 801be62:	b292      	uxth	r2, r2
 801be64:	b280      	uxth	r0, r0
 801be66:	fb02 f900 	mul.w	r9, r2, r0
 801be6a:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 801be6e:	0112      	lsls	r2, r2, #4
 801be70:	eba2 0809 	sub.w	r8, r2, r9
 801be74:	b280      	uxth	r0, r0
 801be76:	f5c2 7280 	rsb	r2, r2, #256	@ 0x100
 801be7a:	9912      	ldr	r1, [sp, #72]	@ 0x48
 801be7c:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 801be7e:	fa1f f888 	uxth.w	r8, r8
 801be82:	1a12      	subs	r2, r2, r0
 801be84:	b292      	uxth	r2, r2
 801be86:	fb08 f101 	mul.w	r1, r8, r1
 801be8a:	fb02 110e 	mla	r1, r2, lr, r1
 801be8e:	fb00 1104 	mla	r1, r0, r4, r1
 801be92:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 801be94:	fb09 1104 	mla	r1, r9, r4, r1
 801be98:	f3c1 2107 	ubfx	r1, r1, #8, #8
 801be9c:	2900      	cmp	r1, #0
 801be9e:	f000 80f5 	beq.w	801c08c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 801bea2:	f1be 0fff 	cmp.w	lr, #255	@ 0xff
 801bea6:	d01b      	beq.n	801bee0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801bea8:	f003 1aff 	and.w	sl, r3, #16711935	@ 0xff00ff
 801beac:	fb0e fa0a 	mul.w	sl, lr, sl
 801beb0:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 801beb4:	fb0e fe03 	mul.w	lr, lr, r3
 801beb8:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801bebc:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 801bec0:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
 801bec4:	f50e 7c80 	add.w	ip, lr, #256	@ 0x100
 801bec8:	4453      	add	r3, sl
 801beca:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 801bece:	0a1b      	lsrs	r3, r3, #8
 801bed0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801bed4:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 801bed8:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 801bedc:	ea43 030c 	orr.w	r3, r3, ip
 801bee0:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 801bee2:	2cff      	cmp	r4, #255	@ 0xff
 801bee4:	d021      	beq.n	801bf2a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e2>
 801bee6:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 801bee8:	f004 1bff 	and.w	fp, r4, #16711935	@ 0xff00ff
 801beec:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 801beee:	fb04 fb0b 	mul.w	fp, r4, fp
 801bef2:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 801bef4:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 801bef8:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 801befa:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801befe:	fb04 fa0a 	mul.w	sl, r4, sl
 801bf02:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801bf06:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 801bf0a:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 801bf0e:	44de      	add	lr, fp
 801bf10:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801bf14:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801bf18:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801bf1c:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801bf20:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801bf24:	ea4e 040a 	orr.w	r4, lr, sl
 801bf28:	940b      	str	r4, [sp, #44]	@ 0x2c
 801bf2a:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 801bf2c:	2cff      	cmp	r4, #255	@ 0xff
 801bf2e:	d021      	beq.n	801bf74 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22c>
 801bf30:	9c08      	ldr	r4, [sp, #32]
 801bf32:	f004 1bff 	and.w	fp, r4, #16711935	@ 0xff00ff
 801bf36:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 801bf38:	fb04 fb0b 	mul.w	fp, r4, fp
 801bf3c:	9c08      	ldr	r4, [sp, #32]
 801bf3e:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 801bf42:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 801bf44:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801bf48:	fb04 fa0a 	mul.w	sl, r4, sl
 801bf4c:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801bf50:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 801bf54:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 801bf58:	44de      	add	lr, fp
 801bf5a:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801bf5e:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801bf62:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801bf66:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801bf6a:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801bf6e:	ea4e 040a 	orr.w	r4, lr, sl
 801bf72:	9408      	str	r4, [sp, #32]
 801bf74:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 801bf76:	2cff      	cmp	r4, #255	@ 0xff
 801bf78:	d021      	beq.n	801bfbe <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 801bf7a:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
 801bf7c:	f004 1bff 	and.w	fp, r4, #16711935	@ 0xff00ff
 801bf80:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 801bf82:	fb04 fb0b 	mul.w	fp, r4, fp
 801bf86:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
 801bf88:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 801bf8c:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 801bf8e:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801bf92:	fb04 fa0a 	mul.w	sl, r4, sl
 801bf96:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801bf9a:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 801bf9e:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 801bfa2:	44de      	add	lr, fp
 801bfa4:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801bfa8:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801bfac:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801bfb0:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801bfb4:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801bfb8:	ea4e 040a 	orr.w	r4, lr, sl
 801bfbc:	940c      	str	r4, [sp, #48]	@ 0x30
 801bfbe:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 801bfc0:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 801bfc4:	9c08      	ldr	r4, [sp, #32]
 801bfc6:	f003 1eff 	and.w	lr, r3, #16711935	@ 0xff00ff
 801bfca:	fb08 fc0c 	mul.w	ip, r8, ip
 801bfce:	fb02 cc0e 	mla	ip, r2, lr, ip
 801bfd2:	f004 1eff 	and.w	lr, r4, #16711935	@ 0xff00ff
 801bfd6:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
 801bfd8:	fb00 cc0e 	mla	ip, r0, lr, ip
 801bfdc:	f004 1eff 	and.w	lr, r4, #16711935	@ 0xff00ff
 801bfe0:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 801bfe2:	fb09 cc0e 	mla	ip, r9, lr, ip
 801bfe6:	f404 4e7f 	and.w	lr, r4, #65280	@ 0xff00
 801bfea:	fb08 f80e 	mul.w	r8, r8, lr
 801bfee:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 801bff2:	fb02 8303 	mla	r3, r2, r3, r8
 801bff6:	9a08      	ldr	r2, [sp, #32]
 801bff8:	f8b7 8000 	ldrh.w	r8, [r7]
 801bffc:	f402 4a7f 	and.w	sl, r2, #65280	@ 0xff00
 801c000:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 801c002:	fb00 330a 	mla	r3, r0, sl, r3
 801c006:	f402 407f 	and.w	r0, r2, #65280	@ 0xff00
 801c00a:	fb09 3900 	mla	r9, r9, r0, r3
 801c00e:	43c9      	mvns	r1, r1
 801c010:	ea4f 2228 	mov.w	r2, r8, asr #8
 801c014:	fa5f fe81 	uxtb.w	lr, r1
 801c018:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801c01c:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801c020:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
 801c024:	fb02 f20e 	mul.w	r2, r2, lr
 801c028:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801c02c:	f409 497f 	and.w	r9, r9, #65280	@ 0xff00
 801c030:	ea4c 0c09 	orr.w	ip, ip, r9
 801c034:	1c53      	adds	r3, r2, #1
 801c036:	eb03 2212 	add.w	r2, r3, r2, lsr #8
 801c03a:	ea4f 00e8 	mov.w	r0, r8, asr #3
 801c03e:	ea4f 431c 	mov.w	r3, ip, lsr #16
 801c042:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801c046:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 801c04a:	4a63      	ldr	r2, [pc, #396]	@ (801c1d8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>)
 801c04c:	fb00 f00e 	mul.w	r0, r0, lr
 801c050:	b2db      	uxtb	r3, r3
 801c052:	ea02 2203 	and.w	r2, r2, r3, lsl #8
 801c056:	1c43      	adds	r3, r0, #1
 801c058:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801c05c:	ea4f 231c 	mov.w	r3, ip, lsr #8
 801c060:	ea4f 01c8 	mov.w	r1, r8, lsl #3
 801c064:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 801c068:	b2c9      	uxtb	r1, r1
 801c06a:	00db      	lsls	r3, r3, #3
 801c06c:	fb01 f10e 	mul.w	r1, r1, lr
 801c070:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801c074:	4313      	orrs	r3, r2
 801c076:	1c4a      	adds	r2, r1, #1
 801c078:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801c07c:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
 801c080:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
 801c084:	ea4c 0c03 	orr.w	ip, ip, r3
 801c088:	f8a7 c000 	strh.w	ip, [r7]
 801c08c:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
 801c08e:	9a25      	ldr	r2, [sp, #148]	@ 0x94
 801c090:	441a      	add	r2, r3
 801c092:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801c094:	9225      	str	r2, [sp, #148]	@ 0x94
 801c096:	441d      	add	r5, r3
 801c098:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 801c09a:	3b01      	subs	r3, #1
 801c09c:	3702      	adds	r7, #2
 801c09e:	9317      	str	r3, [sp, #92]	@ 0x5c
 801c0a0:	e699      	b.n	801bdd6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801c0a2:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
 801c0a4:	9c25      	ldr	r4, [sp, #148]	@ 0x94
 801c0a6:	441c      	add	r4, r3
 801c0a8:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801c0aa:	9425      	str	r4, [sp, #148]	@ 0x94
 801c0ac:	441d      	add	r5, r3
 801c0ae:	9b07      	ldr	r3, [sp, #28]
 801c0b0:	3b01      	subs	r3, #1
 801c0b2:	9307      	str	r3, [sp, #28]
 801c0b4:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801c0b6:	3302      	adds	r3, #2
 801c0b8:	930a      	str	r3, [sp, #40]	@ 0x28
 801c0ba:	e66b      	b.n	801bd94 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 801c0bc:	d024      	beq.n	801c108 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c0>
 801c0be:	9b07      	ldr	r3, [sp, #28]
 801c0c0:	9827      	ldr	r0, [sp, #156]	@ 0x9c
 801c0c2:	9c25      	ldr	r4, [sp, #148]	@ 0x94
 801c0c4:	3b01      	subs	r3, #1
 801c0c6:	fb00 4003 	mla	r0, r0, r3, r4
 801c0ca:	1400      	asrs	r0, r0, #16
 801c0cc:	f53f ae80 	bmi.w	801bdd0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 801c0d0:	3901      	subs	r1, #1
 801c0d2:	4288      	cmp	r0, r1
 801c0d4:	f6bf ae7c 	bge.w	801bdd0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 801c0d8:	9928      	ldr	r1, [sp, #160]	@ 0xa0
 801c0da:	fb01 5303 	mla	r3, r1, r3, r5
 801c0de:	141b      	asrs	r3, r3, #16
 801c0e0:	f53f ae76 	bmi.w	801bdd0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 801c0e4:	3a01      	subs	r2, #1
 801c0e6:	4293      	cmp	r3, r2
 801c0e8:	f6bf ae72 	bge.w	801bdd0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 801c0ec:	f8dd b01c 	ldr.w	fp, [sp, #28]
 801c0f0:	f8dd 9028 	ldr.w	r9, [sp, #40]	@ 0x28
 801c0f4:	f1bb 0f00 	cmp.w	fp, #0
 801c0f8:	dc70      	bgt.n	801c1dc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x494>
 801c0fa:	9b07      	ldr	r3, [sp, #28]
 801c0fc:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 801c100:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801c102:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 801c106:	930a      	str	r3, [sp, #40]	@ 0x28
 801c108:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 801c10a:	2b00      	cmp	r3, #0
 801c10c:	f340 81ae 	ble.w	801c46c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x724>
 801c110:	ee30 0a04 	vadd.f32	s0, s0, s8
 801c114:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 801c118:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801c11c:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801c11e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801c122:	ee31 1a05 	vadd.f32	s2, s2, s10
 801c126:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801c12a:	eef0 6a62 	vmov.f32	s13, s5
 801c12e:	ee61 7a27 	vmul.f32	s15, s2, s15
 801c132:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801c136:	ee77 2a62 	vsub.f32	s5, s14, s5
 801c13a:	edcd 6a25 	vstr	s13, [sp, #148]	@ 0x94
 801c13e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801c142:	eef0 6a43 	vmov.f32	s13, s6
 801c146:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801c14a:	ee12 2a90 	vmov	r2, s5
 801c14e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801c152:	fb92 f3f3 	sdiv	r3, r2, r3
 801c156:	ee13 2a10 	vmov	r2, s6
 801c15a:	9327      	str	r3, [sp, #156]	@ 0x9c
 801c15c:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801c15e:	fb92 f3f3 	sdiv	r3, r2, r3
 801c162:	9328      	str	r3, [sp, #160]	@ 0xa0
 801c164:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 801c166:	9a18      	ldr	r2, [sp, #96]	@ 0x60
 801c168:	3b01      	subs	r3, #1
 801c16a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801c16e:	9316      	str	r3, [sp, #88]	@ 0x58
 801c170:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801c172:	bf08      	it	eq
 801c174:	4613      	moveq	r3, r2
 801c176:	ee16 5a90 	vmov	r5, s13
 801c17a:	9307      	str	r3, [sp, #28]
 801c17c:	eeb0 3a67 	vmov.f32	s6, s15
 801c180:	eef0 2a47 	vmov.f32	s5, s14
 801c184:	e5f8      	b.n	801bd78 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 801c186:	2800      	cmp	r0, #0
 801c188:	f43f ae6b 	beq.w	801be62 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11a>
 801c18c:	f818 1001 	ldrb.w	r1, [r8, r1]
 801c190:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801c194:	9108      	str	r1, [sp, #32]
 801c196:	0e09      	lsrs	r1, r1, #24
 801c198:	9110      	str	r1, [sp, #64]	@ 0x40
 801c19a:	e662      	b.n	801be62 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11a>
 801c19c:	f113 0801 	adds.w	r8, r3, #1
 801c1a0:	f53f af74 	bmi.w	801c08c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 801c1a4:	4541      	cmp	r1, r8
 801c1a6:	f6ff af71 	blt.w	801c08c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 801c1aa:	f11c 0801 	adds.w	r8, ip, #1
 801c1ae:	f53f af6d 	bmi.w	801c08c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 801c1b2:	45c6      	cmp	lr, r8
 801c1b4:	f6ff af6a 	blt.w	801c08c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 801c1b8:	e9cd 3c02 	strd	r3, ip, [sp, #8]
 801c1bc:	b209      	sxth	r1, r1
 801c1be:	fa0f f38e 	sxth.w	r3, lr
 801c1c2:	e9cd 2004 	strd	r2, r0, [sp, #16]
 801c1c6:	9301      	str	r3, [sp, #4]
 801c1c8:	9100      	str	r1, [sp, #0]
 801c1ca:	4633      	mov	r3, r6
 801c1cc:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 801c1ce:	9819      	ldr	r0, [sp, #100]	@ 0x64
 801c1d0:	4639      	mov	r1, r7
 801c1d2:	f7ff fc7a 	bl	801baca <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>
 801c1d6:	e759      	b.n	801c08c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 801c1d8:	fffff800 	.word	0xfffff800
 801c1dc:	9b25      	ldr	r3, [sp, #148]	@ 0x94
 801c1de:	9c25      	ldr	r4, [sp, #148]	@ 0x94
 801c1e0:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801c1e4:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 801c1e6:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801c1ea:	1427      	asrs	r7, r4, #16
 801c1ec:	142b      	asrs	r3, r5, #16
 801c1ee:	fb01 7303 	mla	r3, r1, r3, r7
 801c1f2:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
 801c1f4:	18e7      	adds	r7, r4, r3
 801c1f6:	5ce3      	ldrb	r3, [r4, r3]
 801c1f8:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 801c1fc:	f3c5 3003 	ubfx	r0, r5, #12, #4
 801c200:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 801c204:	2a00      	cmp	r2, #0
 801c206:	f000 8127 	beq.w	801c458 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
 801c20a:	f897 e001 	ldrb.w	lr, [r7, #1]
 801c20e:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
 801c212:	940d      	str	r4, [sp, #52]	@ 0x34
 801c214:	0e24      	lsrs	r4, r4, #24
 801c216:	9414      	str	r4, [sp, #80]	@ 0x50
 801c218:	b170      	cbz	r0, 801c238 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 801c21a:	eb07 0e01 	add.w	lr, r7, r1
 801c21e:	5c79      	ldrb	r1, [r7, r1]
 801c220:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801c224:	9109      	str	r1, [sp, #36]	@ 0x24
 801c226:	0e09      	lsrs	r1, r1, #24
 801c228:	9111      	str	r1, [sp, #68]	@ 0x44
 801c22a:	f89e 1001 	ldrb.w	r1, [lr, #1]
 801c22e:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801c232:	910e      	str	r1, [sp, #56]	@ 0x38
 801c234:	0e09      	lsrs	r1, r1, #24
 801c236:	9115      	str	r1, [sp, #84]	@ 0x54
 801c238:	b292      	uxth	r2, r2
 801c23a:	b280      	uxth	r0, r0
 801c23c:	fb02 f800 	mul.w	r8, r2, r0
 801c240:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 801c244:	0112      	lsls	r2, r2, #4
 801c246:	eba2 0e08 	sub.w	lr, r2, r8
 801c24a:	b280      	uxth	r0, r0
 801c24c:	f5c2 7180 	rsb	r1, r2, #256	@ 0x100
 801c250:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 801c252:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 801c254:	fa1f fe8e 	uxth.w	lr, lr
 801c258:	1a09      	subs	r1, r1, r0
 801c25a:	b289      	uxth	r1, r1
 801c25c:	fb0e f202 	mul.w	r2, lr, r2
 801c260:	fb01 220c 	mla	r2, r1, ip, r2
 801c264:	fb00 2204 	mla	r2, r0, r4, r2
 801c268:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 801c26a:	fb08 2204 	mla	r2, r8, r4, r2
 801c26e:	f3c2 2207 	ubfx	r2, r2, #8, #8
 801c272:	2a00      	cmp	r2, #0
 801c274:	f000 80e5 	beq.w	801c442 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6fa>
 801c278:	f1bc 0fff 	cmp.w	ip, #255	@ 0xff
 801c27c:	d019      	beq.n	801c2b2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56a>
 801c27e:	f003 1aff 	and.w	sl, r3, #16711935	@ 0xff00ff
 801c282:	fb0c fa0a 	mul.w	sl, ip, sl
 801c286:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 801c28a:	fb0c fc03 	mul.w	ip, ip, r3
 801c28e:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801c292:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 801c296:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
 801c29a:	f50c 7780 	add.w	r7, ip, #256	@ 0x100
 801c29e:	4453      	add	r3, sl
 801c2a0:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 801c2a4:	0a1b      	lsrs	r3, r3, #8
 801c2a6:	0a3f      	lsrs	r7, r7, #8
 801c2a8:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 801c2ac:	f407 477f 	and.w	r7, r7, #65280	@ 0xff00
 801c2b0:	433b      	orrs	r3, r7
 801c2b2:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 801c2b4:	2cff      	cmp	r4, #255	@ 0xff
 801c2b6:	d020      	beq.n	801c2fa <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5b2>
 801c2b8:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 801c2ba:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
 801c2be:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 801c2c0:	4367      	muls	r7, r4
 801c2c2:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 801c2c4:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 801c2c8:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 801c2ca:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801c2ce:	fb04 fa0a 	mul.w	sl, r4, sl
 801c2d2:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 801c2d6:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801c2da:	44bc      	add	ip, r7
 801c2dc:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 801c2e0:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801c2e4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801c2e8:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801c2ec:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801c2f0:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801c2f4:	ea4c 040a 	orr.w	r4, ip, sl
 801c2f8:	940d      	str	r4, [sp, #52]	@ 0x34
 801c2fa:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 801c2fc:	2cff      	cmp	r4, #255	@ 0xff
 801c2fe:	d020      	beq.n	801c342 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5fa>
 801c300:	9c09      	ldr	r4, [sp, #36]	@ 0x24
 801c302:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
 801c306:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 801c308:	4367      	muls	r7, r4
 801c30a:	9c09      	ldr	r4, [sp, #36]	@ 0x24
 801c30c:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 801c310:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 801c312:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801c316:	fb04 fa0a 	mul.w	sl, r4, sl
 801c31a:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 801c31e:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801c322:	44bc      	add	ip, r7
 801c324:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 801c328:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801c32c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801c330:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801c334:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801c338:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801c33c:	ea4c 040a 	orr.w	r4, ip, sl
 801c340:	9409      	str	r4, [sp, #36]	@ 0x24
 801c342:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 801c344:	2cff      	cmp	r4, #255	@ 0xff
 801c346:	d020      	beq.n	801c38a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x642>
 801c348:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 801c34a:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
 801c34e:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 801c350:	4367      	muls	r7, r4
 801c352:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 801c354:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 801c358:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 801c35a:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801c35e:	fb04 fa0a 	mul.w	sl, r4, sl
 801c362:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 801c366:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801c36a:	44bc      	add	ip, r7
 801c36c:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 801c370:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801c374:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801c378:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801c37c:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801c380:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801c384:	ea4c 040a 	orr.w	r4, ip, sl
 801c388:	940e      	str	r4, [sp, #56]	@ 0x38
 801c38a:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 801c38c:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
 801c390:	9c09      	ldr	r4, [sp, #36]	@ 0x24
 801c392:	f003 1cff 	and.w	ip, r3, #16711935	@ 0xff00ff
 801c396:	fb0e f707 	mul.w	r7, lr, r7
 801c39a:	fb01 770c 	mla	r7, r1, ip, r7
 801c39e:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 801c3a2:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 801c3a4:	fb00 770c 	mla	r7, r0, ip, r7
 801c3a8:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 801c3ac:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 801c3ae:	fb08 770c 	mla	r7, r8, ip, r7
 801c3b2:	f404 4c7f 	and.w	ip, r4, #65280	@ 0xff00
 801c3b6:	fb0e fe0c 	mul.w	lr, lr, ip
 801c3ba:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 801c3be:	fb01 e303 	mla	r3, r1, r3, lr
 801c3c2:	9909      	ldr	r1, [sp, #36]	@ 0x24
 801c3c4:	f401 4a7f 	and.w	sl, r1, #65280	@ 0xff00
 801c3c8:	990e      	ldr	r1, [sp, #56]	@ 0x38
 801c3ca:	fb00 330a 	mla	r3, r0, sl, r3
 801c3ce:	f401 4c7f 	and.w	ip, r1, #65280	@ 0xff00
 801c3d2:	fb08 3c0c 	mla	ip, r8, ip, r3
 801c3d6:	f8b9 3000 	ldrh.w	r3, [r9]
 801c3da:	43d2      	mvns	r2, r2
 801c3dc:	1218      	asrs	r0, r3, #8
 801c3de:	b2d2      	uxtb	r2, r2
 801c3e0:	10d9      	asrs	r1, r3, #3
 801c3e2:	0a3f      	lsrs	r7, r7, #8
 801c3e4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801c3e8:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 801c3ec:	00db      	lsls	r3, r3, #3
 801c3ee:	4350      	muls	r0, r2
 801c3f0:	f007 17ff 	and.w	r7, r7, #16711935	@ 0xff00ff
 801c3f4:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 801c3f8:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 801c3fc:	b2db      	uxtb	r3, r3
 801c3fe:	ea47 070c 	orr.w	r7, r7, ip
 801c402:	4351      	muls	r1, r2
 801c404:	4353      	muls	r3, r2
 801c406:	1c42      	adds	r2, r0, #1
 801c408:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801c40c:	0c3a      	lsrs	r2, r7, #16
 801c40e:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801c412:	4a18      	ldr	r2, [pc, #96]	@ (801c474 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72c>)
 801c414:	b2c0      	uxtb	r0, r0
 801c416:	ea02 2000 	and.w	r0, r2, r0, lsl #8
 801c41a:	1c4a      	adds	r2, r1, #1
 801c41c:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801c420:	0a3a      	lsrs	r2, r7, #8
 801c422:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801c426:	00c9      	lsls	r1, r1, #3
 801c428:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 801c42c:	4301      	orrs	r1, r0
 801c42e:	1c58      	adds	r0, r3, #1
 801c430:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 801c434:	eb07 2710 	add.w	r7, r7, r0, lsr #8
 801c438:	f3c7 00c4 	ubfx	r0, r7, #3, #5
 801c43c:	4308      	orrs	r0, r1
 801c43e:	f8a9 0000 	strh.w	r0, [r9]
 801c442:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
 801c444:	9a25      	ldr	r2, [sp, #148]	@ 0x94
 801c446:	441a      	add	r2, r3
 801c448:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801c44a:	9225      	str	r2, [sp, #148]	@ 0x94
 801c44c:	f109 0902 	add.w	r9, r9, #2
 801c450:	441d      	add	r5, r3
 801c452:	f10b 3bff 	add.w	fp, fp, #4294967295
 801c456:	e64d      	b.n	801c0f4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ac>
 801c458:	2800      	cmp	r0, #0
 801c45a:	f43f aeed 	beq.w	801c238 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 801c45e:	5c79      	ldrb	r1, [r7, r1]
 801c460:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801c464:	9109      	str	r1, [sp, #36]	@ 0x24
 801c466:	0e09      	lsrs	r1, r1, #24
 801c468:	9111      	str	r1, [sp, #68]	@ 0x44
 801c46a:	e6e5      	b.n	801c238 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 801c46c:	b01b      	add	sp, #108	@ 0x6c
 801c46e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801c472:	bf00      	nop
 801c474:	fffff800 	.word	0xfffff800

0801c478 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>:
 801c478:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801c47c:	b085      	sub	sp, #20
 801c47e:	e9dd 7010 	ldrd	r7, r0, [sp, #64]	@ 0x40
 801c482:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	@ 0x38
 801c486:	9103      	str	r1, [sp, #12]
 801c488:	fb00 7406 	mla	r4, r0, r6, r7
 801c48c:	eb02 0544 	add.w	r5, r2, r4, lsl #1
 801c490:	2800      	cmp	r0, #0
 801c492:	f9bd b03c 	ldrsh.w	fp, [sp, #60]	@ 0x3c
 801c496:	f89d 1048 	ldrb.w	r1, [sp, #72]	@ 0x48
 801c49a:	f89d e04c 	ldrb.w	lr, [sp, #76]	@ 0x4c
 801c49e:	9501      	str	r5, [sp, #4]
 801c4a0:	eb03 0904 	add.w	r9, r3, r4
 801c4a4:	f2c0 8150 	blt.w	801c748 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2d0>
 801c4a8:	4583      	cmp	fp, r0
 801c4aa:	f340 814d 	ble.w	801c748 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2d0>
 801c4ae:	2f00      	cmp	r7, #0
 801c4b0:	f2c0 8146 	blt.w	801c740 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2c8>
 801c4b4:	42be      	cmp	r6, r7
 801c4b6:	f340 8143 	ble.w	801c740 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2c8>
 801c4ba:	f813 c004 	ldrb.w	ip, [r3, r4]
 801c4be:	f832 3014 	ldrh.w	r3, [r2, r4, lsl #1]
 801c4c2:	ea4f 02ec 	mov.w	r2, ip, asr #3
 801c4c6:	f423 65fc 	bic.w	r5, r3, #2016	@ 0x7e0
 801c4ca:	4355      	muls	r5, r2
 801c4cc:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801c4d0:	f64f 041f 	movw	r4, #63519	@ 0xf81f
 801c4d4:	fb0c f203 	mul.w	r2, ip, r3
 801c4d8:	ea04 1355 	and.w	r3, r4, r5, lsr #5
 801c4dc:	f605 0501 	addw	r5, r5, #2049	@ 0x801
 801c4e0:	441d      	add	r5, r3
 801c4e2:	f102 0320 	add.w	r3, r2, #32
 801c4e6:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801c4ea:	0a1b      	lsrs	r3, r3, #8
 801c4ec:	ea04 1455 	and.w	r4, r4, r5, lsr #5
 801c4f0:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801c4f4:	431c      	orrs	r4, r3
 801c4f6:	1c7b      	adds	r3, r7, #1
 801c4f8:	f100 812b 	bmi.w	801c752 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2da>
 801c4fc:	429e      	cmp	r6, r3
 801c4fe:	f340 8128 	ble.w	801c752 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2da>
 801c502:	2900      	cmp	r1, #0
 801c504:	f000 8128 	beq.w	801c758 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e0>
 801c508:	9a01      	ldr	r2, [sp, #4]
 801c50a:	f899 3001 	ldrb.w	r3, [r9, #1]
 801c50e:	8855      	ldrh	r5, [r2, #2]
 801c510:	ea4f 08e3 	mov.w	r8, r3, asr #3
 801c514:	f425 62fc 	bic.w	r2, r5, #2016	@ 0x7e0
 801c518:	fb08 f802 	mul.w	r8, r8, r2
 801c51c:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801c520:	f64f 021f 	movw	r2, #63519	@ 0xf81f
 801c524:	ea02 1a58 	and.w	sl, r2, r8, lsr #5
 801c528:	435d      	muls	r5, r3
 801c52a:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 801c52e:	44d0      	add	r8, sl
 801c530:	f105 0a20 	add.w	sl, r5, #32
 801c534:	eb0a 2515 	add.w	r5, sl, r5, lsr #8
 801c538:	0a2d      	lsrs	r5, r5, #8
 801c53a:	ea02 1258 	and.w	r2, r2, r8, lsr #5
 801c53e:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801c542:	432a      	orrs	r2, r5
 801c544:	3001      	adds	r0, #1
 801c546:	f100 810d 	bmi.w	801c764 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2ec>
 801c54a:	4583      	cmp	fp, r0
 801c54c:	f340 810a 	ble.w	801c764 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2ec>
 801c550:	f1be 0f00 	cmp.w	lr, #0
 801c554:	f000 810b 	beq.w	801c76e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2f6>
 801c558:	2f00      	cmp	r7, #0
 801c55a:	f2c0 8100 	blt.w	801c75e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e6>
 801c55e:	42be      	cmp	r6, r7
 801c560:	f340 80fd 	ble.w	801c75e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e6>
 801c564:	9801      	ldr	r0, [sp, #4]
 801c566:	f819 5006 	ldrb.w	r5, [r9, r6]
 801c56a:	f830 8016 	ldrh.w	r8, [r0, r6, lsl #1]
 801c56e:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801c572:	f428 60fc 	bic.w	r0, r8, #2016	@ 0x7e0
 801c576:	fb0a fa00 	mul.w	sl, sl, r0
 801c57a:	f64f 0b1f 	movw	fp, #63519	@ 0xf81f
 801c57e:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
 801c582:	ea0b 105a 	and.w	r0, fp, sl, lsr #5
 801c586:	fb05 f808 	mul.w	r8, r5, r8
 801c58a:	f60a 0a01 	addw	sl, sl, #2049	@ 0x801
 801c58e:	4482      	add	sl, r0
 801c590:	f108 0020 	add.w	r0, r8, #32
 801c594:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 801c598:	0a00      	lsrs	r0, r0, #8
 801c59a:	ea0b 1b5a 	and.w	fp, fp, sl, lsr #5
 801c59e:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801c5a2:	ea4b 0b00 	orr.w	fp, fp, r0
 801c5a6:	3701      	adds	r7, #1
 801c5a8:	f100 80e6 	bmi.w	801c778 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x300>
 801c5ac:	42be      	cmp	r6, r7
 801c5ae:	f340 80e3 	ble.w	801c778 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x300>
 801c5b2:	2900      	cmp	r1, #0
 801c5b4:	f000 80e3 	beq.w	801c77e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x306>
 801c5b8:	3601      	adds	r6, #1
 801c5ba:	9801      	ldr	r0, [sp, #4]
 801c5bc:	f819 7006 	ldrb.w	r7, [r9, r6]
 801c5c0:	f830 0016 	ldrh.w	r0, [r0, r6, lsl #1]
 801c5c4:	ea4f 09e7 	mov.w	r9, r7, asr #3
 801c5c8:	f420 66fc 	bic.w	r6, r0, #2016	@ 0x7e0
 801c5cc:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801c5d0:	fb09 f906 	mul.w	r9, r9, r6
 801c5d4:	fb07 f800 	mul.w	r8, r7, r0
 801c5d8:	f64f 001f 	movw	r0, #63519	@ 0xf81f
 801c5dc:	ea00 1a59 	and.w	sl, r0, r9, lsr #5
 801c5e0:	f609 0901 	addw	r9, r9, #2049	@ 0x801
 801c5e4:	44d1      	add	r9, sl
 801c5e6:	ea00 1659 	and.w	r6, r0, r9, lsr #5
 801c5ea:	f108 0020 	add.w	r0, r8, #32
 801c5ee:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 801c5f2:	0a00      	lsrs	r0, r0, #8
 801c5f4:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801c5f8:	4330      	orrs	r0, r6
 801c5fa:	b28e      	uxth	r6, r1
 801c5fc:	fa1f f98e 	uxth.w	r9, lr
 801c600:	fb06 f809 	mul.w	r8, r6, r9
 801c604:	ea4f 4a04 	mov.w	sl, r4, lsl #16
 801c608:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
 801c60c:	0136      	lsls	r6, r6, #4
 801c60e:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801c612:	f424 64fc 	bic.w	r4, r4, #2016	@ 0x7e0
 801c616:	9601      	str	r6, [sp, #4]
 801c618:	ea4a 0404 	orr.w	r4, sl, r4
 801c61c:	fa1f f689 	uxth.w	r6, r9
 801c620:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 801c624:	fb11 f90e 	smulbb	r9, r1, lr
 801c628:	f3c9 09c7 	ubfx	r9, r9, #3, #8
 801c62c:	9602      	str	r6, [sp, #8]
 801c62e:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801c632:	4626      	mov	r6, r4
 801c634:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801c638:	f1ce 0410 	rsb	r4, lr, #16
 801c63c:	1a64      	subs	r4, r4, r1
 801c63e:	ea4a 0202 	orr.w	r2, sl, r2
 801c642:	ebc9 0141 	rsb	r1, r9, r1, lsl #1
 801c646:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 801c64a:	434a      	muls	r2, r1
 801c64c:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 801c650:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801c654:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 801c658:	fb04 2406 	mla	r4, r4, r6, r2
 801c65c:	ea4a 0000 	orr.w	r0, sl, r0
 801c660:	fb09 4200 	mla	r2, r9, r0, r4
 801c664:	ea4f 440b 	mov.w	r4, fp, lsl #16
 801c668:	f004 64fc 	and.w	r4, r4, #132120576	@ 0x7e00000
 801c66c:	f42b 6bfc 	bic.w	fp, fp, #2016	@ 0x7e0
 801c670:	ea44 0b0b 	orr.w	fp, r4, fp
 801c674:	9c01      	ldr	r4, [sp, #4]
 801c676:	9e02      	ldr	r6, [sp, #8]
 801c678:	9903      	ldr	r1, [sp, #12]
 801c67a:	f5c4 7480 	rsb	r4, r4, #256	@ 0x100
 801c67e:	1ba4      	subs	r4, r4, r6
 801c680:	9e01      	ldr	r6, [sp, #4]
 801c682:	8808      	ldrh	r0, [r1, #0]
 801c684:	f89d 1050 	ldrb.w	r1, [sp, #80]	@ 0x50
 801c688:	eba6 0608 	sub.w	r6, r6, r8
 801c68c:	b2b6      	uxth	r6, r6
 801c68e:	b2a4      	uxth	r4, r4
 801c690:	4373      	muls	r3, r6
 801c692:	fb0c 3304 	mla	r3, ip, r4, r3
 801c696:	9c02      	ldr	r4, [sp, #8]
 801c698:	fb04 3505 	mla	r5, r4, r5, r3
 801c69c:	fb08 5707 	mla	r7, r8, r7, r5
 801c6a0:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
 801c6a4:	b289      	uxth	r1, r1
 801c6a6:	fb0e 2e0b 	mla	lr, lr, fp, r2
 801c6aa:	f3c7 2707 	ubfx	r7, r7, #8, #8
 801c6ae:	434f      	muls	r7, r1
 801c6b0:	ea4f 525e 	mov.w	r2, lr, lsr #21
 801c6b4:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 801c6b8:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801c6bc:	1c7b      	adds	r3, r7, #1
 801c6be:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
 801c6c2:	ea42 0e0e 	orr.w	lr, r2, lr
 801c6c6:	eb03 2717 	add.w	r7, r3, r7, lsr #8
 801c6ca:	fa1f f28e 	uxth.w	r2, lr
 801c6ce:	1203      	asrs	r3, r0, #8
 801c6d0:	ea6f 2717 	mvn.w	r7, r7, lsr #8
 801c6d4:	b2ff      	uxtb	r7, r7
 801c6d6:	1215      	asrs	r5, r2, #8
 801c6d8:	f003 03f8 	and.w	r3, r3, #248	@ 0xf8
 801c6dc:	fb13 f307 	smulbb	r3, r3, r7
 801c6e0:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 801c6e4:	fb05 3501 	mla	r5, r5, r1, r3
 801c6e8:	10c3      	asrs	r3, r0, #3
 801c6ea:	10d4      	asrs	r4, r2, #3
 801c6ec:	f003 03fc 	and.w	r3, r3, #252	@ 0xfc
 801c6f0:	fb13 f307 	smulbb	r3, r3, r7
 801c6f4:	f004 04fc 	and.w	r4, r4, #252	@ 0xfc
 801c6f8:	fb04 3401 	mla	r4, r4, r1, r3
 801c6fc:	00c3      	lsls	r3, r0, #3
 801c6fe:	00d2      	lsls	r2, r2, #3
 801c700:	b2db      	uxtb	r3, r3
 801c702:	fb13 f307 	smulbb	r3, r3, r7
 801c706:	b2d2      	uxtb	r2, r2
 801c708:	fb02 3101 	mla	r1, r2, r1, r3
 801c70c:	b2ad      	uxth	r5, r5
 801c70e:	b289      	uxth	r1, r1
 801c710:	b2a4      	uxth	r4, r4
 801c712:	1c6b      	adds	r3, r5, #1
 801c714:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801c718:	1c62      	adds	r2, r4, #1
 801c71a:	1c4b      	adds	r3, r1, #1
 801c71c:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 801c720:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 801c724:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 801c728:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801c72c:	0964      	lsrs	r4, r4, #5
 801c72e:	432b      	orrs	r3, r5
 801c730:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
 801c734:	9a03      	ldr	r2, [sp, #12]
 801c736:	4323      	orrs	r3, r4
 801c738:	8013      	strh	r3, [r2, #0]
 801c73a:	b005      	add	sp, #20
 801c73c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801c740:	f04f 0c00 	mov.w	ip, #0
 801c744:	4664      	mov	r4, ip
 801c746:	e6d6      	b.n	801c4f6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x7e>
 801c748:	2300      	movs	r3, #0
 801c74a:	469c      	mov	ip, r3
 801c74c:	461a      	mov	r2, r3
 801c74e:	461c      	mov	r4, r3
 801c750:	e6f8      	b.n	801c544 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 801c752:	2300      	movs	r3, #0
 801c754:	461a      	mov	r2, r3
 801c756:	e6f5      	b.n	801c544 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 801c758:	460b      	mov	r3, r1
 801c75a:	460a      	mov	r2, r1
 801c75c:	e6f2      	b.n	801c544 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 801c75e:	2500      	movs	r5, #0
 801c760:	46ab      	mov	fp, r5
 801c762:	e720      	b.n	801c5a6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x12e>
 801c764:	2700      	movs	r7, #0
 801c766:	463d      	mov	r5, r7
 801c768:	4638      	mov	r0, r7
 801c76a:	46bb      	mov	fp, r7
 801c76c:	e745      	b.n	801c5fa <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 801c76e:	4677      	mov	r7, lr
 801c770:	4675      	mov	r5, lr
 801c772:	4670      	mov	r0, lr
 801c774:	46f3      	mov	fp, lr
 801c776:	e740      	b.n	801c5fa <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 801c778:	2700      	movs	r7, #0
 801c77a:	4638      	mov	r0, r7
 801c77c:	e73d      	b.n	801c5fa <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 801c77e:	460f      	mov	r7, r1
 801c780:	4608      	mov	r0, r1
 801c782:	e73a      	b.n	801c5fa <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>

0801c784 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801c784:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801c788:	b097      	sub	sp, #92	@ 0x5c
 801c78a:	9214      	str	r2, [sp, #80]	@ 0x50
 801c78c:	9308      	str	r3, [sp, #32]
 801c78e:	9a25      	ldr	r2, [sp, #148]	@ 0x94
 801c790:	f89d 30a4 	ldrb.w	r3, [sp, #164]	@ 0xa4
 801c794:	9312      	str	r3, [sp, #72]	@ 0x48
 801c796:	9111      	str	r1, [sp, #68]	@ 0x44
 801c798:	e9dd 1326 	ldrd	r1, r3, [sp, #152]	@ 0x98
 801c79c:	9015      	str	r0, [sp, #84]	@ 0x54
 801c79e:	6850      	ldr	r0, [r2, #4]
 801c7a0:	6812      	ldr	r2, [r2, #0]
 801c7a2:	fb00 1303 	mla	r3, r0, r3, r1
 801c7a6:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801c7aa:	9309      	str	r3, [sp, #36]	@ 0x24
 801c7ac:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801c7ae:	681b      	ldr	r3, [r3, #0]
 801c7b0:	930b      	str	r3, [sp, #44]	@ 0x2c
 801c7b2:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801c7b4:	685b      	ldr	r3, [r3, #4]
 801c7b6:	930c      	str	r3, [sp, #48]	@ 0x30
 801c7b8:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
 801c7bc:	930a      	str	r3, [sp, #40]	@ 0x28
 801c7be:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 801c7c0:	2b00      	cmp	r3, #0
 801c7c2:	dc03      	bgt.n	801c7cc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801c7c4:	9b14      	ldr	r3, [sp, #80]	@ 0x50
 801c7c6:	2b00      	cmp	r3, #0
 801c7c8:	f340 83cb 	ble.w	801cf62 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7de>
 801c7cc:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801c7ce:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801c7d2:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801c7d6:	1e48      	subs	r0, r1, #1
 801c7d8:	1e55      	subs	r5, r2, #1
 801c7da:	9b08      	ldr	r3, [sp, #32]
 801c7dc:	2b00      	cmp	r3, #0
 801c7de:	f340 81a3 	ble.w	801cb28 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a4>
 801c7e2:	9e21      	ldr	r6, [sp, #132]	@ 0x84
 801c7e4:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 801c7e6:	1436      	asrs	r6, r6, #16
 801c7e8:	ea4f 4323 	mov.w	r3, r3, asr #16
 801c7ec:	d406      	bmi.n	801c7fc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801c7ee:	4286      	cmp	r6, r0
 801c7f0:	da04      	bge.n	801c7fc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801c7f2:	2b00      	cmp	r3, #0
 801c7f4:	db02      	blt.n	801c7fc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801c7f6:	42ab      	cmp	r3, r5
 801c7f8:	f2c0 8197 	blt.w	801cb2a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 801c7fc:	3601      	adds	r6, #1
 801c7fe:	f100 8184 	bmi.w	801cb0a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 801c802:	42b1      	cmp	r1, r6
 801c804:	f2c0 8181 	blt.w	801cb0a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 801c808:	3301      	adds	r3, #1
 801c80a:	f100 817e 	bmi.w	801cb0a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 801c80e:	429a      	cmp	r2, r3
 801c810:	f2c0 817b 	blt.w	801cb0a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 801c814:	9b08      	ldr	r3, [sp, #32]
 801c816:	9f09      	ldr	r7, [sp, #36]	@ 0x24
 801c818:	9313      	str	r3, [sp, #76]	@ 0x4c
 801c81a:	f64f 061f 	movw	r6, #63519	@ 0xf81f
 801c81e:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 801c820:	2b00      	cmp	r3, #0
 801c822:	f340 81a4 	ble.w	801cb6e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ea>
 801c826:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 801c828:	9d21      	ldr	r5, [sp, #132]	@ 0x84
 801c82a:	1418      	asrs	r0, r3, #16
 801c82c:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 801c82e:	f3c3 3103 	ubfx	r1, r3, #12, #4
 801c832:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 801c834:	f3c3 3c03 	ubfx	ip, r3, #12, #4
 801c838:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801c83a:	142d      	asrs	r5, r5, #16
 801c83c:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 801c840:	f100 81f8 	bmi.w	801cc34 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 801c844:	f102 3eff 	add.w	lr, r2, #4294967295
 801c848:	4575      	cmp	r5, lr
 801c84a:	f280 81f3 	bge.w	801cc34 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 801c84e:	2800      	cmp	r0, #0
 801c850:	f2c0 81f0 	blt.w	801cc34 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 801c854:	f103 3eff 	add.w	lr, r3, #4294967295
 801c858:	4570      	cmp	r0, lr
 801c85a:	f280 81eb 	bge.w	801cc34 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 801c85e:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801c860:	b212      	sxth	r2, r2
 801c862:	fb00 5002 	mla	r0, r0, r2, r5
 801c866:	fa1f fe81 	uxth.w	lr, r1
 801c86a:	eb03 0a00 	add.w	sl, r3, r0
 801c86e:	ea4f 150e 	mov.w	r5, lr, lsl #4
 801c872:	f813 9000 	ldrb.w	r9, [r3, r0]
 801c876:	f89a 8001 	ldrb.w	r8, [sl, #1]
 801c87a:	f5c5 7380 	rsb	r3, r5, #256	@ 0x100
 801c87e:	b29b      	uxth	r3, r3
 801c880:	f1bc 0f00 	cmp.w	ip, #0
 801c884:	f000 81b9 	beq.w	801cbfa <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x476>
 801c888:	f81a 4002 	ldrb.w	r4, [sl, r2]
 801c88c:	940d      	str	r4, [sp, #52]	@ 0x34
 801c88e:	eb0a 0b02 	add.w	fp, sl, r2
 801c892:	fa1f fa8c 	uxth.w	sl, ip
 801c896:	fb0a fe0e 	mul.w	lr, sl, lr
 801c89a:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
 801c89e:	fa1f fa8a 	uxth.w	sl, sl
 801c8a2:	eba5 050e 	sub.w	r5, r5, lr
 801c8a6:	f89b 4001 	ldrb.w	r4, [fp, #1]
 801c8aa:	940e      	str	r4, [sp, #56]	@ 0x38
 801c8ac:	eba3 030a 	sub.w	r3, r3, sl
 801c8b0:	b2ad      	uxth	r5, r5
 801c8b2:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 801c8b4:	b29b      	uxth	r3, r3
 801c8b6:	fb08 f505 	mul.w	r5, r8, r5
 801c8ba:	fb09 5303 	mla	r3, r9, r3, r5
 801c8be:	fb0a 3304 	mla	r3, sl, r4, r3
 801c8c2:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 801c8c4:	fb0e 3304 	mla	r3, lr, r4, r3
 801c8c8:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801c8cc:	2b00      	cmp	r3, #0
 801c8ce:	f000 810f 	beq.w	801caf0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 801c8d2:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 801c8d4:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
 801c8d8:	eb04 0540 	add.w	r5, r4, r0, lsl #1
 801c8dc:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
 801c8e0:	f000 8190 	beq.w	801cc04 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x480>
 801c8e4:	f420 6efc 	bic.w	lr, r0, #2016	@ 0x7e0
 801c8e8:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 801c8ec:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801c8f0:	fb09 f000 	mul.w	r0, r9, r0
 801c8f4:	fb0a fe0e 	mul.w	lr, sl, lr
 801c8f8:	ea06 195e 	and.w	r9, r6, lr, lsr #5
 801c8fc:	f100 0b20 	add.w	fp, r0, #32
 801c900:	f60e 0e01 	addw	lr, lr, #2049	@ 0x801
 801c904:	44ce      	add	lr, r9
 801c906:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
 801c90a:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801c90e:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 801c912:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 801c916:	ea4e 0909 	orr.w	r9, lr, r9
 801c91a:	f1b8 0fff 	cmp.w	r8, #255	@ 0xff
 801c91e:	8868      	ldrh	r0, [r5, #2]
 801c920:	d019      	beq.n	801c956 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 801c922:	f420 6efc 	bic.w	lr, r0, #2016	@ 0x7e0
 801c926:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 801c92a:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801c92e:	fb08 f800 	mul.w	r8, r8, r0
 801c932:	fb0a fe0e 	mul.w	lr, sl, lr
 801c936:	ea06 105e 	and.w	r0, r6, lr, lsr #5
 801c93a:	f108 0b20 	add.w	fp, r8, #32
 801c93e:	f60e 0e01 	addw	lr, lr, #2049	@ 0x801
 801c942:	4486      	add	lr, r0
 801c944:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
 801c948:	0a00      	lsrs	r0, r0, #8
 801c94a:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 801c94e:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801c952:	ea4e 0000 	orr.w	r0, lr, r0
 801c956:	ea4f 4e09 	mov.w	lr, r9, lsl #16
 801c95a:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 801c95e:	f00e 6efc 	and.w	lr, lr, #132120576	@ 0x7e00000
 801c962:	f429 69fc 	bic.w	r9, r9, #2016	@ 0x7e0
 801c966:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801c96a:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 801c96e:	ea4e 0909 	orr.w	r9, lr, r9
 801c972:	ea4a 0000 	orr.w	r0, sl, r0
 801c976:	f1bc 0f00 	cmp.w	ip, #0
 801c97a:	f000 8145 	beq.w	801cc08 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>
 801c97e:	f102 4200 	add.w	r2, r2, #2147483648	@ 0x80000000
 801c982:	3a01      	subs	r2, #1
 801c984:	0052      	lsls	r2, r2, #1
 801c986:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 801c988:	3202      	adds	r2, #2
 801c98a:	2cff      	cmp	r4, #255	@ 0xff
 801c98c:	eb05 0e02 	add.w	lr, r5, r2
 801c990:	5aaa      	ldrh	r2, [r5, r2]
 801c992:	d018      	beq.n	801c9c6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 801c994:	f422 65fc 	bic.w	r5, r2, #2016	@ 0x7e0
 801c998:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801c99c:	fb04 fa02 	mul.w	sl, r4, r2
 801c9a0:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801c9a4:	fb08 f805 	mul.w	r8, r8, r5
 801c9a8:	f10a 0520 	add.w	r5, sl, #32
 801c9ac:	ea06 1258 	and.w	r2, r6, r8, lsr #5
 801c9b0:	eb05 251a 	add.w	r5, r5, sl, lsr #8
 801c9b4:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 801c9b8:	4442      	add	r2, r8
 801c9ba:	0a2d      	lsrs	r5, r5, #8
 801c9bc:	ea06 1252 	and.w	r2, r6, r2, lsr #5
 801c9c0:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801c9c4:	432a      	orrs	r2, r5
 801c9c6:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 801c9c8:	f8be 5002 	ldrh.w	r5, [lr, #2]
 801c9cc:	2cff      	cmp	r4, #255	@ 0xff
 801c9ce:	d01a      	beq.n	801ca06 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x282>
 801c9d0:	f425 6efc 	bic.w	lr, r5, #2016	@ 0x7e0
 801c9d4:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801c9d8:	fb04 fa05 	mul.w	sl, r4, r5
 801c9dc:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801c9e0:	fb08 f80e 	mul.w	r8, r8, lr
 801c9e4:	f10a 0e20 	add.w	lr, sl, #32
 801c9e8:	ea06 1558 	and.w	r5, r6, r8, lsr #5
 801c9ec:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
 801c9f0:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 801c9f4:	4445      	add	r5, r8
 801c9f6:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801c9fa:	ea06 1555 	and.w	r5, r6, r5, lsr #5
 801c9fe:	f40e 6efc 	and.w	lr, lr, #2016	@ 0x7e0
 801ca02:	ea45 050e 	orr.w	r5, r5, lr
 801ca06:	fb1c fe01 	smulbb	lr, ip, r1
 801ca0a:	ea4f 0eee 	mov.w	lr, lr, asr #3
 801ca0e:	f1cc 0810 	rsb	r8, ip, #16
 801ca12:	eba8 0801 	sub.w	r8, r8, r1
 801ca16:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 801ca1a:	ebce 0141 	rsb	r1, lr, r1, lsl #1
 801ca1e:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
 801ca22:	ea4f 4b05 	mov.w	fp, r5, lsl #16
 801ca26:	4341      	muls	r1, r0
 801ca28:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801ca2c:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801ca30:	ea4a 0202 	orr.w	r2, sl, r2
 801ca34:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
 801ca38:	fb09 1108 	mla	r1, r9, r8, r1
 801ca3c:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 801ca40:	f425 65fc 	bic.w	r5, r5, #2016	@ 0x7e0
 801ca44:	fb0c 1102 	mla	r1, ip, r2, r1
 801ca48:	ea4b 0505 	orr.w	r5, fp, r5
 801ca4c:	fb0e 1e05 	mla	lr, lr, r5, r1
 801ca50:	ea4f 525e 	mov.w	r2, lr, lsr #21
 801ca54:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 801ca58:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801ca5c:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
 801ca60:	ea42 0e0e 	orr.w	lr, r2, lr
 801ca64:	fa1f f28e 	uxth.w	r2, lr
 801ca68:	2bff      	cmp	r3, #255	@ 0xff
 801ca6a:	d103      	bne.n	801ca74 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 801ca6c:	9912      	ldr	r1, [sp, #72]	@ 0x48
 801ca6e:	29ff      	cmp	r1, #255	@ 0xff
 801ca70:	f000 80de 	beq.w	801cc30 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>
 801ca74:	990a      	ldr	r1, [sp, #40]	@ 0x28
 801ca76:	8838      	ldrh	r0, [r7, #0]
 801ca78:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 801ca7a:	434b      	muls	r3, r1
 801ca7c:	f103 0c01 	add.w	ip, r3, #1
 801ca80:	eb0c 2323 	add.w	r3, ip, r3, asr #8
 801ca84:	ea6f 2323 	mvn.w	r3, r3, asr #8
 801ca88:	fa5f fc83 	uxtb.w	ip, r3
 801ca8c:	1203      	asrs	r3, r0, #8
 801ca8e:	1215      	asrs	r5, r2, #8
 801ca90:	f003 03f8 	and.w	r3, r3, #248	@ 0xf8
 801ca94:	fb13 f30c 	smulbb	r3, r3, ip
 801ca98:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 801ca9c:	fb05 3501 	mla	r5, r5, r1, r3
 801caa0:	10c3      	asrs	r3, r0, #3
 801caa2:	10d1      	asrs	r1, r2, #3
 801caa4:	f003 03fc 	and.w	r3, r3, #252	@ 0xfc
 801caa8:	fb13 f30c 	smulbb	r3, r3, ip
 801caac:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 801cab0:	fb01 3104 	mla	r1, r1, r4, r3
 801cab4:	00c3      	lsls	r3, r0, #3
 801cab6:	00d2      	lsls	r2, r2, #3
 801cab8:	b2db      	uxtb	r3, r3
 801caba:	b2d2      	uxtb	r2, r2
 801cabc:	fb13 f30c 	smulbb	r3, r3, ip
 801cac0:	b2ad      	uxth	r5, r5
 801cac2:	fb02 3304 	mla	r3, r2, r4, r3
 801cac6:	b29a      	uxth	r2, r3
 801cac8:	1c6b      	adds	r3, r5, #1
 801caca:	b289      	uxth	r1, r1
 801cacc:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801cad0:	1c53      	adds	r3, r2, #1
 801cad2:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801cad6:	1c4a      	adds	r2, r1, #1
 801cad8:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801cadc:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 801cae0:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801cae4:	0949      	lsrs	r1, r1, #5
 801cae6:	432b      	orrs	r3, r5
 801cae8:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 801caec:	430b      	orrs	r3, r1
 801caee:	803b      	strh	r3, [r7, #0]
 801caf0:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 801caf2:	9a23      	ldr	r2, [sp, #140]	@ 0x8c
 801caf4:	4413      	add	r3, r2
 801caf6:	9321      	str	r3, [sp, #132]	@ 0x84
 801caf8:	9a22      	ldr	r2, [sp, #136]	@ 0x88
 801cafa:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801cafc:	441a      	add	r2, r3
 801cafe:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 801cb00:	9222      	str	r2, [sp, #136]	@ 0x88
 801cb02:	3b01      	subs	r3, #1
 801cb04:	3702      	adds	r7, #2
 801cb06:	9313      	str	r3, [sp, #76]	@ 0x4c
 801cb08:	e689      	b.n	801c81e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 801cb0a:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 801cb0c:	9e23      	ldr	r6, [sp, #140]	@ 0x8c
 801cb0e:	9c22      	ldr	r4, [sp, #136]	@ 0x88
 801cb10:	4433      	add	r3, r6
 801cb12:	9321      	str	r3, [sp, #132]	@ 0x84
 801cb14:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801cb16:	441c      	add	r4, r3
 801cb18:	9b08      	ldr	r3, [sp, #32]
 801cb1a:	9422      	str	r4, [sp, #136]	@ 0x88
 801cb1c:	3b01      	subs	r3, #1
 801cb1e:	9308      	str	r3, [sp, #32]
 801cb20:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801cb22:	3302      	adds	r3, #2
 801cb24:	9309      	str	r3, [sp, #36]	@ 0x24
 801cb26:	e658      	b.n	801c7da <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56>
 801cb28:	d028      	beq.n	801cb7c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 801cb2a:	9b08      	ldr	r3, [sp, #32]
 801cb2c:	9823      	ldr	r0, [sp, #140]	@ 0x8c
 801cb2e:	9d21      	ldr	r5, [sp, #132]	@ 0x84
 801cb30:	3b01      	subs	r3, #1
 801cb32:	fb00 5003 	mla	r0, r0, r3, r5
 801cb36:	1400      	asrs	r0, r0, #16
 801cb38:	f53f ae6c 	bmi.w	801c814 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801cb3c:	3901      	subs	r1, #1
 801cb3e:	4288      	cmp	r0, r1
 801cb40:	f6bf ae68 	bge.w	801c814 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801cb44:	9924      	ldr	r1, [sp, #144]	@ 0x90
 801cb46:	9822      	ldr	r0, [sp, #136]	@ 0x88
 801cb48:	fb01 0303 	mla	r3, r1, r3, r0
 801cb4c:	141b      	asrs	r3, r3, #16
 801cb4e:	f53f ae61 	bmi.w	801c814 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801cb52:	3a01      	subs	r2, #1
 801cb54:	4293      	cmp	r3, r2
 801cb56:	f6bf ae5d 	bge.w	801c814 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801cb5a:	9b08      	ldr	r3, [sp, #32]
 801cb5c:	f8dd e024 	ldr.w	lr, [sp, #36]	@ 0x24
 801cb60:	9313      	str	r3, [sp, #76]	@ 0x4c
 801cb62:	f64f 061f 	movw	r6, #63519	@ 0xf81f
 801cb66:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 801cb68:	2b00      	cmp	r3, #0
 801cb6a:	f300 8082 	bgt.w	801cc72 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ee>
 801cb6e:	9b08      	ldr	r3, [sp, #32]
 801cb70:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 801cb74:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801cb76:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 801cb7a:	9309      	str	r3, [sp, #36]	@ 0x24
 801cb7c:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 801cb7e:	2b00      	cmp	r3, #0
 801cb80:	f340 81ef 	ble.w	801cf62 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7de>
 801cb84:	ee30 0a04 	vadd.f32	s0, s0, s8
 801cb88:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 801cb8c:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801cb90:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801cb92:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801cb96:	ee31 1a05 	vadd.f32	s2, s2, s10
 801cb9a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801cb9e:	eef0 6a62 	vmov.f32	s13, s5
 801cba2:	ee61 7a27 	vmul.f32	s15, s2, s15
 801cba6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801cbaa:	ee77 2a62 	vsub.f32	s5, s14, s5
 801cbae:	edcd 6a21 	vstr	s13, [sp, #132]	@ 0x84
 801cbb2:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801cbb6:	eef0 6a43 	vmov.f32	s13, s6
 801cbba:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801cbbe:	ee12 2a90 	vmov	r2, s5
 801cbc2:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801cbc6:	fb92 f3f3 	sdiv	r3, r2, r3
 801cbca:	ee13 2a10 	vmov	r2, s6
 801cbce:	9323      	str	r3, [sp, #140]	@ 0x8c
 801cbd0:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801cbd2:	fb92 f3f3 	sdiv	r3, r2, r3
 801cbd6:	9324      	str	r3, [sp, #144]	@ 0x90
 801cbd8:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 801cbda:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 801cbdc:	3b01      	subs	r3, #1
 801cbde:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801cbe2:	9311      	str	r3, [sp, #68]	@ 0x44
 801cbe4:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801cbe6:	edcd 6a22 	vstr	s13, [sp, #136]	@ 0x88
 801cbea:	bf08      	it	eq
 801cbec:	4613      	moveq	r3, r2
 801cbee:	9308      	str	r3, [sp, #32]
 801cbf0:	eeb0 3a67 	vmov.f32	s6, s15
 801cbf4:	eef0 2a47 	vmov.f32	s5, s14
 801cbf8:	e5e1      	b.n	801c7be <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 801cbfa:	fb08 f505 	mul.w	r5, r8, r5
 801cbfe:	fb09 5303 	mla	r3, r9, r3, r5
 801cc02:	e661      	b.n	801c8c8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x144>
 801cc04:	4681      	mov	r9, r0
 801cc06:	e688      	b.n	801c91a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
 801cc08:	f1c1 0210 	rsb	r2, r1, #16
 801cc0c:	4341      	muls	r1, r0
 801cc0e:	fb09 1902 	mla	r9, r9, r2, r1
 801cc12:	ea4f 0949 	mov.w	r9, r9, lsl #1
 801cc16:	ea4f 5259 	mov.w	r2, r9, lsr #21
 801cc1a:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801cc1e:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801cc22:	f429 69fc 	bic.w	r9, r9, #2016	@ 0x7e0
 801cc26:	ea42 0909 	orr.w	r9, r2, r9
 801cc2a:	fa1f f289 	uxth.w	r2, r9
 801cc2e:	e71b      	b.n	801ca68 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
 801cc30:	803a      	strh	r2, [r7, #0]
 801cc32:	e75d      	b.n	801caf0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 801cc34:	f115 0e01 	adds.w	lr, r5, #1
 801cc38:	f53f af5a 	bmi.w	801caf0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 801cc3c:	4572      	cmp	r2, lr
 801cc3e:	f6ff af57 	blt.w	801caf0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 801cc42:	f110 0e01 	adds.w	lr, r0, #1
 801cc46:	f53f af53 	bmi.w	801caf0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 801cc4a:	4573      	cmp	r3, lr
 801cc4c:	f6ff af50 	blt.w	801caf0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 801cc50:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 801cc52:	9502      	str	r5, [sp, #8]
 801cc54:	b21b      	sxth	r3, r3
 801cc56:	b212      	sxth	r2, r2
 801cc58:	e9cd 0103 	strd	r0, r1, [sp, #12]
 801cc5c:	9301      	str	r3, [sp, #4]
 801cc5e:	9200      	str	r2, [sp, #0]
 801cc60:	e9cd c405 	strd	ip, r4, [sp, #20]
 801cc64:	e9dd 230b 	ldrd	r2, r3, [sp, #44]	@ 0x2c
 801cc68:	4639      	mov	r1, r7
 801cc6a:	9815      	ldr	r0, [sp, #84]	@ 0x54
 801cc6c:	f7ff fc04 	bl	801c478 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>
 801cc70:	e73e      	b.n	801caf0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 801cc72:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 801cc74:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801cc78:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 801cc7a:	f3c3 3503 	ubfx	r5, r3, #12, #4
 801cc7e:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801cc80:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801cc84:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 801cc86:	141f      	asrs	r7, r3, #16
 801cc88:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 801cc8a:	141b      	asrs	r3, r3, #16
 801cc8c:	fb01 3707 	mla	r7, r1, r7, r3
 801cc90:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801cc92:	fa1f fc82 	uxth.w	ip, r2
 801cc96:	eb03 0a07 	add.w	sl, r3, r7
 801cc9a:	ea4f 100c 	mov.w	r0, ip, lsl #4
 801cc9e:	f813 9007 	ldrb.w	r9, [r3, r7]
 801cca2:	f89a 8001 	ldrb.w	r8, [sl, #1]
 801cca6:	f5c0 7380 	rsb	r3, r0, #256	@ 0x100
 801ccaa:	b29b      	uxth	r3, r3
 801ccac:	2d00      	cmp	r5, #0
 801ccae:	f000 813d 	beq.w	801cf2c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a8>
 801ccb2:	f81a 4001 	ldrb.w	r4, [sl, r1]
 801ccb6:	940f      	str	r4, [sp, #60]	@ 0x3c
 801ccb8:	eb0a 0b01 	add.w	fp, sl, r1
 801ccbc:	fa1f fa85 	uxth.w	sl, r5
 801ccc0:	fb0a fc0c 	mul.w	ip, sl, ip
 801ccc4:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
 801ccc8:	fa1f fa8a 	uxth.w	sl, sl
 801cccc:	eba0 000c 	sub.w	r0, r0, ip
 801ccd0:	eba3 030a 	sub.w	r3, r3, sl
 801ccd4:	b280      	uxth	r0, r0
 801ccd6:	fb08 f000 	mul.w	r0, r8, r0
 801ccda:	b29b      	uxth	r3, r3
 801ccdc:	fb09 0303 	mla	r3, r9, r3, r0
 801cce0:	980f      	ldr	r0, [sp, #60]	@ 0x3c
 801cce2:	f89b 4001 	ldrb.w	r4, [fp, #1]
 801cce6:	9410      	str	r4, [sp, #64]	@ 0x40
 801cce8:	fb0a 3300 	mla	r3, sl, r0, r3
 801ccec:	fb0c 3304 	mla	r3, ip, r4, r3
 801ccf0:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801ccf4:	2b00      	cmp	r3, #0
 801ccf6:	f000 810b 	beq.w	801cf10 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78c>
 801ccfa:	980b      	ldr	r0, [sp, #44]	@ 0x2c
 801ccfc:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 801ccfe:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
 801cd02:	eb00 0047 	add.w	r0, r0, r7, lsl #1
 801cd06:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
 801cd0a:	f000 8114 	beq.w	801cf36 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b2>
 801cd0e:	f427 6cfc 	bic.w	ip, r7, #2016	@ 0x7e0
 801cd12:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 801cd16:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 801cd1a:	fb09 f707 	mul.w	r7, r9, r7
 801cd1e:	fb0a fc0c 	mul.w	ip, sl, ip
 801cd22:	ea06 195c 	and.w	r9, r6, ip, lsr #5
 801cd26:	f107 0b20 	add.w	fp, r7, #32
 801cd2a:	f60c 0c01 	addw	ip, ip, #2049	@ 0x801
 801cd2e:	44cc      	add	ip, r9
 801cd30:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
 801cd34:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801cd38:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 801cd3c:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 801cd40:	ea4c 0909 	orr.w	r9, ip, r9
 801cd44:	f1b8 0fff 	cmp.w	r8, #255	@ 0xff
 801cd48:	8847      	ldrh	r7, [r0, #2]
 801cd4a:	d019      	beq.n	801cd80 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5fc>
 801cd4c:	f427 6cfc 	bic.w	ip, r7, #2016	@ 0x7e0
 801cd50:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 801cd54:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 801cd58:	fb08 f807 	mul.w	r8, r8, r7
 801cd5c:	fb0a fc0c 	mul.w	ip, sl, ip
 801cd60:	ea06 175c 	and.w	r7, r6, ip, lsr #5
 801cd64:	f108 0b20 	add.w	fp, r8, #32
 801cd68:	f60c 0c01 	addw	ip, ip, #2049	@ 0x801
 801cd6c:	44bc      	add	ip, r7
 801cd6e:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
 801cd72:	0a3f      	lsrs	r7, r7, #8
 801cd74:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 801cd78:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 801cd7c:	ea4c 0707 	orr.w	r7, ip, r7
 801cd80:	ea4f 4c09 	mov.w	ip, r9, lsl #16
 801cd84:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 801cd88:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
 801cd8c:	f429 69fc 	bic.w	r9, r9, #2016	@ 0x7e0
 801cd90:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801cd94:	f427 67fc 	bic.w	r7, r7, #2016	@ 0x7e0
 801cd98:	ea4c 0909 	orr.w	r9, ip, r9
 801cd9c:	ea4a 0707 	orr.w	r7, sl, r7
 801cda0:	2d00      	cmp	r5, #0
 801cda2:	f000 80ca 	beq.w	801cf3a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b6>
 801cda6:	f101 4100 	add.w	r1, r1, #2147483648	@ 0x80000000
 801cdaa:	3901      	subs	r1, #1
 801cdac:	0049      	lsls	r1, r1, #1
 801cdae:	3102      	adds	r1, #2
 801cdb0:	eb00 0c01 	add.w	ip, r0, r1
 801cdb4:	5a41      	ldrh	r1, [r0, r1]
 801cdb6:	980f      	ldr	r0, [sp, #60]	@ 0x3c
 801cdb8:	28ff      	cmp	r0, #255	@ 0xff
 801cdba:	d019      	beq.n	801cdf0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66c>
 801cdbc:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
 801cdbe:	f421 60fc 	bic.w	r0, r1, #2016	@ 0x7e0
 801cdc2:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 801cdc6:	fb04 fa01 	mul.w	sl, r4, r1
 801cdca:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801cdce:	fb08 f800 	mul.w	r8, r8, r0
 801cdd2:	f10a 0020 	add.w	r0, sl, #32
 801cdd6:	ea06 1158 	and.w	r1, r6, r8, lsr #5
 801cdda:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 801cdde:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 801cde2:	4441      	add	r1, r8
 801cde4:	0a00      	lsrs	r0, r0, #8
 801cde6:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 801cdea:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801cdee:	4301      	orrs	r1, r0
 801cdf0:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 801cdf2:	f8bc 0002 	ldrh.w	r0, [ip, #2]
 801cdf6:	2cff      	cmp	r4, #255	@ 0xff
 801cdf8:	d01a      	beq.n	801ce30 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ac>
 801cdfa:	f420 6cfc 	bic.w	ip, r0, #2016	@ 0x7e0
 801cdfe:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801ce02:	fb04 fa00 	mul.w	sl, r4, r0
 801ce06:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801ce0a:	fb08 f80c 	mul.w	r8, r8, ip
 801ce0e:	f10a 0c20 	add.w	ip, sl, #32
 801ce12:	ea06 1058 	and.w	r0, r6, r8, lsr #5
 801ce16:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
 801ce1a:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 801ce1e:	4440      	add	r0, r8
 801ce20:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801ce24:	ea06 1050 	and.w	r0, r6, r0, lsr #5
 801ce28:	f40c 6cfc 	and.w	ip, ip, #2016	@ 0x7e0
 801ce2c:	ea40 000c 	orr.w	r0, r0, ip
 801ce30:	fb15 fc02 	smulbb	ip, r5, r2
 801ce34:	ea4f 0cec 	mov.w	ip, ip, asr #3
 801ce38:	f1c5 0810 	rsb	r8, r5, #16
 801ce3c:	eba8 0802 	sub.w	r8, r8, r2
 801ce40:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 801ce44:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
 801ce48:	437a      	muls	r2, r7
 801ce4a:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 801ce4e:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
 801ce52:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801ce56:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
 801ce5a:	fb09 2208 	mla	r2, r9, r8, r2
 801ce5e:	ea4a 0101 	orr.w	r1, sl, r1
 801ce62:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
 801ce66:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 801ce6a:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 801ce6e:	fb05 2201 	mla	r2, r5, r1, r2
 801ce72:	ea4b 0000 	orr.w	r0, fp, r0
 801ce76:	fb0c 2200 	mla	r2, ip, r0, r2
 801ce7a:	0d57      	lsrs	r7, r2, #21
 801ce7c:	0952      	lsrs	r2, r2, #5
 801ce7e:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 801ce82:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801ce86:	433a      	orrs	r2, r7
 801ce88:	2bff      	cmp	r3, #255	@ 0xff
 801ce8a:	b292      	uxth	r2, r2
 801ce8c:	d102      	bne.n	801ce94 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
 801ce8e:	9912      	ldr	r1, [sp, #72]	@ 0x48
 801ce90:	29ff      	cmp	r1, #255	@ 0xff
 801ce92:	d063      	beq.n	801cf5c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7d8>
 801ce94:	980a      	ldr	r0, [sp, #40]	@ 0x28
 801ce96:	f8be 1000 	ldrh.w	r1, [lr]
 801ce9a:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 801ce9c:	4343      	muls	r3, r0
 801ce9e:	1c58      	adds	r0, r3, #1
 801cea0:	eb00 2323 	add.w	r3, r0, r3, asr #8
 801cea4:	ea6f 2323 	mvn.w	r3, r3, asr #8
 801cea8:	1208      	asrs	r0, r1, #8
 801ceaa:	b2db      	uxtb	r3, r3
 801ceac:	1215      	asrs	r5, r2, #8
 801ceae:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 801ceb2:	fb10 f003 	smulbb	r0, r0, r3
 801ceb6:	10cf      	asrs	r7, r1, #3
 801ceb8:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 801cebc:	00c9      	lsls	r1, r1, #3
 801cebe:	fb05 0504 	mla	r5, r5, r4, r0
 801cec2:	b2c9      	uxtb	r1, r1
 801cec4:	10d0      	asrs	r0, r2, #3
 801cec6:	00d2      	lsls	r2, r2, #3
 801cec8:	fb11 f103 	smulbb	r1, r1, r3
 801cecc:	b2d2      	uxtb	r2, r2
 801cece:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 801ced2:	fb02 1204 	mla	r2, r2, r4, r1
 801ced6:	fb17 f703 	smulbb	r7, r7, r3
 801ceda:	b2ad      	uxth	r5, r5
 801cedc:	b292      	uxth	r2, r2
 801cede:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 801cee2:	fb00 7004 	mla	r0, r0, r4, r7
 801cee6:	1c6b      	adds	r3, r5, #1
 801cee8:	1c57      	adds	r7, r2, #1
 801ceea:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801ceee:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 801cef2:	b280      	uxth	r0, r0
 801cef4:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801cef8:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 801cefc:	433d      	orrs	r5, r7
 801cefe:	1c47      	adds	r7, r0, #1
 801cf00:	eb07 2710 	add.w	r7, r7, r0, lsr #8
 801cf04:	097f      	lsrs	r7, r7, #5
 801cf06:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 801cf0a:	433d      	orrs	r5, r7
 801cf0c:	f8ae 5000 	strh.w	r5, [lr]
 801cf10:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 801cf12:	9a23      	ldr	r2, [sp, #140]	@ 0x8c
 801cf14:	4413      	add	r3, r2
 801cf16:	9321      	str	r3, [sp, #132]	@ 0x84
 801cf18:	9a22      	ldr	r2, [sp, #136]	@ 0x88
 801cf1a:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801cf1c:	441a      	add	r2, r3
 801cf1e:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 801cf20:	9222      	str	r2, [sp, #136]	@ 0x88
 801cf22:	3b01      	subs	r3, #1
 801cf24:	f10e 0e02 	add.w	lr, lr, #2
 801cf28:	9313      	str	r3, [sp, #76]	@ 0x4c
 801cf2a:	e61c      	b.n	801cb66 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e2>
 801cf2c:	fb08 f000 	mul.w	r0, r8, r0
 801cf30:	fb09 0303 	mla	r3, r9, r3, r0
 801cf34:	e6dc      	b.n	801ccf0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56c>
 801cf36:	46b9      	mov	r9, r7
 801cf38:	e704      	b.n	801cd44 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c0>
 801cf3a:	f1c2 0110 	rsb	r1, r2, #16
 801cf3e:	437a      	muls	r2, r7
 801cf40:	fb09 2901 	mla	r9, r9, r1, r2
 801cf44:	ea4f 0949 	mov.w	r9, r9, lsl #1
 801cf48:	ea4f 5059 	mov.w	r0, r9, lsr #21
 801cf4c:	ea4f 1259 	mov.w	r2, r9, lsr #5
 801cf50:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801cf54:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801cf58:	4302      	orrs	r2, r0
 801cf5a:	e795      	b.n	801ce88 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x704>
 801cf5c:	f8ae 2000 	strh.w	r2, [lr]
 801cf60:	e7d6      	b.n	801cf10 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78c>
 801cf62:	b017      	add	sp, #92	@ 0x5c
 801cf64:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801cf68 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
 801cf68:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801cf6c:	b085      	sub	sp, #20
 801cf6e:	e9dd 7010 	ldrd	r7, r0, [sp, #64]	@ 0x40
 801cf72:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	@ 0x38
 801cf76:	9103      	str	r1, [sp, #12]
 801cf78:	fb00 7406 	mla	r4, r0, r6, r7
 801cf7c:	eb03 0544 	add.w	r5, r3, r4, lsl #1
 801cf80:	2800      	cmp	r0, #0
 801cf82:	f9bd b03c 	ldrsh.w	fp, [sp, #60]	@ 0x3c
 801cf86:	f89d 1048 	ldrb.w	r1, [sp, #72]	@ 0x48
 801cf8a:	f89d e04c 	ldrb.w	lr, [sp, #76]	@ 0x4c
 801cf8e:	9501      	str	r5, [sp, #4]
 801cf90:	eb02 0904 	add.w	r9, r2, r4
 801cf94:	f2c0 8141 	blt.w	801d21a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2b2>
 801cf98:	4583      	cmp	fp, r0
 801cf9a:	f340 813e 	ble.w	801d21a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2b2>
 801cf9e:	2f00      	cmp	r7, #0
 801cfa0:	f2c0 8137 	blt.w	801d212 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2aa>
 801cfa4:	42be      	cmp	r6, r7
 801cfa6:	f340 8134 	ble.w	801d212 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2aa>
 801cfaa:	f812 c004 	ldrb.w	ip, [r2, r4]
 801cfae:	f833 3014 	ldrh.w	r3, [r3, r4, lsl #1]
 801cfb2:	ea4f 02ec 	mov.w	r2, ip, asr #3
 801cfb6:	f423 65fc 	bic.w	r5, r3, #2016	@ 0x7e0
 801cfba:	4355      	muls	r5, r2
 801cfbc:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801cfc0:	f64f 041f 	movw	r4, #63519	@ 0xf81f
 801cfc4:	fb0c f203 	mul.w	r2, ip, r3
 801cfc8:	ea04 1355 	and.w	r3, r4, r5, lsr #5
 801cfcc:	f605 0501 	addw	r5, r5, #2049	@ 0x801
 801cfd0:	441d      	add	r5, r3
 801cfd2:	f102 0320 	add.w	r3, r2, #32
 801cfd6:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801cfda:	0a1b      	lsrs	r3, r3, #8
 801cfdc:	ea04 1455 	and.w	r4, r4, r5, lsr #5
 801cfe0:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801cfe4:	431c      	orrs	r4, r3
 801cfe6:	1c7b      	adds	r3, r7, #1
 801cfe8:	f100 811c 	bmi.w	801d224 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2bc>
 801cfec:	429e      	cmp	r6, r3
 801cfee:	f340 8119 	ble.w	801d224 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2bc>
 801cff2:	2900      	cmp	r1, #0
 801cff4:	f000 8119 	beq.w	801d22a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c2>
 801cff8:	9a01      	ldr	r2, [sp, #4]
 801cffa:	f899 3001 	ldrb.w	r3, [r9, #1]
 801cffe:	8855      	ldrh	r5, [r2, #2]
 801d000:	ea4f 08e3 	mov.w	r8, r3, asr #3
 801d004:	f425 62fc 	bic.w	r2, r5, #2016	@ 0x7e0
 801d008:	fb08 f802 	mul.w	r8, r8, r2
 801d00c:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801d010:	f64f 021f 	movw	r2, #63519	@ 0xf81f
 801d014:	ea02 1a58 	and.w	sl, r2, r8, lsr #5
 801d018:	435d      	muls	r5, r3
 801d01a:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 801d01e:	44d0      	add	r8, sl
 801d020:	f105 0a20 	add.w	sl, r5, #32
 801d024:	eb0a 2515 	add.w	r5, sl, r5, lsr #8
 801d028:	0a2d      	lsrs	r5, r5, #8
 801d02a:	ea02 1258 	and.w	r2, r2, r8, lsr #5
 801d02e:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801d032:	432a      	orrs	r2, r5
 801d034:	3001      	adds	r0, #1
 801d036:	f100 80fe 	bmi.w	801d236 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2ce>
 801d03a:	4583      	cmp	fp, r0
 801d03c:	f340 80fb 	ble.w	801d236 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2ce>
 801d040:	f1be 0f00 	cmp.w	lr, #0
 801d044:	f000 80fc 	beq.w	801d240 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2d8>
 801d048:	2f00      	cmp	r7, #0
 801d04a:	f2c0 80f1 	blt.w	801d230 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c8>
 801d04e:	42be      	cmp	r6, r7
 801d050:	f340 80ee 	ble.w	801d230 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c8>
 801d054:	9801      	ldr	r0, [sp, #4]
 801d056:	f819 5006 	ldrb.w	r5, [r9, r6]
 801d05a:	f830 8016 	ldrh.w	r8, [r0, r6, lsl #1]
 801d05e:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801d062:	f428 60fc 	bic.w	r0, r8, #2016	@ 0x7e0
 801d066:	fb0a fa00 	mul.w	sl, sl, r0
 801d06a:	f64f 0b1f 	movw	fp, #63519	@ 0xf81f
 801d06e:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
 801d072:	ea0b 105a 	and.w	r0, fp, sl, lsr #5
 801d076:	fb05 f808 	mul.w	r8, r5, r8
 801d07a:	f60a 0a01 	addw	sl, sl, #2049	@ 0x801
 801d07e:	4482      	add	sl, r0
 801d080:	f108 0020 	add.w	r0, r8, #32
 801d084:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 801d088:	0a00      	lsrs	r0, r0, #8
 801d08a:	ea0b 1b5a 	and.w	fp, fp, sl, lsr #5
 801d08e:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801d092:	ea4b 0b00 	orr.w	fp, fp, r0
 801d096:	3701      	adds	r7, #1
 801d098:	f100 80d7 	bmi.w	801d24a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e2>
 801d09c:	42be      	cmp	r6, r7
 801d09e:	f340 80d4 	ble.w	801d24a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e2>
 801d0a2:	2900      	cmp	r1, #0
 801d0a4:	f000 80d4 	beq.w	801d250 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e8>
 801d0a8:	3601      	adds	r6, #1
 801d0aa:	9801      	ldr	r0, [sp, #4]
 801d0ac:	f819 7006 	ldrb.w	r7, [r9, r6]
 801d0b0:	f830 0016 	ldrh.w	r0, [r0, r6, lsl #1]
 801d0b4:	ea4f 09e7 	mov.w	r9, r7, asr #3
 801d0b8:	f420 66fc 	bic.w	r6, r0, #2016	@ 0x7e0
 801d0bc:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801d0c0:	fb09 f906 	mul.w	r9, r9, r6
 801d0c4:	fb07 f800 	mul.w	r8, r7, r0
 801d0c8:	f64f 001f 	movw	r0, #63519	@ 0xf81f
 801d0cc:	ea00 1a59 	and.w	sl, r0, r9, lsr #5
 801d0d0:	f609 0901 	addw	r9, r9, #2049	@ 0x801
 801d0d4:	44d1      	add	r9, sl
 801d0d6:	ea00 1659 	and.w	r6, r0, r9, lsr #5
 801d0da:	f108 0020 	add.w	r0, r8, #32
 801d0de:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 801d0e2:	0a00      	lsrs	r0, r0, #8
 801d0e4:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801d0e8:	4330      	orrs	r0, r6
 801d0ea:	b28e      	uxth	r6, r1
 801d0ec:	fa1f f98e 	uxth.w	r9, lr
 801d0f0:	fb06 f809 	mul.w	r8, r6, r9
 801d0f4:	ea4f 4a04 	mov.w	sl, r4, lsl #16
 801d0f8:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
 801d0fc:	0136      	lsls	r6, r6, #4
 801d0fe:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801d102:	f424 64fc 	bic.w	r4, r4, #2016	@ 0x7e0
 801d106:	9601      	str	r6, [sp, #4]
 801d108:	ea4a 0404 	orr.w	r4, sl, r4
 801d10c:	fa1f f689 	uxth.w	r6, r9
 801d110:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 801d114:	fb11 f90e 	smulbb	r9, r1, lr
 801d118:	f3c9 09c7 	ubfx	r9, r9, #3, #8
 801d11c:	9602      	str	r6, [sp, #8]
 801d11e:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801d122:	4626      	mov	r6, r4
 801d124:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801d128:	f1ce 0410 	rsb	r4, lr, #16
 801d12c:	1a64      	subs	r4, r4, r1
 801d12e:	ea4a 0202 	orr.w	r2, sl, r2
 801d132:	ebc9 0141 	rsb	r1, r9, r1, lsl #1
 801d136:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 801d13a:	434a      	muls	r2, r1
 801d13c:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 801d140:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801d144:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 801d148:	fb04 2406 	mla	r4, r4, r6, r2
 801d14c:	ea4a 0000 	orr.w	r0, sl, r0
 801d150:	fb09 4200 	mla	r2, r9, r0, r4
 801d154:	ea4f 440b 	mov.w	r4, fp, lsl #16
 801d158:	f004 64fc 	and.w	r4, r4, #132120576	@ 0x7e00000
 801d15c:	9801      	ldr	r0, [sp, #4]
 801d15e:	9903      	ldr	r1, [sp, #12]
 801d160:	f42b 6bfc 	bic.w	fp, fp, #2016	@ 0x7e0
 801d164:	ea44 0b0b 	orr.w	fp, r4, fp
 801d168:	9c02      	ldr	r4, [sp, #8]
 801d16a:	8809      	ldrh	r1, [r1, #0]
 801d16c:	f5c0 7080 	rsb	r0, r0, #256	@ 0x100
 801d170:	1b00      	subs	r0, r0, r4
 801d172:	9c01      	ldr	r4, [sp, #4]
 801d174:	eba4 0608 	sub.w	r6, r4, r8
 801d178:	b2b6      	uxth	r6, r6
 801d17a:	b280      	uxth	r0, r0
 801d17c:	4373      	muls	r3, r6
 801d17e:	fb0c 3300 	mla	r3, ip, r0, r3
 801d182:	9802      	ldr	r0, [sp, #8]
 801d184:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
 801d188:	fb00 3505 	mla	r5, r0, r5, r3
 801d18c:	fb0e 2e0b 	mla	lr, lr, fp, r2
 801d190:	fb08 5707 	mla	r7, r8, r7, r5
 801d194:	ea4f 525e 	mov.w	r2, lr, lsr #21
 801d198:	120b      	asrs	r3, r1, #8
 801d19a:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 801d19e:	ea6f 2727 	mvn.w	r7, r7, asr #8
 801d1a2:	b2ff      	uxtb	r7, r7
 801d1a4:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801d1a8:	10c8      	asrs	r0, r1, #3
 801d1aa:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
 801d1ae:	f003 03f8 	and.w	r3, r3, #248	@ 0xf8
 801d1b2:	00c9      	lsls	r1, r1, #3
 801d1b4:	437b      	muls	r3, r7
 801d1b6:	ea42 0e0e 	orr.w	lr, r2, lr
 801d1ba:	b2c9      	uxtb	r1, r1
 801d1bc:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 801d1c0:	fa1f f28e 	uxth.w	r2, lr
 801d1c4:	4378      	muls	r0, r7
 801d1c6:	434f      	muls	r7, r1
 801d1c8:	1c59      	adds	r1, r3, #1
 801d1ca:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 801d1ce:	1213      	asrs	r3, r2, #8
 801d1d0:	f023 0307 	bic.w	r3, r3, #7
 801d1d4:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 801d1d8:	1c41      	adds	r1, r0, #1
 801d1da:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 801d1de:	10d1      	asrs	r1, r2, #3
 801d1e0:	f021 0103 	bic.w	r1, r1, #3
 801d1e4:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 801d1e8:	021b      	lsls	r3, r3, #8
 801d1ea:	00c9      	lsls	r1, r1, #3
 801d1ec:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 801d1f0:	f403 4378 	and.w	r3, r3, #63488	@ 0xf800
 801d1f4:	430b      	orrs	r3, r1
 801d1f6:	1c79      	adds	r1, r7, #1
 801d1f8:	eb01 2717 	add.w	r7, r1, r7, lsr #8
 801d1fc:	00d2      	lsls	r2, r2, #3
 801d1fe:	eb02 2217 	add.w	r2, r2, r7, lsr #8
 801d202:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801d206:	431a      	orrs	r2, r3
 801d208:	9b03      	ldr	r3, [sp, #12]
 801d20a:	801a      	strh	r2, [r3, #0]
 801d20c:	b005      	add	sp, #20
 801d20e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801d212:	f04f 0c00 	mov.w	ip, #0
 801d216:	4664      	mov	r4, ip
 801d218:	e6e5      	b.n	801cfe6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x7e>
 801d21a:	2300      	movs	r3, #0
 801d21c:	469c      	mov	ip, r3
 801d21e:	461a      	mov	r2, r3
 801d220:	461c      	mov	r4, r3
 801d222:	e707      	b.n	801d034 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 801d224:	2300      	movs	r3, #0
 801d226:	461a      	mov	r2, r3
 801d228:	e704      	b.n	801d034 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 801d22a:	460b      	mov	r3, r1
 801d22c:	460a      	mov	r2, r1
 801d22e:	e701      	b.n	801d034 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 801d230:	2500      	movs	r5, #0
 801d232:	46ab      	mov	fp, r5
 801d234:	e72f      	b.n	801d096 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x12e>
 801d236:	2700      	movs	r7, #0
 801d238:	463d      	mov	r5, r7
 801d23a:	4638      	mov	r0, r7
 801d23c:	46bb      	mov	fp, r7
 801d23e:	e754      	b.n	801d0ea <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 801d240:	4677      	mov	r7, lr
 801d242:	4675      	mov	r5, lr
 801d244:	4670      	mov	r0, lr
 801d246:	46f3      	mov	fp, lr
 801d248:	e74f      	b.n	801d0ea <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 801d24a:	2700      	movs	r7, #0
 801d24c:	4638      	mov	r0, r7
 801d24e:	e74c      	b.n	801d0ea <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 801d250:	460f      	mov	r7, r1
 801d252:	4608      	mov	r0, r1
 801d254:	e749      	b.n	801d0ea <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
	...

0801d258 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801d258:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801d25c:	b093      	sub	sp, #76	@ 0x4c
 801d25e:	9210      	str	r2, [sp, #64]	@ 0x40
 801d260:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 801d262:	910e      	str	r1, [sp, #56]	@ 0x38
 801d264:	9306      	str	r3, [sp, #24]
 801d266:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	@ 0x88
 801d26a:	9011      	str	r0, [sp, #68]	@ 0x44
 801d26c:	6850      	ldr	r0, [r2, #4]
 801d26e:	6812      	ldr	r2, [r2, #0]
 801d270:	fb00 1303 	mla	r3, r0, r3, r1
 801d274:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801d278:	9307      	str	r3, [sp, #28]
 801d27a:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801d27c:	681b      	ldr	r3, [r3, #0]
 801d27e:	9308      	str	r3, [sp, #32]
 801d280:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801d282:	685b      	ldr	r3, [r3, #4]
 801d284:	9309      	str	r3, [sp, #36]	@ 0x24
 801d286:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801d288:	2b00      	cmp	r3, #0
 801d28a:	dc03      	bgt.n	801d294 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 801d28c:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801d28e:	2b00      	cmp	r3, #0
 801d290:	f340 83b4 	ble.w	801d9fc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a4>
 801d294:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801d296:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801d29a:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801d29e:	1e48      	subs	r0, r1, #1
 801d2a0:	1e55      	subs	r5, r2, #1
 801d2a2:	9b06      	ldr	r3, [sp, #24]
 801d2a4:	2b00      	cmp	r3, #0
 801d2a6:	f340 8163 	ble.w	801d570 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x318>
 801d2aa:	9e1d      	ldr	r6, [sp, #116]	@ 0x74
 801d2ac:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 801d2ae:	1436      	asrs	r6, r6, #16
 801d2b0:	ea4f 4323 	mov.w	r3, r3, asr #16
 801d2b4:	d406      	bmi.n	801d2c4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801d2b6:	4286      	cmp	r6, r0
 801d2b8:	da04      	bge.n	801d2c4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801d2ba:	2b00      	cmp	r3, #0
 801d2bc:	db02      	blt.n	801d2c4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801d2be:	42ab      	cmp	r3, r5
 801d2c0:	f2c0 8157 	blt.w	801d572 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31a>
 801d2c4:	3601      	adds	r6, #1
 801d2c6:	f100 8144 	bmi.w	801d552 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 801d2ca:	42b1      	cmp	r1, r6
 801d2cc:	f2c0 8141 	blt.w	801d552 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 801d2d0:	3301      	adds	r3, #1
 801d2d2:	f100 813e 	bmi.w	801d552 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 801d2d6:	429a      	cmp	r2, r3
 801d2d8:	f2c0 813b 	blt.w	801d552 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 801d2dc:	9b06      	ldr	r3, [sp, #24]
 801d2de:	9f07      	ldr	r7, [sp, #28]
 801d2e0:	930f      	str	r3, [sp, #60]	@ 0x3c
 801d2e2:	f64f 061f 	movw	r6, #63519	@ 0xf81f
 801d2e6:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 801d2e8:	2b00      	cmp	r3, #0
 801d2ea:	f340 8164 	ble.w	801d5b6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35e>
 801d2ee:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 801d2f0:	9d1d      	ldr	r5, [sp, #116]	@ 0x74
 801d2f2:	1418      	asrs	r0, r3, #16
 801d2f4:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 801d2f6:	f3c3 3103 	ubfx	r1, r3, #12, #4
 801d2fa:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 801d2fc:	f3c3 3c03 	ubfx	ip, r3, #12, #4
 801d300:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801d302:	142d      	asrs	r5, r5, #16
 801d304:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 801d308:	f100 81ee 	bmi.w	801d6e8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 801d30c:	f102 3eff 	add.w	lr, r2, #4294967295
 801d310:	4575      	cmp	r5, lr
 801d312:	f280 81e9 	bge.w	801d6e8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 801d316:	2800      	cmp	r0, #0
 801d318:	f2c0 81e6 	blt.w	801d6e8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 801d31c:	f103 3eff 	add.w	lr, r3, #4294967295
 801d320:	4570      	cmp	r0, lr
 801d322:	f280 81e1 	bge.w	801d6e8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 801d326:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801d328:	b212      	sxth	r2, r2
 801d32a:	fb00 5002 	mla	r0, r0, r2, r5
 801d32e:	fa1f fe81 	uxth.w	lr, r1
 801d332:	eb03 0a00 	add.w	sl, r3, r0
 801d336:	ea4f 150e 	mov.w	r5, lr, lsl #4
 801d33a:	f813 9000 	ldrb.w	r9, [r3, r0]
 801d33e:	f89a 8001 	ldrb.w	r8, [sl, #1]
 801d342:	f5c5 7380 	rsb	r3, r5, #256	@ 0x100
 801d346:	b29b      	uxth	r3, r3
 801d348:	f1bc 0f00 	cmp.w	ip, #0
 801d34c:	f000 8179 	beq.w	801d642 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ea>
 801d350:	f81a 4002 	ldrb.w	r4, [sl, r2]
 801d354:	940a      	str	r4, [sp, #40]	@ 0x28
 801d356:	eb0a 0b02 	add.w	fp, sl, r2
 801d35a:	fa1f fa8c 	uxth.w	sl, ip
 801d35e:	fb0a fe0e 	mul.w	lr, sl, lr
 801d362:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
 801d366:	fa1f fa8a 	uxth.w	sl, sl
 801d36a:	eba5 050e 	sub.w	r5, r5, lr
 801d36e:	f89b 4001 	ldrb.w	r4, [fp, #1]
 801d372:	940b      	str	r4, [sp, #44]	@ 0x2c
 801d374:	eba3 030a 	sub.w	r3, r3, sl
 801d378:	b2ad      	uxth	r5, r5
 801d37a:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 801d37c:	b29b      	uxth	r3, r3
 801d37e:	fb08 f505 	mul.w	r5, r8, r5
 801d382:	fb09 5303 	mla	r3, r9, r3, r5
 801d386:	fb0a 3304 	mla	r3, sl, r4, r3
 801d38a:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 801d38c:	fb0e 3304 	mla	r3, lr, r4, r3
 801d390:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801d394:	2b00      	cmp	r3, #0
 801d396:	f000 80cf 	beq.w	801d538 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 801d39a:	9c08      	ldr	r4, [sp, #32]
 801d39c:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
 801d3a0:	eb04 0540 	add.w	r5, r4, r0, lsl #1
 801d3a4:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
 801d3a8:	f000 8150 	beq.w	801d64c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f4>
 801d3ac:	f420 6efc 	bic.w	lr, r0, #2016	@ 0x7e0
 801d3b0:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 801d3b4:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801d3b8:	fb09 f000 	mul.w	r0, r9, r0
 801d3bc:	fb0a fe0e 	mul.w	lr, sl, lr
 801d3c0:	ea06 195e 	and.w	r9, r6, lr, lsr #5
 801d3c4:	f100 0b20 	add.w	fp, r0, #32
 801d3c8:	f60e 0e01 	addw	lr, lr, #2049	@ 0x801
 801d3cc:	44ce      	add	lr, r9
 801d3ce:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
 801d3d2:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801d3d6:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 801d3da:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 801d3de:	ea4e 0909 	orr.w	r9, lr, r9
 801d3e2:	f1b8 0fff 	cmp.w	r8, #255	@ 0xff
 801d3e6:	8868      	ldrh	r0, [r5, #2]
 801d3e8:	d019      	beq.n	801d41e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c6>
 801d3ea:	f420 6efc 	bic.w	lr, r0, #2016	@ 0x7e0
 801d3ee:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 801d3f2:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801d3f6:	fb08 f800 	mul.w	r8, r8, r0
 801d3fa:	fb0a fe0e 	mul.w	lr, sl, lr
 801d3fe:	ea06 105e 	and.w	r0, r6, lr, lsr #5
 801d402:	f108 0b20 	add.w	fp, r8, #32
 801d406:	f60e 0e01 	addw	lr, lr, #2049	@ 0x801
 801d40a:	4486      	add	lr, r0
 801d40c:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
 801d410:	0a00      	lsrs	r0, r0, #8
 801d412:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 801d416:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801d41a:	ea4e 0000 	orr.w	r0, lr, r0
 801d41e:	ea4f 4e09 	mov.w	lr, r9, lsl #16
 801d422:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 801d426:	f00e 6efc 	and.w	lr, lr, #132120576	@ 0x7e00000
 801d42a:	f429 69fc 	bic.w	r9, r9, #2016	@ 0x7e0
 801d42e:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801d432:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 801d436:	ea4e 0909 	orr.w	r9, lr, r9
 801d43a:	ea4a 0000 	orr.w	r0, sl, r0
 801d43e:	f1bc 0f00 	cmp.w	ip, #0
 801d442:	f000 8105 	beq.w	801d650 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 801d446:	f102 4200 	add.w	r2, r2, #2147483648	@ 0x80000000
 801d44a:	3a01      	subs	r2, #1
 801d44c:	0052      	lsls	r2, r2, #1
 801d44e:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 801d450:	3202      	adds	r2, #2
 801d452:	2cff      	cmp	r4, #255	@ 0xff
 801d454:	eb05 0e02 	add.w	lr, r5, r2
 801d458:	5aaa      	ldrh	r2, [r5, r2]
 801d45a:	d018      	beq.n	801d48e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 801d45c:	f422 65fc 	bic.w	r5, r2, #2016	@ 0x7e0
 801d460:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801d464:	fb04 fa02 	mul.w	sl, r4, r2
 801d468:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801d46c:	fb08 f805 	mul.w	r8, r8, r5
 801d470:	f10a 0520 	add.w	r5, sl, #32
 801d474:	ea06 1258 	and.w	r2, r6, r8, lsr #5
 801d478:	eb05 251a 	add.w	r5, r5, sl, lsr #8
 801d47c:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 801d480:	4442      	add	r2, r8
 801d482:	0a2d      	lsrs	r5, r5, #8
 801d484:	ea06 1252 	and.w	r2, r6, r2, lsr #5
 801d488:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801d48c:	432a      	orrs	r2, r5
 801d48e:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 801d490:	f8be 5002 	ldrh.w	r5, [lr, #2]
 801d494:	2cff      	cmp	r4, #255	@ 0xff
 801d496:	d01a      	beq.n	801d4ce <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 801d498:	f425 6efc 	bic.w	lr, r5, #2016	@ 0x7e0
 801d49c:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801d4a0:	fb04 fa05 	mul.w	sl, r4, r5
 801d4a4:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801d4a8:	fb08 f80e 	mul.w	r8, r8, lr
 801d4ac:	f10a 0e20 	add.w	lr, sl, #32
 801d4b0:	ea06 1558 	and.w	r5, r6, r8, lsr #5
 801d4b4:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
 801d4b8:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 801d4bc:	4445      	add	r5, r8
 801d4be:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801d4c2:	ea06 1555 	and.w	r5, r6, r5, lsr #5
 801d4c6:	f40e 6efc 	and.w	lr, lr, #2016	@ 0x7e0
 801d4ca:	ea45 050e 	orr.w	r5, r5, lr
 801d4ce:	fb1c fe01 	smulbb	lr, ip, r1
 801d4d2:	ea4f 0eee 	mov.w	lr, lr, asr #3
 801d4d6:	f1cc 0810 	rsb	r8, ip, #16
 801d4da:	eba8 0801 	sub.w	r8, r8, r1
 801d4de:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 801d4e2:	ebce 0141 	rsb	r1, lr, r1, lsl #1
 801d4e6:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
 801d4ea:	ea4f 4b05 	mov.w	fp, r5, lsl #16
 801d4ee:	4341      	muls	r1, r0
 801d4f0:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801d4f4:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801d4f8:	ea4a 0202 	orr.w	r2, sl, r2
 801d4fc:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
 801d500:	fb09 1108 	mla	r1, r9, r8, r1
 801d504:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 801d508:	f425 65fc 	bic.w	r5, r5, #2016	@ 0x7e0
 801d50c:	fb0c 1102 	mla	r1, ip, r2, r1
 801d510:	ea4b 0505 	orr.w	r5, fp, r5
 801d514:	fb0e 1e05 	mla	lr, lr, r5, r1
 801d518:	ea4f 525e 	mov.w	r2, lr, lsr #21
 801d51c:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 801d520:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801d524:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
 801d528:	ea42 0e0e 	orr.w	lr, r2, lr
 801d52c:	fa1f f28e 	uxth.w	r2, lr
 801d530:	2bff      	cmp	r3, #255	@ 0xff
 801d532:	f040 80a1 	bne.w	801d678 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x420>
 801d536:	803a      	strh	r2, [r7, #0]
 801d538:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 801d53a:	9a1f      	ldr	r2, [sp, #124]	@ 0x7c
 801d53c:	4413      	add	r3, r2
 801d53e:	931d      	str	r3, [sp, #116]	@ 0x74
 801d540:	9a1e      	ldr	r2, [sp, #120]	@ 0x78
 801d542:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801d544:	441a      	add	r2, r3
 801d546:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 801d548:	921e      	str	r2, [sp, #120]	@ 0x78
 801d54a:	3b01      	subs	r3, #1
 801d54c:	3702      	adds	r7, #2
 801d54e:	930f      	str	r3, [sp, #60]	@ 0x3c
 801d550:	e6c9      	b.n	801d2e6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801d552:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 801d554:	9e1f      	ldr	r6, [sp, #124]	@ 0x7c
 801d556:	9c1e      	ldr	r4, [sp, #120]	@ 0x78
 801d558:	4433      	add	r3, r6
 801d55a:	931d      	str	r3, [sp, #116]	@ 0x74
 801d55c:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801d55e:	441c      	add	r4, r3
 801d560:	9b06      	ldr	r3, [sp, #24]
 801d562:	941e      	str	r4, [sp, #120]	@ 0x78
 801d564:	3b01      	subs	r3, #1
 801d566:	9306      	str	r3, [sp, #24]
 801d568:	9b07      	ldr	r3, [sp, #28]
 801d56a:	3302      	adds	r3, #2
 801d56c:	9307      	str	r3, [sp, #28]
 801d56e:	e698      	b.n	801d2a2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 801d570:	d028      	beq.n	801d5c4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 801d572:	9b06      	ldr	r3, [sp, #24]
 801d574:	981f      	ldr	r0, [sp, #124]	@ 0x7c
 801d576:	9d1d      	ldr	r5, [sp, #116]	@ 0x74
 801d578:	3b01      	subs	r3, #1
 801d57a:	fb00 5003 	mla	r0, r0, r3, r5
 801d57e:	1400      	asrs	r0, r0, #16
 801d580:	f53f aeac 	bmi.w	801d2dc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801d584:	3901      	subs	r1, #1
 801d586:	4288      	cmp	r0, r1
 801d588:	f6bf aea8 	bge.w	801d2dc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801d58c:	9920      	ldr	r1, [sp, #128]	@ 0x80
 801d58e:	981e      	ldr	r0, [sp, #120]	@ 0x78
 801d590:	fb01 0303 	mla	r3, r1, r3, r0
 801d594:	141b      	asrs	r3, r3, #16
 801d596:	f53f aea1 	bmi.w	801d2dc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801d59a:	3a01      	subs	r2, #1
 801d59c:	4293      	cmp	r3, r2
 801d59e:	f6bf ae9d 	bge.w	801d2dc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801d5a2:	9b06      	ldr	r3, [sp, #24]
 801d5a4:	f8dd e01c 	ldr.w	lr, [sp, #28]
 801d5a8:	930f      	str	r3, [sp, #60]	@ 0x3c
 801d5aa:	f64f 061f 	movw	r6, #63519	@ 0xf81f
 801d5ae:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 801d5b0:	2b00      	cmp	r3, #0
 801d5b2:	f300 80b6 	bgt.w	801d722 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ca>
 801d5b6:	9b06      	ldr	r3, [sp, #24]
 801d5b8:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 801d5bc:	9b07      	ldr	r3, [sp, #28]
 801d5be:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 801d5c2:	9307      	str	r3, [sp, #28]
 801d5c4:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801d5c6:	2b00      	cmp	r3, #0
 801d5c8:	f340 8218 	ble.w	801d9fc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a4>
 801d5cc:	ee30 0a04 	vadd.f32	s0, s0, s8
 801d5d0:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 801d5d4:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801d5d8:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801d5da:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801d5de:	ee31 1a05 	vadd.f32	s2, s2, s10
 801d5e2:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801d5e6:	eef0 6a62 	vmov.f32	s13, s5
 801d5ea:	ee61 7a27 	vmul.f32	s15, s2, s15
 801d5ee:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801d5f2:	ee77 2a62 	vsub.f32	s5, s14, s5
 801d5f6:	edcd 6a1d 	vstr	s13, [sp, #116]	@ 0x74
 801d5fa:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801d5fe:	eef0 6a43 	vmov.f32	s13, s6
 801d602:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801d606:	ee12 2a90 	vmov	r2, s5
 801d60a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801d60e:	fb92 f3f3 	sdiv	r3, r2, r3
 801d612:	ee13 2a10 	vmov	r2, s6
 801d616:	931f      	str	r3, [sp, #124]	@ 0x7c
 801d618:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801d61a:	fb92 f3f3 	sdiv	r3, r2, r3
 801d61e:	9320      	str	r3, [sp, #128]	@ 0x80
 801d620:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801d622:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 801d624:	3b01      	subs	r3, #1
 801d626:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801d62a:	930e      	str	r3, [sp, #56]	@ 0x38
 801d62c:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801d62e:	edcd 6a1e 	vstr	s13, [sp, #120]	@ 0x78
 801d632:	bf08      	it	eq
 801d634:	4613      	moveq	r3, r2
 801d636:	9306      	str	r3, [sp, #24]
 801d638:	eeb0 3a67 	vmov.f32	s6, s15
 801d63c:	eef0 2a47 	vmov.f32	s5, s14
 801d640:	e621      	b.n	801d286 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e>
 801d642:	fb08 f505 	mul.w	r5, r8, r5
 801d646:	fb09 5303 	mla	r3, r9, r3, r5
 801d64a:	e6a1      	b.n	801d390 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x138>
 801d64c:	4681      	mov	r9, r0
 801d64e:	e6c8      	b.n	801d3e2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x18a>
 801d650:	f1c1 0210 	rsb	r2, r1, #16
 801d654:	4341      	muls	r1, r0
 801d656:	fb09 1902 	mla	r9, r9, r2, r1
 801d65a:	ea4f 0949 	mov.w	r9, r9, lsl #1
 801d65e:	ea4f 5259 	mov.w	r2, r9, lsr #21
 801d662:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801d666:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801d66a:	f429 69fc 	bic.w	r9, r9, #2016	@ 0x7e0
 801d66e:	ea42 0909 	orr.w	r9, r2, r9
 801d672:	fa1f f289 	uxth.w	r2, r9
 801d676:	e75b      	b.n	801d530 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 801d678:	f8b7 c000 	ldrh.w	ip, [r7]
 801d67c:	43db      	mvns	r3, r3
 801d67e:	ea4f 202c 	mov.w	r0, ip, asr #8
 801d682:	fa5f fe83 	uxtb.w	lr, r3
 801d686:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 801d68a:	fb00 f00e 	mul.w	r0, r0, lr
 801d68e:	1c41      	adds	r1, r0, #1
 801d690:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 801d694:	1211      	asrs	r1, r2, #8
 801d696:	ea4f 05ec 	mov.w	r5, ip, asr #3
 801d69a:	f021 0107 	bic.w	r1, r1, #7
 801d69e:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 801d6a2:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 801d6a6:	48d7      	ldr	r0, [pc, #860]	@ (801da04 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7ac>)
 801d6a8:	fb05 f50e 	mul.w	r5, r5, lr
 801d6ac:	b2c9      	uxtb	r1, r1
 801d6ae:	ea00 2001 	and.w	r0, r0, r1, lsl #8
 801d6b2:	1c69      	adds	r1, r5, #1
 801d6b4:	eb01 2515 	add.w	r5, r1, r5, lsr #8
 801d6b8:	10d1      	asrs	r1, r2, #3
 801d6ba:	f021 0103 	bic.w	r1, r1, #3
 801d6be:	ea4f 03cc 	mov.w	r3, ip, lsl #3
 801d6c2:	eb01 2115 	add.w	r1, r1, r5, lsr #8
 801d6c6:	b2db      	uxtb	r3, r3
 801d6c8:	00c9      	lsls	r1, r1, #3
 801d6ca:	fb03 f30e 	mul.w	r3, r3, lr
 801d6ce:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 801d6d2:	4301      	orrs	r1, r0
 801d6d4:	1c58      	adds	r0, r3, #1
 801d6d6:	eb00 2313 	add.w	r3, r0, r3, lsr #8
 801d6da:	00d2      	lsls	r2, r2, #3
 801d6dc:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 801d6e0:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801d6e4:	430a      	orrs	r2, r1
 801d6e6:	e726      	b.n	801d536 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2de>
 801d6e8:	f115 0e01 	adds.w	lr, r5, #1
 801d6ec:	f53f af24 	bmi.w	801d538 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 801d6f0:	4572      	cmp	r2, lr
 801d6f2:	f6ff af21 	blt.w	801d538 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 801d6f6:	f110 0e01 	adds.w	lr, r0, #1
 801d6fa:	f53f af1d 	bmi.w	801d538 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 801d6fe:	4573      	cmp	r3, lr
 801d700:	f6ff af1a 	blt.w	801d538 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 801d704:	b21b      	sxth	r3, r3
 801d706:	b212      	sxth	r2, r2
 801d708:	e9cd 1c04 	strd	r1, ip, [sp, #16]
 801d70c:	e9cd 5002 	strd	r5, r0, [sp, #8]
 801d710:	9301      	str	r3, [sp, #4]
 801d712:	9200      	str	r2, [sp, #0]
 801d714:	4639      	mov	r1, r7
 801d716:	e9dd 3208 	ldrd	r3, r2, [sp, #32]
 801d71a:	9811      	ldr	r0, [sp, #68]	@ 0x44
 801d71c:	f7ff fc24 	bl	801cf68 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
 801d720:	e70a      	b.n	801d538 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 801d722:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 801d724:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801d728:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 801d72a:	f3c3 3503 	ubfx	r5, r3, #12, #4
 801d72e:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801d730:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801d734:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 801d736:	141f      	asrs	r7, r3, #16
 801d738:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 801d73a:	141b      	asrs	r3, r3, #16
 801d73c:	fb01 3707 	mla	r7, r1, r7, r3
 801d740:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801d742:	fa1f fc82 	uxth.w	ip, r2
 801d746:	eb03 0a07 	add.w	sl, r3, r7
 801d74a:	ea4f 100c 	mov.w	r0, ip, lsl #4
 801d74e:	f813 9007 	ldrb.w	r9, [r3, r7]
 801d752:	f89a 8001 	ldrb.w	r8, [sl, #1]
 801d756:	f5c0 7380 	rsb	r3, r0, #256	@ 0x100
 801d75a:	b29b      	uxth	r3, r3
 801d75c:	2d00      	cmp	r5, #0
 801d75e:	f000 80fe 	beq.w	801d95e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x706>
 801d762:	f81a 4001 	ldrb.w	r4, [sl, r1]
 801d766:	940c      	str	r4, [sp, #48]	@ 0x30
 801d768:	eb0a 0b01 	add.w	fp, sl, r1
 801d76c:	fa1f fa85 	uxth.w	sl, r5
 801d770:	fb0a fc0c 	mul.w	ip, sl, ip
 801d774:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
 801d778:	fa1f fa8a 	uxth.w	sl, sl
 801d77c:	eba0 000c 	sub.w	r0, r0, ip
 801d780:	eba3 030a 	sub.w	r3, r3, sl
 801d784:	b280      	uxth	r0, r0
 801d786:	fb08 f000 	mul.w	r0, r8, r0
 801d78a:	b29b      	uxth	r3, r3
 801d78c:	fb09 0303 	mla	r3, r9, r3, r0
 801d790:	980c      	ldr	r0, [sp, #48]	@ 0x30
 801d792:	f89b 4001 	ldrb.w	r4, [fp, #1]
 801d796:	940d      	str	r4, [sp, #52]	@ 0x34
 801d798:	fb0a 3300 	mla	r3, sl, r0, r3
 801d79c:	fb0c 3304 	mla	r3, ip, r4, r3
 801d7a0:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801d7a4:	2b00      	cmp	r3, #0
 801d7a6:	f000 80cc 	beq.w	801d942 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ea>
 801d7aa:	9808      	ldr	r0, [sp, #32]
 801d7ac:	9c08      	ldr	r4, [sp, #32]
 801d7ae:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
 801d7b2:	eb00 0047 	add.w	r0, r0, r7, lsl #1
 801d7b6:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
 801d7ba:	f000 80d5 	beq.w	801d968 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
 801d7be:	f427 6cfc 	bic.w	ip, r7, #2016	@ 0x7e0
 801d7c2:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 801d7c6:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 801d7ca:	fb09 f707 	mul.w	r7, r9, r7
 801d7ce:	fb0a fc0c 	mul.w	ip, sl, ip
 801d7d2:	ea06 195c 	and.w	r9, r6, ip, lsr #5
 801d7d6:	f107 0b20 	add.w	fp, r7, #32
 801d7da:	f60c 0c01 	addw	ip, ip, #2049	@ 0x801
 801d7de:	44cc      	add	ip, r9
 801d7e0:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
 801d7e4:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801d7e8:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 801d7ec:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 801d7f0:	ea4c 0909 	orr.w	r9, ip, r9
 801d7f4:	f1b8 0fff 	cmp.w	r8, #255	@ 0xff
 801d7f8:	8847      	ldrh	r7, [r0, #2]
 801d7fa:	d019      	beq.n	801d830 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5d8>
 801d7fc:	f427 6cfc 	bic.w	ip, r7, #2016	@ 0x7e0
 801d800:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 801d804:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 801d808:	fb08 f807 	mul.w	r8, r8, r7
 801d80c:	fb0a fc0c 	mul.w	ip, sl, ip
 801d810:	ea06 175c 	and.w	r7, r6, ip, lsr #5
 801d814:	f108 0b20 	add.w	fp, r8, #32
 801d818:	f60c 0c01 	addw	ip, ip, #2049	@ 0x801
 801d81c:	44bc      	add	ip, r7
 801d81e:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
 801d822:	0a3f      	lsrs	r7, r7, #8
 801d824:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 801d828:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 801d82c:	ea4c 0707 	orr.w	r7, ip, r7
 801d830:	ea4f 4c09 	mov.w	ip, r9, lsl #16
 801d834:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 801d838:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
 801d83c:	f429 69fc 	bic.w	r9, r9, #2016	@ 0x7e0
 801d840:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801d844:	f427 67fc 	bic.w	r7, r7, #2016	@ 0x7e0
 801d848:	ea4c 0909 	orr.w	r9, ip, r9
 801d84c:	ea4a 0707 	orr.w	r7, sl, r7
 801d850:	2d00      	cmp	r5, #0
 801d852:	f000 808b 	beq.w	801d96c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x714>
 801d856:	f101 4100 	add.w	r1, r1, #2147483648	@ 0x80000000
 801d85a:	3901      	subs	r1, #1
 801d85c:	0049      	lsls	r1, r1, #1
 801d85e:	3102      	adds	r1, #2
 801d860:	eb00 0c01 	add.w	ip, r0, r1
 801d864:	5a41      	ldrh	r1, [r0, r1]
 801d866:	980c      	ldr	r0, [sp, #48]	@ 0x30
 801d868:	28ff      	cmp	r0, #255	@ 0xff
 801d86a:	d019      	beq.n	801d8a0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x648>
 801d86c:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
 801d86e:	f421 60fc 	bic.w	r0, r1, #2016	@ 0x7e0
 801d872:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 801d876:	fb04 fa01 	mul.w	sl, r4, r1
 801d87a:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801d87e:	fb08 f800 	mul.w	r8, r8, r0
 801d882:	f10a 0020 	add.w	r0, sl, #32
 801d886:	ea06 1158 	and.w	r1, r6, r8, lsr #5
 801d88a:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 801d88e:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 801d892:	4441      	add	r1, r8
 801d894:	0a00      	lsrs	r0, r0, #8
 801d896:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 801d89a:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801d89e:	4301      	orrs	r1, r0
 801d8a0:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 801d8a2:	f8bc 0002 	ldrh.w	r0, [ip, #2]
 801d8a6:	2cff      	cmp	r4, #255	@ 0xff
 801d8a8:	d01a      	beq.n	801d8e0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x688>
 801d8aa:	f420 6cfc 	bic.w	ip, r0, #2016	@ 0x7e0
 801d8ae:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801d8b2:	fb04 fa00 	mul.w	sl, r4, r0
 801d8b6:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801d8ba:	fb08 f80c 	mul.w	r8, r8, ip
 801d8be:	f10a 0c20 	add.w	ip, sl, #32
 801d8c2:	ea06 1058 	and.w	r0, r6, r8, lsr #5
 801d8c6:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
 801d8ca:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 801d8ce:	4440      	add	r0, r8
 801d8d0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801d8d4:	ea06 1050 	and.w	r0, r6, r0, lsr #5
 801d8d8:	f40c 6cfc 	and.w	ip, ip, #2016	@ 0x7e0
 801d8dc:	ea40 000c 	orr.w	r0, r0, ip
 801d8e0:	fb15 fc02 	smulbb	ip, r5, r2
 801d8e4:	ea4f 0cec 	mov.w	ip, ip, asr #3
 801d8e8:	f1c5 0810 	rsb	r8, r5, #16
 801d8ec:	eba8 0802 	sub.w	r8, r8, r2
 801d8f0:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 801d8f4:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
 801d8f8:	437a      	muls	r2, r7
 801d8fa:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 801d8fe:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
 801d902:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801d906:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
 801d90a:	fb09 2208 	mla	r2, r9, r8, r2
 801d90e:	ea4a 0101 	orr.w	r1, sl, r1
 801d912:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
 801d916:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 801d91a:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 801d91e:	fb05 2201 	mla	r2, r5, r1, r2
 801d922:	ea4b 0000 	orr.w	r0, fp, r0
 801d926:	fb0c 2200 	mla	r2, ip, r0, r2
 801d92a:	0d57      	lsrs	r7, r2, #21
 801d92c:	0952      	lsrs	r2, r2, #5
 801d92e:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 801d932:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801d936:	433a      	orrs	r2, r7
 801d938:	2bff      	cmp	r3, #255	@ 0xff
 801d93a:	b292      	uxth	r2, r2
 801d93c:	d127      	bne.n	801d98e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x736>
 801d93e:	f8ae 2000 	strh.w	r2, [lr]
 801d942:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 801d944:	9a1f      	ldr	r2, [sp, #124]	@ 0x7c
 801d946:	4413      	add	r3, r2
 801d948:	931d      	str	r3, [sp, #116]	@ 0x74
 801d94a:	9a1e      	ldr	r2, [sp, #120]	@ 0x78
 801d94c:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801d94e:	441a      	add	r2, r3
 801d950:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 801d952:	921e      	str	r2, [sp, #120]	@ 0x78
 801d954:	3b01      	subs	r3, #1
 801d956:	f10e 0e02 	add.w	lr, lr, #2
 801d95a:	930f      	str	r3, [sp, #60]	@ 0x3c
 801d95c:	e627      	b.n	801d5ae <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 801d95e:	fb08 f000 	mul.w	r0, r8, r0
 801d962:	fb09 0303 	mla	r3, r9, r3, r0
 801d966:	e71b      	b.n	801d7a0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x548>
 801d968:	46b9      	mov	r9, r7
 801d96a:	e743      	b.n	801d7f4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x59c>
 801d96c:	f1c2 0110 	rsb	r1, r2, #16
 801d970:	437a      	muls	r2, r7
 801d972:	fb09 2901 	mla	r9, r9, r1, r2
 801d976:	ea4f 0949 	mov.w	r9, r9, lsl #1
 801d97a:	ea4f 5059 	mov.w	r0, r9, lsr #21
 801d97e:	ea4f 1259 	mov.w	r2, r9, lsr #5
 801d982:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801d986:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801d98a:	4302      	orrs	r2, r0
 801d98c:	e7d4      	b.n	801d938 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e0>
 801d98e:	f8be 7000 	ldrh.w	r7, [lr]
 801d992:	4c1c      	ldr	r4, [pc, #112]	@ (801da04 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7ac>)
 801d994:	43db      	mvns	r3, r3
 801d996:	1238      	asrs	r0, r7, #8
 801d998:	fa5f fc83 	uxtb.w	ip, r3
 801d99c:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 801d9a0:	10fd      	asrs	r5, r7, #3
 801d9a2:	fb00 f00c 	mul.w	r0, r0, ip
 801d9a6:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 801d9aa:	fb05 f10c 	mul.w	r1, r5, ip
 801d9ae:	1c45      	adds	r5, r0, #1
 801d9b0:	eb05 2010 	add.w	r0, r5, r0, lsr #8
 801d9b4:	1215      	asrs	r5, r2, #8
 801d9b6:	f025 0507 	bic.w	r5, r5, #7
 801d9ba:	eb05 2010 	add.w	r0, r5, r0, lsr #8
 801d9be:	1c4d      	adds	r5, r1, #1
 801d9c0:	eb05 2511 	add.w	r5, r5, r1, lsr #8
 801d9c4:	10d1      	asrs	r1, r2, #3
 801d9c6:	f021 0103 	bic.w	r1, r1, #3
 801d9ca:	00fb      	lsls	r3, r7, #3
 801d9cc:	eb01 2115 	add.w	r1, r1, r5, lsr #8
 801d9d0:	b2db      	uxtb	r3, r3
 801d9d2:	b2c0      	uxtb	r0, r0
 801d9d4:	00c9      	lsls	r1, r1, #3
 801d9d6:	fb03 f30c 	mul.w	r3, r3, ip
 801d9da:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 801d9de:	ea04 2000 	and.w	r0, r4, r0, lsl #8
 801d9e2:	4308      	orrs	r0, r1
 801d9e4:	1c59      	adds	r1, r3, #1
 801d9e6:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 801d9ea:	00d2      	lsls	r2, r2, #3
 801d9ec:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 801d9f0:	f3c3 03c4 	ubfx	r3, r3, #3, #5
 801d9f4:	4318      	orrs	r0, r3
 801d9f6:	f8ae 0000 	strh.w	r0, [lr]
 801d9fa:	e7a2      	b.n	801d942 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ea>
 801d9fc:	b013      	add	sp, #76	@ 0x4c
 801d9fe:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801da02:	bf00      	nop
 801da04:	fffff800 	.word	0xfffff800

0801da08 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>:
 801da08:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801da0c:	e9dd 4509 	ldrd	r4, r5, [sp, #36]	@ 0x24
 801da10:	fb05 4c03 	mla	ip, r5, r3, r4
 801da14:	2d00      	cmp	r5, #0
 801da16:	f9bd a020 	ldrsh.w	sl, [sp, #32]
 801da1a:	f89d 902c 	ldrb.w	r9, [sp, #44]	@ 0x2c
 801da1e:	f89d 7030 	ldrb.w	r7, [sp, #48]	@ 0x30
 801da22:	f89d 6034 	ldrb.w	r6, [sp, #52]	@ 0x34
 801da26:	8808      	ldrh	r0, [r1, #0]
 801da28:	eb02 0e4c 	add.w	lr, r2, ip, lsl #1
 801da2c:	f2c0 80a7 	blt.w	801db7e <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x176>
 801da30:	45aa      	cmp	sl, r5
 801da32:	f340 80a4 	ble.w	801db7e <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x176>
 801da36:	2c00      	cmp	r4, #0
 801da38:	f2c0 809f 	blt.w	801db7a <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x172>
 801da3c:	42a3      	cmp	r3, r4
 801da3e:	f340 809c 	ble.w	801db7a <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x172>
 801da42:	f832 801c 	ldrh.w	r8, [r2, ip, lsl #1]
 801da46:	1c62      	adds	r2, r4, #1
 801da48:	f100 809c 	bmi.w	801db84 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 801da4c:	4293      	cmp	r3, r2
 801da4e:	f340 8099 	ble.w	801db84 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 801da52:	f1b9 0f00 	cmp.w	r9, #0
 801da56:	f000 8095 	beq.w	801db84 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 801da5a:	f8be c002 	ldrh.w	ip, [lr, #2]
 801da5e:	3501      	adds	r5, #1
 801da60:	f100 8094 	bmi.w	801db8c <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 801da64:	45aa      	cmp	sl, r5
 801da66:	f340 8091 	ble.w	801db8c <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 801da6a:	2f00      	cmp	r7, #0
 801da6c:	f000 808e 	beq.w	801db8c <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 801da70:	2c00      	cmp	r4, #0
 801da72:	f2c0 8089 	blt.w	801db88 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x180>
 801da76:	42a3      	cmp	r3, r4
 801da78:	f340 8086 	ble.w	801db88 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x180>
 801da7c:	f83e 5013 	ldrh.w	r5, [lr, r3, lsl #1]
 801da80:	3401      	adds	r4, #1
 801da82:	f100 8086 	bmi.w	801db92 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 801da86:	42a3      	cmp	r3, r4
 801da88:	f340 8083 	ble.w	801db92 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 801da8c:	f1b9 0f00 	cmp.w	r9, #0
 801da90:	d07f      	beq.n	801db92 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 801da92:	3301      	adds	r3, #1
 801da94:	f83e 3013 	ldrh.w	r3, [lr, r3, lsl #1]
 801da98:	ea4f 4408 	mov.w	r4, r8, lsl #16
 801da9c:	f004 64fc 	and.w	r4, r4, #132120576	@ 0x7e00000
 801daa0:	f428 68fc 	bic.w	r8, r8, #2016	@ 0x7e0
 801daa4:	fb19 fe07 	smulbb	lr, r9, r7
 801daa8:	ea44 0808 	orr.w	r8, r4, r8
 801daac:	ea4f 440c 	mov.w	r4, ip, lsl #16
 801dab0:	f3ce 0ec7 	ubfx	lr, lr, #3, #8
 801dab4:	f1c7 0210 	rsb	r2, r7, #16
 801dab8:	f004 64fc 	and.w	r4, r4, #132120576	@ 0x7e00000
 801dabc:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
 801dac0:	ea44 0c0c 	orr.w	ip, r4, ip
 801dac4:	eba2 0209 	sub.w	r2, r2, r9
 801dac8:	ebce 0449 	rsb	r4, lr, r9, lsl #1
 801dacc:	eb0e 0242 	add.w	r2, lr, r2, lsl #1
 801dad0:	fb04 f40c 	mul.w	r4, r4, ip
 801dad4:	fb02 4808 	mla	r8, r2, r8, r4
 801dad8:	041a      	lsls	r2, r3, #16
 801dada:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
 801dade:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 801dae2:	4313      	orrs	r3, r2
 801dae4:	042a      	lsls	r2, r5, #16
 801dae6:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
 801daea:	f425 65fc 	bic.w	r5, r5, #2016	@ 0x7e0
 801daee:	fb0e 8303 	mla	r3, lr, r3, r8
 801daf2:	432a      	orrs	r2, r5
 801daf4:	ebce 0747 	rsb	r7, lr, r7, lsl #1
 801daf8:	fb07 3202 	mla	r2, r7, r2, r3
 801dafc:	0d53      	lsrs	r3, r2, #21
 801dafe:	0952      	lsrs	r2, r2, #5
 801db00:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801db04:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801db08:	431a      	orrs	r2, r3
 801db0a:	b293      	uxth	r3, r2
 801db0c:	b2b4      	uxth	r4, r6
 801db0e:	1202      	asrs	r2, r0, #8
 801db10:	43f6      	mvns	r6, r6
 801db12:	b2f6      	uxtb	r6, r6
 801db14:	121d      	asrs	r5, r3, #8
 801db16:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
 801db1a:	fb12 f206 	smulbb	r2, r2, r6
 801db1e:	10c7      	asrs	r7, r0, #3
 801db20:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 801db24:	00c0      	lsls	r0, r0, #3
 801db26:	fb05 2504 	mla	r5, r5, r4, r2
 801db2a:	b2c0      	uxtb	r0, r0
 801db2c:	10da      	asrs	r2, r3, #3
 801db2e:	00db      	lsls	r3, r3, #3
 801db30:	b2db      	uxtb	r3, r3
 801db32:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 801db36:	fb10 f006 	smulbb	r0, r0, r6
 801db3a:	b2ad      	uxth	r5, r5
 801db3c:	fb03 0004 	mla	r0, r3, r4, r0
 801db40:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 801db44:	fb17 f706 	smulbb	r7, r7, r6
 801db48:	b280      	uxth	r0, r0
 801db4a:	1c6b      	adds	r3, r5, #1
 801db4c:	fb02 7204 	mla	r2, r2, r4, r7
 801db50:	b292      	uxth	r2, r2
 801db52:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801db56:	1c43      	adds	r3, r0, #1
 801db58:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 801db5c:	1c50      	adds	r0, r2, #1
 801db5e:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 801db62:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 801db66:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801db6a:	0952      	lsrs	r2, r2, #5
 801db6c:	432b      	orrs	r3, r5
 801db6e:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801db72:	4313      	orrs	r3, r2
 801db74:	800b      	strh	r3, [r1, #0]
 801db76:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801db7a:	4680      	mov	r8, r0
 801db7c:	e763      	b.n	801da46 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x3e>
 801db7e:	4684      	mov	ip, r0
 801db80:	4680      	mov	r8, r0
 801db82:	e76c      	b.n	801da5e <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x56>
 801db84:	4684      	mov	ip, r0
 801db86:	e76a      	b.n	801da5e <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x56>
 801db88:	4605      	mov	r5, r0
 801db8a:	e779      	b.n	801da80 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x78>
 801db8c:	4603      	mov	r3, r0
 801db8e:	4605      	mov	r5, r0
 801db90:	e782      	b.n	801da98 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x90>
 801db92:	4603      	mov	r3, r0
 801db94:	e780      	b.n	801da98 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x90>

0801db96 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801db96:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801db9a:	b093      	sub	sp, #76	@ 0x4c
 801db9c:	461d      	mov	r5, r3
 801db9e:	9210      	str	r2, [sp, #64]	@ 0x40
 801dba0:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 801dba2:	f89d 2094 	ldrb.w	r2, [sp, #148]	@ 0x94
 801dba6:	920b      	str	r2, [sp, #44]	@ 0x2c
 801dba8:	e9dd 2722 	ldrd	r2, r7, [sp, #136]	@ 0x88
 801dbac:	910a      	str	r1, [sp, #40]	@ 0x28
 801dbae:	6859      	ldr	r1, [r3, #4]
 801dbb0:	681b      	ldr	r3, [r3, #0]
 801dbb2:	9011      	str	r0, [sp, #68]	@ 0x44
 801dbb4:	fb01 2707 	mla	r7, r1, r7, r2
 801dbb8:	eb03 0347 	add.w	r3, r3, r7, lsl #1
 801dbbc:	9307      	str	r3, [sp, #28]
 801dbbe:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801dbc0:	681b      	ldr	r3, [r3, #0]
 801dbc2:	9309      	str	r3, [sp, #36]	@ 0x24
 801dbc4:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801dbc6:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	@ 0x74
 801dbca:	43db      	mvns	r3, r3
 801dbcc:	b2db      	uxtb	r3, r3
 801dbce:	9308      	str	r3, [sp, #32]
 801dbd0:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801dbd2:	2b00      	cmp	r3, #0
 801dbd4:	dc03      	bgt.n	801dbde <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801dbd6:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801dbd8:	2b00      	cmp	r3, #0
 801dbda:	f340 8203 	ble.w	801dfe4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 801dbde:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801dbe0:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801dbe4:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801dbe8:	1e48      	subs	r0, r1, #1
 801dbea:	f102 3cff 	add.w	ip, r2, #4294967295
 801dbee:	2d00      	cmp	r5, #0
 801dbf0:	f340 80da 	ble.w	801dda8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x212>
 801dbf4:	ea5f 4e24 	movs.w	lr, r4, asr #16
 801dbf8:	ea4f 4326 	mov.w	r3, r6, asr #16
 801dbfc:	d406      	bmi.n	801dc0c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801dbfe:	4586      	cmp	lr, r0
 801dc00:	da04      	bge.n	801dc0c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801dc02:	2b00      	cmp	r3, #0
 801dc04:	db02      	blt.n	801dc0c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801dc06:	4563      	cmp	r3, ip
 801dc08:	f2c0 80cf 	blt.w	801ddaa <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801dc0c:	f11e 0e01 	adds.w	lr, lr, #1
 801dc10:	f100 80c1 	bmi.w	801dd96 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 801dc14:	4571      	cmp	r1, lr
 801dc16:	f2c0 80be 	blt.w	801dd96 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 801dc1a:	3301      	adds	r3, #1
 801dc1c:	f100 80bb 	bmi.w	801dd96 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 801dc20:	429a      	cmp	r2, r3
 801dc22:	f2c0 80b8 	blt.w	801dd96 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 801dc26:	f8dd 801c 	ldr.w	r8, [sp, #28]
 801dc2a:	46a9      	mov	r9, r5
 801dc2c:	f1b9 0f00 	cmp.w	r9, #0
 801dc30:	f340 80d8 	ble.w	801dde4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x24e>
 801dc34:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801dc36:	1421      	asrs	r1, r4, #16
 801dc38:	ea4f 4026 	mov.w	r0, r6, asr #16
 801dc3c:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801dc40:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 801dc44:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
 801dc48:	f100 8111 	bmi.w	801de6e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 801dc4c:	f10e 3aff 	add.w	sl, lr, #4294967295
 801dc50:	4551      	cmp	r1, sl
 801dc52:	f280 810c 	bge.w	801de6e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 801dc56:	2800      	cmp	r0, #0
 801dc58:	f2c0 8109 	blt.w	801de6e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 801dc5c:	f103 3aff 	add.w	sl, r3, #4294967295
 801dc60:	4550      	cmp	r0, sl
 801dc62:	f280 8104 	bge.w	801de6e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 801dc66:	fa0f f38e 	sxth.w	r3, lr
 801dc6a:	fb00 1103 	mla	r1, r0, r3, r1
 801dc6e:	9809      	ldr	r0, [sp, #36]	@ 0x24
 801dc70:	eb00 0a41 	add.w	sl, r0, r1, lsl #1
 801dc74:	f830 e011 	ldrh.w	lr, [r0, r1, lsl #1]
 801dc78:	f8ba 1002 	ldrh.w	r1, [sl, #2]
 801dc7c:	f1bc 0f00 	cmp.w	ip, #0
 801dc80:	d007      	beq.n	801dc92 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfc>
 801dc82:	005b      	lsls	r3, r3, #1
 801dc84:	eb0a 0003 	add.w	r0, sl, r3
 801dc88:	f83a 3003 	ldrh.w	r3, [sl, r3]
 801dc8c:	930c      	str	r3, [sp, #48]	@ 0x30
 801dc8e:	8843      	ldrh	r3, [r0, #2]
 801dc90:	930d      	str	r3, [sp, #52]	@ 0x34
 801dc92:	ea4f 400e 	mov.w	r0, lr, lsl #16
 801dc96:	fb12 f30c 	smulbb	r3, r2, ip
 801dc9a:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
 801dc9e:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 801dca2:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
 801dca6:	10db      	asrs	r3, r3, #3
 801dca8:	ea40 000e 	orr.w	r0, r0, lr
 801dcac:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801dcb0:	f1cc 0e10 	rsb	lr, ip, #16
 801dcb4:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
 801dcb8:	ebae 0e02 	sub.w	lr, lr, r2
 801dcbc:	ea4a 0101 	orr.w	r1, sl, r1
 801dcc0:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 801dcc4:	4351      	muls	r1, r2
 801dcc6:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 801dcc8:	9f08      	ldr	r7, [sp, #32]
 801dcca:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
 801dcce:	fb0e 1e00 	mla	lr, lr, r0, r1
 801dcd2:	0410      	lsls	r0, r2, #16
 801dcd4:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
 801dcd8:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801dcdc:	4310      	orrs	r0, r2
 801dcde:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 801dce0:	990c      	ldr	r1, [sp, #48]	@ 0x30
 801dce2:	0412      	lsls	r2, r2, #16
 801dce4:	fb03 e000 	mla	r0, r3, r0, lr
 801dce8:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
 801dcec:	f421 6efc 	bic.w	lr, r1, #2016	@ 0x7e0
 801dcf0:	ea42 020e 	orr.w	r2, r2, lr
 801dcf4:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 801dcf8:	fb03 0302 	mla	r3, r3, r2, r0
 801dcfc:	0d5a      	lsrs	r2, r3, #21
 801dcfe:	095b      	lsrs	r3, r3, #5
 801dd00:	f8b8 0000 	ldrh.w	r0, [r8]
 801dd04:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801dd08:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 801dd0c:	4313      	orrs	r3, r2
 801dd0e:	b29b      	uxth	r3, r3
 801dd10:	1201      	asrs	r1, r0, #8
 801dd12:	f8bd 202c 	ldrh.w	r2, [sp, #44]	@ 0x2c
 801dd16:	ea4f 2c23 	mov.w	ip, r3, asr #8
 801dd1a:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 801dd1e:	fb11 f107 	smulbb	r1, r1, r7
 801dd22:	ea4f 0ee0 	mov.w	lr, r0, asr #3
 801dd26:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 801dd2a:	00c0      	lsls	r0, r0, #3
 801dd2c:	fb0c 1c02 	mla	ip, ip, r2, r1
 801dd30:	b2c0      	uxtb	r0, r0
 801dd32:	10d9      	asrs	r1, r3, #3
 801dd34:	00db      	lsls	r3, r3, #3
 801dd36:	f00e 0efc 	and.w	lr, lr, #252	@ 0xfc
 801dd3a:	b2db      	uxtb	r3, r3
 801dd3c:	fb10 f007 	smulbb	r0, r0, r7
 801dd40:	fa1f fc8c 	uxth.w	ip, ip
 801dd44:	fb03 0302 	mla	r3, r3, r2, r0
 801dd48:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 801dd4c:	fb1e fe07 	smulbb	lr, lr, r7
 801dd50:	fb01 e102 	mla	r1, r1, r2, lr
 801dd54:	b29a      	uxth	r2, r3
 801dd56:	f10c 0301 	add.w	r3, ip, #1
 801dd5a:	b289      	uxth	r1, r1
 801dd5c:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 801dd60:	1c53      	adds	r3, r2, #1
 801dd62:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801dd66:	1c4a      	adds	r2, r1, #1
 801dd68:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801dd6c:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 801dd70:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801dd74:	0949      	lsrs	r1, r1, #5
 801dd76:	ea43 030c 	orr.w	r3, r3, ip
 801dd7a:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 801dd7e:	430b      	orrs	r3, r1
 801dd80:	f8a8 3000 	strh.w	r3, [r8]
 801dd84:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 801dd86:	441c      	add	r4, r3
 801dd88:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801dd8a:	f108 0802 	add.w	r8, r8, #2
 801dd8e:	441e      	add	r6, r3
 801dd90:	f109 39ff 	add.w	r9, r9, #4294967295
 801dd94:	e74a      	b.n	801dc2c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801dd96:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 801dd98:	441c      	add	r4, r3
 801dd9a:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801dd9c:	441e      	add	r6, r3
 801dd9e:	9b07      	ldr	r3, [sp, #28]
 801dda0:	3302      	adds	r3, #2
 801dda2:	3d01      	subs	r5, #1
 801dda4:	9307      	str	r3, [sp, #28]
 801dda6:	e722      	b.n	801dbee <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 801dda8:	d022      	beq.n	801ddf0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x25a>
 801ddaa:	981f      	ldr	r0, [sp, #124]	@ 0x7c
 801ddac:	1e6b      	subs	r3, r5, #1
 801ddae:	fb00 4003 	mla	r0, r0, r3, r4
 801ddb2:	1400      	asrs	r0, r0, #16
 801ddb4:	f53f af37 	bmi.w	801dc26 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801ddb8:	3901      	subs	r1, #1
 801ddba:	4288      	cmp	r0, r1
 801ddbc:	f6bf af33 	bge.w	801dc26 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801ddc0:	9920      	ldr	r1, [sp, #128]	@ 0x80
 801ddc2:	fb01 6303 	mla	r3, r1, r3, r6
 801ddc6:	141b      	asrs	r3, r3, #16
 801ddc8:	f53f af2d 	bmi.w	801dc26 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801ddcc:	3a01      	subs	r2, #1
 801ddce:	4293      	cmp	r3, r2
 801ddd0:	f6bf af29 	bge.w	801dc26 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801ddd4:	f8dd 901c 	ldr.w	r9, [sp, #28]
 801ddd8:	f8bd a02c 	ldrh.w	sl, [sp, #44]	@ 0x2c
 801dddc:	46a8      	mov	r8, r5
 801ddde:	f1b8 0f00 	cmp.w	r8, #0
 801dde2:	dc5e      	bgt.n	801dea2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 801dde4:	9b07      	ldr	r3, [sp, #28]
 801dde6:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 801ddea:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 801ddee:	9307      	str	r3, [sp, #28]
 801ddf0:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801ddf2:	2b00      	cmp	r3, #0
 801ddf4:	f340 80f6 	ble.w	801dfe4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 801ddf8:	ee30 0a04 	vadd.f32	s0, s0, s8
 801ddfc:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 801de00:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801de04:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801de06:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801de0a:	ee31 1a05 	vadd.f32	s2, s2, s10
 801de0e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801de12:	eef0 6a62 	vmov.f32	s13, s5
 801de16:	ee61 7a27 	vmul.f32	s15, s2, s15
 801de1a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801de1e:	ee77 2a62 	vsub.f32	s5, s14, s5
 801de22:	ee16 4a90 	vmov	r4, s13
 801de26:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801de2a:	eef0 6a43 	vmov.f32	s13, s6
 801de2e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801de32:	ee12 2a90 	vmov	r2, s5
 801de36:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801de3a:	fb92 f3f3 	sdiv	r3, r2, r3
 801de3e:	ee13 2a10 	vmov	r2, s6
 801de42:	931f      	str	r3, [sp, #124]	@ 0x7c
 801de44:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801de46:	fb92 f3f3 	sdiv	r3, r2, r3
 801de4a:	9320      	str	r3, [sp, #128]	@ 0x80
 801de4c:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801de4e:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 801de50:	3b01      	subs	r3, #1
 801de52:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801de56:	930a      	str	r3, [sp, #40]	@ 0x28
 801de58:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801de5a:	ee16 6a90 	vmov	r6, s13
 801de5e:	bf14      	ite	ne
 801de60:	461d      	movne	r5, r3
 801de62:	4615      	moveq	r5, r2
 801de64:	eeb0 3a67 	vmov.f32	s6, s15
 801de68:	eef0 2a47 	vmov.f32	s5, s14
 801de6c:	e6b0      	b.n	801dbd0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 801de6e:	f111 0a01 	adds.w	sl, r1, #1
 801de72:	d487      	bmi.n	801dd84 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 801de74:	45d6      	cmp	lr, sl
 801de76:	db85      	blt.n	801dd84 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 801de78:	f110 0a01 	adds.w	sl, r0, #1
 801de7c:	d482      	bmi.n	801dd84 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 801de7e:	4553      	cmp	r3, sl
 801de80:	db80      	blt.n	801dd84 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 801de82:	9f0b      	ldr	r7, [sp, #44]	@ 0x2c
 801de84:	9101      	str	r1, [sp, #4]
 801de86:	b21b      	sxth	r3, r3
 801de88:	e9cd 0202 	strd	r0, r2, [sp, #8]
 801de8c:	9300      	str	r3, [sp, #0]
 801de8e:	e9cd c704 	strd	ip, r7, [sp, #16]
 801de92:	fa0f f38e 	sxth.w	r3, lr
 801de96:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 801de98:	9811      	ldr	r0, [sp, #68]	@ 0x44
 801de9a:	4641      	mov	r1, r8
 801de9c:	f7ff fdb4 	bl	801da08 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>
 801dea0:	e770      	b.n	801dd84 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 801dea2:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801dea4:	9f09      	ldr	r7, [sp, #36]	@ 0x24
 801dea6:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801deaa:	1430      	asrs	r0, r6, #16
 801deac:	1423      	asrs	r3, r4, #16
 801deae:	fb01 3000 	mla	r0, r1, r0, r3
 801deb2:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801deb4:	f837 c010 	ldrh.w	ip, [r7, r0, lsl #1]
 801deb8:	eb03 0340 	add.w	r3, r3, r0, lsl #1
 801debc:	f3c6 3e03 	ubfx	lr, r6, #12, #4
 801dec0:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801dec4:	8858      	ldrh	r0, [r3, #2]
 801dec6:	f1be 0f00 	cmp.w	lr, #0
 801deca:	d00b      	beq.n	801dee4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34e>
 801decc:	f101 4100 	add.w	r1, r1, #2147483648	@ 0x80000000
 801ded0:	3901      	subs	r1, #1
 801ded2:	0049      	lsls	r1, r1, #1
 801ded4:	3102      	adds	r1, #2
 801ded6:	eb03 0b01 	add.w	fp, r3, r1
 801deda:	5a5b      	ldrh	r3, [r3, r1]
 801dedc:	930e      	str	r3, [sp, #56]	@ 0x38
 801dede:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 801dee2:	930f      	str	r3, [sp, #60]	@ 0x3c
 801dee4:	ea4f 410c 	mov.w	r1, ip, lsl #16
 801dee8:	fb12 f30e 	smulbb	r3, r2, lr
 801deec:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
 801def0:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 801def4:	f001 61fc 	and.w	r1, r1, #132120576	@ 0x7e00000
 801def8:	10db      	asrs	r3, r3, #3
 801defa:	ea41 010c 	orr.w	r1, r1, ip
 801defe:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 801df02:	f1ce 0c10 	rsb	ip, lr, #16
 801df06:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 801df0a:	ebac 0c02 	sub.w	ip, ip, r2
 801df0e:	ea4b 0000 	orr.w	r0, fp, r0
 801df12:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 801df16:	4350      	muls	r0, r2
 801df18:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 801df1a:	9f08      	ldr	r7, [sp, #32]
 801df1c:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
 801df20:	fb0c 0c01 	mla	ip, ip, r1, r0
 801df24:	ea4f 4b02 	mov.w	fp, r2, lsl #16
 801df28:	f422 61fc 	bic.w	r1, r2, #2016	@ 0x7e0
 801df2c:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 801df2e:	980e      	ldr	r0, [sp, #56]	@ 0x38
 801df30:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 801df34:	0412      	lsls	r2, r2, #16
 801df36:	ea4b 0101 	orr.w	r1, fp, r1
 801df3a:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 801df3e:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
 801df42:	fb03 c101 	mla	r1, r3, r1, ip
 801df46:	4302      	orrs	r2, r0
 801df48:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
 801df4c:	fb03 1202 	mla	r2, r3, r2, r1
 801df50:	ea4f 5b52 	mov.w	fp, r2, lsr #21
 801df54:	0952      	lsrs	r2, r2, #5
 801df56:	f422 63fc 	bic.w	r3, r2, #2016	@ 0x7e0
 801df5a:	f40b 6bfc 	and.w	fp, fp, #2016	@ 0x7e0
 801df5e:	f8b9 2000 	ldrh.w	r2, [r9]
 801df62:	ea4b 0303 	orr.w	r3, fp, r3
 801df66:	b29b      	uxth	r3, r3
 801df68:	1211      	asrs	r1, r2, #8
 801df6a:	1218      	asrs	r0, r3, #8
 801df6c:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 801df70:	fb11 f107 	smulbb	r1, r1, r7
 801df74:	ea4f 0ce2 	mov.w	ip, r2, asr #3
 801df78:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 801df7c:	00d2      	lsls	r2, r2, #3
 801df7e:	fb00 100a 	mla	r0, r0, sl, r1
 801df82:	f00c 0cfc 	and.w	ip, ip, #252	@ 0xfc
 801df86:	10d9      	asrs	r1, r3, #3
 801df88:	b2d2      	uxtb	r2, r2
 801df8a:	00db      	lsls	r3, r3, #3
 801df8c:	fb1c fc07 	smulbb	ip, ip, r7
 801df90:	fb12 f207 	smulbb	r2, r2, r7
 801df94:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 801df98:	b2db      	uxtb	r3, r3
 801df9a:	b280      	uxth	r0, r0
 801df9c:	fb01 c10a 	mla	r1, r1, sl, ip
 801dfa0:	fb03 230a 	mla	r3, r3, sl, r2
 801dfa4:	b29b      	uxth	r3, r3
 801dfa6:	b289      	uxth	r1, r1
 801dfa8:	1c42      	adds	r2, r0, #1
 801dfaa:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801dfae:	f101 0c01 	add.w	ip, r1, #1
 801dfb2:	1c5a      	adds	r2, r3, #1
 801dfb4:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 801dfb8:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
 801dfbc:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 801dfbe:	f400 4078 	and.w	r0, r0, #63488	@ 0xf800
 801dfc2:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801dfc6:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 801dfca:	4310      	orrs	r0, r2
 801dfcc:	f40c 6cfc 	and.w	ip, ip, #2016	@ 0x7e0
 801dfd0:	441c      	add	r4, r3
 801dfd2:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801dfd4:	ea40 000c 	orr.w	r0, r0, ip
 801dfd8:	f829 0b02 	strh.w	r0, [r9], #2
 801dfdc:	441e      	add	r6, r3
 801dfde:	f108 38ff 	add.w	r8, r8, #4294967295
 801dfe2:	e6fc      	b.n	801ddde <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x248>
 801dfe4:	b013      	add	sp, #76	@ 0x4c
 801dfe6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801dfea <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>:
 801dfea:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 801dfee:	e9dd 4e08 	ldrd	r4, lr, [sp, #32]
 801dff2:	fb0e 4703 	mla	r7, lr, r3, r4
 801dff6:	f1be 0f00 	cmp.w	lr, #0
 801dffa:	f9bd 901c 	ldrsh.w	r9, [sp, #28]
 801dffe:	f89d 5028 	ldrb.w	r5, [sp, #40]	@ 0x28
 801e002:	f89d 602c 	ldrb.w	r6, [sp, #44]	@ 0x2c
 801e006:	8808      	ldrh	r0, [r1, #0]
 801e008:	eb02 0847 	add.w	r8, r2, r7, lsl #1
 801e00c:	db60      	blt.n	801e0d0 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe6>
 801e00e:	45f1      	cmp	r9, lr
 801e010:	dd5e      	ble.n	801e0d0 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe6>
 801e012:	2c00      	cmp	r4, #0
 801e014:	db5a      	blt.n	801e0cc <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe2>
 801e016:	42a3      	cmp	r3, r4
 801e018:	dd58      	ble.n	801e0cc <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe2>
 801e01a:	f832 c017 	ldrh.w	ip, [r2, r7, lsl #1]
 801e01e:	1c62      	adds	r2, r4, #1
 801e020:	d459      	bmi.n	801e0d6 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 801e022:	4293      	cmp	r3, r2
 801e024:	dd57      	ble.n	801e0d6 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 801e026:	2d00      	cmp	r5, #0
 801e028:	d055      	beq.n	801e0d6 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 801e02a:	f8b8 7002 	ldrh.w	r7, [r8, #2]
 801e02e:	f11e 0e01 	adds.w	lr, lr, #1
 801e032:	d454      	bmi.n	801e0de <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 801e034:	45f1      	cmp	r9, lr
 801e036:	dd52      	ble.n	801e0de <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 801e038:	2e00      	cmp	r6, #0
 801e03a:	d050      	beq.n	801e0de <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 801e03c:	2c00      	cmp	r4, #0
 801e03e:	db4c      	blt.n	801e0da <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf0>
 801e040:	42a3      	cmp	r3, r4
 801e042:	dd4a      	ble.n	801e0da <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf0>
 801e044:	f838 2013 	ldrh.w	r2, [r8, r3, lsl #1]
 801e048:	3401      	adds	r4, #1
 801e04a:	d405      	bmi.n	801e058 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 801e04c:	42a3      	cmp	r3, r4
 801e04e:	dd03      	ble.n	801e058 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 801e050:	b115      	cbz	r5, 801e058 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 801e052:	3301      	adds	r3, #1
 801e054:	f838 0013 	ldrh.w	r0, [r8, r3, lsl #1]
 801e058:	ea4f 430c 	mov.w	r3, ip, lsl #16
 801e05c:	fb15 f406 	smulbb	r4, r5, r6
 801e060:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 801e064:	ea4f 4e07 	mov.w	lr, r7, lsl #16
 801e068:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
 801e06c:	f3c4 04c7 	ubfx	r4, r4, #3, #8
 801e070:	ea43 0c0c 	orr.w	ip, r3, ip
 801e074:	f00e 6efc 	and.w	lr, lr, #132120576	@ 0x7e00000
 801e078:	f1c6 0310 	rsb	r3, r6, #16
 801e07c:	f427 67fc 	bic.w	r7, r7, #2016	@ 0x7e0
 801e080:	1b5b      	subs	r3, r3, r5
 801e082:	ea4e 0707 	orr.w	r7, lr, r7
 801e086:	ebc4 0545 	rsb	r5, r4, r5, lsl #1
 801e08a:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 801e08e:	437d      	muls	r5, r7
 801e090:	fb03 5c0c 	mla	ip, r3, ip, r5
 801e094:	0403      	lsls	r3, r0, #16
 801e096:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 801e09a:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 801e09e:	4318      	orrs	r0, r3
 801e0a0:	0413      	lsls	r3, r2, #16
 801e0a2:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 801e0a6:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801e0aa:	4313      	orrs	r3, r2
 801e0ac:	fb04 c000 	mla	r0, r4, r0, ip
 801e0b0:	ebc4 0646 	rsb	r6, r4, r6, lsl #1
 801e0b4:	fb06 0003 	mla	r0, r6, r3, r0
 801e0b8:	0d43      	lsrs	r3, r0, #21
 801e0ba:	0940      	lsrs	r0, r0, #5
 801e0bc:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801e0c0:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 801e0c4:	4318      	orrs	r0, r3
 801e0c6:	8008      	strh	r0, [r1, #0]
 801e0c8:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801e0cc:	4684      	mov	ip, r0
 801e0ce:	e7a6      	b.n	801e01e <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x34>
 801e0d0:	4607      	mov	r7, r0
 801e0d2:	4684      	mov	ip, r0
 801e0d4:	e7ab      	b.n	801e02e <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x44>
 801e0d6:	4607      	mov	r7, r0
 801e0d8:	e7a9      	b.n	801e02e <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x44>
 801e0da:	4602      	mov	r2, r0
 801e0dc:	e7b4      	b.n	801e048 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x5e>
 801e0de:	4602      	mov	r2, r0
 801e0e0:	e7ba      	b.n	801e058 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>

0801e0e2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801e0e2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801e0e6:	b08f      	sub	sp, #60	@ 0x3c
 801e0e8:	461d      	mov	r5, r3
 801e0ea:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 801e0ec:	920c      	str	r2, [sp, #48]	@ 0x30
 801e0ee:	e9dd 271e 	ldrd	r2, r7, [sp, #120]	@ 0x78
 801e0f2:	9107      	str	r1, [sp, #28]
 801e0f4:	6859      	ldr	r1, [r3, #4]
 801e0f6:	681b      	ldr	r3, [r3, #0]
 801e0f8:	900d      	str	r0, [sp, #52]	@ 0x34
 801e0fa:	fb01 2707 	mla	r7, r1, r7, r2
 801e0fe:	eb03 0747 	add.w	r7, r3, r7, lsl #1
 801e102:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801e104:	e9dd 4619 	ldrd	r4, r6, [sp, #100]	@ 0x64
 801e108:	f8d3 8000 	ldr.w	r8, [r3]
 801e10c:	9b07      	ldr	r3, [sp, #28]
 801e10e:	2b00      	cmp	r3, #0
 801e110:	dc03      	bgt.n	801e11a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 801e112:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801e114:	2b00      	cmp	r3, #0
 801e116:	f340 8181 	ble.w	801e41c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33a>
 801e11a:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801e11c:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801e120:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801e124:	1e48      	subs	r0, r1, #1
 801e126:	f102 3cff 	add.w	ip, r2, #4294967295
 801e12a:	2d00      	cmp	r5, #0
 801e12c:	f340 809b 	ble.w	801e266 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x184>
 801e130:	ea5f 4e24 	movs.w	lr, r4, asr #16
 801e134:	ea4f 4326 	mov.w	r3, r6, asr #16
 801e138:	d406      	bmi.n	801e148 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801e13a:	4586      	cmp	lr, r0
 801e13c:	da04      	bge.n	801e148 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801e13e:	2b00      	cmp	r3, #0
 801e140:	db02      	blt.n	801e148 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801e142:	4563      	cmp	r3, ip
 801e144:	f2c0 8090 	blt.w	801e268 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801e148:	f11e 0e01 	adds.w	lr, lr, #1
 801e14c:	f100 8084 	bmi.w	801e258 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 801e150:	4571      	cmp	r1, lr
 801e152:	f2c0 8081 	blt.w	801e258 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 801e156:	3301      	adds	r3, #1
 801e158:	d47e      	bmi.n	801e258 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 801e15a:	429a      	cmp	r2, r3
 801e15c:	db7c      	blt.n	801e258 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 801e15e:	46aa      	mov	sl, r5
 801e160:	46b9      	mov	r9, r7
 801e162:	f1ba 0f00 	cmp.w	sl, #0
 801e166:	f340 8099 	ble.w	801e29c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ba>
 801e16a:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801e16c:	1421      	asrs	r1, r4, #16
 801e16e:	ea4f 4026 	mov.w	r0, r6, asr #16
 801e172:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801e176:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 801e17a:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
 801e17e:	f100 80d0 	bmi.w	801e322 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 801e182:	f10e 3bff 	add.w	fp, lr, #4294967295
 801e186:	4559      	cmp	r1, fp
 801e188:	f280 80cb 	bge.w	801e322 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 801e18c:	2800      	cmp	r0, #0
 801e18e:	f2c0 80c8 	blt.w	801e322 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 801e192:	f103 3bff 	add.w	fp, r3, #4294967295
 801e196:	4558      	cmp	r0, fp
 801e198:	f280 80c3 	bge.w	801e322 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 801e19c:	fa0f fe8e 	sxth.w	lr, lr
 801e1a0:	fb00 110e 	mla	r1, r0, lr, r1
 801e1a4:	eb08 0041 	add.w	r0, r8, r1, lsl #1
 801e1a8:	f838 b011 	ldrh.w	fp, [r8, r1, lsl #1]
 801e1ac:	8841      	ldrh	r1, [r0, #2]
 801e1ae:	f1bc 0f00 	cmp.w	ip, #0
 801e1b2:	d00b      	beq.n	801e1cc <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xea>
 801e1b4:	f10e 4300 	add.w	r3, lr, #2147483648	@ 0x80000000
 801e1b8:	3b01      	subs	r3, #1
 801e1ba:	005b      	lsls	r3, r3, #1
 801e1bc:	3302      	adds	r3, #2
 801e1be:	eb00 0e03 	add.w	lr, r0, r3
 801e1c2:	5ac3      	ldrh	r3, [r0, r3]
 801e1c4:	9308      	str	r3, [sp, #32]
 801e1c6:	f8be 3002 	ldrh.w	r3, [lr, #2]
 801e1ca:	9309      	str	r3, [sp, #36]	@ 0x24
 801e1cc:	ea4f 400b 	mov.w	r0, fp, lsl #16
 801e1d0:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
 801e1d4:	f42b 6bfc 	bic.w	fp, fp, #2016	@ 0x7e0
 801e1d8:	ea40 000b 	orr.w	r0, r0, fp
 801e1dc:	fb12 f30c 	smulbb	r3, r2, ip
 801e1e0:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 801e1e4:	10db      	asrs	r3, r3, #3
 801e1e6:	f1cc 0e10 	rsb	lr, ip, #16
 801e1ea:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 801e1ee:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
 801e1f2:	ebae 0e02 	sub.w	lr, lr, r2
 801e1f6:	ea4b 0101 	orr.w	r1, fp, r1
 801e1fa:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 801e1fe:	4351      	muls	r1, r2
 801e200:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 801e202:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
 801e206:	fb0e 1e00 	mla	lr, lr, r0, r1
 801e20a:	0410      	lsls	r0, r2, #16
 801e20c:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
 801e210:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801e214:	4310      	orrs	r0, r2
 801e216:	9a08      	ldr	r2, [sp, #32]
 801e218:	9908      	ldr	r1, [sp, #32]
 801e21a:	0412      	lsls	r2, r2, #16
 801e21c:	fb03 e000 	mla	r0, r3, r0, lr
 801e220:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
 801e224:	f421 6efc 	bic.w	lr, r1, #2016	@ 0x7e0
 801e228:	ea42 020e 	orr.w	r2, r2, lr
 801e22c:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 801e230:	fb03 0302 	mla	r3, r3, r2, r0
 801e234:	0d5a      	lsrs	r2, r3, #21
 801e236:	095b      	lsrs	r3, r3, #5
 801e238:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801e23c:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 801e240:	4313      	orrs	r3, r2
 801e242:	f8a9 3000 	strh.w	r3, [r9]
 801e246:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
 801e248:	441c      	add	r4, r3
 801e24a:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801e24c:	f109 0902 	add.w	r9, r9, #2
 801e250:	441e      	add	r6, r3
 801e252:	f10a 3aff 	add.w	sl, sl, #4294967295
 801e256:	e784      	b.n	801e162 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 801e258:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
 801e25a:	441c      	add	r4, r3
 801e25c:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801e25e:	3d01      	subs	r5, #1
 801e260:	441e      	add	r6, r3
 801e262:	3702      	adds	r7, #2
 801e264:	e761      	b.n	801e12a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801e266:	d01d      	beq.n	801e2a4 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
 801e268:	981b      	ldr	r0, [sp, #108]	@ 0x6c
 801e26a:	1e6b      	subs	r3, r5, #1
 801e26c:	fb00 4003 	mla	r0, r0, r3, r4
 801e270:	1400      	asrs	r0, r0, #16
 801e272:	f53f af74 	bmi.w	801e15e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801e276:	3901      	subs	r1, #1
 801e278:	4288      	cmp	r0, r1
 801e27a:	f6bf af70 	bge.w	801e15e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801e27e:	991c      	ldr	r1, [sp, #112]	@ 0x70
 801e280:	fb01 6303 	mla	r3, r1, r3, r6
 801e284:	141b      	asrs	r3, r3, #16
 801e286:	f53f af6a 	bmi.w	801e15e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801e28a:	3a01      	subs	r2, #1
 801e28c:	4293      	cmp	r3, r2
 801e28e:	f6bf af66 	bge.w	801e15e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801e292:	46a9      	mov	r9, r5
 801e294:	46ba      	mov	sl, r7
 801e296:	f1b9 0f00 	cmp.w	r9, #0
 801e29a:	dc5a      	bgt.n	801e352 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x270>
 801e29c:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 801e2a0:	eb07 0745 	add.w	r7, r7, r5, lsl #1
 801e2a4:	9b07      	ldr	r3, [sp, #28]
 801e2a6:	2b00      	cmp	r3, #0
 801e2a8:	f340 80b8 	ble.w	801e41c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33a>
 801e2ac:	ee30 0a04 	vadd.f32	s0, s0, s8
 801e2b0:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 801e2b4:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801e2b8:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 801e2ba:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801e2be:	ee31 1a05 	vadd.f32	s2, s2, s10
 801e2c2:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801e2c6:	eef0 6a62 	vmov.f32	s13, s5
 801e2ca:	ee61 7a27 	vmul.f32	s15, s2, s15
 801e2ce:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801e2d2:	ee77 2a62 	vsub.f32	s5, s14, s5
 801e2d6:	ee16 4a90 	vmov	r4, s13
 801e2da:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801e2de:	eef0 6a43 	vmov.f32	s13, s6
 801e2e2:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801e2e6:	ee12 2a90 	vmov	r2, s5
 801e2ea:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801e2ee:	fb92 f3f3 	sdiv	r3, r2, r3
 801e2f2:	ee13 2a10 	vmov	r2, s6
 801e2f6:	931b      	str	r3, [sp, #108]	@ 0x6c
 801e2f8:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 801e2fa:	fb92 f3f3 	sdiv	r3, r2, r3
 801e2fe:	931c      	str	r3, [sp, #112]	@ 0x70
 801e300:	9b07      	ldr	r3, [sp, #28]
 801e302:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 801e304:	3b01      	subs	r3, #1
 801e306:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801e30a:	9307      	str	r3, [sp, #28]
 801e30c:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 801e30e:	ee16 6a90 	vmov	r6, s13
 801e312:	bf14      	ite	ne
 801e314:	461d      	movne	r5, r3
 801e316:	4615      	moveq	r5, r2
 801e318:	eeb0 3a67 	vmov.f32	s6, s15
 801e31c:	eef0 2a47 	vmov.f32	s5, s14
 801e320:	e6f4      	b.n	801e10c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 801e322:	f111 0b01 	adds.w	fp, r1, #1
 801e326:	d48e      	bmi.n	801e246 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801e328:	45de      	cmp	lr, fp
 801e32a:	db8c      	blt.n	801e246 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801e32c:	f110 0b01 	adds.w	fp, r0, #1
 801e330:	d489      	bmi.n	801e246 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801e332:	455b      	cmp	r3, fp
 801e334:	db87      	blt.n	801e246 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801e336:	b21b      	sxth	r3, r3
 801e338:	e9cd 1001 	strd	r1, r0, [sp, #4]
 801e33c:	e9cd 2c03 	strd	r2, ip, [sp, #12]
 801e340:	9300      	str	r3, [sp, #0]
 801e342:	4642      	mov	r2, r8
 801e344:	fa0f f38e 	sxth.w	r3, lr
 801e348:	4649      	mov	r1, r9
 801e34a:	980d      	ldr	r0, [sp, #52]	@ 0x34
 801e34c:	f7ff fe4d 	bl	801dfea <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>
 801e350:	e779      	b.n	801e246 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801e352:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801e354:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 801e358:	1420      	asrs	r0, r4, #16
 801e35a:	1431      	asrs	r1, r6, #16
 801e35c:	fb03 0101 	mla	r1, r3, r1, r0
 801e360:	eb08 0041 	add.w	r0, r8, r1, lsl #1
 801e364:	f3c6 3e03 	ubfx	lr, r6, #12, #4
 801e368:	f838 c011 	ldrh.w	ip, [r8, r1, lsl #1]
 801e36c:	8841      	ldrh	r1, [r0, #2]
 801e36e:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801e372:	f1be 0f00 	cmp.w	lr, #0
 801e376:	d00b      	beq.n	801e390 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ae>
 801e378:	f103 4300 	add.w	r3, r3, #2147483648	@ 0x80000000
 801e37c:	3b01      	subs	r3, #1
 801e37e:	005b      	lsls	r3, r3, #1
 801e380:	3302      	adds	r3, #2
 801e382:	eb00 0b03 	add.w	fp, r0, r3
 801e386:	5ac3      	ldrh	r3, [r0, r3]
 801e388:	930a      	str	r3, [sp, #40]	@ 0x28
 801e38a:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 801e38e:	930b      	str	r3, [sp, #44]	@ 0x2c
 801e390:	ea4f 400c 	mov.w	r0, ip, lsl #16
 801e394:	fb12 f30e 	smulbb	r3, r2, lr
 801e398:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
 801e39c:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 801e3a0:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
 801e3a4:	10db      	asrs	r3, r3, #3
 801e3a6:	ea40 000c 	orr.w	r0, r0, ip
 801e3aa:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 801e3ae:	f1ce 0c10 	rsb	ip, lr, #16
 801e3b2:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
 801e3b6:	ebac 0c02 	sub.w	ip, ip, r2
 801e3ba:	ea4b 0101 	orr.w	r1, fp, r1
 801e3be:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 801e3c2:	4351      	muls	r1, r2
 801e3c4:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 801e3c6:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
 801e3ca:	fb0c 1c00 	mla	ip, ip, r0, r1
 801e3ce:	ea4f 4b02 	mov.w	fp, r2, lsl #16
 801e3d2:	f422 60fc 	bic.w	r0, r2, #2016	@ 0x7e0
 801e3d6:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 801e3d8:	990a      	ldr	r1, [sp, #40]	@ 0x28
 801e3da:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 801e3de:	0412      	lsls	r2, r2, #16
 801e3e0:	ea4b 0000 	orr.w	r0, fp, r0
 801e3e4:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
 801e3e8:	f421 6bfc 	bic.w	fp, r1, #2016	@ 0x7e0
 801e3ec:	fb03 c000 	mla	r0, r3, r0, ip
 801e3f0:	ea42 0b0b 	orr.w	fp, r2, fp
 801e3f4:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
 801e3f8:	fb03 000b 	mla	r0, r3, fp, r0
 801e3fc:	0d43      	lsrs	r3, r0, #21
 801e3fe:	0940      	lsrs	r0, r0, #5
 801e400:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801e404:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 801e408:	4318      	orrs	r0, r3
 801e40a:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
 801e40c:	f82a 0b02 	strh.w	r0, [sl], #2
 801e410:	441c      	add	r4, r3
 801e412:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801e414:	f109 39ff 	add.w	r9, r9, #4294967295
 801e418:	441e      	add	r6, r3
 801e41a:	e73c      	b.n	801e296 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b4>
 801e41c:	b00f      	add	sp, #60	@ 0x3c
 801e41e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801e422 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>:
 801e422:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801e426:	b085      	sub	sp, #20
 801e428:	e9dd 740f 	ldrd	r7, r4, [sp, #60]	@ 0x3c
 801e42c:	9102      	str	r1, [sp, #8]
 801e42e:	2c00      	cmp	r4, #0
 801e430:	fb04 7103 	mla	r1, r4, r3, r7
 801e434:	f9bd e038 	ldrsh.w	lr, [sp, #56]	@ 0x38
 801e438:	f89d 6044 	ldrb.w	r6, [sp, #68]	@ 0x44
 801e43c:	f89d 0048 	ldrb.w	r0, [sp, #72]	@ 0x48
 801e440:	eb02 0c81 	add.w	ip, r2, r1, lsl #2
 801e444:	f2c0 811b 	blt.w	801e67e <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x25c>
 801e448:	45a6      	cmp	lr, r4
 801e44a:	f340 8118 	ble.w	801e67e <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x25c>
 801e44e:	2f00      	cmp	r7, #0
 801e450:	f2c0 8113 	blt.w	801e67a <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x258>
 801e454:	42bb      	cmp	r3, r7
 801e456:	f340 8110 	ble.w	801e67a <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x258>
 801e45a:	f852 5021 	ldr.w	r5, [r2, r1, lsl #2]
 801e45e:	1c7a      	adds	r2, r7, #1
 801e460:	f100 8110 	bmi.w	801e684 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x262>
 801e464:	4293      	cmp	r3, r2
 801e466:	f340 810d 	ble.w	801e684 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x262>
 801e46a:	2e00      	cmp	r6, #0
 801e46c:	f000 810c 	beq.w	801e688 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x266>
 801e470:	f8dc 1004 	ldr.w	r1, [ip, #4]
 801e474:	3401      	adds	r4, #1
 801e476:	f100 810b 	bmi.w	801e690 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26e>
 801e47a:	45a6      	cmp	lr, r4
 801e47c:	f340 8108 	ble.w	801e690 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26e>
 801e480:	2800      	cmp	r0, #0
 801e482:	f000 8108 	beq.w	801e696 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x274>
 801e486:	2f00      	cmp	r7, #0
 801e488:	f2c0 8100 	blt.w	801e68c <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26a>
 801e48c:	42bb      	cmp	r3, r7
 801e48e:	f340 80fd 	ble.w	801e68c <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26a>
 801e492:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
 801e496:	3701      	adds	r7, #1
 801e498:	f100 8100 	bmi.w	801e69c <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27a>
 801e49c:	42bb      	cmp	r3, r7
 801e49e:	f340 80fd 	ble.w	801e69c <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27a>
 801e4a2:	2e00      	cmp	r6, #0
 801e4a4:	f000 80fc 	beq.w	801e6a0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27e>
 801e4a8:	3301      	adds	r3, #1
 801e4aa:	f85c 2023 	ldr.w	r2, [ip, r3, lsl #2]
 801e4ae:	b2b6      	uxth	r6, r6
 801e4b0:	b280      	uxth	r0, r0
 801e4b2:	fb00 fe06 	mul.w	lr, r0, r6
 801e4b6:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 801e4ba:	0136      	lsls	r6, r6, #4
 801e4bc:	eba6 070e 	sub.w	r7, r6, lr
 801e4c0:	b280      	uxth	r0, r0
 801e4c2:	f5c6 7380 	rsb	r3, r6, #256	@ 0x100
 801e4c6:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 801e4ca:	b2bf      	uxth	r7, r7
 801e4cc:	1a1b      	subs	r3, r3, r0
 801e4ce:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 801e4d2:	b29b      	uxth	r3, r3
 801e4d4:	fb0a f607 	mul.w	r6, sl, r7
 801e4d8:	ea4f 6914 	mov.w	r9, r4, lsr #24
 801e4dc:	fb0b 6603 	mla	r6, fp, r3, r6
 801e4e0:	ea4f 6812 	mov.w	r8, r2, lsr #24
 801e4e4:	fb00 6609 	mla	r6, r0, r9, r6
 801e4e8:	fb0e 6608 	mla	r6, lr, r8, r6
 801e4ec:	f3c6 2607 	ubfx	r6, r6, #8, #8
 801e4f0:	9600      	str	r6, [sp, #0]
 801e4f2:	2e00      	cmp	r6, #0
 801e4f4:	f000 80be 	beq.w	801e674 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x252>
 801e4f8:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 801e4fc:	fb0b fc0c 	mul.w	ip, fp, ip
 801e500:	f405 457f 	and.w	r5, r5, #65280	@ 0xff00
 801e504:	fb0b f505 	mul.w	r5, fp, r5
 801e508:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 801e50c:	f00b 1bff 	and.w	fp, fp, #16711935	@ 0xff00ff
 801e510:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 801e514:	44dc      	add	ip, fp
 801e516:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801e51a:	9501      	str	r5, [sp, #4]
 801e51c:	f00c 15ff 	and.w	r5, ip, #16711935	@ 0xff00ff
 801e520:	9503      	str	r5, [sp, #12]
 801e522:	9d01      	ldr	r5, [sp, #4]
 801e524:	9e02      	ldr	r6, [sp, #8]
 801e526:	f505 7c80 	add.w	ip, r5, #256	@ 0x100
 801e52a:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 801e52e:	f001 1cff 	and.w	ip, r1, #16711935	@ 0xff00ff
 801e532:	fb0a fc0c 	mul.w	ip, sl, ip
 801e536:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 801e53a:	ea4f 251c 	mov.w	r5, ip, lsr #8
 801e53e:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 801e542:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 801e546:	4465      	add	r5, ip
 801e548:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 801e54c:	f404 447f 	and.w	r4, r4, #65280	@ 0xff00
 801e550:	fb09 fc0c 	mul.w	ip, r9, ip
 801e554:	fb09 f904 	mul.w	r9, r9, r4
 801e558:	f509 7480 	add.w	r4, r9, #256	@ 0x100
 801e55c:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 801e560:	f002 14ff 	and.w	r4, r2, #16711935	@ 0xff00ff
 801e564:	fb08 f404 	mul.w	r4, r8, r4
 801e568:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 801e56c:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
 801e570:	fb08 f802 	mul.w	r8, r8, r2
 801e574:	fb0a fa01 	mul.w	sl, sl, r1
 801e578:	0a22      	lsrs	r2, r4, #8
 801e57a:	f50a 7180 	add.w	r1, sl, #256	@ 0x100
 801e57e:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 801e582:	f104 1401 	add.w	r4, r4, #65537	@ 0x10001
 801e586:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 801e58a:	4414      	add	r4, r2
 801e58c:	ea4f 211c 	mov.w	r1, ip, lsr #8
 801e590:	f508 7280 	add.w	r2, r8, #256	@ 0x100
 801e594:	0a2d      	lsrs	r5, r5, #8
 801e596:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 801e59a:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 801e59e:	9a03      	ldr	r2, [sp, #12]
 801e5a0:	8836      	ldrh	r6, [r6, #0]
 801e5a2:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 801e5a6:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 801e5aa:	437d      	muls	r5, r7
 801e5ac:	4461      	add	r1, ip
 801e5ae:	0a24      	lsrs	r4, r4, #8
 801e5b0:	fb02 5503 	mla	r5, r2, r3, r5
 801e5b4:	0a09      	lsrs	r1, r1, #8
 801e5b6:	f004 14ff 	and.w	r4, r4, #16711935	@ 0xff00ff
 801e5ba:	fb04 540e 	mla	r4, r4, lr, r5
 801e5be:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 801e5c2:	fb01 4100 	mla	r1, r1, r0, r4
 801e5c6:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801e5ca:	0a09      	lsrs	r1, r1, #8
 801e5cc:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801e5d0:	f001 14ff 	and.w	r4, r1, #16711935	@ 0xff00ff
 801e5d4:	fb07 f70a 	mul.w	r7, r7, sl
 801e5d8:	ea4f 2818 	mov.w	r8, r8, lsr #8
 801e5dc:	f40b 417f 	and.w	r1, fp, #65280	@ 0xff00
 801e5e0:	fb03 7101 	mla	r1, r3, r1, r7
 801e5e4:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801e5e8:	f408 487f 	and.w	r8, r8, #65280	@ 0xff00
 801e5ec:	fb0e 1e08 	mla	lr, lr, r8, r1
 801e5f0:	f409 417f 	and.w	r1, r9, #65280	@ 0xff00
 801e5f4:	fb00 e101 	mla	r1, r0, r1, lr
 801e5f8:	f89d 004c 	ldrb.w	r0, [sp, #76]	@ 0x4c
 801e5fc:	9a00      	ldr	r2, [sp, #0]
 801e5fe:	b287      	uxth	r7, r0
 801e600:	437a      	muls	r2, r7
 801e602:	0a09      	lsrs	r1, r1, #8
 801e604:	1c53      	adds	r3, r2, #1
 801e606:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 801e60a:	4321      	orrs	r1, r4
 801e60c:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801e610:	1235      	asrs	r5, r6, #8
 801e612:	0c0a      	lsrs	r2, r1, #16
 801e614:	ea6f 2313 	mvn.w	r3, r3, lsr #8
 801e618:	b2db      	uxtb	r3, r3
 801e61a:	fb12 f207 	smulbb	r2, r2, r7
 801e61e:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 801e622:	fb05 2503 	mla	r5, r5, r3, r2
 801e626:	f3c1 2407 	ubfx	r4, r1, #8, #8
 801e62a:	10f2      	asrs	r2, r6, #3
 801e62c:	b2c8      	uxtb	r0, r1
 801e62e:	00f6      	lsls	r6, r6, #3
 801e630:	fb14 f407 	smulbb	r4, r4, r7
 801e634:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 801e638:	b2f6      	uxtb	r6, r6
 801e63a:	fb10 f007 	smulbb	r0, r0, r7
 801e63e:	fb02 4203 	mla	r2, r2, r3, r4
 801e642:	b2ad      	uxth	r5, r5
 801e644:	fb06 0303 	mla	r3, r6, r3, r0
 801e648:	b299      	uxth	r1, r3
 801e64a:	b294      	uxth	r4, r2
 801e64c:	1c6b      	adds	r3, r5, #1
 801e64e:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801e652:	1c62      	adds	r2, r4, #1
 801e654:	1c4b      	adds	r3, r1, #1
 801e656:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 801e65a:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 801e65e:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 801e662:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801e666:	0952      	lsrs	r2, r2, #5
 801e668:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801e66c:	432b      	orrs	r3, r5
 801e66e:	4313      	orrs	r3, r2
 801e670:	9a02      	ldr	r2, [sp, #8]
 801e672:	8013      	strh	r3, [r2, #0]
 801e674:	b005      	add	sp, #20
 801e676:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801e67a:	2500      	movs	r5, #0
 801e67c:	e6ef      	b.n	801e45e <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x3c>
 801e67e:	2100      	movs	r1, #0
 801e680:	460d      	mov	r5, r1
 801e682:	e6f7      	b.n	801e474 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 801e684:	2100      	movs	r1, #0
 801e686:	e6f5      	b.n	801e474 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 801e688:	4631      	mov	r1, r6
 801e68a:	e6f3      	b.n	801e474 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 801e68c:	2400      	movs	r4, #0
 801e68e:	e702      	b.n	801e496 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x74>
 801e690:	2200      	movs	r2, #0
 801e692:	4614      	mov	r4, r2
 801e694:	e70b      	b.n	801e4ae <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 801e696:	4602      	mov	r2, r0
 801e698:	4604      	mov	r4, r0
 801e69a:	e708      	b.n	801e4ae <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 801e69c:	2200      	movs	r2, #0
 801e69e:	e706      	b.n	801e4ae <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 801e6a0:	4632      	mov	r2, r6
 801e6a2:	e704      	b.n	801e4ae <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>

0801e6a4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801e6a4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801e6a8:	b09d      	sub	sp, #116	@ 0x74
 801e6aa:	e9dd 4627 	ldrd	r4, r6, [sp, #156]	@ 0x9c
 801e6ae:	9219      	str	r2, [sp, #100]	@ 0x64
 801e6b0:	9307      	str	r3, [sp, #28]
 801e6b2:	9a2b      	ldr	r2, [sp, #172]	@ 0xac
 801e6b4:	f89d 30bc 	ldrb.w	r3, [sp, #188]	@ 0xbc
 801e6b8:	931a      	str	r3, [sp, #104]	@ 0x68
 801e6ba:	9117      	str	r1, [sp, #92]	@ 0x5c
 801e6bc:	e9dd 132c 	ldrd	r1, r3, [sp, #176]	@ 0xb0
 801e6c0:	901b      	str	r0, [sp, #108]	@ 0x6c
 801e6c2:	6850      	ldr	r0, [r2, #4]
 801e6c4:	6812      	ldr	r2, [r2, #0]
 801e6c6:	fb00 1303 	mla	r3, r0, r3, r1
 801e6ca:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801e6ce:	930a      	str	r3, [sp, #40]	@ 0x28
 801e6d0:	9b2e      	ldr	r3, [sp, #184]	@ 0xb8
 801e6d2:	681b      	ldr	r3, [r3, #0]
 801e6d4:	9310      	str	r3, [sp, #64]	@ 0x40
 801e6d6:	f8bd 3068 	ldrh.w	r3, [sp, #104]	@ 0x68
 801e6da:	930b      	str	r3, [sp, #44]	@ 0x2c
 801e6dc:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 801e6de:	2b00      	cmp	r3, #0
 801e6e0:	dc03      	bgt.n	801e6ea <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46>
 801e6e2:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 801e6e4:	2b00      	cmp	r3, #0
 801e6e6:	f340 8375 	ble.w	801edd4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 801e6ea:	9b2e      	ldr	r3, [sp, #184]	@ 0xb8
 801e6ec:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801e6f0:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801e6f4:	1e48      	subs	r0, r1, #1
 801e6f6:	1e57      	subs	r7, r2, #1
 801e6f8:	9b07      	ldr	r3, [sp, #28]
 801e6fa:	2b00      	cmp	r3, #0
 801e6fc:	f340 818e 	ble.w	801ea1c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x378>
 801e700:	ea5f 4c24 	movs.w	ip, r4, asr #16
 801e704:	ea4f 4326 	mov.w	r3, r6, asr #16
 801e708:	d406      	bmi.n	801e718 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 801e70a:	4584      	cmp	ip, r0
 801e70c:	da04      	bge.n	801e718 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 801e70e:	2b00      	cmp	r3, #0
 801e710:	db02      	blt.n	801e718 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 801e712:	42bb      	cmp	r3, r7
 801e714:	f2c0 8183 	blt.w	801ea1e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37a>
 801e718:	f11c 0c01 	adds.w	ip, ip, #1
 801e71c:	f100 8173 	bmi.w	801ea06 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 801e720:	4561      	cmp	r1, ip
 801e722:	f2c0 8170 	blt.w	801ea06 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 801e726:	3301      	adds	r3, #1
 801e728:	f100 816d 	bmi.w	801ea06 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 801e72c:	429a      	cmp	r2, r3
 801e72e:	f2c0 816a 	blt.w	801ea06 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 801e732:	9b07      	ldr	r3, [sp, #28]
 801e734:	9f0a      	ldr	r7, [sp, #40]	@ 0x28
 801e736:	9318      	str	r3, [sp, #96]	@ 0x60
 801e738:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 801e73a:	2b00      	cmp	r3, #0
 801e73c:	f340 818c 	ble.w	801ea58 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b4>
 801e740:	9a2e      	ldr	r2, [sp, #184]	@ 0xb8
 801e742:	9b2e      	ldr	r3, [sp, #184]	@ 0xb8
 801e744:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 801e748:	689b      	ldr	r3, [r3, #8]
 801e74a:	1422      	asrs	r2, r4, #16
 801e74c:	ea4f 4c26 	mov.w	ip, r6, asr #16
 801e750:	f3c4 3003 	ubfx	r0, r4, #12, #4
 801e754:	f3c6 3103 	ubfx	r1, r6, #12, #4
 801e758:	f100 81cd 	bmi.w	801eaf6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 801e75c:	f103 38ff 	add.w	r8, r3, #4294967295
 801e760:	4542      	cmp	r2, r8
 801e762:	f280 81c8 	bge.w	801eaf6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 801e766:	f1bc 0f00 	cmp.w	ip, #0
 801e76a:	f2c0 81c4 	blt.w	801eaf6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 801e76e:	f10e 38ff 	add.w	r8, lr, #4294967295
 801e772:	45c4      	cmp	ip, r8
 801e774:	f280 81bf 	bge.w	801eaf6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 801e778:	b21b      	sxth	r3, r3
 801e77a:	fb0c 2203 	mla	r2, ip, r3, r2
 801e77e:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 801e780:	eb05 0882 	add.w	r8, r5, r2, lsl #2
 801e784:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 801e788:	ea4f 6e12 	mov.w	lr, r2, lsr #24
 801e78c:	2800      	cmp	r0, #0
 801e78e:	f000 81a9 	beq.w	801eae4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x440>
 801e792:	f8d8 5004 	ldr.w	r5, [r8, #4]
 801e796:	950c      	str	r5, [sp, #48]	@ 0x30
 801e798:	0e2d      	lsrs	r5, r5, #24
 801e79a:	9513      	str	r5, [sp, #76]	@ 0x4c
 801e79c:	b181      	cbz	r1, 801e7c0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 801e79e:	f103 4380 	add.w	r3, r3, #1073741824	@ 0x40000000
 801e7a2:	3b01      	subs	r3, #1
 801e7a4:	009b      	lsls	r3, r3, #2
 801e7a6:	3304      	adds	r3, #4
 801e7a8:	eb08 0c03 	add.w	ip, r8, r3
 801e7ac:	f858 3003 	ldr.w	r3, [r8, r3]
 801e7b0:	9308      	str	r3, [sp, #32]
 801e7b2:	0e1b      	lsrs	r3, r3, #24
 801e7b4:	9311      	str	r3, [sp, #68]	@ 0x44
 801e7b6:	f8dc 3004 	ldr.w	r3, [ip, #4]
 801e7ba:	930d      	str	r3, [sp, #52]	@ 0x34
 801e7bc:	0e1b      	lsrs	r3, r3, #24
 801e7be:	9314      	str	r3, [sp, #80]	@ 0x50
 801e7c0:	b280      	uxth	r0, r0
 801e7c2:	b289      	uxth	r1, r1
 801e7c4:	fb00 f901 	mul.w	r9, r0, r1
 801e7c8:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 801e7cc:	0100      	lsls	r0, r0, #4
 801e7ce:	eba0 0809 	sub.w	r8, r0, r9
 801e7d2:	b289      	uxth	r1, r1
 801e7d4:	f5c0 7380 	rsb	r3, r0, #256	@ 0x100
 801e7d8:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 801e7da:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 801e7dc:	fa1f f888 	uxth.w	r8, r8
 801e7e0:	1a5b      	subs	r3, r3, r1
 801e7e2:	b29b      	uxth	r3, r3
 801e7e4:	fb08 f000 	mul.w	r0, r8, r0
 801e7e8:	fb03 000e 	mla	r0, r3, lr, r0
 801e7ec:	fb01 0005 	mla	r0, r1, r5, r0
 801e7f0:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 801e7f2:	fb09 0005 	mla	r0, r9, r5, r0
 801e7f6:	f3c0 2007 	ubfx	r0, r0, #8, #8
 801e7fa:	2800      	cmp	r0, #0
 801e7fc:	f000 80fa 	beq.w	801e9f4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 801e800:	f1be 0fff 	cmp.w	lr, #255	@ 0xff
 801e804:	d01b      	beq.n	801e83e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 801e806:	f002 1aff 	and.w	sl, r2, #16711935	@ 0xff00ff
 801e80a:	fb0e fa0a 	mul.w	sl, lr, sl
 801e80e:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
 801e812:	fb0e fe02 	mul.w	lr, lr, r2
 801e816:	ea4f 221a 	mov.w	r2, sl, lsr #8
 801e81a:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 801e81e:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
 801e822:	f50e 7c80 	add.w	ip, lr, #256	@ 0x100
 801e826:	4452      	add	r2, sl
 801e828:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 801e82c:	0a12      	lsrs	r2, r2, #8
 801e82e:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801e832:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 801e836:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 801e83a:	ea42 020c 	orr.w	r2, r2, ip
 801e83e:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 801e840:	2dff      	cmp	r5, #255	@ 0xff
 801e842:	d021      	beq.n	801e888 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e4>
 801e844:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 801e846:	f005 1bff 	and.w	fp, r5, #16711935	@ 0xff00ff
 801e84a:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 801e84c:	fb05 fb0b 	mul.w	fp, r5, fp
 801e850:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 801e852:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 801e856:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 801e858:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801e85c:	fb05 fa0a 	mul.w	sl, r5, sl
 801e860:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801e864:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 801e868:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 801e86c:	44de      	add	lr, fp
 801e86e:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801e872:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801e876:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801e87a:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801e87e:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801e882:	ea4e 050a 	orr.w	r5, lr, sl
 801e886:	950c      	str	r5, [sp, #48]	@ 0x30
 801e888:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 801e88a:	2dff      	cmp	r5, #255	@ 0xff
 801e88c:	d021      	beq.n	801e8d2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22e>
 801e88e:	9d08      	ldr	r5, [sp, #32]
 801e890:	f005 1bff 	and.w	fp, r5, #16711935	@ 0xff00ff
 801e894:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 801e896:	fb05 fb0b 	mul.w	fp, r5, fp
 801e89a:	9d08      	ldr	r5, [sp, #32]
 801e89c:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 801e8a0:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 801e8a2:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801e8a6:	fb05 fa0a 	mul.w	sl, r5, sl
 801e8aa:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801e8ae:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 801e8b2:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 801e8b6:	44de      	add	lr, fp
 801e8b8:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801e8bc:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801e8c0:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801e8c4:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801e8c8:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801e8cc:	ea4e 050a 	orr.w	r5, lr, sl
 801e8d0:	9508      	str	r5, [sp, #32]
 801e8d2:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 801e8d4:	2dff      	cmp	r5, #255	@ 0xff
 801e8d6:	d021      	beq.n	801e91c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x278>
 801e8d8:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 801e8da:	f005 1bff 	and.w	fp, r5, #16711935	@ 0xff00ff
 801e8de:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 801e8e0:	fb05 fb0b 	mul.w	fp, r5, fp
 801e8e4:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 801e8e6:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 801e8ea:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 801e8ec:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801e8f0:	fb05 fa0a 	mul.w	sl, r5, sl
 801e8f4:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801e8f8:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 801e8fc:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 801e900:	44de      	add	lr, fp
 801e902:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801e906:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801e90a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801e90e:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801e912:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801e916:	ea4e 050a 	orr.w	r5, lr, sl
 801e91a:	950d      	str	r5, [sp, #52]	@ 0x34
 801e91c:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 801e91e:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 801e922:	9d08      	ldr	r5, [sp, #32]
 801e924:	f002 1eff 	and.w	lr, r2, #16711935	@ 0xff00ff
 801e928:	fb08 fc0c 	mul.w	ip, r8, ip
 801e92c:	fb03 cc0e 	mla	ip, r3, lr, ip
 801e930:	f005 1eff 	and.w	lr, r5, #16711935	@ 0xff00ff
 801e934:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 801e936:	fb01 cc0e 	mla	ip, r1, lr, ip
 801e93a:	f005 1eff 	and.w	lr, r5, #16711935	@ 0xff00ff
 801e93e:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 801e940:	fb09 cc0e 	mla	ip, r9, lr, ip
 801e944:	f405 4e7f 	and.w	lr, r5, #65280	@ 0xff00
 801e948:	fb08 f80e 	mul.w	r8, r8, lr
 801e94c:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
 801e950:	fb03 8202 	mla	r2, r3, r2, r8
 801e954:	9b08      	ldr	r3, [sp, #32]
 801e956:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 801e958:	f403 4a7f 	and.w	sl, r3, #65280	@ 0xff00
 801e95c:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801e95e:	fb01 220a 	mla	r2, r1, sl, r2
 801e962:	f403 417f 	and.w	r1, r3, #65280	@ 0xff00
 801e966:	fb09 2901 	mla	r9, r9, r1, r2
 801e96a:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 801e96c:	883b      	ldrh	r3, [r7, #0]
 801e96e:	4342      	muls	r2, r0
 801e970:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801e974:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801e978:	1c50      	adds	r0, r2, #1
 801e97a:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801e97e:	f409 497f 	and.w	r9, r9, #65280	@ 0xff00
 801e982:	ea4c 0c09 	orr.w	ip, ip, r9
 801e986:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 801e98a:	1219      	asrs	r1, r3, #8
 801e98c:	ea4f 421c 	mov.w	r2, ip, lsr #16
 801e990:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 801e994:	b2c0      	uxtb	r0, r0
 801e996:	fb12 f205 	smulbb	r2, r2, r5
 801e99a:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 801e99e:	fb01 2100 	mla	r1, r1, r0, r2
 801e9a2:	f3cc 2e07 	ubfx	lr, ip, #8, #8
 801e9a6:	10da      	asrs	r2, r3, #3
 801e9a8:	fa5f fc8c 	uxtb.w	ip, ip
 801e9ac:	00db      	lsls	r3, r3, #3
 801e9ae:	fb1c fc05 	smulbb	ip, ip, r5
 801e9b2:	b2db      	uxtb	r3, r3
 801e9b4:	b289      	uxth	r1, r1
 801e9b6:	fb03 c300 	mla	r3, r3, r0, ip
 801e9ba:	fa1f fc83 	uxth.w	ip, r3
 801e9be:	1c4b      	adds	r3, r1, #1
 801e9c0:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 801e9c4:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 801e9c8:	fb1e fe05 	smulbb	lr, lr, r5
 801e9cc:	f10c 0301 	add.w	r3, ip, #1
 801e9d0:	fb02 e200 	mla	r2, r2, r0, lr
 801e9d4:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 801e9d8:	b292      	uxth	r2, r2
 801e9da:	f401 4178 	and.w	r1, r1, #63488	@ 0xf800
 801e9de:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801e9e2:	430b      	orrs	r3, r1
 801e9e4:	1c51      	adds	r1, r2, #1
 801e9e6:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801e9ea:	0952      	lsrs	r2, r2, #5
 801e9ec:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801e9f0:	4313      	orrs	r3, r2
 801e9f2:	803b      	strh	r3, [r7, #0]
 801e9f4:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 801e9f6:	441c      	add	r4, r3
 801e9f8:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 801e9fa:	441e      	add	r6, r3
 801e9fc:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 801e9fe:	3b01      	subs	r3, #1
 801ea00:	3702      	adds	r7, #2
 801ea02:	9318      	str	r3, [sp, #96]	@ 0x60
 801ea04:	e698      	b.n	801e738 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801ea06:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 801ea08:	441c      	add	r4, r3
 801ea0a:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 801ea0c:	441e      	add	r6, r3
 801ea0e:	9b07      	ldr	r3, [sp, #28]
 801ea10:	3b01      	subs	r3, #1
 801ea12:	9307      	str	r3, [sp, #28]
 801ea14:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801ea16:	3302      	adds	r3, #2
 801ea18:	930a      	str	r3, [sp, #40]	@ 0x28
 801ea1a:	e66d      	b.n	801e6f8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 801ea1c:	d023      	beq.n	801ea66 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c2>
 801ea1e:	9b07      	ldr	r3, [sp, #28]
 801ea20:	9829      	ldr	r0, [sp, #164]	@ 0xa4
 801ea22:	3b01      	subs	r3, #1
 801ea24:	fb00 4003 	mla	r0, r0, r3, r4
 801ea28:	1400      	asrs	r0, r0, #16
 801ea2a:	f53f ae82 	bmi.w	801e732 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801ea2e:	3901      	subs	r1, #1
 801ea30:	4288      	cmp	r0, r1
 801ea32:	f6bf ae7e 	bge.w	801e732 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801ea36:	992a      	ldr	r1, [sp, #168]	@ 0xa8
 801ea38:	fb01 6303 	mla	r3, r1, r3, r6
 801ea3c:	141b      	asrs	r3, r3, #16
 801ea3e:	f53f ae78 	bmi.w	801e732 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801ea42:	3a01      	subs	r2, #1
 801ea44:	4293      	cmp	r3, r2
 801ea46:	f6bf ae74 	bge.w	801e732 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801ea4a:	f8dd b01c 	ldr.w	fp, [sp, #28]
 801ea4e:	f8dd 9028 	ldr.w	r9, [sp, #40]	@ 0x28
 801ea52:	f1bb 0f00 	cmp.w	fp, #0
 801ea56:	dc6c      	bgt.n	801eb32 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
 801ea58:	9b07      	ldr	r3, [sp, #28]
 801ea5a:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 801ea5e:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801ea60:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 801ea64:	930a      	str	r3, [sp, #40]	@ 0x28
 801ea66:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 801ea68:	2b00      	cmp	r3, #0
 801ea6a:	f340 81b3 	ble.w	801edd4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 801ea6e:	ee30 0a04 	vadd.f32	s0, s0, s8
 801ea72:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 801ea76:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801ea7a:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 801ea7c:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801ea80:	ee31 1a05 	vadd.f32	s2, s2, s10
 801ea84:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801ea88:	eef0 6a62 	vmov.f32	s13, s5
 801ea8c:	ee61 7a27 	vmul.f32	s15, s2, s15
 801ea90:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801ea94:	ee77 2a62 	vsub.f32	s5, s14, s5
 801ea98:	ee16 4a90 	vmov	r4, s13
 801ea9c:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801eaa0:	eef0 6a43 	vmov.f32	s13, s6
 801eaa4:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801eaa8:	ee12 2a90 	vmov	r2, s5
 801eaac:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801eab0:	fb92 f3f3 	sdiv	r3, r2, r3
 801eab4:	ee13 2a10 	vmov	r2, s6
 801eab8:	9329      	str	r3, [sp, #164]	@ 0xa4
 801eaba:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 801eabc:	fb92 f3f3 	sdiv	r3, r2, r3
 801eac0:	932a      	str	r3, [sp, #168]	@ 0xa8
 801eac2:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 801eac4:	9a19      	ldr	r2, [sp, #100]	@ 0x64
 801eac6:	3b01      	subs	r3, #1
 801eac8:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801eacc:	9317      	str	r3, [sp, #92]	@ 0x5c
 801eace:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 801ead0:	bf08      	it	eq
 801ead2:	4613      	moveq	r3, r2
 801ead4:	ee16 6a90 	vmov	r6, s13
 801ead8:	9307      	str	r3, [sp, #28]
 801eada:	eeb0 3a67 	vmov.f32	s6, s15
 801eade:	eef0 2a47 	vmov.f32	s5, s14
 801eae2:	e5fb      	b.n	801e6dc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 801eae4:	2900      	cmp	r1, #0
 801eae6:	f43f ae6b 	beq.w	801e7c0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 801eaea:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
 801eaee:	9308      	str	r3, [sp, #32]
 801eaf0:	0e1b      	lsrs	r3, r3, #24
 801eaf2:	9311      	str	r3, [sp, #68]	@ 0x44
 801eaf4:	e664      	b.n	801e7c0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 801eaf6:	f112 0801 	adds.w	r8, r2, #1
 801eafa:	f53f af7b 	bmi.w	801e9f4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 801eafe:	4543      	cmp	r3, r8
 801eb00:	f6ff af78 	blt.w	801e9f4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 801eb04:	f11c 0801 	adds.w	r8, ip, #1
 801eb08:	f53f af74 	bmi.w	801e9f4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 801eb0c:	45c6      	cmp	lr, r8
 801eb0e:	f6ff af71 	blt.w	801e9f4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 801eb12:	9d1a      	ldr	r5, [sp, #104]	@ 0x68
 801eb14:	9201      	str	r2, [sp, #4]
 801eb16:	fa0f f28e 	sxth.w	r2, lr
 801eb1a:	e9cd 1504 	strd	r1, r5, [sp, #16]
 801eb1e:	e9cd c002 	strd	ip, r0, [sp, #8]
 801eb22:	9200      	str	r2, [sp, #0]
 801eb24:	b21b      	sxth	r3, r3
 801eb26:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 801eb28:	981b      	ldr	r0, [sp, #108]	@ 0x6c
 801eb2a:	4639      	mov	r1, r7
 801eb2c:	f7ff fc79 	bl	801e422 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>
 801eb30:	e760      	b.n	801e9f4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 801eb32:	9b2e      	ldr	r3, [sp, #184]	@ 0xb8
 801eb34:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 801eb36:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801eb3a:	1427      	asrs	r7, r4, #16
 801eb3c:	1433      	asrs	r3, r6, #16
 801eb3e:	fb01 7303 	mla	r3, r1, r3, r7
 801eb42:	eb05 0783 	add.w	r7, r5, r3, lsl #2
 801eb46:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 801eb4a:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801eb4e:	f3c6 3003 	ubfx	r0, r6, #12, #4
 801eb52:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 801eb56:	2a00      	cmp	r2, #0
 801eb58:	f000 8133 	beq.w	801edc2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x71e>
 801eb5c:	687d      	ldr	r5, [r7, #4]
 801eb5e:	950e      	str	r5, [sp, #56]	@ 0x38
 801eb60:	0e2d      	lsrs	r5, r5, #24
 801eb62:	9515      	str	r5, [sp, #84]	@ 0x54
 801eb64:	b178      	cbz	r0, 801eb86 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 801eb66:	f101 4180 	add.w	r1, r1, #1073741824	@ 0x40000000
 801eb6a:	3901      	subs	r1, #1
 801eb6c:	0089      	lsls	r1, r1, #2
 801eb6e:	3104      	adds	r1, #4
 801eb70:	eb07 0e01 	add.w	lr, r7, r1
 801eb74:	5879      	ldr	r1, [r7, r1]
 801eb76:	9109      	str	r1, [sp, #36]	@ 0x24
 801eb78:	0e09      	lsrs	r1, r1, #24
 801eb7a:	9112      	str	r1, [sp, #72]	@ 0x48
 801eb7c:	f8de 1004 	ldr.w	r1, [lr, #4]
 801eb80:	910f      	str	r1, [sp, #60]	@ 0x3c
 801eb82:	0e09      	lsrs	r1, r1, #24
 801eb84:	9116      	str	r1, [sp, #88]	@ 0x58
 801eb86:	b292      	uxth	r2, r2
 801eb88:	b280      	uxth	r0, r0
 801eb8a:	fb02 f800 	mul.w	r8, r2, r0
 801eb8e:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 801eb92:	0112      	lsls	r2, r2, #4
 801eb94:	eba2 0e08 	sub.w	lr, r2, r8
 801eb98:	b280      	uxth	r0, r0
 801eb9a:	f5c2 7280 	rsb	r2, r2, #256	@ 0x100
 801eb9e:	9915      	ldr	r1, [sp, #84]	@ 0x54
 801eba0:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 801eba2:	fa1f fe8e 	uxth.w	lr, lr
 801eba6:	1a12      	subs	r2, r2, r0
 801eba8:	b292      	uxth	r2, r2
 801ebaa:	fb0e f101 	mul.w	r1, lr, r1
 801ebae:	fb02 110c 	mla	r1, r2, ip, r1
 801ebb2:	fb00 1105 	mla	r1, r0, r5, r1
 801ebb6:	9d16      	ldr	r5, [sp, #88]	@ 0x58
 801ebb8:	fb08 1105 	mla	r1, r8, r5, r1
 801ebbc:	f3c1 2107 	ubfx	r1, r1, #8, #8
 801ebc0:	2900      	cmp	r1, #0
 801ebc2:	f000 80f5 	beq.w	801edb0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70c>
 801ebc6:	f1bc 0fff 	cmp.w	ip, #255	@ 0xff
 801ebca:	d019      	beq.n	801ec00 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55c>
 801ebcc:	f003 1aff 	and.w	sl, r3, #16711935	@ 0xff00ff
 801ebd0:	fb0c fa0a 	mul.w	sl, ip, sl
 801ebd4:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 801ebd8:	fb0c fc03 	mul.w	ip, ip, r3
 801ebdc:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801ebe0:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 801ebe4:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
 801ebe8:	f50c 7780 	add.w	r7, ip, #256	@ 0x100
 801ebec:	4453      	add	r3, sl
 801ebee:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 801ebf2:	0a1b      	lsrs	r3, r3, #8
 801ebf4:	0a3f      	lsrs	r7, r7, #8
 801ebf6:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 801ebfa:	f407 477f 	and.w	r7, r7, #65280	@ 0xff00
 801ebfe:	433b      	orrs	r3, r7
 801ec00:	9d15      	ldr	r5, [sp, #84]	@ 0x54
 801ec02:	2dff      	cmp	r5, #255	@ 0xff
 801ec04:	d020      	beq.n	801ec48 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a4>
 801ec06:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 801ec08:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
 801ec0c:	9d15      	ldr	r5, [sp, #84]	@ 0x54
 801ec0e:	436f      	muls	r7, r5
 801ec10:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 801ec12:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 801ec16:	9d15      	ldr	r5, [sp, #84]	@ 0x54
 801ec18:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801ec1c:	fb05 fa0a 	mul.w	sl, r5, sl
 801ec20:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 801ec24:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801ec28:	44bc      	add	ip, r7
 801ec2a:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 801ec2e:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801ec32:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801ec36:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801ec3a:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801ec3e:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801ec42:	ea4c 050a 	orr.w	r5, ip, sl
 801ec46:	950e      	str	r5, [sp, #56]	@ 0x38
 801ec48:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 801ec4a:	2dff      	cmp	r5, #255	@ 0xff
 801ec4c:	d020      	beq.n	801ec90 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ec>
 801ec4e:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 801ec50:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
 801ec54:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 801ec56:	436f      	muls	r7, r5
 801ec58:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 801ec5a:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 801ec5e:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 801ec60:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801ec64:	fb05 fa0a 	mul.w	sl, r5, sl
 801ec68:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 801ec6c:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801ec70:	44bc      	add	ip, r7
 801ec72:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 801ec76:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801ec7a:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801ec7e:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801ec82:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801ec86:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801ec8a:	ea4c 050a 	orr.w	r5, ip, sl
 801ec8e:	9509      	str	r5, [sp, #36]	@ 0x24
 801ec90:	9d16      	ldr	r5, [sp, #88]	@ 0x58
 801ec92:	2dff      	cmp	r5, #255	@ 0xff
 801ec94:	d020      	beq.n	801ecd8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x634>
 801ec96:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
 801ec98:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
 801ec9c:	9d16      	ldr	r5, [sp, #88]	@ 0x58
 801ec9e:	436f      	muls	r7, r5
 801eca0:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
 801eca2:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 801eca6:	9d16      	ldr	r5, [sp, #88]	@ 0x58
 801eca8:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801ecac:	fb05 fa0a 	mul.w	sl, r5, sl
 801ecb0:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 801ecb4:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801ecb8:	44bc      	add	ip, r7
 801ecba:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 801ecbe:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801ecc2:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801ecc6:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801ecca:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801ecce:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801ecd2:	ea4c 050a 	orr.w	r5, ip, sl
 801ecd6:	950f      	str	r5, [sp, #60]	@ 0x3c
 801ecd8:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 801ecda:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
 801ecde:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 801ece0:	f003 1cff 	and.w	ip, r3, #16711935	@ 0xff00ff
 801ece4:	fb0e f707 	mul.w	r7, lr, r7
 801ece8:	fb02 770c 	mla	r7, r2, ip, r7
 801ecec:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 801ecf0:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
 801ecf2:	fb00 770c 	mla	r7, r0, ip, r7
 801ecf6:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 801ecfa:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 801ecfc:	fb08 770c 	mla	r7, r8, ip, r7
 801ed00:	f405 4c7f 	and.w	ip, r5, #65280	@ 0xff00
 801ed04:	fb0e fe0c 	mul.w	lr, lr, ip
 801ed08:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 801ed0c:	fb02 e303 	mla	r3, r2, r3, lr
 801ed10:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 801ed12:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 801ed14:	f402 4a7f 	and.w	sl, r2, #65280	@ 0xff00
 801ed18:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 801ed1a:	fb00 330a 	mla	r3, r0, sl, r3
 801ed1e:	f402 4c7f 	and.w	ip, r2, #65280	@ 0xff00
 801ed22:	fb08 3c0c 	mla	ip, r8, ip, r3
 801ed26:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801ed28:	f8b9 0000 	ldrh.w	r0, [r9]
 801ed2c:	4359      	muls	r1, r3
 801ed2e:	0a3f      	lsrs	r7, r7, #8
 801ed30:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801ed34:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 801ed38:	1c4b      	adds	r3, r1, #1
 801ed3a:	f007 17ff 	and.w	r7, r7, #16711935	@ 0xff00ff
 801ed3e:	ea47 070c 	orr.w	r7, r7, ip
 801ed42:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 801ed46:	1202      	asrs	r2, r0, #8
 801ed48:	0c3b      	lsrs	r3, r7, #16
 801ed4a:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 801ed4e:	b2c9      	uxtb	r1, r1
 801ed50:	fb13 f305 	smulbb	r3, r3, r5
 801ed54:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
 801ed58:	fb02 3201 	mla	r2, r2, r1, r3
 801ed5c:	f3c7 2c07 	ubfx	ip, r7, #8, #8
 801ed60:	10c3      	asrs	r3, r0, #3
 801ed62:	b2ff      	uxtb	r7, r7
 801ed64:	00c0      	lsls	r0, r0, #3
 801ed66:	b2c0      	uxtb	r0, r0
 801ed68:	fb17 f705 	smulbb	r7, r7, r5
 801ed6c:	fb00 7001 	mla	r0, r0, r1, r7
 801ed70:	b292      	uxth	r2, r2
 801ed72:	fb1c fc05 	smulbb	ip, ip, r5
 801ed76:	b280      	uxth	r0, r0
 801ed78:	f003 03fc 	and.w	r3, r3, #252	@ 0xfc
 801ed7c:	fb03 c301 	mla	r3, r3, r1, ip
 801ed80:	1c51      	adds	r1, r2, #1
 801ed82:	f100 0c01 	add.w	ip, r0, #1
 801ed86:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801ed8a:	eb0c 2c10 	add.w	ip, ip, r0, lsr #8
 801ed8e:	b29b      	uxth	r3, r3
 801ed90:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801ed94:	f402 4278 	and.w	r2, r2, #63488	@ 0xf800
 801ed98:	ea4c 0202 	orr.w	r2, ip, r2
 801ed9c:	f103 0c01 	add.w	ip, r3, #1
 801eda0:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
 801eda4:	095b      	lsrs	r3, r3, #5
 801eda6:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801edaa:	431a      	orrs	r2, r3
 801edac:	f8a9 2000 	strh.w	r2, [r9]
 801edb0:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 801edb2:	441c      	add	r4, r3
 801edb4:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 801edb6:	f109 0902 	add.w	r9, r9, #2
 801edba:	441e      	add	r6, r3
 801edbc:	f10b 3bff 	add.w	fp, fp, #4294967295
 801edc0:	e647      	b.n	801ea52 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ae>
 801edc2:	2800      	cmp	r0, #0
 801edc4:	f43f aedf 	beq.w	801eb86 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 801edc8:	f857 1021 	ldr.w	r1, [r7, r1, lsl #2]
 801edcc:	9109      	str	r1, [sp, #36]	@ 0x24
 801edce:	0e09      	lsrs	r1, r1, #24
 801edd0:	9112      	str	r1, [sp, #72]	@ 0x48
 801edd2:	e6d8      	b.n	801eb86 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 801edd4:	b01d      	add	sp, #116	@ 0x74
 801edd6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801edda <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>:
 801edda:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801edde:	b085      	sub	sp, #20
 801ede0:	e9dd 740f 	ldrd	r7, r4, [sp, #60]	@ 0x3c
 801ede4:	9102      	str	r1, [sp, #8]
 801ede6:	2c00      	cmp	r4, #0
 801ede8:	fb04 7103 	mla	r1, r4, r3, r7
 801edec:	f9bd e038 	ldrsh.w	lr, [sp, #56]	@ 0x38
 801edf0:	f89d 6044 	ldrb.w	r6, [sp, #68]	@ 0x44
 801edf4:	f89d 0048 	ldrb.w	r0, [sp, #72]	@ 0x48
 801edf8:	eb02 0c81 	add.w	ip, r2, r1, lsl #2
 801edfc:	f2c0 810c 	blt.w	801f018 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23e>
 801ee00:	45a6      	cmp	lr, r4
 801ee02:	f340 8109 	ble.w	801f018 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23e>
 801ee06:	2f00      	cmp	r7, #0
 801ee08:	f2c0 8104 	blt.w	801f014 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23a>
 801ee0c:	42bb      	cmp	r3, r7
 801ee0e:	f340 8101 	ble.w	801f014 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23a>
 801ee12:	f852 5021 	ldr.w	r5, [r2, r1, lsl #2]
 801ee16:	1c7a      	adds	r2, r7, #1
 801ee18:	f100 8101 	bmi.w	801f01e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x244>
 801ee1c:	4293      	cmp	r3, r2
 801ee1e:	f340 80fe 	ble.w	801f01e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x244>
 801ee22:	2e00      	cmp	r6, #0
 801ee24:	f000 80fd 	beq.w	801f022 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x248>
 801ee28:	f8dc 1004 	ldr.w	r1, [ip, #4]
 801ee2c:	3401      	adds	r4, #1
 801ee2e:	f100 80fc 	bmi.w	801f02a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x250>
 801ee32:	45a6      	cmp	lr, r4
 801ee34:	f340 80f9 	ble.w	801f02a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x250>
 801ee38:	2800      	cmp	r0, #0
 801ee3a:	f000 80f9 	beq.w	801f030 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x256>
 801ee3e:	2f00      	cmp	r7, #0
 801ee40:	eb0c 0283 	add.w	r2, ip, r3, lsl #2
 801ee44:	f2c0 80ef 	blt.w	801f026 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x24c>
 801ee48:	42bb      	cmp	r3, r7
 801ee4a:	f340 80ec 	ble.w	801f026 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x24c>
 801ee4e:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
 801ee52:	3701      	adds	r7, #1
 801ee54:	f100 80ef 	bmi.w	801f036 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x25c>
 801ee58:	42bb      	cmp	r3, r7
 801ee5a:	f340 80ec 	ble.w	801f036 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x25c>
 801ee5e:	2e00      	cmp	r6, #0
 801ee60:	f000 80eb 	beq.w	801f03a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x260>
 801ee64:	6852      	ldr	r2, [r2, #4]
 801ee66:	b2b6      	uxth	r6, r6
 801ee68:	b280      	uxth	r0, r0
 801ee6a:	fb00 fe06 	mul.w	lr, r0, r6
 801ee6e:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 801ee72:	0136      	lsls	r6, r6, #4
 801ee74:	eba6 070e 	sub.w	r7, r6, lr
 801ee78:	b280      	uxth	r0, r0
 801ee7a:	f5c6 7380 	rsb	r3, r6, #256	@ 0x100
 801ee7e:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 801ee82:	b2bf      	uxth	r7, r7
 801ee84:	1a1b      	subs	r3, r3, r0
 801ee86:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 801ee8a:	b29b      	uxth	r3, r3
 801ee8c:	fb07 f60a 	mul.w	r6, r7, sl
 801ee90:	ea4f 6914 	mov.w	r9, r4, lsr #24
 801ee94:	fb0b 6603 	mla	r6, fp, r3, r6
 801ee98:	ea4f 6812 	mov.w	r8, r2, lsr #24
 801ee9c:	fb00 6609 	mla	r6, r0, r9, r6
 801eea0:	fb0e 6608 	mla	r6, lr, r8, r6
 801eea4:	f3c6 2607 	ubfx	r6, r6, #8, #8
 801eea8:	9600      	str	r6, [sp, #0]
 801eeaa:	2e00      	cmp	r6, #0
 801eeac:	f000 80af 	beq.w	801f00e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x234>
 801eeb0:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 801eeb4:	fb0b fc0c 	mul.w	ip, fp, ip
 801eeb8:	f405 457f 	and.w	r5, r5, #65280	@ 0xff00
 801eebc:	fb0b f505 	mul.w	r5, fp, r5
 801eec0:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 801eec4:	f00b 1bff 	and.w	fp, fp, #16711935	@ 0xff00ff
 801eec8:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 801eecc:	44dc      	add	ip, fp
 801eece:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801eed2:	9501      	str	r5, [sp, #4]
 801eed4:	f00c 15ff 	and.w	r5, ip, #16711935	@ 0xff00ff
 801eed8:	9503      	str	r5, [sp, #12]
 801eeda:	9d01      	ldr	r5, [sp, #4]
 801eedc:	9e02      	ldr	r6, [sp, #8]
 801eede:	f505 7c80 	add.w	ip, r5, #256	@ 0x100
 801eee2:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 801eee6:	f001 1cff 	and.w	ip, r1, #16711935	@ 0xff00ff
 801eeea:	fb0a fc0c 	mul.w	ip, sl, ip
 801eeee:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 801eef2:	ea4f 251c 	mov.w	r5, ip, lsr #8
 801eef6:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 801eefa:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 801eefe:	4465      	add	r5, ip
 801ef00:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 801ef04:	f404 447f 	and.w	r4, r4, #65280	@ 0xff00
 801ef08:	fb09 fc0c 	mul.w	ip, r9, ip
 801ef0c:	fb09 f904 	mul.w	r9, r9, r4
 801ef10:	f509 7480 	add.w	r4, r9, #256	@ 0x100
 801ef14:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 801ef18:	f002 14ff 	and.w	r4, r2, #16711935	@ 0xff00ff
 801ef1c:	fb08 f404 	mul.w	r4, r8, r4
 801ef20:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 801ef24:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
 801ef28:	fb08 f802 	mul.w	r8, r8, r2
 801ef2c:	fb0a fa01 	mul.w	sl, sl, r1
 801ef30:	0a22      	lsrs	r2, r4, #8
 801ef32:	f50a 7180 	add.w	r1, sl, #256	@ 0x100
 801ef36:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 801ef3a:	f104 1401 	add.w	r4, r4, #65537	@ 0x10001
 801ef3e:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 801ef42:	4414      	add	r4, r2
 801ef44:	ea4f 211c 	mov.w	r1, ip, lsr #8
 801ef48:	f508 7280 	add.w	r2, r8, #256	@ 0x100
 801ef4c:	0a2d      	lsrs	r5, r5, #8
 801ef4e:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 801ef52:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 801ef56:	9a03      	ldr	r2, [sp, #12]
 801ef58:	8836      	ldrh	r6, [r6, #0]
 801ef5a:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 801ef5e:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 801ef62:	437d      	muls	r5, r7
 801ef64:	4461      	add	r1, ip
 801ef66:	0a24      	lsrs	r4, r4, #8
 801ef68:	fb02 5503 	mla	r5, r2, r3, r5
 801ef6c:	0a09      	lsrs	r1, r1, #8
 801ef6e:	f004 14ff 	and.w	r4, r4, #16711935	@ 0xff00ff
 801ef72:	fb04 540e 	mla	r4, r4, lr, r5
 801ef76:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 801ef7a:	fb01 4100 	mla	r1, r1, r0, r4
 801ef7e:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801ef82:	0a09      	lsrs	r1, r1, #8
 801ef84:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801ef88:	f001 14ff 	and.w	r4, r1, #16711935	@ 0xff00ff
 801ef8c:	ea4f 2818 	mov.w	r8, r8, lsr #8
 801ef90:	f40b 417f 	and.w	r1, fp, #65280	@ 0xff00
 801ef94:	fb07 f70a 	mul.w	r7, r7, sl
 801ef98:	fb03 7101 	mla	r1, r3, r1, r7
 801ef9c:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801efa0:	9b00      	ldr	r3, [sp, #0]
 801efa2:	f408 487f 	and.w	r8, r8, #65280	@ 0xff00
 801efa6:	fb0e 1e08 	mla	lr, lr, r8, r1
 801efaa:	f409 417f 	and.w	r1, r9, #65280	@ 0xff00
 801efae:	fb00 e101 	mla	r1, r0, r1, lr
 801efb2:	43da      	mvns	r2, r3
 801efb4:	1233      	asrs	r3, r6, #8
 801efb6:	b2d2      	uxtb	r2, r2
 801efb8:	10f0      	asrs	r0, r6, #3
 801efba:	0a09      	lsrs	r1, r1, #8
 801efbc:	f003 03f8 	and.w	r3, r3, #248	@ 0xf8
 801efc0:	00f6      	lsls	r6, r6, #3
 801efc2:	4353      	muls	r3, r2
 801efc4:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 801efc8:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 801efcc:	b2f6      	uxtb	r6, r6
 801efce:	4321      	orrs	r1, r4
 801efd0:	4350      	muls	r0, r2
 801efd2:	4356      	muls	r6, r2
 801efd4:	1c5a      	adds	r2, r3, #1
 801efd6:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 801efda:	0c0b      	lsrs	r3, r1, #16
 801efdc:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801efe0:	1c42      	adds	r2, r0, #1
 801efe2:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801efe6:	0a0a      	lsrs	r2, r1, #8
 801efe8:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 801efec:	021b      	lsls	r3, r3, #8
 801efee:	00d2      	lsls	r2, r2, #3
 801eff0:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801eff4:	f403 4378 	and.w	r3, r3, #63488	@ 0xf800
 801eff8:	4313      	orrs	r3, r2
 801effa:	1c72      	adds	r2, r6, #1
 801effc:	eb02 2616 	add.w	r6, r2, r6, lsr #8
 801f000:	eb01 2116 	add.w	r1, r1, r6, lsr #8
 801f004:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 801f008:	4319      	orrs	r1, r3
 801f00a:	9b02      	ldr	r3, [sp, #8]
 801f00c:	8019      	strh	r1, [r3, #0]
 801f00e:	b005      	add	sp, #20
 801f010:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801f014:	2500      	movs	r5, #0
 801f016:	e6fe      	b.n	801ee16 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x3c>
 801f018:	2100      	movs	r1, #0
 801f01a:	460d      	mov	r5, r1
 801f01c:	e706      	b.n	801ee2c <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 801f01e:	2100      	movs	r1, #0
 801f020:	e704      	b.n	801ee2c <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 801f022:	4631      	mov	r1, r6
 801f024:	e702      	b.n	801ee2c <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 801f026:	2400      	movs	r4, #0
 801f028:	e713      	b.n	801ee52 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x78>
 801f02a:	2200      	movs	r2, #0
 801f02c:	4614      	mov	r4, r2
 801f02e:	e71a      	b.n	801ee66 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 801f030:	4602      	mov	r2, r0
 801f032:	4604      	mov	r4, r0
 801f034:	e717      	b.n	801ee66 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 801f036:	2200      	movs	r2, #0
 801f038:	e715      	b.n	801ee66 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 801f03a:	4632      	mov	r2, r6
 801f03c:	e713      	b.n	801ee66 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
	...

0801f040 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801f040:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801f044:	b09b      	sub	sp, #108	@ 0x6c
 801f046:	e9dd 4625 	ldrd	r4, r6, [sp, #148]	@ 0x94
 801f04a:	9218      	str	r2, [sp, #96]	@ 0x60
 801f04c:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
 801f04e:	9116      	str	r1, [sp, #88]	@ 0x58
 801f050:	9307      	str	r3, [sp, #28]
 801f052:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	@ 0xa8
 801f056:	9019      	str	r0, [sp, #100]	@ 0x64
 801f058:	6850      	ldr	r0, [r2, #4]
 801f05a:	6812      	ldr	r2, [r2, #0]
 801f05c:	fb00 1303 	mla	r3, r0, r3, r1
 801f060:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801f064:	930a      	str	r3, [sp, #40]	@ 0x28
 801f066:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 801f068:	681b      	ldr	r3, [r3, #0]
 801f06a:	930f      	str	r3, [sp, #60]	@ 0x3c
 801f06c:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 801f06e:	2b00      	cmp	r3, #0
 801f070:	dc03      	bgt.n	801f07a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 801f072:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 801f074:	2b00      	cmp	r3, #0
 801f076:	f340 8386 	ble.w	801f786 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x746>
 801f07a:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 801f07c:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801f080:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801f084:	1e48      	subs	r0, r1, #1
 801f086:	1e57      	subs	r7, r2, #1
 801f088:	9b07      	ldr	r3, [sp, #28]
 801f08a:	2b00      	cmp	r3, #0
 801f08c:	f340 8166 	ble.w	801f35c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 801f090:	ea5f 4c24 	movs.w	ip, r4, asr #16
 801f094:	ea4f 4326 	mov.w	r3, r6, asr #16
 801f098:	d406      	bmi.n	801f0a8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801f09a:	4584      	cmp	ip, r0
 801f09c:	da04      	bge.n	801f0a8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801f09e:	2b00      	cmp	r3, #0
 801f0a0:	db02      	blt.n	801f0a8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801f0a2:	42bb      	cmp	r3, r7
 801f0a4:	f2c0 815b 	blt.w	801f35e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
 801f0a8:	f11c 0c01 	adds.w	ip, ip, #1
 801f0ac:	f100 814b 	bmi.w	801f346 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 801f0b0:	4561      	cmp	r1, ip
 801f0b2:	f2c0 8148 	blt.w	801f346 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 801f0b6:	3301      	adds	r3, #1
 801f0b8:	f100 8145 	bmi.w	801f346 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 801f0bc:	429a      	cmp	r2, r3
 801f0be:	f2c0 8142 	blt.w	801f346 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 801f0c2:	9b07      	ldr	r3, [sp, #28]
 801f0c4:	9f0a      	ldr	r7, [sp, #40]	@ 0x28
 801f0c6:	9317      	str	r3, [sp, #92]	@ 0x5c
 801f0c8:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 801f0ca:	2b00      	cmp	r3, #0
 801f0cc:	f340 8165 	ble.w	801f39a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801f0d0:	9a2c      	ldr	r2, [sp, #176]	@ 0xb0
 801f0d2:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 801f0d4:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 801f0d8:	689b      	ldr	r3, [r3, #8]
 801f0da:	1422      	asrs	r2, r4, #16
 801f0dc:	ea4f 4c26 	mov.w	ip, r6, asr #16
 801f0e0:	f3c4 3103 	ubfx	r1, r4, #12, #4
 801f0e4:	f3c6 3003 	ubfx	r0, r6, #12, #4
 801f0e8:	f100 81d5 	bmi.w	801f496 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 801f0ec:	f103 38ff 	add.w	r8, r3, #4294967295
 801f0f0:	4542      	cmp	r2, r8
 801f0f2:	f280 81d0 	bge.w	801f496 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 801f0f6:	f1bc 0f00 	cmp.w	ip, #0
 801f0fa:	f2c0 81cc 	blt.w	801f496 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 801f0fe:	f10e 38ff 	add.w	r8, lr, #4294967295
 801f102:	45c4      	cmp	ip, r8
 801f104:	f280 81c7 	bge.w	801f496 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 801f108:	b21b      	sxth	r3, r3
 801f10a:	fb0c 2203 	mla	r2, ip, r3, r2
 801f10e:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
 801f110:	eb05 0882 	add.w	r8, r5, r2, lsl #2
 801f114:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 801f118:	ea4f 6e12 	mov.w	lr, r2, lsr #24
 801f11c:	2900      	cmp	r1, #0
 801f11e:	f000 8182 	beq.w	801f426 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
 801f122:	f8d8 5004 	ldr.w	r5, [r8, #4]
 801f126:	950b      	str	r5, [sp, #44]	@ 0x2c
 801f128:	0e2d      	lsrs	r5, r5, #24
 801f12a:	9512      	str	r5, [sp, #72]	@ 0x48
 801f12c:	b180      	cbz	r0, 801f150 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 801f12e:	f103 4380 	add.w	r3, r3, #1073741824	@ 0x40000000
 801f132:	3b01      	subs	r3, #1
 801f134:	009b      	lsls	r3, r3, #2
 801f136:	3304      	adds	r3, #4
 801f138:	eb08 0c03 	add.w	ip, r8, r3
 801f13c:	f858 3003 	ldr.w	r3, [r8, r3]
 801f140:	9308      	str	r3, [sp, #32]
 801f142:	0e1b      	lsrs	r3, r3, #24
 801f144:	9310      	str	r3, [sp, #64]	@ 0x40
 801f146:	f8dc 3004 	ldr.w	r3, [ip, #4]
 801f14a:	930c      	str	r3, [sp, #48]	@ 0x30
 801f14c:	0e1b      	lsrs	r3, r3, #24
 801f14e:	9313      	str	r3, [sp, #76]	@ 0x4c
 801f150:	b289      	uxth	r1, r1
 801f152:	b280      	uxth	r0, r0
 801f154:	fb01 f900 	mul.w	r9, r1, r0
 801f158:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 801f15c:	0109      	lsls	r1, r1, #4
 801f15e:	eba1 0809 	sub.w	r8, r1, r9
 801f162:	b280      	uxth	r0, r0
 801f164:	f5c1 7180 	rsb	r1, r1, #256	@ 0x100
 801f168:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 801f16a:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 801f16c:	fa1f f888 	uxth.w	r8, r8
 801f170:	1a09      	subs	r1, r1, r0
 801f172:	b289      	uxth	r1, r1
 801f174:	fb08 f303 	mul.w	r3, r8, r3
 801f178:	fb01 330e 	mla	r3, r1, lr, r3
 801f17c:	fb00 3305 	mla	r3, r0, r5, r3
 801f180:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 801f182:	fb09 3305 	mla	r3, r9, r5, r3
 801f186:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801f18a:	2b00      	cmp	r3, #0
 801f18c:	f000 80d2 	beq.w	801f334 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 801f190:	f1be 0fff 	cmp.w	lr, #255	@ 0xff
 801f194:	d01b      	beq.n	801f1ce <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x18e>
 801f196:	f002 1aff 	and.w	sl, r2, #16711935	@ 0xff00ff
 801f19a:	fb0e fa0a 	mul.w	sl, lr, sl
 801f19e:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
 801f1a2:	fb0e fe02 	mul.w	lr, lr, r2
 801f1a6:	ea4f 221a 	mov.w	r2, sl, lsr #8
 801f1aa:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 801f1ae:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
 801f1b2:	f50e 7c80 	add.w	ip, lr, #256	@ 0x100
 801f1b6:	4452      	add	r2, sl
 801f1b8:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 801f1bc:	0a12      	lsrs	r2, r2, #8
 801f1be:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801f1c2:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 801f1c6:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 801f1ca:	ea42 020c 	orr.w	r2, r2, ip
 801f1ce:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 801f1d0:	2dff      	cmp	r5, #255	@ 0xff
 801f1d2:	d021      	beq.n	801f218 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d8>
 801f1d4:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 801f1d6:	f005 1bff 	and.w	fp, r5, #16711935	@ 0xff00ff
 801f1da:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 801f1dc:	fb05 fb0b 	mul.w	fp, r5, fp
 801f1e0:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 801f1e2:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 801f1e6:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 801f1e8:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801f1ec:	fb05 fa0a 	mul.w	sl, r5, sl
 801f1f0:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801f1f4:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 801f1f8:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 801f1fc:	44de      	add	lr, fp
 801f1fe:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801f202:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801f206:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801f20a:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801f20e:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801f212:	ea4e 050a 	orr.w	r5, lr, sl
 801f216:	950b      	str	r5, [sp, #44]	@ 0x2c
 801f218:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 801f21a:	2dff      	cmp	r5, #255	@ 0xff
 801f21c:	d021      	beq.n	801f262 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x222>
 801f21e:	9d08      	ldr	r5, [sp, #32]
 801f220:	f005 1bff 	and.w	fp, r5, #16711935	@ 0xff00ff
 801f224:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 801f226:	fb05 fb0b 	mul.w	fp, r5, fp
 801f22a:	9d08      	ldr	r5, [sp, #32]
 801f22c:	f405 4e7f 	and.w	lr, r5, #65280	@ 0xff00
 801f230:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 801f232:	fb05 fa0e 	mul.w	sl, r5, lr
 801f236:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801f23a:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801f23e:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 801f242:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 801f246:	44de      	add	lr, fp
 801f248:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801f24c:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801f250:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801f254:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801f258:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801f25c:	ea4e 050a 	orr.w	r5, lr, sl
 801f260:	9508      	str	r5, [sp, #32]
 801f262:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 801f264:	2dff      	cmp	r5, #255	@ 0xff
 801f266:	d021      	beq.n	801f2ac <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26c>
 801f268:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 801f26a:	f005 1bff 	and.w	fp, r5, #16711935	@ 0xff00ff
 801f26e:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 801f270:	fb05 fb0b 	mul.w	fp, r5, fp
 801f274:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 801f276:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 801f27a:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 801f27c:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801f280:	fb05 fa0a 	mul.w	sl, r5, sl
 801f284:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801f288:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 801f28c:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 801f290:	44de      	add	lr, fp
 801f292:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801f296:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801f29a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801f29e:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801f2a2:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801f2a6:	ea4e 050a 	orr.w	r5, lr, sl
 801f2aa:	950c      	str	r5, [sp, #48]	@ 0x30
 801f2ac:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 801f2ae:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 801f2b2:	9d08      	ldr	r5, [sp, #32]
 801f2b4:	f002 1eff 	and.w	lr, r2, #16711935	@ 0xff00ff
 801f2b8:	fb08 fc0c 	mul.w	ip, r8, ip
 801f2bc:	fb01 cc0e 	mla	ip, r1, lr, ip
 801f2c0:	f005 1eff 	and.w	lr, r5, #16711935	@ 0xff00ff
 801f2c4:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 801f2c6:	fb00 cc0e 	mla	ip, r0, lr, ip
 801f2ca:	f005 1eff 	and.w	lr, r5, #16711935	@ 0xff00ff
 801f2ce:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 801f2d0:	fb09 cc0e 	mla	ip, r9, lr, ip
 801f2d4:	f405 4e7f 	and.w	lr, r5, #65280	@ 0xff00
 801f2d8:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
 801f2dc:	fb08 f80e 	mul.w	r8, r8, lr
 801f2e0:	fb01 8202 	mla	r2, r1, r2, r8
 801f2e4:	9908      	ldr	r1, [sp, #32]
 801f2e6:	f401 4a7f 	and.w	sl, r1, #65280	@ 0xff00
 801f2ea:	990c      	ldr	r1, [sp, #48]	@ 0x30
 801f2ec:	fb00 220a 	mla	r2, r0, sl, r2
 801f2f0:	f401 407f 	and.w	r0, r1, #65280	@ 0xff00
 801f2f4:	fb09 2900 	mla	r9, r9, r0, r2
 801f2f8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801f2fc:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801f300:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801f304:	f409 497f 	and.w	r9, r9, #65280	@ 0xff00
 801f308:	ea4c 0c09 	orr.w	ip, ip, r9
 801f30c:	2bff      	cmp	r3, #255	@ 0xff
 801f30e:	ea4f 221c 	mov.w	r2, ip, lsr #8
 801f312:	f040 8091 	bne.w	801f438 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 801f316:	ea4f 135c 	mov.w	r3, ip, lsr #5
 801f31a:	f422 62ff 	bic.w	r2, r2, #2040	@ 0x7f8
 801f31e:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801f322:	f022 0207 	bic.w	r2, r2, #7
 801f326:	431a      	orrs	r2, r3
 801f328:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
 801f32c:	ea4c 0c02 	orr.w	ip, ip, r2
 801f330:	f8a7 c000 	strh.w	ip, [r7]
 801f334:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
 801f336:	441c      	add	r4, r3
 801f338:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801f33a:	441e      	add	r6, r3
 801f33c:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 801f33e:	3b01      	subs	r3, #1
 801f340:	3702      	adds	r7, #2
 801f342:	9317      	str	r3, [sp, #92]	@ 0x5c
 801f344:	e6c0      	b.n	801f0c8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 801f346:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
 801f348:	441c      	add	r4, r3
 801f34a:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801f34c:	441e      	add	r6, r3
 801f34e:	9b07      	ldr	r3, [sp, #28]
 801f350:	3b01      	subs	r3, #1
 801f352:	9307      	str	r3, [sp, #28]
 801f354:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801f356:	3302      	adds	r3, #2
 801f358:	930a      	str	r3, [sp, #40]	@ 0x28
 801f35a:	e695      	b.n	801f088 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801f35c:	d024      	beq.n	801f3a8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x368>
 801f35e:	9b07      	ldr	r3, [sp, #28]
 801f360:	9827      	ldr	r0, [sp, #156]	@ 0x9c
 801f362:	3b01      	subs	r3, #1
 801f364:	fb00 4003 	mla	r0, r0, r3, r4
 801f368:	1400      	asrs	r0, r0, #16
 801f36a:	f53f aeaa 	bmi.w	801f0c2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 801f36e:	3901      	subs	r1, #1
 801f370:	4288      	cmp	r0, r1
 801f372:	f6bf aea6 	bge.w	801f0c2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 801f376:	9928      	ldr	r1, [sp, #160]	@ 0xa0
 801f378:	fb01 6303 	mla	r3, r1, r3, r6
 801f37c:	141b      	asrs	r3, r3, #16
 801f37e:	f53f aea0 	bmi.w	801f0c2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 801f382:	3a01      	subs	r2, #1
 801f384:	4293      	cmp	r3, r2
 801f386:	f6bf ae9c 	bge.w	801f0c2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 801f38a:	f8dd b01c 	ldr.w	fp, [sp, #28]
 801f38e:	f8dd 8028 	ldr.w	r8, [sp, #40]	@ 0x28
 801f392:	f1bb 0f00 	cmp.w	fp, #0
 801f396:	f300 809a 	bgt.w	801f4ce <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
 801f39a:	9b07      	ldr	r3, [sp, #28]
 801f39c:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 801f3a0:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801f3a2:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 801f3a6:	930a      	str	r3, [sp, #40]	@ 0x28
 801f3a8:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 801f3aa:	2b00      	cmp	r3, #0
 801f3ac:	f340 81eb 	ble.w	801f786 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x746>
 801f3b0:	ee30 0a04 	vadd.f32	s0, s0, s8
 801f3b4:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 801f3b8:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801f3bc:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801f3be:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801f3c2:	ee31 1a05 	vadd.f32	s2, s2, s10
 801f3c6:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801f3ca:	eef0 6a62 	vmov.f32	s13, s5
 801f3ce:	ee61 7a27 	vmul.f32	s15, s2, s15
 801f3d2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801f3d6:	ee77 2a62 	vsub.f32	s5, s14, s5
 801f3da:	ee16 4a90 	vmov	r4, s13
 801f3de:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801f3e2:	eef0 6a43 	vmov.f32	s13, s6
 801f3e6:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801f3ea:	ee12 2a90 	vmov	r2, s5
 801f3ee:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801f3f2:	fb92 f3f3 	sdiv	r3, r2, r3
 801f3f6:	ee13 2a10 	vmov	r2, s6
 801f3fa:	9327      	str	r3, [sp, #156]	@ 0x9c
 801f3fc:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801f3fe:	fb92 f3f3 	sdiv	r3, r2, r3
 801f402:	9328      	str	r3, [sp, #160]	@ 0xa0
 801f404:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 801f406:	9a18      	ldr	r2, [sp, #96]	@ 0x60
 801f408:	3b01      	subs	r3, #1
 801f40a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801f40e:	9316      	str	r3, [sp, #88]	@ 0x58
 801f410:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801f412:	bf08      	it	eq
 801f414:	4613      	moveq	r3, r2
 801f416:	ee16 6a90 	vmov	r6, s13
 801f41a:	9307      	str	r3, [sp, #28]
 801f41c:	eeb0 3a67 	vmov.f32	s6, s15
 801f420:	eef0 2a47 	vmov.f32	s5, s14
 801f424:	e622      	b.n	801f06c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c>
 801f426:	2800      	cmp	r0, #0
 801f428:	f43f ae92 	beq.w	801f150 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 801f42c:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
 801f430:	9308      	str	r3, [sp, #32]
 801f432:	0e1b      	lsrs	r3, r3, #24
 801f434:	9310      	str	r3, [sp, #64]	@ 0x40
 801f436:	e68b      	b.n	801f150 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 801f438:	8839      	ldrh	r1, [r7, #0]
 801f43a:	4dd4      	ldr	r5, [pc, #848]	@ (801f78c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74c>)
 801f43c:	43db      	mvns	r3, r3
 801f43e:	ea4f 2e21 	mov.w	lr, r1, asr #8
 801f442:	fa5f f883 	uxtb.w	r8, r3
 801f446:	f00e 0ef8 	and.w	lr, lr, #248	@ 0xf8
 801f44a:	fb0e fe08 	mul.w	lr, lr, r8
 801f44e:	10c8      	asrs	r0, r1, #3
 801f450:	00cb      	lsls	r3, r1, #3
 801f452:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 801f456:	f10e 0101 	add.w	r1, lr, #1
 801f45a:	eb01 2e1e 	add.w	lr, r1, lr, lsr #8
 801f45e:	fb00 f008 	mul.w	r0, r0, r8
 801f462:	ea4f 411c 	mov.w	r1, ip, lsr #16
 801f466:	eb01 211e 	add.w	r1, r1, lr, lsr #8
 801f46a:	f100 0e01 	add.w	lr, r0, #1
 801f46e:	eb0e 2010 	add.w	r0, lr, r0, lsr #8
 801f472:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 801f476:	b2db      	uxtb	r3, r3
 801f478:	b2c9      	uxtb	r1, r1
 801f47a:	00d2      	lsls	r2, r2, #3
 801f47c:	fb03 f308 	mul.w	r3, r3, r8
 801f480:	ea05 2101 	and.w	r1, r5, r1, lsl #8
 801f484:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801f488:	430a      	orrs	r2, r1
 801f48a:	1c59      	adds	r1, r3, #1
 801f48c:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 801f490:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 801f494:	e748      	b.n	801f328 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e8>
 801f496:	f112 0801 	adds.w	r8, r2, #1
 801f49a:	f53f af4b 	bmi.w	801f334 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 801f49e:	4543      	cmp	r3, r8
 801f4a0:	f6ff af48 	blt.w	801f334 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 801f4a4:	f11c 0801 	adds.w	r8, ip, #1
 801f4a8:	f53f af44 	bmi.w	801f334 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 801f4ac:	45c6      	cmp	lr, r8
 801f4ae:	f6ff af41 	blt.w	801f334 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 801f4b2:	e9cd 2c01 	strd	r2, ip, [sp, #4]
 801f4b6:	fa0f f28e 	sxth.w	r2, lr
 801f4ba:	e9cd 1003 	strd	r1, r0, [sp, #12]
 801f4be:	9200      	str	r2, [sp, #0]
 801f4c0:	b21b      	sxth	r3, r3
 801f4c2:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 801f4c4:	9819      	ldr	r0, [sp, #100]	@ 0x64
 801f4c6:	4639      	mov	r1, r7
 801f4c8:	f7ff fc87 	bl	801edda <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>
 801f4cc:	e732      	b.n	801f334 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 801f4ce:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 801f4d0:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
 801f4d2:	f9b3 7008 	ldrsh.w	r7, [r3, #8]
 801f4d6:	1421      	asrs	r1, r4, #16
 801f4d8:	1433      	asrs	r3, r6, #16
 801f4da:	fb07 1303 	mla	r3, r7, r3, r1
 801f4de:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 801f4e0:	eb01 0183 	add.w	r1, r1, r3, lsl #2
 801f4e4:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 801f4e8:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801f4ec:	f3c6 3003 	ubfx	r0, r6, #12, #4
 801f4f0:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 801f4f4:	2a00      	cmp	r2, #0
 801f4f6:	f000 8107 	beq.w	801f708 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c8>
 801f4fa:	684d      	ldr	r5, [r1, #4]
 801f4fc:	950d      	str	r5, [sp, #52]	@ 0x34
 801f4fe:	0e2d      	lsrs	r5, r5, #24
 801f500:	9514      	str	r5, [sp, #80]	@ 0x50
 801f502:	b178      	cbz	r0, 801f524 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 801f504:	f107 4780 	add.w	r7, r7, #1073741824	@ 0x40000000
 801f508:	3f01      	subs	r7, #1
 801f50a:	00bf      	lsls	r7, r7, #2
 801f50c:	3704      	adds	r7, #4
 801f50e:	eb01 0e07 	add.w	lr, r1, r7
 801f512:	59c9      	ldr	r1, [r1, r7]
 801f514:	9109      	str	r1, [sp, #36]	@ 0x24
 801f516:	0e09      	lsrs	r1, r1, #24
 801f518:	9111      	str	r1, [sp, #68]	@ 0x44
 801f51a:	f8de 1004 	ldr.w	r1, [lr, #4]
 801f51e:	910e      	str	r1, [sp, #56]	@ 0x38
 801f520:	0e09      	lsrs	r1, r1, #24
 801f522:	9115      	str	r1, [sp, #84]	@ 0x54
 801f524:	b292      	uxth	r2, r2
 801f526:	b280      	uxth	r0, r0
 801f528:	fb02 f900 	mul.w	r9, r2, r0
 801f52c:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 801f530:	0112      	lsls	r2, r2, #4
 801f532:	eba2 0e09 	sub.w	lr, r2, r9
 801f536:	b280      	uxth	r0, r0
 801f538:	f5c2 7180 	rsb	r1, r2, #256	@ 0x100
 801f53c:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 801f53e:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 801f540:	fa1f fe8e 	uxth.w	lr, lr
 801f544:	1a09      	subs	r1, r1, r0
 801f546:	b289      	uxth	r1, r1
 801f548:	fb0e f202 	mul.w	r2, lr, r2
 801f54c:	fb01 220c 	mla	r2, r1, ip, r2
 801f550:	fb00 2205 	mla	r2, r0, r5, r2
 801f554:	9d15      	ldr	r5, [sp, #84]	@ 0x54
 801f556:	fb09 2205 	mla	r2, r9, r5, r2
 801f55a:	f3c2 2207 	ubfx	r2, r2, #8, #8
 801f55e:	2a00      	cmp	r2, #0
 801f560:	f000 80c9 	beq.w	801f6f6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b6>
 801f564:	f1bc 0fff 	cmp.w	ip, #255	@ 0xff
 801f568:	d019      	beq.n	801f59e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55e>
 801f56a:	f003 1aff 	and.w	sl, r3, #16711935	@ 0xff00ff
 801f56e:	fb0c fa0a 	mul.w	sl, ip, sl
 801f572:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 801f576:	fb0c fc03 	mul.w	ip, ip, r3
 801f57a:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801f57e:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 801f582:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
 801f586:	f50c 7780 	add.w	r7, ip, #256	@ 0x100
 801f58a:	4453      	add	r3, sl
 801f58c:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 801f590:	0a1b      	lsrs	r3, r3, #8
 801f592:	0a3f      	lsrs	r7, r7, #8
 801f594:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 801f598:	f407 477f 	and.w	r7, r7, #65280	@ 0xff00
 801f59c:	433b      	orrs	r3, r7
 801f59e:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 801f5a0:	2dff      	cmp	r5, #255	@ 0xff
 801f5a2:	d020      	beq.n	801f5e6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a6>
 801f5a4:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 801f5a6:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
 801f5aa:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 801f5ac:	436f      	muls	r7, r5
 801f5ae:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 801f5b0:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 801f5b4:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 801f5b6:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801f5ba:	fb05 fa0a 	mul.w	sl, r5, sl
 801f5be:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 801f5c2:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801f5c6:	44bc      	add	ip, r7
 801f5c8:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 801f5cc:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801f5d0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801f5d4:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801f5d8:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801f5dc:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801f5e0:	ea4c 050a 	orr.w	r5, ip, sl
 801f5e4:	950d      	str	r5, [sp, #52]	@ 0x34
 801f5e6:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 801f5e8:	2dff      	cmp	r5, #255	@ 0xff
 801f5ea:	d020      	beq.n	801f62e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ee>
 801f5ec:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 801f5ee:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
 801f5f2:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 801f5f4:	436f      	muls	r7, r5
 801f5f6:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 801f5f8:	f405 4c7f 	and.w	ip, r5, #65280	@ 0xff00
 801f5fc:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 801f5fe:	fb05 fa0c 	mul.w	sl, r5, ip
 801f602:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801f606:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801f60a:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 801f60e:	44bc      	add	ip, r7
 801f610:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 801f614:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801f618:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801f61c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801f620:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801f624:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801f628:	ea4c 050a 	orr.w	r5, ip, sl
 801f62c:	9509      	str	r5, [sp, #36]	@ 0x24
 801f62e:	9d15      	ldr	r5, [sp, #84]	@ 0x54
 801f630:	2dff      	cmp	r5, #255	@ 0xff
 801f632:	d020      	beq.n	801f676 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x636>
 801f634:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 801f636:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
 801f63a:	9d15      	ldr	r5, [sp, #84]	@ 0x54
 801f63c:	436f      	muls	r7, r5
 801f63e:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 801f640:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 801f644:	9d15      	ldr	r5, [sp, #84]	@ 0x54
 801f646:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801f64a:	fb05 fa0a 	mul.w	sl, r5, sl
 801f64e:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 801f652:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801f656:	44bc      	add	ip, r7
 801f658:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 801f65c:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801f660:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801f664:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801f668:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801f66c:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801f670:	ea4c 050a 	orr.w	r5, ip, sl
 801f674:	950e      	str	r5, [sp, #56]	@ 0x38
 801f676:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 801f678:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
 801f67c:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 801f67e:	f003 1cff 	and.w	ip, r3, #16711935	@ 0xff00ff
 801f682:	fb0e f707 	mul.w	r7, lr, r7
 801f686:	fb01 770c 	mla	r7, r1, ip, r7
 801f68a:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 801f68e:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 801f690:	fb00 770c 	mla	r7, r0, ip, r7
 801f694:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 801f698:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 801f69a:	fb09 770c 	mla	r7, r9, ip, r7
 801f69e:	f405 4c7f 	and.w	ip, r5, #65280	@ 0xff00
 801f6a2:	fb0e fe0c 	mul.w	lr, lr, ip
 801f6a6:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 801f6aa:	fb01 e303 	mla	r3, r1, r3, lr
 801f6ae:	9909      	ldr	r1, [sp, #36]	@ 0x24
 801f6b0:	f401 4a7f 	and.w	sl, r1, #65280	@ 0xff00
 801f6b4:	990e      	ldr	r1, [sp, #56]	@ 0x38
 801f6b6:	fb00 330a 	mla	r3, r0, sl, r3
 801f6ba:	f401 4c7f 	and.w	ip, r1, #65280	@ 0xff00
 801f6be:	fb09 3c0c 	mla	ip, r9, ip, r3
 801f6c2:	0a3f      	lsrs	r7, r7, #8
 801f6c4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801f6c8:	f007 17ff 	and.w	r7, r7, #16711935	@ 0xff00ff
 801f6cc:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 801f6d0:	ea47 070c 	orr.w	r7, r7, ip
 801f6d4:	2aff      	cmp	r2, #255	@ 0xff
 801f6d6:	ea4f 2317 	mov.w	r3, r7, lsr #8
 801f6da:	d11e      	bne.n	801f71a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6da>
 801f6dc:	097a      	lsrs	r2, r7, #5
 801f6de:	f423 63ff 	bic.w	r3, r3, #2040	@ 0x7f8
 801f6e2:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801f6e6:	f023 0307 	bic.w	r3, r3, #7
 801f6ea:	4313      	orrs	r3, r2
 801f6ec:	f3c7 07c4 	ubfx	r7, r7, #3, #5
 801f6f0:	431f      	orrs	r7, r3
 801f6f2:	f8a8 7000 	strh.w	r7, [r8]
 801f6f6:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
 801f6f8:	441c      	add	r4, r3
 801f6fa:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801f6fc:	f108 0802 	add.w	r8, r8, #2
 801f700:	441e      	add	r6, r3
 801f702:	f10b 3bff 	add.w	fp, fp, #4294967295
 801f706:	e644      	b.n	801f392 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x352>
 801f708:	2800      	cmp	r0, #0
 801f70a:	f43f af0b 	beq.w	801f524 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 801f70e:	f851 1027 	ldr.w	r1, [r1, r7, lsl #2]
 801f712:	9109      	str	r1, [sp, #36]	@ 0x24
 801f714:	0e09      	lsrs	r1, r1, #24
 801f716:	9111      	str	r1, [sp, #68]	@ 0x44
 801f718:	e704      	b.n	801f524 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 801f71a:	f8b8 1000 	ldrh.w	r1, [r8]
 801f71e:	43d2      	mvns	r2, r2
 801f720:	ea4f 2c21 	mov.w	ip, r1, asr #8
 801f724:	fa5f fe82 	uxtb.w	lr, r2
 801f728:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 801f72c:	fb0c fc0e 	mul.w	ip, ip, lr
 801f730:	10c8      	asrs	r0, r1, #3
 801f732:	00ca      	lsls	r2, r1, #3
 801f734:	f10c 0101 	add.w	r1, ip, #1
 801f738:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 801f73c:	0c39      	lsrs	r1, r7, #16
 801f73e:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 801f742:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 801f746:	4911      	ldr	r1, [pc, #68]	@ (801f78c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74c>)
 801f748:	fb00 f00e 	mul.w	r0, r0, lr
 801f74c:	fa5f fc8c 	uxtb.w	ip, ip
 801f750:	ea01 2c0c 	and.w	ip, r1, ip, lsl #8
 801f754:	b2d2      	uxtb	r2, r2
 801f756:	1c41      	adds	r1, r0, #1
 801f758:	fb02 f20e 	mul.w	r2, r2, lr
 801f75c:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 801f760:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801f764:	1c51      	adds	r1, r2, #1
 801f766:	00c0      	lsls	r0, r0, #3
 801f768:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801f76c:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801f770:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 801f774:	ea4c 0c00 	orr.w	ip, ip, r0
 801f778:	f3c7 07c4 	ubfx	r7, r7, #3, #5
 801f77c:	ea47 0c0c 	orr.w	ip, r7, ip
 801f780:	f8a8 c000 	strh.w	ip, [r8]
 801f784:	e7b7      	b.n	801f6f6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b6>
 801f786:	b01b      	add	sp, #108	@ 0x6c
 801f788:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801f78c:	fffff800 	.word	0xfffff800

0801f790 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>:
 801f790:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801f794:	e9dd 050a 	ldrd	r0, r5, [sp, #40]	@ 0x28
 801f798:	2d00      	cmp	r5, #0
 801f79a:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 801f79e:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	@ 0x24
 801f7a2:	f89d 7030 	ldrb.w	r7, [sp, #48]	@ 0x30
 801f7a6:	f89d c034 	ldrb.w	ip, [sp, #52]	@ 0x34
 801f7aa:	fb05 0e03 	mla	lr, r5, r3, r0
 801f7ae:	f2c0 808c 	blt.w	801f8ca <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x13a>
 801f7b2:	45a9      	cmp	r9, r5
 801f7b4:	f340 8089 	ble.w	801f8ca <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x13a>
 801f7b8:	2800      	cmp	r0, #0
 801f7ba:	f2c0 8084 	blt.w	801f8c6 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x136>
 801f7be:	4580      	cmp	r8, r0
 801f7c0:	f340 8081 	ble.w	801f8c6 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x136>
 801f7c4:	ea4f 045e 	mov.w	r4, lr, lsr #1
 801f7c8:	f01e 0f01 	tst.w	lr, #1
 801f7cc:	5d16      	ldrb	r6, [r2, r4]
 801f7ce:	bf0c      	ite	eq
 801f7d0:	f006 060f 	andeq.w	r6, r6, #15
 801f7d4:	1136      	asrne	r6, r6, #4
 801f7d6:	eb06 1606 	add.w	r6, r6, r6, lsl #4
 801f7da:	b2f6      	uxtb	r6, r6
 801f7dc:	1c44      	adds	r4, r0, #1
 801f7de:	d477      	bmi.n	801f8d0 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x140>
 801f7e0:	45a0      	cmp	r8, r4
 801f7e2:	dd75      	ble.n	801f8d0 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x140>
 801f7e4:	2f00      	cmp	r7, #0
 801f7e6:	d075      	beq.n	801f8d4 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x144>
 801f7e8:	f10e 0a01 	add.w	sl, lr, #1
 801f7ec:	ea4f 045a 	mov.w	r4, sl, lsr #1
 801f7f0:	f01a 0f01 	tst.w	sl, #1
 801f7f4:	5d14      	ldrb	r4, [r2, r4]
 801f7f6:	bf0c      	ite	eq
 801f7f8:	f004 040f 	andeq.w	r4, r4, #15
 801f7fc:	1124      	asrne	r4, r4, #4
 801f7fe:	eb04 1404 	add.w	r4, r4, r4, lsl #4
 801f802:	b2e4      	uxtb	r4, r4
 801f804:	3501      	adds	r5, #1
 801f806:	d469      	bmi.n	801f8dc <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x14c>
 801f808:	45a9      	cmp	r9, r5
 801f80a:	dd67      	ble.n	801f8dc <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x14c>
 801f80c:	f1bc 0f00 	cmp.w	ip, #0
 801f810:	d067      	beq.n	801f8e2 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x152>
 801f812:	2800      	cmp	r0, #0
 801f814:	db60      	blt.n	801f8d8 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x148>
 801f816:	4580      	cmp	r8, r0
 801f818:	dd5e      	ble.n	801f8d8 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x148>
 801f81a:	eb03 090e 	add.w	r9, r3, lr
 801f81e:	ea4f 0559 	mov.w	r5, r9, lsr #1
 801f822:	f019 0f01 	tst.w	r9, #1
 801f826:	5d55      	ldrb	r5, [r2, r5]
 801f828:	bf0c      	ite	eq
 801f82a:	f005 050f 	andeq.w	r5, r5, #15
 801f82e:	112d      	asrne	r5, r5, #4
 801f830:	eb05 1505 	add.w	r5, r5, r5, lsl #4
 801f834:	b2ed      	uxtb	r5, r5
 801f836:	3001      	adds	r0, #1
 801f838:	d456      	bmi.n	801f8e8 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x158>
 801f83a:	4580      	cmp	r8, r0
 801f83c:	dd54      	ble.n	801f8e8 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x158>
 801f83e:	2f00      	cmp	r7, #0
 801f840:	d054      	beq.n	801f8ec <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x15c>
 801f842:	3301      	adds	r3, #1
 801f844:	449e      	add	lr, r3
 801f846:	ea4f 035e 	mov.w	r3, lr, lsr #1
 801f84a:	f01e 0f01 	tst.w	lr, #1
 801f84e:	5cd0      	ldrb	r0, [r2, r3]
 801f850:	bf0c      	ite	eq
 801f852:	f000 000f 	andeq.w	r0, r0, #15
 801f856:	1100      	asrne	r0, r0, #4
 801f858:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 801f85c:	b2c3      	uxtb	r3, r0
 801f85e:	b2ba      	uxth	r2, r7
 801f860:	fa1f fc8c 	uxth.w	ip, ip
 801f864:	fb02 f00c 	mul.w	r0, r2, ip
 801f868:	ebc0 1c0c 	rsb	ip, r0, ip, lsl #4
 801f86c:	0112      	lsls	r2, r2, #4
 801f86e:	fa1f fc8c 	uxth.w	ip, ip
 801f872:	f5c2 7780 	rsb	r7, r2, #256	@ 0x100
 801f876:	1a12      	subs	r2, r2, r0
 801f878:	eba7 070c 	sub.w	r7, r7, ip
 801f87c:	b292      	uxth	r2, r2
 801f87e:	b2bf      	uxth	r7, r7
 801f880:	4362      	muls	r2, r4
 801f882:	fb06 2207 	mla	r2, r6, r7, r2
 801f886:	fb0c 2505 	mla	r5, ip, r5, r2
 801f88a:	fb00 5303 	mla	r3, r0, r3, r5
 801f88e:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801f892:	b1b3      	cbz	r3, 801f8c2 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x132>
 801f894:	f89d 2038 	ldrb.w	r2, [sp, #56]	@ 0x38
 801f898:	435a      	muls	r2, r3
 801f89a:	1c53      	adds	r3, r2, #1
 801f89c:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801f8a0:	4a2d      	ldr	r2, [pc, #180]	@ (801f958 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1c8>)
 801f8a2:	121b      	asrs	r3, r3, #8
 801f8a4:	6812      	ldr	r2, [r2, #0]
 801f8a6:	2bff      	cmp	r3, #255	@ 0xff
 801f8a8:	ea4f 2612 	mov.w	r6, r2, lsr #8
 801f8ac:	d120      	bne.n	801f8f0 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x160>
 801f8ae:	4b2b      	ldr	r3, [pc, #172]	@ (801f95c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1cc>)
 801f8b0:	0950      	lsrs	r0, r2, #5
 801f8b2:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801f8b6:	4033      	ands	r3, r6
 801f8b8:	4318      	orrs	r0, r3
 801f8ba:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801f8be:	4302      	orrs	r2, r0
 801f8c0:	800a      	strh	r2, [r1, #0]
 801f8c2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801f8c6:	2600      	movs	r6, #0
 801f8c8:	e788      	b.n	801f7dc <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x4c>
 801f8ca:	2400      	movs	r4, #0
 801f8cc:	4626      	mov	r6, r4
 801f8ce:	e799      	b.n	801f804 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 801f8d0:	2400      	movs	r4, #0
 801f8d2:	e797      	b.n	801f804 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 801f8d4:	463c      	mov	r4, r7
 801f8d6:	e795      	b.n	801f804 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 801f8d8:	2500      	movs	r5, #0
 801f8da:	e7ac      	b.n	801f836 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xa6>
 801f8dc:	2300      	movs	r3, #0
 801f8de:	461d      	mov	r5, r3
 801f8e0:	e7bd      	b.n	801f85e <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 801f8e2:	4663      	mov	r3, ip
 801f8e4:	4665      	mov	r5, ip
 801f8e6:	e7ba      	b.n	801f85e <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 801f8e8:	2300      	movs	r3, #0
 801f8ea:	e7b8      	b.n	801f85e <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 801f8ec:	463b      	mov	r3, r7
 801f8ee:	e7b6      	b.n	801f85e <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 801f8f0:	880d      	ldrh	r5, [r1, #0]
 801f8f2:	b29f      	uxth	r7, r3
 801f8f4:	122c      	asrs	r4, r5, #8
 801f8f6:	f3c2 4007 	ubfx	r0, r2, #16, #8
 801f8fa:	43db      	mvns	r3, r3
 801f8fc:	b2db      	uxtb	r3, r3
 801f8fe:	fb10 f007 	smulbb	r0, r0, r7
 801f902:	f004 04f8 	and.w	r4, r4, #248	@ 0xf8
 801f906:	fb04 0403 	mla	r4, r4, r3, r0
 801f90a:	b2f6      	uxtb	r6, r6
 801f90c:	10e8      	asrs	r0, r5, #3
 801f90e:	b2d2      	uxtb	r2, r2
 801f910:	00ed      	lsls	r5, r5, #3
 801f912:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 801f916:	fb12 f207 	smulbb	r2, r2, r7
 801f91a:	fb16 f607 	smulbb	r6, r6, r7
 801f91e:	b2ed      	uxtb	r5, r5
 801f920:	b2a4      	uxth	r4, r4
 801f922:	fb00 6603 	mla	r6, r0, r3, r6
 801f926:	fb05 2303 	mla	r3, r5, r3, r2
 801f92a:	b29a      	uxth	r2, r3
 801f92c:	1c63      	adds	r3, r4, #1
 801f92e:	b2b0      	uxth	r0, r6
 801f930:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 801f934:	1c53      	adds	r3, r2, #1
 801f936:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801f93a:	1c42      	adds	r2, r0, #1
 801f93c:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801f940:	f404 4478 	and.w	r4, r4, #63488	@ 0xf800
 801f944:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801f948:	0940      	lsrs	r0, r0, #5
 801f94a:	4323      	orrs	r3, r4
 801f94c:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801f950:	4303      	orrs	r3, r0
 801f952:	800b      	strh	r3, [r1, #0]
 801f954:	e7b5      	b.n	801f8c2 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x132>
 801f956:	bf00      	nop
 801f958:	20013f3c 	.word	0x20013f3c
 801f95c:	00fff800 	.word	0x00fff800

0801f960 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801f960:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801f964:	b097      	sub	sp, #92	@ 0x5c
 801f966:	e9dd 4621 	ldrd	r4, r6, [sp, #132]	@ 0x84
 801f96a:	9214      	str	r2, [sp, #80]	@ 0x50
 801f96c:	9309      	str	r3, [sp, #36]	@ 0x24
 801f96e:	9a25      	ldr	r2, [sp, #148]	@ 0x94
 801f970:	f89d 30a4 	ldrb.w	r3, [sp, #164]	@ 0xa4
 801f974:	910d      	str	r1, [sp, #52]	@ 0x34
 801f976:	930f      	str	r3, [sp, #60]	@ 0x3c
 801f978:	e9dd 1326 	ldrd	r1, r3, [sp, #152]	@ 0x98
 801f97c:	9015      	str	r0, [sp, #84]	@ 0x54
 801f97e:	6850      	ldr	r0, [r2, #4]
 801f980:	6812      	ldr	r2, [r2, #0]
 801f982:	fb00 1303 	mla	r3, r0, r3, r1
 801f986:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 801f98a:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801f98c:	689b      	ldr	r3, [r3, #8]
 801f98e:	3301      	adds	r3, #1
 801f990:	f023 0301 	bic.w	r3, r3, #1
 801f994:	930a      	str	r3, [sp, #40]	@ 0x28
 801f996:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801f998:	681f      	ldr	r7, [r3, #0]
 801f99a:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801f99c:	2b00      	cmp	r3, #0
 801f99e:	dc03      	bgt.n	801f9a8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801f9a0:	9b14      	ldr	r3, [sp, #80]	@ 0x50
 801f9a2:	2b00      	cmp	r3, #0
 801f9a4:	f340 8287 	ble.w	801feb6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x556>
 801f9a8:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801f9aa:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801f9ae:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801f9b2:	1e48      	subs	r0, r1, #1
 801f9b4:	f102 3cff 	add.w	ip, r2, #4294967295
 801f9b8:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801f9ba:	2b00      	cmp	r3, #0
 801f9bc:	f340 80c4 	ble.w	801fb48 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 801f9c0:	ea5f 4e24 	movs.w	lr, r4, asr #16
 801f9c4:	ea4f 4326 	mov.w	r3, r6, asr #16
 801f9c8:	d406      	bmi.n	801f9d8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801f9ca:	4586      	cmp	lr, r0
 801f9cc:	da04      	bge.n	801f9d8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801f9ce:	2b00      	cmp	r3, #0
 801f9d0:	db02      	blt.n	801f9d8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801f9d2:	4563      	cmp	r3, ip
 801f9d4:	f2c0 80b9 	blt.w	801fb4a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ea>
 801f9d8:	f11e 0e01 	adds.w	lr, lr, #1
 801f9dc:	f100 80aa 	bmi.w	801fb34 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 801f9e0:	4571      	cmp	r1, lr
 801f9e2:	f2c0 80a7 	blt.w	801fb34 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 801f9e6:	3301      	adds	r3, #1
 801f9e8:	f100 80a4 	bmi.w	801fb34 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 801f9ec:	429a      	cmp	r2, r3
 801f9ee:	f2c0 80a1 	blt.w	801fb34 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 801f9f2:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801f9f4:	f9bd a028 	ldrsh.w	sl, [sp, #40]	@ 0x28
 801f9f8:	930e      	str	r3, [sp, #56]	@ 0x38
 801f9fa:	46c8      	mov	r8, r9
 801f9fc:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801f9fe:	2b00      	cmp	r3, #0
 801fa00:	f340 80c3 	ble.w	801fb8a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 801fa04:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801fa06:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
 801fa0a:	1423      	asrs	r3, r4, #16
 801fa0c:	ea4f 4026 	mov.w	r0, r6, asr #16
 801fa10:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801fa14:	f3c6 3103 	ubfx	r1, r6, #12, #4
 801fa18:	f100 814d 	bmi.w	801fcb6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 801fa1c:	f10c 3bff 	add.w	fp, ip, #4294967295
 801fa20:	455b      	cmp	r3, fp
 801fa22:	f280 8148 	bge.w	801fcb6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 801fa26:	2800      	cmp	r0, #0
 801fa28:	f2c0 8145 	blt.w	801fcb6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 801fa2c:	f10e 3bff 	add.w	fp, lr, #4294967295
 801fa30:	4558      	cmp	r0, fp
 801fa32:	f280 8140 	bge.w	801fcb6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 801fa36:	9d0a      	ldr	r5, [sp, #40]	@ 0x28
 801fa38:	fb00 3305 	mla	r3, r0, r5, r3
 801fa3c:	0858      	lsrs	r0, r3, #1
 801fa3e:	07dd      	lsls	r5, r3, #31
 801fa40:	f817 c000 	ldrb.w	ip, [r7, r0]
 801fa44:	bf54      	ite	pl
 801fa46:	f00c 0c0f 	andpl.w	ip, ip, #15
 801fa4a:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 801fa4e:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801fa52:	fa5f fc8c 	uxtb.w	ip, ip
 801fa56:	2a00      	cmp	r2, #0
 801fa58:	f000 80db 	beq.w	801fc12 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b2>
 801fa5c:	1c58      	adds	r0, r3, #1
 801fa5e:	ea4f 0e50 	mov.w	lr, r0, lsr #1
 801fa62:	07c0      	lsls	r0, r0, #31
 801fa64:	f817 e00e 	ldrb.w	lr, [r7, lr]
 801fa68:	bf54      	ite	pl
 801fa6a:	f00e 0e0f 	andpl.w	lr, lr, #15
 801fa6e:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
 801fa72:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
 801fa76:	fa5f f08e 	uxtb.w	r0, lr
 801fa7a:	9010      	str	r0, [sp, #64]	@ 0x40
 801fa7c:	b1c9      	cbz	r1, 801fab2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801fa7e:	4453      	add	r3, sl
 801fa80:	0858      	lsrs	r0, r3, #1
 801fa82:	07dd      	lsls	r5, r3, #31
 801fa84:	5c38      	ldrb	r0, [r7, r0]
 801fa86:	bf54      	ite	pl
 801fa88:	f000 000f 	andpl.w	r0, r0, #15
 801fa8c:	1100      	asrmi	r0, r0, #4
 801fa8e:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 801fa92:	3301      	adds	r3, #1
 801fa94:	b2c0      	uxtb	r0, r0
 801fa96:	900b      	str	r0, [sp, #44]	@ 0x2c
 801fa98:	0858      	lsrs	r0, r3, #1
 801fa9a:	07dd      	lsls	r5, r3, #31
 801fa9c:	f817 e000 	ldrb.w	lr, [r7, r0]
 801faa0:	bf54      	ite	pl
 801faa2:	f00e 030f 	andpl.w	r3, lr, #15
 801faa6:	ea4f 132e 	movmi.w	r3, lr, asr #4
 801faaa:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 801faae:	b2db      	uxtb	r3, r3
 801fab0:	9311      	str	r3, [sp, #68]	@ 0x44
 801fab2:	b292      	uxth	r2, r2
 801fab4:	b289      	uxth	r1, r1
 801fab6:	fb02 f301 	mul.w	r3, r2, r1
 801faba:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
 801fabe:	0112      	lsls	r2, r2, #4
 801fac0:	b289      	uxth	r1, r1
 801fac2:	f5c2 7080 	rsb	r0, r2, #256	@ 0x100
 801fac6:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 801fac8:	1ad2      	subs	r2, r2, r3
 801faca:	1a40      	subs	r0, r0, r1
 801facc:	b292      	uxth	r2, r2
 801face:	436a      	muls	r2, r5
 801fad0:	b280      	uxth	r0, r0
 801fad2:	fb0c 2c00 	mla	ip, ip, r0, r2
 801fad6:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 801fad8:	fb01 c102 	mla	r1, r1, r2, ip
 801fadc:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 801fade:	fb03 1302 	mla	r3, r3, r2, r1
 801fae2:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801fae6:	b1db      	cbz	r3, 801fb20 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 801fae8:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 801faea:	4353      	muls	r3, r2
 801faec:	1c5a      	adds	r2, r3, #1
 801faee:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 801faf2:	4ac6      	ldr	r2, [pc, #792]	@ (801fe0c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>)
 801faf4:	121b      	asrs	r3, r3, #8
 801faf6:	6812      	ldr	r2, [r2, #0]
 801faf8:	2bff      	cmp	r3, #255	@ 0xff
 801fafa:	ea4f 2c12 	mov.w	ip, r2, lsr #8
 801fafe:	f040 8099 	bne.w	801fc34 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d4>
 801fb02:	0953      	lsrs	r3, r2, #5
 801fb04:	f42c 6cff 	bic.w	ip, ip, #2040	@ 0x7f8
 801fb08:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801fb0c:	f02c 0c07 	bic.w	ip, ip, #7
 801fb10:	ea43 0c0c 	orr.w	ip, r3, ip
 801fb14:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801fb18:	ea4c 0202 	orr.w	r2, ip, r2
 801fb1c:	f8a8 2000 	strh.w	r2, [r8]
 801fb20:	9b23      	ldr	r3, [sp, #140]	@ 0x8c
 801fb22:	441c      	add	r4, r3
 801fb24:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801fb26:	441e      	add	r6, r3
 801fb28:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801fb2a:	3b01      	subs	r3, #1
 801fb2c:	f108 0802 	add.w	r8, r8, #2
 801fb30:	930e      	str	r3, [sp, #56]	@ 0x38
 801fb32:	e763      	b.n	801f9fc <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 801fb34:	9b23      	ldr	r3, [sp, #140]	@ 0x8c
 801fb36:	441c      	add	r4, r3
 801fb38:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801fb3a:	441e      	add	r6, r3
 801fb3c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801fb3e:	3b01      	subs	r3, #1
 801fb40:	9309      	str	r3, [sp, #36]	@ 0x24
 801fb42:	f109 0902 	add.w	r9, r9, #2
 801fb46:	e737      	b.n	801f9b8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 801fb48:	d024      	beq.n	801fb94 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801fb4a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801fb4c:	9823      	ldr	r0, [sp, #140]	@ 0x8c
 801fb4e:	3b01      	subs	r3, #1
 801fb50:	fb00 4003 	mla	r0, r0, r3, r4
 801fb54:	1400      	asrs	r0, r0, #16
 801fb56:	f53f af4c 	bmi.w	801f9f2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801fb5a:	3901      	subs	r1, #1
 801fb5c:	4288      	cmp	r0, r1
 801fb5e:	f6bf af48 	bge.w	801f9f2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801fb62:	9924      	ldr	r1, [sp, #144]	@ 0x90
 801fb64:	fb01 6303 	mla	r3, r1, r3, r6
 801fb68:	141b      	asrs	r3, r3, #16
 801fb6a:	f53f af42 	bmi.w	801f9f2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801fb6e:	3a01      	subs	r2, #1
 801fb70:	4293      	cmp	r3, r2
 801fb72:	f6bf af3e 	bge.w	801f9f2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801fb76:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	@ 0x28
 801fb7a:	f8dd b024 	ldr.w	fp, [sp, #36]	@ 0x24
 801fb7e:	930e      	str	r3, [sp, #56]	@ 0x38
 801fb80:	46c8      	mov	r8, r9
 801fb82:	f1bb 0f00 	cmp.w	fp, #0
 801fb86:	f300 80b7 	bgt.w	801fcf8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x398>
 801fb8a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801fb8c:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 801fb90:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 801fb94:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801fb96:	2b00      	cmp	r3, #0
 801fb98:	f340 818d 	ble.w	801feb6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x556>
 801fb9c:	ee30 0a04 	vadd.f32	s0, s0, s8
 801fba0:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 801fba4:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801fba8:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801fbaa:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801fbae:	ee31 1a05 	vadd.f32	s2, s2, s10
 801fbb2:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801fbb6:	eef0 6a62 	vmov.f32	s13, s5
 801fbba:	ee61 7a27 	vmul.f32	s15, s2, s15
 801fbbe:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801fbc2:	ee77 2a62 	vsub.f32	s5, s14, s5
 801fbc6:	ee16 4a90 	vmov	r4, s13
 801fbca:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801fbce:	eef0 6a43 	vmov.f32	s13, s6
 801fbd2:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801fbd6:	ee12 2a90 	vmov	r2, s5
 801fbda:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801fbde:	fb92 f3f3 	sdiv	r3, r2, r3
 801fbe2:	ee13 2a10 	vmov	r2, s6
 801fbe6:	9323      	str	r3, [sp, #140]	@ 0x8c
 801fbe8:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801fbea:	fb92 f3f3 	sdiv	r3, r2, r3
 801fbee:	9324      	str	r3, [sp, #144]	@ 0x90
 801fbf0:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801fbf2:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 801fbf4:	3b01      	subs	r3, #1
 801fbf6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801fbfa:	930d      	str	r3, [sp, #52]	@ 0x34
 801fbfc:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801fbfe:	bf08      	it	eq
 801fc00:	4613      	moveq	r3, r2
 801fc02:	ee16 6a90 	vmov	r6, s13
 801fc06:	9309      	str	r3, [sp, #36]	@ 0x24
 801fc08:	eeb0 3a67 	vmov.f32	s6, s15
 801fc0c:	eef0 2a47 	vmov.f32	s5, s14
 801fc10:	e6c3      	b.n	801f99a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 801fc12:	2900      	cmp	r1, #0
 801fc14:	f43f af4d 	beq.w	801fab2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801fc18:	eb0a 0003 	add.w	r0, sl, r3
 801fc1c:	0843      	lsrs	r3, r0, #1
 801fc1e:	07c0      	lsls	r0, r0, #31
 801fc20:	5cfb      	ldrb	r3, [r7, r3]
 801fc22:	bf54      	ite	pl
 801fc24:	f003 030f 	andpl.w	r3, r3, #15
 801fc28:	111b      	asrmi	r3, r3, #4
 801fc2a:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 801fc2e:	b2db      	uxtb	r3, r3
 801fc30:	930b      	str	r3, [sp, #44]	@ 0x2c
 801fc32:	e73e      	b.n	801fab2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801fc34:	f8b8 e000 	ldrh.w	lr, [r8]
 801fc38:	fa1f fb83 	uxth.w	fp, r3
 801fc3c:	ea4f 202e 	mov.w	r0, lr, asr #8
 801fc40:	f3c2 4107 	ubfx	r1, r2, #16, #8
 801fc44:	43db      	mvns	r3, r3
 801fc46:	b2db      	uxtb	r3, r3
 801fc48:	fb11 f10b 	smulbb	r1, r1, fp
 801fc4c:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 801fc50:	fb00 1003 	mla	r0, r0, r3, r1
 801fc54:	fa5f fc8c 	uxtb.w	ip, ip
 801fc58:	ea4f 01ee 	mov.w	r1, lr, asr #3
 801fc5c:	b2d2      	uxtb	r2, r2
 801fc5e:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801fc62:	b280      	uxth	r0, r0
 801fc64:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 801fc68:	fb1c fc0b 	smulbb	ip, ip, fp
 801fc6c:	fa5f fe8e 	uxtb.w	lr, lr
 801fc70:	fb12 fb0b 	smulbb	fp, r2, fp
 801fc74:	fb01 cc03 	mla	ip, r1, r3, ip
 801fc78:	fb0e bb03 	mla	fp, lr, r3, fp
 801fc7c:	1c43      	adds	r3, r0, #1
 801fc7e:	fa1f fc8c 	uxth.w	ip, ip
 801fc82:	fa1f fb8b 	uxth.w	fp, fp
 801fc86:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801fc8a:	f400 4378 	and.w	r3, r0, #63488	@ 0xf800
 801fc8e:	f10c 0101 	add.w	r1, ip, #1
 801fc92:	f10b 0001 	add.w	r0, fp, #1
 801fc96:	eb00 201b 	add.w	r0, r0, fp, lsr #8
 801fc9a:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 801fc9e:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 801fca2:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 801fca6:	4318      	orrs	r0, r3
 801fca8:	f40c 6cfc 	and.w	ip, ip, #2016	@ 0x7e0
 801fcac:	ea40 000c 	orr.w	r0, r0, ip
 801fcb0:	f8a8 0000 	strh.w	r0, [r8]
 801fcb4:	e734      	b.n	801fb20 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 801fcb6:	f113 0b01 	adds.w	fp, r3, #1
 801fcba:	f53f af31 	bmi.w	801fb20 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 801fcbe:	45dc      	cmp	ip, fp
 801fcc0:	f6ff af2e 	blt.w	801fb20 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 801fcc4:	f110 0b01 	adds.w	fp, r0, #1
 801fcc8:	f53f af2a 	bmi.w	801fb20 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 801fccc:	45de      	cmp	lr, fp
 801fcce:	f6ff af27 	blt.w	801fb20 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 801fcd2:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
 801fcd4:	9302      	str	r3, [sp, #8]
 801fcd6:	fa0f f38e 	sxth.w	r3, lr
 801fcda:	9301      	str	r3, [sp, #4]
 801fcdc:	fa0f f38c 	sxth.w	r3, ip
 801fce0:	e9cd 0203 	strd	r0, r2, [sp, #12]
 801fce4:	e9cd 1505 	strd	r1, r5, [sp, #20]
 801fce8:	9300      	str	r3, [sp, #0]
 801fcea:	463a      	mov	r2, r7
 801fcec:	4653      	mov	r3, sl
 801fcee:	4641      	mov	r1, r8
 801fcf0:	9815      	ldr	r0, [sp, #84]	@ 0x54
 801fcf2:	f7ff fd4d 	bl	801f790 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>
 801fcf6:	e713      	b.n	801fb20 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 801fcf8:	9d0a      	ldr	r5, [sp, #40]	@ 0x28
 801fcfa:	1422      	asrs	r2, r4, #16
 801fcfc:	1433      	asrs	r3, r6, #16
 801fcfe:	fb05 2303 	mla	r3, r5, r3, r2
 801fd02:	085a      	lsrs	r2, r3, #1
 801fd04:	07dd      	lsls	r5, r3, #31
 801fd06:	5cba      	ldrb	r2, [r7, r2]
 801fd08:	bf54      	ite	pl
 801fd0a:	f002 020f 	andpl.w	r2, r2, #15
 801fd0e:	1112      	asrmi	r2, r2, #4
 801fd10:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801fd14:	f3c4 3103 	ubfx	r1, r4, #12, #4
 801fd18:	f3c6 3003 	ubfx	r0, r6, #12, #4
 801fd1c:	b2d2      	uxtb	r2, r2
 801fd1e:	2900      	cmp	r1, #0
 801fd20:	d076      	beq.n	801fe10 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 801fd22:	f103 0e01 	add.w	lr, r3, #1
 801fd26:	ea4f 0c5e 	mov.w	ip, lr, lsr #1
 801fd2a:	f01e 0f01 	tst.w	lr, #1
 801fd2e:	f817 c00c 	ldrb.w	ip, [r7, ip]
 801fd32:	bf0c      	ite	eq
 801fd34:	f00c 0c0f 	andeq.w	ip, ip, #15
 801fd38:	ea4f 1c2c 	movne.w	ip, ip, asr #4
 801fd3c:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801fd40:	fa5f f58c 	uxtb.w	r5, ip
 801fd44:	9512      	str	r5, [sp, #72]	@ 0x48
 801fd46:	b300      	cbz	r0, 801fd8a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42a>
 801fd48:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 801fd4a:	442b      	add	r3, r5
 801fd4c:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 801fd50:	07dd      	lsls	r5, r3, #31
 801fd52:	f817 c00c 	ldrb.w	ip, [r7, ip]
 801fd56:	bf54      	ite	pl
 801fd58:	f00c 0c0f 	andpl.w	ip, ip, #15
 801fd5c:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 801fd60:	3301      	adds	r3, #1
 801fd62:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801fd66:	fa5f f58c 	uxtb.w	r5, ip
 801fd6a:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 801fd6e:	950c      	str	r5, [sp, #48]	@ 0x30
 801fd70:	f817 c00c 	ldrb.w	ip, [r7, ip]
 801fd74:	07dd      	lsls	r5, r3, #31
 801fd76:	bf54      	ite	pl
 801fd78:	f00c 0c0f 	andpl.w	ip, ip, #15
 801fd7c:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 801fd80:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801fd84:	fa5f f38c 	uxtb.w	r3, ip
 801fd88:	9313      	str	r3, [sp, #76]	@ 0x4c
 801fd8a:	b289      	uxth	r1, r1
 801fd8c:	b280      	uxth	r0, r0
 801fd8e:	fb01 f300 	mul.w	r3, r1, r0
 801fd92:	ebc3 1000 	rsb	r0, r3, r0, lsl #4
 801fd96:	0109      	lsls	r1, r1, #4
 801fd98:	b280      	uxth	r0, r0
 801fd9a:	f5c1 7c80 	rsb	ip, r1, #256	@ 0x100
 801fd9e:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 801fda0:	1ac9      	subs	r1, r1, r3
 801fda2:	ebac 0c00 	sub.w	ip, ip, r0
 801fda6:	b289      	uxth	r1, r1
 801fda8:	4369      	muls	r1, r5
 801fdaa:	fa1f fc8c 	uxth.w	ip, ip
 801fdae:	fb02 120c 	mla	r2, r2, ip, r1
 801fdb2:	990c      	ldr	r1, [sp, #48]	@ 0x30
 801fdb4:	fb00 2001 	mla	r0, r0, r1, r2
 801fdb8:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 801fdba:	fb03 0302 	mla	r3, r3, r2, r0
 801fdbe:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801fdc2:	b1d3      	cbz	r3, 801fdfa <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49a>
 801fdc4:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 801fdc6:	4353      	muls	r3, r2
 801fdc8:	1c5a      	adds	r2, r3, #1
 801fdca:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 801fdce:	4a0f      	ldr	r2, [pc, #60]	@ (801fe0c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>)
 801fdd0:	121b      	asrs	r3, r3, #8
 801fdd2:	6812      	ldr	r2, [r2, #0]
 801fdd4:	2bff      	cmp	r3, #255	@ 0xff
 801fdd6:	ea4f 2c12 	mov.w	ip, r2, lsr #8
 801fdda:	d12d      	bne.n	801fe38 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d8>
 801fddc:	0953      	lsrs	r3, r2, #5
 801fdde:	f42c 6cff 	bic.w	ip, ip, #2040	@ 0x7f8
 801fde2:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801fde6:	f02c 0c07 	bic.w	ip, ip, #7
 801fdea:	ea43 0c0c 	orr.w	ip, r3, ip
 801fdee:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801fdf2:	ea4c 0202 	orr.w	r2, ip, r2
 801fdf6:	f8a8 2000 	strh.w	r2, [r8]
 801fdfa:	9b23      	ldr	r3, [sp, #140]	@ 0x8c
 801fdfc:	441c      	add	r4, r3
 801fdfe:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801fe00:	f108 0802 	add.w	r8, r8, #2
 801fe04:	441e      	add	r6, r3
 801fe06:	f10b 3bff 	add.w	fp, fp, #4294967295
 801fe0a:	e6ba      	b.n	801fb82 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x222>
 801fe0c:	20013f3c 	.word	0x20013f3c
 801fe10:	2800      	cmp	r0, #0
 801fe12:	d0ba      	beq.n	801fd8a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42a>
 801fe14:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 801fe16:	442b      	add	r3, r5
 801fe18:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 801fe1c:	07db      	lsls	r3, r3, #31
 801fe1e:	f817 c00c 	ldrb.w	ip, [r7, ip]
 801fe22:	bf54      	ite	pl
 801fe24:	f00c 0c0f 	andpl.w	ip, ip, #15
 801fe28:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 801fe2c:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801fe30:	fa5f f38c 	uxtb.w	r3, ip
 801fe34:	930c      	str	r3, [sp, #48]	@ 0x30
 801fe36:	e7a8      	b.n	801fd8a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42a>
 801fe38:	f8b8 e000 	ldrh.w	lr, [r8]
 801fe3c:	fa1f fa83 	uxth.w	sl, r3
 801fe40:	ea4f 202e 	mov.w	r0, lr, asr #8
 801fe44:	f3c2 4107 	ubfx	r1, r2, #16, #8
 801fe48:	43db      	mvns	r3, r3
 801fe4a:	b2db      	uxtb	r3, r3
 801fe4c:	fb11 f10a 	smulbb	r1, r1, sl
 801fe50:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 801fe54:	fb00 1003 	mla	r0, r0, r3, r1
 801fe58:	b2d2      	uxtb	r2, r2
 801fe5a:	ea4f 01ee 	mov.w	r1, lr, asr #3
 801fe5e:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801fe62:	fa5f fe8e 	uxtb.w	lr, lr
 801fe66:	fb12 f20a 	smulbb	r2, r2, sl
 801fe6a:	fb0e 2203 	mla	r2, lr, r3, r2
 801fe6e:	fa5f fc8c 	uxtb.w	ip, ip
 801fe72:	b280      	uxth	r0, r0
 801fe74:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 801fe78:	b292      	uxth	r2, r2
 801fe7a:	fb1c fc0a 	smulbb	ip, ip, sl
 801fe7e:	fb01 cc03 	mla	ip, r1, r3, ip
 801fe82:	1c43      	adds	r3, r0, #1
 801fe84:	1c51      	adds	r1, r2, #1
 801fe86:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801fe8a:	eb01 2112 	add.w	r1, r1, r2, lsr #8
 801fe8e:	fa1f fc8c 	uxth.w	ip, ip
 801fe92:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 801fe96:	f400 4078 	and.w	r0, r0, #63488	@ 0xf800
 801fe9a:	4308      	orrs	r0, r1
 801fe9c:	f10c 0101 	add.w	r1, ip, #1
 801fea0:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 801fea4:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 801fea8:	f40c 6cfc 	and.w	ip, ip, #2016	@ 0x7e0
 801feac:	ea40 000c 	orr.w	r0, r0, ip
 801feb0:	f8a8 0000 	strh.w	r0, [r8]
 801feb4:	e7a1      	b.n	801fdfa <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49a>
 801feb6:	b017      	add	sp, #92	@ 0x5c
 801feb8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801febc <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>:
 801febc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801fec0:	e9dd 050a 	ldrd	r0, r5, [sp, #40]	@ 0x28
 801fec4:	2d00      	cmp	r5, #0
 801fec6:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 801feca:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	@ 0x24
 801fece:	f89d 7030 	ldrb.w	r7, [sp, #48]	@ 0x30
 801fed2:	f89d c034 	ldrb.w	ip, [sp, #52]	@ 0x34
 801fed6:	fb05 0e03 	mla	lr, r5, r3, r0
 801feda:	f2c0 80b0 	blt.w	802003e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x182>
 801fede:	45a9      	cmp	r9, r5
 801fee0:	f340 80ad 	ble.w	802003e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x182>
 801fee4:	2800      	cmp	r0, #0
 801fee6:	f2c0 80a8 	blt.w	802003a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17e>
 801feea:	4580      	cmp	r8, r0
 801feec:	f340 80a5 	ble.w	802003a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17e>
 801fef0:	ea4f 045e 	mov.w	r4, lr, lsr #1
 801fef4:	f01e 0f01 	tst.w	lr, #1
 801fef8:	5d16      	ldrb	r6, [r2, r4]
 801fefa:	bf0c      	ite	eq
 801fefc:	f006 060f 	andeq.w	r6, r6, #15
 801ff00:	1136      	asrne	r6, r6, #4
 801ff02:	eb06 1606 	add.w	r6, r6, r6, lsl #4
 801ff06:	b2f6      	uxtb	r6, r6
 801ff08:	1c44      	adds	r4, r0, #1
 801ff0a:	f100 809b 	bmi.w	8020044 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x188>
 801ff0e:	45a0      	cmp	r8, r4
 801ff10:	f340 8098 	ble.w	8020044 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x188>
 801ff14:	2f00      	cmp	r7, #0
 801ff16:	f000 8097 	beq.w	8020048 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x18c>
 801ff1a:	f10e 0a01 	add.w	sl, lr, #1
 801ff1e:	ea4f 045a 	mov.w	r4, sl, lsr #1
 801ff22:	f01a 0f01 	tst.w	sl, #1
 801ff26:	5d14      	ldrb	r4, [r2, r4]
 801ff28:	bf0c      	ite	eq
 801ff2a:	f004 040f 	andeq.w	r4, r4, #15
 801ff2e:	1124      	asrne	r4, r4, #4
 801ff30:	eb04 1404 	add.w	r4, r4, r4, lsl #4
 801ff34:	b2e4      	uxtb	r4, r4
 801ff36:	3501      	adds	r5, #1
 801ff38:	f100 808a 	bmi.w	8020050 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x194>
 801ff3c:	45a9      	cmp	r9, r5
 801ff3e:	f340 8087 	ble.w	8020050 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x194>
 801ff42:	f1bc 0f00 	cmp.w	ip, #0
 801ff46:	f000 8086 	beq.w	8020056 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x19a>
 801ff4a:	2800      	cmp	r0, #0
 801ff4c:	db7e      	blt.n	802004c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x190>
 801ff4e:	4580      	cmp	r8, r0
 801ff50:	dd7c      	ble.n	802004c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x190>
 801ff52:	eb03 090e 	add.w	r9, r3, lr
 801ff56:	ea4f 0559 	mov.w	r5, r9, lsr #1
 801ff5a:	f019 0f01 	tst.w	r9, #1
 801ff5e:	5d55      	ldrb	r5, [r2, r5]
 801ff60:	bf0c      	ite	eq
 801ff62:	f005 050f 	andeq.w	r5, r5, #15
 801ff66:	112d      	asrne	r5, r5, #4
 801ff68:	eb05 1505 	add.w	r5, r5, r5, lsl #4
 801ff6c:	b2ed      	uxtb	r5, r5
 801ff6e:	3001      	adds	r0, #1
 801ff70:	d474      	bmi.n	802005c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a0>
 801ff72:	4580      	cmp	r8, r0
 801ff74:	dd72      	ble.n	802005c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a0>
 801ff76:	2f00      	cmp	r7, #0
 801ff78:	d072      	beq.n	8020060 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a4>
 801ff7a:	3301      	adds	r3, #1
 801ff7c:	449e      	add	lr, r3
 801ff7e:	ea4f 035e 	mov.w	r3, lr, lsr #1
 801ff82:	f01e 0f01 	tst.w	lr, #1
 801ff86:	5cd0      	ldrb	r0, [r2, r3]
 801ff88:	bf0c      	ite	eq
 801ff8a:	f000 000f 	andeq.w	r0, r0, #15
 801ff8e:	1100      	asrne	r0, r0, #4
 801ff90:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 801ff94:	b2c3      	uxtb	r3, r0
 801ff96:	b2ba      	uxth	r2, r7
 801ff98:	fa1f fc8c 	uxth.w	ip, ip
 801ff9c:	fb02 f00c 	mul.w	r0, r2, ip
 801ffa0:	ebc0 1c0c 	rsb	ip, r0, ip, lsl #4
 801ffa4:	0112      	lsls	r2, r2, #4
 801ffa6:	fa1f fc8c 	uxth.w	ip, ip
 801ffaa:	f5c2 7780 	rsb	r7, r2, #256	@ 0x100
 801ffae:	1a12      	subs	r2, r2, r0
 801ffb0:	eba7 070c 	sub.w	r7, r7, ip
 801ffb4:	b292      	uxth	r2, r2
 801ffb6:	b2bf      	uxth	r7, r7
 801ffb8:	4362      	muls	r2, r4
 801ffba:	fb06 2207 	mla	r2, r6, r7, r2
 801ffbe:	fb0c 2505 	mla	r5, ip, r5, r2
 801ffc2:	fb00 5303 	mla	r3, r0, r3, r5
 801ffc6:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801ffca:	b3a3      	cbz	r3, 8020036 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17a>
 801ffcc:	4a25      	ldr	r2, [pc, #148]	@ (8020064 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a8>)
 801ffce:	880e      	ldrh	r6, [r1, #0]
 801ffd0:	6815      	ldr	r5, [r2, #0]
 801ffd2:	1234      	asrs	r4, r6, #8
 801ffd4:	b29a      	uxth	r2, r3
 801ffd6:	f3c5 4007 	ubfx	r0, r5, #16, #8
 801ffda:	43db      	mvns	r3, r3
 801ffdc:	b2db      	uxtb	r3, r3
 801ffde:	fb10 f002 	smulbb	r0, r0, r2
 801ffe2:	f004 04f8 	and.w	r4, r4, #248	@ 0xf8
 801ffe6:	fb04 0403 	mla	r4, r4, r3, r0
 801ffea:	f3c5 2707 	ubfx	r7, r5, #8, #8
 801ffee:	10f0      	asrs	r0, r6, #3
 801fff0:	b2ed      	uxtb	r5, r5
 801fff2:	00f6      	lsls	r6, r6, #3
 801fff4:	fb17 f702 	smulbb	r7, r7, r2
 801fff8:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 801fffc:	fb15 f202 	smulbb	r2, r5, r2
 8020000:	b2f6      	uxtb	r6, r6
 8020002:	b2a4      	uxth	r4, r4
 8020004:	fb00 7003 	mla	r0, r0, r3, r7
 8020008:	fb06 2303 	mla	r3, r6, r3, r2
 802000c:	b29a      	uxth	r2, r3
 802000e:	1c63      	adds	r3, r4, #1
 8020010:	b280      	uxth	r0, r0
 8020012:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 8020016:	1c53      	adds	r3, r2, #1
 8020018:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 802001c:	1c42      	adds	r2, r0, #1
 802001e:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8020022:	f404 4478 	and.w	r4, r4, #63488	@ 0xf800
 8020026:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 802002a:	0940      	lsrs	r0, r0, #5
 802002c:	4323      	orrs	r3, r4
 802002e:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8020032:	4303      	orrs	r3, r0
 8020034:	800b      	strh	r3, [r1, #0]
 8020036:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 802003a:	2600      	movs	r6, #0
 802003c:	e764      	b.n	801ff08 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x4c>
 802003e:	2400      	movs	r4, #0
 8020040:	4626      	mov	r6, r4
 8020042:	e778      	b.n	801ff36 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 8020044:	2400      	movs	r4, #0
 8020046:	e776      	b.n	801ff36 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 8020048:	463c      	mov	r4, r7
 802004a:	e774      	b.n	801ff36 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 802004c:	2500      	movs	r5, #0
 802004e:	e78e      	b.n	801ff6e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xb2>
 8020050:	2300      	movs	r3, #0
 8020052:	461d      	mov	r5, r3
 8020054:	e79f      	b.n	801ff96 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 8020056:	4663      	mov	r3, ip
 8020058:	4665      	mov	r5, ip
 802005a:	e79c      	b.n	801ff96 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 802005c:	2300      	movs	r3, #0
 802005e:	e79a      	b.n	801ff96 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 8020060:	463b      	mov	r3, r7
 8020062:	e798      	b.n	801ff96 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 8020064:	20013f3c 	.word	0x20013f3c

08020068 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8020068:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802006c:	b093      	sub	sp, #76	@ 0x4c
 802006e:	461d      	mov	r5, r3
 8020070:	920c      	str	r2, [sp, #48]	@ 0x30
 8020072:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 8020074:	9107      	str	r1, [sp, #28]
 8020076:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	@ 0x88
 802007a:	9011      	str	r0, [sp, #68]	@ 0x44
 802007c:	6850      	ldr	r0, [r2, #4]
 802007e:	6812      	ldr	r2, [r2, #0]
 8020080:	fb00 1303 	mla	r3, r0, r3, r1
 8020084:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 8020088:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 802008a:	689b      	ldr	r3, [r3, #8]
 802008c:	3301      	adds	r3, #1
 802008e:	f023 0301 	bic.w	r3, r3, #1
 8020092:	9306      	str	r3, [sp, #24]
 8020094:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8020096:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	@ 0x74
 802009a:	681f      	ldr	r7, [r3, #0]
 802009c:	9b07      	ldr	r3, [sp, #28]
 802009e:	2b00      	cmp	r3, #0
 80200a0:	dc03      	bgt.n	80200aa <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42>
 80200a2:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 80200a4:	2b00      	cmp	r3, #0
 80200a6:	f340 8267 	ble.w	8020578 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x510>
 80200aa:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 80200ac:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80200b0:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 80200b4:	1e48      	subs	r0, r1, #1
 80200b6:	f102 3cff 	add.w	ip, r2, #4294967295
 80200ba:	2d00      	cmp	r5, #0
 80200bc:	f340 80b8 	ble.w	8020230 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 80200c0:	ea5f 4e24 	movs.w	lr, r4, asr #16
 80200c4:	ea4f 4326 	mov.w	r3, r6, asr #16
 80200c8:	d406      	bmi.n	80200d8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 80200ca:	4586      	cmp	lr, r0
 80200cc:	da04      	bge.n	80200d8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 80200ce:	2b00      	cmp	r3, #0
 80200d0:	db02      	blt.n	80200d8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 80200d2:	4563      	cmp	r3, ip
 80200d4:	f2c0 80ad 	blt.w	8020232 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ca>
 80200d8:	f11e 0e01 	adds.w	lr, lr, #1
 80200dc:	f100 80a0 	bmi.w	8020220 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 80200e0:	4571      	cmp	r1, lr
 80200e2:	f2c0 809d 	blt.w	8020220 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 80200e6:	3301      	adds	r3, #1
 80200e8:	f100 809a 	bmi.w	8020220 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 80200ec:	429a      	cmp	r2, r3
 80200ee:	f2c0 8097 	blt.w	8020220 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 80200f2:	f9bd a018 	ldrsh.w	sl, [sp, #24]
 80200f6:	9509      	str	r5, [sp, #36]	@ 0x24
 80200f8:	46c8      	mov	r8, r9
 80200fa:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80200fc:	2b00      	cmp	r3, #0
 80200fe:	f340 80b6 	ble.w	802026e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x206>
 8020102:	f3c4 3303 	ubfx	r3, r4, #12, #4
 8020106:	9308      	str	r3, [sp, #32]
 8020108:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 802010a:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
 802010e:	1423      	asrs	r3, r4, #16
 8020110:	ea4f 4026 	mov.w	r0, r6, asr #16
 8020114:	f3c6 3103 	ubfx	r1, r6, #12, #4
 8020118:	f100 813e 	bmi.w	8020398 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 802011c:	f10c 3bff 	add.w	fp, ip, #4294967295
 8020120:	455b      	cmp	r3, fp
 8020122:	f280 8139 	bge.w	8020398 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 8020126:	2800      	cmp	r0, #0
 8020128:	f2c0 8136 	blt.w	8020398 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 802012c:	f10e 3bff 	add.w	fp, lr, #4294967295
 8020130:	4558      	cmp	r0, fp
 8020132:	f280 8131 	bge.w	8020398 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 8020136:	9a06      	ldr	r2, [sp, #24]
 8020138:	fb00 3302 	mla	r3, r0, r2, r3
 802013c:	0858      	lsrs	r0, r3, #1
 802013e:	07da      	lsls	r2, r3, #31
 8020140:	f817 c000 	ldrb.w	ip, [r7, r0]
 8020144:	9a08      	ldr	r2, [sp, #32]
 8020146:	bf54      	ite	pl
 8020148:	f00c 0c0f 	andpl.w	ip, ip, #15
 802014c:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8020150:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8020154:	fa5f fc8c 	uxtb.w	ip, ip
 8020158:	2a00      	cmp	r2, #0
 802015a:	f000 80cb 	beq.w	80202f4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 802015e:	1c58      	adds	r0, r3, #1
 8020160:	ea4f 0e50 	mov.w	lr, r0, lsr #1
 8020164:	07c0      	lsls	r0, r0, #31
 8020166:	f817 e00e 	ldrb.w	lr, [r7, lr]
 802016a:	bf54      	ite	pl
 802016c:	f00e 0e0f 	andpl.w	lr, lr, #15
 8020170:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
 8020174:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
 8020178:	fa5f fe8e 	uxtb.w	lr, lr
 802017c:	f8cd e034 	str.w	lr, [sp, #52]	@ 0x34
 8020180:	b1b9      	cbz	r1, 80201b2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 8020182:	4453      	add	r3, sl
 8020184:	0858      	lsrs	r0, r3, #1
 8020186:	07da      	lsls	r2, r3, #31
 8020188:	5c38      	ldrb	r0, [r7, r0]
 802018a:	bf54      	ite	pl
 802018c:	f000 000f 	andpl.w	r0, r0, #15
 8020190:	1100      	asrmi	r0, r0, #4
 8020192:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 8020196:	b2c0      	uxtb	r0, r0
 8020198:	900a      	str	r0, [sp, #40]	@ 0x28
 802019a:	1c58      	adds	r0, r3, #1
 802019c:	0843      	lsrs	r3, r0, #1
 802019e:	07c2      	lsls	r2, r0, #31
 80201a0:	5cfb      	ldrb	r3, [r7, r3]
 80201a2:	bf54      	ite	pl
 80201a4:	f003 030f 	andpl.w	r3, r3, #15
 80201a8:	111b      	asrmi	r3, r3, #4
 80201aa:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 80201ae:	b2db      	uxtb	r3, r3
 80201b0:	930e      	str	r3, [sp, #56]	@ 0x38
 80201b2:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 80201b6:	b289      	uxth	r1, r1
 80201b8:	fb02 f301 	mul.w	r3, r2, r1
 80201bc:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
 80201c0:	0112      	lsls	r2, r2, #4
 80201c2:	b289      	uxth	r1, r1
 80201c4:	f5c2 7080 	rsb	r0, r2, #256	@ 0x100
 80201c8:	1a40      	subs	r0, r0, r1
 80201ca:	fa1f fe80 	uxth.w	lr, r0
 80201ce:	1ad2      	subs	r2, r2, r3
 80201d0:	980d      	ldr	r0, [sp, #52]	@ 0x34
 80201d2:	b292      	uxth	r2, r2
 80201d4:	4342      	muls	r2, r0
 80201d6:	fb0c 2c0e 	mla	ip, ip, lr, r2
 80201da:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 80201dc:	fb01 c102 	mla	r1, r1, r2, ip
 80201e0:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 80201e2:	fb03 1302 	mla	r3, r3, r2, r1
 80201e6:	f3c3 2307 	ubfx	r3, r3, #8, #8
 80201ea:	2bff      	cmp	r3, #255	@ 0xff
 80201ec:	f040 8093 	bne.w	8020316 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ae>
 80201f0:	4bbe      	ldr	r3, [pc, #760]	@ (80204ec <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 80201f2:	681a      	ldr	r2, [r3, #0]
 80201f4:	4bbe      	ldr	r3, [pc, #760]	@ (80204f0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>)
 80201f6:	0951      	lsrs	r1, r2, #5
 80201f8:	ea03 2312 	and.w	r3, r3, r2, lsr #8
 80201fc:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 8020200:	430b      	orrs	r3, r1
 8020202:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8020206:	4313      	orrs	r3, r2
 8020208:	f8a8 3000 	strh.w	r3, [r8]
 802020c:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 802020e:	441c      	add	r4, r3
 8020210:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8020212:	441e      	add	r6, r3
 8020214:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8020216:	3b01      	subs	r3, #1
 8020218:	f108 0802 	add.w	r8, r8, #2
 802021c:	9309      	str	r3, [sp, #36]	@ 0x24
 802021e:	e76c      	b.n	80200fa <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8020220:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 8020222:	441c      	add	r4, r3
 8020224:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8020226:	3d01      	subs	r5, #1
 8020228:	441e      	add	r6, r3
 802022a:	f109 0902 	add.w	r9, r9, #2
 802022e:	e744      	b.n	80200ba <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 8020230:	d021      	beq.n	8020276 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20e>
 8020232:	981f      	ldr	r0, [sp, #124]	@ 0x7c
 8020234:	1e6b      	subs	r3, r5, #1
 8020236:	fb00 4003 	mla	r0, r0, r3, r4
 802023a:	1400      	asrs	r0, r0, #16
 802023c:	f53f af59 	bmi.w	80200f2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8020240:	3901      	subs	r1, #1
 8020242:	4288      	cmp	r0, r1
 8020244:	f6bf af55 	bge.w	80200f2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8020248:	9920      	ldr	r1, [sp, #128]	@ 0x80
 802024a:	fb01 6303 	mla	r3, r1, r3, r6
 802024e:	141b      	asrs	r3, r3, #16
 8020250:	f53f af4f 	bmi.w	80200f2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8020254:	3a01      	subs	r2, #1
 8020256:	4293      	cmp	r3, r2
 8020258:	f6bf af4b 	bge.w	80200f2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 802025c:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 8020260:	9308      	str	r3, [sp, #32]
 8020262:	46a8      	mov	r8, r5
 8020264:	46ce      	mov	lr, r9
 8020266:	f1b8 0f00 	cmp.w	r8, #0
 802026a:	f300 80b5 	bgt.w	80203d8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 802026e:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 8020272:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 8020276:	9b07      	ldr	r3, [sp, #28]
 8020278:	2b00      	cmp	r3, #0
 802027a:	f340 817d 	ble.w	8020578 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x510>
 802027e:	ee30 0a04 	vadd.f32	s0, s0, s8
 8020282:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8020286:	eec7 7a00 	vdiv.f32	s15, s14, s0
 802028a:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 802028c:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8020290:	ee31 1a05 	vadd.f32	s2, s2, s10
 8020294:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8020298:	eef0 6a62 	vmov.f32	s13, s5
 802029c:	ee61 7a27 	vmul.f32	s15, s2, s15
 80202a0:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80202a4:	ee77 2a62 	vsub.f32	s5, s14, s5
 80202a8:	ee16 4a90 	vmov	r4, s13
 80202ac:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80202b0:	eef0 6a43 	vmov.f32	s13, s6
 80202b4:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80202b8:	ee12 2a90 	vmov	r2, s5
 80202bc:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80202c0:	fb92 f3f3 	sdiv	r3, r2, r3
 80202c4:	ee13 2a10 	vmov	r2, s6
 80202c8:	931f      	str	r3, [sp, #124]	@ 0x7c
 80202ca:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 80202cc:	fb92 f3f3 	sdiv	r3, r2, r3
 80202d0:	9320      	str	r3, [sp, #128]	@ 0x80
 80202d2:	9b07      	ldr	r3, [sp, #28]
 80202d4:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 80202d6:	3b01      	subs	r3, #1
 80202d8:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80202dc:	9307      	str	r3, [sp, #28]
 80202de:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 80202e0:	ee16 6a90 	vmov	r6, s13
 80202e4:	bf14      	ite	ne
 80202e6:	461d      	movne	r5, r3
 80202e8:	4615      	moveq	r5, r2
 80202ea:	eeb0 3a67 	vmov.f32	s6, s15
 80202ee:	eef0 2a47 	vmov.f32	s5, s14
 80202f2:	e6d3      	b.n	802009c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34>
 80202f4:	2900      	cmp	r1, #0
 80202f6:	f43f af5c 	beq.w	80201b2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 80202fa:	eb0a 0003 	add.w	r0, sl, r3
 80202fe:	0843      	lsrs	r3, r0, #1
 8020300:	07c0      	lsls	r0, r0, #31
 8020302:	5cfb      	ldrb	r3, [r7, r3]
 8020304:	bf54      	ite	pl
 8020306:	f003 030f 	andpl.w	r3, r3, #15
 802030a:	111b      	asrmi	r3, r3, #4
 802030c:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 8020310:	b2db      	uxtb	r3, r3
 8020312:	930a      	str	r3, [sp, #40]	@ 0x28
 8020314:	e74d      	b.n	80201b2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 8020316:	2b00      	cmp	r3, #0
 8020318:	f43f af78 	beq.w	802020c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 802031c:	4a73      	ldr	r2, [pc, #460]	@ (80204ec <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 802031e:	f8b8 c000 	ldrh.w	ip, [r8]
 8020322:	6810      	ldr	r0, [r2, #0]
 8020324:	fa1f fe83 	uxth.w	lr, r3
 8020328:	ea4f 212c 	mov.w	r1, ip, asr #8
 802032c:	f3c0 4207 	ubfx	r2, r0, #16, #8
 8020330:	43db      	mvns	r3, r3
 8020332:	b2db      	uxtb	r3, r3
 8020334:	fb12 f20e 	smulbb	r2, r2, lr
 8020338:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 802033c:	fb01 2103 	mla	r1, r1, r3, r2
 8020340:	f3c0 2b07 	ubfx	fp, r0, #8, #8
 8020344:	ea4f 02ec 	mov.w	r2, ip, asr #3
 8020348:	b2c0      	uxtb	r0, r0
 802034a:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 802034e:	fb1b fb0e 	smulbb	fp, fp, lr
 8020352:	b289      	uxth	r1, r1
 8020354:	fb10 fe0e 	smulbb	lr, r0, lr
 8020358:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 802035c:	fa5f fc8c 	uxtb.w	ip, ip
 8020360:	fb02 b203 	mla	r2, r2, r3, fp
 8020364:	1c48      	adds	r0, r1, #1
 8020366:	fb0c e303 	mla	r3, ip, r3, lr
 802036a:	b292      	uxth	r2, r2
 802036c:	b29b      	uxth	r3, r3
 802036e:	eb00 2111 	add.w	r1, r0, r1, lsr #8
 8020372:	f401 4078 	and.w	r0, r1, #63488	@ 0xf800
 8020376:	f102 0b01 	add.w	fp, r2, #1
 802037a:	1c59      	adds	r1, r3, #1
 802037c:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 8020380:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
 8020384:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 8020388:	0952      	lsrs	r2, r2, #5
 802038a:	4301      	orrs	r1, r0
 802038c:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8020390:	4311      	orrs	r1, r2
 8020392:	f8a8 1000 	strh.w	r1, [r8]
 8020396:	e739      	b.n	802020c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8020398:	f113 0b01 	adds.w	fp, r3, #1
 802039c:	f53f af36 	bmi.w	802020c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 80203a0:	45dc      	cmp	ip, fp
 80203a2:	f6ff af33 	blt.w	802020c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 80203a6:	f110 0b01 	adds.w	fp, r0, #1
 80203aa:	f53f af2f 	bmi.w	802020c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 80203ae:	45de      	cmp	lr, fp
 80203b0:	f6ff af2c 	blt.w	802020c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 80203b4:	9a08      	ldr	r2, [sp, #32]
 80203b6:	9302      	str	r3, [sp, #8]
 80203b8:	fa0f f38e 	sxth.w	r3, lr
 80203bc:	9301      	str	r3, [sp, #4]
 80203be:	fa0f f38c 	sxth.w	r3, ip
 80203c2:	e9cd 0203 	strd	r0, r2, [sp, #12]
 80203c6:	9105      	str	r1, [sp, #20]
 80203c8:	9300      	str	r3, [sp, #0]
 80203ca:	463a      	mov	r2, r7
 80203cc:	4653      	mov	r3, sl
 80203ce:	4641      	mov	r1, r8
 80203d0:	9811      	ldr	r0, [sp, #68]	@ 0x44
 80203d2:	f7ff fd73 	bl	801febc <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>
 80203d6:	e719      	b.n	802020c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 80203d8:	9906      	ldr	r1, [sp, #24]
 80203da:	1422      	asrs	r2, r4, #16
 80203dc:	1433      	asrs	r3, r6, #16
 80203de:	fb01 2303 	mla	r3, r1, r3, r2
 80203e2:	085a      	lsrs	r2, r3, #1
 80203e4:	07d9      	lsls	r1, r3, #31
 80203e6:	5cba      	ldrb	r2, [r7, r2]
 80203e8:	bf54      	ite	pl
 80203ea:	f002 020f 	andpl.w	r2, r2, #15
 80203ee:	1112      	asrmi	r2, r2, #4
 80203f0:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 80203f4:	f3c4 3003 	ubfx	r0, r4, #12, #4
 80203f8:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 80203fc:	b2d2      	uxtb	r2, r2
 80203fe:	2800      	cmp	r0, #0
 8020400:	d062      	beq.n	80204c8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x460>
 8020402:	f103 0a01 	add.w	sl, r3, #1
 8020406:	ea4f 015a 	mov.w	r1, sl, lsr #1
 802040a:	f01a 0f01 	tst.w	sl, #1
 802040e:	5c79      	ldrb	r1, [r7, r1]
 8020410:	bf0c      	ite	eq
 8020412:	f001 010f 	andeq.w	r1, r1, #15
 8020416:	1109      	asrne	r1, r1, #4
 8020418:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 802041c:	b2c9      	uxtb	r1, r1
 802041e:	910f      	str	r1, [sp, #60]	@ 0x3c
 8020420:	f1bc 0f00 	cmp.w	ip, #0
 8020424:	d019      	beq.n	802045a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 8020426:	9908      	ldr	r1, [sp, #32]
 8020428:	440b      	add	r3, r1
 802042a:	0859      	lsrs	r1, r3, #1
 802042c:	f013 0f01 	tst.w	r3, #1
 8020430:	5c79      	ldrb	r1, [r7, r1]
 8020432:	bf0c      	ite	eq
 8020434:	f001 010f 	andeq.w	r1, r1, #15
 8020438:	1109      	asrne	r1, r1, #4
 802043a:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 802043e:	b2c9      	uxtb	r1, r1
 8020440:	3301      	adds	r3, #1
 8020442:	910b      	str	r1, [sp, #44]	@ 0x2c
 8020444:	0859      	lsrs	r1, r3, #1
 8020446:	07db      	lsls	r3, r3, #31
 8020448:	5c79      	ldrb	r1, [r7, r1]
 802044a:	bf54      	ite	pl
 802044c:	f001 010f 	andpl.w	r1, r1, #15
 8020450:	1109      	asrmi	r1, r1, #4
 8020452:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 8020456:	b2c9      	uxtb	r1, r1
 8020458:	9110      	str	r1, [sp, #64]	@ 0x40
 802045a:	b280      	uxth	r0, r0
 802045c:	fa1f fc8c 	uxth.w	ip, ip
 8020460:	fb00 f30c 	mul.w	r3, r0, ip
 8020464:	ebc3 1c0c 	rsb	ip, r3, ip, lsl #4
 8020468:	0100      	lsls	r0, r0, #4
 802046a:	fa1f fc8c 	uxth.w	ip, ip
 802046e:	f5c0 7180 	rsb	r1, r0, #256	@ 0x100
 8020472:	eba1 010c 	sub.w	r1, r1, ip
 8020476:	fa1f fa81 	uxth.w	sl, r1
 802047a:	1ac0      	subs	r0, r0, r3
 802047c:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 802047e:	b280      	uxth	r0, r0
 8020480:	4348      	muls	r0, r1
 8020482:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 8020484:	fb02 020a 	mla	r2, r2, sl, r0
 8020488:	fb0c 2c01 	mla	ip, ip, r1, r2
 802048c:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 802048e:	fb03 c302 	mla	r3, r3, r2, ip
 8020492:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8020496:	2bff      	cmp	r3, #255	@ 0xff
 8020498:	d12c      	bne.n	80204f4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48c>
 802049a:	4b14      	ldr	r3, [pc, #80]	@ (80204ec <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 802049c:	681a      	ldr	r2, [r3, #0]
 802049e:	4b14      	ldr	r3, [pc, #80]	@ (80204f0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>)
 80204a0:	0951      	lsrs	r1, r2, #5
 80204a2:	ea03 2312 	and.w	r3, r3, r2, lsr #8
 80204a6:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 80204aa:	430b      	orrs	r3, r1
 80204ac:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 80204b0:	4313      	orrs	r3, r2
 80204b2:	f8ae 3000 	strh.w	r3, [lr]
 80204b6:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 80204b8:	441c      	add	r4, r3
 80204ba:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 80204bc:	f10e 0e02 	add.w	lr, lr, #2
 80204c0:	441e      	add	r6, r3
 80204c2:	f108 38ff 	add.w	r8, r8, #4294967295
 80204c6:	e6ce      	b.n	8020266 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fe>
 80204c8:	f1bc 0f00 	cmp.w	ip, #0
 80204cc:	d0c5      	beq.n	802045a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 80204ce:	9908      	ldr	r1, [sp, #32]
 80204d0:	440b      	add	r3, r1
 80204d2:	0859      	lsrs	r1, r3, #1
 80204d4:	07db      	lsls	r3, r3, #31
 80204d6:	5c79      	ldrb	r1, [r7, r1]
 80204d8:	bf54      	ite	pl
 80204da:	f001 010f 	andpl.w	r1, r1, #15
 80204de:	1109      	asrmi	r1, r1, #4
 80204e0:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 80204e4:	b2c9      	uxtb	r1, r1
 80204e6:	910b      	str	r1, [sp, #44]	@ 0x2c
 80204e8:	e7b7      	b.n	802045a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 80204ea:	bf00      	nop
 80204ec:	20013f3c 	.word	0x20013f3c
 80204f0:	fffff800 	.word	0xfffff800
 80204f4:	2b00      	cmp	r3, #0
 80204f6:	d0de      	beq.n	80204b6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 80204f8:	4a21      	ldr	r2, [pc, #132]	@ (8020580 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x518>)
 80204fa:	f8be c000 	ldrh.w	ip, [lr]
 80204fe:	6810      	ldr	r0, [r2, #0]
 8020500:	fa1f fa83 	uxth.w	sl, r3
 8020504:	ea4f 212c 	mov.w	r1, ip, asr #8
 8020508:	f3c0 4207 	ubfx	r2, r0, #16, #8
 802050c:	43db      	mvns	r3, r3
 802050e:	b2db      	uxtb	r3, r3
 8020510:	fb12 f20a 	smulbb	r2, r2, sl
 8020514:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 8020518:	fb01 2103 	mla	r1, r1, r3, r2
 802051c:	f3c0 2b07 	ubfx	fp, r0, #8, #8
 8020520:	ea4f 02ec 	mov.w	r2, ip, asr #3
 8020524:	b2c0      	uxtb	r0, r0
 8020526:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 802052a:	fa5f fc8c 	uxtb.w	ip, ip
 802052e:	fb10 f00a 	smulbb	r0, r0, sl
 8020532:	fb0c 0003 	mla	r0, ip, r3, r0
 8020536:	b289      	uxth	r1, r1
 8020538:	fb1b fb0a 	smulbb	fp, fp, sl
 802053c:	b280      	uxth	r0, r0
 802053e:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 8020542:	fb02 b203 	mla	r2, r2, r3, fp
 8020546:	1c4b      	adds	r3, r1, #1
 8020548:	f100 0b01 	add.w	fp, r0, #1
 802054c:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 8020550:	eb0b 2b10 	add.w	fp, fp, r0, lsr #8
 8020554:	b292      	uxth	r2, r2
 8020556:	f3cb 2bc4 	ubfx	fp, fp, #11, #5
 802055a:	f401 4178 	and.w	r1, r1, #63488	@ 0xf800
 802055e:	ea4b 0101 	orr.w	r1, fp, r1
 8020562:	f102 0b01 	add.w	fp, r2, #1
 8020566:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
 802056a:	0952      	lsrs	r2, r2, #5
 802056c:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8020570:	4311      	orrs	r1, r2
 8020572:	f8ae 1000 	strh.w	r1, [lr]
 8020576:	e79e      	b.n	80204b6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 8020578:	b013      	add	sp, #76	@ 0x4c
 802057a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802057e:	bf00      	nop
 8020580:	20013f3c 	.word	0x20013f3c

08020584 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>:
 8020584:	b570      	push	{r4, r5, r6, lr}
 8020586:	1208      	asrs	r0, r1, #8
 8020588:	b29e      	uxth	r6, r3
 802058a:	f8bd 5010 	ldrh.w	r5, [sp, #16]
 802058e:	1213      	asrs	r3, r2, #8
 8020590:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 8020594:	f003 03f8 	and.w	r3, r3, #248	@ 0xf8
 8020598:	fb13 f305 	smulbb	r3, r3, r5
 802059c:	fb10 f006 	smulbb	r0, r0, r6
 80205a0:	4418      	add	r0, r3
 80205a2:	10cc      	asrs	r4, r1, #3
 80205a4:	10d3      	asrs	r3, r2, #3
 80205a6:	f004 04fc 	and.w	r4, r4, #252	@ 0xfc
 80205aa:	f003 03fc 	and.w	r3, r3, #252	@ 0xfc
 80205ae:	fb13 f305 	smulbb	r3, r3, r5
 80205b2:	fb14 f406 	smulbb	r4, r4, r6
 80205b6:	00c9      	lsls	r1, r1, #3
 80205b8:	00d2      	lsls	r2, r2, #3
 80205ba:	441c      	add	r4, r3
 80205bc:	b2d2      	uxtb	r2, r2
 80205be:	b2cb      	uxtb	r3, r1
 80205c0:	fb12 f205 	smulbb	r2, r2, r5
 80205c4:	b280      	uxth	r0, r0
 80205c6:	fb13 f306 	smulbb	r3, r3, r6
 80205ca:	4413      	add	r3, r2
 80205cc:	1c42      	adds	r2, r0, #1
 80205ce:	b29b      	uxth	r3, r3
 80205d0:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 80205d4:	f400 4278 	and.w	r2, r0, #63488	@ 0xf800
 80205d8:	1c58      	adds	r0, r3, #1
 80205da:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 80205de:	b2a4      	uxth	r4, r4
 80205e0:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 80205e4:	4310      	orrs	r0, r2
 80205e6:	1c62      	adds	r2, r4, #1
 80205e8:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 80205ec:	0964      	lsrs	r4, r4, #5
 80205ee:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
 80205f2:	4320      	orrs	r0, r4
 80205f4:	bd70      	pop	{r4, r5, r6, pc}
	...

080205f8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
 80205f8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80205fc:	b08f      	sub	sp, #60	@ 0x3c
 80205fe:	461c      	mov	r4, r3
 8020600:	f89d 7064 	ldrb.w	r7, [sp, #100]	@ 0x64
 8020604:	9004      	str	r0, [sp, #16]
 8020606:	460d      	mov	r5, r1
 8020608:	4616      	mov	r6, r2
 802060a:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 802060c:	2f00      	cmp	r7, #0
 802060e:	f000 80f6 	beq.w	80207fe <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x206>
 8020612:	6820      	ldr	r0, [r4, #0]
 8020614:	6861      	ldr	r1, [r4, #4]
 8020616:	aa0a      	add	r2, sp, #40	@ 0x28
 8020618:	c203      	stmia	r2!, {r0, r1}
 802061a:	6818      	ldr	r0, [r3, #0]
 802061c:	6859      	ldr	r1, [r3, #4]
 802061e:	aa0c      	add	r2, sp, #48	@ 0x30
 8020620:	c203      	stmia	r2!, {r0, r1}
 8020622:	a80a      	add	r0, sp, #40	@ 0x28
 8020624:	f7ee fdda 	bl	800f1dc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8020628:	4621      	mov	r1, r4
 802062a:	a80c      	add	r0, sp, #48	@ 0x30
 802062c:	f7ee fdfe 	bl	800f22c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8020630:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	@ 0x30
 8020634:	f9bd b036 	ldrsh.w	fp, [sp, #54]	@ 0x36
 8020638:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	@ 0x34
 802063c:	f002 0301 	and.w	r3, r2, #1
 8020640:	9306      	str	r3, [sp, #24]
 8020642:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
 8020646:	f003 0101 	and.w	r1, r3, #1
 802064a:	9105      	str	r1, [sp, #20]
 802064c:	9805      	ldr	r0, [sp, #20]
 802064e:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	@ 0x32
 8020652:	4403      	add	r3, r0
 8020654:	fb01 2303 	mla	r3, r1, r3, r2
 8020658:	f04f 0802 	mov.w	r8, #2
 802065c:	fb93 f3f8 	sdiv	r3, r3, r8
 8020660:	441d      	add	r5, r3
 8020662:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
 8020666:	441a      	add	r2, r3
 8020668:	f8bd 302a 	ldrh.w	r3, [sp, #42]	@ 0x2a
 802066c:	f8ad 2030 	strh.w	r2, [sp, #48]	@ 0x30
 8020670:	4419      	add	r1, r3
 8020672:	4b64      	ldr	r3, [pc, #400]	@ (8020804 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x20c>)
 8020674:	f8ad 1032 	strh.w	r1, [sp, #50]	@ 0x32
 8020678:	6818      	ldr	r0, [r3, #0]
 802067a:	6803      	ldr	r3, [r0, #0]
 802067c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 802067e:	4798      	blx	r3
 8020680:	4a61      	ldr	r2, [pc, #388]	@ (8020808 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x210>)
 8020682:	f9bd 4032 	ldrsh.w	r4, [sp, #50]	@ 0x32
 8020686:	8813      	ldrh	r3, [r2, #0]
 8020688:	f9bd a030 	ldrsh.w	sl, [sp, #48]	@ 0x30
 802068c:	2fff      	cmp	r7, #255	@ 0xff
 802068e:	fb03 a404 	mla	r4, r3, r4, sl
 8020692:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8020696:	f106 0604 	add.w	r6, r6, #4
 802069a:	4611      	mov	r1, r2
 802069c:	fb03 fb0b 	mul.w	fp, r3, fp
 80206a0:	d06b      	beq.n	802077a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x182>
 80206a2:	f1c7 03ff 	rsb	r3, r7, #255	@ 0xff
 80206a6:	9303      	str	r3, [sp, #12]
 80206a8:	eb04 034b 	add.w	r3, r4, fp, lsl #1
 80206ac:	e9cd 3207 	strd	r3, r2, [sp, #28]
 80206b0:	f8cd 8024 	str.w	r8, [sp, #36]	@ 0x24
 80206b4:	9b07      	ldr	r3, [sp, #28]
 80206b6:	42a3      	cmp	r3, r4
 80206b8:	f240 809c 	bls.w	80207f4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1fc>
 80206bc:	9b06      	ldr	r3, [sp, #24]
 80206be:	2b00      	cmp	r3, #0
 80206c0:	d039      	beq.n	8020736 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x13e>
 80206c2:	782b      	ldrb	r3, [r5, #0]
 80206c4:	8822      	ldrh	r2, [r4, #0]
 80206c6:	9804      	ldr	r0, [sp, #16]
 80206c8:	f003 030f 	and.w	r3, r3, #15
 80206cc:	f105 0801 	add.w	r8, r5, #1
 80206d0:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 80206d4:	9b03      	ldr	r3, [sp, #12]
 80206d6:	9300      	str	r3, [sp, #0]
 80206d8:	463b      	mov	r3, r7
 80206da:	f7ff ff53 	bl	8020584 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 80206de:	f824 0b02 	strh.w	r0, [r4], #2
 80206e2:	f109 3bff 	add.w	fp, r9, #4294967295
 80206e6:	f1bb 0f01 	cmp.w	fp, #1
 80206ea:	46a2      	mov	sl, r4
 80206ec:	f104 0404 	add.w	r4, r4, #4
 80206f0:	dd24      	ble.n	802073c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x144>
 80206f2:	f898 3000 	ldrb.w	r3, [r8]
 80206f6:	f834 2c04 	ldrh.w	r2, [r4, #-4]
 80206fa:	9804      	ldr	r0, [sp, #16]
 80206fc:	091b      	lsrs	r3, r3, #4
 80206fe:	f1ab 0b02 	sub.w	fp, fp, #2
 8020702:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 8020706:	9b03      	ldr	r3, [sp, #12]
 8020708:	9300      	str	r3, [sp, #0]
 802070a:	463b      	mov	r3, r7
 802070c:	f7ff ff3a 	bl	8020584 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 8020710:	f824 0c04 	strh.w	r0, [r4, #-4]
 8020714:	f818 3b01 	ldrb.w	r3, [r8], #1
 8020718:	f834 2c02 	ldrh.w	r2, [r4, #-2]
 802071c:	9804      	ldr	r0, [sp, #16]
 802071e:	f003 030f 	and.w	r3, r3, #15
 8020722:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 8020726:	9b03      	ldr	r3, [sp, #12]
 8020728:	9300      	str	r3, [sp, #0]
 802072a:	463b      	mov	r3, r7
 802072c:	f7ff ff2a 	bl	8020584 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 8020730:	f824 0c02 	strh.w	r0, [r4, #-2]
 8020734:	e7d7      	b.n	80206e6 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xee>
 8020736:	46a8      	mov	r8, r5
 8020738:	46cb      	mov	fp, r9
 802073a:	e7d4      	b.n	80206e6 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xee>
 802073c:	d10e      	bne.n	802075c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x164>
 802073e:	f898 3000 	ldrb.w	r3, [r8]
 8020742:	f8ba 2000 	ldrh.w	r2, [sl]
 8020746:	9804      	ldr	r0, [sp, #16]
 8020748:	091b      	lsrs	r3, r3, #4
 802074a:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 802074e:	9b03      	ldr	r3, [sp, #12]
 8020750:	9300      	str	r3, [sp, #0]
 8020752:	463b      	mov	r3, r7
 8020754:	f7ff ff16 	bl	8020584 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 8020758:	f82a 0b02 	strh.w	r0, [sl], #2
 802075c:	9b08      	ldr	r3, [sp, #32]
 802075e:	9a05      	ldr	r2, [sp, #20]
 8020760:	881c      	ldrh	r4, [r3, #0]
 8020762:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
 8020766:	eba4 0409 	sub.w	r4, r4, r9
 802076a:	4413      	add	r3, r2
 802076c:	eb0a 0444 	add.w	r4, sl, r4, lsl #1
 8020770:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8020772:	fb93 f3f2 	sdiv	r3, r3, r2
 8020776:	441d      	add	r5, r3
 8020778:	e79c      	b.n	80206b4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xbc>
 802077a:	eb04 0b4b 	add.w	fp, r4, fp, lsl #1
 802077e:	45a3      	cmp	fp, r4
 8020780:	d938      	bls.n	80207f4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1fc>
 8020782:	9b06      	ldr	r3, [sp, #24]
 8020784:	b1f3      	cbz	r3, 80207c4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1cc>
 8020786:	782b      	ldrb	r3, [r5, #0]
 8020788:	f003 030f 	and.w	r3, r3, #15
 802078c:	1c6a      	adds	r2, r5, #1
 802078e:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8020792:	8023      	strh	r3, [r4, #0]
 8020794:	f109 30ff 	add.w	r0, r9, #4294967295
 8020798:	3402      	adds	r4, #2
 802079a:	2801      	cmp	r0, #1
 802079c:	4623      	mov	r3, r4
 802079e:	f104 0404 	add.w	r4, r4, #4
 80207a2:	dd12      	ble.n	80207ca <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1d2>
 80207a4:	7813      	ldrb	r3, [r2, #0]
 80207a6:	091b      	lsrs	r3, r3, #4
 80207a8:	3802      	subs	r0, #2
 80207aa:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 80207ae:	f824 3c04 	strh.w	r3, [r4, #-4]
 80207b2:	f812 3b01 	ldrb.w	r3, [r2], #1
 80207b6:	f003 030f 	and.w	r3, r3, #15
 80207ba:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 80207be:	f824 3c02 	strh.w	r3, [r4, #-2]
 80207c2:	e7ea      	b.n	802079a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1a2>
 80207c4:	462a      	mov	r2, r5
 80207c6:	4648      	mov	r0, r9
 80207c8:	e7e7      	b.n	802079a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1a2>
 80207ca:	d106      	bne.n	80207da <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1e2>
 80207cc:	7812      	ldrb	r2, [r2, #0]
 80207ce:	0912      	lsrs	r2, r2, #4
 80207d0:	3302      	adds	r3, #2
 80207d2:	f836 2012 	ldrh.w	r2, [r6, r2, lsl #1]
 80207d6:	f823 2c02 	strh.w	r2, [r3, #-2]
 80207da:	880c      	ldrh	r4, [r1, #0]
 80207dc:	9a05      	ldr	r2, [sp, #20]
 80207de:	eba4 0409 	sub.w	r4, r4, r9
 80207e2:	eb03 0444 	add.w	r4, r3, r4, lsl #1
 80207e6:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
 80207ea:	4413      	add	r3, r2
 80207ec:	fb93 f3f8 	sdiv	r3, r3, r8
 80207f0:	441d      	add	r5, r3
 80207f2:	e7c4      	b.n	802077e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x186>
 80207f4:	4b03      	ldr	r3, [pc, #12]	@ (8020804 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x20c>)
 80207f6:	6818      	ldr	r0, [r3, #0]
 80207f8:	6803      	ldr	r3, [r0, #0]
 80207fa:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80207fc:	4798      	blx	r3
 80207fe:	b00f      	add	sp, #60	@ 0x3c
 8020800:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8020804:	20013f2c 	.word	0x20013f2c
 8020808:	20013f24 	.word	0x20013f24

0802080c <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>:
 802080c:	b5f0      	push	{r4, r5, r6, r7, lr}
 802080e:	f89d 5014 	ldrb.w	r5, [sp, #20]
 8020812:	2dff      	cmp	r5, #255	@ 0xff
 8020814:	ea4f 2711 	mov.w	r7, r1, lsr #8
 8020818:	d10c      	bne.n	8020834 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x28>
 802081a:	2bff      	cmp	r3, #255	@ 0xff
 802081c:	d10a      	bne.n	8020834 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x28>
 802081e:	4b25      	ldr	r3, [pc, #148]	@ (80208b4 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0xa8>)
 8020820:	0948      	lsrs	r0, r1, #5
 8020822:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8020826:	403b      	ands	r3, r7
 8020828:	4318      	orrs	r0, r3
 802082a:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 802082e:	4308      	orrs	r0, r1
 8020830:	b280      	uxth	r0, r0
 8020832:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8020834:	fb15 f503 	smulbb	r5, r5, r3
 8020838:	b2ab      	uxth	r3, r5
 802083a:	1c5d      	adds	r5, r3, #1
 802083c:	eb05 2513 	add.w	r5, r5, r3, lsr #8
 8020840:	1214      	asrs	r4, r2, #8
 8020842:	f3c5 2507 	ubfx	r5, r5, #8, #8
 8020846:	fa1f fc85 	uxth.w	ip, r5
 802084a:	10d6      	asrs	r6, r2, #3
 802084c:	00d0      	lsls	r0, r2, #3
 802084e:	43ed      	mvns	r5, r5
 8020850:	f004 04f8 	and.w	r4, r4, #248	@ 0xf8
 8020854:	f3c1 4207 	ubfx	r2, r1, #16, #8
 8020858:	b2eb      	uxtb	r3, r5
 802085a:	b2c0      	uxtb	r0, r0
 802085c:	fb12 f20c 	smulbb	r2, r2, ip
 8020860:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 8020864:	fb04 2403 	mla	r4, r4, r3, r2
 8020868:	ea40 1250 	orr.w	r2, r0, r0, lsr #5
 802086c:	b2c8      	uxtb	r0, r1
 802086e:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 8020872:	b2fd      	uxtb	r5, r7
 8020874:	fb10 f00c 	smulbb	r0, r0, ip
 8020878:	b2a4      	uxth	r4, r4
 802087a:	fb02 0003 	mla	r0, r2, r3, r0
 802087e:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
 8020882:	fb15 f50c 	smulbb	r5, r5, ip
 8020886:	fb06 5503 	mla	r5, r6, r3, r5
 802088a:	b283      	uxth	r3, r0
 802088c:	1c60      	adds	r0, r4, #1
 802088e:	b2ad      	uxth	r5, r5
 8020890:	eb00 2414 	add.w	r4, r0, r4, lsr #8
 8020894:	1c58      	adds	r0, r3, #1
 8020896:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 802089a:	1c6b      	adds	r3, r5, #1
 802089c:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 80208a0:	f404 4478 	and.w	r4, r4, #63488	@ 0xf800
 80208a4:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 80208a8:	096d      	lsrs	r5, r5, #5
 80208aa:	4320      	orrs	r0, r4
 80208ac:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 80208b0:	4328      	orrs	r0, r5
 80208b2:	e7be      	b.n	8020832 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x26>
 80208b4:	00fff800 	.word	0x00fff800

080208b8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
 80208b8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80208bc:	461c      	mov	r4, r3
 80208be:	b08d      	sub	sp, #52	@ 0x34
 80208c0:	460d      	mov	r5, r1
 80208c2:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 80208c4:	6861      	ldr	r1, [r4, #4]
 80208c6:	f89d 905c 	ldrb.w	r9, [sp, #92]	@ 0x5c
 80208ca:	4680      	mov	r8, r0
 80208cc:	6820      	ldr	r0, [r4, #0]
 80208ce:	4616      	mov	r6, r2
 80208d0:	aa08      	add	r2, sp, #32
 80208d2:	c203      	stmia	r2!, {r0, r1}
 80208d4:	6818      	ldr	r0, [r3, #0]
 80208d6:	6859      	ldr	r1, [r3, #4]
 80208d8:	aa0a      	add	r2, sp, #40	@ 0x28
 80208da:	c203      	stmia	r2!, {r0, r1}
 80208dc:	a808      	add	r0, sp, #32
 80208de:	f7ee fc7d 	bl	800f1dc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80208e2:	4621      	mov	r1, r4
 80208e4:	a80a      	add	r0, sp, #40	@ 0x28
 80208e6:	f7ee fca1 	bl	800f22c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80208ea:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	@ 0x28
 80208ee:	f9bd 702e 	ldrsh.w	r7, [sp, #46]	@ 0x2e
 80208f2:	f9bd b02c 	ldrsh.w	fp, [sp, #44]	@ 0x2c
 80208f6:	f002 0301 	and.w	r3, r2, #1
 80208fa:	9303      	str	r3, [sp, #12]
 80208fc:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	@ 0x24
 8020900:	f003 0101 	and.w	r1, r3, #1
 8020904:	9102      	str	r1, [sp, #8]
 8020906:	9802      	ldr	r0, [sp, #8]
 8020908:	f9bd 102a 	ldrsh.w	r1, [sp, #42]	@ 0x2a
 802090c:	4403      	add	r3, r0
 802090e:	fb01 2303 	mla	r3, r1, r3, r2
 8020912:	f04f 0a02 	mov.w	sl, #2
 8020916:	fb93 f3fa 	sdiv	r3, r3, sl
 802091a:	441d      	add	r5, r3
 802091c:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 8020920:	441a      	add	r2, r3
 8020922:	f8ad 2028 	strh.w	r2, [sp, #40]	@ 0x28
 8020926:	f8bd 3022 	ldrh.w	r3, [sp, #34]	@ 0x22
 802092a:	4a3f      	ldr	r2, [pc, #252]	@ (8020a28 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x170>)
 802092c:	9205      	str	r2, [sp, #20]
 802092e:	4419      	add	r1, r3
 8020930:	6810      	ldr	r0, [r2, #0]
 8020932:	f8ad 102a 	strh.w	r1, [sp, #42]	@ 0x2a
 8020936:	6803      	ldr	r3, [r0, #0]
 8020938:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 802093a:	4798      	blx	r3
 802093c:	4b3b      	ldr	r3, [pc, #236]	@ (8020a2c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x174>)
 802093e:	f9bd 402a 	ldrsh.w	r4, [sp, #42]	@ 0x2a
 8020942:	8819      	ldrh	r1, [r3, #0]
 8020944:	f9bd c028 	ldrsh.w	ip, [sp, #40]	@ 0x28
 8020948:	fb01 c404 	mla	r4, r1, r4, ip
 802094c:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8020950:	434f      	muls	r7, r1
 8020952:	e9cd 3a06 	strd	r3, sl, [sp, #24]
 8020956:	eb04 0247 	add.w	r2, r4, r7, lsl #1
 802095a:	3604      	adds	r6, #4
 802095c:	9204      	str	r2, [sp, #16]
 802095e:	9b04      	ldr	r3, [sp, #16]
 8020960:	429c      	cmp	r4, r3
 8020962:	d258      	bcs.n	8020a16 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x15e>
 8020964:	9b03      	ldr	r3, [sp, #12]
 8020966:	2b00      	cmp	r3, #0
 8020968:	d034      	beq.n	80209d4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x11c>
 802096a:	782b      	ldrb	r3, [r5, #0]
 802096c:	f003 030f 	and.w	r3, r3, #15
 8020970:	1c6f      	adds	r7, r5, #1
 8020972:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 8020976:	0e0b      	lsrs	r3, r1, #24
 8020978:	d006      	beq.n	8020988 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd0>
 802097a:	8822      	ldrh	r2, [r4, #0]
 802097c:	9300      	str	r3, [sp, #0]
 802097e:	4640      	mov	r0, r8
 8020980:	464b      	mov	r3, r9
 8020982:	f7ff ff43 	bl	802080c <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 8020986:	8020      	strh	r0, [r4, #0]
 8020988:	3402      	adds	r4, #2
 802098a:	f10b 3aff 	add.w	sl, fp, #4294967295
 802098e:	f1ba 0f01 	cmp.w	sl, #1
 8020992:	dd22      	ble.n	80209da <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x122>
 8020994:	783b      	ldrb	r3, [r7, #0]
 8020996:	091b      	lsrs	r3, r3, #4
 8020998:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 802099c:	0e0b      	lsrs	r3, r1, #24
 802099e:	d006      	beq.n	80209ae <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xf6>
 80209a0:	8822      	ldrh	r2, [r4, #0]
 80209a2:	9300      	str	r3, [sp, #0]
 80209a4:	4640      	mov	r0, r8
 80209a6:	464b      	mov	r3, r9
 80209a8:	f7ff ff30 	bl	802080c <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 80209ac:	8020      	strh	r0, [r4, #0]
 80209ae:	f817 3b01 	ldrb.w	r3, [r7], #1
 80209b2:	f003 030f 	and.w	r3, r3, #15
 80209b6:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 80209ba:	0e0b      	lsrs	r3, r1, #24
 80209bc:	d006      	beq.n	80209cc <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x114>
 80209be:	8862      	ldrh	r2, [r4, #2]
 80209c0:	9300      	str	r3, [sp, #0]
 80209c2:	4640      	mov	r0, r8
 80209c4:	464b      	mov	r3, r9
 80209c6:	f7ff ff21 	bl	802080c <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 80209ca:	8060      	strh	r0, [r4, #2]
 80209cc:	3404      	adds	r4, #4
 80209ce:	f1aa 0a02 	sub.w	sl, sl, #2
 80209d2:	e7dc      	b.n	802098e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd6>
 80209d4:	462f      	mov	r7, r5
 80209d6:	46da      	mov	sl, fp
 80209d8:	e7d9      	b.n	802098e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd6>
 80209da:	d10d      	bne.n	80209f8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x140>
 80209dc:	783b      	ldrb	r3, [r7, #0]
 80209de:	091b      	lsrs	r3, r3, #4
 80209e0:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 80209e4:	0e0b      	lsrs	r3, r1, #24
 80209e6:	d006      	beq.n	80209f6 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x13e>
 80209e8:	8822      	ldrh	r2, [r4, #0]
 80209ea:	9300      	str	r3, [sp, #0]
 80209ec:	4640      	mov	r0, r8
 80209ee:	464b      	mov	r3, r9
 80209f0:	f7ff ff0c 	bl	802080c <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 80209f4:	8020      	strh	r0, [r4, #0]
 80209f6:	3402      	adds	r4, #2
 80209f8:	9b06      	ldr	r3, [sp, #24]
 80209fa:	9a02      	ldr	r2, [sp, #8]
 80209fc:	881b      	ldrh	r3, [r3, #0]
 80209fe:	eba3 030b 	sub.w	r3, r3, fp
 8020a02:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8020a06:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	@ 0x24
 8020a0a:	4413      	add	r3, r2
 8020a0c:	9a07      	ldr	r2, [sp, #28]
 8020a0e:	fb93 f3f2 	sdiv	r3, r3, r2
 8020a12:	441d      	add	r5, r3
 8020a14:	e7a3      	b.n	802095e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xa6>
 8020a16:	9b05      	ldr	r3, [sp, #20]
 8020a18:	6818      	ldr	r0, [r3, #0]
 8020a1a:	6803      	ldr	r3, [r0, #0]
 8020a1c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8020a1e:	4798      	blx	r3
 8020a20:	b00d      	add	sp, #52	@ 0x34
 8020a22:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8020a26:	bf00      	nop
 8020a28:	20013f2c 	.word	0x20013f2c
 8020a2c:	20013f24 	.word	0x20013f24

08020a30 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>:
 8020a30:	b570      	push	{r4, r5, r6, lr}
 8020a32:	1214      	asrs	r4, r2, #8
 8020a34:	788d      	ldrb	r5, [r1, #2]
 8020a36:	f89d 6010 	ldrb.w	r6, [sp, #16]
 8020a3a:	f004 04f8 	and.w	r4, r4, #248	@ 0xf8
 8020a3e:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 8020a42:	fb15 f503 	smulbb	r5, r5, r3
 8020a46:	fb04 5506 	mla	r5, r4, r6, r5
 8020a4a:	10d0      	asrs	r0, r2, #3
 8020a4c:	784c      	ldrb	r4, [r1, #1]
 8020a4e:	7809      	ldrb	r1, [r1, #0]
 8020a50:	00d2      	lsls	r2, r2, #3
 8020a52:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 8020a56:	b2d2      	uxtb	r2, r2
 8020a58:	ea40 1090 	orr.w	r0, r0, r0, lsr #6
 8020a5c:	fb14 f403 	smulbb	r4, r4, r3
 8020a60:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 8020a64:	fb11 f303 	smulbb	r3, r1, r3
 8020a68:	fb00 4406 	mla	r4, r0, r6, r4
 8020a6c:	fb02 3306 	mla	r3, r2, r6, r3
 8020a70:	b2ad      	uxth	r5, r5
 8020a72:	b29b      	uxth	r3, r3
 8020a74:	b2a4      	uxth	r4, r4
 8020a76:	1c68      	adds	r0, r5, #1
 8020a78:	eb00 2515 	add.w	r5, r0, r5, lsr #8
 8020a7c:	1c62      	adds	r2, r4, #1
 8020a7e:	1c58      	adds	r0, r3, #1
 8020a80:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 8020a84:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 8020a88:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 8020a8c:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 8020a90:	0964      	lsrs	r4, r4, #5
 8020a92:	4328      	orrs	r0, r5
 8020a94:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
 8020a98:	4320      	orrs	r0, r4
 8020a9a:	bd70      	pop	{r4, r5, r6, pc}

08020a9c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
 8020a9c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8020aa0:	b08f      	sub	sp, #60	@ 0x3c
 8020aa2:	461c      	mov	r4, r3
 8020aa4:	f89d 7064 	ldrb.w	r7, [sp, #100]	@ 0x64
 8020aa8:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 8020aaa:	4682      	mov	sl, r0
 8020aac:	460e      	mov	r6, r1
 8020aae:	4615      	mov	r5, r2
 8020ab0:	2f00      	cmp	r7, #0
 8020ab2:	f000 8142 	beq.w	8020d3a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x29e>
 8020ab6:	6820      	ldr	r0, [r4, #0]
 8020ab8:	6861      	ldr	r1, [r4, #4]
 8020aba:	aa0a      	add	r2, sp, #40	@ 0x28
 8020abc:	c203      	stmia	r2!, {r0, r1}
 8020abe:	6818      	ldr	r0, [r3, #0]
 8020ac0:	6859      	ldr	r1, [r3, #4]
 8020ac2:	aa0c      	add	r2, sp, #48	@ 0x30
 8020ac4:	c203      	stmia	r2!, {r0, r1}
 8020ac6:	a80a      	add	r0, sp, #40	@ 0x28
 8020ac8:	f7ee fb88 	bl	800f1dc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8020acc:	4621      	mov	r1, r4
 8020ace:	a80c      	add	r0, sp, #48	@ 0x30
 8020ad0:	f7ee fbac 	bl	800f22c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8020ad4:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	@ 0x30
 8020ad8:	f9bd b036 	ldrsh.w	fp, [sp, #54]	@ 0x36
 8020adc:	f002 0301 	and.w	r3, r2, #1
 8020ae0:	9306      	str	r3, [sp, #24]
 8020ae2:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
 8020ae6:	f003 0101 	and.w	r1, r3, #1
 8020aea:	9105      	str	r1, [sp, #20]
 8020aec:	9805      	ldr	r0, [sp, #20]
 8020aee:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	@ 0x32
 8020af2:	4403      	add	r3, r0
 8020af4:	fb01 2303 	mla	r3, r1, r3, r2
 8020af8:	f04f 0802 	mov.w	r8, #2
 8020afc:	fb93 f3f8 	sdiv	r3, r3, r8
 8020b00:	441e      	add	r6, r3
 8020b02:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
 8020b06:	441a      	add	r2, r3
 8020b08:	f8bd 302a 	ldrh.w	r3, [sp, #42]	@ 0x2a
 8020b0c:	f8ad 2030 	strh.w	r2, [sp, #48]	@ 0x30
 8020b10:	4419      	add	r1, r3
 8020b12:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	@ 0x34
 8020b16:	9303      	str	r3, [sp, #12]
 8020b18:	4b89      	ldr	r3, [pc, #548]	@ (8020d40 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a4>)
 8020b1a:	f8ad 1032 	strh.w	r1, [sp, #50]	@ 0x32
 8020b1e:	6818      	ldr	r0, [r3, #0]
 8020b20:	6803      	ldr	r3, [r0, #0]
 8020b22:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8020b24:	4798      	blx	r3
 8020b26:	4a87      	ldr	r2, [pc, #540]	@ (8020d44 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a8>)
 8020b28:	f9bd 4032 	ldrsh.w	r4, [sp, #50]	@ 0x32
 8020b2c:	8813      	ldrh	r3, [r2, #0]
 8020b2e:	f9bd 9030 	ldrsh.w	r9, [sp, #48]	@ 0x30
 8020b32:	2fff      	cmp	r7, #255	@ 0xff
 8020b34:	fb03 9404 	mla	r4, r3, r4, r9
 8020b38:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8020b3c:	f105 0504 	add.w	r5, r5, #4
 8020b40:	4694      	mov	ip, r2
 8020b42:	fb03 f30b 	mul.w	r3, r3, fp
 8020b46:	d071      	beq.n	8020c2c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x190>
 8020b48:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8020b4c:	43f9      	mvns	r1, r7
 8020b4e:	e9cd 3207 	strd	r3, r2, [sp, #28]
 8020b52:	b2c9      	uxtb	r1, r1
 8020b54:	9104      	str	r1, [sp, #16]
 8020b56:	f8cd 8024 	str.w	r8, [sp, #36]	@ 0x24
 8020b5a:	9b07      	ldr	r3, [sp, #28]
 8020b5c:	42a3      	cmp	r3, r4
 8020b5e:	f240 80e7 	bls.w	8020d30 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x294>
 8020b62:	9b06      	ldr	r3, [sp, #24]
 8020b64:	2b00      	cmp	r3, #0
 8020b66:	d03d      	beq.n	8020be4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x148>
 8020b68:	7831      	ldrb	r1, [r6, #0]
 8020b6a:	9b04      	ldr	r3, [sp, #16]
 8020b6c:	8822      	ldrh	r2, [r4, #0]
 8020b6e:	9300      	str	r3, [sp, #0]
 8020b70:	f001 010f 	and.w	r1, r1, #15
 8020b74:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8020b78:	463b      	mov	r3, r7
 8020b7a:	4429      	add	r1, r5
 8020b7c:	4650      	mov	r0, sl
 8020b7e:	f7ff ff57 	bl	8020a30 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 8020b82:	9b03      	ldr	r3, [sp, #12]
 8020b84:	f824 0b02 	strh.w	r0, [r4], #2
 8020b88:	f106 0801 	add.w	r8, r6, #1
 8020b8c:	f103 3bff 	add.w	fp, r3, #4294967295
 8020b90:	f1bb 0f01 	cmp.w	fp, #1
 8020b94:	46a1      	mov	r9, r4
 8020b96:	f104 0404 	add.w	r4, r4, #4
 8020b9a:	dd27      	ble.n	8020bec <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x150>
 8020b9c:	f898 1000 	ldrb.w	r1, [r8]
 8020ba0:	9b04      	ldr	r3, [sp, #16]
 8020ba2:	f834 2c04 	ldrh.w	r2, [r4, #-4]
 8020ba6:	9300      	str	r3, [sp, #0]
 8020ba8:	0909      	lsrs	r1, r1, #4
 8020baa:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8020bae:	463b      	mov	r3, r7
 8020bb0:	4429      	add	r1, r5
 8020bb2:	4650      	mov	r0, sl
 8020bb4:	f7ff ff3c 	bl	8020a30 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 8020bb8:	f824 0c04 	strh.w	r0, [r4, #-4]
 8020bbc:	f818 1b01 	ldrb.w	r1, [r8], #1
 8020bc0:	9b04      	ldr	r3, [sp, #16]
 8020bc2:	f834 2c02 	ldrh.w	r2, [r4, #-2]
 8020bc6:	9300      	str	r3, [sp, #0]
 8020bc8:	f001 010f 	and.w	r1, r1, #15
 8020bcc:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8020bd0:	463b      	mov	r3, r7
 8020bd2:	4429      	add	r1, r5
 8020bd4:	4650      	mov	r0, sl
 8020bd6:	f7ff ff2b 	bl	8020a30 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 8020bda:	f1ab 0b02 	sub.w	fp, fp, #2
 8020bde:	f824 0c02 	strh.w	r0, [r4, #-2]
 8020be2:	e7d5      	b.n	8020b90 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf4>
 8020be4:	46b0      	mov	r8, r6
 8020be6:	f8dd b00c 	ldr.w	fp, [sp, #12]
 8020bea:	e7d1      	b.n	8020b90 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf4>
 8020bec:	d10f      	bne.n	8020c0e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x172>
 8020bee:	f898 1000 	ldrb.w	r1, [r8]
 8020bf2:	9b04      	ldr	r3, [sp, #16]
 8020bf4:	f8b9 2000 	ldrh.w	r2, [r9]
 8020bf8:	9300      	str	r3, [sp, #0]
 8020bfa:	0909      	lsrs	r1, r1, #4
 8020bfc:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8020c00:	463b      	mov	r3, r7
 8020c02:	4429      	add	r1, r5
 8020c04:	4650      	mov	r0, sl
 8020c06:	f7ff ff13 	bl	8020a30 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 8020c0a:	f829 0b02 	strh.w	r0, [r9], #2
 8020c0e:	9b08      	ldr	r3, [sp, #32]
 8020c10:	9a05      	ldr	r2, [sp, #20]
 8020c12:	881c      	ldrh	r4, [r3, #0]
 8020c14:	9b03      	ldr	r3, [sp, #12]
 8020c16:	1ae4      	subs	r4, r4, r3
 8020c18:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
 8020c1c:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 8020c20:	4413      	add	r3, r2
 8020c22:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8020c24:	fb93 f3f2 	sdiv	r3, r3, r2
 8020c28:	441e      	add	r6, r3
 8020c2a:	e796      	b.n	8020b5a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xbe>
 8020c2c:	4f46      	ldr	r7, [pc, #280]	@ (8020d48 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2ac>)
 8020c2e:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8020c32:	42a3      	cmp	r3, r4
 8020c34:	d97c      	bls.n	8020d30 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x294>
 8020c36:	9a06      	ldr	r2, [sp, #24]
 8020c38:	2a00      	cmp	r2, #0
 8020c3a:	d054      	beq.n	8020ce6 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x24a>
 8020c3c:	7830      	ldrb	r0, [r6, #0]
 8020c3e:	f000 000f 	and.w	r0, r0, #15
 8020c42:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8020c46:	eb05 0e00 	add.w	lr, r5, r0
 8020c4a:	5c28      	ldrb	r0, [r5, r0]
 8020c4c:	f89e 2002 	ldrb.w	r2, [lr, #2]
 8020c50:	f89e e001 	ldrb.w	lr, [lr, #1]
 8020c54:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8020c58:	f40e 6efc 	and.w	lr, lr, #2016	@ 0x7e0
 8020c5c:	ea07 2202 	and.w	r2, r7, r2, lsl #8
 8020c60:	ea42 020e 	orr.w	r2, r2, lr
 8020c64:	ea42 02d0 	orr.w	r2, r2, r0, lsr #3
 8020c68:	f824 2b02 	strh.w	r2, [r4], #2
 8020c6c:	9a03      	ldr	r2, [sp, #12]
 8020c6e:	1c71      	adds	r1, r6, #1
 8020c70:	f102 3eff 	add.w	lr, r2, #4294967295
 8020c74:	f1be 0f01 	cmp.w	lr, #1
 8020c78:	4620      	mov	r0, r4
 8020c7a:	f104 0404 	add.w	r4, r4, #4
 8020c7e:	dd36      	ble.n	8020cee <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x252>
 8020c80:	7808      	ldrb	r0, [r1, #0]
 8020c82:	0900      	lsrs	r0, r0, #4
 8020c84:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8020c88:	eb05 0a00 	add.w	sl, r5, r0
 8020c8c:	f1ae 0e02 	sub.w	lr, lr, #2
 8020c90:	f89a 2001 	ldrb.w	r2, [sl, #1]
 8020c94:	f89a 9002 	ldrb.w	r9, [sl, #2]
 8020c98:	00d2      	lsls	r2, r2, #3
 8020c9a:	ea07 2909 	and.w	r9, r7, r9, lsl #8
 8020c9e:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8020ca2:	ea49 0202 	orr.w	r2, r9, r2
 8020ca6:	f815 9000 	ldrb.w	r9, [r5, r0]
 8020caa:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
 8020cae:	f824 2c04 	strh.w	r2, [r4, #-4]
 8020cb2:	f811 0b01 	ldrb.w	r0, [r1], #1
 8020cb6:	f000 000f 	and.w	r0, r0, #15
 8020cba:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8020cbe:	eb05 0a00 	add.w	sl, r5, r0
 8020cc2:	f89a 2001 	ldrb.w	r2, [sl, #1]
 8020cc6:	f89a 9002 	ldrb.w	r9, [sl, #2]
 8020cca:	00d2      	lsls	r2, r2, #3
 8020ccc:	ea07 2909 	and.w	r9, r7, r9, lsl #8
 8020cd0:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8020cd4:	ea49 0202 	orr.w	r2, r9, r2
 8020cd8:	f815 9000 	ldrb.w	r9, [r5, r0]
 8020cdc:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
 8020ce0:	f824 2c02 	strh.w	r2, [r4, #-2]
 8020ce4:	e7c6      	b.n	8020c74 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1d8>
 8020ce6:	4631      	mov	r1, r6
 8020ce8:	f8dd e00c 	ldr.w	lr, [sp, #12]
 8020cec:	e7c2      	b.n	8020c74 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1d8>
 8020cee:	d111      	bne.n	8020d14 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x278>
 8020cf0:	7809      	ldrb	r1, [r1, #0]
 8020cf2:	0909      	lsrs	r1, r1, #4
 8020cf4:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8020cf8:	186c      	adds	r4, r5, r1
 8020cfa:	5c69      	ldrb	r1, [r5, r1]
 8020cfc:	78a2      	ldrb	r2, [r4, #2]
 8020cfe:	7864      	ldrb	r4, [r4, #1]
 8020d00:	00e4      	lsls	r4, r4, #3
 8020d02:	ea07 2202 	and.w	r2, r7, r2, lsl #8
 8020d06:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
 8020d0a:	4322      	orrs	r2, r4
 8020d0c:	ea42 02d1 	orr.w	r2, r2, r1, lsr #3
 8020d10:	f820 2b02 	strh.w	r2, [r0], #2
 8020d14:	9a03      	ldr	r2, [sp, #12]
 8020d16:	f8bc 4000 	ldrh.w	r4, [ip]
 8020d1a:	9905      	ldr	r1, [sp, #20]
 8020d1c:	1aa4      	subs	r4, r4, r2
 8020d1e:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	@ 0x2c
 8020d22:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8020d26:	440a      	add	r2, r1
 8020d28:	fb92 f2f8 	sdiv	r2, r2, r8
 8020d2c:	4416      	add	r6, r2
 8020d2e:	e780      	b.n	8020c32 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x196>
 8020d30:	4b03      	ldr	r3, [pc, #12]	@ (8020d40 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a4>)
 8020d32:	6818      	ldr	r0, [r3, #0]
 8020d34:	6803      	ldr	r3, [r0, #0]
 8020d36:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8020d38:	4798      	blx	r3
 8020d3a:	b00f      	add	sp, #60	@ 0x3c
 8020d3c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8020d40:	20013f2c 	.word	0x20013f2c
 8020d44:	20013f24 	.word	0x20013f24
 8020d48:	fffff800 	.word	0xfffff800

08020d4c <CRC_Lock>:
 8020d4c:	b530      	push	{r4, r5, lr}
 8020d4e:	4a2d      	ldr	r2, [pc, #180]	@ (8020e04 <CRC_Lock+0xb8>)
 8020d50:	6813      	ldr	r3, [r2, #0]
 8020d52:	f023 0301 	bic.w	r3, r3, #1
 8020d56:	6013      	str	r3, [r2, #0]
 8020d58:	4b2b      	ldr	r3, [pc, #172]	@ (8020e08 <CRC_Lock+0xbc>)
 8020d5a:	681c      	ldr	r4, [r3, #0]
 8020d5c:	f64f 72f0 	movw	r2, #65520	@ 0xfff0
 8020d60:	4014      	ands	r4, r2
 8020d62:	f24c 2540 	movw	r5, #49728	@ 0xc240
 8020d66:	42ac      	cmp	r4, r5
 8020d68:	d005      	beq.n	8020d76 <CRC_Lock+0x2a>
 8020d6a:	681c      	ldr	r4, [r3, #0]
 8020d6c:	f24c 2570 	movw	r5, #49776	@ 0xc270
 8020d70:	4014      	ands	r4, r2
 8020d72:	42ac      	cmp	r4, r5
 8020d74:	d125      	bne.n	8020dc2 <CRC_Lock+0x76>
 8020d76:	4b25      	ldr	r3, [pc, #148]	@ (8020e0c <CRC_Lock+0xc0>)
 8020d78:	681b      	ldr	r3, [r3, #0]
 8020d7a:	2b00      	cmp	r3, #0
 8020d7c:	d139      	bne.n	8020df2 <CRC_Lock+0xa6>
 8020d7e:	4b24      	ldr	r3, [pc, #144]	@ (8020e10 <CRC_Lock+0xc4>)
 8020d80:	681a      	ldr	r2, [r3, #0]
 8020d82:	f3c2 020b 	ubfx	r2, r2, #0, #12
 8020d86:	f5b2 6f8a 	cmp.w	r2, #1104	@ 0x450
 8020d8a:	d00d      	beq.n	8020da8 <CRC_Lock+0x5c>
 8020d8c:	681a      	ldr	r2, [r3, #0]
 8020d8e:	f240 4483 	movw	r4, #1155	@ 0x483
 8020d92:	f3c2 020b 	ubfx	r2, r2, #0, #12
 8020d96:	42a2      	cmp	r2, r4
 8020d98:	d006      	beq.n	8020da8 <CRC_Lock+0x5c>
 8020d9a:	681b      	ldr	r3, [r3, #0]
 8020d9c:	f240 4285 	movw	r2, #1157	@ 0x485
 8020da0:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8020da4:	4293      	cmp	r3, r2
 8020da6:	d124      	bne.n	8020df2 <CRC_Lock+0xa6>
 8020da8:	4b1a      	ldr	r3, [pc, #104]	@ (8020e14 <CRC_Lock+0xc8>)
 8020daa:	2201      	movs	r2, #1
 8020dac:	601a      	str	r2, [r3, #0]
 8020dae:	681a      	ldr	r2, [r3, #0]
 8020db0:	2a00      	cmp	r2, #0
 8020db2:	d1fc      	bne.n	8020dae <CRC_Lock+0x62>
 8020db4:	4b18      	ldr	r3, [pc, #96]	@ (8020e18 <CRC_Lock+0xcc>)
 8020db6:	6018      	str	r0, [r3, #0]
 8020db8:	6818      	ldr	r0, [r3, #0]
 8020dba:	1a43      	subs	r3, r0, r1
 8020dbc:	4258      	negs	r0, r3
 8020dbe:	4158      	adcs	r0, r3
 8020dc0:	e00e      	b.n	8020de0 <CRC_Lock+0x94>
 8020dc2:	681b      	ldr	r3, [r3, #0]
 8020dc4:	4013      	ands	r3, r2
 8020dc6:	f24d 2220 	movw	r2, #53792	@ 0xd220
 8020dca:	4293      	cmp	r3, r2
 8020dcc:	d111      	bne.n	8020df2 <CRC_Lock+0xa6>
 8020dce:	4b13      	ldr	r3, [pc, #76]	@ (8020e1c <CRC_Lock+0xd0>)
 8020dd0:	681b      	ldr	r3, [r3, #0]
 8020dd2:	f240 4286 	movw	r2, #1158	@ 0x486
 8020dd6:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8020dda:	4293      	cmp	r3, r2
 8020ddc:	d001      	beq.n	8020de2 <CRC_Lock+0x96>
 8020dde:	2000      	movs	r0, #0
 8020de0:	bd30      	pop	{r4, r5, pc}
 8020de2:	4b0f      	ldr	r3, [pc, #60]	@ (8020e20 <CRC_Lock+0xd4>)
 8020de4:	2201      	movs	r2, #1
 8020de6:	601a      	str	r2, [r3, #0]
 8020de8:	681a      	ldr	r2, [r3, #0]
 8020dea:	2a00      	cmp	r2, #0
 8020dec:	d1fc      	bne.n	8020de8 <CRC_Lock+0x9c>
 8020dee:	4b0d      	ldr	r3, [pc, #52]	@ (8020e24 <CRC_Lock+0xd8>)
 8020df0:	e7e1      	b.n	8020db6 <CRC_Lock+0x6a>
 8020df2:	4b0d      	ldr	r3, [pc, #52]	@ (8020e28 <CRC_Lock+0xdc>)
 8020df4:	2201      	movs	r2, #1
 8020df6:	601a      	str	r2, [r3, #0]
 8020df8:	681a      	ldr	r2, [r3, #0]
 8020dfa:	2a00      	cmp	r2, #0
 8020dfc:	d1fc      	bne.n	8020df8 <CRC_Lock+0xac>
 8020dfe:	4b0b      	ldr	r3, [pc, #44]	@ (8020e2c <CRC_Lock+0xe0>)
 8020e00:	e7d9      	b.n	8020db6 <CRC_Lock+0x6a>
 8020e02:	bf00      	nop
 8020e04:	e0002000 	.word	0xe0002000
 8020e08:	e000ed00 	.word	0xe000ed00
 8020e0c:	e0042000 	.word	0xe0042000
 8020e10:	5c001000 	.word	0x5c001000
 8020e14:	58024c08 	.word	0x58024c08
 8020e18:	58024c00 	.word	0x58024c00
 8020e1c:	46008ff0 	.word	0x46008ff0
 8020e20:	46024c08 	.word	0x46024c08
 8020e24:	46024c00 	.word	0x46024c00
 8020e28:	40023008 	.word	0x40023008
 8020e2c:	40023000 	.word	0x40023000

08020e30 <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>:
 8020e30:	6101      	str	r1, [r0, #16]
 8020e32:	4770      	bx	lr

08020e34 <_ZN8touchgfx8Gestures4tickEv>:
 8020e34:	7b83      	ldrb	r3, [r0, #14]
 8020e36:	b14b      	cbz	r3, 8020e4c <_ZN8touchgfx8Gestures4tickEv+0x18>
 8020e38:	8903      	ldrh	r3, [r0, #8]
 8020e3a:	3301      	adds	r3, #1
 8020e3c:	b29b      	uxth	r3, r3
 8020e3e:	2b07      	cmp	r3, #7
 8020e40:	8103      	strh	r3, [r0, #8]
 8020e42:	bf81      	itttt	hi
 8020e44:	2300      	movhi	r3, #0
 8020e46:	8143      	strhhi	r3, [r0, #10]
 8020e48:	8183      	strhhi	r3, [r0, #12]
 8020e4a:	7383      	strbhi	r3, [r0, #14]
 8020e4c:	4770      	bx	lr
	...

08020e50 <_ZN8touchgfx8Gestures17registerDragEventEtttt>:
 8020e50:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 8020e54:	4698      	mov	r8, r3
 8020e56:	8883      	ldrh	r3, [r0, #4]
 8020e58:	f8ad 3006 	strh.w	r3, [sp, #6]
 8020e5c:	eba8 0303 	sub.w	r3, r8, r3
 8020e60:	b21b      	sxth	r3, r3
 8020e62:	4604      	mov	r4, r0
 8020e64:	2b00      	cmp	r3, #0
 8020e66:	4617      	mov	r7, r2
 8020e68:	4a18      	ldr	r2, [pc, #96]	@ (8020ecc <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x7c>)
 8020e6a:	9200      	str	r2, [sp, #0]
 8020e6c:	bfb8      	it	lt
 8020e6e:	425b      	neglt	r3, r3
 8020e70:	8aa2      	ldrh	r2, [r4, #20]
 8020e72:	f8bd 5028 	ldrh.w	r5, [sp, #40]	@ 0x28
 8020e76:	f8ad 800a 	strh.w	r8, [sp, #10]
 8020e7a:	b21b      	sxth	r3, r3
 8020e7c:	460e      	mov	r6, r1
 8020e7e:	4293      	cmp	r3, r2
 8020e80:	88c1      	ldrh	r1, [r0, #6]
 8020e82:	f8ad 1008 	strh.w	r1, [sp, #8]
 8020e86:	f04f 0000 	mov.w	r0, #0
 8020e8a:	f88d 0004 	strb.w	r0, [sp, #4]
 8020e8e:	f8ad 500c 	strh.w	r5, [sp, #12]
 8020e92:	dc07      	bgt.n	8020ea4 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x54>
 8020e94:	1a69      	subs	r1, r5, r1
 8020e96:	b209      	sxth	r1, r1
 8020e98:	2900      	cmp	r1, #0
 8020e9a:	bfb8      	it	lt
 8020e9c:	4249      	neglt	r1, r1
 8020e9e:	b209      	sxth	r1, r1
 8020ea0:	428a      	cmp	r2, r1
 8020ea2:	da10      	bge.n	8020ec6 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x76>
 8020ea4:	6920      	ldr	r0, [r4, #16]
 8020ea6:	6803      	ldr	r3, [r0, #0]
 8020ea8:	4669      	mov	r1, sp
 8020eaa:	685b      	ldr	r3, [r3, #4]
 8020eac:	4798      	blx	r3
 8020eae:	eba8 0606 	sub.w	r6, r8, r6
 8020eb2:	2300      	movs	r3, #0
 8020eb4:	1bef      	subs	r7, r5, r7
 8020eb6:	2001      	movs	r0, #1
 8020eb8:	8123      	strh	r3, [r4, #8]
 8020eba:	8166      	strh	r6, [r4, #10]
 8020ebc:	81a7      	strh	r7, [r4, #12]
 8020ebe:	f8a4 8004 	strh.w	r8, [r4, #4]
 8020ec2:	80e5      	strh	r5, [r4, #6]
 8020ec4:	73a0      	strb	r0, [r4, #14]
 8020ec6:	b004      	add	sp, #16
 8020ec8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8020ecc:	08024e38 	.word	0x08024e38

08020ed0 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>:
 8020ed0:	b5f0      	push	{r4, r5, r6, r7, lr}
 8020ed2:	461e      	mov	r6, r3
 8020ed4:	1e4b      	subs	r3, r1, #1
 8020ed6:	2b01      	cmp	r3, #1
 8020ed8:	b085      	sub	sp, #20
 8020eda:	4604      	mov	r4, r0
 8020edc:	460d      	mov	r5, r1
 8020ede:	4617      	mov	r7, r2
 8020ee0:	d84b      	bhi.n	8020f7a <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xaa>
 8020ee2:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 8020ee6:	1cd3      	adds	r3, r2, #3
 8020ee8:	b29b      	uxth	r3, r3
 8020eea:	2b06      	cmp	r3, #6
 8020eec:	d916      	bls.n	8020f1c <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x4c>
 8020eee:	f8df c0a0 	ldr.w	ip, [pc, #160]	@ 8020f90 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
 8020ef2:	f8cd c004 	str.w	ip, [sp, #4]
 8020ef6:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8020efa:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 8020efe:	6900      	ldr	r0, [r0, #16]
 8020f00:	f8ad 100c 	strh.w	r1, [sp, #12]
 8020f04:	f04f 0c00 	mov.w	ip, #0
 8020f08:	f88d c008 	strb.w	ip, [sp, #8]
 8020f0c:	f8ad 200a 	strh.w	r2, [sp, #10]
 8020f10:	f8ad 300e 	strh.w	r3, [sp, #14]
 8020f14:	6803      	ldr	r3, [r0, #0]
 8020f16:	a901      	add	r1, sp, #4
 8020f18:	689b      	ldr	r3, [r3, #8]
 8020f1a:	4798      	blx	r3
 8020f1c:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8020f20:	1cd3      	adds	r3, r2, #3
 8020f22:	b29b      	uxth	r3, r3
 8020f24:	2b06      	cmp	r3, #6
 8020f26:	d916      	bls.n	8020f56 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 8020f28:	f8df c064 	ldr.w	ip, [pc, #100]	@ 8020f90 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
 8020f2c:	f8cd c004 	str.w	ip, [sp, #4]
 8020f30:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8020f34:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 8020f38:	6920      	ldr	r0, [r4, #16]
 8020f3a:	f8ad 100c 	strh.w	r1, [sp, #12]
 8020f3e:	f04f 0c01 	mov.w	ip, #1
 8020f42:	f88d c008 	strb.w	ip, [sp, #8]
 8020f46:	f8ad 200a 	strh.w	r2, [sp, #10]
 8020f4a:	f8ad 300e 	strh.w	r3, [sp, #14]
 8020f4e:	6803      	ldr	r3, [r0, #0]
 8020f50:	a901      	add	r1, sp, #4
 8020f52:	689b      	ldr	r3, [r3, #8]
 8020f54:	4798      	blx	r3
 8020f56:	4b0d      	ldr	r3, [pc, #52]	@ (8020f8c <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xbc>)
 8020f58:	9301      	str	r3, [sp, #4]
 8020f5a:	6920      	ldr	r0, [r4, #16]
 8020f5c:	f88d 5008 	strb.w	r5, [sp, #8]
 8020f60:	2300      	movs	r3, #0
 8020f62:	f8ad 700a 	strh.w	r7, [sp, #10]
 8020f66:	f8ad 600c 	strh.w	r6, [sp, #12]
 8020f6a:	f8ad 300e 	strh.w	r3, [sp, #14]
 8020f6e:	6803      	ldr	r3, [r0, #0]
 8020f70:	a901      	add	r1, sp, #4
 8020f72:	681b      	ldr	r3, [r3, #0]
 8020f74:	4798      	blx	r3
 8020f76:	b005      	add	sp, #20
 8020f78:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8020f7a:	2900      	cmp	r1, #0
 8020f7c:	d1eb      	bne.n	8020f56 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 8020f7e:	80a2      	strh	r2, [r4, #4]
 8020f80:	80c6      	strh	r6, [r0, #6]
 8020f82:	60a1      	str	r1, [r4, #8]
 8020f84:	81a1      	strh	r1, [r4, #12]
 8020f86:	73a1      	strb	r1, [r4, #14]
 8020f88:	e7e5      	b.n	8020f56 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 8020f8a:	bf00      	nop
 8020f8c:	08024e24 	.word	0x08024e24
 8020f90:	08024e4c 	.word	0x08024e4c

08020f94 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.1>:
 8020f94:	10c9      	asrs	r1, r1, #3
 8020f96:	2900      	cmp	r1, #0
 8020f98:	bfb8      	it	lt
 8020f9a:	4249      	neglt	r1, r1
 8020f9c:	2801      	cmp	r0, #1
 8020f9e:	d108      	bne.n	8020fb2 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.1+0x1e>
 8020fa0:	f3c1 0008 	ubfx	r0, r1, #0, #9
 8020fa4:	f5b0 7f80 	cmp.w	r0, #256	@ 0x100
 8020fa8:	4601      	mov	r1, r0
 8020faa:	dd02      	ble.n	8020fb2 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.1+0x1e>
 8020fac:	f5c0 7000 	rsb	r0, r0, #512	@ 0x200
 8020fb0:	4770      	bx	lr
 8020fb2:	29ff      	cmp	r1, #255	@ 0xff
 8020fb4:	bfa8      	it	ge
 8020fb6:	21ff      	movge	r1, #255	@ 0xff
 8020fb8:	4608      	mov	r0, r1
 8020fba:	4770      	bx	lr

08020fbc <_ZN8touchgfx10Rasterizer6lineToEii>:
 8020fbc:	b410      	push	{r4}
 8020fbe:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
 8020fc2:	429c      	cmp	r4, r3
 8020fc4:	d803      	bhi.n	8020fce <_ZN8touchgfx10Rasterizer6lineToEii+0x12>
 8020fc6:	f85d 4b04 	ldr.w	r4, [sp], #4
 8020fca:	f7ed b8a3 	b.w	800e114 <_ZN8touchgfx7Outline6lineToEii>
 8020fce:	f85d 4b04 	ldr.w	r4, [sp], #4
 8020fd2:	4770      	bx	lr

08020fd4 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh>:
 8020fd4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8020fd8:	b08b      	sub	sp, #44	@ 0x2c
 8020fda:	e9cd 2306 	strd	r2, r3, [sp, #24]
 8020fde:	f89d 3050 	ldrb.w	r3, [sp, #80]	@ 0x50
 8020fe2:	9308      	str	r3, [sp, #32]
 8020fe4:	4606      	mov	r6, r0
 8020fe6:	f89d 3054 	ldrb.w	r3, [sp, #84]	@ 0x54
 8020fea:	9309      	str	r3, [sp, #36]	@ 0x24
 8020fec:	468a      	mov	sl, r1
 8020fee:	f7ed f9fe 	bl	800e3ee <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv>
 8020ff2:	68b5      	ldr	r5, [r6, #8]
 8020ff4:	4604      	mov	r4, r0
 8020ff6:	2d00      	cmp	r5, #0
 8020ff8:	d044      	beq.n	8021084 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
 8020ffa:	6873      	ldr	r3, [r6, #4]
 8020ffc:	42ab      	cmp	r3, r5
 8020ffe:	d33d      	bcc.n	802107c <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xa8>
 8021000:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 8021004:	f9b6 2034 	ldrsh.w	r2, [r6, #52]	@ 0x34
 8021008:	eb02 0b03 	add.w	fp, r2, r3
 802100c:	e9dd 1206 	ldrd	r1, r2, [sp, #24]
 8021010:	fb02 1203 	mla	r2, r2, r3, r1
 8021014:	9205      	str	r2, [sp, #20]
 8021016:	1e6a      	subs	r2, r5, #1
 8021018:	9204      	str	r2, [sp, #16]
 802101a:	f04f 0800 	mov.w	r8, #0
 802101e:	f9b4 9002 	ldrsh.w	r9, [r4, #2]
 8021022:	f9b4 7000 	ldrsh.w	r7, [r4]
 8021026:	454b      	cmp	r3, r9
 8021028:	463a      	mov	r2, r7
 802102a:	d008      	beq.n	802103e <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x6a>
 802102c:	f9b6 3034 	ldrsh.w	r3, [r6, #52]	@ 0x34
 8021030:	eb03 0b09 	add.w	fp, r3, r9
 8021034:	e9dd 1306 	ldrd	r1, r3, [sp, #24]
 8021038:	fb03 1309 	mla	r3, r3, r9, r1
 802103c:	9305      	str	r3, [sp, #20]
 802103e:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 8021042:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
 8021046:	4498      	add	r8, r3
 8021048:	9b04      	ldr	r3, [sp, #16]
 802104a:	3b01      	subs	r3, #1
 802104c:	9304      	str	r3, [sp, #16]
 802104e:	9b04      	ldr	r3, [sp, #16]
 8021050:	3301      	adds	r3, #1
 8021052:	d015      	beq.n	8021080 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xac>
 8021054:	f934 3f08 	ldrsh.w	r3, [r4, #8]!
 8021058:	42bb      	cmp	r3, r7
 802105a:	d117      	bne.n	802108c <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb8>
 802105c:	f9b4 0002 	ldrsh.w	r0, [r4, #2]
 8021060:	9b04      	ldr	r3, [sp, #16]
 8021062:	4548      	cmp	r0, r9
 8021064:	f103 33ff 	add.w	r3, r3, #4294967295
 8021068:	d17f      	bne.n	802116a <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x196>
 802106a:	f9b4 0006 	ldrsh.w	r0, [r4, #6]
 802106e:	4401      	add	r1, r0
 8021070:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8021074:	4480      	add	r8, r0
 8021076:	e7e9      	b.n	802104c <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x78>
 8021078:	461f      	mov	r7, r3
 802107a:	e044      	b.n	8021106 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x132>
 802107c:	2000      	movs	r0, #0
 802107e:	e002      	b.n	8021086 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb2>
 8021080:	2900      	cmp	r1, #0
 8021082:	d16f      	bne.n	8021164 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x190>
 8021084:	2001      	movs	r0, #1
 8021086:	b00b      	add	sp, #44	@ 0x2c
 8021088:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802108c:	2900      	cmp	r1, #0
 802108e:	d030      	beq.n	80210f2 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x11e>
 8021090:	2f00      	cmp	r7, #0
 8021092:	db29      	blt.n	80210e8 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x114>
 8021094:	f9b6 3036 	ldrsh.w	r3, [r6, #54]	@ 0x36
 8021098:	42bb      	cmp	r3, r7
 802109a:	dd25      	ble.n	80210e8 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x114>
 802109c:	ebc1 1188 	rsb	r1, r1, r8, lsl #6
 80210a0:	f896 0030 	ldrb.w	r0, [r6, #48]	@ 0x30
 80210a4:	f7ff ff76 	bl	8020f94 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.1>
 80210a8:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80210aa:	fb10 f003 	smulbb	r0, r0, r3
 80210ae:	b280      	uxth	r0, r0
 80210b0:	1c41      	adds	r1, r0, #1
 80210b2:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 80210b6:	1209      	asrs	r1, r1, #8
 80210b8:	f011 0fff 	tst.w	r1, #255	@ 0xff
 80210bc:	d014      	beq.n	80210e8 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x114>
 80210be:	9808      	ldr	r0, [sp, #32]
 80210c0:	8e73      	ldrh	r3, [r6, #50]	@ 0x32
 80210c2:	b2c9      	uxtb	r1, r1
 80210c4:	b2ba      	uxth	r2, r7
 80210c6:	9102      	str	r1, [sp, #8]
 80210c8:	2101      	movs	r1, #1
 80210ca:	4413      	add	r3, r2
 80210cc:	9101      	str	r1, [sp, #4]
 80210ce:	4402      	add	r2, r0
 80210d0:	fa0f f18b 	sxth.w	r1, fp
 80210d4:	f8da 0000 	ldr.w	r0, [sl]
 80210d8:	9100      	str	r1, [sp, #0]
 80210da:	6941      	ldr	r1, [r0, #20]
 80210dc:	b21b      	sxth	r3, r3
 80210de:	460d      	mov	r5, r1
 80210e0:	b212      	sxth	r2, r2
 80210e2:	9905      	ldr	r1, [sp, #20]
 80210e4:	4650      	mov	r0, sl
 80210e6:	47a8      	blx	r5
 80210e8:	9b04      	ldr	r3, [sp, #16]
 80210ea:	3301      	adds	r3, #1
 80210ec:	f107 0201 	add.w	r2, r7, #1
 80210f0:	d0c8      	beq.n	8021084 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
 80210f2:	f9b4 7000 	ldrsh.w	r7, [r4]
 80210f6:	1abb      	subs	r3, r7, r2
 80210f8:	2b00      	cmp	r3, #0
 80210fa:	dd31      	ble.n	8021160 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 80210fc:	2a00      	cmp	r2, #0
 80210fe:	dabb      	bge.n	8021078 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xa4>
 8021100:	2f00      	cmp	r7, #0
 8021102:	dd2d      	ble.n	8021160 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 8021104:	2200      	movs	r2, #0
 8021106:	f9b6 3036 	ldrsh.w	r3, [r6, #54]	@ 0x36
 802110a:	19d1      	adds	r1, r2, r7
 802110c:	4299      	cmp	r1, r3
 802110e:	db02      	blt.n	8021116 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x142>
 8021110:	1a9f      	subs	r7, r3, r2
 8021112:	2f00      	cmp	r7, #0
 8021114:	dd24      	ble.n	8021160 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 8021116:	ea4f 1188 	mov.w	r1, r8, lsl #6
 802111a:	f896 0030 	ldrb.w	r0, [r6, #48]	@ 0x30
 802111e:	f7ff ff39 	bl	8020f94 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.1>
 8021122:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8021124:	fb10 f003 	smulbb	r0, r0, r3
 8021128:	b280      	uxth	r0, r0
 802112a:	1c41      	adds	r1, r0, #1
 802112c:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 8021130:	1209      	asrs	r1, r1, #8
 8021132:	f011 0fff 	tst.w	r1, #255	@ 0xff
 8021136:	d013      	beq.n	8021160 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 8021138:	9808      	ldr	r0, [sp, #32]
 802113a:	8e73      	ldrh	r3, [r6, #50]	@ 0x32
 802113c:	b292      	uxth	r2, r2
 802113e:	b2c9      	uxtb	r1, r1
 8021140:	4413      	add	r3, r2
 8021142:	9102      	str	r1, [sp, #8]
 8021144:	4402      	add	r2, r0
 8021146:	b23f      	sxth	r7, r7
 8021148:	f8da 0000 	ldr.w	r0, [sl]
 802114c:	9701      	str	r7, [sp, #4]
 802114e:	fa0f f18b 	sxth.w	r1, fp
 8021152:	9100      	str	r1, [sp, #0]
 8021154:	6947      	ldr	r7, [r0, #20]
 8021156:	9905      	ldr	r1, [sp, #20]
 8021158:	b21b      	sxth	r3, r3
 802115a:	b212      	sxth	r2, r2
 802115c:	4650      	mov	r0, sl
 802115e:	47b8      	blx	r7
 8021160:	464b      	mov	r3, r9
 8021162:	e75c      	b.n	802101e <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x4a>
 8021164:	2f00      	cmp	r7, #0
 8021166:	da95      	bge.n	8021094 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xc0>
 8021168:	e78c      	b.n	8021084 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
 802116a:	2900      	cmp	r1, #0
 802116c:	d0f8      	beq.n	8021160 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 802116e:	e78f      	b.n	8021090 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xbc>

08021170 <_ZN8touchgfx6CanvasC1EPKNS_15AbstractPainterERKNS_4RectES6_h>:
 8021170:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 8021174:	461e      	mov	r6, r3
 8021176:	4b36      	ldr	r3, [pc, #216]	@ (8021250 <_ZN8touchgfx6CanvasC1EPKNS_15AbstractPainterERKNS_4RectES6_h+0xe0>)
 8021178:	e9c0 3100 	strd	r3, r1, [r0]
 802117c:	f9b2 3004 	ldrsh.w	r3, [r2, #4]
 8021180:	8103      	strh	r3, [r0, #8]
 8021182:	2500      	movs	r5, #0
 8021184:	f89d 3020 	ldrb.w	r3, [sp, #32]
 8021188:	7283      	strb	r3, [r0, #10]
 802118a:	f100 0814 	add.w	r8, r0, #20
 802118e:	4604      	mov	r4, r0
 8021190:	8185      	strh	r5, [r0, #12]
 8021192:	81c5      	strh	r5, [r0, #14]
 8021194:	8205      	strh	r5, [r0, #16]
 8021196:	8245      	strh	r5, [r0, #18]
 8021198:	4640      	mov	r0, r8
 802119a:	4617      	mov	r7, r2
 802119c:	f7ec faf2 	bl	800d784 <_ZN8touchgfx7OutlineC1Ev>
 80211a0:	e9c4 5513 	strd	r5, r5, [r4, #76]	@ 0x4c
 80211a4:	e9c4 5515 	strd	r5, r5, [r4, #84]	@ 0x54
 80211a8:	e9c4 5518 	strd	r5, r5, [r4, #96]	@ 0x60
 80211ac:	e9c4 551b 	strd	r5, r5, [r4, #108]	@ 0x6c
 80211b0:	f884 5044 	strb.w	r5, [r4, #68]	@ 0x44
 80211b4:	f8a4 5046 	strh.w	r5, [r4, #70]	@ 0x46
 80211b8:	f8a4 5048 	strh.w	r5, [r4, #72]	@ 0x48
 80211bc:	f8a4 504a 	strh.w	r5, [r4, #74]	@ 0x4a
 80211c0:	f884 505c 	strb.w	r5, [r4, #92]	@ 0x5c
 80211c4:	f884 505d 	strb.w	r5, [r4, #93]	@ 0x5d
 80211c8:	f8a4 5068 	strh.w	r5, [r4, #104]	@ 0x68
 80211cc:	6830      	ldr	r0, [r6, #0]
 80211ce:	6871      	ldr	r1, [r6, #4]
 80211d0:	8872      	ldrh	r2, [r6, #2]
 80211d2:	8835      	ldrh	r5, [r6, #0]
 80211d4:	466b      	mov	r3, sp
 80211d6:	c303      	stmia	r3!, {r0, r1}
 80211d8:	887b      	ldrh	r3, [r7, #2]
 80211da:	f9b6 0004 	ldrsh.w	r0, [r6, #4]
 80211de:	f9b6 1006 	ldrsh.w	r1, [r6, #6]
 80211e2:	4413      	add	r3, r2
 80211e4:	883a      	ldrh	r2, [r7, #0]
 80211e6:	81e3      	strh	r3, [r4, #14]
 80211e8:	442a      	add	r2, r5
 80211ea:	81a2      	strh	r2, [r4, #12]
 80211ec:	8220      	strh	r0, [r4, #16]
 80211ee:	8261      	strh	r1, [r4, #18]
 80211f0:	4668      	mov	r0, sp
 80211f2:	4639      	mov	r1, r7
 80211f4:	f7ee f81a 	bl	800f22c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80211f8:	f104 000c 	add.w	r0, r4, #12
 80211fc:	f7ed ffee 	bl	800f1dc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8021200:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
 8021204:	f8bd 2000 	ldrh.w	r2, [sp]
 8021208:	f8a4 2046 	strh.w	r2, [r4, #70]	@ 0x46
 802120c:	f8a4 3048 	strh.w	r3, [r4, #72]	@ 0x48
 8021210:	4640      	mov	r0, r8
 8021212:	f7ec fa9b 	bl	800d74c <_ZN8touchgfx7Outline5resetEv>
 8021216:	f9bd 3000 	ldrsh.w	r3, [sp]
 802121a:	f9b4 2012 	ldrsh.w	r2, [r4, #18]
 802121e:	015b      	lsls	r3, r3, #5
 8021220:	64e3      	str	r3, [r4, #76]	@ 0x4c
 8021222:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
 8021226:	015b      	lsls	r3, r3, #5
 8021228:	6523      	str	r3, [r4, #80]	@ 0x50
 802122a:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 802122e:	015b      	lsls	r3, r3, #5
 8021230:	6563      	str	r3, [r4, #84]	@ 0x54
 8021232:	f9bd 3006 	ldrsh.w	r3, [sp, #6]
 8021236:	015b      	lsls	r3, r3, #5
 8021238:	65a3      	str	r3, [r4, #88]	@ 0x58
 802123a:	f9b4 3010 	ldrsh.w	r3, [r4, #16]
 802123e:	f8a4 304a 	strh.w	r3, [r4, #74]	@ 0x4a
 8021242:	4620      	mov	r0, r4
 8021244:	e9c4 320f 	strd	r3, r2, [r4, #60]	@ 0x3c
 8021248:	b002      	add	sp, #8
 802124a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 802124e:	bf00      	nop
 8021250:	08025188 	.word	0x08025188

08021254 <_ZN8touchgfx6Canvas5closeEv>:
 8021254:	b538      	push	{r3, r4, r5, lr}
 8021256:	f890 305c 	ldrb.w	r3, [r0, #92]	@ 0x5c
 802125a:	4604      	mov	r4, r0
 802125c:	b193      	cbz	r3, 8021284 <_ZN8touchgfx6Canvas5closeEv+0x30>
 802125e:	f890 3068 	ldrb.w	r3, [r0, #104]	@ 0x68
 8021262:	f890 2069 	ldrb.w	r2, [r0, #105]	@ 0x69
 8021266:	4213      	tst	r3, r2
 8021268:	d10c      	bne.n	8021284 <_ZN8touchgfx6Canvas5closeEv+0x30>
 802126a:	f100 0514 	add.w	r5, r0, #20
 802126e:	b123      	cbz	r3, 802127a <_ZN8touchgfx6Canvas5closeEv+0x26>
 8021270:	e9d0 1218 	ldrd	r1, r2, [r0, #96]	@ 0x60
 8021274:	4628      	mov	r0, r5
 8021276:	f7ff fea1 	bl	8020fbc <_ZN8touchgfx10Rasterizer6lineToEii>
 802127a:	e9d4 121b 	ldrd	r1, r2, [r4, #108]	@ 0x6c
 802127e:	4628      	mov	r0, r5
 8021280:	f7ff fe9c 	bl	8020fbc <_ZN8touchgfx10Rasterizer6lineToEii>
 8021284:	2300      	movs	r3, #0
 8021286:	f884 305c 	strb.w	r3, [r4, #92]	@ 0x5c
 802128a:	e9d4 0306 	ldrd	r0, r3, [r4, #24]
 802128e:	4298      	cmp	r0, r3
 8021290:	bf34      	ite	cc
 8021292:	2000      	movcc	r0, #0
 8021294:	2001      	movcs	r0, #1
 8021296:	bd38      	pop	{r3, r4, r5, pc}

08021298 <_ZN8touchgfx6Canvas6renderEh>:
 8021298:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 802129c:	7a85      	ldrb	r5, [r0, #10]
 802129e:	4369      	muls	r1, r5
 80212a0:	1c4d      	adds	r5, r1, #1
 80212a2:	eb05 2511 	add.w	r5, r5, r1, lsr #8
 80212a6:	122d      	asrs	r5, r5, #8
 80212a8:	4604      	mov	r4, r0
 80212aa:	f000 8099 	beq.w	80213e0 <_ZN8touchgfx6Canvas6renderEh+0x148>
 80212ae:	f890 305d 	ldrb.w	r3, [r0, #93]	@ 0x5d
 80212b2:	2b00      	cmp	r3, #0
 80212b4:	f000 8094 	beq.w	80213e0 <_ZN8touchgfx6Canvas6renderEh+0x148>
 80212b8:	f7ff ffcc 	bl	8021254 <_ZN8touchgfx6Canvas5closeEv>
 80212bc:	4607      	mov	r7, r0
 80212be:	2800      	cmp	r0, #0
 80212c0:	d045      	beq.n	802134e <_ZN8touchgfx6Canvas6renderEh+0xb6>
 80212c2:	6860      	ldr	r0, [r4, #4]
 80212c4:	4e47      	ldr	r6, [pc, #284]	@ (80213e4 <_ZN8touchgfx6Canvas6renderEh+0x14c>)
 80212c6:	6803      	ldr	r3, [r0, #0]
 80212c8:	6837      	ldr	r7, [r6, #0]
 80212ca:	689b      	ldr	r3, [r3, #8]
 80212cc:	4798      	blx	r3
 80212ce:	4601      	mov	r1, r0
 80212d0:	4638      	mov	r0, r7
 80212d2:	f7e9 ff43 	bl	800b15c <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE>
 80212d6:	4607      	mov	r7, r0
 80212d8:	f7e1 fcfc 	bl	8002cd4 <_ZN8touchgfx3HAL3lcdEv>
 80212dc:	6803      	ldr	r3, [r0, #0]
 80212de:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80212e0:	4798      	blx	r3
 80212e2:	4680      	mov	r8, r0
 80212e4:	f7e1 fcf6 	bl	8002cd4 <_ZN8touchgfx3HAL3lcdEv>
 80212e8:	6803      	ldr	r3, [r0, #0]
 80212ea:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80212ec:	4798      	blx	r3
 80212ee:	280b      	cmp	r0, #11
 80212f0:	d85b      	bhi.n	80213aa <_ZN8touchgfx6Canvas6renderEh+0x112>
 80212f2:	e8df f000 	tbb	[pc, r0]
 80212f6:	5c51      	.short	0x5c51
 80212f8:	305a066c 	.word	0x305a066c
 80212fc:	65656540 	.word	0x65656540
 8021300:	6565      	.short	0x6565
 8021302:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
 8021306:	f9b4 100c 	ldrsh.w	r1, [r4, #12]
 802130a:	2208      	movs	r2, #8
 802130c:	fb91 f2f2 	sdiv	r2, r1, r2
 8021310:	fb08 2303 	mla	r3, r8, r3, r2
 8021314:	441f      	add	r7, r3
 8021316:	424b      	negs	r3, r1
 8021318:	f003 0307 	and.w	r3, r3, #7
 802131c:	f001 0107 	and.w	r1, r1, #7
 8021320:	bf58      	it	pl
 8021322:	4259      	negpl	r1, r3
 8021324:	b2c9      	uxtb	r1, r1
 8021326:	b2ed      	uxtb	r5, r5
 8021328:	463a      	mov	r2, r7
 802132a:	e9cd 1500 	strd	r1, r5, [sp]
 802132e:	fa0f f388 	sxth.w	r3, r8
 8021332:	6861      	ldr	r1, [r4, #4]
 8021334:	f104 0014 	add.w	r0, r4, #20
 8021338:	f7ff fe4c 	bl	8020fd4 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh>
 802133c:	4607      	mov	r7, r0
 802133e:	6860      	ldr	r0, [r4, #4]
 8021340:	6803      	ldr	r3, [r0, #0]
 8021342:	691b      	ldr	r3, [r3, #16]
 8021344:	4798      	blx	r3
 8021346:	6830      	ldr	r0, [r6, #0]
 8021348:	6803      	ldr	r3, [r0, #0]
 802134a:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 802134c:	4798      	blx	r3
 802134e:	4638      	mov	r0, r7
 8021350:	b002      	add	sp, #8
 8021352:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8021356:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
 802135a:	f9b4 100c 	ldrsh.w	r1, [r4, #12]
 802135e:	2204      	movs	r2, #4
 8021360:	fb91 f2f2 	sdiv	r2, r1, r2
 8021364:	fb08 2303 	mla	r3, r8, r3, r2
 8021368:	441f      	add	r7, r3
 802136a:	424b      	negs	r3, r1
 802136c:	f003 0303 	and.w	r3, r3, #3
 8021370:	f001 0103 	and.w	r1, r1, #3
 8021374:	e7d4      	b.n	8021320 <_ZN8touchgfx6Canvas6renderEh+0x88>
 8021376:	f9b4 100c 	ldrsh.w	r1, [r4, #12]
 802137a:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
 802137e:	2900      	cmp	r1, #0
 8021380:	f04f 0202 	mov.w	r2, #2
 8021384:	fb91 f2f2 	sdiv	r2, r1, r2
 8021388:	f001 0101 	and.w	r1, r1, #1
 802138c:	fb08 2303 	mla	r3, r8, r3, r2
 8021390:	441f      	add	r7, r3
 8021392:	bfb8      	it	lt
 8021394:	4249      	neglt	r1, r1
 8021396:	e7c5      	b.n	8021324 <_ZN8touchgfx6Canvas6renderEh+0x8c>
 8021398:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
 802139c:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 80213a0:	fb08 f303 	mul.w	r3, r8, r3
 80213a4:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 80213a8:	441f      	add	r7, r3
 80213aa:	2100      	movs	r1, #0
 80213ac:	e7bb      	b.n	8021326 <_ZN8touchgfx6Canvas6renderEh+0x8e>
 80213ae:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
 80213b2:	fb08 f203 	mul.w	r2, r8, r3
 80213b6:	89a3      	ldrh	r3, [r4, #12]
 80213b8:	2103      	movs	r1, #3
 80213ba:	fb13 2301 	smlabb	r3, r3, r1, r2
 80213be:	e7f3      	b.n	80213a8 <_ZN8touchgfx6Canvas6renderEh+0x110>
 80213c0:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
 80213c4:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 80213c8:	fb08 2303 	mla	r3, r8, r3, r2
 80213cc:	e7ec      	b.n	80213a8 <_ZN8touchgfx6Canvas6renderEh+0x110>
 80213ce:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
 80213d2:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 80213d6:	fb08 f303 	mul.w	r3, r8, r3
 80213da:	eb03 0382 	add.w	r3, r3, r2, lsl #2
 80213de:	e7e3      	b.n	80213a8 <_ZN8touchgfx6Canvas6renderEh+0x110>
 80213e0:	2701      	movs	r7, #1
 80213e2:	e7b4      	b.n	802134e <_ZN8touchgfx6Canvas6renderEh+0xb6>
 80213e4:	20013f2c 	.word	0x20013f2c

080213e8 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>:
 80213e8:	b510      	push	{r4, lr}
 80213ea:	4b06      	ldr	r3, [pc, #24]	@ (8021404 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_+0x1c>)
 80213ec:	781b      	ldrb	r3, [r3, #0]
 80213ee:	2b01      	cmp	r3, #1
 80213f0:	d107      	bne.n	8021402 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_+0x1a>
 80213f2:	f9b0 0008 	ldrsh.w	r0, [r0, #8]
 80213f6:	680b      	ldr	r3, [r1, #0]
 80213f8:	6814      	ldr	r4, [r2, #0]
 80213fa:	ebc3 1340 	rsb	r3, r3, r0, lsl #5
 80213fe:	6013      	str	r3, [r2, #0]
 8021400:	600c      	str	r4, [r1, #0]
 8021402:	bd10      	pop	{r4, pc}
 8021404:	20013f22 	.word	0x20013f22

08021408 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>:
 8021408:	b513      	push	{r0, r1, r4, lr}
 802140a:	f890 305c 	ldrb.w	r3, [r0, #92]	@ 0x5c
 802140e:	4604      	mov	r4, r0
 8021410:	e9cd 2100 	strd	r2, r1, [sp]
 8021414:	b9a3      	cbnz	r3, 8021440 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x38>
 8021416:	466a      	mov	r2, sp
 8021418:	a901      	add	r1, sp, #4
 802141a:	4620      	mov	r0, r4
 802141c:	f7ff ffe4 	bl	80213e8 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>
 8021420:	6ce3      	ldr	r3, [r4, #76]	@ 0x4c
 8021422:	9901      	ldr	r1, [sp, #4]
 8021424:	9a00      	ldr	r2, [sp, #0]
 8021426:	1ac9      	subs	r1, r1, r3
 8021428:	6d23      	ldr	r3, [r4, #80]	@ 0x50
 802142a:	9101      	str	r1, [sp, #4]
 802142c:	1ad2      	subs	r2, r2, r3
 802142e:	2a00      	cmp	r2, #0
 8021430:	9200      	str	r2, [sp, #0]
 8021432:	da0b      	bge.n	802144c <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x44>
 8021434:	2301      	movs	r3, #1
 8021436:	2900      	cmp	r1, #0
 8021438:	da0e      	bge.n	8021458 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x50>
 802143a:	f043 0304 	orr.w	r3, r3, #4
 802143e:	e013      	b.n	8021468 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x60>
 8021440:	f7ff ff08 	bl	8021254 <_ZN8touchgfx6Canvas5closeEv>
 8021444:	2800      	cmp	r0, #0
 8021446:	d1e6      	bne.n	8021416 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0xe>
 8021448:	b002      	add	sp, #8
 802144a:	bd10      	pop	{r4, pc}
 802144c:	6da3      	ldr	r3, [r4, #88]	@ 0x58
 802144e:	429a      	cmp	r2, r3
 8021450:	bfac      	ite	ge
 8021452:	2302      	movge	r3, #2
 8021454:	2300      	movlt	r3, #0
 8021456:	e7ee      	b.n	8021436 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x2e>
 8021458:	6d60      	ldr	r0, [r4, #84]	@ 0x54
 802145a:	4281      	cmp	r1, r0
 802145c:	bfac      	ite	ge
 802145e:	2008      	movge	r0, #8
 8021460:	2000      	movlt	r0, #0
 8021462:	4318      	orrs	r0, r3
 8021464:	b2c3      	uxtb	r3, r0
 8021466:	b158      	cbz	r0, 8021480 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x78>
 8021468:	2200      	movs	r2, #0
 802146a:	f884 205c 	strb.w	r2, [r4, #92]	@ 0x5c
 802146e:	9901      	ldr	r1, [sp, #4]
 8021470:	9a00      	ldr	r2, [sp, #0]
 8021472:	66e1      	str	r1, [r4, #108]	@ 0x6c
 8021474:	6722      	str	r2, [r4, #112]	@ 0x70
 8021476:	e9c4 1218 	strd	r1, r2, [r4, #96]	@ 0x60
 802147a:	f884 3068 	strb.w	r3, [r4, #104]	@ 0x68
 802147e:	e7e3      	b.n	8021448 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x40>
 8021480:	f884 0069 	strb.w	r0, [r4, #105]	@ 0x69
 8021484:	e9d4 3006 	ldrd	r3, r0, [r4, #24]
 8021488:	4298      	cmp	r0, r3
 802148a:	d803      	bhi.n	8021494 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x8c>
 802148c:	f104 0014 	add.w	r0, r4, #20
 8021490:	f7ec fe5a 	bl	800e148 <_ZN8touchgfx7Outline6moveToEii>
 8021494:	2301      	movs	r3, #1
 8021496:	f884 305c 	strb.w	r3, [r4, #92]	@ 0x5c
 802149a:	f884 305d 	strb.w	r3, [r4, #93]	@ 0x5d
 802149e:	2300      	movs	r3, #0
 80214a0:	e7e5      	b.n	802146e <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x66>

080214a2 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>:
 80214a2:	b573      	push	{r0, r1, r4, r5, r6, lr}
 80214a4:	ab02      	add	r3, sp, #8
 80214a6:	4604      	mov	r4, r0
 80214a8:	f843 2d08 	str.w	r2, [r3, #-8]!
 80214ac:	9101      	str	r1, [sp, #4]
 80214ae:	461a      	mov	r2, r3
 80214b0:	a901      	add	r1, sp, #4
 80214b2:	f7ff ff99 	bl	80213e8 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>
 80214b6:	6ce3      	ldr	r3, [r4, #76]	@ 0x4c
 80214b8:	9901      	ldr	r1, [sp, #4]
 80214ba:	9a00      	ldr	r2, [sp, #0]
 80214bc:	1ac9      	subs	r1, r1, r3
 80214be:	6d23      	ldr	r3, [r4, #80]	@ 0x50
 80214c0:	9101      	str	r1, [sp, #4]
 80214c2:	1ad2      	subs	r2, r2, r3
 80214c4:	2a00      	cmp	r2, #0
 80214c6:	9200      	str	r2, [sp, #0]
 80214c8:	db1c      	blt.n	8021504 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x62>
 80214ca:	6da3      	ldr	r3, [r4, #88]	@ 0x58
 80214cc:	429a      	cmp	r2, r3
 80214ce:	bfac      	ite	ge
 80214d0:	2002      	movge	r0, #2
 80214d2:	2000      	movlt	r0, #0
 80214d4:	2900      	cmp	r1, #0
 80214d6:	db17      	blt.n	8021508 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x66>
 80214d8:	6d63      	ldr	r3, [r4, #84]	@ 0x54
 80214da:	4299      	cmp	r1, r3
 80214dc:	bfac      	ite	ge
 80214de:	2308      	movge	r3, #8
 80214e0:	2300      	movlt	r3, #0
 80214e2:	4303      	orrs	r3, r0
 80214e4:	f894 0068 	ldrb.w	r0, [r4, #104]	@ 0x68
 80214e8:	b2dd      	uxtb	r5, r3
 80214ea:	b978      	cbnz	r0, 802150c <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x6a>
 80214ec:	f104 0014 	add.w	r0, r4, #20
 80214f0:	f7ff fd64 	bl	8020fbc <_ZN8touchgfx10Rasterizer6lineToEii>
 80214f4:	9b01      	ldr	r3, [sp, #4]
 80214f6:	6623      	str	r3, [r4, #96]	@ 0x60
 80214f8:	9b00      	ldr	r3, [sp, #0]
 80214fa:	6663      	str	r3, [r4, #100]	@ 0x64
 80214fc:	f884 5068 	strb.w	r5, [r4, #104]	@ 0x68
 8021500:	b002      	add	sp, #8
 8021502:	bd70      	pop	{r4, r5, r6, pc}
 8021504:	2001      	movs	r0, #1
 8021506:	e7e5      	b.n	80214d4 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x32>
 8021508:	2304      	movs	r3, #4
 802150a:	e7ea      	b.n	80214e2 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x40>
 802150c:	b113      	cbz	r3, 8021514 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x72>
 802150e:	ea10 0305 	ands.w	r3, r0, r5
 8021512:	d11c      	bne.n	802154e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0xac>
 8021514:	f894 305c 	ldrb.w	r3, [r4, #92]	@ 0x5c
 8021518:	f104 0614 	add.w	r6, r4, #20
 802151c:	e9d4 1218 	ldrd	r1, r2, [r4, #96]	@ 0x60
 8021520:	b98b      	cbnz	r3, 8021546 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0xa4>
 8021522:	f884 0069 	strb.w	r0, [r4, #105]	@ 0x69
 8021526:	e9d4 3006 	ldrd	r3, r0, [r4, #24]
 802152a:	4298      	cmp	r0, r3
 802152c:	d802      	bhi.n	8021534 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x92>
 802152e:	4630      	mov	r0, r6
 8021530:	f7ec fe0a 	bl	800e148 <_ZN8touchgfx7Outline6moveToEii>
 8021534:	2301      	movs	r3, #1
 8021536:	f884 305c 	strb.w	r3, [r4, #92]	@ 0x5c
 802153a:	f884 305d 	strb.w	r3, [r4, #93]	@ 0x5d
 802153e:	e9dd 2100 	ldrd	r2, r1, [sp]
 8021542:	4630      	mov	r0, r6
 8021544:	e7d4      	b.n	80214f0 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x4e>
 8021546:	4630      	mov	r0, r6
 8021548:	f7ff fd38 	bl	8020fbc <_ZN8touchgfx10Rasterizer6lineToEii>
 802154c:	e7f7      	b.n	802153e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x9c>
 802154e:	461d      	mov	r5, r3
 8021550:	e7d0      	b.n	80214f4 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x52>
	...

08021554 <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj>:
 8021554:	b538      	push	{r3, r4, r5, lr}
 8021556:	ed2d 8b10 	vpush	{d8-d15}
 802155a:	eef6 ba00 	vmov.f32	s23, #96	@ 0x3f000000  0.5
 802155e:	ed9f ba5a 	vldr	s22, [pc, #360]	@ 80216c8 <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj+0x174>
 8021562:	4605      	mov	r5, r0
 8021564:	eeb0 ca40 	vmov.f32	s24, s0
 8021568:	eef0 ca60 	vmov.f32	s25, s1
 802156c:	eeb0 da41 	vmov.f32	s26, s2
 8021570:	eef0 da61 	vmov.f32	s27, s3
 8021574:	eeb0 ea42 	vmov.f32	s28, s4
 8021578:	eef0 ea62 	vmov.f32	s29, s5
 802157c:	460c      	mov	r4, r1
 802157e:	eef0 aa6b 	vmov.f32	s21, s23
 8021582:	2c08      	cmp	r4, #8
 8021584:	d86e      	bhi.n	8021664 <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj+0x110>
 8021586:	ee7e 6a4c 	vsub.f32	s13, s28, s24
 802158a:	ee7d 7aee 	vsub.f32	s15, s27, s29
 802158e:	ee3d 6a4e 	vsub.f32	s12, s26, s28
 8021592:	ee3e 7aec 	vsub.f32	s14, s29, s25
 8021596:	ee66 7ae7 	vnmul.f32	s15, s13, s15
 802159a:	ee3c fa0d 	vadd.f32	s30, s24, s26
 802159e:	eee6 7a07 	vfma.f32	s15, s12, s14
 80215a2:	ee7c faad 	vadd.f32	s31, s25, s27
 80215a6:	ee7d 9a0e 	vadd.f32	s19, s26, s28
 80215aa:	ee3d aaae 	vadd.f32	s20, s27, s29
 80215ae:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80215b2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80215b6:	ee2f fa2b 	vmul.f32	s30, s30, s23
 80215ba:	ee6f faab 	vmul.f32	s31, s31, s23
 80215be:	ee69 9aab 	vmul.f32	s19, s19, s23
 80215c2:	ee2a aa2b 	vmul.f32	s20, s20, s23
 80215c6:	bf48      	it	mi
 80215c8:	eef1 7a67 	vnegmi.f32	s15, s15
 80215cc:	ee7f 8a29 	vadd.f32	s17, s30, s19
 80215d0:	ee3f 9a8a 	vadd.f32	s18, s31, s20
 80215d4:	eef4 7acb 	vcmpe.f32	s15, s22
 80215d8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80215dc:	ee68 8aab 	vmul.f32	s17, s17, s23
 80215e0:	ee29 9a2b 	vmul.f32	s18, s18, s23
 80215e4:	eeb5 6a00 	vmov.f32	s12, #80	@ 0x3e800000  0.250
 80215e8:	dd3f      	ble.n	802166a <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj+0x116>
 80215ea:	ee27 7a07 	vmul.f32	s14, s14, s14
 80215ee:	ee67 7aa7 	vmul.f32	s15, s15, s15
 80215f2:	eea6 7aa6 	vfma.f32	s14, s13, s13
 80215f6:	ee27 7a06 	vmul.f32	s14, s14, s12
 80215fa:	eef4 7ac7 	vcmpe.f32	s15, s14
 80215fe:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8021602:	d847      	bhi.n	8021694 <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj+0x140>
 8021604:	ee7e 0a4d 	vsub.f32	s1, s28, s26
 8021608:	ee3e 0aed 	vsub.f32	s0, s29, s27
 802160c:	f000 fa3b 	bl	8021a86 <atan2f>
 8021610:	ee7d 0a4c 	vsub.f32	s1, s26, s24
 8021614:	eeb0 8a40 	vmov.f32	s16, s0
 8021618:	ee3d 0aec 	vsub.f32	s0, s27, s25
 802161c:	f000 fa33 	bl	8021a86 <atan2f>
 8021620:	ee38 0a40 	vsub.f32	s0, s16, s0
 8021624:	eddf 7a29 	vldr	s15, [pc, #164]	@ 80216cc <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj+0x178>
 8021628:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 802162c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8021630:	bf48      	it	mi
 8021632:	eeb1 0a40 	vnegmi.f32	s0, s0
 8021636:	eeb4 0ae7 	vcmpe.f32	s0, s15
 802163a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802163e:	bfa4      	itt	ge
 8021640:	eddf 7a23 	vldrge	s15, [pc, #140]	@ 80216d0 <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj+0x17c>
 8021644:	ee37 0ac0 	vsubge.f32	s0, s15, s0
 8021648:	eddf 7a22 	vldr	s15, [pc, #136]	@ 80216d4 <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj+0x180>
 802164c:	eeb4 0ae7 	vcmpe.f32	s0, s15
 8021650:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8021654:	d51e      	bpl.n	8021694 <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj+0x140>
 8021656:	eef0 0a49 	vmov.f32	s1, s18
 802165a:	eeb0 0a68 	vmov.f32	s0, s17
 802165e:	4628      	mov	r0, r5
 8021660:	f7ea ff82 	bl	800c568 <_ZN8touchgfx6Canvas6lineToIfEEvT_S2_>
 8021664:	ecbd 8b10 	vpop	{d8-d15}
 8021668:	bd38      	pop	{r3, r4, r5, pc}
 802166a:	ee7c 7a0e 	vadd.f32	s15, s24, s28
 802166e:	eeb0 7a68 	vmov.f32	s14, s17
 8021672:	eea7 7aea 	vfms.f32	s14, s15, s21
 8021676:	ee7c 7aae 	vadd.f32	s15, s25, s29
 802167a:	eef0 6a49 	vmov.f32	s13, s18
 802167e:	eee7 6aea 	vfms.f32	s13, s15, s21
 8021682:	ee66 7aa6 	vmul.f32	s15, s13, s13
 8021686:	eee7 7a07 	vfma.f32	s15, s14, s14
 802168a:	eef4 7ac6 	vcmpe.f32	s15, s12
 802168e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8021692:	d9e0      	bls.n	8021656 <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj+0x102>
 8021694:	3401      	adds	r4, #1
 8021696:	eef0 0a6c 	vmov.f32	s1, s25
 802169a:	eeb0 0a4c 	vmov.f32	s0, s24
 802169e:	4621      	mov	r1, r4
 80216a0:	eef0 2a49 	vmov.f32	s5, s18
 80216a4:	eeb0 2a68 	vmov.f32	s4, s17
 80216a8:	eef0 1a6f 	vmov.f32	s3, s31
 80216ac:	eeb0 1a4f 	vmov.f32	s2, s30
 80216b0:	4628      	mov	r0, r5
 80216b2:	f7ff ff4f 	bl	8021554 <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj>
 80216b6:	eef0 da4a 	vmov.f32	s27, s20
 80216ba:	eeb0 da69 	vmov.f32	s26, s19
 80216be:	eef0 ca49 	vmov.f32	s25, s18
 80216c2:	eeb0 ca68 	vmov.f32	s24, s17
 80216c6:	e75c      	b.n	8021582 <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj+0x2e>
 80216c8:	2edbe6ff 	.word	0x2edbe6ff
 80216cc:	40490fdb 	.word	0x40490fdb
 80216d0:	40c90fdb 	.word	0x40c90fdb
 80216d4:	3dcccccd 	.word	0x3dcccccd

080216d8 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj>:
 80216d8:	b530      	push	{r4, r5, lr}
 80216da:	ed2d 8b10 	vpush	{d8-d15}
 80216de:	4604      	mov	r4, r0
 80216e0:	b085      	sub	sp, #20
 80216e2:	eef0 8a40 	vmov.f32	s17, s0
 80216e6:	eef0 9a60 	vmov.f32	s19, s1
 80216ea:	eef0 fa41 	vmov.f32	s31, s2
 80216ee:	eeb0 fa61 	vmov.f32	s30, s3
 80216f2:	eef0 ba42 	vmov.f32	s23, s4
 80216f6:	eeb0 ca62 	vmov.f32	s24, s5
 80216fa:	eef0 aa43 	vmov.f32	s21, s6
 80216fe:	eeb0 ba63 	vmov.f32	s22, s7
 8021702:	460d      	mov	r5, r1
 8021704:	2d08      	cmp	r5, #8
 8021706:	f200 8115 	bhi.w	8021934 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x25c>
 802170a:	ee3b 6aaa 	vadd.f32	s12, s23, s21
 802170e:	eef6 7a00 	vmov.f32	s15, #96	@ 0x3f000000  0.5
 8021712:	ee7f 6aab 	vadd.f32	s13, s31, s23
 8021716:	ee26 6a27 	vmul.f32	s12, s12, s15
 802171a:	ee38 daaf 	vadd.f32	s26, s17, s31
 802171e:	ed8d 6a01 	vstr	s12, [sp, #4]
 8021722:	eea6 6aa7 	vfma.f32	s12, s13, s15
 8021726:	ee2d da27 	vmul.f32	s26, s26, s15
 802172a:	ee7c ca0b 	vadd.f32	s25, s24, s22
 802172e:	eeb0 ea4d 	vmov.f32	s28, s26
 8021732:	eea6 eaa7 	vfma.f32	s28, s13, s15
 8021736:	ee6c caa7 	vmul.f32	s25, s25, s15
 802173a:	ee66 6a27 	vmul.f32	s13, s12, s15
 802173e:	ee3f 7a0c 	vadd.f32	s14, s30, s24
 8021742:	edcd 6a03 	vstr	s13, [sp, #12]
 8021746:	ee79 da8f 	vadd.f32	s27, s19, s30
 802174a:	eef0 6a6c 	vmov.f32	s13, s25
 802174e:	eee7 6a27 	vfma.f32	s13, s14, s15
 8021752:	ee6d daa7 	vmul.f32	s27, s27, s15
 8021756:	ee2e ea27 	vmul.f32	s28, s28, s15
 802175a:	eef0 ea6d 	vmov.f32	s29, s27
 802175e:	eee7 ea27 	vfma.f32	s29, s14, s15
 8021762:	ee26 7aa7 	vmul.f32	s14, s13, s15
 8021766:	ee6e eaa7 	vmul.f32	s29, s29, s15
 802176a:	ed8d 7a02 	vstr	s14, [sp, #8]
 802176e:	ed9d 7a03 	vldr	s14, [sp, #12]
 8021772:	ee3e 9a07 	vadd.f32	s18, s28, s14
 8021776:	ed9d 7a02 	vldr	s14, [sp, #8]
 802177a:	ee3e aa87 	vadd.f32	s20, s29, s14
 802177e:	ee29 9a27 	vmul.f32	s18, s18, s15
 8021782:	ee2a aa27 	vmul.f32	s20, s20, s15
 8021786:	eef0 6a67 	vmov.f32	s13, s15
 802178a:	2d00      	cmp	r5, #0
 802178c:	f000 810d 	beq.w	80219aa <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x2d2>
 8021790:	ee7a 5ae8 	vsub.f32	s11, s21, s17
 8021794:	ee3f 7a4b 	vsub.f32	s14, s30, s22
 8021798:	ee7b 7a69 	vsub.f32	s15, s22, s19
 802179c:	ee3f 6aea 	vsub.f32	s12, s31, s21
 80217a0:	ee25 7ac7 	vnmul.f32	s14, s11, s14
 80217a4:	ee3b 5aea 	vsub.f32	s10, s23, s21
 80217a8:	eea6 7a27 	vfma.f32	s14, s12, s15
 80217ac:	ee3c 6a4b 	vsub.f32	s12, s24, s22
 80217b0:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 80217b4:	ee25 6ac6 	vnmul.f32	s12, s11, s12
 80217b8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80217bc:	eea5 6a27 	vfma.f32	s12, s10, s15
 80217c0:	eddf 4a8b 	vldr	s9, [pc, #556]	@ 80219f0 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x318>
 80217c4:	eeb5 6ac0 	vcmpe.f32	s12, #0.0
 80217c8:	bf48      	it	mi
 80217ca:	eeb1 7a47 	vnegmi.f32	s14, s14
 80217ce:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80217d2:	eeb4 7ae4 	vcmpe.f32	s14, s9
 80217d6:	bf48      	it	mi
 80217d8:	eeb1 6a46 	vnegmi.f32	s12, s12
 80217dc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80217e0:	eeb5 5a00 	vmov.f32	s10, #80	@ 0x3e800000  0.250
 80217e4:	f340 80aa 	ble.w	802193c <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x264>
 80217e8:	eeb4 6ae4 	vcmpe.f32	s12, s9
 80217ec:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80217f0:	dd5c      	ble.n	80218ac <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x1d4>
 80217f2:	ee65 5aa5 	vmul.f32	s11, s11, s11
 80217f6:	ee37 7a06 	vadd.f32	s14, s14, s12
 80217fa:	eee7 5aa7 	vfma.f32	s11, s15, s15
 80217fe:	ee27 7a07 	vmul.f32	s14, s14, s14
 8021802:	ee65 7a85 	vmul.f32	s15, s11, s10
 8021806:	eeb4 7ae7 	vcmpe.f32	s14, s15
 802180a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802180e:	f200 80cc 	bhi.w	80219aa <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x2d2>
 8021812:	ee7b 0aef 	vsub.f32	s1, s23, s31
 8021816:	ee3c 0a4f 	vsub.f32	s0, s24, s30
 802181a:	f000 f934 	bl	8021a86 <atan2f>
 802181e:	ee7f 0ae8 	vsub.f32	s1, s31, s17
 8021822:	eeb0 8a40 	vmov.f32	s16, s0
 8021826:	ee3f 0a69 	vsub.f32	s0, s30, s19
 802182a:	f000 f92c 	bl	8021a86 <atan2f>
 802182e:	ee38 fa40 	vsub.f32	s30, s16, s0
 8021832:	ee7a 0aeb 	vsub.f32	s1, s21, s23
 8021836:	eeb5 fac0 	vcmpe.f32	s30, #0.0
 802183a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802183e:	ee3b 0a4c 	vsub.f32	s0, s22, s24
 8021842:	bf48      	it	mi
 8021844:	eeb1 fa4f 	vnegmi.f32	s30, s30
 8021848:	f000 f91d 	bl	8021a86 <atan2f>
 802184c:	ee30 0a48 	vsub.f32	s0, s0, s16
 8021850:	eddf 7a68 	vldr	s15, [pc, #416]	@ 80219f4 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x31c>
 8021854:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 8021858:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802185c:	eeb4 fae7 	vcmpe.f32	s30, s15
 8021860:	bf48      	it	mi
 8021862:	eeb1 0a40 	vnegmi.f32	s0, s0
 8021866:	eddf 7a63 	vldr	s15, [pc, #396]	@ 80219f4 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x31c>
 802186a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802186e:	bfa8      	it	ge
 8021870:	ed9f 7a61 	vldrge	s14, [pc, #388]	@ 80219f8 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x320>
 8021874:	eeb4 0ae7 	vcmpe.f32	s0, s15
 8021878:	bfa8      	it	ge
 802187a:	ee37 fa4f 	vsubge.f32	s30, s14, s30
 802187e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8021882:	bfa8      	it	ge
 8021884:	ed9f 7a5c 	vldrge	s14, [pc, #368]	@ 80219f8 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x320>
 8021888:	eddf 7a5c 	vldr	s15, [pc, #368]	@ 80219fc <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x324>
 802188c:	bfa8      	it	ge
 802188e:	ee37 0a40 	vsubge.f32	s0, s14, s0
 8021892:	ee3f 0a00 	vadd.f32	s0, s30, s0
 8021896:	eeb4 0ae7 	vcmpe.f32	s0, s15
 802189a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802189e:	f140 8084 	bpl.w	80219aa <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x2d2>
 80218a2:	eef0 0a4a 	vmov.f32	s1, s20
 80218a6:	eeb0 0a49 	vmov.f32	s0, s18
 80218aa:	e040      	b.n	802192e <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x256>
 80218ac:	ee67 7aa7 	vmul.f32	s15, s15, s15
 80218b0:	ee27 7a07 	vmul.f32	s14, s14, s14
 80218b4:	eee5 7aa5 	vfma.f32	s15, s11, s11
 80218b8:	ee67 7a85 	vmul.f32	s15, s15, s10
 80218bc:	eeb4 7ae7 	vcmpe.f32	s14, s15
 80218c0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80218c4:	d871      	bhi.n	80219aa <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x2d2>
 80218c6:	ee7b 0aef 	vsub.f32	s1, s23, s31
 80218ca:	ee3c 0a4f 	vsub.f32	s0, s24, s30
 80218ce:	f000 f8da 	bl	8021a86 <atan2f>
 80218d2:	ee7f 0ae8 	vsub.f32	s1, s31, s17
 80218d6:	eeb0 8a40 	vmov.f32	s16, s0
 80218da:	ee3f 0a69 	vsub.f32	s0, s30, s19
 80218de:	f000 f8d2 	bl	8021a86 <atan2f>
 80218e2:	ee38 0a40 	vsub.f32	s0, s16, s0
 80218e6:	eddf 7a43 	vldr	s15, [pc, #268]	@ 80219f4 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x31c>
 80218ea:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 80218ee:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80218f2:	bf48      	it	mi
 80218f4:	eeb1 0a40 	vnegmi.f32	s0, s0
 80218f8:	eeb4 0ae7 	vcmpe.f32	s0, s15
 80218fc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8021900:	bfa4      	itt	ge
 8021902:	eddf 7a3d 	vldrge	s15, [pc, #244]	@ 80219f8 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x320>
 8021906:	ee37 0ac0 	vsubge.f32	s0, s15, s0
 802190a:	eddf 7a3c 	vldr	s15, [pc, #240]	@ 80219fc <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x324>
 802190e:	eeb4 0ae7 	vcmpe.f32	s0, s15
 8021912:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8021916:	d548      	bpl.n	80219aa <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x2d2>
 8021918:	eef0 0a4f 	vmov.f32	s1, s30
 802191c:	eeb0 0a6f 	vmov.f32	s0, s31
 8021920:	4620      	mov	r0, r4
 8021922:	f7ea fe21 	bl	800c568 <_ZN8touchgfx6Canvas6lineToIfEEvT_S2_>
 8021926:	eef0 0a4c 	vmov.f32	s1, s24
 802192a:	eeb0 0a6b 	vmov.f32	s0, s23
 802192e:	4620      	mov	r0, r4
 8021930:	f7ea fe1a 	bl	800c568 <_ZN8touchgfx6Canvas6lineToIfEEvT_S2_>
 8021934:	b005      	add	sp, #20
 8021936:	ecbd 8b10 	vpop	{d8-d15}
 802193a:	bd30      	pop	{r4, r5, pc}
 802193c:	ed9f 7a2c 	vldr	s14, [pc, #176]	@ 80219f0 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x318>
 8021940:	eeb4 6ac7 	vcmpe.f32	s12, s14
 8021944:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8021948:	dd19      	ble.n	802197e <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x2a6>
 802194a:	ee67 7aa7 	vmul.f32	s15, s15, s15
 802194e:	ee26 7a06 	vmul.f32	s14, s12, s12
 8021952:	eee5 7aa5 	vfma.f32	s15, s11, s11
 8021956:	ee67 7a85 	vmul.f32	s15, s15, s10
 802195a:	eeb4 7ae7 	vcmpe.f32	s14, s15
 802195e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8021962:	d822      	bhi.n	80219aa <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x2d2>
 8021964:	ee7a 0aeb 	vsub.f32	s1, s21, s23
 8021968:	ee3b 0a4c 	vsub.f32	s0, s22, s24
 802196c:	f000 f88b 	bl	8021a86 <atan2f>
 8021970:	ee7b 0aef 	vsub.f32	s1, s23, s31
 8021974:	eeb0 8a40 	vmov.f32	s16, s0
 8021978:	ee3c 0a4f 	vsub.f32	s0, s24, s30
 802197c:	e7af      	b.n	80218de <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x206>
 802197e:	ee78 7aaa 	vadd.f32	s15, s17, s21
 8021982:	eeb0 7a49 	vmov.f32	s14, s18
 8021986:	eea7 7ae6 	vfms.f32	s14, s15, s13
 802198a:	ee79 7a8b 	vadd.f32	s15, s19, s22
 802198e:	eeb0 6a4a 	vmov.f32	s12, s20
 8021992:	eea7 6ae6 	vfms.f32	s12, s15, s13
 8021996:	ee66 7a06 	vmul.f32	s15, s12, s12
 802199a:	eee7 7a07 	vfma.f32	s15, s14, s14
 802199e:	eef4 7ac5 	vcmpe.f32	s15, s10
 80219a2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80219a6:	f67f af7c 	bls.w	80218a2 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x1ca>
 80219aa:	3501      	adds	r5, #1
 80219ac:	eef0 0a69 	vmov.f32	s1, s19
 80219b0:	eeb0 0a68 	vmov.f32	s0, s17
 80219b4:	4629      	mov	r1, r5
 80219b6:	eef0 3a4a 	vmov.f32	s7, s20
 80219ba:	eeb0 3a49 	vmov.f32	s6, s18
 80219be:	eef0 2a6e 	vmov.f32	s5, s29
 80219c2:	eeb0 2a4e 	vmov.f32	s4, s28
 80219c6:	eef0 1a6d 	vmov.f32	s3, s27
 80219ca:	eeb0 1a4d 	vmov.f32	s2, s26
 80219ce:	4620      	mov	r0, r4
 80219d0:	f7ff fe82 	bl	80216d8 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj>
 80219d4:	eeb0 ca6c 	vmov.f32	s24, s25
 80219d8:	eddd ba01 	vldr	s23, [sp, #4]
 80219dc:	ed9d fa02 	vldr	s30, [sp, #8]
 80219e0:	eddd fa03 	vldr	s31, [sp, #12]
 80219e4:	eef0 9a4a 	vmov.f32	s19, s20
 80219e8:	eef0 8a49 	vmov.f32	s17, s18
 80219ec:	e68a      	b.n	8021704 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x2c>
 80219ee:	bf00      	nop
 80219f0:	2edbe6ff 	.word	0x2edbe6ff
 80219f4:	40490fdb 	.word	0x40490fdb
 80219f8:	40c90fdb 	.word	0x40c90fdb
 80219fc:	3dcccccd 	.word	0x3dcccccd

08021a00 <_ZN8touchgfx6CanvasD1Ev>:
 8021a00:	b510      	push	{r4, lr}
 8021a02:	4b04      	ldr	r3, [pc, #16]	@ (8021a14 <_ZN8touchgfx6CanvasD1Ev+0x14>)
 8021a04:	4604      	mov	r4, r0
 8021a06:	f840 3b14 	str.w	r3, [r0], #20
 8021a0a:	f7eb fe97 	bl	800d73c <_ZN8touchgfx7OutlineD1Ev>
 8021a0e:	4620      	mov	r0, r4
 8021a10:	bd10      	pop	{r4, pc}
 8021a12:	bf00      	nop
 8021a14:	08025188 	.word	0x08025188

08021a18 <_ZN8touchgfx6CanvasD0Ev>:
 8021a18:	b510      	push	{r4, lr}
 8021a1a:	4604      	mov	r4, r0
 8021a1c:	f7ff fff0 	bl	8021a00 <_ZN8touchgfx6CanvasD1Ev>
 8021a20:	4620      	mov	r0, r4
 8021a22:	2174      	movs	r1, #116	@ 0x74
 8021a24:	f000 f807 	bl	8021a36 <_ZdlPvj>
 8021a28:	4620      	mov	r0, r4
 8021a2a:	bd10      	pop	{r4, pc}

08021a2c <__aeabi_atexit>:
 8021a2c:	460b      	mov	r3, r1
 8021a2e:	4601      	mov	r1, r0
 8021a30:	4618      	mov	r0, r3
 8021a32:	f001 b81f 	b.w	8022a74 <__cxa_atexit>

08021a36 <_ZdlPvj>:
 8021a36:	f000 b812 	b.w	8021a5e <_ZdlPv>

08021a3a <__cxa_guard_acquire>:
 8021a3a:	6802      	ldr	r2, [r0, #0]
 8021a3c:	07d2      	lsls	r2, r2, #31
 8021a3e:	4603      	mov	r3, r0
 8021a40:	d405      	bmi.n	8021a4e <__cxa_guard_acquire+0x14>
 8021a42:	7842      	ldrb	r2, [r0, #1]
 8021a44:	b102      	cbz	r2, 8021a48 <__cxa_guard_acquire+0xe>
 8021a46:	deff      	udf	#255	@ 0xff
 8021a48:	2001      	movs	r0, #1
 8021a4a:	7058      	strb	r0, [r3, #1]
 8021a4c:	4770      	bx	lr
 8021a4e:	2000      	movs	r0, #0
 8021a50:	4770      	bx	lr

08021a52 <__cxa_guard_release>:
 8021a52:	2301      	movs	r3, #1
 8021a54:	6003      	str	r3, [r0, #0]
 8021a56:	4770      	bx	lr

08021a58 <__cxa_pure_virtual>:
 8021a58:	b508      	push	{r3, lr}
 8021a5a:	f000 f80f 	bl	8021a7c <_ZSt9terminatev>

08021a5e <_ZdlPv>:
 8021a5e:	f000 bf53 	b.w	8022908 <free>

08021a62 <_ZN10__cxxabiv111__terminateEPFvvE>:
 8021a62:	b508      	push	{r3, lr}
 8021a64:	4780      	blx	r0
 8021a66:	f000 ff1b 	bl	80228a0 <abort>
	...

08021a6c <_ZSt13get_terminatev>:
 8021a6c:	4b02      	ldr	r3, [pc, #8]	@ (8021a78 <_ZSt13get_terminatev+0xc>)
 8021a6e:	6818      	ldr	r0, [r3, #0]
 8021a70:	f3bf 8f5b 	dmb	ish
 8021a74:	4770      	bx	lr
 8021a76:	bf00      	nop
 8021a78:	20000210 	.word	0x20000210

08021a7c <_ZSt9terminatev>:
 8021a7c:	b508      	push	{r3, lr}
 8021a7e:	f7ff fff5 	bl	8021a6c <_ZSt13get_terminatev>
 8021a82:	f7ff ffee 	bl	8021a62 <_ZN10__cxxabiv111__terminateEPFvvE>

08021a86 <atan2f>:
 8021a86:	f000 b94d 	b.w	8021d24 <__ieee754_atan2f>
	...

08021a8c <sqrtf>:
 8021a8c:	b508      	push	{r3, lr}
 8021a8e:	ed2d 8b02 	vpush	{d8}
 8021a92:	eeb0 8a40 	vmov.f32	s16, s0
 8021a96:	f000 f8a1 	bl	8021bdc <__ieee754_sqrtf>
 8021a9a:	eeb4 8a48 	vcmp.f32	s16, s16
 8021a9e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8021aa2:	d60c      	bvs.n	8021abe <sqrtf+0x32>
 8021aa4:	eddf 8a07 	vldr	s17, [pc, #28]	@ 8021ac4 <sqrtf+0x38>
 8021aa8:	eeb4 8ae8 	vcmpe.f32	s16, s17
 8021aac:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8021ab0:	d505      	bpl.n	8021abe <sqrtf+0x32>
 8021ab2:	f001 f9a7 	bl	8022e04 <__errno>
 8021ab6:	ee88 0aa8 	vdiv.f32	s0, s17, s17
 8021aba:	2321      	movs	r3, #33	@ 0x21
 8021abc:	6003      	str	r3, [r0, #0]
 8021abe:	ecbd 8b02 	vpop	{d8}
 8021ac2:	bd08      	pop	{r3, pc}
 8021ac4:	00000000 	.word	0x00000000

08021ac8 <cosf>:
 8021ac8:	ee10 3a10 	vmov	r3, s0
 8021acc:	b507      	push	{r0, r1, r2, lr}
 8021ace:	4a1e      	ldr	r2, [pc, #120]	@ (8021b48 <cosf+0x80>)
 8021ad0:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
 8021ad4:	4293      	cmp	r3, r2
 8021ad6:	d806      	bhi.n	8021ae6 <cosf+0x1e>
 8021ad8:	eddf 0a1c 	vldr	s1, [pc, #112]	@ 8021b4c <cosf+0x84>
 8021adc:	b003      	add	sp, #12
 8021ade:	f85d eb04 	ldr.w	lr, [sp], #4
 8021ae2:	f000 b87f 	b.w	8021be4 <__kernel_cosf>
 8021ae6:	f1b3 4fff 	cmp.w	r3, #2139095040	@ 0x7f800000
 8021aea:	d304      	bcc.n	8021af6 <cosf+0x2e>
 8021aec:	ee30 0a40 	vsub.f32	s0, s0, s0
 8021af0:	b003      	add	sp, #12
 8021af2:	f85d fb04 	ldr.w	pc, [sp], #4
 8021af6:	4668      	mov	r0, sp
 8021af8:	f000 f9b4 	bl	8021e64 <__ieee754_rem_pio2f>
 8021afc:	f000 0003 	and.w	r0, r0, #3
 8021b00:	2801      	cmp	r0, #1
 8021b02:	d009      	beq.n	8021b18 <cosf+0x50>
 8021b04:	2802      	cmp	r0, #2
 8021b06:	d010      	beq.n	8021b2a <cosf+0x62>
 8021b08:	b9b0      	cbnz	r0, 8021b38 <cosf+0x70>
 8021b0a:	eddd 0a01 	vldr	s1, [sp, #4]
 8021b0e:	ed9d 0a00 	vldr	s0, [sp]
 8021b12:	f000 f867 	bl	8021be4 <__kernel_cosf>
 8021b16:	e7eb      	b.n	8021af0 <cosf+0x28>
 8021b18:	eddd 0a01 	vldr	s1, [sp, #4]
 8021b1c:	ed9d 0a00 	vldr	s0, [sp]
 8021b20:	f000 f8b8 	bl	8021c94 <__kernel_sinf>
 8021b24:	eeb1 0a40 	vneg.f32	s0, s0
 8021b28:	e7e2      	b.n	8021af0 <cosf+0x28>
 8021b2a:	eddd 0a01 	vldr	s1, [sp, #4]
 8021b2e:	ed9d 0a00 	vldr	s0, [sp]
 8021b32:	f000 f857 	bl	8021be4 <__kernel_cosf>
 8021b36:	e7f5      	b.n	8021b24 <cosf+0x5c>
 8021b38:	eddd 0a01 	vldr	s1, [sp, #4]
 8021b3c:	ed9d 0a00 	vldr	s0, [sp]
 8021b40:	2001      	movs	r0, #1
 8021b42:	f000 f8a7 	bl	8021c94 <__kernel_sinf>
 8021b46:	e7d3      	b.n	8021af0 <cosf+0x28>
 8021b48:	3f490fd8 	.word	0x3f490fd8
 8021b4c:	00000000 	.word	0x00000000

08021b50 <sinf>:
 8021b50:	ee10 3a10 	vmov	r3, s0
 8021b54:	b507      	push	{r0, r1, r2, lr}
 8021b56:	4a1f      	ldr	r2, [pc, #124]	@ (8021bd4 <sinf+0x84>)
 8021b58:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
 8021b5c:	4293      	cmp	r3, r2
 8021b5e:	d807      	bhi.n	8021b70 <sinf+0x20>
 8021b60:	eddf 0a1d 	vldr	s1, [pc, #116]	@ 8021bd8 <sinf+0x88>
 8021b64:	2000      	movs	r0, #0
 8021b66:	b003      	add	sp, #12
 8021b68:	f85d eb04 	ldr.w	lr, [sp], #4
 8021b6c:	f000 b892 	b.w	8021c94 <__kernel_sinf>
 8021b70:	f1b3 4fff 	cmp.w	r3, #2139095040	@ 0x7f800000
 8021b74:	d304      	bcc.n	8021b80 <sinf+0x30>
 8021b76:	ee30 0a40 	vsub.f32	s0, s0, s0
 8021b7a:	b003      	add	sp, #12
 8021b7c:	f85d fb04 	ldr.w	pc, [sp], #4
 8021b80:	4668      	mov	r0, sp
 8021b82:	f000 f96f 	bl	8021e64 <__ieee754_rem_pio2f>
 8021b86:	f000 0003 	and.w	r0, r0, #3
 8021b8a:	2801      	cmp	r0, #1
 8021b8c:	d00a      	beq.n	8021ba4 <sinf+0x54>
 8021b8e:	2802      	cmp	r0, #2
 8021b90:	d00f      	beq.n	8021bb2 <sinf+0x62>
 8021b92:	b9c0      	cbnz	r0, 8021bc6 <sinf+0x76>
 8021b94:	eddd 0a01 	vldr	s1, [sp, #4]
 8021b98:	ed9d 0a00 	vldr	s0, [sp]
 8021b9c:	2001      	movs	r0, #1
 8021b9e:	f000 f879 	bl	8021c94 <__kernel_sinf>
 8021ba2:	e7ea      	b.n	8021b7a <sinf+0x2a>
 8021ba4:	eddd 0a01 	vldr	s1, [sp, #4]
 8021ba8:	ed9d 0a00 	vldr	s0, [sp]
 8021bac:	f000 f81a 	bl	8021be4 <__kernel_cosf>
 8021bb0:	e7e3      	b.n	8021b7a <sinf+0x2a>
 8021bb2:	eddd 0a01 	vldr	s1, [sp, #4]
 8021bb6:	ed9d 0a00 	vldr	s0, [sp]
 8021bba:	2001      	movs	r0, #1
 8021bbc:	f000 f86a 	bl	8021c94 <__kernel_sinf>
 8021bc0:	eeb1 0a40 	vneg.f32	s0, s0
 8021bc4:	e7d9      	b.n	8021b7a <sinf+0x2a>
 8021bc6:	eddd 0a01 	vldr	s1, [sp, #4]
 8021bca:	ed9d 0a00 	vldr	s0, [sp]
 8021bce:	f000 f809 	bl	8021be4 <__kernel_cosf>
 8021bd2:	e7f5      	b.n	8021bc0 <sinf+0x70>
 8021bd4:	3f490fd8 	.word	0x3f490fd8
 8021bd8:	00000000 	.word	0x00000000

08021bdc <__ieee754_sqrtf>:
 8021bdc:	eeb1 0ac0 	vsqrt.f32	s0, s0
 8021be0:	4770      	bx	lr
	...

08021be4 <__kernel_cosf>:
 8021be4:	ee10 3a10 	vmov	r3, s0
 8021be8:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
 8021bec:	f1b3 5f48 	cmp.w	r3, #838860800	@ 0x32000000
 8021bf0:	eef0 6a40 	vmov.f32	s13, s0
 8021bf4:	eeb7 0a00 	vmov.f32	s0, #112	@ 0x3f800000  1.0
 8021bf8:	d204      	bcs.n	8021c04 <__kernel_cosf+0x20>
 8021bfa:	eefd 7ae6 	vcvt.s32.f32	s15, s13
 8021bfe:	ee17 2a90 	vmov	r2, s15
 8021c02:	b342      	cbz	r2, 8021c56 <__kernel_cosf+0x72>
 8021c04:	ee26 7aa6 	vmul.f32	s14, s13, s13
 8021c08:	eddf 7a1a 	vldr	s15, [pc, #104]	@ 8021c74 <__kernel_cosf+0x90>
 8021c0c:	ed9f 6a1a 	vldr	s12, [pc, #104]	@ 8021c78 <__kernel_cosf+0x94>
 8021c10:	4a1a      	ldr	r2, [pc, #104]	@ (8021c7c <__kernel_cosf+0x98>)
 8021c12:	eea7 6a27 	vfma.f32	s12, s14, s15
 8021c16:	4293      	cmp	r3, r2
 8021c18:	eddf 7a19 	vldr	s15, [pc, #100]	@ 8021c80 <__kernel_cosf+0x9c>
 8021c1c:	eee6 7a07 	vfma.f32	s15, s12, s14
 8021c20:	ed9f 6a18 	vldr	s12, [pc, #96]	@ 8021c84 <__kernel_cosf+0xa0>
 8021c24:	eea7 6a87 	vfma.f32	s12, s15, s14
 8021c28:	eddf 7a17 	vldr	s15, [pc, #92]	@ 8021c88 <__kernel_cosf+0xa4>
 8021c2c:	eee6 7a07 	vfma.f32	s15, s12, s14
 8021c30:	ed9f 6a16 	vldr	s12, [pc, #88]	@ 8021c8c <__kernel_cosf+0xa8>
 8021c34:	eea7 6a87 	vfma.f32	s12, s15, s14
 8021c38:	ee60 0ae6 	vnmul.f32	s1, s1, s13
 8021c3c:	ee26 6a07 	vmul.f32	s12, s12, s14
 8021c40:	eef6 7a00 	vmov.f32	s15, #96	@ 0x3f000000  0.5
 8021c44:	eee7 0a06 	vfma.f32	s1, s14, s12
 8021c48:	ee67 7a27 	vmul.f32	s15, s14, s15
 8021c4c:	d804      	bhi.n	8021c58 <__kernel_cosf+0x74>
 8021c4e:	ee77 7ae0 	vsub.f32	s15, s15, s1
 8021c52:	ee30 0a67 	vsub.f32	s0, s0, s15
 8021c56:	4770      	bx	lr
 8021c58:	4a0d      	ldr	r2, [pc, #52]	@ (8021c90 <__kernel_cosf+0xac>)
 8021c5a:	4293      	cmp	r3, r2
 8021c5c:	bf9a      	itte	ls
 8021c5e:	f103 437f 	addls.w	r3, r3, #4278190080	@ 0xff000000
 8021c62:	ee07 3a10 	vmovls	s14, r3
 8021c66:	eeb5 7a02 	vmovhi.f32	s14, #82	@ 0x3e900000  0.2812500
 8021c6a:	ee30 0a47 	vsub.f32	s0, s0, s14
 8021c6e:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8021c72:	e7ec      	b.n	8021c4e <__kernel_cosf+0x6a>
 8021c74:	ad47d74e 	.word	0xad47d74e
 8021c78:	310f74f6 	.word	0x310f74f6
 8021c7c:	3e999999 	.word	0x3e999999
 8021c80:	b493f27c 	.word	0xb493f27c
 8021c84:	37d00d01 	.word	0x37d00d01
 8021c88:	bab60b61 	.word	0xbab60b61
 8021c8c:	3d2aaaab 	.word	0x3d2aaaab
 8021c90:	3f480000 	.word	0x3f480000

08021c94 <__kernel_sinf>:
 8021c94:	ee10 3a10 	vmov	r3, s0
 8021c98:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
 8021c9c:	f1b3 5f48 	cmp.w	r3, #838860800	@ 0x32000000
 8021ca0:	d204      	bcs.n	8021cac <__kernel_sinf+0x18>
 8021ca2:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 8021ca6:	ee17 3a90 	vmov	r3, s15
 8021caa:	b35b      	cbz	r3, 8021d04 <__kernel_sinf+0x70>
 8021cac:	ee20 7a00 	vmul.f32	s14, s0, s0
 8021cb0:	eddf 7a15 	vldr	s15, [pc, #84]	@ 8021d08 <__kernel_sinf+0x74>
 8021cb4:	ed9f 6a15 	vldr	s12, [pc, #84]	@ 8021d0c <__kernel_sinf+0x78>
 8021cb8:	eea7 6a27 	vfma.f32	s12, s14, s15
 8021cbc:	eddf 7a14 	vldr	s15, [pc, #80]	@ 8021d10 <__kernel_sinf+0x7c>
 8021cc0:	eee6 7a07 	vfma.f32	s15, s12, s14
 8021cc4:	ed9f 6a13 	vldr	s12, [pc, #76]	@ 8021d14 <__kernel_sinf+0x80>
 8021cc8:	eea7 6a87 	vfma.f32	s12, s15, s14
 8021ccc:	eddf 7a12 	vldr	s15, [pc, #72]	@ 8021d18 <__kernel_sinf+0x84>
 8021cd0:	ee60 6a07 	vmul.f32	s13, s0, s14
 8021cd4:	eee6 7a07 	vfma.f32	s15, s12, s14
 8021cd8:	b930      	cbnz	r0, 8021ce8 <__kernel_sinf+0x54>
 8021cda:	ed9f 6a10 	vldr	s12, [pc, #64]	@ 8021d1c <__kernel_sinf+0x88>
 8021cde:	eea7 6a27 	vfma.f32	s12, s14, s15
 8021ce2:	eea6 0a26 	vfma.f32	s0, s12, s13
 8021ce6:	4770      	bx	lr
 8021ce8:	ee67 7ae6 	vnmul.f32	s15, s15, s13
 8021cec:	eeb6 6a00 	vmov.f32	s12, #96	@ 0x3f000000  0.5
 8021cf0:	eee0 7a86 	vfma.f32	s15, s1, s12
 8021cf4:	eed7 0a87 	vfnms.f32	s1, s15, s14
 8021cf8:	eddf 7a09 	vldr	s15, [pc, #36]	@ 8021d20 <__kernel_sinf+0x8c>
 8021cfc:	eee6 0aa7 	vfma.f32	s1, s13, s15
 8021d00:	ee30 0a60 	vsub.f32	s0, s0, s1
 8021d04:	4770      	bx	lr
 8021d06:	bf00      	nop
 8021d08:	2f2ec9d3 	.word	0x2f2ec9d3
 8021d0c:	b2d72f34 	.word	0xb2d72f34
 8021d10:	3638ef1b 	.word	0x3638ef1b
 8021d14:	b9500d01 	.word	0xb9500d01
 8021d18:	3c088889 	.word	0x3c088889
 8021d1c:	be2aaaab 	.word	0xbe2aaaab
 8021d20:	3e2aaaab 	.word	0x3e2aaaab

08021d24 <__ieee754_atan2f>:
 8021d24:	ee10 2a90 	vmov	r2, s1
 8021d28:	f022 4100 	bic.w	r1, r2, #2147483648	@ 0x80000000
 8021d2c:	f1b1 4fff 	cmp.w	r1, #2139095040	@ 0x7f800000
 8021d30:	b510      	push	{r4, lr}
 8021d32:	eef0 7a40 	vmov.f32	s15, s0
 8021d36:	d806      	bhi.n	8021d46 <__ieee754_atan2f+0x22>
 8021d38:	ee10 0a10 	vmov	r0, s0
 8021d3c:	f020 4300 	bic.w	r3, r0, #2147483648	@ 0x80000000
 8021d40:	f1b3 4fff 	cmp.w	r3, #2139095040	@ 0x7f800000
 8021d44:	d904      	bls.n	8021d50 <__ieee754_atan2f+0x2c>
 8021d46:	ee77 7aa0 	vadd.f32	s15, s15, s1
 8021d4a:	eeb0 0a67 	vmov.f32	s0, s15
 8021d4e:	bd10      	pop	{r4, pc}
 8021d50:	f1b2 5f7e 	cmp.w	r2, #1065353216	@ 0x3f800000
 8021d54:	d103      	bne.n	8021d5e <__ieee754_atan2f+0x3a>
 8021d56:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8021d5a:	f000 b9b3 	b.w	80220c4 <atanf>
 8021d5e:	1794      	asrs	r4, r2, #30
 8021d60:	f004 0402 	and.w	r4, r4, #2
 8021d64:	ea44 74d0 	orr.w	r4, r4, r0, lsr #31
 8021d68:	b943      	cbnz	r3, 8021d7c <__ieee754_atan2f+0x58>
 8021d6a:	2c02      	cmp	r4, #2
 8021d6c:	d05e      	beq.n	8021e2c <__ieee754_atan2f+0x108>
 8021d6e:	ed9f 7a34 	vldr	s14, [pc, #208]	@ 8021e40 <__ieee754_atan2f+0x11c>
 8021d72:	2c03      	cmp	r4, #3
 8021d74:	bf08      	it	eq
 8021d76:	eef0 7a47 	vmoveq.f32	s15, s14
 8021d7a:	e7e6      	b.n	8021d4a <__ieee754_atan2f+0x26>
 8021d7c:	b941      	cbnz	r1, 8021d90 <__ieee754_atan2f+0x6c>
 8021d7e:	eddf 7a31 	vldr	s15, [pc, #196]	@ 8021e44 <__ieee754_atan2f+0x120>
 8021d82:	ed9f 7a31 	vldr	s14, [pc, #196]	@ 8021e48 <__ieee754_atan2f+0x124>
 8021d86:	2800      	cmp	r0, #0
 8021d88:	bfa8      	it	ge
 8021d8a:	eef0 7a47 	vmovge.f32	s15, s14
 8021d8e:	e7dc      	b.n	8021d4a <__ieee754_atan2f+0x26>
 8021d90:	f1b1 4fff 	cmp.w	r1, #2139095040	@ 0x7f800000
 8021d94:	d110      	bne.n	8021db8 <__ieee754_atan2f+0x94>
 8021d96:	f1b3 4fff 	cmp.w	r3, #2139095040	@ 0x7f800000
 8021d9a:	f104 34ff 	add.w	r4, r4, #4294967295
 8021d9e:	d107      	bne.n	8021db0 <__ieee754_atan2f+0x8c>
 8021da0:	2c02      	cmp	r4, #2
 8021da2:	d846      	bhi.n	8021e32 <__ieee754_atan2f+0x10e>
 8021da4:	4b29      	ldr	r3, [pc, #164]	@ (8021e4c <__ieee754_atan2f+0x128>)
 8021da6:	eb03 0384 	add.w	r3, r3, r4, lsl #2
 8021daa:	edd3 7a00 	vldr	s15, [r3]
 8021dae:	e7cc      	b.n	8021d4a <__ieee754_atan2f+0x26>
 8021db0:	2c02      	cmp	r4, #2
 8021db2:	d841      	bhi.n	8021e38 <__ieee754_atan2f+0x114>
 8021db4:	4b26      	ldr	r3, [pc, #152]	@ (8021e50 <__ieee754_atan2f+0x12c>)
 8021db6:	e7f6      	b.n	8021da6 <__ieee754_atan2f+0x82>
 8021db8:	f1b3 4fff 	cmp.w	r3, #2139095040	@ 0x7f800000
 8021dbc:	d0df      	beq.n	8021d7e <__ieee754_atan2f+0x5a>
 8021dbe:	1a5b      	subs	r3, r3, r1
 8021dc0:	f1b3 5ff4 	cmp.w	r3, #511705088	@ 0x1e800000
 8021dc4:	ea4f 51e3 	mov.w	r1, r3, asr #23
 8021dc8:	da1a      	bge.n	8021e00 <__ieee754_atan2f+0xdc>
 8021dca:	2a00      	cmp	r2, #0
 8021dcc:	da01      	bge.n	8021dd2 <__ieee754_atan2f+0xae>
 8021dce:	313c      	adds	r1, #60	@ 0x3c
 8021dd0:	db19      	blt.n	8021e06 <__ieee754_atan2f+0xe2>
 8021dd2:	ee87 0aa0 	vdiv.f32	s0, s15, s1
 8021dd6:	f000 fa49 	bl	802226c <fabsf>
 8021dda:	f000 f973 	bl	80220c4 <atanf>
 8021dde:	eef0 7a40 	vmov.f32	s15, s0
 8021de2:	2c01      	cmp	r4, #1
 8021de4:	d012      	beq.n	8021e0c <__ieee754_atan2f+0xe8>
 8021de6:	2c02      	cmp	r4, #2
 8021de8:	d017      	beq.n	8021e1a <__ieee754_atan2f+0xf6>
 8021dea:	2c00      	cmp	r4, #0
 8021dec:	d0ad      	beq.n	8021d4a <__ieee754_atan2f+0x26>
 8021dee:	ed9f 7a19 	vldr	s14, [pc, #100]	@ 8021e54 <__ieee754_atan2f+0x130>
 8021df2:	ee77 7a87 	vadd.f32	s15, s15, s14
 8021df6:	ed9f 7a18 	vldr	s14, [pc, #96]	@ 8021e58 <__ieee754_atan2f+0x134>
 8021dfa:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8021dfe:	e7a4      	b.n	8021d4a <__ieee754_atan2f+0x26>
 8021e00:	eddf 7a11 	vldr	s15, [pc, #68]	@ 8021e48 <__ieee754_atan2f+0x124>
 8021e04:	e7ed      	b.n	8021de2 <__ieee754_atan2f+0xbe>
 8021e06:	eddf 7a15 	vldr	s15, [pc, #84]	@ 8021e5c <__ieee754_atan2f+0x138>
 8021e0a:	e7ea      	b.n	8021de2 <__ieee754_atan2f+0xbe>
 8021e0c:	ee17 3a90 	vmov	r3, s15
 8021e10:	f103 4300 	add.w	r3, r3, #2147483648	@ 0x80000000
 8021e14:	ee07 3a90 	vmov	s15, r3
 8021e18:	e797      	b.n	8021d4a <__ieee754_atan2f+0x26>
 8021e1a:	ed9f 7a0e 	vldr	s14, [pc, #56]	@ 8021e54 <__ieee754_atan2f+0x130>
 8021e1e:	ee77 7a87 	vadd.f32	s15, s15, s14
 8021e22:	ed9f 7a0d 	vldr	s14, [pc, #52]	@ 8021e58 <__ieee754_atan2f+0x134>
 8021e26:	ee77 7a67 	vsub.f32	s15, s14, s15
 8021e2a:	e78e      	b.n	8021d4a <__ieee754_atan2f+0x26>
 8021e2c:	eddf 7a0a 	vldr	s15, [pc, #40]	@ 8021e58 <__ieee754_atan2f+0x134>
 8021e30:	e78b      	b.n	8021d4a <__ieee754_atan2f+0x26>
 8021e32:	eddf 7a0b 	vldr	s15, [pc, #44]	@ 8021e60 <__ieee754_atan2f+0x13c>
 8021e36:	e788      	b.n	8021d4a <__ieee754_atan2f+0x26>
 8021e38:	eddf 7a08 	vldr	s15, [pc, #32]	@ 8021e5c <__ieee754_atan2f+0x138>
 8021e3c:	e785      	b.n	8021d4a <__ieee754_atan2f+0x26>
 8021e3e:	bf00      	nop
 8021e40:	c0490fdb 	.word	0xc0490fdb
 8021e44:	bfc90fdb 	.word	0xbfc90fdb
 8021e48:	3fc90fdb 	.word	0x3fc90fdb
 8021e4c:	080251a0 	.word	0x080251a0
 8021e50:	08025194 	.word	0x08025194
 8021e54:	33bbbd2e 	.word	0x33bbbd2e
 8021e58:	40490fdb 	.word	0x40490fdb
 8021e5c:	00000000 	.word	0x00000000
 8021e60:	3f490fdb 	.word	0x3f490fdb

08021e64 <__ieee754_rem_pio2f>:
 8021e64:	b5f0      	push	{r4, r5, r6, r7, lr}
 8021e66:	ee10 6a10 	vmov	r6, s0
 8021e6a:	4b88      	ldr	r3, [pc, #544]	@ (802208c <__ieee754_rem_pio2f+0x228>)
 8021e6c:	f026 4500 	bic.w	r5, r6, #2147483648	@ 0x80000000
 8021e70:	429d      	cmp	r5, r3
 8021e72:	b087      	sub	sp, #28
 8021e74:	4604      	mov	r4, r0
 8021e76:	d805      	bhi.n	8021e84 <__ieee754_rem_pio2f+0x20>
 8021e78:	2300      	movs	r3, #0
 8021e7a:	ed80 0a00 	vstr	s0, [r0]
 8021e7e:	6043      	str	r3, [r0, #4]
 8021e80:	2000      	movs	r0, #0
 8021e82:	e022      	b.n	8021eca <__ieee754_rem_pio2f+0x66>
 8021e84:	4b82      	ldr	r3, [pc, #520]	@ (8022090 <__ieee754_rem_pio2f+0x22c>)
 8021e86:	429d      	cmp	r5, r3
 8021e88:	d83a      	bhi.n	8021f00 <__ieee754_rem_pio2f+0x9c>
 8021e8a:	f026 4300 	bic.w	r3, r6, #2147483648	@ 0x80000000
 8021e8e:	2e00      	cmp	r6, #0
 8021e90:	ed9f 7a80 	vldr	s14, [pc, #512]	@ 8022094 <__ieee754_rem_pio2f+0x230>
 8021e94:	4a80      	ldr	r2, [pc, #512]	@ (8022098 <__ieee754_rem_pio2f+0x234>)
 8021e96:	f023 030f 	bic.w	r3, r3, #15
 8021e9a:	dd18      	ble.n	8021ece <__ieee754_rem_pio2f+0x6a>
 8021e9c:	4293      	cmp	r3, r2
 8021e9e:	ee70 7a47 	vsub.f32	s15, s0, s14
 8021ea2:	bf09      	itett	eq
 8021ea4:	ed9f 7a7d 	vldreq	s14, [pc, #500]	@ 802209c <__ieee754_rem_pio2f+0x238>
 8021ea8:	eddf 6a7d 	vldrne	s13, [pc, #500]	@ 80220a0 <__ieee754_rem_pio2f+0x23c>
 8021eac:	eddf 6a7d 	vldreq	s13, [pc, #500]	@ 80220a4 <__ieee754_rem_pio2f+0x240>
 8021eb0:	ee77 7ac7 	vsubeq.f32	s15, s15, s14
 8021eb4:	ee37 7ae6 	vsub.f32	s14, s15, s13
 8021eb8:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8021ebc:	ed80 7a00 	vstr	s14, [r0]
 8021ec0:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8021ec4:	edc0 7a01 	vstr	s15, [r0, #4]
 8021ec8:	2001      	movs	r0, #1
 8021eca:	b007      	add	sp, #28
 8021ecc:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8021ece:	4293      	cmp	r3, r2
 8021ed0:	ee70 7a07 	vadd.f32	s15, s0, s14
 8021ed4:	bf09      	itett	eq
 8021ed6:	ed9f 7a71 	vldreq	s14, [pc, #452]	@ 802209c <__ieee754_rem_pio2f+0x238>
 8021eda:	eddf 6a71 	vldrne	s13, [pc, #452]	@ 80220a0 <__ieee754_rem_pio2f+0x23c>
 8021ede:	eddf 6a71 	vldreq	s13, [pc, #452]	@ 80220a4 <__ieee754_rem_pio2f+0x240>
 8021ee2:	ee77 7a87 	vaddeq.f32	s15, s15, s14
 8021ee6:	ee37 7aa6 	vadd.f32	s14, s15, s13
 8021eea:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8021eee:	ed80 7a00 	vstr	s14, [r0]
 8021ef2:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8021ef6:	edc0 7a01 	vstr	s15, [r0, #4]
 8021efa:	f04f 30ff 	mov.w	r0, #4294967295
 8021efe:	e7e4      	b.n	8021eca <__ieee754_rem_pio2f+0x66>
 8021f00:	4b69      	ldr	r3, [pc, #420]	@ (80220a8 <__ieee754_rem_pio2f+0x244>)
 8021f02:	429d      	cmp	r5, r3
 8021f04:	d873      	bhi.n	8021fee <__ieee754_rem_pio2f+0x18a>
 8021f06:	f000 f9b1 	bl	802226c <fabsf>
 8021f0a:	ed9f 7a68 	vldr	s14, [pc, #416]	@ 80220ac <__ieee754_rem_pio2f+0x248>
 8021f0e:	eef6 7a00 	vmov.f32	s15, #96	@ 0x3f000000  0.5
 8021f12:	eee0 7a07 	vfma.f32	s15, s0, s14
 8021f16:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8021f1a:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8021f1e:	ee17 0a90 	vmov	r0, s15
 8021f22:	eddf 7a5c 	vldr	s15, [pc, #368]	@ 8022094 <__ieee754_rem_pio2f+0x230>
 8021f26:	eea7 0a67 	vfms.f32	s0, s14, s15
 8021f2a:	281f      	cmp	r0, #31
 8021f2c:	eddf 7a5c 	vldr	s15, [pc, #368]	@ 80220a0 <__ieee754_rem_pio2f+0x23c>
 8021f30:	ee67 7a27 	vmul.f32	s15, s14, s15
 8021f34:	eeb1 6a47 	vneg.f32	s12, s14
 8021f38:	ee70 6a67 	vsub.f32	s13, s0, s15
 8021f3c:	ee16 1a90 	vmov	r1, s13
 8021f40:	dc09      	bgt.n	8021f56 <__ieee754_rem_pio2f+0xf2>
 8021f42:	4a5b      	ldr	r2, [pc, #364]	@ (80220b0 <__ieee754_rem_pio2f+0x24c>)
 8021f44:	1e47      	subs	r7, r0, #1
 8021f46:	f026 4300 	bic.w	r3, r6, #2147483648	@ 0x80000000
 8021f4a:	f852 2027 	ldr.w	r2, [r2, r7, lsl #2]
 8021f4e:	f023 03ff 	bic.w	r3, r3, #255	@ 0xff
 8021f52:	4293      	cmp	r3, r2
 8021f54:	d107      	bne.n	8021f66 <__ieee754_rem_pio2f+0x102>
 8021f56:	f3c1 52c7 	ubfx	r2, r1, #23, #8
 8021f5a:	ebc2 52d5 	rsb	r2, r2, r5, lsr #23
 8021f5e:	2a08      	cmp	r2, #8
 8021f60:	ea4f 53e5 	mov.w	r3, r5, asr #23
 8021f64:	dc14      	bgt.n	8021f90 <__ieee754_rem_pio2f+0x12c>
 8021f66:	6021      	str	r1, [r4, #0]
 8021f68:	ed94 7a00 	vldr	s14, [r4]
 8021f6c:	ee30 0a47 	vsub.f32	s0, s0, s14
 8021f70:	2e00      	cmp	r6, #0
 8021f72:	ee30 0a67 	vsub.f32	s0, s0, s15
 8021f76:	ed84 0a01 	vstr	s0, [r4, #4]
 8021f7a:	daa6      	bge.n	8021eca <__ieee754_rem_pio2f+0x66>
 8021f7c:	eeb1 7a47 	vneg.f32	s14, s14
 8021f80:	eeb1 0a40 	vneg.f32	s0, s0
 8021f84:	ed84 7a00 	vstr	s14, [r4]
 8021f88:	ed84 0a01 	vstr	s0, [r4, #4]
 8021f8c:	4240      	negs	r0, r0
 8021f8e:	e79c      	b.n	8021eca <__ieee754_rem_pio2f+0x66>
 8021f90:	eddf 5a42 	vldr	s11, [pc, #264]	@ 802209c <__ieee754_rem_pio2f+0x238>
 8021f94:	eef0 6a40 	vmov.f32	s13, s0
 8021f98:	eee6 6a25 	vfma.f32	s13, s12, s11
 8021f9c:	ee70 7a66 	vsub.f32	s15, s0, s13
 8021fa0:	eee6 7a25 	vfma.f32	s15, s12, s11
 8021fa4:	eddf 5a3f 	vldr	s11, [pc, #252]	@ 80220a4 <__ieee754_rem_pio2f+0x240>
 8021fa8:	eed7 7a25 	vfnms.f32	s15, s14, s11
 8021fac:	ee76 5ae7 	vsub.f32	s11, s13, s15
 8021fb0:	ee15 2a90 	vmov	r2, s11
 8021fb4:	f3c2 51c7 	ubfx	r1, r2, #23, #8
 8021fb8:	1a5b      	subs	r3, r3, r1
 8021fba:	2b19      	cmp	r3, #25
 8021fbc:	dc04      	bgt.n	8021fc8 <__ieee754_rem_pio2f+0x164>
 8021fbe:	edc4 5a00 	vstr	s11, [r4]
 8021fc2:	eeb0 0a66 	vmov.f32	s0, s13
 8021fc6:	e7cf      	b.n	8021f68 <__ieee754_rem_pio2f+0x104>
 8021fc8:	eddf 5a3a 	vldr	s11, [pc, #232]	@ 80220b4 <__ieee754_rem_pio2f+0x250>
 8021fcc:	eeb0 0a66 	vmov.f32	s0, s13
 8021fd0:	eea6 0a25 	vfma.f32	s0, s12, s11
 8021fd4:	ee76 7ac0 	vsub.f32	s15, s13, s0
 8021fd8:	eddf 6a37 	vldr	s13, [pc, #220]	@ 80220b8 <__ieee754_rem_pio2f+0x254>
 8021fdc:	eee6 7a25 	vfma.f32	s15, s12, s11
 8021fe0:	eed7 7a26 	vfnms.f32	s15, s14, s13
 8021fe4:	ee30 7a67 	vsub.f32	s14, s0, s15
 8021fe8:	ed84 7a00 	vstr	s14, [r4]
 8021fec:	e7bc      	b.n	8021f68 <__ieee754_rem_pio2f+0x104>
 8021fee:	f1b5 4fff 	cmp.w	r5, #2139095040	@ 0x7f800000
 8021ff2:	d306      	bcc.n	8022002 <__ieee754_rem_pio2f+0x19e>
 8021ff4:	ee70 7a40 	vsub.f32	s15, s0, s0
 8021ff8:	edc0 7a01 	vstr	s15, [r0, #4]
 8021ffc:	edc0 7a00 	vstr	s15, [r0]
 8022000:	e73e      	b.n	8021e80 <__ieee754_rem_pio2f+0x1c>
 8022002:	15ea      	asrs	r2, r5, #23
 8022004:	3a86      	subs	r2, #134	@ 0x86
 8022006:	eba5 53c2 	sub.w	r3, r5, r2, lsl #23
 802200a:	ee07 3a90 	vmov	s15, r3
 802200e:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8022012:	eddf 6a2a 	vldr	s13, [pc, #168]	@ 80220bc <__ieee754_rem_pio2f+0x258>
 8022016:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 802201a:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802201e:	ed8d 7a03 	vstr	s14, [sp, #12]
 8022022:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8022026:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 802202a:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 802202e:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8022032:	ed8d 7a04 	vstr	s14, [sp, #16]
 8022036:	ee67 7aa6 	vmul.f32	s15, s15, s13
 802203a:	eef5 7a40 	vcmp.f32	s15, #0.0
 802203e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8022042:	edcd 7a05 	vstr	s15, [sp, #20]
 8022046:	d11e      	bne.n	8022086 <__ieee754_rem_pio2f+0x222>
 8022048:	eeb5 7a40 	vcmp.f32	s14, #0.0
 802204c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8022050:	bf0c      	ite	eq
 8022052:	2301      	moveq	r3, #1
 8022054:	2302      	movne	r3, #2
 8022056:	491a      	ldr	r1, [pc, #104]	@ (80220c0 <__ieee754_rem_pio2f+0x25c>)
 8022058:	9101      	str	r1, [sp, #4]
 802205a:	2102      	movs	r1, #2
 802205c:	9100      	str	r1, [sp, #0]
 802205e:	a803      	add	r0, sp, #12
 8022060:	4621      	mov	r1, r4
 8022062:	f000 f90b 	bl	802227c <__kernel_rem_pio2f>
 8022066:	2e00      	cmp	r6, #0
 8022068:	f6bf af2f 	bge.w	8021eca <__ieee754_rem_pio2f+0x66>
 802206c:	edd4 7a00 	vldr	s15, [r4]
 8022070:	eef1 7a67 	vneg.f32	s15, s15
 8022074:	edc4 7a00 	vstr	s15, [r4]
 8022078:	edd4 7a01 	vldr	s15, [r4, #4]
 802207c:	eef1 7a67 	vneg.f32	s15, s15
 8022080:	edc4 7a01 	vstr	s15, [r4, #4]
 8022084:	e782      	b.n	8021f8c <__ieee754_rem_pio2f+0x128>
 8022086:	2303      	movs	r3, #3
 8022088:	e7e5      	b.n	8022056 <__ieee754_rem_pio2f+0x1f2>
 802208a:	bf00      	nop
 802208c:	3f490fd8 	.word	0x3f490fd8
 8022090:	4016cbe3 	.word	0x4016cbe3
 8022094:	3fc90f80 	.word	0x3fc90f80
 8022098:	3fc90fd0 	.word	0x3fc90fd0
 802209c:	37354400 	.word	0x37354400
 80220a0:	37354443 	.word	0x37354443
 80220a4:	2e85a308 	.word	0x2e85a308
 80220a8:	43490f80 	.word	0x43490f80
 80220ac:	3f22f984 	.word	0x3f22f984
 80220b0:	080251ac 	.word	0x080251ac
 80220b4:	2e85a300 	.word	0x2e85a300
 80220b8:	248d3132 	.word	0x248d3132
 80220bc:	43800000 	.word	0x43800000
 80220c0:	0802522c 	.word	0x0802522c

080220c4 <atanf>:
 80220c4:	b538      	push	{r3, r4, r5, lr}
 80220c6:	ee10 5a10 	vmov	r5, s0
 80220ca:	f025 4400 	bic.w	r4, r5, #2147483648	@ 0x80000000
 80220ce:	f1b4 4fa1 	cmp.w	r4, #1350565888	@ 0x50800000
 80220d2:	eef0 7a40 	vmov.f32	s15, s0
 80220d6:	d310      	bcc.n	80220fa <atanf+0x36>
 80220d8:	f1b4 4fff 	cmp.w	r4, #2139095040	@ 0x7f800000
 80220dc:	d904      	bls.n	80220e8 <atanf+0x24>
 80220de:	ee70 7a00 	vadd.f32	s15, s0, s0
 80220e2:	eeb0 0a67 	vmov.f32	s0, s15
 80220e6:	bd38      	pop	{r3, r4, r5, pc}
 80220e8:	eddf 7a4d 	vldr	s15, [pc, #308]	@ 8022220 <atanf+0x15c>
 80220ec:	ed9f 7a4d 	vldr	s14, [pc, #308]	@ 8022224 <atanf+0x160>
 80220f0:	2d00      	cmp	r5, #0
 80220f2:	bfc8      	it	gt
 80220f4:	eef0 7a47 	vmovgt.f32	s15, s14
 80220f8:	e7f3      	b.n	80220e2 <atanf+0x1e>
 80220fa:	4b4b      	ldr	r3, [pc, #300]	@ (8022228 <atanf+0x164>)
 80220fc:	429c      	cmp	r4, r3
 80220fe:	d810      	bhi.n	8022122 <atanf+0x5e>
 8022100:	f1b4 5f44 	cmp.w	r4, #822083584	@ 0x31000000
 8022104:	d20a      	bcs.n	802211c <atanf+0x58>
 8022106:	ed9f 7a49 	vldr	s14, [pc, #292]	@ 802222c <atanf+0x168>
 802210a:	ee30 7a07 	vadd.f32	s14, s0, s14
 802210e:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8022112:	eeb4 7ae6 	vcmpe.f32	s14, s13
 8022116:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802211a:	dce2      	bgt.n	80220e2 <atanf+0x1e>
 802211c:	f04f 33ff 	mov.w	r3, #4294967295
 8022120:	e013      	b.n	802214a <atanf+0x86>
 8022122:	f000 f8a3 	bl	802226c <fabsf>
 8022126:	4b42      	ldr	r3, [pc, #264]	@ (8022230 <atanf+0x16c>)
 8022128:	429c      	cmp	r4, r3
 802212a:	d84f      	bhi.n	80221cc <atanf+0x108>
 802212c:	f5a3 03d0 	sub.w	r3, r3, #6815744	@ 0x680000
 8022130:	429c      	cmp	r4, r3
 8022132:	d841      	bhi.n	80221b8 <atanf+0xf4>
 8022134:	eef0 7a00 	vmov.f32	s15, #0	@ 0x40000000  2.0
 8022138:	eebf 7a00 	vmov.f32	s14, #240	@ 0xbf800000 -1.0
 802213c:	eea0 7a27 	vfma.f32	s14, s0, s15
 8022140:	2300      	movs	r3, #0
 8022142:	ee30 0a27 	vadd.f32	s0, s0, s15
 8022146:	eec7 7a00 	vdiv.f32	s15, s14, s0
 802214a:	1c5a      	adds	r2, r3, #1
 802214c:	ee27 6aa7 	vmul.f32	s12, s15, s15
 8022150:	ed9f 7a38 	vldr	s14, [pc, #224]	@ 8022234 <atanf+0x170>
 8022154:	eddf 5a38 	vldr	s11, [pc, #224]	@ 8022238 <atanf+0x174>
 8022158:	ed9f 5a38 	vldr	s10, [pc, #224]	@ 802223c <atanf+0x178>
 802215c:	ee66 6a06 	vmul.f32	s13, s12, s12
 8022160:	eee6 5a87 	vfma.f32	s11, s13, s14
 8022164:	ed9f 7a36 	vldr	s14, [pc, #216]	@ 8022240 <atanf+0x17c>
 8022168:	eea5 7aa6 	vfma.f32	s14, s11, s13
 802216c:	eddf 5a35 	vldr	s11, [pc, #212]	@ 8022244 <atanf+0x180>
 8022170:	eee7 5a26 	vfma.f32	s11, s14, s13
 8022174:	ed9f 7a34 	vldr	s14, [pc, #208]	@ 8022248 <atanf+0x184>
 8022178:	eea5 7aa6 	vfma.f32	s14, s11, s13
 802217c:	eddf 5a33 	vldr	s11, [pc, #204]	@ 802224c <atanf+0x188>
 8022180:	eee7 5a26 	vfma.f32	s11, s14, s13
 8022184:	ed9f 7a32 	vldr	s14, [pc, #200]	@ 8022250 <atanf+0x18c>
 8022188:	eea6 5a87 	vfma.f32	s10, s13, s14
 802218c:	ed9f 7a31 	vldr	s14, [pc, #196]	@ 8022254 <atanf+0x190>
 8022190:	eea5 7a26 	vfma.f32	s14, s10, s13
 8022194:	ed9f 5a30 	vldr	s10, [pc, #192]	@ 8022258 <atanf+0x194>
 8022198:	eea7 5a26 	vfma.f32	s10, s14, s13
 802219c:	ed9f 7a2f 	vldr	s14, [pc, #188]	@ 802225c <atanf+0x198>
 80221a0:	eea5 7a26 	vfma.f32	s14, s10, s13
 80221a4:	ee27 7a26 	vmul.f32	s14, s14, s13
 80221a8:	eea5 7a86 	vfma.f32	s14, s11, s12
 80221ac:	ee27 7a87 	vmul.f32	s14, s15, s14
 80221b0:	d121      	bne.n	80221f6 <atanf+0x132>
 80221b2:	ee77 7ac7 	vsub.f32	s15, s15, s14
 80221b6:	e794      	b.n	80220e2 <atanf+0x1e>
 80221b8:	eef7 7a00 	vmov.f32	s15, #112	@ 0x3f800000  1.0
 80221bc:	ee30 7a67 	vsub.f32	s14, s0, s15
 80221c0:	ee30 0a27 	vadd.f32	s0, s0, s15
 80221c4:	2301      	movs	r3, #1
 80221c6:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80221ca:	e7be      	b.n	802214a <atanf+0x86>
 80221cc:	4b24      	ldr	r3, [pc, #144]	@ (8022260 <atanf+0x19c>)
 80221ce:	429c      	cmp	r4, r3
 80221d0:	d80b      	bhi.n	80221ea <atanf+0x126>
 80221d2:	eef7 7a08 	vmov.f32	s15, #120	@ 0x3fc00000  1.5
 80221d6:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 80221da:	eea0 7a27 	vfma.f32	s14, s0, s15
 80221de:	2302      	movs	r3, #2
 80221e0:	ee70 6a67 	vsub.f32	s13, s0, s15
 80221e4:	eec6 7a87 	vdiv.f32	s15, s13, s14
 80221e8:	e7af      	b.n	802214a <atanf+0x86>
 80221ea:	eebf 7a00 	vmov.f32	s14, #240	@ 0xbf800000 -1.0
 80221ee:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80221f2:	2303      	movs	r3, #3
 80221f4:	e7a9      	b.n	802214a <atanf+0x86>
 80221f6:	4a1b      	ldr	r2, [pc, #108]	@ (8022264 <atanf+0x1a0>)
 80221f8:	491b      	ldr	r1, [pc, #108]	@ (8022268 <atanf+0x1a4>)
 80221fa:	eb02 0283 	add.w	r2, r2, r3, lsl #2
 80221fe:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 8022202:	edd3 6a00 	vldr	s13, [r3]
 8022206:	ee37 7a66 	vsub.f32	s14, s14, s13
 802220a:	2d00      	cmp	r5, #0
 802220c:	ee37 7a67 	vsub.f32	s14, s14, s15
 8022210:	edd2 7a00 	vldr	s15, [r2]
 8022214:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8022218:	bfb8      	it	lt
 802221a:	eef1 7a67 	vneglt.f32	s15, s15
 802221e:	e760      	b.n	80220e2 <atanf+0x1e>
 8022220:	bfc90fdb 	.word	0xbfc90fdb
 8022224:	3fc90fdb 	.word	0x3fc90fdb
 8022228:	3edfffff 	.word	0x3edfffff
 802222c:	7149f2ca 	.word	0x7149f2ca
 8022230:	3f97ffff 	.word	0x3f97ffff
 8022234:	3c8569d7 	.word	0x3c8569d7
 8022238:	3d4bda59 	.word	0x3d4bda59
 802223c:	bd6ef16b 	.word	0xbd6ef16b
 8022240:	3d886b35 	.word	0x3d886b35
 8022244:	3dba2e6e 	.word	0x3dba2e6e
 8022248:	3e124925 	.word	0x3e124925
 802224c:	3eaaaaab 	.word	0x3eaaaaab
 8022250:	bd15a221 	.word	0xbd15a221
 8022254:	bd9d8795 	.word	0xbd9d8795
 8022258:	bde38e38 	.word	0xbde38e38
 802225c:	be4ccccd 	.word	0xbe4ccccd
 8022260:	401bffff 	.word	0x401bffff
 8022264:	08025554 	.word	0x08025554
 8022268:	08025544 	.word	0x08025544

0802226c <fabsf>:
 802226c:	ee10 3a10 	vmov	r3, s0
 8022270:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
 8022274:	ee00 3a10 	vmov	s0, r3
 8022278:	4770      	bx	lr
	...

0802227c <__kernel_rem_pio2f>:
 802227c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8022280:	ed2d 8b04 	vpush	{d8-d9}
 8022284:	b0d9      	sub	sp, #356	@ 0x164
 8022286:	4690      	mov	r8, r2
 8022288:	9001      	str	r0, [sp, #4]
 802228a:	4ab6      	ldr	r2, [pc, #728]	@ (8022564 <__kernel_rem_pio2f+0x2e8>)
 802228c:	9866      	ldr	r0, [sp, #408]	@ 0x198
 802228e:	f118 0f04 	cmn.w	r8, #4
 8022292:	f852 a020 	ldr.w	sl, [r2, r0, lsl #2]
 8022296:	460f      	mov	r7, r1
 8022298:	f103 3bff 	add.w	fp, r3, #4294967295
 802229c:	db26      	blt.n	80222ec <__kernel_rem_pio2f+0x70>
 802229e:	f1b8 0203 	subs.w	r2, r8, #3
 80222a2:	bf48      	it	mi
 80222a4:	f108 0204 	addmi.w	r2, r8, #4
 80222a8:	10d2      	asrs	r2, r2, #3
 80222aa:	1c55      	adds	r5, r2, #1
 80222ac:	9967      	ldr	r1, [sp, #412]	@ 0x19c
 80222ae:	ed9f 7ab1 	vldr	s14, [pc, #708]	@ 8022574 <__kernel_rem_pio2f+0x2f8>
 80222b2:	00e8      	lsls	r0, r5, #3
 80222b4:	eba2 060b 	sub.w	r6, r2, fp
 80222b8:	9002      	str	r0, [sp, #8]
 80222ba:	eba8 05c5 	sub.w	r5, r8, r5, lsl #3
 80222be:	eb0a 0c0b 	add.w	ip, sl, fp
 80222c2:	ac1c      	add	r4, sp, #112	@ 0x70
 80222c4:	eb01 0e86 	add.w	lr, r1, r6, lsl #2
 80222c8:	2000      	movs	r0, #0
 80222ca:	4560      	cmp	r0, ip
 80222cc:	dd10      	ble.n	80222f0 <__kernel_rem_pio2f+0x74>
 80222ce:	a91c      	add	r1, sp, #112	@ 0x70
 80222d0:	eb01 0083 	add.w	r0, r1, r3, lsl #2
 80222d4:	f50d 7988 	add.w	r9, sp, #272	@ 0x110
 80222d8:	2600      	movs	r6, #0
 80222da:	4556      	cmp	r6, sl
 80222dc:	dc24      	bgt.n	8022328 <__kernel_rem_pio2f+0xac>
 80222de:	f8dd e004 	ldr.w	lr, [sp, #4]
 80222e2:	eddf 7aa4 	vldr	s15, [pc, #656]	@ 8022574 <__kernel_rem_pio2f+0x2f8>
 80222e6:	4684      	mov	ip, r0
 80222e8:	2400      	movs	r4, #0
 80222ea:	e016      	b.n	802231a <__kernel_rem_pio2f+0x9e>
 80222ec:	2200      	movs	r2, #0
 80222ee:	e7dc      	b.n	80222aa <__kernel_rem_pio2f+0x2e>
 80222f0:	42c6      	cmn	r6, r0
 80222f2:	bf5d      	ittte	pl
 80222f4:	f85e 1020 	ldrpl.w	r1, [lr, r0, lsl #2]
 80222f8:	ee07 1a90 	vmovpl	s15, r1
 80222fc:	eef8 7ae7 	vcvtpl.f32.s32	s15, s15
 8022300:	eef0 7a47 	vmovmi.f32	s15, s14
 8022304:	ece4 7a01 	vstmia	r4!, {s15}
 8022308:	3001      	adds	r0, #1
 802230a:	e7de      	b.n	80222ca <__kernel_rem_pio2f+0x4e>
 802230c:	ecfe 6a01 	vldmia	lr!, {s13}
 8022310:	ed3c 7a01 	vldmdb	ip!, {s14}
 8022314:	eee6 7a87 	vfma.f32	s15, s13, s14
 8022318:	3401      	adds	r4, #1
 802231a:	455c      	cmp	r4, fp
 802231c:	ddf6      	ble.n	802230c <__kernel_rem_pio2f+0x90>
 802231e:	ece9 7a01 	vstmia	r9!, {s15}
 8022322:	3601      	adds	r6, #1
 8022324:	3004      	adds	r0, #4
 8022326:	e7d8      	b.n	80222da <__kernel_rem_pio2f+0x5e>
 8022328:	a908      	add	r1, sp, #32
 802232a:	eb01 018a 	add.w	r1, r1, sl, lsl #2
 802232e:	9104      	str	r1, [sp, #16]
 8022330:	9967      	ldr	r1, [sp, #412]	@ 0x19c
 8022332:	eddf 8a8f 	vldr	s17, [pc, #572]	@ 8022570 <__kernel_rem_pio2f+0x2f4>
 8022336:	ed9f 9a8d 	vldr	s18, [pc, #564]	@ 802256c <__kernel_rem_pio2f+0x2f0>
 802233a:	eb01 0282 	add.w	r2, r1, r2, lsl #2
 802233e:	9203      	str	r2, [sp, #12]
 8022340:	4654      	mov	r4, sl
 8022342:	00a2      	lsls	r2, r4, #2
 8022344:	9205      	str	r2, [sp, #20]
 8022346:	aa58      	add	r2, sp, #352	@ 0x160
 8022348:	eb02 0284 	add.w	r2, r2, r4, lsl #2
 802234c:	ed12 0a14 	vldr	s0, [r2, #-80]	@ 0xffffffb0
 8022350:	a944      	add	r1, sp, #272	@ 0x110
 8022352:	aa08      	add	r2, sp, #32
 8022354:	eb01 0084 	add.w	r0, r1, r4, lsl #2
 8022358:	4694      	mov	ip, r2
 802235a:	4626      	mov	r6, r4
 802235c:	2e00      	cmp	r6, #0
 802235e:	dc4c      	bgt.n	80223fa <__kernel_rem_pio2f+0x17e>
 8022360:	4628      	mov	r0, r5
 8022362:	e9cd 2306 	strd	r2, r3, [sp, #24]
 8022366:	f000 f9f1 	bl	802274c <scalbnf>
 802236a:	eeb0 8a40 	vmov.f32	s16, s0
 802236e:	eeb4 0a00 	vmov.f32	s0, #64	@ 0x3e000000  0.125
 8022372:	ee28 0a00 	vmul.f32	s0, s16, s0
 8022376:	f000 fa4f 	bl	8022818 <floorf>
 802237a:	eef2 7a00 	vmov.f32	s15, #32	@ 0x41000000  8.0
 802237e:	eea0 8a67 	vfms.f32	s16, s0, s15
 8022382:	2d00      	cmp	r5, #0
 8022384:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 8022388:	eefd 7ac8 	vcvt.s32.f32	s15, s16
 802238c:	ee17 9a90 	vmov	r9, s15
 8022390:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8022394:	ee38 8a67 	vsub.f32	s16, s16, s15
 8022398:	dd41      	ble.n	802241e <__kernel_rem_pio2f+0x1a2>
 802239a:	f104 3cff 	add.w	ip, r4, #4294967295
 802239e:	a908      	add	r1, sp, #32
 80223a0:	f1c5 0e08 	rsb	lr, r5, #8
 80223a4:	f851 602c 	ldr.w	r6, [r1, ip, lsl #2]
 80223a8:	fa46 f00e 	asr.w	r0, r6, lr
 80223ac:	4481      	add	r9, r0
 80223ae:	fa00 f00e 	lsl.w	r0, r0, lr
 80223b2:	1a36      	subs	r6, r6, r0
 80223b4:	f1c5 0007 	rsb	r0, r5, #7
 80223b8:	f841 602c 	str.w	r6, [r1, ip, lsl #2]
 80223bc:	4106      	asrs	r6, r0
 80223be:	2e00      	cmp	r6, #0
 80223c0:	dd3c      	ble.n	802243c <__kernel_rem_pio2f+0x1c0>
 80223c2:	f04f 0e00 	mov.w	lr, #0
 80223c6:	f109 0901 	add.w	r9, r9, #1
 80223ca:	4670      	mov	r0, lr
 80223cc:	4574      	cmp	r4, lr
 80223ce:	dc68      	bgt.n	80224a2 <__kernel_rem_pio2f+0x226>
 80223d0:	2d00      	cmp	r5, #0
 80223d2:	dd03      	ble.n	80223dc <__kernel_rem_pio2f+0x160>
 80223d4:	2d01      	cmp	r5, #1
 80223d6:	d074      	beq.n	80224c2 <__kernel_rem_pio2f+0x246>
 80223d8:	2d02      	cmp	r5, #2
 80223da:	d07d      	beq.n	80224d8 <__kernel_rem_pio2f+0x25c>
 80223dc:	2e02      	cmp	r6, #2
 80223de:	d12d      	bne.n	802243c <__kernel_rem_pio2f+0x1c0>
 80223e0:	eeb7 0a00 	vmov.f32	s0, #112	@ 0x3f800000  1.0
 80223e4:	ee30 8a48 	vsub.f32	s16, s0, s16
 80223e8:	b340      	cbz	r0, 802243c <__kernel_rem_pio2f+0x1c0>
 80223ea:	4628      	mov	r0, r5
 80223ec:	9306      	str	r3, [sp, #24]
 80223ee:	f000 f9ad 	bl	802274c <scalbnf>
 80223f2:	9b06      	ldr	r3, [sp, #24]
 80223f4:	ee38 8a40 	vsub.f32	s16, s16, s0
 80223f8:	e020      	b.n	802243c <__kernel_rem_pio2f+0x1c0>
 80223fa:	ee60 7a28 	vmul.f32	s15, s0, s17
 80223fe:	3e01      	subs	r6, #1
 8022400:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8022404:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8022408:	eea7 0ac9 	vfms.f32	s0, s15, s18
 802240c:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 8022410:	ecac 0a01 	vstmia	ip!, {s0}
 8022414:	ed30 0a01 	vldmdb	r0!, {s0}
 8022418:	ee37 0a80 	vadd.f32	s0, s15, s0
 802241c:	e79e      	b.n	802235c <__kernel_rem_pio2f+0xe0>
 802241e:	d105      	bne.n	802242c <__kernel_rem_pio2f+0x1b0>
 8022420:	1e60      	subs	r0, r4, #1
 8022422:	a908      	add	r1, sp, #32
 8022424:	f851 6020 	ldr.w	r6, [r1, r0, lsl #2]
 8022428:	11f6      	asrs	r6, r6, #7
 802242a:	e7c8      	b.n	80223be <__kernel_rem_pio2f+0x142>
 802242c:	eef6 7a00 	vmov.f32	s15, #96	@ 0x3f000000  0.5
 8022430:	eeb4 8ae7 	vcmpe.f32	s16, s15
 8022434:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8022438:	da31      	bge.n	802249e <__kernel_rem_pio2f+0x222>
 802243a:	2600      	movs	r6, #0
 802243c:	eeb5 8a40 	vcmp.f32	s16, #0.0
 8022440:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8022444:	f040 8098 	bne.w	8022578 <__kernel_rem_pio2f+0x2fc>
 8022448:	1e60      	subs	r0, r4, #1
 802244a:	2200      	movs	r2, #0
 802244c:	4550      	cmp	r0, sl
 802244e:	da4b      	bge.n	80224e8 <__kernel_rem_pio2f+0x26c>
 8022450:	2a00      	cmp	r2, #0
 8022452:	d065      	beq.n	8022520 <__kernel_rem_pio2f+0x2a4>
 8022454:	3c01      	subs	r4, #1
 8022456:	ab08      	add	r3, sp, #32
 8022458:	3d08      	subs	r5, #8
 802245a:	f853 3024 	ldr.w	r3, [r3, r4, lsl #2]
 802245e:	2b00      	cmp	r3, #0
 8022460:	d0f8      	beq.n	8022454 <__kernel_rem_pio2f+0x1d8>
 8022462:	4628      	mov	r0, r5
 8022464:	eeb7 0a00 	vmov.f32	s0, #112	@ 0x3f800000  1.0
 8022468:	f000 f970 	bl	802274c <scalbnf>
 802246c:	1c63      	adds	r3, r4, #1
 802246e:	aa44      	add	r2, sp, #272	@ 0x110
 8022470:	ed9f 7a3f 	vldr	s14, [pc, #252]	@ 8022570 <__kernel_rem_pio2f+0x2f4>
 8022474:	0099      	lsls	r1, r3, #2
 8022476:	eb02 0283 	add.w	r2, r2, r3, lsl #2
 802247a:	4623      	mov	r3, r4
 802247c:	2b00      	cmp	r3, #0
 802247e:	f280 80a9 	bge.w	80225d4 <__kernel_rem_pio2f+0x358>
 8022482:	4623      	mov	r3, r4
 8022484:	2b00      	cmp	r3, #0
 8022486:	f2c0 80c7 	blt.w	8022618 <__kernel_rem_pio2f+0x39c>
 802248a:	aa44      	add	r2, sp, #272	@ 0x110
 802248c:	eb02 0583 	add.w	r5, r2, r3, lsl #2
 8022490:	f8df c0d4 	ldr.w	ip, [pc, #212]	@ 8022568 <__kernel_rem_pio2f+0x2ec>
 8022494:	eddf 7a37 	vldr	s15, [pc, #220]	@ 8022574 <__kernel_rem_pio2f+0x2f8>
 8022498:	2000      	movs	r0, #0
 802249a:	1ae2      	subs	r2, r4, r3
 802249c:	e0b1      	b.n	8022602 <__kernel_rem_pio2f+0x386>
 802249e:	2602      	movs	r6, #2
 80224a0:	e78f      	b.n	80223c2 <__kernel_rem_pio2f+0x146>
 80224a2:	f852 1b04 	ldr.w	r1, [r2], #4
 80224a6:	b948      	cbnz	r0, 80224bc <__kernel_rem_pio2f+0x240>
 80224a8:	b121      	cbz	r1, 80224b4 <__kernel_rem_pio2f+0x238>
 80224aa:	f5c1 7180 	rsb	r1, r1, #256	@ 0x100
 80224ae:	f842 1c04 	str.w	r1, [r2, #-4]
 80224b2:	2101      	movs	r1, #1
 80224b4:	f10e 0e01 	add.w	lr, lr, #1
 80224b8:	4608      	mov	r0, r1
 80224ba:	e787      	b.n	80223cc <__kernel_rem_pio2f+0x150>
 80224bc:	f1c1 01ff 	rsb	r1, r1, #255	@ 0xff
 80224c0:	e7f5      	b.n	80224ae <__kernel_rem_pio2f+0x232>
 80224c2:	f104 3cff 	add.w	ip, r4, #4294967295
 80224c6:	aa08      	add	r2, sp, #32
 80224c8:	f852 202c 	ldr.w	r2, [r2, ip, lsl #2]
 80224cc:	f002 027f 	and.w	r2, r2, #127	@ 0x7f
 80224d0:	a908      	add	r1, sp, #32
 80224d2:	f841 202c 	str.w	r2, [r1, ip, lsl #2]
 80224d6:	e781      	b.n	80223dc <__kernel_rem_pio2f+0x160>
 80224d8:	f104 3cff 	add.w	ip, r4, #4294967295
 80224dc:	aa08      	add	r2, sp, #32
 80224de:	f852 202c 	ldr.w	r2, [r2, ip, lsl #2]
 80224e2:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
 80224e6:	e7f3      	b.n	80224d0 <__kernel_rem_pio2f+0x254>
 80224e8:	a908      	add	r1, sp, #32
 80224ea:	f851 1020 	ldr.w	r1, [r1, r0, lsl #2]
 80224ee:	3801      	subs	r0, #1
 80224f0:	430a      	orrs	r2, r1
 80224f2:	e7ab      	b.n	802244c <__kernel_rem_pio2f+0x1d0>
 80224f4:	3201      	adds	r2, #1
 80224f6:	f850 6d04 	ldr.w	r6, [r0, #-4]!
 80224fa:	2e00      	cmp	r6, #0
 80224fc:	d0fa      	beq.n	80224f4 <__kernel_rem_pio2f+0x278>
 80224fe:	9905      	ldr	r1, [sp, #20]
 8022500:	f501 71b0 	add.w	r1, r1, #352	@ 0x160
 8022504:	eb0d 0001 	add.w	r0, sp, r1
 8022508:	18e6      	adds	r6, r4, r3
 802250a:	a91c      	add	r1, sp, #112	@ 0x70
 802250c:	f104 0c01 	add.w	ip, r4, #1
 8022510:	384c      	subs	r0, #76	@ 0x4c
 8022512:	eb01 0686 	add.w	r6, r1, r6, lsl #2
 8022516:	4422      	add	r2, r4
 8022518:	4562      	cmp	r2, ip
 802251a:	da04      	bge.n	8022526 <__kernel_rem_pio2f+0x2aa>
 802251c:	4614      	mov	r4, r2
 802251e:	e710      	b.n	8022342 <__kernel_rem_pio2f+0xc6>
 8022520:	9804      	ldr	r0, [sp, #16]
 8022522:	2201      	movs	r2, #1
 8022524:	e7e7      	b.n	80224f6 <__kernel_rem_pio2f+0x27a>
 8022526:	9903      	ldr	r1, [sp, #12]
 8022528:	f8dd e004 	ldr.w	lr, [sp, #4]
 802252c:	f851 102c 	ldr.w	r1, [r1, ip, lsl #2]
 8022530:	9105      	str	r1, [sp, #20]
 8022532:	ee07 1a90 	vmov	s15, r1
 8022536:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 802253a:	2400      	movs	r4, #0
 802253c:	ece6 7a01 	vstmia	r6!, {s15}
 8022540:	eddf 7a0c 	vldr	s15, [pc, #48]	@ 8022574 <__kernel_rem_pio2f+0x2f8>
 8022544:	46b1      	mov	r9, r6
 8022546:	455c      	cmp	r4, fp
 8022548:	dd04      	ble.n	8022554 <__kernel_rem_pio2f+0x2d8>
 802254a:	ece0 7a01 	vstmia	r0!, {s15}
 802254e:	f10c 0c01 	add.w	ip, ip, #1
 8022552:	e7e1      	b.n	8022518 <__kernel_rem_pio2f+0x29c>
 8022554:	ecfe 6a01 	vldmia	lr!, {s13}
 8022558:	ed39 7a01 	vldmdb	r9!, {s14}
 802255c:	3401      	adds	r4, #1
 802255e:	eee6 7a87 	vfma.f32	s15, s13, s14
 8022562:	e7f0      	b.n	8022546 <__kernel_rem_pio2f+0x2ca>
 8022564:	08025590 	.word	0x08025590
 8022568:	08025564 	.word	0x08025564
 802256c:	43800000 	.word	0x43800000
 8022570:	3b800000 	.word	0x3b800000
 8022574:	00000000 	.word	0x00000000
 8022578:	9b02      	ldr	r3, [sp, #8]
 802257a:	eeb0 0a48 	vmov.f32	s0, s16
 802257e:	eba3 0008 	sub.w	r0, r3, r8
 8022582:	f000 f8e3 	bl	802274c <scalbnf>
 8022586:	ed1f 7a07 	vldr	s14, [pc, #-28]	@ 802256c <__kernel_rem_pio2f+0x2f0>
 802258a:	eeb4 0ac7 	vcmpe.f32	s0, s14
 802258e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8022592:	db19      	blt.n	80225c8 <__kernel_rem_pio2f+0x34c>
 8022594:	ed5f 7a0a 	vldr	s15, [pc, #-40]	@ 8022570 <__kernel_rem_pio2f+0x2f4>
 8022598:	ee60 7a27 	vmul.f32	s15, s0, s15
 802259c:	aa08      	add	r2, sp, #32
 802259e:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80225a2:	3508      	adds	r5, #8
 80225a4:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80225a8:	eea7 0ac7 	vfms.f32	s0, s15, s14
 80225ac:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80225b0:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 80225b4:	ee10 3a10 	vmov	r3, s0
 80225b8:	f842 3024 	str.w	r3, [r2, r4, lsl #2]
 80225bc:	ee17 3a90 	vmov	r3, s15
 80225c0:	3401      	adds	r4, #1
 80225c2:	f842 3024 	str.w	r3, [r2, r4, lsl #2]
 80225c6:	e74c      	b.n	8022462 <__kernel_rem_pio2f+0x1e6>
 80225c8:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 80225cc:	aa08      	add	r2, sp, #32
 80225ce:	ee10 3a10 	vmov	r3, s0
 80225d2:	e7f6      	b.n	80225c2 <__kernel_rem_pio2f+0x346>
 80225d4:	a808      	add	r0, sp, #32
 80225d6:	f850 0023 	ldr.w	r0, [r0, r3, lsl #2]
 80225da:	9001      	str	r0, [sp, #4]
 80225dc:	ee07 0a90 	vmov	s15, r0
 80225e0:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80225e4:	3b01      	subs	r3, #1
 80225e6:	ee67 7a80 	vmul.f32	s15, s15, s0
 80225ea:	ee20 0a07 	vmul.f32	s0, s0, s14
 80225ee:	ed62 7a01 	vstmdb	r2!, {s15}
 80225f2:	e743      	b.n	802247c <__kernel_rem_pio2f+0x200>
 80225f4:	ecfc 6a01 	vldmia	ip!, {s13}
 80225f8:	ecb5 7a01 	vldmia	r5!, {s14}
 80225fc:	eee6 7a87 	vfma.f32	s15, s13, s14
 8022600:	3001      	adds	r0, #1
 8022602:	4550      	cmp	r0, sl
 8022604:	dc01      	bgt.n	802260a <__kernel_rem_pio2f+0x38e>
 8022606:	4290      	cmp	r0, r2
 8022608:	ddf4      	ble.n	80225f4 <__kernel_rem_pio2f+0x378>
 802260a:	a858      	add	r0, sp, #352	@ 0x160
 802260c:	eb00 0282 	add.w	r2, r0, r2, lsl #2
 8022610:	ed42 7a28 	vstr	s15, [r2, #-160]	@ 0xffffff60
 8022614:	3b01      	subs	r3, #1
 8022616:	e735      	b.n	8022484 <__kernel_rem_pio2f+0x208>
 8022618:	9b66      	ldr	r3, [sp, #408]	@ 0x198
 802261a:	2b02      	cmp	r3, #2
 802261c:	dc09      	bgt.n	8022632 <__kernel_rem_pio2f+0x3b6>
 802261e:	2b00      	cmp	r3, #0
 8022620:	dc27      	bgt.n	8022672 <__kernel_rem_pio2f+0x3f6>
 8022622:	d040      	beq.n	80226a6 <__kernel_rem_pio2f+0x42a>
 8022624:	f009 0007 	and.w	r0, r9, #7
 8022628:	b059      	add	sp, #356	@ 0x164
 802262a:	ecbd 8b04 	vpop	{d8-d9}
 802262e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8022632:	9b66      	ldr	r3, [sp, #408]	@ 0x198
 8022634:	2b03      	cmp	r3, #3
 8022636:	d1f5      	bne.n	8022624 <__kernel_rem_pio2f+0x3a8>
 8022638:	aa30      	add	r2, sp, #192	@ 0xc0
 802263a:	1f0b      	subs	r3, r1, #4
 802263c:	4413      	add	r3, r2
 802263e:	461a      	mov	r2, r3
 8022640:	4620      	mov	r0, r4
 8022642:	2800      	cmp	r0, #0
 8022644:	dc50      	bgt.n	80226e8 <__kernel_rem_pio2f+0x46c>
 8022646:	4622      	mov	r2, r4
 8022648:	2a01      	cmp	r2, #1
 802264a:	dc5d      	bgt.n	8022708 <__kernel_rem_pio2f+0x48c>
 802264c:	ab30      	add	r3, sp, #192	@ 0xc0
 802264e:	ed5f 7a37 	vldr	s15, [pc, #-220]	@ 8022574 <__kernel_rem_pio2f+0x2f8>
 8022652:	440b      	add	r3, r1
 8022654:	2c01      	cmp	r4, #1
 8022656:	dc67      	bgt.n	8022728 <__kernel_rem_pio2f+0x4ac>
 8022658:	eddd 6a30 	vldr	s13, [sp, #192]	@ 0xc0
 802265c:	ed9d 7a31 	vldr	s14, [sp, #196]	@ 0xc4
 8022660:	2e00      	cmp	r6, #0
 8022662:	d167      	bne.n	8022734 <__kernel_rem_pio2f+0x4b8>
 8022664:	edc7 6a00 	vstr	s13, [r7]
 8022668:	ed87 7a01 	vstr	s14, [r7, #4]
 802266c:	edc7 7a02 	vstr	s15, [r7, #8]
 8022670:	e7d8      	b.n	8022624 <__kernel_rem_pio2f+0x3a8>
 8022672:	ab30      	add	r3, sp, #192	@ 0xc0
 8022674:	ed1f 7a41 	vldr	s14, [pc, #-260]	@ 8022574 <__kernel_rem_pio2f+0x2f8>
 8022678:	440b      	add	r3, r1
 802267a:	4622      	mov	r2, r4
 802267c:	2a00      	cmp	r2, #0
 802267e:	da24      	bge.n	80226ca <__kernel_rem_pio2f+0x44e>
 8022680:	b34e      	cbz	r6, 80226d6 <__kernel_rem_pio2f+0x45a>
 8022682:	eef1 7a47 	vneg.f32	s15, s14
 8022686:	edc7 7a00 	vstr	s15, [r7]
 802268a:	eddd 7a30 	vldr	s15, [sp, #192]	@ 0xc0
 802268e:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8022692:	aa31      	add	r2, sp, #196	@ 0xc4
 8022694:	2301      	movs	r3, #1
 8022696:	429c      	cmp	r4, r3
 8022698:	da20      	bge.n	80226dc <__kernel_rem_pio2f+0x460>
 802269a:	b10e      	cbz	r6, 80226a0 <__kernel_rem_pio2f+0x424>
 802269c:	eef1 7a67 	vneg.f32	s15, s15
 80226a0:	edc7 7a01 	vstr	s15, [r7, #4]
 80226a4:	e7be      	b.n	8022624 <__kernel_rem_pio2f+0x3a8>
 80226a6:	ab30      	add	r3, sp, #192	@ 0xc0
 80226a8:	ed5f 7a4e 	vldr	s15, [pc, #-312]	@ 8022574 <__kernel_rem_pio2f+0x2f8>
 80226ac:	440b      	add	r3, r1
 80226ae:	2c00      	cmp	r4, #0
 80226b0:	da05      	bge.n	80226be <__kernel_rem_pio2f+0x442>
 80226b2:	b10e      	cbz	r6, 80226b8 <__kernel_rem_pio2f+0x43c>
 80226b4:	eef1 7a67 	vneg.f32	s15, s15
 80226b8:	edc7 7a00 	vstr	s15, [r7]
 80226bc:	e7b2      	b.n	8022624 <__kernel_rem_pio2f+0x3a8>
 80226be:	ed33 7a01 	vldmdb	r3!, {s14}
 80226c2:	3c01      	subs	r4, #1
 80226c4:	ee77 7a87 	vadd.f32	s15, s15, s14
 80226c8:	e7f1      	b.n	80226ae <__kernel_rem_pio2f+0x432>
 80226ca:	ed73 7a01 	vldmdb	r3!, {s15}
 80226ce:	3a01      	subs	r2, #1
 80226d0:	ee37 7a27 	vadd.f32	s14, s14, s15
 80226d4:	e7d2      	b.n	802267c <__kernel_rem_pio2f+0x400>
 80226d6:	eef0 7a47 	vmov.f32	s15, s14
 80226da:	e7d4      	b.n	8022686 <__kernel_rem_pio2f+0x40a>
 80226dc:	ecb2 7a01 	vldmia	r2!, {s14}
 80226e0:	3301      	adds	r3, #1
 80226e2:	ee77 7a87 	vadd.f32	s15, s15, s14
 80226e6:	e7d6      	b.n	8022696 <__kernel_rem_pio2f+0x41a>
 80226e8:	ed72 7a01 	vldmdb	r2!, {s15}
 80226ec:	edd2 6a01 	vldr	s13, [r2, #4]
 80226f0:	ee37 7aa6 	vadd.f32	s14, s15, s13
 80226f4:	3801      	subs	r0, #1
 80226f6:	ee77 7ac7 	vsub.f32	s15, s15, s14
 80226fa:	ed82 7a00 	vstr	s14, [r2]
 80226fe:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8022702:	edc2 7a01 	vstr	s15, [r2, #4]
 8022706:	e79c      	b.n	8022642 <__kernel_rem_pio2f+0x3c6>
 8022708:	ed73 7a01 	vldmdb	r3!, {s15}
 802270c:	edd3 6a01 	vldr	s13, [r3, #4]
 8022710:	ee37 7aa6 	vadd.f32	s14, s15, s13
 8022714:	3a01      	subs	r2, #1
 8022716:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802271a:	ed83 7a00 	vstr	s14, [r3]
 802271e:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8022722:	edc3 7a01 	vstr	s15, [r3, #4]
 8022726:	e78f      	b.n	8022648 <__kernel_rem_pio2f+0x3cc>
 8022728:	ed33 7a01 	vldmdb	r3!, {s14}
 802272c:	3c01      	subs	r4, #1
 802272e:	ee77 7a87 	vadd.f32	s15, s15, s14
 8022732:	e78f      	b.n	8022654 <__kernel_rem_pio2f+0x3d8>
 8022734:	eef1 6a66 	vneg.f32	s13, s13
 8022738:	eeb1 7a47 	vneg.f32	s14, s14
 802273c:	edc7 6a00 	vstr	s13, [r7]
 8022740:	ed87 7a01 	vstr	s14, [r7, #4]
 8022744:	eef1 7a67 	vneg.f32	s15, s15
 8022748:	e790      	b.n	802266c <__kernel_rem_pio2f+0x3f0>
 802274a:	bf00      	nop

0802274c <scalbnf>:
 802274c:	ee10 3a10 	vmov	r3, s0
 8022750:	f033 4200 	bics.w	r2, r3, #2147483648	@ 0x80000000
 8022754:	d02b      	beq.n	80227ae <scalbnf+0x62>
 8022756:	f1b2 4fff 	cmp.w	r2, #2139095040	@ 0x7f800000
 802275a:	d302      	bcc.n	8022762 <scalbnf+0x16>
 802275c:	ee30 0a00 	vadd.f32	s0, s0, s0
 8022760:	4770      	bx	lr
 8022762:	f013 4fff 	tst.w	r3, #2139095040	@ 0x7f800000
 8022766:	d123      	bne.n	80227b0 <scalbnf+0x64>
 8022768:	4b24      	ldr	r3, [pc, #144]	@ (80227fc <scalbnf+0xb0>)
 802276a:	eddf 7a25 	vldr	s15, [pc, #148]	@ 8022800 <scalbnf+0xb4>
 802276e:	4298      	cmp	r0, r3
 8022770:	ee20 0a27 	vmul.f32	s0, s0, s15
 8022774:	db17      	blt.n	80227a6 <scalbnf+0x5a>
 8022776:	ee10 3a10 	vmov	r3, s0
 802277a:	f3c3 52c7 	ubfx	r2, r3, #23, #8
 802277e:	3a19      	subs	r2, #25
 8022780:	f24c 3150 	movw	r1, #50000	@ 0xc350
 8022784:	4288      	cmp	r0, r1
 8022786:	dd15      	ble.n	80227b4 <scalbnf+0x68>
 8022788:	eddf 7a1e 	vldr	s15, [pc, #120]	@ 8022804 <scalbnf+0xb8>
 802278c:	eddf 6a1e 	vldr	s13, [pc, #120]	@ 8022808 <scalbnf+0xbc>
 8022790:	ee10 3a10 	vmov	r3, s0
 8022794:	eeb0 7a67 	vmov.f32	s14, s15
 8022798:	2b00      	cmp	r3, #0
 802279a:	bfb8      	it	lt
 802279c:	eef0 7a66 	vmovlt.f32	s15, s13
 80227a0:	ee27 0a87 	vmul.f32	s0, s15, s14
 80227a4:	4770      	bx	lr
 80227a6:	eddf 7a19 	vldr	s15, [pc, #100]	@ 802280c <scalbnf+0xc0>
 80227aa:	ee27 0a80 	vmul.f32	s0, s15, s0
 80227ae:	4770      	bx	lr
 80227b0:	0dd2      	lsrs	r2, r2, #23
 80227b2:	e7e5      	b.n	8022780 <scalbnf+0x34>
 80227b4:	4410      	add	r0, r2
 80227b6:	28fe      	cmp	r0, #254	@ 0xfe
 80227b8:	dce6      	bgt.n	8022788 <scalbnf+0x3c>
 80227ba:	2800      	cmp	r0, #0
 80227bc:	dd06      	ble.n	80227cc <scalbnf+0x80>
 80227be:	f023 43ff 	bic.w	r3, r3, #2139095040	@ 0x7f800000
 80227c2:	ea43 53c0 	orr.w	r3, r3, r0, lsl #23
 80227c6:	ee00 3a10 	vmov	s0, r3
 80227ca:	4770      	bx	lr
 80227cc:	f110 0f16 	cmn.w	r0, #22
 80227d0:	da09      	bge.n	80227e6 <scalbnf+0x9a>
 80227d2:	eddf 7a0e 	vldr	s15, [pc, #56]	@ 802280c <scalbnf+0xc0>
 80227d6:	eddf 6a0e 	vldr	s13, [pc, #56]	@ 8022810 <scalbnf+0xc4>
 80227da:	ee10 3a10 	vmov	r3, s0
 80227de:	eeb0 7a67 	vmov.f32	s14, s15
 80227e2:	2b00      	cmp	r3, #0
 80227e4:	e7d9      	b.n	802279a <scalbnf+0x4e>
 80227e6:	3019      	adds	r0, #25
 80227e8:	f023 43ff 	bic.w	r3, r3, #2139095040	@ 0x7f800000
 80227ec:	ea43 53c0 	orr.w	r3, r3, r0, lsl #23
 80227f0:	ed9f 0a08 	vldr	s0, [pc, #32]	@ 8022814 <scalbnf+0xc8>
 80227f4:	ee07 3a90 	vmov	s15, r3
 80227f8:	e7d7      	b.n	80227aa <scalbnf+0x5e>
 80227fa:	bf00      	nop
 80227fc:	ffff3cb0 	.word	0xffff3cb0
 8022800:	4c000000 	.word	0x4c000000
 8022804:	7149f2ca 	.word	0x7149f2ca
 8022808:	f149f2ca 	.word	0xf149f2ca
 802280c:	0da24260 	.word	0x0da24260
 8022810:	8da24260 	.word	0x8da24260
 8022814:	33000000 	.word	0x33000000

08022818 <floorf>:
 8022818:	ee10 3a10 	vmov	r3, s0
 802281c:	f3c3 52c7 	ubfx	r2, r3, #23, #8
 8022820:	3a7f      	subs	r2, #127	@ 0x7f
 8022822:	2a16      	cmp	r2, #22
 8022824:	f023 4100 	bic.w	r1, r3, #2147483648	@ 0x80000000
 8022828:	dc2b      	bgt.n	8022882 <floorf+0x6a>
 802282a:	2a00      	cmp	r2, #0
 802282c:	da12      	bge.n	8022854 <floorf+0x3c>
 802282e:	eddf 7a19 	vldr	s15, [pc, #100]	@ 8022894 <floorf+0x7c>
 8022832:	ee30 0a27 	vadd.f32	s0, s0, s15
 8022836:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 802283a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802283e:	dd06      	ble.n	802284e <floorf+0x36>
 8022840:	2b00      	cmp	r3, #0
 8022842:	da24      	bge.n	802288e <floorf+0x76>
 8022844:	2900      	cmp	r1, #0
 8022846:	4b14      	ldr	r3, [pc, #80]	@ (8022898 <floorf+0x80>)
 8022848:	bf08      	it	eq
 802284a:	f04f 4300 	moveq.w	r3, #2147483648	@ 0x80000000
 802284e:	ee00 3a10 	vmov	s0, r3
 8022852:	4770      	bx	lr
 8022854:	4911      	ldr	r1, [pc, #68]	@ (802289c <floorf+0x84>)
 8022856:	4111      	asrs	r1, r2
 8022858:	420b      	tst	r3, r1
 802285a:	d0fa      	beq.n	8022852 <floorf+0x3a>
 802285c:	eddf 7a0d 	vldr	s15, [pc, #52]	@ 8022894 <floorf+0x7c>
 8022860:	ee30 0a27 	vadd.f32	s0, s0, s15
 8022864:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 8022868:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802286c:	ddef      	ble.n	802284e <floorf+0x36>
 802286e:	2b00      	cmp	r3, #0
 8022870:	bfbe      	ittt	lt
 8022872:	f44f 0000 	movlt.w	r0, #8388608	@ 0x800000
 8022876:	fa40 f202 	asrlt.w	r2, r0, r2
 802287a:	189b      	addlt	r3, r3, r2
 802287c:	ea23 0301 	bic.w	r3, r3, r1
 8022880:	e7e5      	b.n	802284e <floorf+0x36>
 8022882:	f1b1 4fff 	cmp.w	r1, #2139095040	@ 0x7f800000
 8022886:	d3e4      	bcc.n	8022852 <floorf+0x3a>
 8022888:	ee30 0a00 	vadd.f32	s0, s0, s0
 802288c:	4770      	bx	lr
 802288e:	2300      	movs	r3, #0
 8022890:	e7dd      	b.n	802284e <floorf+0x36>
 8022892:	bf00      	nop
 8022894:	7149f2ca 	.word	0x7149f2ca
 8022898:	bf800000 	.word	0xbf800000
 802289c:	007fffff 	.word	0x007fffff

080228a0 <abort>:
 80228a0:	b508      	push	{r3, lr}
 80228a2:	2006      	movs	r0, #6
 80228a4:	f000 fa3c 	bl	8022d20 <raise>
 80228a8:	2001      	movs	r0, #1
 80228aa:	f7e0 f86d 	bl	8002988 <_exit>
	...

080228b0 <__assert_func>:
 80228b0:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 80228b2:	4614      	mov	r4, r2
 80228b4:	461a      	mov	r2, r3
 80228b6:	4b09      	ldr	r3, [pc, #36]	@ (80228dc <__assert_func+0x2c>)
 80228b8:	681b      	ldr	r3, [r3, #0]
 80228ba:	4605      	mov	r5, r0
 80228bc:	68d8      	ldr	r0, [r3, #12]
 80228be:	b14c      	cbz	r4, 80228d4 <__assert_func+0x24>
 80228c0:	4b07      	ldr	r3, [pc, #28]	@ (80228e0 <__assert_func+0x30>)
 80228c2:	9100      	str	r1, [sp, #0]
 80228c4:	e9cd 3401 	strd	r3, r4, [sp, #4]
 80228c8:	4906      	ldr	r1, [pc, #24]	@ (80228e4 <__assert_func+0x34>)
 80228ca:	462b      	mov	r3, r5
 80228cc:	f000 f984 	bl	8022bd8 <fiprintf>
 80228d0:	f7ff ffe6 	bl	80228a0 <abort>
 80228d4:	4b04      	ldr	r3, [pc, #16]	@ (80228e8 <__assert_func+0x38>)
 80228d6:	461c      	mov	r4, r3
 80228d8:	e7f3      	b.n	80228c2 <__assert_func+0x12>
 80228da:	bf00      	nop
 80228dc:	20000220 	.word	0x20000220
 80228e0:	080243a9 	.word	0x080243a9
 80228e4:	080243b6 	.word	0x080243b6
 80228e8:	080243e4 	.word	0x080243e4

080228ec <atexit>:
 80228ec:	2300      	movs	r3, #0
 80228ee:	4601      	mov	r1, r0
 80228f0:	461a      	mov	r2, r3
 80228f2:	4618      	mov	r0, r3
 80228f4:	f000 bac2 	b.w	8022e7c <__register_exitproc>

080228f8 <malloc>:
 80228f8:	4b02      	ldr	r3, [pc, #8]	@ (8022904 <malloc+0xc>)
 80228fa:	4601      	mov	r1, r0
 80228fc:	6818      	ldr	r0, [r3, #0]
 80228fe:	f000 b82d 	b.w	802295c <_malloc_r>
 8022902:	bf00      	nop
 8022904:	20000220 	.word	0x20000220

08022908 <free>:
 8022908:	4b02      	ldr	r3, [pc, #8]	@ (8022914 <free+0xc>)
 802290a:	4601      	mov	r1, r0
 802290c:	6818      	ldr	r0, [r3, #0]
 802290e:	f000 bb11 	b.w	8022f34 <_free_r>
 8022912:	bf00      	nop
 8022914:	20000220 	.word	0x20000220

08022918 <sbrk_aligned>:
 8022918:	b570      	push	{r4, r5, r6, lr}
 802291a:	4e0f      	ldr	r6, [pc, #60]	@ (8022958 <sbrk_aligned+0x40>)
 802291c:	460c      	mov	r4, r1
 802291e:	6831      	ldr	r1, [r6, #0]
 8022920:	4605      	mov	r5, r0
 8022922:	b911      	cbnz	r1, 802292a <sbrk_aligned+0x12>
 8022924:	f000 fa4c 	bl	8022dc0 <_sbrk_r>
 8022928:	6030      	str	r0, [r6, #0]
 802292a:	4621      	mov	r1, r4
 802292c:	4628      	mov	r0, r5
 802292e:	f000 fa47 	bl	8022dc0 <_sbrk_r>
 8022932:	1c43      	adds	r3, r0, #1
 8022934:	d103      	bne.n	802293e <sbrk_aligned+0x26>
 8022936:	f04f 34ff 	mov.w	r4, #4294967295
 802293a:	4620      	mov	r0, r4
 802293c:	bd70      	pop	{r4, r5, r6, pc}
 802293e:	1cc4      	adds	r4, r0, #3
 8022940:	f024 0403 	bic.w	r4, r4, #3
 8022944:	42a0      	cmp	r0, r4
 8022946:	d0f8      	beq.n	802293a <sbrk_aligned+0x22>
 8022948:	1a21      	subs	r1, r4, r0
 802294a:	4628      	mov	r0, r5
 802294c:	f000 fa38 	bl	8022dc0 <_sbrk_r>
 8022950:	3001      	adds	r0, #1
 8022952:	d1f2      	bne.n	802293a <sbrk_aligned+0x22>
 8022954:	e7ef      	b.n	8022936 <sbrk_aligned+0x1e>
 8022956:	bf00      	nop
 8022958:	20014988 	.word	0x20014988

0802295c <_malloc_r>:
 802295c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8022960:	1ccd      	adds	r5, r1, #3
 8022962:	f025 0503 	bic.w	r5, r5, #3
 8022966:	3508      	adds	r5, #8
 8022968:	2d0c      	cmp	r5, #12
 802296a:	bf38      	it	cc
 802296c:	250c      	movcc	r5, #12
 802296e:	2d00      	cmp	r5, #0
 8022970:	4606      	mov	r6, r0
 8022972:	db01      	blt.n	8022978 <_malloc_r+0x1c>
 8022974:	42a9      	cmp	r1, r5
 8022976:	d904      	bls.n	8022982 <_malloc_r+0x26>
 8022978:	230c      	movs	r3, #12
 802297a:	6033      	str	r3, [r6, #0]
 802297c:	2000      	movs	r0, #0
 802297e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8022982:	f8df 80d4 	ldr.w	r8, [pc, #212]	@ 8022a58 <_malloc_r+0xfc>
 8022986:	f000 f869 	bl	8022a5c <__malloc_lock>
 802298a:	f8d8 3000 	ldr.w	r3, [r8]
 802298e:	461c      	mov	r4, r3
 8022990:	bb44      	cbnz	r4, 80229e4 <_malloc_r+0x88>
 8022992:	4629      	mov	r1, r5
 8022994:	4630      	mov	r0, r6
 8022996:	f7ff ffbf 	bl	8022918 <sbrk_aligned>
 802299a:	1c43      	adds	r3, r0, #1
 802299c:	4604      	mov	r4, r0
 802299e:	d158      	bne.n	8022a52 <_malloc_r+0xf6>
 80229a0:	f8d8 4000 	ldr.w	r4, [r8]
 80229a4:	4627      	mov	r7, r4
 80229a6:	2f00      	cmp	r7, #0
 80229a8:	d143      	bne.n	8022a32 <_malloc_r+0xd6>
 80229aa:	2c00      	cmp	r4, #0
 80229ac:	d04b      	beq.n	8022a46 <_malloc_r+0xea>
 80229ae:	6823      	ldr	r3, [r4, #0]
 80229b0:	4639      	mov	r1, r7
 80229b2:	4630      	mov	r0, r6
 80229b4:	eb04 0903 	add.w	r9, r4, r3
 80229b8:	f000 fa02 	bl	8022dc0 <_sbrk_r>
 80229bc:	4581      	cmp	r9, r0
 80229be:	d142      	bne.n	8022a46 <_malloc_r+0xea>
 80229c0:	6821      	ldr	r1, [r4, #0]
 80229c2:	1a6d      	subs	r5, r5, r1
 80229c4:	4629      	mov	r1, r5
 80229c6:	4630      	mov	r0, r6
 80229c8:	f7ff ffa6 	bl	8022918 <sbrk_aligned>
 80229cc:	3001      	adds	r0, #1
 80229ce:	d03a      	beq.n	8022a46 <_malloc_r+0xea>
 80229d0:	6823      	ldr	r3, [r4, #0]
 80229d2:	442b      	add	r3, r5
 80229d4:	6023      	str	r3, [r4, #0]
 80229d6:	f8d8 3000 	ldr.w	r3, [r8]
 80229da:	685a      	ldr	r2, [r3, #4]
 80229dc:	bb62      	cbnz	r2, 8022a38 <_malloc_r+0xdc>
 80229de:	f8c8 7000 	str.w	r7, [r8]
 80229e2:	e00f      	b.n	8022a04 <_malloc_r+0xa8>
 80229e4:	6822      	ldr	r2, [r4, #0]
 80229e6:	1b52      	subs	r2, r2, r5
 80229e8:	d420      	bmi.n	8022a2c <_malloc_r+0xd0>
 80229ea:	2a0b      	cmp	r2, #11
 80229ec:	d917      	bls.n	8022a1e <_malloc_r+0xc2>
 80229ee:	1961      	adds	r1, r4, r5
 80229f0:	42a3      	cmp	r3, r4
 80229f2:	6025      	str	r5, [r4, #0]
 80229f4:	bf18      	it	ne
 80229f6:	6059      	strne	r1, [r3, #4]
 80229f8:	6863      	ldr	r3, [r4, #4]
 80229fa:	bf08      	it	eq
 80229fc:	f8c8 1000 	streq.w	r1, [r8]
 8022a00:	5162      	str	r2, [r4, r5]
 8022a02:	604b      	str	r3, [r1, #4]
 8022a04:	4630      	mov	r0, r6
 8022a06:	f000 f82f 	bl	8022a68 <__malloc_unlock>
 8022a0a:	f104 000b 	add.w	r0, r4, #11
 8022a0e:	1d23      	adds	r3, r4, #4
 8022a10:	f020 0007 	bic.w	r0, r0, #7
 8022a14:	1ac2      	subs	r2, r0, r3
 8022a16:	bf1c      	itt	ne
 8022a18:	1a1b      	subne	r3, r3, r0
 8022a1a:	50a3      	strne	r3, [r4, r2]
 8022a1c:	e7af      	b.n	802297e <_malloc_r+0x22>
 8022a1e:	6862      	ldr	r2, [r4, #4]
 8022a20:	42a3      	cmp	r3, r4
 8022a22:	bf0c      	ite	eq
 8022a24:	f8c8 2000 	streq.w	r2, [r8]
 8022a28:	605a      	strne	r2, [r3, #4]
 8022a2a:	e7eb      	b.n	8022a04 <_malloc_r+0xa8>
 8022a2c:	4623      	mov	r3, r4
 8022a2e:	6864      	ldr	r4, [r4, #4]
 8022a30:	e7ae      	b.n	8022990 <_malloc_r+0x34>
 8022a32:	463c      	mov	r4, r7
 8022a34:	687f      	ldr	r7, [r7, #4]
 8022a36:	e7b6      	b.n	80229a6 <_malloc_r+0x4a>
 8022a38:	461a      	mov	r2, r3
 8022a3a:	685b      	ldr	r3, [r3, #4]
 8022a3c:	42a3      	cmp	r3, r4
 8022a3e:	d1fb      	bne.n	8022a38 <_malloc_r+0xdc>
 8022a40:	2300      	movs	r3, #0
 8022a42:	6053      	str	r3, [r2, #4]
 8022a44:	e7de      	b.n	8022a04 <_malloc_r+0xa8>
 8022a46:	230c      	movs	r3, #12
 8022a48:	6033      	str	r3, [r6, #0]
 8022a4a:	4630      	mov	r0, r6
 8022a4c:	f000 f80c 	bl	8022a68 <__malloc_unlock>
 8022a50:	e794      	b.n	802297c <_malloc_r+0x20>
 8022a52:	6005      	str	r5, [r0, #0]
 8022a54:	e7d6      	b.n	8022a04 <_malloc_r+0xa8>
 8022a56:	bf00      	nop
 8022a58:	2001498c 	.word	0x2001498c

08022a5c <__malloc_lock>:
 8022a5c:	4801      	ldr	r0, [pc, #4]	@ (8022a64 <__malloc_lock+0x8>)
 8022a5e:	f000 b9fc 	b.w	8022e5a <__retarget_lock_acquire_recursive>
 8022a62:	bf00      	nop
 8022a64:	20014ad0 	.word	0x20014ad0

08022a68 <__malloc_unlock>:
 8022a68:	4801      	ldr	r0, [pc, #4]	@ (8022a70 <__malloc_unlock+0x8>)
 8022a6a:	f000 b9f7 	b.w	8022e5c <__retarget_lock_release_recursive>
 8022a6e:	bf00      	nop
 8022a70:	20014ad0 	.word	0x20014ad0

08022a74 <__cxa_atexit>:
 8022a74:	b510      	push	{r4, lr}
 8022a76:	4604      	mov	r4, r0
 8022a78:	4804      	ldr	r0, [pc, #16]	@ (8022a8c <__cxa_atexit+0x18>)
 8022a7a:	4613      	mov	r3, r2
 8022a7c:	b120      	cbz	r0, 8022a88 <__cxa_atexit+0x14>
 8022a7e:	460a      	mov	r2, r1
 8022a80:	2002      	movs	r0, #2
 8022a82:	4621      	mov	r1, r4
 8022a84:	f000 f9fa 	bl	8022e7c <__register_exitproc>
 8022a88:	bd10      	pop	{r4, pc}
 8022a8a:	bf00      	nop
 8022a8c:	08022e7d 	.word	0x08022e7d

08022a90 <std>:
 8022a90:	2300      	movs	r3, #0
 8022a92:	b510      	push	{r4, lr}
 8022a94:	4604      	mov	r4, r0
 8022a96:	e9c0 3300 	strd	r3, r3, [r0]
 8022a9a:	e9c0 3304 	strd	r3, r3, [r0, #16]
 8022a9e:	6083      	str	r3, [r0, #8]
 8022aa0:	8181      	strh	r1, [r0, #12]
 8022aa2:	6643      	str	r3, [r0, #100]	@ 0x64
 8022aa4:	81c2      	strh	r2, [r0, #14]
 8022aa6:	6183      	str	r3, [r0, #24]
 8022aa8:	4619      	mov	r1, r3
 8022aaa:	2208      	movs	r2, #8
 8022aac:	305c      	adds	r0, #92	@ 0x5c
 8022aae:	f000 f906 	bl	8022cbe <memset>
 8022ab2:	4b0d      	ldr	r3, [pc, #52]	@ (8022ae8 <std+0x58>)
 8022ab4:	6263      	str	r3, [r4, #36]	@ 0x24
 8022ab6:	4b0d      	ldr	r3, [pc, #52]	@ (8022aec <std+0x5c>)
 8022ab8:	62a3      	str	r3, [r4, #40]	@ 0x28
 8022aba:	4b0d      	ldr	r3, [pc, #52]	@ (8022af0 <std+0x60>)
 8022abc:	62e3      	str	r3, [r4, #44]	@ 0x2c
 8022abe:	4b0d      	ldr	r3, [pc, #52]	@ (8022af4 <std+0x64>)
 8022ac0:	6323      	str	r3, [r4, #48]	@ 0x30
 8022ac2:	4b0d      	ldr	r3, [pc, #52]	@ (8022af8 <std+0x68>)
 8022ac4:	6224      	str	r4, [r4, #32]
 8022ac6:	429c      	cmp	r4, r3
 8022ac8:	d006      	beq.n	8022ad8 <std+0x48>
 8022aca:	f103 0268 	add.w	r2, r3, #104	@ 0x68
 8022ace:	4294      	cmp	r4, r2
 8022ad0:	d002      	beq.n	8022ad8 <std+0x48>
 8022ad2:	33d0      	adds	r3, #208	@ 0xd0
 8022ad4:	429c      	cmp	r4, r3
 8022ad6:	d105      	bne.n	8022ae4 <std+0x54>
 8022ad8:	f104 0058 	add.w	r0, r4, #88	@ 0x58
 8022adc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8022ae0:	f000 b9ba 	b.w	8022e58 <__retarget_lock_init_recursive>
 8022ae4:	bd10      	pop	{r4, pc}
 8022ae6:	bf00      	nop
 8022ae8:	08022c39 	.word	0x08022c39
 8022aec:	08022c5b 	.word	0x08022c5b
 8022af0:	08022c93 	.word	0x08022c93
 8022af4:	08022cb7 	.word	0x08022cb7
 8022af8:	20014990 	.word	0x20014990

08022afc <stdio_exit_handler>:
 8022afc:	4a02      	ldr	r2, [pc, #8]	@ (8022b08 <stdio_exit_handler+0xc>)
 8022afe:	4903      	ldr	r1, [pc, #12]	@ (8022b0c <stdio_exit_handler+0x10>)
 8022b00:	4803      	ldr	r0, [pc, #12]	@ (8022b10 <stdio_exit_handler+0x14>)
 8022b02:	f000 b87b 	b.w	8022bfc <_fwalk_sglue>
 8022b06:	bf00      	nop
 8022b08:	20000214 	.word	0x20000214
 8022b0c:	0802366d 	.word	0x0802366d
 8022b10:	20000224 	.word	0x20000224

08022b14 <cleanup_stdio>:
 8022b14:	6841      	ldr	r1, [r0, #4]
 8022b16:	4b0c      	ldr	r3, [pc, #48]	@ (8022b48 <cleanup_stdio+0x34>)
 8022b18:	4299      	cmp	r1, r3
 8022b1a:	b510      	push	{r4, lr}
 8022b1c:	4604      	mov	r4, r0
 8022b1e:	d001      	beq.n	8022b24 <cleanup_stdio+0x10>
 8022b20:	f000 fda4 	bl	802366c <_fflush_r>
 8022b24:	68a1      	ldr	r1, [r4, #8]
 8022b26:	4b09      	ldr	r3, [pc, #36]	@ (8022b4c <cleanup_stdio+0x38>)
 8022b28:	4299      	cmp	r1, r3
 8022b2a:	d002      	beq.n	8022b32 <cleanup_stdio+0x1e>
 8022b2c:	4620      	mov	r0, r4
 8022b2e:	f000 fd9d 	bl	802366c <_fflush_r>
 8022b32:	68e1      	ldr	r1, [r4, #12]
 8022b34:	4b06      	ldr	r3, [pc, #24]	@ (8022b50 <cleanup_stdio+0x3c>)
 8022b36:	4299      	cmp	r1, r3
 8022b38:	d004      	beq.n	8022b44 <cleanup_stdio+0x30>
 8022b3a:	4620      	mov	r0, r4
 8022b3c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8022b40:	f000 bd94 	b.w	802366c <_fflush_r>
 8022b44:	bd10      	pop	{r4, pc}
 8022b46:	bf00      	nop
 8022b48:	20014990 	.word	0x20014990
 8022b4c:	200149f8 	.word	0x200149f8
 8022b50:	20014a60 	.word	0x20014a60

08022b54 <global_stdio_init.part.0>:
 8022b54:	b510      	push	{r4, lr}
 8022b56:	4b0b      	ldr	r3, [pc, #44]	@ (8022b84 <global_stdio_init.part.0+0x30>)
 8022b58:	4c0b      	ldr	r4, [pc, #44]	@ (8022b88 <global_stdio_init.part.0+0x34>)
 8022b5a:	4a0c      	ldr	r2, [pc, #48]	@ (8022b8c <global_stdio_init.part.0+0x38>)
 8022b5c:	601a      	str	r2, [r3, #0]
 8022b5e:	4620      	mov	r0, r4
 8022b60:	2200      	movs	r2, #0
 8022b62:	2104      	movs	r1, #4
 8022b64:	f7ff ff94 	bl	8022a90 <std>
 8022b68:	f104 0068 	add.w	r0, r4, #104	@ 0x68
 8022b6c:	2201      	movs	r2, #1
 8022b6e:	2109      	movs	r1, #9
 8022b70:	f7ff ff8e 	bl	8022a90 <std>
 8022b74:	f104 00d0 	add.w	r0, r4, #208	@ 0xd0
 8022b78:	2202      	movs	r2, #2
 8022b7a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8022b7e:	2112      	movs	r1, #18
 8022b80:	f7ff bf86 	b.w	8022a90 <std>
 8022b84:	20014ac8 	.word	0x20014ac8
 8022b88:	20014990 	.word	0x20014990
 8022b8c:	08022afd 	.word	0x08022afd

08022b90 <__sfp_lock_acquire>:
 8022b90:	4801      	ldr	r0, [pc, #4]	@ (8022b98 <__sfp_lock_acquire+0x8>)
 8022b92:	f000 b962 	b.w	8022e5a <__retarget_lock_acquire_recursive>
 8022b96:	bf00      	nop
 8022b98:	20014ad2 	.word	0x20014ad2

08022b9c <__sfp_lock_release>:
 8022b9c:	4801      	ldr	r0, [pc, #4]	@ (8022ba4 <__sfp_lock_release+0x8>)
 8022b9e:	f000 b95d 	b.w	8022e5c <__retarget_lock_release_recursive>
 8022ba2:	bf00      	nop
 8022ba4:	20014ad2 	.word	0x20014ad2

08022ba8 <__sinit>:
 8022ba8:	b510      	push	{r4, lr}
 8022baa:	4604      	mov	r4, r0
 8022bac:	f7ff fff0 	bl	8022b90 <__sfp_lock_acquire>
 8022bb0:	6a23      	ldr	r3, [r4, #32]
 8022bb2:	b11b      	cbz	r3, 8022bbc <__sinit+0x14>
 8022bb4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8022bb8:	f7ff bff0 	b.w	8022b9c <__sfp_lock_release>
 8022bbc:	4b04      	ldr	r3, [pc, #16]	@ (8022bd0 <__sinit+0x28>)
 8022bbe:	6223      	str	r3, [r4, #32]
 8022bc0:	4b04      	ldr	r3, [pc, #16]	@ (8022bd4 <__sinit+0x2c>)
 8022bc2:	681b      	ldr	r3, [r3, #0]
 8022bc4:	2b00      	cmp	r3, #0
 8022bc6:	d1f5      	bne.n	8022bb4 <__sinit+0xc>
 8022bc8:	f7ff ffc4 	bl	8022b54 <global_stdio_init.part.0>
 8022bcc:	e7f2      	b.n	8022bb4 <__sinit+0xc>
 8022bce:	bf00      	nop
 8022bd0:	08022b15 	.word	0x08022b15
 8022bd4:	20014ac8 	.word	0x20014ac8

08022bd8 <fiprintf>:
 8022bd8:	b40e      	push	{r1, r2, r3}
 8022bda:	b503      	push	{r0, r1, lr}
 8022bdc:	4601      	mov	r1, r0
 8022bde:	ab03      	add	r3, sp, #12
 8022be0:	4805      	ldr	r0, [pc, #20]	@ (8022bf8 <fiprintf+0x20>)
 8022be2:	f853 2b04 	ldr.w	r2, [r3], #4
 8022be6:	6800      	ldr	r0, [r0, #0]
 8022be8:	9301      	str	r3, [sp, #4]
 8022bea:	f000 fa17 	bl	802301c <_vfiprintf_r>
 8022bee:	b002      	add	sp, #8
 8022bf0:	f85d eb04 	ldr.w	lr, [sp], #4
 8022bf4:	b003      	add	sp, #12
 8022bf6:	4770      	bx	lr
 8022bf8:	20000220 	.word	0x20000220

08022bfc <_fwalk_sglue>:
 8022bfc:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8022c00:	4607      	mov	r7, r0
 8022c02:	4688      	mov	r8, r1
 8022c04:	4614      	mov	r4, r2
 8022c06:	2600      	movs	r6, #0
 8022c08:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 8022c0c:	f1b9 0901 	subs.w	r9, r9, #1
 8022c10:	d505      	bpl.n	8022c1e <_fwalk_sglue+0x22>
 8022c12:	6824      	ldr	r4, [r4, #0]
 8022c14:	2c00      	cmp	r4, #0
 8022c16:	d1f7      	bne.n	8022c08 <_fwalk_sglue+0xc>
 8022c18:	4630      	mov	r0, r6
 8022c1a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8022c1e:	89ab      	ldrh	r3, [r5, #12]
 8022c20:	2b01      	cmp	r3, #1
 8022c22:	d907      	bls.n	8022c34 <_fwalk_sglue+0x38>
 8022c24:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 8022c28:	3301      	adds	r3, #1
 8022c2a:	d003      	beq.n	8022c34 <_fwalk_sglue+0x38>
 8022c2c:	4629      	mov	r1, r5
 8022c2e:	4638      	mov	r0, r7
 8022c30:	47c0      	blx	r8
 8022c32:	4306      	orrs	r6, r0
 8022c34:	3568      	adds	r5, #104	@ 0x68
 8022c36:	e7e9      	b.n	8022c0c <_fwalk_sglue+0x10>

08022c38 <__sread>:
 8022c38:	b510      	push	{r4, lr}
 8022c3a:	460c      	mov	r4, r1
 8022c3c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8022c40:	f000 f898 	bl	8022d74 <_read_r>
 8022c44:	2800      	cmp	r0, #0
 8022c46:	bfab      	itete	ge
 8022c48:	6d63      	ldrge	r3, [r4, #84]	@ 0x54
 8022c4a:	89a3      	ldrhlt	r3, [r4, #12]
 8022c4c:	181b      	addge	r3, r3, r0
 8022c4e:	f423 5380 	biclt.w	r3, r3, #4096	@ 0x1000
 8022c52:	bfac      	ite	ge
 8022c54:	6563      	strge	r3, [r4, #84]	@ 0x54
 8022c56:	81a3      	strhlt	r3, [r4, #12]
 8022c58:	bd10      	pop	{r4, pc}

08022c5a <__swrite>:
 8022c5a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8022c5e:	461f      	mov	r7, r3
 8022c60:	898b      	ldrh	r3, [r1, #12]
 8022c62:	05db      	lsls	r3, r3, #23
 8022c64:	4605      	mov	r5, r0
 8022c66:	460c      	mov	r4, r1
 8022c68:	4616      	mov	r6, r2
 8022c6a:	d505      	bpl.n	8022c78 <__swrite+0x1e>
 8022c6c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8022c70:	2302      	movs	r3, #2
 8022c72:	2200      	movs	r2, #0
 8022c74:	f000 f86c 	bl	8022d50 <_lseek_r>
 8022c78:	89a3      	ldrh	r3, [r4, #12]
 8022c7a:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8022c7e:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
 8022c82:	81a3      	strh	r3, [r4, #12]
 8022c84:	4632      	mov	r2, r6
 8022c86:	463b      	mov	r3, r7
 8022c88:	4628      	mov	r0, r5
 8022c8a:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8022c8e:	f000 b8a7 	b.w	8022de0 <_write_r>

08022c92 <__sseek>:
 8022c92:	b510      	push	{r4, lr}
 8022c94:	460c      	mov	r4, r1
 8022c96:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8022c9a:	f000 f859 	bl	8022d50 <_lseek_r>
 8022c9e:	1c43      	adds	r3, r0, #1
 8022ca0:	89a3      	ldrh	r3, [r4, #12]
 8022ca2:	bf15      	itete	ne
 8022ca4:	6560      	strne	r0, [r4, #84]	@ 0x54
 8022ca6:	f423 5380 	biceq.w	r3, r3, #4096	@ 0x1000
 8022caa:	f443 5380 	orrne.w	r3, r3, #4096	@ 0x1000
 8022cae:	81a3      	strheq	r3, [r4, #12]
 8022cb0:	bf18      	it	ne
 8022cb2:	81a3      	strhne	r3, [r4, #12]
 8022cb4:	bd10      	pop	{r4, pc}

08022cb6 <__sclose>:
 8022cb6:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8022cba:	f000 b839 	b.w	8022d30 <_close_r>

08022cbe <memset>:
 8022cbe:	4402      	add	r2, r0
 8022cc0:	4603      	mov	r3, r0
 8022cc2:	4293      	cmp	r3, r2
 8022cc4:	d100      	bne.n	8022cc8 <memset+0xa>
 8022cc6:	4770      	bx	lr
 8022cc8:	f803 1b01 	strb.w	r1, [r3], #1
 8022ccc:	e7f9      	b.n	8022cc2 <memset+0x4>

08022cce <_raise_r>:
 8022cce:	291f      	cmp	r1, #31
 8022cd0:	b538      	push	{r3, r4, r5, lr}
 8022cd2:	4605      	mov	r5, r0
 8022cd4:	460c      	mov	r4, r1
 8022cd6:	d904      	bls.n	8022ce2 <_raise_r+0x14>
 8022cd8:	2316      	movs	r3, #22
 8022cda:	6003      	str	r3, [r0, #0]
 8022cdc:	f04f 30ff 	mov.w	r0, #4294967295
 8022ce0:	bd38      	pop	{r3, r4, r5, pc}
 8022ce2:	6bc2      	ldr	r2, [r0, #60]	@ 0x3c
 8022ce4:	b112      	cbz	r2, 8022cec <_raise_r+0x1e>
 8022ce6:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 8022cea:	b94b      	cbnz	r3, 8022d00 <_raise_r+0x32>
 8022cec:	4628      	mov	r0, r5
 8022cee:	f000 f865 	bl	8022dbc <_getpid_r>
 8022cf2:	4622      	mov	r2, r4
 8022cf4:	4601      	mov	r1, r0
 8022cf6:	4628      	mov	r0, r5
 8022cf8:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8022cfc:	f000 b84c 	b.w	8022d98 <_kill_r>
 8022d00:	2b01      	cmp	r3, #1
 8022d02:	d00a      	beq.n	8022d1a <_raise_r+0x4c>
 8022d04:	1c59      	adds	r1, r3, #1
 8022d06:	d103      	bne.n	8022d10 <_raise_r+0x42>
 8022d08:	2316      	movs	r3, #22
 8022d0a:	6003      	str	r3, [r0, #0]
 8022d0c:	2001      	movs	r0, #1
 8022d0e:	e7e7      	b.n	8022ce0 <_raise_r+0x12>
 8022d10:	2100      	movs	r1, #0
 8022d12:	f842 1024 	str.w	r1, [r2, r4, lsl #2]
 8022d16:	4620      	mov	r0, r4
 8022d18:	4798      	blx	r3
 8022d1a:	2000      	movs	r0, #0
 8022d1c:	e7e0      	b.n	8022ce0 <_raise_r+0x12>
	...

08022d20 <raise>:
 8022d20:	4b02      	ldr	r3, [pc, #8]	@ (8022d2c <raise+0xc>)
 8022d22:	4601      	mov	r1, r0
 8022d24:	6818      	ldr	r0, [r3, #0]
 8022d26:	f7ff bfd2 	b.w	8022cce <_raise_r>
 8022d2a:	bf00      	nop
 8022d2c:	20000220 	.word	0x20000220

08022d30 <_close_r>:
 8022d30:	b538      	push	{r3, r4, r5, lr}
 8022d32:	4d06      	ldr	r5, [pc, #24]	@ (8022d4c <_close_r+0x1c>)
 8022d34:	2300      	movs	r3, #0
 8022d36:	4604      	mov	r4, r0
 8022d38:	4608      	mov	r0, r1
 8022d3a:	602b      	str	r3, [r5, #0]
 8022d3c:	f7df fe46 	bl	80029cc <_close>
 8022d40:	1c43      	adds	r3, r0, #1
 8022d42:	d102      	bne.n	8022d4a <_close_r+0x1a>
 8022d44:	682b      	ldr	r3, [r5, #0]
 8022d46:	b103      	cbz	r3, 8022d4a <_close_r+0x1a>
 8022d48:	6023      	str	r3, [r4, #0]
 8022d4a:	bd38      	pop	{r3, r4, r5, pc}
 8022d4c:	20014acc 	.word	0x20014acc

08022d50 <_lseek_r>:
 8022d50:	b538      	push	{r3, r4, r5, lr}
 8022d52:	4d07      	ldr	r5, [pc, #28]	@ (8022d70 <_lseek_r+0x20>)
 8022d54:	4604      	mov	r4, r0
 8022d56:	4608      	mov	r0, r1
 8022d58:	4611      	mov	r1, r2
 8022d5a:	2200      	movs	r2, #0
 8022d5c:	602a      	str	r2, [r5, #0]
 8022d5e:	461a      	mov	r2, r3
 8022d60:	f7df fe3e 	bl	80029e0 <_lseek>
 8022d64:	1c43      	adds	r3, r0, #1
 8022d66:	d102      	bne.n	8022d6e <_lseek_r+0x1e>
 8022d68:	682b      	ldr	r3, [r5, #0]
 8022d6a:	b103      	cbz	r3, 8022d6e <_lseek_r+0x1e>
 8022d6c:	6023      	str	r3, [r4, #0]
 8022d6e:	bd38      	pop	{r3, r4, r5, pc}
 8022d70:	20014acc 	.word	0x20014acc

08022d74 <_read_r>:
 8022d74:	b538      	push	{r3, r4, r5, lr}
 8022d76:	4d07      	ldr	r5, [pc, #28]	@ (8022d94 <_read_r+0x20>)
 8022d78:	4604      	mov	r4, r0
 8022d7a:	4608      	mov	r0, r1
 8022d7c:	4611      	mov	r1, r2
 8022d7e:	2200      	movs	r2, #0
 8022d80:	602a      	str	r2, [r5, #0]
 8022d82:	461a      	mov	r2, r3
 8022d84:	f7df fe06 	bl	8002994 <_read>
 8022d88:	1c43      	adds	r3, r0, #1
 8022d8a:	d102      	bne.n	8022d92 <_read_r+0x1e>
 8022d8c:	682b      	ldr	r3, [r5, #0]
 8022d8e:	b103      	cbz	r3, 8022d92 <_read_r+0x1e>
 8022d90:	6023      	str	r3, [r4, #0]
 8022d92:	bd38      	pop	{r3, r4, r5, pc}
 8022d94:	20014acc 	.word	0x20014acc

08022d98 <_kill_r>:
 8022d98:	b538      	push	{r3, r4, r5, lr}
 8022d9a:	4d07      	ldr	r5, [pc, #28]	@ (8022db8 <_kill_r+0x20>)
 8022d9c:	2300      	movs	r3, #0
 8022d9e:	4604      	mov	r4, r0
 8022da0:	4608      	mov	r0, r1
 8022da2:	4611      	mov	r1, r2
 8022da4:	602b      	str	r3, [r5, #0]
 8022da6:	f7df fde7 	bl	8002978 <_kill>
 8022daa:	1c43      	adds	r3, r0, #1
 8022dac:	d102      	bne.n	8022db4 <_kill_r+0x1c>
 8022dae:	682b      	ldr	r3, [r5, #0]
 8022db0:	b103      	cbz	r3, 8022db4 <_kill_r+0x1c>
 8022db2:	6023      	str	r3, [r4, #0]
 8022db4:	bd38      	pop	{r3, r4, r5, pc}
 8022db6:	bf00      	nop
 8022db8:	20014acc 	.word	0x20014acc

08022dbc <_getpid_r>:
 8022dbc:	f7df bdda 	b.w	8002974 <_getpid>

08022dc0 <_sbrk_r>:
 8022dc0:	b538      	push	{r3, r4, r5, lr}
 8022dc2:	4d06      	ldr	r5, [pc, #24]	@ (8022ddc <_sbrk_r+0x1c>)
 8022dc4:	2300      	movs	r3, #0
 8022dc6:	4604      	mov	r4, r0
 8022dc8:	4608      	mov	r0, r1
 8022dca:	602b      	str	r3, [r5, #0]
 8022dcc:	f7df fe0a 	bl	80029e4 <_sbrk>
 8022dd0:	1c43      	adds	r3, r0, #1
 8022dd2:	d102      	bne.n	8022dda <_sbrk_r+0x1a>
 8022dd4:	682b      	ldr	r3, [r5, #0]
 8022dd6:	b103      	cbz	r3, 8022dda <_sbrk_r+0x1a>
 8022dd8:	6023      	str	r3, [r4, #0]
 8022dda:	bd38      	pop	{r3, r4, r5, pc}
 8022ddc:	20014acc 	.word	0x20014acc

08022de0 <_write_r>:
 8022de0:	b538      	push	{r3, r4, r5, lr}
 8022de2:	4d07      	ldr	r5, [pc, #28]	@ (8022e00 <_write_r+0x20>)
 8022de4:	4604      	mov	r4, r0
 8022de6:	4608      	mov	r0, r1
 8022de8:	4611      	mov	r1, r2
 8022dea:	2200      	movs	r2, #0
 8022dec:	602a      	str	r2, [r5, #0]
 8022dee:	461a      	mov	r2, r3
 8022df0:	f7df fdde 	bl	80029b0 <_write>
 8022df4:	1c43      	adds	r3, r0, #1
 8022df6:	d102      	bne.n	8022dfe <_write_r+0x1e>
 8022df8:	682b      	ldr	r3, [r5, #0]
 8022dfa:	b103      	cbz	r3, 8022dfe <_write_r+0x1e>
 8022dfc:	6023      	str	r3, [r4, #0]
 8022dfe:	bd38      	pop	{r3, r4, r5, pc}
 8022e00:	20014acc 	.word	0x20014acc

08022e04 <__errno>:
 8022e04:	4b01      	ldr	r3, [pc, #4]	@ (8022e0c <__errno+0x8>)
 8022e06:	6818      	ldr	r0, [r3, #0]
 8022e08:	4770      	bx	lr
 8022e0a:	bf00      	nop
 8022e0c:	20000220 	.word	0x20000220

08022e10 <__libc_init_array>:
 8022e10:	b570      	push	{r4, r5, r6, lr}
 8022e12:	4d0d      	ldr	r5, [pc, #52]	@ (8022e48 <__libc_init_array+0x38>)
 8022e14:	4c0d      	ldr	r4, [pc, #52]	@ (8022e4c <__libc_init_array+0x3c>)
 8022e16:	1b64      	subs	r4, r4, r5
 8022e18:	10a4      	asrs	r4, r4, #2
 8022e1a:	2600      	movs	r6, #0
 8022e1c:	42a6      	cmp	r6, r4
 8022e1e:	d109      	bne.n	8022e34 <__libc_init_array+0x24>
 8022e20:	4d0b      	ldr	r5, [pc, #44]	@ (8022e50 <__libc_init_array+0x40>)
 8022e22:	4c0c      	ldr	r4, [pc, #48]	@ (8022e54 <__libc_init_array+0x44>)
 8022e24:	f000 fd62 	bl	80238ec <_init>
 8022e28:	1b64      	subs	r4, r4, r5
 8022e2a:	10a4      	asrs	r4, r4, #2
 8022e2c:	2600      	movs	r6, #0
 8022e2e:	42a6      	cmp	r6, r4
 8022e30:	d105      	bne.n	8022e3e <__libc_init_array+0x2e>
 8022e32:	bd70      	pop	{r4, r5, r6, pc}
 8022e34:	f855 3b04 	ldr.w	r3, [r5], #4
 8022e38:	4798      	blx	r3
 8022e3a:	3601      	adds	r6, #1
 8022e3c:	e7ee      	b.n	8022e1c <__libc_init_array+0xc>
 8022e3e:	f855 3b04 	ldr.w	r3, [r5], #4
 8022e42:	4798      	blx	r3
 8022e44:	3601      	adds	r6, #1
 8022e46:	e7f2      	b.n	8022e2e <__libc_init_array+0x1e>
 8022e48:	08025778 	.word	0x08025778
 8022e4c:	08025778 	.word	0x08025778
 8022e50:	08025778 	.word	0x08025778
 8022e54:	0802578c 	.word	0x0802578c

08022e58 <__retarget_lock_init_recursive>:
 8022e58:	4770      	bx	lr

08022e5a <__retarget_lock_acquire_recursive>:
 8022e5a:	4770      	bx	lr

08022e5c <__retarget_lock_release_recursive>:
 8022e5c:	4770      	bx	lr

08022e5e <memcpy>:
 8022e5e:	440a      	add	r2, r1
 8022e60:	4291      	cmp	r1, r2
 8022e62:	f100 33ff 	add.w	r3, r0, #4294967295
 8022e66:	d100      	bne.n	8022e6a <memcpy+0xc>
 8022e68:	4770      	bx	lr
 8022e6a:	b510      	push	{r4, lr}
 8022e6c:	f811 4b01 	ldrb.w	r4, [r1], #1
 8022e70:	f803 4f01 	strb.w	r4, [r3, #1]!
 8022e74:	4291      	cmp	r1, r2
 8022e76:	d1f9      	bne.n	8022e6c <memcpy+0xe>
 8022e78:	bd10      	pop	{r4, pc}
	...

08022e7c <__register_exitproc>:
 8022e7c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8022e80:	4d27      	ldr	r5, [pc, #156]	@ (8022f20 <__register_exitproc+0xa4>)
 8022e82:	4607      	mov	r7, r0
 8022e84:	6828      	ldr	r0, [r5, #0]
 8022e86:	4691      	mov	r9, r2
 8022e88:	460e      	mov	r6, r1
 8022e8a:	4698      	mov	r8, r3
 8022e8c:	f7ff ffe5 	bl	8022e5a <__retarget_lock_acquire_recursive>
 8022e90:	4a24      	ldr	r2, [pc, #144]	@ (8022f24 <__register_exitproc+0xa8>)
 8022e92:	6814      	ldr	r4, [r2, #0]
 8022e94:	b93c      	cbnz	r4, 8022ea6 <__register_exitproc+0x2a>
 8022e96:	4b24      	ldr	r3, [pc, #144]	@ (8022f28 <__register_exitproc+0xac>)
 8022e98:	6013      	str	r3, [r2, #0]
 8022e9a:	4a24      	ldr	r2, [pc, #144]	@ (8022f2c <__register_exitproc+0xb0>)
 8022e9c:	b112      	cbz	r2, 8022ea4 <__register_exitproc+0x28>
 8022e9e:	6812      	ldr	r2, [r2, #0]
 8022ea0:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
 8022ea4:	4c20      	ldr	r4, [pc, #128]	@ (8022f28 <__register_exitproc+0xac>)
 8022ea6:	6863      	ldr	r3, [r4, #4]
 8022ea8:	2b1f      	cmp	r3, #31
 8022eaa:	dd06      	ble.n	8022eba <__register_exitproc+0x3e>
 8022eac:	6828      	ldr	r0, [r5, #0]
 8022eae:	f7ff ffd5 	bl	8022e5c <__retarget_lock_release_recursive>
 8022eb2:	f04f 30ff 	mov.w	r0, #4294967295
 8022eb6:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8022eba:	b32f      	cbz	r7, 8022f08 <__register_exitproc+0x8c>
 8022ebc:	f8d4 0088 	ldr.w	r0, [r4, #136]	@ 0x88
 8022ec0:	b968      	cbnz	r0, 8022ede <__register_exitproc+0x62>
 8022ec2:	4b1b      	ldr	r3, [pc, #108]	@ (8022f30 <__register_exitproc+0xb4>)
 8022ec4:	2b00      	cmp	r3, #0
 8022ec6:	d0f1      	beq.n	8022eac <__register_exitproc+0x30>
 8022ec8:	f44f 7084 	mov.w	r0, #264	@ 0x108
 8022ecc:	f7ff fd14 	bl	80228f8 <malloc>
 8022ed0:	2800      	cmp	r0, #0
 8022ed2:	d0eb      	beq.n	8022eac <__register_exitproc+0x30>
 8022ed4:	2300      	movs	r3, #0
 8022ed6:	e9c0 3340 	strd	r3, r3, [r0, #256]	@ 0x100
 8022eda:	f8c4 0088 	str.w	r0, [r4, #136]	@ 0x88
 8022ede:	6863      	ldr	r3, [r4, #4]
 8022ee0:	f840 9023 	str.w	r9, [r0, r3, lsl #2]
 8022ee4:	2201      	movs	r2, #1
 8022ee6:	409a      	lsls	r2, r3
 8022ee8:	eb00 0183 	add.w	r1, r0, r3, lsl #2
 8022eec:	f8d0 3100 	ldr.w	r3, [r0, #256]	@ 0x100
 8022ef0:	4313      	orrs	r3, r2
 8022ef2:	f8c0 3100 	str.w	r3, [r0, #256]	@ 0x100
 8022ef6:	2f02      	cmp	r7, #2
 8022ef8:	f8c1 8080 	str.w	r8, [r1, #128]	@ 0x80
 8022efc:	bf02      	ittt	eq
 8022efe:	f8d0 3104 	ldreq.w	r3, [r0, #260]	@ 0x104
 8022f02:	4313      	orreq	r3, r2
 8022f04:	f8c0 3104 	streq.w	r3, [r0, #260]	@ 0x104
 8022f08:	6863      	ldr	r3, [r4, #4]
 8022f0a:	6828      	ldr	r0, [r5, #0]
 8022f0c:	1c5a      	adds	r2, r3, #1
 8022f0e:	3302      	adds	r3, #2
 8022f10:	6062      	str	r2, [r4, #4]
 8022f12:	f844 6023 	str.w	r6, [r4, r3, lsl #2]
 8022f16:	f7ff ffa1 	bl	8022e5c <__retarget_lock_release_recursive>
 8022f1a:	2000      	movs	r0, #0
 8022f1c:	e7cb      	b.n	8022eb6 <__register_exitproc+0x3a>
 8022f1e:	bf00      	nop
 8022f20:	20000270 	.word	0x20000270
 8022f24:	20014b60 	.word	0x20014b60
 8022f28:	20014ad4 	.word	0x20014ad4
 8022f2c:	0802559c 	.word	0x0802559c
 8022f30:	080228f9 	.word	0x080228f9

08022f34 <_free_r>:
 8022f34:	b538      	push	{r3, r4, r5, lr}
 8022f36:	4605      	mov	r5, r0
 8022f38:	2900      	cmp	r1, #0
 8022f3a:	d041      	beq.n	8022fc0 <_free_r+0x8c>
 8022f3c:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8022f40:	1f0c      	subs	r4, r1, #4
 8022f42:	2b00      	cmp	r3, #0
 8022f44:	bfb8      	it	lt
 8022f46:	18e4      	addlt	r4, r4, r3
 8022f48:	f7ff fd88 	bl	8022a5c <__malloc_lock>
 8022f4c:	4a1d      	ldr	r2, [pc, #116]	@ (8022fc4 <_free_r+0x90>)
 8022f4e:	6813      	ldr	r3, [r2, #0]
 8022f50:	b933      	cbnz	r3, 8022f60 <_free_r+0x2c>
 8022f52:	6063      	str	r3, [r4, #4]
 8022f54:	6014      	str	r4, [r2, #0]
 8022f56:	4628      	mov	r0, r5
 8022f58:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8022f5c:	f7ff bd84 	b.w	8022a68 <__malloc_unlock>
 8022f60:	42a3      	cmp	r3, r4
 8022f62:	d908      	bls.n	8022f76 <_free_r+0x42>
 8022f64:	6820      	ldr	r0, [r4, #0]
 8022f66:	1821      	adds	r1, r4, r0
 8022f68:	428b      	cmp	r3, r1
 8022f6a:	bf01      	itttt	eq
 8022f6c:	6819      	ldreq	r1, [r3, #0]
 8022f6e:	685b      	ldreq	r3, [r3, #4]
 8022f70:	1809      	addeq	r1, r1, r0
 8022f72:	6021      	streq	r1, [r4, #0]
 8022f74:	e7ed      	b.n	8022f52 <_free_r+0x1e>
 8022f76:	461a      	mov	r2, r3
 8022f78:	685b      	ldr	r3, [r3, #4]
 8022f7a:	b10b      	cbz	r3, 8022f80 <_free_r+0x4c>
 8022f7c:	42a3      	cmp	r3, r4
 8022f7e:	d9fa      	bls.n	8022f76 <_free_r+0x42>
 8022f80:	6811      	ldr	r1, [r2, #0]
 8022f82:	1850      	adds	r0, r2, r1
 8022f84:	42a0      	cmp	r0, r4
 8022f86:	d10b      	bne.n	8022fa0 <_free_r+0x6c>
 8022f88:	6820      	ldr	r0, [r4, #0]
 8022f8a:	4401      	add	r1, r0
 8022f8c:	1850      	adds	r0, r2, r1
 8022f8e:	4283      	cmp	r3, r0
 8022f90:	6011      	str	r1, [r2, #0]
 8022f92:	d1e0      	bne.n	8022f56 <_free_r+0x22>
 8022f94:	6818      	ldr	r0, [r3, #0]
 8022f96:	685b      	ldr	r3, [r3, #4]
 8022f98:	6053      	str	r3, [r2, #4]
 8022f9a:	4408      	add	r0, r1
 8022f9c:	6010      	str	r0, [r2, #0]
 8022f9e:	e7da      	b.n	8022f56 <_free_r+0x22>
 8022fa0:	d902      	bls.n	8022fa8 <_free_r+0x74>
 8022fa2:	230c      	movs	r3, #12
 8022fa4:	602b      	str	r3, [r5, #0]
 8022fa6:	e7d6      	b.n	8022f56 <_free_r+0x22>
 8022fa8:	6820      	ldr	r0, [r4, #0]
 8022faa:	1821      	adds	r1, r4, r0
 8022fac:	428b      	cmp	r3, r1
 8022fae:	bf04      	itt	eq
 8022fb0:	6819      	ldreq	r1, [r3, #0]
 8022fb2:	685b      	ldreq	r3, [r3, #4]
 8022fb4:	6063      	str	r3, [r4, #4]
 8022fb6:	bf04      	itt	eq
 8022fb8:	1809      	addeq	r1, r1, r0
 8022fba:	6021      	streq	r1, [r4, #0]
 8022fbc:	6054      	str	r4, [r2, #4]
 8022fbe:	e7ca      	b.n	8022f56 <_free_r+0x22>
 8022fc0:	bd38      	pop	{r3, r4, r5, pc}
 8022fc2:	bf00      	nop
 8022fc4:	2001498c 	.word	0x2001498c

08022fc8 <__sfputc_r>:
 8022fc8:	6893      	ldr	r3, [r2, #8]
 8022fca:	3b01      	subs	r3, #1
 8022fcc:	2b00      	cmp	r3, #0
 8022fce:	b410      	push	{r4}
 8022fd0:	6093      	str	r3, [r2, #8]
 8022fd2:	da08      	bge.n	8022fe6 <__sfputc_r+0x1e>
 8022fd4:	6994      	ldr	r4, [r2, #24]
 8022fd6:	42a3      	cmp	r3, r4
 8022fd8:	db01      	blt.n	8022fde <__sfputc_r+0x16>
 8022fda:	290a      	cmp	r1, #10
 8022fdc:	d103      	bne.n	8022fe6 <__sfputc_r+0x1e>
 8022fde:	f85d 4b04 	ldr.w	r4, [sp], #4
 8022fe2:	f000 bb6b 	b.w	80236bc <__swbuf_r>
 8022fe6:	6813      	ldr	r3, [r2, #0]
 8022fe8:	1c58      	adds	r0, r3, #1
 8022fea:	6010      	str	r0, [r2, #0]
 8022fec:	7019      	strb	r1, [r3, #0]
 8022fee:	4608      	mov	r0, r1
 8022ff0:	f85d 4b04 	ldr.w	r4, [sp], #4
 8022ff4:	4770      	bx	lr

08022ff6 <__sfputs_r>:
 8022ff6:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8022ff8:	4606      	mov	r6, r0
 8022ffa:	460f      	mov	r7, r1
 8022ffc:	4614      	mov	r4, r2
 8022ffe:	18d5      	adds	r5, r2, r3
 8023000:	42ac      	cmp	r4, r5
 8023002:	d101      	bne.n	8023008 <__sfputs_r+0x12>
 8023004:	2000      	movs	r0, #0
 8023006:	e007      	b.n	8023018 <__sfputs_r+0x22>
 8023008:	f814 1b01 	ldrb.w	r1, [r4], #1
 802300c:	463a      	mov	r2, r7
 802300e:	4630      	mov	r0, r6
 8023010:	f7ff ffda 	bl	8022fc8 <__sfputc_r>
 8023014:	1c43      	adds	r3, r0, #1
 8023016:	d1f3      	bne.n	8023000 <__sfputs_r+0xa>
 8023018:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

0802301c <_vfiprintf_r>:
 802301c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8023020:	460d      	mov	r5, r1
 8023022:	b09d      	sub	sp, #116	@ 0x74
 8023024:	4614      	mov	r4, r2
 8023026:	4698      	mov	r8, r3
 8023028:	4606      	mov	r6, r0
 802302a:	b118      	cbz	r0, 8023034 <_vfiprintf_r+0x18>
 802302c:	6a03      	ldr	r3, [r0, #32]
 802302e:	b90b      	cbnz	r3, 8023034 <_vfiprintf_r+0x18>
 8023030:	f7ff fdba 	bl	8022ba8 <__sinit>
 8023034:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 8023036:	07d9      	lsls	r1, r3, #31
 8023038:	d405      	bmi.n	8023046 <_vfiprintf_r+0x2a>
 802303a:	89ab      	ldrh	r3, [r5, #12]
 802303c:	059a      	lsls	r2, r3, #22
 802303e:	d402      	bmi.n	8023046 <_vfiprintf_r+0x2a>
 8023040:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 8023042:	f7ff ff0a 	bl	8022e5a <__retarget_lock_acquire_recursive>
 8023046:	89ab      	ldrh	r3, [r5, #12]
 8023048:	071b      	lsls	r3, r3, #28
 802304a:	d501      	bpl.n	8023050 <_vfiprintf_r+0x34>
 802304c:	692b      	ldr	r3, [r5, #16]
 802304e:	b99b      	cbnz	r3, 8023078 <_vfiprintf_r+0x5c>
 8023050:	4629      	mov	r1, r5
 8023052:	4630      	mov	r0, r6
 8023054:	f000 fb70 	bl	8023738 <__swsetup_r>
 8023058:	b170      	cbz	r0, 8023078 <_vfiprintf_r+0x5c>
 802305a:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 802305c:	07dc      	lsls	r4, r3, #31
 802305e:	d504      	bpl.n	802306a <_vfiprintf_r+0x4e>
 8023060:	f04f 30ff 	mov.w	r0, #4294967295
 8023064:	b01d      	add	sp, #116	@ 0x74
 8023066:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802306a:	89ab      	ldrh	r3, [r5, #12]
 802306c:	0598      	lsls	r0, r3, #22
 802306e:	d4f7      	bmi.n	8023060 <_vfiprintf_r+0x44>
 8023070:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 8023072:	f7ff fef3 	bl	8022e5c <__retarget_lock_release_recursive>
 8023076:	e7f3      	b.n	8023060 <_vfiprintf_r+0x44>
 8023078:	2300      	movs	r3, #0
 802307a:	9309      	str	r3, [sp, #36]	@ 0x24
 802307c:	2320      	movs	r3, #32
 802307e:	f88d 3029 	strb.w	r3, [sp, #41]	@ 0x29
 8023082:	f8cd 800c 	str.w	r8, [sp, #12]
 8023086:	2330      	movs	r3, #48	@ 0x30
 8023088:	f8df 81ac 	ldr.w	r8, [pc, #428]	@ 8023238 <_vfiprintf_r+0x21c>
 802308c:	f88d 302a 	strb.w	r3, [sp, #42]	@ 0x2a
 8023090:	f04f 0901 	mov.w	r9, #1
 8023094:	4623      	mov	r3, r4
 8023096:	469a      	mov	sl, r3
 8023098:	f813 2b01 	ldrb.w	r2, [r3], #1
 802309c:	b10a      	cbz	r2, 80230a2 <_vfiprintf_r+0x86>
 802309e:	2a25      	cmp	r2, #37	@ 0x25
 80230a0:	d1f9      	bne.n	8023096 <_vfiprintf_r+0x7a>
 80230a2:	ebba 0b04 	subs.w	fp, sl, r4
 80230a6:	d00b      	beq.n	80230c0 <_vfiprintf_r+0xa4>
 80230a8:	465b      	mov	r3, fp
 80230aa:	4622      	mov	r2, r4
 80230ac:	4629      	mov	r1, r5
 80230ae:	4630      	mov	r0, r6
 80230b0:	f7ff ffa1 	bl	8022ff6 <__sfputs_r>
 80230b4:	3001      	adds	r0, #1
 80230b6:	f000 80a7 	beq.w	8023208 <_vfiprintf_r+0x1ec>
 80230ba:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 80230bc:	445a      	add	r2, fp
 80230be:	9209      	str	r2, [sp, #36]	@ 0x24
 80230c0:	f89a 3000 	ldrb.w	r3, [sl]
 80230c4:	2b00      	cmp	r3, #0
 80230c6:	f000 809f 	beq.w	8023208 <_vfiprintf_r+0x1ec>
 80230ca:	2300      	movs	r3, #0
 80230cc:	f04f 32ff 	mov.w	r2, #4294967295
 80230d0:	e9cd 2305 	strd	r2, r3, [sp, #20]
 80230d4:	f10a 0a01 	add.w	sl, sl, #1
 80230d8:	9304      	str	r3, [sp, #16]
 80230da:	9307      	str	r3, [sp, #28]
 80230dc:	f88d 3053 	strb.w	r3, [sp, #83]	@ 0x53
 80230e0:	931a      	str	r3, [sp, #104]	@ 0x68
 80230e2:	4654      	mov	r4, sl
 80230e4:	2205      	movs	r2, #5
 80230e6:	f814 1b01 	ldrb.w	r1, [r4], #1
 80230ea:	4853      	ldr	r0, [pc, #332]	@ (8023238 <_vfiprintf_r+0x21c>)
 80230ec:	f7dd f888 	bl	8000200 <memchr>
 80230f0:	9a04      	ldr	r2, [sp, #16]
 80230f2:	b9d8      	cbnz	r0, 802312c <_vfiprintf_r+0x110>
 80230f4:	06d1      	lsls	r1, r2, #27
 80230f6:	bf44      	itt	mi
 80230f8:	2320      	movmi	r3, #32
 80230fa:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 80230fe:	0713      	lsls	r3, r2, #28
 8023100:	bf44      	itt	mi
 8023102:	232b      	movmi	r3, #43	@ 0x2b
 8023104:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 8023108:	f89a 3000 	ldrb.w	r3, [sl]
 802310c:	2b2a      	cmp	r3, #42	@ 0x2a
 802310e:	d015      	beq.n	802313c <_vfiprintf_r+0x120>
 8023110:	9a07      	ldr	r2, [sp, #28]
 8023112:	4654      	mov	r4, sl
 8023114:	2000      	movs	r0, #0
 8023116:	f04f 0c0a 	mov.w	ip, #10
 802311a:	4621      	mov	r1, r4
 802311c:	f811 3b01 	ldrb.w	r3, [r1], #1
 8023120:	3b30      	subs	r3, #48	@ 0x30
 8023122:	2b09      	cmp	r3, #9
 8023124:	d94b      	bls.n	80231be <_vfiprintf_r+0x1a2>
 8023126:	b1b0      	cbz	r0, 8023156 <_vfiprintf_r+0x13a>
 8023128:	9207      	str	r2, [sp, #28]
 802312a:	e014      	b.n	8023156 <_vfiprintf_r+0x13a>
 802312c:	eba0 0308 	sub.w	r3, r0, r8
 8023130:	fa09 f303 	lsl.w	r3, r9, r3
 8023134:	4313      	orrs	r3, r2
 8023136:	9304      	str	r3, [sp, #16]
 8023138:	46a2      	mov	sl, r4
 802313a:	e7d2      	b.n	80230e2 <_vfiprintf_r+0xc6>
 802313c:	9b03      	ldr	r3, [sp, #12]
 802313e:	1d19      	adds	r1, r3, #4
 8023140:	681b      	ldr	r3, [r3, #0]
 8023142:	9103      	str	r1, [sp, #12]
 8023144:	2b00      	cmp	r3, #0
 8023146:	bfbb      	ittet	lt
 8023148:	425b      	neglt	r3, r3
 802314a:	f042 0202 	orrlt.w	r2, r2, #2
 802314e:	9307      	strge	r3, [sp, #28]
 8023150:	9307      	strlt	r3, [sp, #28]
 8023152:	bfb8      	it	lt
 8023154:	9204      	strlt	r2, [sp, #16]
 8023156:	7823      	ldrb	r3, [r4, #0]
 8023158:	2b2e      	cmp	r3, #46	@ 0x2e
 802315a:	d10a      	bne.n	8023172 <_vfiprintf_r+0x156>
 802315c:	7863      	ldrb	r3, [r4, #1]
 802315e:	2b2a      	cmp	r3, #42	@ 0x2a
 8023160:	d132      	bne.n	80231c8 <_vfiprintf_r+0x1ac>
 8023162:	9b03      	ldr	r3, [sp, #12]
 8023164:	1d1a      	adds	r2, r3, #4
 8023166:	681b      	ldr	r3, [r3, #0]
 8023168:	9203      	str	r2, [sp, #12]
 802316a:	ea43 73e3 	orr.w	r3, r3, r3, asr #31
 802316e:	3402      	adds	r4, #2
 8023170:	9305      	str	r3, [sp, #20]
 8023172:	f8df a0d4 	ldr.w	sl, [pc, #212]	@ 8023248 <_vfiprintf_r+0x22c>
 8023176:	7821      	ldrb	r1, [r4, #0]
 8023178:	2203      	movs	r2, #3
 802317a:	4650      	mov	r0, sl
 802317c:	f7dd f840 	bl	8000200 <memchr>
 8023180:	b138      	cbz	r0, 8023192 <_vfiprintf_r+0x176>
 8023182:	9b04      	ldr	r3, [sp, #16]
 8023184:	eba0 000a 	sub.w	r0, r0, sl
 8023188:	2240      	movs	r2, #64	@ 0x40
 802318a:	4082      	lsls	r2, r0
 802318c:	4313      	orrs	r3, r2
 802318e:	3401      	adds	r4, #1
 8023190:	9304      	str	r3, [sp, #16]
 8023192:	f814 1b01 	ldrb.w	r1, [r4], #1
 8023196:	4829      	ldr	r0, [pc, #164]	@ (802323c <_vfiprintf_r+0x220>)
 8023198:	f88d 1028 	strb.w	r1, [sp, #40]	@ 0x28
 802319c:	2206      	movs	r2, #6
 802319e:	f7dd f82f 	bl	8000200 <memchr>
 80231a2:	2800      	cmp	r0, #0
 80231a4:	d03f      	beq.n	8023226 <_vfiprintf_r+0x20a>
 80231a6:	4b26      	ldr	r3, [pc, #152]	@ (8023240 <_vfiprintf_r+0x224>)
 80231a8:	bb1b      	cbnz	r3, 80231f2 <_vfiprintf_r+0x1d6>
 80231aa:	9b03      	ldr	r3, [sp, #12]
 80231ac:	3307      	adds	r3, #7
 80231ae:	f023 0307 	bic.w	r3, r3, #7
 80231b2:	3308      	adds	r3, #8
 80231b4:	9303      	str	r3, [sp, #12]
 80231b6:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80231b8:	443b      	add	r3, r7
 80231ba:	9309      	str	r3, [sp, #36]	@ 0x24
 80231bc:	e76a      	b.n	8023094 <_vfiprintf_r+0x78>
 80231be:	fb0c 3202 	mla	r2, ip, r2, r3
 80231c2:	460c      	mov	r4, r1
 80231c4:	2001      	movs	r0, #1
 80231c6:	e7a8      	b.n	802311a <_vfiprintf_r+0xfe>
 80231c8:	2300      	movs	r3, #0
 80231ca:	3401      	adds	r4, #1
 80231cc:	9305      	str	r3, [sp, #20]
 80231ce:	4619      	mov	r1, r3
 80231d0:	f04f 0c0a 	mov.w	ip, #10
 80231d4:	4620      	mov	r0, r4
 80231d6:	f810 2b01 	ldrb.w	r2, [r0], #1
 80231da:	3a30      	subs	r2, #48	@ 0x30
 80231dc:	2a09      	cmp	r2, #9
 80231de:	d903      	bls.n	80231e8 <_vfiprintf_r+0x1cc>
 80231e0:	2b00      	cmp	r3, #0
 80231e2:	d0c6      	beq.n	8023172 <_vfiprintf_r+0x156>
 80231e4:	9105      	str	r1, [sp, #20]
 80231e6:	e7c4      	b.n	8023172 <_vfiprintf_r+0x156>
 80231e8:	fb0c 2101 	mla	r1, ip, r1, r2
 80231ec:	4604      	mov	r4, r0
 80231ee:	2301      	movs	r3, #1
 80231f0:	e7f0      	b.n	80231d4 <_vfiprintf_r+0x1b8>
 80231f2:	ab03      	add	r3, sp, #12
 80231f4:	9300      	str	r3, [sp, #0]
 80231f6:	462a      	mov	r2, r5
 80231f8:	4b12      	ldr	r3, [pc, #72]	@ (8023244 <_vfiprintf_r+0x228>)
 80231fa:	a904      	add	r1, sp, #16
 80231fc:	4630      	mov	r0, r6
 80231fe:	f3af 8000 	nop.w
 8023202:	4607      	mov	r7, r0
 8023204:	1c78      	adds	r0, r7, #1
 8023206:	d1d6      	bne.n	80231b6 <_vfiprintf_r+0x19a>
 8023208:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 802320a:	07d9      	lsls	r1, r3, #31
 802320c:	d405      	bmi.n	802321a <_vfiprintf_r+0x1fe>
 802320e:	89ab      	ldrh	r3, [r5, #12]
 8023210:	059a      	lsls	r2, r3, #22
 8023212:	d402      	bmi.n	802321a <_vfiprintf_r+0x1fe>
 8023214:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 8023216:	f7ff fe21 	bl	8022e5c <__retarget_lock_release_recursive>
 802321a:	89ab      	ldrh	r3, [r5, #12]
 802321c:	065b      	lsls	r3, r3, #25
 802321e:	f53f af1f 	bmi.w	8023060 <_vfiprintf_r+0x44>
 8023222:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8023224:	e71e      	b.n	8023064 <_vfiprintf_r+0x48>
 8023226:	ab03      	add	r3, sp, #12
 8023228:	9300      	str	r3, [sp, #0]
 802322a:	462a      	mov	r2, r5
 802322c:	4b05      	ldr	r3, [pc, #20]	@ (8023244 <_vfiprintf_r+0x228>)
 802322e:	a904      	add	r1, sp, #16
 8023230:	4630      	mov	r0, r6
 8023232:	f000 f879 	bl	8023328 <_printf_i>
 8023236:	e7e4      	b.n	8023202 <_vfiprintf_r+0x1e6>
 8023238:	080243e5 	.word	0x080243e5
 802323c:	080243ef 	.word	0x080243ef
 8023240:	00000000 	.word	0x00000000
 8023244:	08022ff7 	.word	0x08022ff7
 8023248:	080243eb 	.word	0x080243eb

0802324c <_printf_common>:
 802324c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8023250:	4616      	mov	r6, r2
 8023252:	4698      	mov	r8, r3
 8023254:	688a      	ldr	r2, [r1, #8]
 8023256:	690b      	ldr	r3, [r1, #16]
 8023258:	f8dd 9020 	ldr.w	r9, [sp, #32]
 802325c:	4293      	cmp	r3, r2
 802325e:	bfb8      	it	lt
 8023260:	4613      	movlt	r3, r2
 8023262:	6033      	str	r3, [r6, #0]
 8023264:	f891 2043 	ldrb.w	r2, [r1, #67]	@ 0x43
 8023268:	4607      	mov	r7, r0
 802326a:	460c      	mov	r4, r1
 802326c:	b10a      	cbz	r2, 8023272 <_printf_common+0x26>
 802326e:	3301      	adds	r3, #1
 8023270:	6033      	str	r3, [r6, #0]
 8023272:	6823      	ldr	r3, [r4, #0]
 8023274:	0699      	lsls	r1, r3, #26
 8023276:	bf42      	ittt	mi
 8023278:	6833      	ldrmi	r3, [r6, #0]
 802327a:	3302      	addmi	r3, #2
 802327c:	6033      	strmi	r3, [r6, #0]
 802327e:	6825      	ldr	r5, [r4, #0]
 8023280:	f015 0506 	ands.w	r5, r5, #6
 8023284:	d106      	bne.n	8023294 <_printf_common+0x48>
 8023286:	f104 0a19 	add.w	sl, r4, #25
 802328a:	68e3      	ldr	r3, [r4, #12]
 802328c:	6832      	ldr	r2, [r6, #0]
 802328e:	1a9b      	subs	r3, r3, r2
 8023290:	42ab      	cmp	r3, r5
 8023292:	dc26      	bgt.n	80232e2 <_printf_common+0x96>
 8023294:	f894 3043 	ldrb.w	r3, [r4, #67]	@ 0x43
 8023298:	6822      	ldr	r2, [r4, #0]
 802329a:	3b00      	subs	r3, #0
 802329c:	bf18      	it	ne
 802329e:	2301      	movne	r3, #1
 80232a0:	0692      	lsls	r2, r2, #26
 80232a2:	d42b      	bmi.n	80232fc <_printf_common+0xb0>
 80232a4:	f104 0243 	add.w	r2, r4, #67	@ 0x43
 80232a8:	4641      	mov	r1, r8
 80232aa:	4638      	mov	r0, r7
 80232ac:	47c8      	blx	r9
 80232ae:	3001      	adds	r0, #1
 80232b0:	d01e      	beq.n	80232f0 <_printf_common+0xa4>
 80232b2:	6823      	ldr	r3, [r4, #0]
 80232b4:	6922      	ldr	r2, [r4, #16]
 80232b6:	f003 0306 	and.w	r3, r3, #6
 80232ba:	2b04      	cmp	r3, #4
 80232bc:	bf02      	ittt	eq
 80232be:	68e5      	ldreq	r5, [r4, #12]
 80232c0:	6833      	ldreq	r3, [r6, #0]
 80232c2:	1aed      	subeq	r5, r5, r3
 80232c4:	68a3      	ldr	r3, [r4, #8]
 80232c6:	bf0c      	ite	eq
 80232c8:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 80232cc:	2500      	movne	r5, #0
 80232ce:	4293      	cmp	r3, r2
 80232d0:	bfc4      	itt	gt
 80232d2:	1a9b      	subgt	r3, r3, r2
 80232d4:	18ed      	addgt	r5, r5, r3
 80232d6:	2600      	movs	r6, #0
 80232d8:	341a      	adds	r4, #26
 80232da:	42b5      	cmp	r5, r6
 80232dc:	d11a      	bne.n	8023314 <_printf_common+0xc8>
 80232de:	2000      	movs	r0, #0
 80232e0:	e008      	b.n	80232f4 <_printf_common+0xa8>
 80232e2:	2301      	movs	r3, #1
 80232e4:	4652      	mov	r2, sl
 80232e6:	4641      	mov	r1, r8
 80232e8:	4638      	mov	r0, r7
 80232ea:	47c8      	blx	r9
 80232ec:	3001      	adds	r0, #1
 80232ee:	d103      	bne.n	80232f8 <_printf_common+0xac>
 80232f0:	f04f 30ff 	mov.w	r0, #4294967295
 80232f4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80232f8:	3501      	adds	r5, #1
 80232fa:	e7c6      	b.n	802328a <_printf_common+0x3e>
 80232fc:	18e1      	adds	r1, r4, r3
 80232fe:	1c5a      	adds	r2, r3, #1
 8023300:	2030      	movs	r0, #48	@ 0x30
 8023302:	f881 0043 	strb.w	r0, [r1, #67]	@ 0x43
 8023306:	4422      	add	r2, r4
 8023308:	f894 1045 	ldrb.w	r1, [r4, #69]	@ 0x45
 802330c:	f882 1043 	strb.w	r1, [r2, #67]	@ 0x43
 8023310:	3302      	adds	r3, #2
 8023312:	e7c7      	b.n	80232a4 <_printf_common+0x58>
 8023314:	2301      	movs	r3, #1
 8023316:	4622      	mov	r2, r4
 8023318:	4641      	mov	r1, r8
 802331a:	4638      	mov	r0, r7
 802331c:	47c8      	blx	r9
 802331e:	3001      	adds	r0, #1
 8023320:	d0e6      	beq.n	80232f0 <_printf_common+0xa4>
 8023322:	3601      	adds	r6, #1
 8023324:	e7d9      	b.n	80232da <_printf_common+0x8e>
	...

08023328 <_printf_i>:
 8023328:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 802332c:	7e0f      	ldrb	r7, [r1, #24]
 802332e:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 8023330:	2f78      	cmp	r7, #120	@ 0x78
 8023332:	4691      	mov	r9, r2
 8023334:	4680      	mov	r8, r0
 8023336:	460c      	mov	r4, r1
 8023338:	469a      	mov	sl, r3
 802333a:	f101 0243 	add.w	r2, r1, #67	@ 0x43
 802333e:	d807      	bhi.n	8023350 <_printf_i+0x28>
 8023340:	2f62      	cmp	r7, #98	@ 0x62
 8023342:	d80a      	bhi.n	802335a <_printf_i+0x32>
 8023344:	2f00      	cmp	r7, #0
 8023346:	f000 80d1 	beq.w	80234ec <_printf_i+0x1c4>
 802334a:	2f58      	cmp	r7, #88	@ 0x58
 802334c:	f000 80b8 	beq.w	80234c0 <_printf_i+0x198>
 8023350:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 8023354:	f884 7042 	strb.w	r7, [r4, #66]	@ 0x42
 8023358:	e03a      	b.n	80233d0 <_printf_i+0xa8>
 802335a:	f1a7 0363 	sub.w	r3, r7, #99	@ 0x63
 802335e:	2b15      	cmp	r3, #21
 8023360:	d8f6      	bhi.n	8023350 <_printf_i+0x28>
 8023362:	a101      	add	r1, pc, #4	@ (adr r1, 8023368 <_printf_i+0x40>)
 8023364:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 8023368:	080233c1 	.word	0x080233c1
 802336c:	080233d5 	.word	0x080233d5
 8023370:	08023351 	.word	0x08023351
 8023374:	08023351 	.word	0x08023351
 8023378:	08023351 	.word	0x08023351
 802337c:	08023351 	.word	0x08023351
 8023380:	080233d5 	.word	0x080233d5
 8023384:	08023351 	.word	0x08023351
 8023388:	08023351 	.word	0x08023351
 802338c:	08023351 	.word	0x08023351
 8023390:	08023351 	.word	0x08023351
 8023394:	080234d3 	.word	0x080234d3
 8023398:	080233ff 	.word	0x080233ff
 802339c:	0802348d 	.word	0x0802348d
 80233a0:	08023351 	.word	0x08023351
 80233a4:	08023351 	.word	0x08023351
 80233a8:	080234f5 	.word	0x080234f5
 80233ac:	08023351 	.word	0x08023351
 80233b0:	080233ff 	.word	0x080233ff
 80233b4:	08023351 	.word	0x08023351
 80233b8:	08023351 	.word	0x08023351
 80233bc:	08023495 	.word	0x08023495
 80233c0:	6833      	ldr	r3, [r6, #0]
 80233c2:	1d1a      	adds	r2, r3, #4
 80233c4:	681b      	ldr	r3, [r3, #0]
 80233c6:	6032      	str	r2, [r6, #0]
 80233c8:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 80233cc:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
 80233d0:	2301      	movs	r3, #1
 80233d2:	e09c      	b.n	802350e <_printf_i+0x1e6>
 80233d4:	6833      	ldr	r3, [r6, #0]
 80233d6:	6820      	ldr	r0, [r4, #0]
 80233d8:	1d19      	adds	r1, r3, #4
 80233da:	6031      	str	r1, [r6, #0]
 80233dc:	0606      	lsls	r6, r0, #24
 80233de:	d501      	bpl.n	80233e4 <_printf_i+0xbc>
 80233e0:	681d      	ldr	r5, [r3, #0]
 80233e2:	e003      	b.n	80233ec <_printf_i+0xc4>
 80233e4:	0645      	lsls	r5, r0, #25
 80233e6:	d5fb      	bpl.n	80233e0 <_printf_i+0xb8>
 80233e8:	f9b3 5000 	ldrsh.w	r5, [r3]
 80233ec:	2d00      	cmp	r5, #0
 80233ee:	da03      	bge.n	80233f8 <_printf_i+0xd0>
 80233f0:	232d      	movs	r3, #45	@ 0x2d
 80233f2:	426d      	negs	r5, r5
 80233f4:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 80233f8:	4858      	ldr	r0, [pc, #352]	@ (802355c <_printf_i+0x234>)
 80233fa:	230a      	movs	r3, #10
 80233fc:	e011      	b.n	8023422 <_printf_i+0xfa>
 80233fe:	6821      	ldr	r1, [r4, #0]
 8023400:	6833      	ldr	r3, [r6, #0]
 8023402:	0608      	lsls	r0, r1, #24
 8023404:	f853 5b04 	ldr.w	r5, [r3], #4
 8023408:	d402      	bmi.n	8023410 <_printf_i+0xe8>
 802340a:	0649      	lsls	r1, r1, #25
 802340c:	bf48      	it	mi
 802340e:	b2ad      	uxthmi	r5, r5
 8023410:	2f6f      	cmp	r7, #111	@ 0x6f
 8023412:	4852      	ldr	r0, [pc, #328]	@ (802355c <_printf_i+0x234>)
 8023414:	6033      	str	r3, [r6, #0]
 8023416:	bf14      	ite	ne
 8023418:	230a      	movne	r3, #10
 802341a:	2308      	moveq	r3, #8
 802341c:	2100      	movs	r1, #0
 802341e:	f884 1043 	strb.w	r1, [r4, #67]	@ 0x43
 8023422:	6866      	ldr	r6, [r4, #4]
 8023424:	60a6      	str	r6, [r4, #8]
 8023426:	2e00      	cmp	r6, #0
 8023428:	db05      	blt.n	8023436 <_printf_i+0x10e>
 802342a:	6821      	ldr	r1, [r4, #0]
 802342c:	432e      	orrs	r6, r5
 802342e:	f021 0104 	bic.w	r1, r1, #4
 8023432:	6021      	str	r1, [r4, #0]
 8023434:	d04b      	beq.n	80234ce <_printf_i+0x1a6>
 8023436:	4616      	mov	r6, r2
 8023438:	fbb5 f1f3 	udiv	r1, r5, r3
 802343c:	fb03 5711 	mls	r7, r3, r1, r5
 8023440:	5dc7      	ldrb	r7, [r0, r7]
 8023442:	f806 7d01 	strb.w	r7, [r6, #-1]!
 8023446:	462f      	mov	r7, r5
 8023448:	42bb      	cmp	r3, r7
 802344a:	460d      	mov	r5, r1
 802344c:	d9f4      	bls.n	8023438 <_printf_i+0x110>
 802344e:	2b08      	cmp	r3, #8
 8023450:	d10b      	bne.n	802346a <_printf_i+0x142>
 8023452:	6823      	ldr	r3, [r4, #0]
 8023454:	07df      	lsls	r7, r3, #31
 8023456:	d508      	bpl.n	802346a <_printf_i+0x142>
 8023458:	6923      	ldr	r3, [r4, #16]
 802345a:	6861      	ldr	r1, [r4, #4]
 802345c:	4299      	cmp	r1, r3
 802345e:	bfde      	ittt	le
 8023460:	2330      	movle	r3, #48	@ 0x30
 8023462:	f806 3c01 	strble.w	r3, [r6, #-1]
 8023466:	f106 36ff 	addle.w	r6, r6, #4294967295
 802346a:	1b92      	subs	r2, r2, r6
 802346c:	6122      	str	r2, [r4, #16]
 802346e:	f8cd a000 	str.w	sl, [sp]
 8023472:	464b      	mov	r3, r9
 8023474:	aa03      	add	r2, sp, #12
 8023476:	4621      	mov	r1, r4
 8023478:	4640      	mov	r0, r8
 802347a:	f7ff fee7 	bl	802324c <_printf_common>
 802347e:	3001      	adds	r0, #1
 8023480:	d14a      	bne.n	8023518 <_printf_i+0x1f0>
 8023482:	f04f 30ff 	mov.w	r0, #4294967295
 8023486:	b004      	add	sp, #16
 8023488:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 802348c:	6823      	ldr	r3, [r4, #0]
 802348e:	f043 0320 	orr.w	r3, r3, #32
 8023492:	6023      	str	r3, [r4, #0]
 8023494:	4832      	ldr	r0, [pc, #200]	@ (8023560 <_printf_i+0x238>)
 8023496:	2778      	movs	r7, #120	@ 0x78
 8023498:	f884 7045 	strb.w	r7, [r4, #69]	@ 0x45
 802349c:	6823      	ldr	r3, [r4, #0]
 802349e:	6831      	ldr	r1, [r6, #0]
 80234a0:	061f      	lsls	r7, r3, #24
 80234a2:	f851 5b04 	ldr.w	r5, [r1], #4
 80234a6:	d402      	bmi.n	80234ae <_printf_i+0x186>
 80234a8:	065f      	lsls	r7, r3, #25
 80234aa:	bf48      	it	mi
 80234ac:	b2ad      	uxthmi	r5, r5
 80234ae:	6031      	str	r1, [r6, #0]
 80234b0:	07d9      	lsls	r1, r3, #31
 80234b2:	bf44      	itt	mi
 80234b4:	f043 0320 	orrmi.w	r3, r3, #32
 80234b8:	6023      	strmi	r3, [r4, #0]
 80234ba:	b11d      	cbz	r5, 80234c4 <_printf_i+0x19c>
 80234bc:	2310      	movs	r3, #16
 80234be:	e7ad      	b.n	802341c <_printf_i+0xf4>
 80234c0:	4826      	ldr	r0, [pc, #152]	@ (802355c <_printf_i+0x234>)
 80234c2:	e7e9      	b.n	8023498 <_printf_i+0x170>
 80234c4:	6823      	ldr	r3, [r4, #0]
 80234c6:	f023 0320 	bic.w	r3, r3, #32
 80234ca:	6023      	str	r3, [r4, #0]
 80234cc:	e7f6      	b.n	80234bc <_printf_i+0x194>
 80234ce:	4616      	mov	r6, r2
 80234d0:	e7bd      	b.n	802344e <_printf_i+0x126>
 80234d2:	6833      	ldr	r3, [r6, #0]
 80234d4:	6825      	ldr	r5, [r4, #0]
 80234d6:	6961      	ldr	r1, [r4, #20]
 80234d8:	1d18      	adds	r0, r3, #4
 80234da:	6030      	str	r0, [r6, #0]
 80234dc:	062e      	lsls	r6, r5, #24
 80234de:	681b      	ldr	r3, [r3, #0]
 80234e0:	d501      	bpl.n	80234e6 <_printf_i+0x1be>
 80234e2:	6019      	str	r1, [r3, #0]
 80234e4:	e002      	b.n	80234ec <_printf_i+0x1c4>
 80234e6:	0668      	lsls	r0, r5, #25
 80234e8:	d5fb      	bpl.n	80234e2 <_printf_i+0x1ba>
 80234ea:	8019      	strh	r1, [r3, #0]
 80234ec:	2300      	movs	r3, #0
 80234ee:	6123      	str	r3, [r4, #16]
 80234f0:	4616      	mov	r6, r2
 80234f2:	e7bc      	b.n	802346e <_printf_i+0x146>
 80234f4:	6833      	ldr	r3, [r6, #0]
 80234f6:	1d1a      	adds	r2, r3, #4
 80234f8:	6032      	str	r2, [r6, #0]
 80234fa:	681e      	ldr	r6, [r3, #0]
 80234fc:	6862      	ldr	r2, [r4, #4]
 80234fe:	2100      	movs	r1, #0
 8023500:	4630      	mov	r0, r6
 8023502:	f7dc fe7d 	bl	8000200 <memchr>
 8023506:	b108      	cbz	r0, 802350c <_printf_i+0x1e4>
 8023508:	1b80      	subs	r0, r0, r6
 802350a:	6060      	str	r0, [r4, #4]
 802350c:	6863      	ldr	r3, [r4, #4]
 802350e:	6123      	str	r3, [r4, #16]
 8023510:	2300      	movs	r3, #0
 8023512:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 8023516:	e7aa      	b.n	802346e <_printf_i+0x146>
 8023518:	6923      	ldr	r3, [r4, #16]
 802351a:	4632      	mov	r2, r6
 802351c:	4649      	mov	r1, r9
 802351e:	4640      	mov	r0, r8
 8023520:	47d0      	blx	sl
 8023522:	3001      	adds	r0, #1
 8023524:	d0ad      	beq.n	8023482 <_printf_i+0x15a>
 8023526:	6823      	ldr	r3, [r4, #0]
 8023528:	079b      	lsls	r3, r3, #30
 802352a:	d413      	bmi.n	8023554 <_printf_i+0x22c>
 802352c:	68e0      	ldr	r0, [r4, #12]
 802352e:	9b03      	ldr	r3, [sp, #12]
 8023530:	4298      	cmp	r0, r3
 8023532:	bfb8      	it	lt
 8023534:	4618      	movlt	r0, r3
 8023536:	e7a6      	b.n	8023486 <_printf_i+0x15e>
 8023538:	2301      	movs	r3, #1
 802353a:	4632      	mov	r2, r6
 802353c:	4649      	mov	r1, r9
 802353e:	4640      	mov	r0, r8
 8023540:	47d0      	blx	sl
 8023542:	3001      	adds	r0, #1
 8023544:	d09d      	beq.n	8023482 <_printf_i+0x15a>
 8023546:	3501      	adds	r5, #1
 8023548:	68e3      	ldr	r3, [r4, #12]
 802354a:	9903      	ldr	r1, [sp, #12]
 802354c:	1a5b      	subs	r3, r3, r1
 802354e:	42ab      	cmp	r3, r5
 8023550:	dcf2      	bgt.n	8023538 <_printf_i+0x210>
 8023552:	e7eb      	b.n	802352c <_printf_i+0x204>
 8023554:	2500      	movs	r5, #0
 8023556:	f104 0619 	add.w	r6, r4, #25
 802355a:	e7f5      	b.n	8023548 <_printf_i+0x220>
 802355c:	080243f6 	.word	0x080243f6
 8023560:	08024407 	.word	0x08024407

08023564 <__sflush_r>:
 8023564:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
 8023568:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 802356c:	0716      	lsls	r6, r2, #28
 802356e:	4605      	mov	r5, r0
 8023570:	460c      	mov	r4, r1
 8023572:	d454      	bmi.n	802361e <__sflush_r+0xba>
 8023574:	684b      	ldr	r3, [r1, #4]
 8023576:	2b00      	cmp	r3, #0
 8023578:	dc02      	bgt.n	8023580 <__sflush_r+0x1c>
 802357a:	6c0b      	ldr	r3, [r1, #64]	@ 0x40
 802357c:	2b00      	cmp	r3, #0
 802357e:	dd48      	ble.n	8023612 <__sflush_r+0xae>
 8023580:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 8023582:	2e00      	cmp	r6, #0
 8023584:	d045      	beq.n	8023612 <__sflush_r+0xae>
 8023586:	2300      	movs	r3, #0
 8023588:	f412 5280 	ands.w	r2, r2, #4096	@ 0x1000
 802358c:	682f      	ldr	r7, [r5, #0]
 802358e:	6a21      	ldr	r1, [r4, #32]
 8023590:	602b      	str	r3, [r5, #0]
 8023592:	d030      	beq.n	80235f6 <__sflush_r+0x92>
 8023594:	6d62      	ldr	r2, [r4, #84]	@ 0x54
 8023596:	89a3      	ldrh	r3, [r4, #12]
 8023598:	0759      	lsls	r1, r3, #29
 802359a:	d505      	bpl.n	80235a8 <__sflush_r+0x44>
 802359c:	6863      	ldr	r3, [r4, #4]
 802359e:	1ad2      	subs	r2, r2, r3
 80235a0:	6b63      	ldr	r3, [r4, #52]	@ 0x34
 80235a2:	b10b      	cbz	r3, 80235a8 <__sflush_r+0x44>
 80235a4:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 80235a6:	1ad2      	subs	r2, r2, r3
 80235a8:	2300      	movs	r3, #0
 80235aa:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 80235ac:	6a21      	ldr	r1, [r4, #32]
 80235ae:	4628      	mov	r0, r5
 80235b0:	47b0      	blx	r6
 80235b2:	1c43      	adds	r3, r0, #1
 80235b4:	89a3      	ldrh	r3, [r4, #12]
 80235b6:	d106      	bne.n	80235c6 <__sflush_r+0x62>
 80235b8:	6829      	ldr	r1, [r5, #0]
 80235ba:	291d      	cmp	r1, #29
 80235bc:	d82b      	bhi.n	8023616 <__sflush_r+0xb2>
 80235be:	4a2a      	ldr	r2, [pc, #168]	@ (8023668 <__sflush_r+0x104>)
 80235c0:	40ca      	lsrs	r2, r1
 80235c2:	07d6      	lsls	r6, r2, #31
 80235c4:	d527      	bpl.n	8023616 <__sflush_r+0xb2>
 80235c6:	2200      	movs	r2, #0
 80235c8:	6062      	str	r2, [r4, #4]
 80235ca:	04d9      	lsls	r1, r3, #19
 80235cc:	6922      	ldr	r2, [r4, #16]
 80235ce:	6022      	str	r2, [r4, #0]
 80235d0:	d504      	bpl.n	80235dc <__sflush_r+0x78>
 80235d2:	1c42      	adds	r2, r0, #1
 80235d4:	d101      	bne.n	80235da <__sflush_r+0x76>
 80235d6:	682b      	ldr	r3, [r5, #0]
 80235d8:	b903      	cbnz	r3, 80235dc <__sflush_r+0x78>
 80235da:	6560      	str	r0, [r4, #84]	@ 0x54
 80235dc:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 80235de:	602f      	str	r7, [r5, #0]
 80235e0:	b1b9      	cbz	r1, 8023612 <__sflush_r+0xae>
 80235e2:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 80235e6:	4299      	cmp	r1, r3
 80235e8:	d002      	beq.n	80235f0 <__sflush_r+0x8c>
 80235ea:	4628      	mov	r0, r5
 80235ec:	f7ff fca2 	bl	8022f34 <_free_r>
 80235f0:	2300      	movs	r3, #0
 80235f2:	6363      	str	r3, [r4, #52]	@ 0x34
 80235f4:	e00d      	b.n	8023612 <__sflush_r+0xae>
 80235f6:	2301      	movs	r3, #1
 80235f8:	4628      	mov	r0, r5
 80235fa:	47b0      	blx	r6
 80235fc:	4602      	mov	r2, r0
 80235fe:	1c50      	adds	r0, r2, #1
 8023600:	d1c9      	bne.n	8023596 <__sflush_r+0x32>
 8023602:	682b      	ldr	r3, [r5, #0]
 8023604:	2b00      	cmp	r3, #0
 8023606:	d0c6      	beq.n	8023596 <__sflush_r+0x32>
 8023608:	2b1d      	cmp	r3, #29
 802360a:	d001      	beq.n	8023610 <__sflush_r+0xac>
 802360c:	2b16      	cmp	r3, #22
 802360e:	d11e      	bne.n	802364e <__sflush_r+0xea>
 8023610:	602f      	str	r7, [r5, #0]
 8023612:	2000      	movs	r0, #0
 8023614:	e022      	b.n	802365c <__sflush_r+0xf8>
 8023616:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 802361a:	b21b      	sxth	r3, r3
 802361c:	e01b      	b.n	8023656 <__sflush_r+0xf2>
 802361e:	690f      	ldr	r7, [r1, #16]
 8023620:	2f00      	cmp	r7, #0
 8023622:	d0f6      	beq.n	8023612 <__sflush_r+0xae>
 8023624:	0793      	lsls	r3, r2, #30
 8023626:	680e      	ldr	r6, [r1, #0]
 8023628:	bf08      	it	eq
 802362a:	694b      	ldreq	r3, [r1, #20]
 802362c:	600f      	str	r7, [r1, #0]
 802362e:	bf18      	it	ne
 8023630:	2300      	movne	r3, #0
 8023632:	eba6 0807 	sub.w	r8, r6, r7
 8023636:	608b      	str	r3, [r1, #8]
 8023638:	f1b8 0f00 	cmp.w	r8, #0
 802363c:	dde9      	ble.n	8023612 <__sflush_r+0xae>
 802363e:	6a21      	ldr	r1, [r4, #32]
 8023640:	6aa6      	ldr	r6, [r4, #40]	@ 0x28
 8023642:	4643      	mov	r3, r8
 8023644:	463a      	mov	r2, r7
 8023646:	4628      	mov	r0, r5
 8023648:	47b0      	blx	r6
 802364a:	2800      	cmp	r0, #0
 802364c:	dc08      	bgt.n	8023660 <__sflush_r+0xfc>
 802364e:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8023652:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8023656:	81a3      	strh	r3, [r4, #12]
 8023658:	f04f 30ff 	mov.w	r0, #4294967295
 802365c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8023660:	4407      	add	r7, r0
 8023662:	eba8 0800 	sub.w	r8, r8, r0
 8023666:	e7e7      	b.n	8023638 <__sflush_r+0xd4>
 8023668:	20400001 	.word	0x20400001

0802366c <_fflush_r>:
 802366c:	b538      	push	{r3, r4, r5, lr}
 802366e:	690b      	ldr	r3, [r1, #16]
 8023670:	4605      	mov	r5, r0
 8023672:	460c      	mov	r4, r1
 8023674:	b913      	cbnz	r3, 802367c <_fflush_r+0x10>
 8023676:	2500      	movs	r5, #0
 8023678:	4628      	mov	r0, r5
 802367a:	bd38      	pop	{r3, r4, r5, pc}
 802367c:	b118      	cbz	r0, 8023686 <_fflush_r+0x1a>
 802367e:	6a03      	ldr	r3, [r0, #32]
 8023680:	b90b      	cbnz	r3, 8023686 <_fflush_r+0x1a>
 8023682:	f7ff fa91 	bl	8022ba8 <__sinit>
 8023686:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 802368a:	2b00      	cmp	r3, #0
 802368c:	d0f3      	beq.n	8023676 <_fflush_r+0xa>
 802368e:	6e62      	ldr	r2, [r4, #100]	@ 0x64
 8023690:	07d0      	lsls	r0, r2, #31
 8023692:	d404      	bmi.n	802369e <_fflush_r+0x32>
 8023694:	0599      	lsls	r1, r3, #22
 8023696:	d402      	bmi.n	802369e <_fflush_r+0x32>
 8023698:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 802369a:	f7ff fbde 	bl	8022e5a <__retarget_lock_acquire_recursive>
 802369e:	4628      	mov	r0, r5
 80236a0:	4621      	mov	r1, r4
 80236a2:	f7ff ff5f 	bl	8023564 <__sflush_r>
 80236a6:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 80236a8:	07da      	lsls	r2, r3, #31
 80236aa:	4605      	mov	r5, r0
 80236ac:	d4e4      	bmi.n	8023678 <_fflush_r+0xc>
 80236ae:	89a3      	ldrh	r3, [r4, #12]
 80236b0:	059b      	lsls	r3, r3, #22
 80236b2:	d4e1      	bmi.n	8023678 <_fflush_r+0xc>
 80236b4:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 80236b6:	f7ff fbd1 	bl	8022e5c <__retarget_lock_release_recursive>
 80236ba:	e7dd      	b.n	8023678 <_fflush_r+0xc>

080236bc <__swbuf_r>:
 80236bc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80236be:	460e      	mov	r6, r1
 80236c0:	4614      	mov	r4, r2
 80236c2:	4605      	mov	r5, r0
 80236c4:	b118      	cbz	r0, 80236ce <__swbuf_r+0x12>
 80236c6:	6a03      	ldr	r3, [r0, #32]
 80236c8:	b90b      	cbnz	r3, 80236ce <__swbuf_r+0x12>
 80236ca:	f7ff fa6d 	bl	8022ba8 <__sinit>
 80236ce:	69a3      	ldr	r3, [r4, #24]
 80236d0:	60a3      	str	r3, [r4, #8]
 80236d2:	89a3      	ldrh	r3, [r4, #12]
 80236d4:	071a      	lsls	r2, r3, #28
 80236d6:	d501      	bpl.n	80236dc <__swbuf_r+0x20>
 80236d8:	6923      	ldr	r3, [r4, #16]
 80236da:	b943      	cbnz	r3, 80236ee <__swbuf_r+0x32>
 80236dc:	4621      	mov	r1, r4
 80236de:	4628      	mov	r0, r5
 80236e0:	f000 f82a 	bl	8023738 <__swsetup_r>
 80236e4:	b118      	cbz	r0, 80236ee <__swbuf_r+0x32>
 80236e6:	f04f 37ff 	mov.w	r7, #4294967295
 80236ea:	4638      	mov	r0, r7
 80236ec:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80236ee:	6823      	ldr	r3, [r4, #0]
 80236f0:	6922      	ldr	r2, [r4, #16]
 80236f2:	1a98      	subs	r0, r3, r2
 80236f4:	6963      	ldr	r3, [r4, #20]
 80236f6:	b2f6      	uxtb	r6, r6
 80236f8:	4283      	cmp	r3, r0
 80236fa:	4637      	mov	r7, r6
 80236fc:	dc05      	bgt.n	802370a <__swbuf_r+0x4e>
 80236fe:	4621      	mov	r1, r4
 8023700:	4628      	mov	r0, r5
 8023702:	f7ff ffb3 	bl	802366c <_fflush_r>
 8023706:	2800      	cmp	r0, #0
 8023708:	d1ed      	bne.n	80236e6 <__swbuf_r+0x2a>
 802370a:	68a3      	ldr	r3, [r4, #8]
 802370c:	3b01      	subs	r3, #1
 802370e:	60a3      	str	r3, [r4, #8]
 8023710:	6823      	ldr	r3, [r4, #0]
 8023712:	1c5a      	adds	r2, r3, #1
 8023714:	6022      	str	r2, [r4, #0]
 8023716:	701e      	strb	r6, [r3, #0]
 8023718:	6962      	ldr	r2, [r4, #20]
 802371a:	1c43      	adds	r3, r0, #1
 802371c:	429a      	cmp	r2, r3
 802371e:	d004      	beq.n	802372a <__swbuf_r+0x6e>
 8023720:	89a3      	ldrh	r3, [r4, #12]
 8023722:	07db      	lsls	r3, r3, #31
 8023724:	d5e1      	bpl.n	80236ea <__swbuf_r+0x2e>
 8023726:	2e0a      	cmp	r6, #10
 8023728:	d1df      	bne.n	80236ea <__swbuf_r+0x2e>
 802372a:	4621      	mov	r1, r4
 802372c:	4628      	mov	r0, r5
 802372e:	f7ff ff9d 	bl	802366c <_fflush_r>
 8023732:	2800      	cmp	r0, #0
 8023734:	d0d9      	beq.n	80236ea <__swbuf_r+0x2e>
 8023736:	e7d6      	b.n	80236e6 <__swbuf_r+0x2a>

08023738 <__swsetup_r>:
 8023738:	b538      	push	{r3, r4, r5, lr}
 802373a:	4b29      	ldr	r3, [pc, #164]	@ (80237e0 <__swsetup_r+0xa8>)
 802373c:	4605      	mov	r5, r0
 802373e:	6818      	ldr	r0, [r3, #0]
 8023740:	460c      	mov	r4, r1
 8023742:	b118      	cbz	r0, 802374c <__swsetup_r+0x14>
 8023744:	6a03      	ldr	r3, [r0, #32]
 8023746:	b90b      	cbnz	r3, 802374c <__swsetup_r+0x14>
 8023748:	f7ff fa2e 	bl	8022ba8 <__sinit>
 802374c:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8023750:	0719      	lsls	r1, r3, #28
 8023752:	d422      	bmi.n	802379a <__swsetup_r+0x62>
 8023754:	06da      	lsls	r2, r3, #27
 8023756:	d407      	bmi.n	8023768 <__swsetup_r+0x30>
 8023758:	2209      	movs	r2, #9
 802375a:	602a      	str	r2, [r5, #0]
 802375c:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8023760:	81a3      	strh	r3, [r4, #12]
 8023762:	f04f 30ff 	mov.w	r0, #4294967295
 8023766:	e033      	b.n	80237d0 <__swsetup_r+0x98>
 8023768:	0758      	lsls	r0, r3, #29
 802376a:	d512      	bpl.n	8023792 <__swsetup_r+0x5a>
 802376c:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 802376e:	b141      	cbz	r1, 8023782 <__swsetup_r+0x4a>
 8023770:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 8023774:	4299      	cmp	r1, r3
 8023776:	d002      	beq.n	802377e <__swsetup_r+0x46>
 8023778:	4628      	mov	r0, r5
 802377a:	f7ff fbdb 	bl	8022f34 <_free_r>
 802377e:	2300      	movs	r3, #0
 8023780:	6363      	str	r3, [r4, #52]	@ 0x34
 8023782:	89a3      	ldrh	r3, [r4, #12]
 8023784:	f023 0324 	bic.w	r3, r3, #36	@ 0x24
 8023788:	81a3      	strh	r3, [r4, #12]
 802378a:	2300      	movs	r3, #0
 802378c:	6063      	str	r3, [r4, #4]
 802378e:	6923      	ldr	r3, [r4, #16]
 8023790:	6023      	str	r3, [r4, #0]
 8023792:	89a3      	ldrh	r3, [r4, #12]
 8023794:	f043 0308 	orr.w	r3, r3, #8
 8023798:	81a3      	strh	r3, [r4, #12]
 802379a:	6923      	ldr	r3, [r4, #16]
 802379c:	b94b      	cbnz	r3, 80237b2 <__swsetup_r+0x7a>
 802379e:	89a3      	ldrh	r3, [r4, #12]
 80237a0:	f403 7320 	and.w	r3, r3, #640	@ 0x280
 80237a4:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 80237a8:	d003      	beq.n	80237b2 <__swsetup_r+0x7a>
 80237aa:	4621      	mov	r1, r4
 80237ac:	4628      	mov	r0, r5
 80237ae:	f000 f83f 	bl	8023830 <__smakebuf_r>
 80237b2:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80237b6:	f013 0201 	ands.w	r2, r3, #1
 80237ba:	d00a      	beq.n	80237d2 <__swsetup_r+0x9a>
 80237bc:	2200      	movs	r2, #0
 80237be:	60a2      	str	r2, [r4, #8]
 80237c0:	6962      	ldr	r2, [r4, #20]
 80237c2:	4252      	negs	r2, r2
 80237c4:	61a2      	str	r2, [r4, #24]
 80237c6:	6922      	ldr	r2, [r4, #16]
 80237c8:	b942      	cbnz	r2, 80237dc <__swsetup_r+0xa4>
 80237ca:	f013 0080 	ands.w	r0, r3, #128	@ 0x80
 80237ce:	d1c5      	bne.n	802375c <__swsetup_r+0x24>
 80237d0:	bd38      	pop	{r3, r4, r5, pc}
 80237d2:	0799      	lsls	r1, r3, #30
 80237d4:	bf58      	it	pl
 80237d6:	6962      	ldrpl	r2, [r4, #20]
 80237d8:	60a2      	str	r2, [r4, #8]
 80237da:	e7f4      	b.n	80237c6 <__swsetup_r+0x8e>
 80237dc:	2000      	movs	r0, #0
 80237de:	e7f7      	b.n	80237d0 <__swsetup_r+0x98>
 80237e0:	20000220 	.word	0x20000220

080237e4 <__swhatbuf_r>:
 80237e4:	b570      	push	{r4, r5, r6, lr}
 80237e6:	460c      	mov	r4, r1
 80237e8:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80237ec:	2900      	cmp	r1, #0
 80237ee:	b096      	sub	sp, #88	@ 0x58
 80237f0:	4615      	mov	r5, r2
 80237f2:	461e      	mov	r6, r3
 80237f4:	da0d      	bge.n	8023812 <__swhatbuf_r+0x2e>
 80237f6:	89a3      	ldrh	r3, [r4, #12]
 80237f8:	f013 0f80 	tst.w	r3, #128	@ 0x80
 80237fc:	f04f 0100 	mov.w	r1, #0
 8023800:	bf14      	ite	ne
 8023802:	2340      	movne	r3, #64	@ 0x40
 8023804:	f44f 6380 	moveq.w	r3, #1024	@ 0x400
 8023808:	2000      	movs	r0, #0
 802380a:	6031      	str	r1, [r6, #0]
 802380c:	602b      	str	r3, [r5, #0]
 802380e:	b016      	add	sp, #88	@ 0x58
 8023810:	bd70      	pop	{r4, r5, r6, pc}
 8023812:	466a      	mov	r2, sp
 8023814:	f000 f848 	bl	80238a8 <_fstat_r>
 8023818:	2800      	cmp	r0, #0
 802381a:	dbec      	blt.n	80237f6 <__swhatbuf_r+0x12>
 802381c:	9901      	ldr	r1, [sp, #4]
 802381e:	f401 4170 	and.w	r1, r1, #61440	@ 0xf000
 8023822:	f5a1 5300 	sub.w	r3, r1, #8192	@ 0x2000
 8023826:	4259      	negs	r1, r3
 8023828:	4159      	adcs	r1, r3
 802382a:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 802382e:	e7eb      	b.n	8023808 <__swhatbuf_r+0x24>

08023830 <__smakebuf_r>:
 8023830:	898b      	ldrh	r3, [r1, #12]
 8023832:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8023834:	079d      	lsls	r5, r3, #30
 8023836:	4606      	mov	r6, r0
 8023838:	460c      	mov	r4, r1
 802383a:	d507      	bpl.n	802384c <__smakebuf_r+0x1c>
 802383c:	f104 0347 	add.w	r3, r4, #71	@ 0x47
 8023840:	6023      	str	r3, [r4, #0]
 8023842:	6123      	str	r3, [r4, #16]
 8023844:	2301      	movs	r3, #1
 8023846:	6163      	str	r3, [r4, #20]
 8023848:	b003      	add	sp, #12
 802384a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 802384c:	ab01      	add	r3, sp, #4
 802384e:	466a      	mov	r2, sp
 8023850:	f7ff ffc8 	bl	80237e4 <__swhatbuf_r>
 8023854:	9f00      	ldr	r7, [sp, #0]
 8023856:	4605      	mov	r5, r0
 8023858:	4639      	mov	r1, r7
 802385a:	4630      	mov	r0, r6
 802385c:	f7ff f87e 	bl	802295c <_malloc_r>
 8023860:	b948      	cbnz	r0, 8023876 <__smakebuf_r+0x46>
 8023862:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8023866:	059a      	lsls	r2, r3, #22
 8023868:	d4ee      	bmi.n	8023848 <__smakebuf_r+0x18>
 802386a:	f023 0303 	bic.w	r3, r3, #3
 802386e:	f043 0302 	orr.w	r3, r3, #2
 8023872:	81a3      	strh	r3, [r4, #12]
 8023874:	e7e2      	b.n	802383c <__smakebuf_r+0xc>
 8023876:	89a3      	ldrh	r3, [r4, #12]
 8023878:	6020      	str	r0, [r4, #0]
 802387a:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 802387e:	81a3      	strh	r3, [r4, #12]
 8023880:	9b01      	ldr	r3, [sp, #4]
 8023882:	e9c4 0704 	strd	r0, r7, [r4, #16]
 8023886:	b15b      	cbz	r3, 80238a0 <__smakebuf_r+0x70>
 8023888:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 802388c:	4630      	mov	r0, r6
 802388e:	f000 f81d 	bl	80238cc <_isatty_r>
 8023892:	b128      	cbz	r0, 80238a0 <__smakebuf_r+0x70>
 8023894:	89a3      	ldrh	r3, [r4, #12]
 8023896:	f023 0303 	bic.w	r3, r3, #3
 802389a:	f043 0301 	orr.w	r3, r3, #1
 802389e:	81a3      	strh	r3, [r4, #12]
 80238a0:	89a3      	ldrh	r3, [r4, #12]
 80238a2:	431d      	orrs	r5, r3
 80238a4:	81a5      	strh	r5, [r4, #12]
 80238a6:	e7cf      	b.n	8023848 <__smakebuf_r+0x18>

080238a8 <_fstat_r>:
 80238a8:	b538      	push	{r3, r4, r5, lr}
 80238aa:	4d07      	ldr	r5, [pc, #28]	@ (80238c8 <_fstat_r+0x20>)
 80238ac:	2300      	movs	r3, #0
 80238ae:	4604      	mov	r4, r0
 80238b0:	4608      	mov	r0, r1
 80238b2:	4611      	mov	r1, r2
 80238b4:	602b      	str	r3, [r5, #0]
 80238b6:	f7df f88c 	bl	80029d2 <_fstat>
 80238ba:	1c43      	adds	r3, r0, #1
 80238bc:	d102      	bne.n	80238c4 <_fstat_r+0x1c>
 80238be:	682b      	ldr	r3, [r5, #0]
 80238c0:	b103      	cbz	r3, 80238c4 <_fstat_r+0x1c>
 80238c2:	6023      	str	r3, [r4, #0]
 80238c4:	bd38      	pop	{r3, r4, r5, pc}
 80238c6:	bf00      	nop
 80238c8:	20014acc 	.word	0x20014acc

080238cc <_isatty_r>:
 80238cc:	b538      	push	{r3, r4, r5, lr}
 80238ce:	4d06      	ldr	r5, [pc, #24]	@ (80238e8 <_isatty_r+0x1c>)
 80238d0:	2300      	movs	r3, #0
 80238d2:	4604      	mov	r4, r0
 80238d4:	4608      	mov	r0, r1
 80238d6:	602b      	str	r3, [r5, #0]
 80238d8:	f7df f880 	bl	80029dc <_isatty>
 80238dc:	1c43      	adds	r3, r0, #1
 80238de:	d102      	bne.n	80238e6 <_isatty_r+0x1a>
 80238e0:	682b      	ldr	r3, [r5, #0]
 80238e2:	b103      	cbz	r3, 80238e6 <_isatty_r+0x1a>
 80238e4:	6023      	str	r3, [r4, #0]
 80238e6:	bd38      	pop	{r3, r4, r5, pc}
 80238e8:	20014acc 	.word	0x20014acc

080238ec <_init>:
 80238ec:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80238ee:	bf00      	nop
 80238f0:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80238f2:	bc08      	pop	{r3}
 80238f4:	469e      	mov	lr, r3
 80238f6:	4770      	bx	lr

080238f8 <_fini>:
 80238f8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80238fa:	bf00      	nop
 80238fc:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80238fe:	bc08      	pop	{r3}
 8023900:	469e      	mov	lr, r3
 8023902:	4770      	bx	lr
